

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of VB 3.0 as a Client When Calling a VB 4.0 Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138139">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/10/12">
<META NAME="Keywords" CONTENT="kbole">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  It is possible to call an OLE server created in Visual Basic version 4.0 (both 16-bit as well as 32-bit Servers) from a Visual Basic version 3.0 client application. Note, however, that a 16-bit application cannot call a 32-bit DLL server. Therefore...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGI,QAMA,QAB4,QA5F,QA9Q,QAW6,QARL,QAPN,QAAP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Limitations of VB 3.0 as a Client When Calling a VB 4.0 Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138139</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic
   32-bit only, for Windows, version 4.0
<LI>Standard and Professional Editions of Microsoft Visual Basic,
   for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible to call an OLE server created in Visual Basic version 4.0
(both 16-bit as well as 32-bit Servers) from a Visual Basic version 3.0
client application. Note, however, that a 16-bit application cannot call a
32-bit DLL server. Therefore, if the 32-bit server is an OLE DLL server, it
cannot be called. If the 32-bit server is an OLE EXE server, it can be
called from a 16-bit client application.
<P>
This functionality is possible because OLE is binary compatible, which is
one of the main benefits of OLE. However, there are certain limitations
that must be kept in mind simply because these are features not supported
in Visual Basic version 3.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>The Limitations</h3>
 

<OL><P><LI>It is not possible to use early binding while creating object instances.
   This is because Visual Basic version 3.0 only supports late binding. In
   other words, the only way to create an object of type MyClass
   implemented by a server called MyServer is:
<P>
   Dim obj As Object
   Set Obj = CreateObject("MyServer.MyClass")

<P><LI>You cannot call in-process OLE Servers (that is, Visual Basic version
   4.0 OLE DLLs) from Visual Basic version 3.0. This is because you can
   only create 32-bit OLE DLLs in Visual Basic version 4.0.

<P><LI>You cannot return an array data type to Visual Basic version 3.0 from a
   Visual Basic version 4.0 OLE server because this is not supported in
   Visual Basic version 3.0.

<P><LI>Visual Basic version 3.0 does not support rich Error information like
   that provided by Visual Basic version 4.0's Error Object. So, if the
   server raises an error, only a default error message is returned back to
   the Visual Basic version 3.0 client. One way to work around this is to
   implement your own error object in the server, and have the Visual
   Basic version 3.0 client call that object in the error handler for the
   default error message.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 inproc inprocess vb4win vb432<BR>
KBCategory: kbole<BR>
KBSubcategory: IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
