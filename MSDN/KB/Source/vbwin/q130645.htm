

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use DAO to Assign or View Permissions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130645">
<META NAME="KBModify" CONTENT="1996/06/20">
<META NAME="KBCreate" CONTENT="1995/05/24">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  In Microsoft Visual Basic version 4.0, you can assign permissions to database objects in a program by using data access objects (DAO). This article shows you how.  MORE INFORMATION  Steps to Secure Database  Securing a database involves these steps...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QAGU,QBWG,QAZV,QAW6,QBXS,QAK7,QBSO,QBJZ,QABO,QAN0,QA7A,QA69,QBWF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use DAO to Assign or View Permissions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 20, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130645</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Visual Basic version 4.0, you can assign permissions to
database objects in a program by using data access objects (DAO). This
article shows you how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Secure Database</h3>
 
<P>
Securing a database involves these steps:

<OL><P><LI>Create group accounts. For information on how to do this, please see the
   CreateGroup method in the Visual Basic Help menu.

<P><LI>Create user accounts. For information on how to do this, please see the
   CreateUser method in the Visual Basic Help menu.

<P><LI>Assign users to groups.

<P><LI>Assign permissions on database objects to users and groups. This article
   describes this step in detail.

<P><LI>Encrypt the database, if desired. For information on how to do this,
   please see options:dbEncrypt under the CompactDatabase and
   CreateDatabase methods in the Visual Basic Help menu.
<P>
</OL><h3>Assigning Permissions on Database Objects to Users and Groups</h3>
 
<P>
To assign permissions for an object, you must reference the UserName and
Permissions properties of the object's document. All database objects can
be treated as documents in a container. For example, suppose you have this
DB variable assignment:
<P>
<PRE>   Dim DB As Database
   Set DB = DBEngine.Workspaces(0).Opendatabase("Biblio.mdb")

</PRE></OL>A table called Authors can be referred to using DAO as follows:
<P>
<PRE>   DB.Containers("Tables").Documents("Authors")

</PRE>However, it is usually easier to assign and work with object variables:
<P>
<PRE>   Dim DB as Database, DOC as Document
   Set DB = DBEngine.Workspaces(0).OpenDatabase("Biblio.MDB")
   Set DOC = DB.Containers("Tables").Documents("Authors")

</PRE>You can reference the UserName and Permissions properties of the Table1
document directly by using this code:
<P>
<PRE>   UserNameVariable = DOC.UserName
   PermissionsVariable = DOC.Permissions

   -or-

   DOC.UserName = "MyUser"
   DOC.Permissions = dbSecFullAccess

</PRE><h3>Reading Permissions Information</h3>
 
<P>
To read the permissions that a given user or group has on an object, set
the UserName property of the document to that user or group name, and then
read the value of the Permissions property.
<P>
NOTE: To use the following examples, you must already have a database with
security established. That is, a SYSTEM.MDA file exists.
<P>
The following example shows how to read the permissions for the user John
on table TestTable:
<P>
<PRE>   Dim DB as Database, DOC as Document, HisPermissions as Long
   Set DB = DBEngine.Workspaces(0).Opendatabase("Test.MDB")
   Set DOC = DB.Containers("Tables").Documents("TestTable")
   DOC.UserName = "John"
   HisPermissions = DOC.Permissions

</PRE>NOTE: Whether you inquire about a group or a user, you still set the
UserName property. There is no GroupName property for a document.
<P>
<P><h3>Assigning Permissions Information</h3>
 
<P>
To assign permissions for a user on an object, set the UserName property of
the document to the name of the user or group. Then set the Permissions
property of the document to the appropriate value.
<P>
Generally, you should use the predefined constants when you assign
permissions. For a complete list of the predefined constants, search under
DAO for constants starting with 'dbSec' in the Object Browser.
<P>
The following example shows how to assign Full permissions on the Employees
table for a user named Martha:
<P>
<PRE>   Dim DB as Database, DOC as Document
   Set DB = DBEngine.Workspaces(0).Opendatabase("TestDB.MDB")
   Set DOC = DB.Containers("Tables").Documents("Employees")
   DOC.UserName = "Martha"
   DOC.Permissions = dbSecFullAccess
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 20, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
