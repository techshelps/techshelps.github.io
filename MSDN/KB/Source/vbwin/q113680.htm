

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Find Out If Executable Is Running in VB Develop Shell </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113680">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/04/11">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If a Visual Basic application needs to know if it is running in the Visual Basic development shell, the application can call the Windows API ModuleFileName function to find out what its module name is. If the ModuleFileName function returns VB.EXE,...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBIC,QBWS,QAH4,QA4Q,QADL,QA2S,QA5F,QAMA,QALW,QAY5,QAUD,QATX,QA01,QBXT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Find Out If Executable Is Running in VB Develop Shell</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113680</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If a Visual Basic application needs to know if it is running in the Visual
Basic development shell, the application can call the Windows API
ModuleFileName function to find out what its module name is. If the
ModuleFileName function returns VB.EXE, it is running in the Visual Basic
development shell.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example shows how to find out if a program is running
interpreted within the Visual Basic development shell as opposed to
running as a compiled executable:
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code to the general declarations section of Form1:
<P>
<PRE>   ' Enter each of the following Declare statements as one, single line:
   Declare Function GetModuleFileName Lib "Kernel"
      (ByVal hModule As Integer, ByVal lpFilename As String,
      ByVal nSize As Integer) As Integer
   Declare Function GetWindowWord Lib "User" (ByVal hWnd As Integer,
      ByVal nIndex As Integer) As Integer

   Const GWW_HINSTANCE = (-6)

</PRE><P><LI>Add the following code to the Form_Load event of Form1:
<P>
<PRE>   Sub Form_Load ()
      Dim ModuleName As String
      Dim FileName As String
      Dim hInst, ret As Integer
      ModuleName = String$(128, Chr$(0))
      ' Get the hInstance application:
      hInst = GetWindowWord(Me.hWnd, GWW_HINSTANCE)
      ' Get the ModuleFileName:
      ' Enter the following two lines as one, single line:
      ModuleName = Left$(ModuleName,
         GetModuleFileName(hInst, ModuleName, Len(ModuleName)))
      If (Len(ModuleName)) &gt; 0 Then
      ' Get the "." in the file name. Then go back three characters.
      ' FileName should = \VB.EXE, so check for the backslash (\)
      ' because FileName could be GVB.EXE, which isn't the
      ' VB executable name:
         FileName = Mid$(ModuleName, InStr(ModuleName, ".") - 3)
         If FileName = "\VB.EXE" Then
            MsgBox "In VB development Shell"
         Else
            MsgBox "Not in VB development Shell"
         End If
      End If
   End Sub

</PRE><P><LI>Run the program.
<P>
</OL>If you are running within the Visual Basic environment, you will get the
"In VB development Shell" message box. If you are running a compiled
executable, you will get the "Not in VB development Shell" message.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
