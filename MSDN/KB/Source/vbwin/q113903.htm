

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOCERR: More Info &amp; Doc Fixes for FindFirst &amp; Seek Methods </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113903">
<META NAME="KBModify" CONTENT="1995/07/20">
<META NAME="KBCreate" CONTENT="1994/04/19">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The status of database objects after a search operation (FindFirst or Seek) is not clearly documented. Data Controls, Dynasets, and Snapshots all maintain a valid record while Table objects actually have  No Current Record  after an unsuccessful Se...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAPN,QAOX,QANF,QBS0,QBXS,QAKC,QAKD,QAVX,QAVW,QAZV,QAFF,QAH4,QAAP,QDKY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOCERR: More Info &amp; Doc Fixes for FindFirst &amp; Seek Methods</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113903</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional Edition of Microsoft Visual Basic for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The status of database objects after a search operation (FindFirst or Seek)
is not clearly documented. Data Controls, Dynasets, and Snapshots all
maintain a valid record while Table objects actually have "No Current
Record" after an unsuccessful Seek (NoMatch = true).
<P>
In addition, there are two documentation errors:

<UL><LI>The "Language Reference" manual gives incorrect information regarding
   the FindFirst, FindLast, FindNext, and FindPrevious methods in the
   second paragraph on Page 200:
<P>
<P><PRE>     If no matching records are found, the NoMatch property is TRUE and the
     current record remains the same as before the Find method was used.
</PRE>
<LI>The "Language Reference" manual gives incorrect information regarding
   the Seek method in the first paragraph on Page 504:
<P>
<P><PRE>      NOTE: Always inspect the value of the NoMatch property of the
      recordset to determine whether the SEEK method has succeeded. If it
      fails, NoMatch is TRUE and the current record is unchanged"
</PRE><P>
</UL>Both statements are incorrect with regard to the position of the current
record. The behavior of the current record depends on the type of object
that has been used in the search method (FindFirst or Seek). The behavior
of Visual Basic data objects is outlined below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>FindFirst - Data Controls and Dynasets</h3>
 
<P>
By in large these objects behave as would be expected. When the Find method
fails to find a match the NoMatch property of the RecordSet is set to TRUE.
However, the current record does change. It is set to the first record in
the recordset.
<P>
<P><h3>Seek - Table Objects</h3>
 
<P>
When the Seek method fails to find a match, the NoMatch property of the
RecordSet is set to TRUE, as it is with the Find method. However, the
current record also changes. In fact it becomes invalid, so that it returns
the error message, "No Current Record" if you attempt to access it.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add three command buttons (Command1, Command2, and Command3) to the
   lower-right corner of Form1 and change their Caption properties to:
   Create DB, Seek, and Find.

<P><LI>Add the following code to the Command1_Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      Const DB_LANG_GENERAL = ";LANGID=0x0809;CP=1252;COUNTRY=0"
      Const DB_DOUBLE = 7
      Const DB_TEXT = 10

      Dim db As Database
      Dim tb As table
      Set db = CreateDatabase(App.Path + "\NUMBERS.MDB", DB_LANG_GENERAL)

      Dim td As New tabledef
      Dim F1 As New field
      Dim F2 As New field

      td.Name = "Amounts"

      F1.Name = "Desc"
      F1.Type = DB_TEXT
      F1.Size = 35
      td.Fields.Append F1

      F2.Name = "Num1"
      F2.Type = DB_DOUBLE
      td.Fields.Append F2

      db.TableDefs.Append td

      Dim TempIndex As New Index
      TempIndex.Name = "test"
      TempIndex.Fields = "num1"
      db.TableDefs("Amounts").Indexes.Append TempIndex

      Set tb = db.OpenTable("Amounts")

      For I = 0 To 10
         tb.AddNew
         tb.Fields("Desc") = "hello" &amp; I
         tb.Fields("Num1") = CDbl(I * 10)
         tb.Update
      Next I

      tb.Close
      db.Close
   End Sub

</PRE><P><LI>Add the following code to the Command2_Click event procedure:
<P>
<PRE>   Sub Command2_Click ()
      On Error GoTo eh
      Dim db As Database
      Dim tb As table

      Set db = OpenDatabase(App.Path + "\NUMBERS.MDB")
      Set tb = db.OpenTable("Amounts")

      Print "====Test of Seek Method===="
      tb.Index = "test"
      tb.MoveFirst
      Print "MoveFirst  Values= "; tb(0); tb(1)
      tb.Seek "=", 50      ' Finds valid record.
      Print "Seek = 50   NoMatch="; tb.NoMatch; " Values= "; tb(0); tb(1)
      Print

      tb.MoveNext
      Print "MoveNext   Values= "; tb(0); tb(1)
      tb.Seek "=", 500     ' Doesn't find valid record.
      Print "Seek = 500  NoMatch="; tb.NoMatch; " Values= "; tb(0); tb(1)

      tb.Close
      db.Close
      Exit Sub

      eh:
         Print
         Print "*** Error Occurred displaying Current Record ***"
         Print
         Resume Next
   End Sub

</PRE><P><LI>Add the following code to the Command3_Click event procedure:
<P>
<PRE>   Sub Command3_Click ()
      Dim db As Database
      Dim ds As Dynaset    ' OR Dim ds As snapshot

      Set db = OpenDatabase(App.Path + "\NUMBERS.MDB")
      Set ds = db.CreateDynaset("Amounts")
      ' OR Set ds =    db.CreateSnapshot("Amounts")

      Print "====Test of FindFirst Method===="
      ds.MoveFirst
      Print "MoveFirst      Values= "; ds(0); ds("Num1")
      ds.FindFirst "num1 = 50"

      ' Enter the following two lines as one, single line:
      Print "FindFirst 50   NoMatch="; ds.NoMatch; " Values= ";
       ds(0); ds("Num1")
      Print

      ds.MoveNext
      Print "MoveNext       Values= "; ds(0); ds("Num1")
      ds.FindFirst "num1 = 500"

      ' Enter the following two lines as one, single line:
      Print "FindFirst 500  NoMatch="; ds.NoMatch; " Values= ";
       ds(0); ds("Num1")
      Print

      ds.Close
      db.Close
   End Sub

</PRE><P><LI>Press the F5 key to run the program. Click the Command1 button to
   create the NUMBER.MDB database. Then click the Command2 button to
   perform a Seek on the NUMBERS.MDB database, and click the Command3
   button to perform a FindFirst on the NUMBERS.MDB database. Review the
   results that are printed on Form1.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 docerr<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataAcc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
