

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Use of Implements and Public Constants Crashes Compiler </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171489">
<META NAME="KBModify" CONTENT="1997/12/18">
<META NAME="KBCreate" CONTENT="1997/07/16">
<META NAME="Keywords" CONTENT="vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using the IMPLEMENTS statement in a private class that is implementing another private class in the same project can cause a compiler error if public module level constants used by the implemented class are not located in the same .BAS file. This e...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAB5,QBS0,QDO3,QAPN,QAJQ,QAR4,QAM1,QA56,QA55,QA4Q,QAKJ,QAJN,QBWQ,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Use of Implements and Public Constants Crashes Compiler</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171489</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the IMPLEMENTS statement in a private class that is implementing
another private class in the same project can cause a compiler error if
public module level constants used by the implemented class are not located
in the same .BAS file. This error occurs whether the code is compiled to
p-code or native code. It does not occur while running in the IDE.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this behavior, declare all public module level constants
used by an implemented class in the same .BAS file.
<P>
In the sample below, if LF_FACESIZE is declared in the same module as the
other public module level constants (in Module1 rather than Module2), then
the error does not occur.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been fixed in Visual Studio
97 Service Pack 2.
<P>
For more information on the Visual Studio 97 Service Pack 2, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VSTUDIO/Q170365.htm">Q170365</A></B>
   TITLE     : INFO: Visual Studio 97 Service Packs - What, Where, and Why

</PRE>For a list of the Visual Basic 5.0 bugs that were fixed in the Visual
Studio 97 Service Pack 2, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q171554.htm">Q171554</A></B>
   TITLE     : INFO: Visual Basic 5.0 Fixes in Visual Studio 97
               Service Pack 2

</PRE><h2>MORE INFORMATION</h2>
 

<OL><P><LI>Start a new Standard EXE project.

<P><LI>Add a new module (Module1) and add the following code:
<P>
<P><PRE>      Public Type tFont
<PRE></PRE>         Color As Long
         Angle As Integer
         Bold As Byte
         Italic As Byte
         Underline As Byte
         StrikeOut As Byte
         PointSize As Single
         Name As String * LF_FACESIZE
      End Type

</PRE><P><LI>Add another module (Module2) to the project and add the following
   code:
<P>
<P><PRE>      Global Const LF_FACESIZE As Long = 32
</PRE>
<P><LI>Add a third module (Module3) to the project and add the following
   code:
<P>
<PRE>      Sub Main()

      End Sub

</PRE><P><LI>Add a class (Class1) to the project and add the following code:
<P>
<P><PRE>      Private mtWindowProps As tFont
</PRE><P>
<P><PRE>      Public Property Let BorderStyle(nNewValue As Integer)
      End Property
</PRE><P>
<P><PRE>      Public Property Get BorderStyle() As Integer
      End Property
</PRE>
<P><LI>Add a second class (Class2) to the project and add the following
   code:
<P>
<P><PRE>      Implements Class1
</PRE><P>
<P><PRE>      Private Property Get Class1_BorderStyle() As Integer
      End Property
</PRE><P>
<P><PRE>      Private Property Let Class1_BorderStyle(RHS As Integer)
      End Property
</PRE>
<P><LI>Compile the project, using either p-code or native code. You should get
   an Application Error:
<P>
   "The instruction at &lt;address&gt; referenced memory at &lt;address&gt;.
   The memory could not be read.” (Windows NT4)
<P>
   -or-
<P>
   "VB5 has caused an invalid page fault in module VBA5.DLL at
   &lt;address&gt;" (Windows95)
</OL> 
<PRE>Keywords          : vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2
Version           : 5.0
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbfix kbservicepack</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
