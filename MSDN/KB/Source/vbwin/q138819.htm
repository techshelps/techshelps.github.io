

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differences Among Form's Initialize, Load, and Activate Events </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138819">
<META NAME="KBModify" CONTENT="1996/05/16">
<META NAME="KBCreate" CONTENT="1995/10/29">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Form_Initialize, Form_Load, and Form_Activate events are in many ways related, but also have important and fundamental differences. This article gives more information and clarifies the relationship among these events. Note that the Form_Initia...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAO4,QBS0,QAKJ,QAGI,QAI2,QAH4,QAMA,QBXS,QBVV,QAV1,QAV0,QADO,QDNY,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Differences Among Form's Initialize, Load, and Activate Events</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138819</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Form_Initialize, Form_Load, and Form_Activate events are in many ways
related, but also have important and fundamental differences. This article
gives more information and clarifies the relationship among these events.
Note that the Form_Initialize event is only present in Visual Basic 4.0;
Form_Load and Form_Activate are present earlier versions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Initialize</h3>
 
<P>
This event fires only when an application first creates an instance of a
form. In an application with a startup form, the first event that occurs is
the startup form's Initialize event. Initialize may also be called well in
advance of a Load or Show if, for example, the following statement is
executed:
<P>
<PRE>   Set x = New Form1

</PRE>In addition, Initialize is called again if all of the references to the
form have been previously set to Nothing and the form is then loaded, shown
or has a variable set to it (for example, Set x = New Form1).
<P>
Many of the tasks previously done in the Form_Load statement can, in Visual
Basic 4.0, be performed in the Form_Initialize statement. Any statement
that needs to be performed a single time when a form is created can be done
here. Be careful that you do not reference any of the properties of the
controls on the form because doing so will cause an automatic Form_Load.
<P>
<P><h3>Load</h3>
 
<P>
The Form_Load event fires when a form is first loaded into memory. A form
can be caused to load by an explicit Load statement, by calling a Show
method when the form is not already loaded, or by a line of code in another
module making a reference to any of the unloaded form's properties (or to
any properties of the unloaded form's children).
<P>
For example, if Form2 is not loaded, and a subroutine in Form1 executes a
line of code setting or reading Form2's Caption property, then Form2 will
be loaded into memory, and the corresponding Form2_Load event will be
called. Unless a form is loaded as a result of a Show method or has its
Visible property set to True, the form will be loaded into memory but will
not be made visible. Forms can be hidden and shown (using the Hide and Show
methods) while remaining in memory; the Load event will only be fired when
the form is first loaded.
<P>
Some procedures and methods of controls (for example, the SetFocus method)
require that their parent form be loaded before they are called. In this
situation, the best thing to do is to perform an explicit Form.Show in the
Form_Load event, and do any such initialization after calling the Show
method. This is preferable to doing the initialization in, for example, the
Form_Activate event because Activate is called every time the user switches
between forms in an application. Also, if you are calling related events,
such as Activate, Paint, or Resize, be careful that their actions do not
conflict with the Load and that they don't fire recursive events.
<P>
<P><h3>Activate</h3>
 
<P>
As was stated previously, the Activate event is called every time a form
becomes the active window, as long as the focus has moved between forms in
the application. The Activate event is not called if the previous window
that had the focus was outside of the application.
<P>
There are fewer caveats with Activate than with the previous two event
procedures, perhaps because Activate is marginally less important than the
Initialize and Load events. Code that needs to be executed every time the
focus changes within an application should reside in the form's activate
event.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information, please search the Visual Basic 4.0 Help file or
printed documentation for the Initialize, Load, and Activate events.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg<BR>
KBSubcategory:PrgCtrlsStd PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
