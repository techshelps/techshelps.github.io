

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use FindFirst with Strings that Have Apostrophe in VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113955">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/04/20">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article shows by example how to search for a string that may contain an embedded apostrophe ('). You need to use a slightly different type of FindFirst method to search for strings that may contain apostrophes. This is noted in the Microsoft A...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA50,QAN0,QAPF,QATX,QAHH,QAMB,QBS0,QA5V,QBWS,QA1S,QAEB,QAEF,QAC2,QAFO,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use FindFirst with Strings that Have Apostrophe in VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113955</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to search for a string that may contain
an embedded apostrophe ('). You need to use a slightly different type of
FindFirst method to search for strings that may contain apostrophes. This
is noted in the Microsoft Access Help file. There are other alternative
ways to search for strings that contain an apostrophe in them, this article
gives two examples.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>How to Find String that May Contain Apostrophe But Not Quotation Mark</h3>
 
<P>
It is easy to find stings containing an apostrophe (a single quotation mark
if you're sure there are no embedded double quotation marks in the string.
All you need to do is use embedded double quotation marks inside the
Criteria$ variable.
<P>
For example, to build the FindFirst Criteria$ to search for the value in a$
which may contain an apostrophe, use this syntax:
<P>
<PRE>   Criteria$ = "author = """ &amp; a$ &amp; """"
   data1.recordset.findfirst Criteria$

</PRE>Visual Basic recognizes two double quotation marks in a row as an embedded
double quotation mark. If a$ = "O'Conner" the Criteria$ will now read:
<P>
<PRE>   author = "O'Conner"

</PRE>Because the value you are searching is surrounded by double quotation
marks, the Microsoft Access database engine will deal correctly with the
embedded apostrophe.
<P>
The solution is more complex, however, if the string could contain a double
quotation mark as well as or instead of an apostrophe. The remainder of
this article explains how to deal with this more complex situation.
<P>
<P><h3>How to Find String that May Contain Apostrophe or Double Quotation Mark</h3>
 
<P>
NOTE: Before you try this example, you need to go into Data Manager. Data
Manager is located on the Window menu of the main Visual Basic menu. Below
are the steps for using Data Manager to add an apostrophe and a double
quotation mark to certain records in the Authors table:

<OL><P><LI>In Data Manager, select the Open Database Access option from the File
   menu. Select the BIBLIO.MDB database by double-clicking it. This will
   open the Microsoft Access BIBLIO.MDB database.

<P><LI>Select the Authors table, and choose the Open button.

<P><LI>From the Open window, use the Data control at the bottom to move to
   the record with the Author field is:
<P>
   Atre, Shaku

<P><LI>Enter a apostrophe after the letter e so it looks like this:
<P>
   Atre', Shaku

<P><LI>Use the Data control to select the next record, and choose Yes to
   commit the changes.

<P><LI>Move two more records to the record where the Author field is:
<P>
   Brackett, Michael H.

<P><LI>Place a double quotation mark at the end of this field, so it looks
   like this:
<P>
   Brackett, Michael H."

<P><LI>Use the Data control to select the next record, and choose Yes to
   commit the changes.

<P><LI>Close the Data Manager.
<P>
</OL><h3>Example to Search for Strings that May or May Not Contain Apostrophes</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Below is the FORM1.FRM file saved in text. Bring this code into a text
   editor and save it as EXAMPLE.FRM. Then remove FORM1.FRM from your
   project, and add load EXAMPLE.FRM to the project. Then go to the
   Options menu and set Example as your start up form.
<P>
</OL>VERSION 2.00
Begin Form Example
<PRE>   Caption         =   "Sample of searching for apostrophes in strings"
   ClientHeight    =   4020
   ClientLeft      =   1095
   ClientTop       =   1485
   ClientWidth     =   7365
   Height          =   4425
   Left            =   1035
   LinkTopic       =   "Form1"
   ScaleHeight     =   4020
   ScaleWidth      =   7365
   Top             =   1140
   Width           =   7485
   Begin CommandButton Command2
      Caption         =   "With Apostrophe"
      Height          =   375
      Left            =   4680
      TabIndex        =   4
      Top             =   720
      Width           =   2055
   End
   Begin CommandButton Command1
      Caption         =   "With out Apostrophe"
      Height          =   375
      Left            =   840
      TabIndex        =   1
      Top             =   720
      Width           =   2055
   End
   Begin ListBox List1
      Height          =   1005
      Left            =   2160
      TabIndex        =   0
      Top             =   2400
      Width           =   3375
   End
   Begin Data Data1
      Caption         =   "Data1"
      Connect         =   ""
      DatabaseName    =   "C:\VB3\BIBLIO.MDB"
      Exclusive       =   0   'False
      Height          =   495
      Left            =   5040
      Options         =   0
      ReadOnly        =   0   'False
      RecordSource    =   "Authors"
      Top             =   1440
      Visible         =   0   'False
      Width           =   2175
   End
   Begin Label Label4
      Caption         =   "&lt;---- Samples ----&gt;  Strings to search"
      Height          =   495
      Left            =   3000
      TabIndex        =   6
      Top             =   240
      Width           =   1575
   End
   Begin Label Label3
      Caption         =   "Atre', Shaku."
      Height          =   255
      Left            =   4800
      TabIndex        =   5
      Top             =   240
      Width           =   1935
   End
   Begin Label Label1
      Caption         =   "Brackett, Michael H."""
      Height          =   255
      Left            =   840
      TabIndex        =   3
      Top             =   240
      Width           =   1935
   End
   Begin Label Label2
      Caption         =   "Results, below"
      Height          =   255
      Left            =   3240
      TabIndex        =   2
      Top             =   1920
      Width           =   1335
   End
</PRE></OL>End
<P>
<PRE>  Dim pos%   'position of where an apostraphe may be in a string

  Sub check_apostrophe (var1 As String)
   pos% = InStr(1, var1, Chr$(39))
  End Sub

  Sub Command1_Click ()   'searches a string without apostrophe
    list1.Clear
    a$ = label1.Caption    'contains the string: Brackett, Michael H."
    pos% = 0
    Call check_apostrophe(a$) 'check for apostrophe in a string
    If pos% &lt;&gt; 0 Then
     tmp$ = Mid$(a$, 1, pos% - 1) &amp; "*" 'strip out apostrophe for search
     criteria$ = "author like '" &amp; tmp$ &amp; "'"  'search with apostrophe
     data1.Recordset.FindFirst criteria$
     list1.AddItem data1.Recordset("author")
    Else
     criteria$ = "author = '" &amp; label1.Caption &amp; "'"
     data1.Recordset.FindFirst criteria$  'search without apostrophe
     list1.AddItem data1.Recordset("author")
    End If
  End Sub

  Sub Command2_Click ()   'searches a string with apostrophe
    list1.Clear
    a$ = label2.Caption    'contains the string: Atre', Shaku.
    pos% = 0
    Call check_apostrophe(a$) 'check for apostrophe in a string
    If pos% &lt;&gt; 0 Then
     tmp$ = Mid$(a$, 1, pos% - 1) &amp; "*" 'strip out apostrophe for search
     criteria$ = "author like '" &amp; tmp$ &amp; "'"    'search with apostrophe
     data1.Recordset.FindFirst criteria$
     list1.AddItem data1.Recordset("author")
    Else
     criteria$ = "author = '" &amp; label2.Caption &amp; "'"
     data1.Recordset.FindFirst criteria$   'search without apostrophe
     list1.AddItem data1.Recordset("author")
    End If
  End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program. Click the Command1 button. Then click the Command2
   button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words:  3.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: APrgDataAcc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
