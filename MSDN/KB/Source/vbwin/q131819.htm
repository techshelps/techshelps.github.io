

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Display Text on a Playing .AVI File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131819">
<META NAME="KBModify" CONTENT="1995/08/14">
<META NAME="KBCreate" CONTENT="1995/06/21">
<META NAME="Keywords" CONTENT="kbprg kbmm kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article shows by example how to display text on top of an .AVI file playing in a picture box by using the Print method for a picture box control and the TextOut API for other controls on a form. To apply the information in this article, you mu...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QAH4,QA7O,QAOE,QAMN,QAB5,QAYS,QAMB,QAPN,QA4Q,QAXB,QAPF,QAOX,QBWS,QAFR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Display Text on a Playing .AVI File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 14, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131819</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to display text on top of an .AVI file
playing in a picture box by using the Print method for a picture box
control and the TextOut API for other controls on a form. To apply the
information in this article, you must have Video for Windows drivers
correctly installed and a valid .AVI file available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The MCI control refreshes the picture box control when each frame is
displayed. This causes the picture box control to be repainted, wiping out
any text printed there. The following sample code demonstrates a technique
using a timer to repaint the text as often as possible. This ensures that
the text only blinks when the MCI control refreshes the picture control.
<P>
<P><h3>Step-by-Step Example with Picture Box and Print Method</h3>
 

<OL><P><LI>Open the project VB\Samples\MCI\Mcitest.mak.

<P><LI>Make the changes described in the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID:<B><A HREF="../VBWIN/Q98769.htm">Q98769</A></B>
<PRE>   TITLE     :Playing an .AVI File with the MCITEST Example

</PRE><P><LI>Select the Animate.frm form, and add a timer control.

<P><LI>Add the following code to the Timer1_Timer event procedure:
<P>
<PRE>   Sub Timer1_Timer ()
      Dim MyStr As String
      MyStr = "Testing Testing" ''String you want to display
      picture1.CurrentX = 10
      picture1.CurrentY = 10
      picture1.Print MyStr$
   End Sub

</PRE><P><LI>Modify the code in the AI_OPEN Click event procedure:
<P>
   Original code:
<P>
<P><PRE>      ' Play the movie into the picture control.
      On Error GoTo MCI_ERROR
      mmcontrol1.Command = "Play"
</PRE><P>
   Change to:
<P>
<P><PRE>      ' Play the movie into the picture control.
      On Error GoTo MCI_ERROR
      Timer1.Interval = 50 ''This number is the refresh rate
      mmcontrol1.Command = "Play"
</PRE>
<P><LI>Save the work, and run the application.
<P>
</OL><h3>Step-by-Step Example with Picture Box and TextOut API Call</h3>
 
<P>
The TextOut API provides a method for printing text on objects which have
hDCs but no Print methods.

<OL><P><LI>Open the project VB\Samples\MCI\Mcitest.mak.

<P><LI>Make the changes described in the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID:<B><A HREF="../VBWIN/Q98769.htm">Q98769</A></B>
<PRE>   TITLE     :Playing an .AVI File with the MCITEST Example

</PRE><P><LI>Select the Animate.frm form, and add a timer control.

<P><LI>Add the following code to the Timer1_Timer event procedure:
<P>
<PRE>   Sub Timer1_Timer ()
      Dim RetVal As Integer ''The return value of TextOut - Ignored.
      Dim xPos As Integer, yPos As Integer
      Dim MyStr As String, MyLen As Integer

      xPos = 10 ''x coordinate where you want the text to display
      yPos = 10 ''y coordinate where you want the text to display
      MyStr = "Testing Testing" ''String you want to display
      MyLen = Len(MyStr) ''Length of string

      'Display the text on top of picture1 (location where AVI is playing)
      RetVal= TextOut(Picture1.hDC, xPos, yPos, MyStr, MyLen)
   End Sub

</PRE><P><LI>Modify the code in the AI_OPEN Click event procedure:
<P>
   Original code:
<P>
<P><PRE>      ' Play the movie into the picture control.
      On Error GoTo MCI_ERROR
      mmcontrol1.Command = "Play"
</PRE><P>
   Change to:
<P>
<P><PRE>      ' Play the movie into the picture control.
      On Error GoTo MCI_ERROR
      Timer1.Interval = 50 ''This number is the refresh rate
      mmcontrol1.Command = "Play"
</PRE>
<P><LI>Add the following line of code to the (general) (declarations) section
   of Global.bas:
<P>
<PRE>   ' Enter the following Declare statement as one, single line:
   Declare Function TextOut Lib "GDI" (ByVal hDC As Integer, ByVal X As
      Integer, ByVal Y As Integer, ByVal lpString As String, ByVal nCount
      As Integer) As Integer

</PRE><P><LI>Save the work, and run the application.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 multimedia multi-media<BR>
KBCategory: kbprg kbmm kbcode<BR>
KBSubCategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 14, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
