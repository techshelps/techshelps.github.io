

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Move a Form that Has No Titlebar or Caption </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114593">
<META NAME="KBModify" CONTENT="1996/09/06">
<META NAME="KBCreate" CONTENT="1994/05/08">
<META NAME="Keywords" CONTENT="kbui kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article shows by example how to implement the Windows API SendMessage function with the WM_SYSCOMMAND message so that you can move a form with the mouse when that form has no caption or titlebar.  MORE INFORMATION  The WM_SYSCOMMAND message is...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QACI,QAH4,QAEF,QA9N,QANJ,QAC2,QAPN,QAMN,QAB5,QAJP,QAGU,QAE2,QBXS,QBTM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Move a Form that Has No Titlebar or Caption</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 6, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114593</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0, 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to implement the Windows API
SendMessage function with the WM_SYSCOMMAND message so that you can
move a form with the mouse when that form has no caption or titlebar.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The WM_SYSCOMMAND message is sent when a user chooses a command from the
System menu (sometimes referred to as the Control menu) or when the user
chooses the Maximize or Minimize button. It is also sent when a user
clicks the window's Titlebar or Caption; this is a special case of the
Move command in the System menu. When you click the title bar, the value
sent by WM_SYSCOMMAND is &amp;HF012. However, when you choose the Move
command from the Control menu, the value sent is SC_MOVE = &amp;HF010.
<P>
A problem arises, however, if you set the ControlBox, MinButton, and
MaxButton properties to false and remove the Caption of the form (by
setting the Caption property to "" or an empty string) because then
there's no way for your user to move the form.
<P>
You can work around this problem by creating a hot spot -- a label or
image control -- that when clicked will send the WM_SYSCOMMAND message.
By sending the WM_SYSCOMMAND message, you give your users a way to move
the form. This works regardless of the borderstyle property setting of
the form.
<P>
NOTE: If the form has a menu attached to it, a title bar or caption area is
supplied by default, so the technique in this article would be redundant.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic (ALT, F, N). Form1 is created by
   default.

<P><LI>Set the ControlBox, MinButton, and MaxButton properties of Form1 to
   False.

<P><LI>Add a label (Label1) to the form.

<P><LI>Add a new module (ALT, F, M), and add the following declarations to the
   module.
<P>
<PRE>   Type POINTAPI         ' Used for GetCursor - gets mouse location
      X As Integer       ' in screen coordinates.
      Y As Integer
   End Type

   Type ConvertPOINTAPI  ' Used by WM_SYSCOMMAND - converts mouse location.
      xy As Long
   End Type

   ' Enter the following Declare statement as one, single line:
   Declare Function Sendmessage Lib "User" (ByVal hwnd As Integer,
      ByVal wMsg As Integer, ByVal wParam As Integer,
      ByVal lParam As Any) As Long

   Declare Sub GetCursorPos Lib "User" (lpPoint As POINTAPI)

   Global Const WM_LBUTTONUP = &amp;H202
   Global Const WM_SYSCOMMAND = &amp;H112
   Global Const MOUSE_MOVE = &amp;HF012

</PRE><P><LI>Place the following code in the Form_Load() event of Form1:
<P>
<PRE>   Sub Form_Load()

      Form1.Caption = ""
      Label1.Caption = "Click Here to Move the Form"
      Label1.BorderStyle = 1  ' Place a border around the label.
      Label1.AutoSize = True
      ' Position the label at the top of the form:
      Label1.Move 0, 0, Me.ScaleWidth

   End Sub

</PRE><P><LI>Add the following code to the Label1_MouseDown() event:
<P>
<PRE>   Sub Label1_MouseDown ()

      Dim mpos As POINTAPI
      Dim p As ConvertPOINTAPI
      Dim ret As Integer

      Call GetCursorPos(mpos) ' Get the current position of the cursor
      LSet p = mpos           ' and convert it for SendMessage calls.

      ' Send LButtonUp to finish the impending LButtonDown.
      ' This line of code will invoke the Label1_MouseUp() event,
      ' so be careful what code you place in that event:
      ret = Sendmessage(Me.hWnd, WM_LBUTTONUP, 0, p.xy)

      ' NOTE: If you are using a control that has a Window Handle
      '(hWnd) as your hot spot, then that control is receiving the
      ' mouse messages and you need to send the WM_LBUTTONUP message
      ' to that control, not the form. Therefore, you would need
      ' to change the above line of code to read:
      '
      ' ret = SendMessage(MyControl.hWnd, WM_LBUTTONUP, 0, p.xy)
      '
      ' where MyControl is the control you are using as the hot spot


      ' Now tell the form someone is clicking the window caption:
      ret = Sendmessage(Me.hWnd, WM_SYSCOMMAND, MOUSE_MOVE, p.xy)

   End Sub

</PRE><P><LI>Press the F5 key to run the code. Click the label to move the form.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00 hotspot<BR>
KBCategory: kbui kbprg kbcode<BR>
KBSubcategory: APrgWindow<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 6, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
