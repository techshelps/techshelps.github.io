

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: TransparentPaint Backstyle Option Unavailable </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174216">
<META NAME="KBModify" CONTENT="1997/09/24">
<META NAME="KBCreate" CONTENT="1997/09/23">
<META NAME="Keywords" CONTENT="vb5all VBKBAX VBKBComp VBKBCtrl kbdocerr">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Visual Basic 5.0 documentation discusses a TransparentPaint option for the BackStyle property of the UserControl. However, this feature was not implemented in the product. Without this option, it is not possible to create a completely transpare...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QAB5,QBS0,QA7O,QAOE,QAMN,QAPN,QADR,QAPG,QAHV,QA01,QBVV,QAW6,QAO4,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: TransparentPaint Backstyle Option Unavailable</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174216</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Visual Basic 5.0 documentation discusses a TransparentPaint option for
the BackStyle property of the UserControl. However, this feature was not
implemented in the product. Without this option, it is not possible to
create a completely transparent ActiveX Control using Visual Basic. If you
need a transparent ActiveX Control, develop the control using Microsoft
Visual C++.
<P>
This presents two problems when working with ActiveX controls created using
Visual Basic. Transparent controls cannot be drawn on and they do not
respond to events that occur on the control; these events are passed on to
the container.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There is no way to simulate the TransparentPaint option, but under some
circumstances it may be possible to achieve the desired result. There are
two such situations:

<OL><P><LI>The ActiveX control is being used in a container that has a solid-color
   background.

<P><LI>You have a bitmap that contains some type of symbol, drawing or "hot
   spot" that is not transparent.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Background Color Matching with the Container</h3>
 
<P>
If the container has a solid color background, the backcolor of your
UserControl can be set to match the backcolor of the container. This has
the same effect as transparency. To accomplish this, add the following code
to your UserControl's Paint Event:
<P>
<PRE>   BackColor = Parent.Backcolor

</PRE></OL><h3>Using a "Hot Spot" Bitmap</h3>
 
<P>
The UserControl has two properties that can be used to create transparent
areas on the control: MaskColor and MaskPicture. These properties allow you
to have non-transparent areas on a transparent control that will respond to
events and can be drawn on. The transparent areas on the control, however,
will still not respond to events and cannot be drawn on.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a bitmap with a white background and containing a filled red
   circle.

<P><LI>Start a new ActiveX Control project.

<P><LI>Set the following properties for the UserControl:
<P>
<PRE>   BackStyle:      0 - Transparent
   MaskColor:      White
   MaskPicture:    The bitmap created in Step 1.
   BackColor:      &amp;H00FF0000&amp;

</PRE><P><LI>Add the following code to the UserControl:
<P>
<P><PRE>      Private Sub UserControl_Click()
<PRE></PRE>         MsgBox "UserControl Click"
      End Sub

      Private Sub UserControl_Paint()
         'Test to see if background of control is same color as container
         'If it is, change it, or the unmasked area will be invisible
         If BackColor = Parent.BackColor Then BackColor = vbGreen
      End Sub

</PRE><P><LI>Add a Standard EXE project.

<P><LI>Add the following code to Form1:
<P>
<P><PRE>      Private Sub Form_Click()
<PRE></PRE>         MsgBox "Form Click"
      End Sub

</PRE><P><LI>Close the UserControl and add it to Form1.

<P><LI>Run the project.

<P><LI>Clicking on the circle should result in the "UserControl Click"
   message box.

<P><LI>Clicking on the transparent area of the UserControl should display
<P><PRE>    the "Form Click" message box.
</PRE><P>
</OL>It is important that the MaskColor be set to the same color as the
background of the bitmap. To prevent problems using your control under
different versions of Windows, use White as the color. Notice also that in
this example the "Red" circle on the bitmap was blue or green when the
UserControl was displayed on the form. The actual color of the unmasked
area is determined by the BackColor property of the UserControl, not the
colors in the bitmap.
<P>
Although it is not demonstrated here, the non-transparent area of the
UserControl can also be drawn on.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Readme.hlp
 
<PRE>Keywords          : vb5all VBKBAX VBKBComp VBKBCtrl kbdocerr
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbdocerr kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
