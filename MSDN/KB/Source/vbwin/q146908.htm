

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Speed Up Data Access by Using BeginTrans &amp; CommitTrans </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q146908">
<META NAME="KBModify" CONTENT="1996/03/29">
<META NAME="KBCreate" CONTENT="1996/02/19">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can speed up database operations in a Microsoft Access database by using transactions. A transaction starts with a BeginTrans statement and ends with a CommitTrans or Rollback statement. However, for reasons relating to stack usage it is recomm...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA5V,QAH4,QAU3,QAMR,QBQB,QA1S,QAY5,QAYV,QBXJ,QAXB,QAMA,QAPN,QDKY,QA5F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Speed Up Data Access by Using BeginTrans &amp; CommitTrans</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q146908</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can speed up database operations in a Microsoft Access
database by using transactions. A transaction starts with a BeginTrans
statement and ends with a CommitTrans or Rollback statement. However, for
reasons relating to stack usage it is recommended that these code regions
are kept as small as possible. This ensures optimal performance and
reliability." For more information as to when to use transactions, please
see the following article in the Microsoft Knowledge Base:
<P>
ARTICLE-ID: <B><A HREF="../VBWIN/Q145757.htm">Q145757</A></B>
<PRE>TITLE     : Ideas to Consider When Using Transactions

</PRE>The sample program below is over 17 times faster when using
BeginTrans/CommitTrans. Performance may vary on different computers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can tune the performance of Visual Basic by using transactions for
operations that update data. A transaction is a series of operations that
must execute as a whole or not at all. You mark the beginning of a
transaction with the BeginTrans statement. You use the Rollback or
CommitTrans statement to end a transaction.
<P>
You can usually increase the record updates per second (throughput) of an
application by placing operations that update data within an Access Basic
transaction.
<P>
Because Visual Basic locks data pages used in a transaction until the
transaction ends, using transactions prevents access to those data pages by
other users while the transaction is pending. If you use transactions in a
multi-user environment, try to find a balance between data throughput and
data access.
<P>
If database operations are not within a transaction, every Update method
causes a disk write.
<P>
Transactions are very fast because they are written to a buffer in memory
instead of to disk. CommitTrans writes the changes in the transaction
buffer to disk.
<P>
Robust error trapping is important when using transactions to avoid losing
writes if the program gets an error in the middle of a transaction.
<P>
For more performance tuning tips for data access in Microsoft Visual Basic
version 4.0, see the PERFORM.TXT file.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following to the Form Load event code:
<P>
<P><PRE>      Private Sub Form_Load ()
<PRE></PRE>         Dim Starttime, Endtime
         Dim db As Database
         Dim t As RecordSet
         Dim i As Integer
         Dim tempName As String
         Dim temphone As String
         Set db = Workspace(0).OpenDatabase("c:\vb\BIBLIO.MDB") ' Uses a
          ' copy of BIBLIO.MDB.
         Set t = db.OpenRecordSet("Publishers", dbOpenTable)
         Starttime = Now
         'BeginTrans  ' Add this and CommitTrans (below) for greater speed.
         For i = 1 To 100
            tempName = "testname" &amp; Str$(i) ' Make an arbitrary unique
                                            '  string.
            tempPhone = Str$(i)             ' Make arbitrary number.
            t.AddNew ' AddNew clears copy buffer to prepare for new record.
            t!PubID = 30 + i  ' Set primary key to unique value.
            t!Name = tempName  ' Set Name field to unique value.
            t!Telephone = tempPhone  ' Set Telephone field to unique value.
            t.Update   ' Write the record to disk or to transaction buffer.
         Next i
         'CommitTrans  ' Add this and BeginTrans (above) for greater speed.
         Endtime = Now
         MsgBox "Time required= " &amp; Format(Endtime - Starttime, "hh:mm:ss")
         t.Close
         db.Close
         End
      End Sub

   The above code adds 100 new records to the BIBLIO.MDB database file.
   Add the records to a copy of BIBLIO.MDB instead of to the original.

</PRE><P><LI>Start the program (or press the F5 key). A message box reports the time
   required to add 100 new records. Close the form to end the program.
<P>
</OL>If you do not use the BeginTrans and CommitTrans statements, this program
reports 17 seconds to add 100 records on a 486/66 PC. When you add
BeginTrans and CommitTrans as shown in the program comments above, the
program takes less than 1 second on that same computer. Performance may
vary on different computers.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>Microsoft Visual Basic, version 4.0, "Professional Features Book 1,"
   Page 204
<LI>"Microsoft Developer Network News" newspaper, January 1994, Volume 3,
<P><PRE>    Number 1, published by Microsoft Corporation.
<P></BLOCKQUOTE>
</UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb416<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataAcc PrgOptTips<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
