

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Commit or Rollback without BeginTrans Error and VB Forms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110722">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1994/01/27">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Under the conditions outlined below, you may get this error:    Commit or Rollback without BeginTrans   (trappable error, Err = 3034)  Transactions are global and not limited to only one database or recordset. If you include operations on more than...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAZV,QDLB,QAB4,QBS0,QA7O,QAMN,QAB5,QBXJ,QAOE,QAGB,QAXB,QAGC,QAAP,QAO4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Commit or Rollback without BeginTrans Error and VB Forms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110722</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under the conditions outlined below, you may get this error:
<P>
<PRE>  Commit or Rollback without BeginTrans
  (trappable error, Err = 3034)

</PRE>Transactions are global and not limited to only one database or recordset.
If you include operations on more than one database or recordset within a
transaction, Rollback restores all operations on all databases.
<P>
<P><h2>CAUSE</h2>
 
<P>
This error occurs most often when a program has two or more forms, and two
of the forms each contain a data control that is connected to a different
database and table. The first form invokes a BeginTrans statement. The
program loads, then later unloads the second form, without explicitly
invoking the Database.Close method for the second data control. When the
first form invokes a CommitTrans or Rollback statement, the error message
is returned.
<P>
If your code does not explicitly invoke a Database.Close method for a data
control on a form that is unloaded, Visual Basic automatically invokes a
Rollback statement and a Database.Close method. That automatic Rollback
cancels your previous BeginTrans statement. Then, invoking a CommitTrans or
Rollback statement correctly gives the "Commit or Rollback without
BeginTrans" error message.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
In the second form's Unload event, add a Data1.Database.Close method to
prevent the automatic Rollback.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>BeginTrans, CommitTrans, and Rollback Statements</h3>
 
<P>
To perform database transactions in Visual Basic, you can use the
BeginTrans, CommitTrans, Rollback statements. BeginTrans begins a new
transaction. CommitTrans ends the current transaction. Rollback ends the
current transaction and restores the database to the state it was in just
before the current transaction began.
<P>
A transaction is a series of changes you make to a database that you want
to treat as one complete unit. A transaction begins when you use the
BeginTrans statement. Use Rollback to undo changes made during the current
transaction, and CommitTrans to accept changes and end the current
transaction. Both Rollback and CommitTrans end a transaction. Once you use
CommitTrans, you can't undo changes made during that transaction.
<P>
You can have up to five levels of transactions open at once by using
multiple BeginTrans statements. Typically, you use transactions to maintain
the integrity of your data when records in two or more tables must be
updated. For example, if you transfer money from one account to another,
you might subtract a sum from one and add the sum to another. If either
update fails, the accounts no longer balance. Use BeginTrans before
updating the first record, and then if any subsequent update fails, you can
use Rollback to undo all of the updates. Use CommitTrans after the last
record has been successfully updated.
<P>
NOTE: Some databases, such as Paradox, may not support transactions, in
which case the Transactions property of the Database object is False. Test
the value of the Transactions property before using BeginTrans to make sure
the Database supports transactions. If transactions are not supported,
these statements are ignored and no error occurs.
<P>
If you use CommitTrans or Rollback statements without first using
BeginTrans, an error occurs. If you use Rollback, you should use Refresh on
any data control that refers to data that may have changed since the
transaction began.
<P>
The following are some suggestions when using transactions which can help
prevent implicit CommitTrans:

<UL><LI>Keep transaction processing loops as short as possible, especially in a
   multi-user system.

<LI>Avoid loading forms, showing a loaded form, or moving to a form during a
   transaction. While a form with a data control on it can create an
   implicit CommitTrans (as documented above), it is wise to minimize the
   amount of form activity going on while within a transaction.

<LI>Avoid dimensioning data access object variables during a transaction.

<LI>Avoid performing any Open or Close methods on database objects
   (Database, Table, Dynaset or Snapshot) during a transaction.

<LI>Avoid performing a Create... method or function during transaction
   processing.

<LI>Avoid invoking a refresh method on a database object or data control
   within a transaction. It may generate an implicit CommitTrans.
<P>
</UL><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a data control (Data1) to Form1.

<P><LI>Connect Data1 on Form1 to a table in a database as follows:
<P>
   Select the Data1 control and press the F4 key to display the Properties
   window. Set the DatabaseName property to C:\VB3\BIBLIO.MDB, and set the
   RecordSource property to the source table name Publishers.

<P><LI>From the File menu, choose New Form to create Form2.

<P><LI>Add a data control (Data1) to Form2.

<P><LI>Connect Data1 on Form2 to any table in any database (the same or
   different database than on Form1) as follows:
<P>
   Select the Data1 control and press the F4 key to display the Properties
   window. Set the DatabaseName property to C:\ACCESS\NWIND.MDB, and set
   the RecordSource property to the source table name Categories.

<P><LI>Add the following code to the Form1 Load event:
<P>
<PRE>   Sub Form_Load ()
      BeginTrans  ' Begin the transaction.
      Form1.Show
      Form2.Show  ' Show Form2 on top of Form1.
   End Sub

   Sub Form_Unload (Cancel As Integer)
      CommitTrans   ' This statement causes an error.
   End Sub

</PRE><P><LI>Start the program, or press the F5 key.

<P><LI>Close Form2.

<P><LI>Close Form1. This results in the following error message:
<P>
<P><PRE>    Commit or Rollback without BeginTrans (Err = 3034)
</PRE><P>
</OL>In this example, the error you get when unloading Form1 is actually caused
by unloading Form2.
<P>
When Form1 loads, Visual Basic automatically invokes the Data1.Refresh
method for the attached data control. That automatically opens the
specified database and table. When Form2 loads, the same behavior occurs to
open the second database and table.
<P>
As Form2 unloads, Form2 checks to see if the data control's database is
still open. If the database is still open, Visual Basic automatically does
a Rollback and closes the database in order to cancel any unsaved changes
to the current record in the data control. This default behavior often
saves you from writing extra code. That automatic Rollback cancels the
BeginTrans that you invoked in the Form1 Load event. As Form1 unloads, the
CommitTrans in the form's unload event has no transaction to commit, so you
get the error message.
<P>
To work around this behavior, add a Data1.Database.Close method in the
Unload event for Form2 to prevent the automatic Rollback.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: APrgDataOther
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
