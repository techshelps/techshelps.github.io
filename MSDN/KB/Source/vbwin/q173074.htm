

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Multiple Visual Basic 5.0 Printouts Are Not the Same </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q173074">
<META NAME="KBModify" CONTENT="1997/09/25">
<META NAME="KBCreate" CONTENT="1997/08/25">
<META NAME="Keywords" CONTENT="vb5all kbprint">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When you print what should be identical copies of the same print job, the pages do not print the same. Different fonts, text in the wrong place, and multiple blank pages are typical.  CAUSE =====  The primary cause of differences between print jobs...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVX,QAOX,QACT,QBS0,QAPN,QAJQ,QADF,QAIW,QAH4,QBXS,QBVV,QAL3,QAKD,QAHT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Multiple Visual Basic 5.0 Printouts Are Not the Same</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q173074</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you print what should be identical copies of the same print job, the
pages do not print the same. Different fonts, text in the wrong place, and
multiple blank pages are typical.
<P>
<P><h2>CAUSE</h2>
 
<P>
The primary cause of differences between print jobs is that the Visual
Basic 5.0 Printer Object is not fully reset by EndDoc method. The values of
the ScaleMode and a few other properties are inherited by subsequent
documents unless the application is restarted.
<P>
Another cause is that changing some printer properties changes other
printer properties in ways that are not necessarily intuitive. Changing the
ScaleMode property affects the other Scale properties and CurrentX/Y, which
need to be converted to the new coordinate system. Similarly, changing the
ScaleLeft/Top properties affects the values of CurrentX/CurrentY,
respectively.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this behavior, reset the ScaleMode and other properties to
their original values. The code below enumerates all of the properties of
the printer object and displays their values on the Immediate pane. During
your debug cycle, call the code before each print job and compare the
results. You can then modify your code to correctly reset the appropriate
property values:
<P>
<PRE>   Sub PrntProp()
       Debug.Print "ColorMode   ", Printer.ColorMode
       Debug.Print "Copies   ", Printer.Copies
       Debug.Print "CurrentX   ", Printer.CurrentX
       Debug.Print "CurrentY   ", Printer.CurrentY
       Debug.Print "DeviceName   ", Printer.DeviceName
       Debug.Print "DrawMode   ", Printer.DrawMode
       Debug.Print "DrawStyle   ", Printer.DrawStyle
       Debug.Print "DrawWidth   ", Printer.DrawWidth
       Debug.Print "DriverName   ", Printer.DriverName
       Debug.Print "Duplex   ", Printer.Duplex
       Debug.Print "FillColor   ", Printer.FillColor
       Debug.Print "FillStyle   ", Printer.FillStyle
       Debug.Print "Font.Bold", Printer.Font.Bold
       Debug.Print "Font.Charset", Printer.Font.Charset
       Debug.Print "Font.Italic", Printer.Font.Italic
       Debug.Print "Font.Name", Printer.Font.Name
       Debug.Print "Font.Size", Printer.Font.Size
       Debug.Print "Font.Strikethr "; Printer.Font.Strikethrough
       Debug.Print "Font.Underline "; Printer.Font.Underline
       Debug.Print "Font.Weight", Printer.Font.Weight
       Debug.Print "hDC   ", Printer.hDC
       Debug.Print "Height   ", Printer.Height
       Debug.Print "Orientation", Printer.Orientation
       Debug.Print "Page   ", Printer.Page
       Debug.Print "PaperBin   ", Printer.PaperBin
       Debug.Print "PaperSize   ", Printer.PaperSize
       Debug.Print "Port   ", Printer.Port
       Debug.Print "PrintQuality", Printer.PrintQuality
       Debug.Print "RightToLeft", Printer.RightToLeft
       Debug.Print "ScaleHeight", Printer.ScaleHeight
       Debug.Print "ScaleLeft   ", Printer.ScaleLeft
       Debug.Print "ScaleTop   ", Printer.ScaleTop
       Debug.Print "ScaleWidth   ", Printer.ScaleWidth
       Debug.Print "ScaleMode   ", Printer.ScaleMode
       Debug.Print "TrackDefault", Printer.TrackDefault
       Debug.Print "TwipsPerPixelX"; Printer.TwipsPerPixelX
       Debug.Print "TwipsPerPixelY"; Printer.TwipsPerPixelY
       Debug.Print "Width   ", Printer.Width
       Debug.Print "Zoom   ", Printer.Zoom
   End Sub

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following code is based on the example in the Visual Basic 5.0 Help
file. Note that after the Printer.EndDoc, the Printer Object Properties are
not reset:
<P>
<PRE>    Debug.Print Printer.ScaleTop
    Debug.Print Printer.ScaleLeft
    Debug.Print Printer.ScaleWidth
    Debug.Print Printer.ScaleHeight

    Printer.ScaleTop = -1  ' Set scale for top of grid.
    Printer.ScaleLeft = -1 ' Set scale for left of grid.
    Printer.ScaleWidth = 2 ' Set scale (-1 to 1).
    Printer.ScaleHeight = 2
    Printer.Line (-1, 0)-(1, 0)    ' Draw horizontal line.
    Printer.Line (0, -1)-(0, 1)    ' Draw vertical line.
    For I = -1 To 1 Step 0.05
        Printer.PSet (I * Rnd, I * Rnd)    ' Draw a point.
    Next I
    Printer.EndDoc

    Debug.Print Printer.ScaleTop
    Debug.Print Printer.ScaleLeft
    Debug.Print Printer.ScaleWidth
    Debug.Print Printer.ScaleHeight
</PRE> 
<PRE>Keywords          : vb5all kbprint
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
