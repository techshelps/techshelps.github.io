

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Visual Basic Vers 1.0, 2.0, &amp; 3.0 on Same Computer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94697 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/01/13">
<META NAME="Keywords" CONTENT="kbenv kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article describes how to set up Visual Basic version 2.0 or 3.0 and keep Visual Basic version 1.0 on your computer. There are two issues involved when attempting to maintain two versions of Visual Basic on the same computer. First, you need to...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMA,QA5F,QAA1,QBXB,QATJ,QDI2,QA7O,QAOE,QAMN,QAB5,QAFI,QA5B,QAC1,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Visual Basic Vers 1.0, 2.0, &amp; 3.0 on Same Computer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94697 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to set up Visual Basic version 2.0 or 3.0 and
keep Visual Basic version 1.0 on your computer. There are two issues
involved when attempting to maintain two versions of Visual Basic on the
same computer. First, you need to set up Visual Basic version 2.0 or 3.0
so that it does not overwrite the Visual Basic version 1.0 files. Second,
you must manage the compatibility between the two versions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To keep Visual Basic version 1.0 on your computer, install Visual Basic
version 2.0 or 3.0 in a different directory. By default, the Visual Basic
version Setup program attempts to copy the files to the \VB directory,
but it will ask you if you want to put it in a different directory.
<P>
If you have the Professional Toolkit for Visual Basic version 1.0 and you
want to preserve the custom control (or .VBX) files, place them in a
directory other than \WINDOWS or \WINDOWS\SYSTEM. The Setup program for
the Professional Toolkit for Visual Basic 1.0 gives you the option to place
a copy of the custom control files in a separate directory. These files are
normally placed in a subdirectory called VBX in the Visual Basic directory.
<P>
If you requested an extra copy of the custom control files, they'll remain
separated from the Visual Basic version 2.0 custom control files, so you do
not need to do anything. However, if you didn't request a copy, copy the
Visual Basic version 1.0 .VBX files from the \WINDOWS\SYSTEM directory to
another directory before running the Visual Basic version 2.0 Setup
program. In addition to the VBX files, you also need to copy GSW.EXE,
GSWDLL.DLL, and COMMDLG.DLL from the \WINDOWS\SYSTEM directory to the
other directory.
<P>
The Setup program for the Visual Basic Standard and Professional editions
copies the .VBX, .EXE, and .DLL files to the \WINDOWS\SYSTEM directory.
If a .VBX, .EXE, or .DLL file already exists in the \WINDOWS\SYSTEM
directory with that name, the Setup program changes the file extension
from .VBX, .EXE, or .DLL to .OLD.
<P>
If you already ran the Visual Basic version 2.0 or 3.0 Setup program, you
can recover the version 1.0 custom control files by copying the .OLD files
from the \WINDOWS\SYSTEM directory to a different directory. Then rename
the .OLD files giving them the appropriate extension (.VBX, .EXE, or .DLL).
For example, rename GSW.OLD to GSW.EXE, GSWDLL.OLD to GSWDLL.DLL, and
COMMDLG.OLD to COMMDLG.DLL. Then rename all other .OLD files to .VBX files.
<P>
For the most part, the code for Visual Basic version 1.0 applications is
upwardly compatible. In other words, you should be able to run all version
1.0 applications in version 2.0 or 3.0 with few or no changes. When you
load a version 1.0 project into Visual Basic version 2.0 or 3.0, you will
be informed that your files are in the old format. When you save the
project, Visual Basic version 2.0 or 3.0 converts the files into the new
version 2.0 or 3.0 format. Once the version 1.0 project files are saved in
the new version's format, you cannot load the project files back into
Visual Basic version 1.0.
<P>
Once you install Visual Basic version 2.0 or 3.0, any version 1.0 .EXE
files that use custom controls will likely use the version 2.0 or 3.0
custom controls. This happens because when you installed the later version,
its controls replaced the earlier version's controls in the \WINDOWS\SYSTEM
directory. This should work well because the Visual Basic version 2.0
Professional Toolkit controls are upwardly compatible from the version 1.0
Professional Toolkit controls.
<P>
If you need to use Visual Basic version 1.0 custom controls, put them in
the same directory as the version 1.0 .EXE that uses them. Then the .EXE
will find the version 1.0 controls first. However, there is no guarantee
the version 1.0 custom controls will be used because another .EXE may have
already loaded the version 2.0 controls.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 1.00 3.00<BR>
KBCategory: kbenv kbprg<BR>
KBSubcategory: EnvtDes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
