

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PATCH: Out of Memory Error w/ AddNew/Update on Dynaset/Table </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124709">
<META NAME="KBModify" CONTENT="1997/09/17">
<META NAME="KBCreate" CONTENT="1995/01/10">
<META NAME="Keywords" CONTENT="APrgDataAcc buglist3.00 kbpatch kbbuglist kbfile kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Performing an AddNew and then and Update method on a table or dynaset causes the Jet database engine to allocate a small amount of memory that is not released until the Jet database engine is unloaded from memory. Therefore, programs that perform m...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QBS0,QDKY,QAR4,QAXB,QAC1,QAY2,QAAP,QAA5,QDN9,QBVV,QBD2,QANF,QAMB,QALH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PATCH: Out of Memory Error w/ AddNew/Update on Dynaset/Table</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124709</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00
WINDOWS
kbprg kbbuglist kbfixlist kbfile
<P>
 
The information in this article applies to:

<UL><LI>Professional Edition of Microsoft Visual Basic for Windows, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Performing an AddNew and then and Update method on a table or dynaset
causes the Jet database engine to allocate a small amount of memory that is
not released until the Jet database engine is unloaded from memory.
Therefore, programs that perform many Updates over a long period of time
without unloading the Jet database engine will eventually result in an "Out
of Memory" error.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two possible workarounds:
<P>
Update Vbdb300.dll to version 3.00.0530, dated 1 Feb 95 by downloading
Vbdb300.exe. You can find Vbdb300.exe, a self-extracting file, on these
services:
<P>
The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/vbdb300.exe">vbdb300.exe</A> <I>(size: 63762 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services

   NOTE: This version of the Vbdb300.dll does require the VB/Access
   compatibility layer (Comlyr.exe) and the updated Jet engine in the
   Access Service Pack (Accsvc.exe in the GO MSACCESS forum).

   DISCLAIMER: The version of Vbdb300.dll (hereinafter the “Product”) is
   being released as a patch (the “Patch”) in order to fix a specific
   problem a few customers are experiencing with Microsoft Visual Basic
   3.0. This Patch has been tested comprehensively to ensure that no errors
   or additional problems are introduced into the Product during normal
   usage. However, in order to release this Patch as quickly as possible,
   it has not have been subjected to the same series of rigorous functional
   and regression tests that are used for regular production products.
   Consequently, this Patch should be installed only if you are
   experiencing the specific problem mentioned above, and not applied
   indiscriminately. Use of this Patch is governed by all of the provisions
   of the Microsoft End User Software License Agreement included with the
   Product, as if it were the Product.

   In addition, the Patch is provided to you at no additional charge.
   Microsoft Corporation owns all right, title and interest in and to the
   Patch.

   Copyright 1995 Microsoft Corporation, All Rights Reserved.

</PRE>-OR-
<P>
Periodically shell to another Visual Basic program that does not use the
Jet database engine to unload the database application. This will cause all
of the memory held by the Jet database engine to be released back to the
system. You can then restart your application from the non-database
program.
<P>
<P><h2>STATUS</h2>
 
<P>
This bug in Microsoft Visual Basic for Windows version 3.0 was corrected
with Vbdb300.dll version 3.00.0530 dated 1 Feb 95.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This problem is not corrected by using the Microsoft Access 2.0/Visual
Basic 3.0 Compatibility Layer; nor is it corrected by using the Microsoft
Access version 2.0 Service Pack.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
NOTE: You will need the older version 3.00.0529 of Vbdb300.dll and the
Professional Edition of Visual Basic to reproduce the problem outlined
below.

<OL><P><LI>Create a new project. Form1 is created by default.

<P><LI>Add a label control to Form1.

<P><LI>Enter the following code for Form1:
<P>
<PRE>   'Enter the following lines as one line
   Declare Function GetFreeSpace Lib "kernel" (ByVal flag As Integer) _
      As Long

   Sub Form_Activate ()
      Dim lngStartMem As Long
      Dim lngUsedMem As Long
      Dim lngRec As Long
      Dim strMsg as String
      Dim dbBiblio As Database
      Dim dsAuthors As Dynaset

      Label1.Caption = "Initializing..."
      Label1.Refresh

      Set dbBiblio = OpenDatabase("biblio.mdb")
      Set dsAuthors = dbBiblio.CreateDynaset("Authors")
      lngStartMem = GetFreeSpace(0)

      BeginTrans
      For lngRec = 1 To 100000
         dsAuthors.AddNew
         dsAuthors("Au_ID") = lngRec + 100
         dsAuthors("Author") = "Doe, John"
         dsAuthors.Update
         If lngRec Mod 500  = 0 Then
            CommitTrans
            lngUsedMem = lngStartMem - GetFreeSpace(0)
            strMsg = "Records: " &amp; CStr(lngRec) &amp; Chr$(13) &amp; Chr$(10)
            strMsg = strMsg &amp; "Used: " &amp; CStr(lngUsedMem)
            Label1.Caption = strMsg
            Label1.Refresh
            BeginTrans
         End If
      Next
      CommitTrans

      dsAuthors.Close
      dbBiblio.Close
   End Sub

</PRE><P><LI>Run the program. The "Used:" line of the label tells how much memory has
   been allocated from the global memory heap. This memory is not recovered
   until you exit from Visual Basic.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbbuglist kbfixlist kbfile<BR>
KBSubcategory: APrgDataAcc kbpatch buglist3.00<BR>
Additional reference words: 3.00 leak low adding comlyr accsvc<BR>
Keywords          : APrgDataAcc buglist3.00 kbpatch kbbuglist kbfile kbfixlist kbprg<BR>
Version           : 3.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
