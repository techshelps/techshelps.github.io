

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Windows 3.1 APIs to Play Videos in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q96090 ">
<META NAME="KBModify" CONTENT="1997/02/06">
<META NAME="KBCreate" CONTENT="1993/03/08">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can play video .AVI files in Visual Basic by using Windows version 3.1 APIs.  NOTE: You must have the video for Windows driver installed on your system. Choose the Drivers icon from Control Panel to see what driver(s) you have installed. The dr...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWQ,QBWO,QBWN,QAYS,QBJZ,QBWS,QAI4,QDK0,QAH4,QAMN,QDM6,QAYA,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Windows 3.1 APIs to Play Videos in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 6, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q96090 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can play video .AVI files in Visual Basic by using Windows version 3.1
APIs.
<P>
NOTE: You must have the video for Windows driver installed on your system.
Choose the Drivers icon from Control Panel to see what driver(s) you have
installed. The driver you need is [MCI] Microsoft Video for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Use the following procedure to position and size the window where you
want to play the .AVI file and to play the .AVI file:

<OL><P><LI>Run Visual Basic, or if Visual Basic is already running, choose New
   Project from the File menu (ALT, F, N). Form1 is created by default.

<P><LI>Add a command button control (Command1) to Form1.

<P><LI>Add the following code to the Command1_Click event of Form1:
<P>
<PRE>   Sub Command1_Click ()
   Dim CmdStr As String
   Dim ret As Long
   Dim ErrorStr As String

   ErrorStr = Space(255)
   '*** This will open the AVIVideo and create a child window on the
   '*** form where the video will display. Animation is the device_id.
   '*** Replace c:\rbtndog.avi with the AVI you want to play. You must
   '*** put use the full path, for example, c:\tmp\avi\avifiletoplay.avi
   CmdStr =("open c:\tmp\rbtndog.avi type AVIVideo alias Animation parent "
           + LTrim$(Str$(form1.hWnd)) + " style " + LTrim$(Str$(WS_CHILD)))
   ret = mciSendString(CmdStr, 0&amp;, 0, 0)
   If ret &gt; 0 Then
      ret = mciGetErrorString(ret, ErrorStr, 255)
      MsgBox ErrorStr
   End If
   '*** Put the window at location 10 10 relative to the parent window
   '*** with a size of 200 200
   ret = mciSendString("put Animation window at 10 10 200 200", 0&amp;, 0, 0)
   If ret &gt; 0 Then
      ret = mciGetErrorString(ret, ErrorStr, 255)
      MsgBox ErrorStr
   End If

   '*** The wait tells the MCI command to complete before returning
   '*** control to the application.
   ret = mciSendString("play Animation wait", 0&amp;, 0, 0)
   If ret &gt; 0 Then
      ret = mciGetErrorString(ret, ErrorStr, 255)
      MsgBox ErrorStr
   End If

   '*** Close windows so they don't crash when you exit the application.
   ret = mciSendString("close Animation", 0&amp;, 0, 0)
   If ret &gt; 0 Then
      ret = mciGetErrorString(ret, ErrorStr, 255)
      MsgBox ErrorStr
   End If

End Sub

</PRE><P><LI>Choose New Module from the File menu (ALT, F, M). MODULE1.BAS is created
   by default. Add the following code to Module1. Enter the entire Declare
   on a single line:
<P>
   Global Const WS_CHILD = &amp;H40000000
<PRE>   Declare Function mciSendString Lib "mmsystem" (ByVal lpstrCommand$,
      ByVal lpstrReturnStr As Any, ByVal wReturnLen%, ByVal hCallBack%)
      As Long
   Declare Function mciGetErrorString Lib "mmsystem" (ByVal dwError&amp;,
      ByVal lpstrReturnStr As Any, ByVal wReturnLen%) As Long

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S) or press the F5 key to run
   the program.
<P>
</OL>For more information on the sndSendString() function and command strings,
see pages 3-26 and 7-23 to 7-93 in the "MultiMedia Programmer's Reference."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 6, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
