

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use "DSN-Less" ODBC Connections with RDO </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q166392">
<META NAME="KBModify" CONTENT="1997/08/13">
<META NAME="KBCreate" CONTENT="1997/04/04">
<META NAME="Keywords" CONTENT="APrgDataODBC vb432 VB4WIN vb5all vb5howto VBKBODBC VBKBRDO kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  With Microsoft Visual Basic versions listed above, you can specify your ODBC driver and server in your connect string when using RDO (Remote Data Objects) and DAO (Data Access Objects). This eliminates the need to set up a DSN (Data Source Name). T...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA9E,QAU9,QAA1,QAI5,QAPN,QAH4,QABM,QDI2,QA1S,QBG2,QDN9,QAPF,QAYY,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use "DSN-Less" ODBC Connections with RDO</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q166392</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
With Microsoft Visual Basic versions listed above, you can specify your
ODBC driver and server in your connect string when using RDO (Remote Data
Objects) and DAO (Data Access Objects). This eliminates the need to set up
a DSN (Data Source Name). This is called a "DSN-Less" ODBC connection
because you do not need to set up a DSN in order to access your ODBC
database server.
<P>
To do this, you specify a "driver=" parameter in your connect property.
The following three examples show how this is done with the SQL Server,
Access, and Oracle ODBC drivers:
<P>
<PRE>   'Microsoft SQL Server ODBC Driver example
    cnstr = "driver={SQL Server};server=myserver;" &amp; _
      "database=pubs;uid=sa;pwd="
   cn.Connect = cnstr

   'Microsoft Access ODBC Driver example
   cnstr = "Driver={Microsoft Access Driver (*.mdb)};" &amp; _
     "Dbq=c:\program files\devstudio\vb\biblio.mdb;" &amp; _
     "Uid=Admin; Pwd="
   cn.Connect = cnstr

   'Microsoft ODBC Driver for Oracle example
   cnstr = "Driver={Microsoft ODBC Driver for Oracle};" &amp; _
     "ConnectString=OracleServer.world; Uid=demo; Pwd=demo"
   cn.Connect = cnstr

</PRE>NOTE: The driver name must be surrounded by curly brackets. For example:
<P>
<PRE>   "{SQL Server}"

</PRE>The following information is taken from Visual Basic Books Online:
<P>
<PRE>   The connect string contains a series of semi-colon-delimited
   arguments as defined by the ODBC interface — including the
   ODBC driver itself. That is, all ODBC drivers have specific
   argument requirements so you should consult the documentation
   included with the driver for specific information. This
   connect string is passed to the ODBC API SQLDriverConnect
   function along with the hEnv for the associated rdoEnvironment
   object.

</PRE><h2>MORE INFORMATION</h2>
 
<P>
If you do want to set up a DSN, you can use the following methods:

<UL><LI>Manually with the ODBC Admin utility(Odbcad32.exe).

<LI>Through code with the RDO rdoRegisterDataSource method.

<LI>Through code with the DAO RegisterDatabase method.

<LI>Through code with the ODBC API SQLConfigDatasource API function.
<P>
</UL><h3>Sample Program</h3>
 
<P>
The following RDO example uses a "DSN-less" ODBC connection so you do not
need to set up a DSN with the ODBC Admin utility beforehand.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a CommandButton to Form1, Command1 by default.

<P><LI>Paste the following code into the code window of Form1:
<P>
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>        Dim Cn As New rdoConnection           'creatable rdoConnection
        Dim Qr As New rdoQuery                'creatable rdoQuery
        Dim Rs As rdoResultset                'pointer to rdoResultset
        Dim cnstr As String                   'hold connection info

        cnstr = "driver={SQL Server};server=myserver;" &amp; _
          "database=pubs;uid=sa;pwd="
        Cn.Connect = cnstr

        Cn.CursorDriver = rdUseClientBatch
        Cn.EstablishConnection Prompt:=rdDriverNoPrompt
        Set Qr.ActiveConnection = Cn
        Qr.SQL = "Select * From Authors"
        Set Rs = Qr.OpenResultset(Type:=rdOpenKeyset, _
          LockType:=rdConcurBatch)
        Debug.Print Rs(0), Rs(1), Rs(2)
      End Sub

</PRE><P><LI>Note that you must change your DRIVER, SERVER, DATABASE, UID, and PWD
   parameters in the Connect method. You also need to modify the SQL
   statement contained in the Command1_Click event to match your own SQL
   data source.

<P><LI>Start the program or press the F5 key.

<P><LI>Click the Command1 button to create an rdoResultset and display the
   first row of data in the debug window.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
In Visual Basic Books Online see:
<PRE>  Guide to Building Client Server Applications in Visual Basic (Enterprise)
    Part 3: Data Access Options
      Using Remote Data Objects and the Remote Data Control
        Establishing an RDO Connection
          Providing Connection Strings to RDO

</PRE></OL>(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by Jon
Fowler, Microsoft Corporation
 
<PRE>Keywords          : APrgDataODBC vb432 VB4WIN vb5all vb5howto VBKBODBC VBKBRDO kbhowto
Version           : 5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
