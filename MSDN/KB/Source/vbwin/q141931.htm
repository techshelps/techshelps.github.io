

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limitations of the Visual Basic 4.0 Add-In Object Model </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141931">
<META NAME="KBModify" CONTENT="1996/01/04">
<META NAME="KBCreate" CONTENT="1996/01/02">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic 4.0 is the first version of Visual Basic to include the ability to create add-ins for the Visual Basic development environment. With the add-in object model defined by Visual Basic 4.0 you can create many great add-ins. However, only a...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QAW6,QAH0,QBW7,QAI5,QA5F,QAMA,QAH4,QABB,QBWC,QAPF,QALQ,QAJG,QBWG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Limitations of the Visual Basic 4.0 Add-In Object Model</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 4, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141931</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic 4.0 is the first version of Visual Basic to include the
ability to create add-ins for the Visual Basic development environment.
With the add-in object model defined by Visual Basic 4.0 you can create
many great add-ins. However, only a portion of the development environment
is exposed to add-ins, and therefore, some functionality that you may want
could be missing.
<P>
This article documents some of the most common limitations that you may run
into. Note that in future versions of Visual Basic the add-in object model
should be expanded to solve most or all of these issues.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Here is a list of the most common limitations of the add-in object model
encountered by add-in developers:

<UL><LI>No property to indicate the type of Component object. A Component could
   be a form, class, module, or resource file. There is a FileNames
   property that returns the file name with the extension. However, users
   do not have to use the standard extensions when naming project files.
   For components that have been saved, add-ins can check inside the file
   to determine the type of component.

<LI>Add-ins can only access the ActiveForm. There is no FormTemplates
   collection. Similarly, you cannot get to a FormTemplate object from the
   Components collection.

<LI>Properties of an object type (such as Font and Picture) return a
   Properties collection object. There is no way to access the actual
   object type property. Add-ins can only access individual properties of
   an object type property through the Properties collection. For example
   you cannot directly access the Font object property of a Form through an
   add-in. However, you can access the individual properties of the Font
   object such as Name, Bold, and Size through the Properties collection
   that is returned as the Value of the Form Font property.

<LI>No method to set properties of class or standard module. The Component
   object has a Name property but it is read-only. For files that have been
   saved, it is possible to write to the file to change the property, then
   reload the Component.

<LI>The only method for inserting code is the InsertFile command. InsertFile
   can only insert code between the general declarations section and the
   first procedure. If the add-in needs more control, it must save the
   Component to a file, modify the file as desired, and Reload the
   component.

<LI>There are methods for adding references to controls and type libraries,
   but no methods for removing the references. To work around this, an  add-
   in can open the project file, make the desired modification, and reload
   the project.

<LI>No methods exist for changing project options. The ReadProperty and
   WriteProperty methods of the ProjectTemplate object are for user-defined
   properties only. Add-ins can modify the options by writing directly to
   the project file.

<LI>There are no methods for displaying a specific form, class, standard
   module, or procedure within. However, when adding a new form it will
   become the active form.

<LI>Multiple instances of Visual Basic could be using a single add-in. There
   is no property that indicates the title or handle of the instance of
   Visual Basic so that an add-in can control it through other means
   besides the add-in object model.

<LI>Methods have not been exposed that correspond to all of Visual Basic's
   menu commands.

<LI>Add-ins can only place menus and items under the Visual Basic Add-In
   menu.
<P>
   There are no methods for putting menus anywhere else on the Visual Basic
   menu or any of the pop-up menus.

<LI>Cannot set the DataSource property of a bound control from an add-in.

<LI>Cannot set any Picture object properties such as the Icon, MouseIcon,
   and, Picture properties of a form.

<LI>Add-ins are not given access to the toolbar and cannot add any buttons
   to it.

<LI>Add-ins are not given access to the Toolbox, Project, Menubar, Code,
   Debug, or Properties windows that make up the Visual Basic development
   environment.

<LI>No properties or methods have been exposed to indicate if the IDE is in
   run, break, or debug mode.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all Addin Addins VBIDE<BR>
KBCategory: kbprg<BR>
KBSubcategory: APrgOther
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 4, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
