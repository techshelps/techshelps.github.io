

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Pass Optional Parameters to a C DLL Function from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153546">
<META NAME="KBModify" CONTENT="1996/07/15">
<META NAME="KBCreate" CONTENT="1996/07/11">
<META NAME="Keywords" CONTENT="kbusage kbole kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  It is possible to pass optional parameters to a C DLL function from Visual Basic. Visual Basic supports the Optional Keyword in the Declare statement that tells the compiler to pass a VARIANT of type VT_ERROR if the corresponding parameter is omitt...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH6,QAD7,QBS0,QAH7,QAMS,QAHT,QAY5,QAHE,QBFY,QAVX,QAVW,QAB9,QBV8,QAH4,QDNN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Pass Optional Parameters to a C DLL Function from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153546</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic for Windows, 32-bit only, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible to pass optional parameters to a C DLL function from Visual
Basic. Visual Basic supports the Optional Keyword in the Declare statement
that tells the compiler to pass a VARIANT of type VT_ERROR if the
corresponding parameter is omitted in the function call. Otherwise, if the
parameter is not omitted, it is passed according to however it may be
declared. In any case, nothing is optional on the C side of things -- the
function always accepts the fixed number of parameters for which it has
been defined.
<P>
This article provides a step-by-step example that demonstrates how to pass
optional parameters to a C DLL function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a 32-bit Windows C DLL with the following function:
<P>
<P><PRE>      long _stdcall OptionalParamCall(LPSTR pStr, VARIANT op1, VARIANT op2)
      {
<PRE></PRE>         if (op1.vt == VT_ERROR &amp;&amp; op1.scode == DISP_E_PARAMNOTFOUND)
         MessageBox (NULL, "Optional Param1 is Empty!", "Test DLL", MB_OK);

         if (op2.vt == VT_ERROR &amp;&amp; op2.scode == DISP_E_PARAMNOTFOUND)
         MessageBox (NULL, "Optional Param2 is Empty!", "Test DLL", MB_OK);

         MessageBox (NULL, pStr, "Test DLL", MB_OK);
         return 1;
      }

   Export the function in a .DEF file as follows:

      LIBRARY   TESTDLL

      CODE      PRELOAD MOVEABLE DISCARDABLE
      DATA      PRELOAD SINGLE

      EXPORTS
      OptionalParamCall     @1

   Name this DLL as Testdll.dll and put the file into the
   system(Windows 95) or \system32 (Windows NT) directory.

</PRE><P><LI>From Visual Basic 4.0 32-bit, open a new project, and add the following
   code to the general declarations portion of Form1:
<P>
<PRE>   Private Declare Function OptionalParamCall Lib "testdll.dll" _
      (ByVal s As String, Optional ByVal op1, Optional ByVal op2) As Long

      Private Sub Form_Click()
         ret&amp; = OptionalParamCall("hello")
         ret&amp; = OptionalParamCall("hello", 7)
         ret&amp; = OptionalParamCall("hello", , "world")
         ret&amp; = OptionalParamCall("hello", 8.2, "Mike")
      End Sub

</PRE><P><LI>Run the Visual Basic program, and click the form. A series of Msgboxes
   will appear to tell you which optional parameters are empty and give the
   value of the string passed as the first parameter.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb432<BR>
KBCategory: kbusage kbole kbhowto kbcode<BR>
KBSubcategory: IAPOLE
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
