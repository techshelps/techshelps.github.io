

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Winsock Control Leaks Memory When Unloaded </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171843">
<META NAME="KBModify" CONTENT="1998/02/18">
<META NAME="KBCreate" CONTENT="1997/07/23">
<META NAME="Keywords" CONTENT="vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Winsock control may cause the system to lose memory and system resources, eventually causing the system to stop responding due to running out of memory.  CAUSE =====  System resources are not properly replenished when a Winsock control is unloa...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QAMN,QDKF,QAGI,QDO3,QARL,QAM1,QAJZ,QAR4,QAHV,QBS0,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Winsock Control Leaks Memory When Unloaded</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171843</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Winsock control may cause the system to lose memory and system
resources, eventually causing the system to stop responding due to running
out of memory.
<P>
<P><h2>CAUSE</h2>
 
<P>
System resources are not properly replenished when a Winsock control is
unloaded from memory. If your application often loads and unloads a Winsock
control, you may eventually experience this problem.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available. This bug was fixed in Visual Studio 97 Service Pack 3.
<P>
For more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VSTUDIO/Q170365.htm">Q170365</A></B>
   TITLE     : INFO: Visual Studio 97 Service Packs - What, Where, and Why

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
NOTE: You should save your work in any open applications before following
these steps.

<OL><P><LI>Create a new "Standard EXE" project. Form1 is created by default.

<P><LI>Choose Components from the Project menu and select "Microsoft Winsock
   Control 5.0."

<P><LI>Add a Winsock control (Winsock1) to Form1.

<P><LI>Set the Index property of the Winsock1 control to 0.

<P><LI>Add the following code to Form1.
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>         Do
            Load Winsock1(1)
            Unload Winsock1(1)
            DoEvents 'does not cause problem but helps
           'to allow idle time so you can stop application.
         Loop
      End Sub

</PRE><P><LI>Start the project.
<P>
</OL>At this point, you can view the Performance tab of the System Properties
window to watch how system resources diminish while the application runs.
The System Properties window is available by clicking the System icon in
the Windows 95 Control Panel. Depending on the version of the Winsock
control you are using, the version shipped with Visual Studio Service Pack
2 takes much longer to drain the system resources than the original version
shipped with Visual Basic 5.0. Visual Studio Service Pack 3 does not have
an updated control and still ships the Visual Studio Service Pack 2 version
of the control.
<P>
<P><h3>Workaround</h3>
 
<P>
You can load a fixed number of Winsock controls, or a Winsock control
array, on program load and only unload them on program shutdown to work
around the memory leak problem. This approach is similar to implementing a
Winsock server in SDK using a fixed-sized thread pool and is a more
scalable solution than loading a new Winsock control to handle each new
client connection. Under the one control per request model, if there are a
large number of clients making connections to the server at the same time,
the server will soon have too many threads to function at all.
<P>
Having a fixed "pool" of Winsock controls can ensure that the server
functions properly under a relatively heavy load. A large number of
simultaneous client connections will not be able to bring down a server
machine. If there are unused controls left in the Winsock control pool when
a client connection request comes in, you will assign one control from the
pool to handle the client request. After the client request is served, the
control is "returned" to the pool. If a client request comes in and all
controls in the pool have been assigned out at the moment, you will have to
choose to either have the client wait until there are available free
controls in the pool, or accept the connection request right away, send a
busy message, and then close the socket.
<P>
If you are planning a server that could experience really heavy loads, the
Winsock control may not be the best tool to use. You should consider
overlapped socket I/O with Windows NT I/O Completion Port in a C/C++ SDK
program.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: gdi<BR>
Keywords          : vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2<BR>
Version           : WINDOWS:5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbfix kbservicepack<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
