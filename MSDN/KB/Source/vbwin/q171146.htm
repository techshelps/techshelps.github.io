

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create and Remove a DSN in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171146">
<META NAME="KBModify" CONTENT="1997/09/25">
<META NAME="KBCreate" CONTENT="1997/07/08">
<META NAME="Keywords" CONTENT="VB4WIN vb5all kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  In the 32-bit version of Visual Basic 4.0, it is possible to use DSN-less connections, but because the 16-bit version of ODBC can not handle this syntax, it is not possible to do this in the 16-bit version of Visual Basic 4.0. It is possible to emu...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAEF,QAM2,QAA1,QAH4,QATX,QANF,QDKD,QA5F,QAMA,QDH6,QA9N,QANJ,QBXS,QDI2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create and Remove a DSN in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171146</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions
   for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the 32-bit version of Visual Basic 4.0, it is possible to use DSN-less
connections, but because the 16-bit version of ODBC can not handle this
syntax, it is not possible to do this in the 16-bit version of Visual Basic
4.0. It is possible to emulate this ability by dynamically creating and
removing a Data Source Name (DSN) on the fly using the SQLConfigDataSource
ODBC API call.
<P>
The following is a 16-and 32-bit example that demonstrates this technique.
The 32-bit code was included because this technique has other uses as
described below. The 32-bit techniques presented in this article also apply
to Visual Basic 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The 32-bit ODBC ability to use a DSN-less connection has many uses:

<OL><P><LI>Client Simplicity. The user does not have to worry about setting up a
   DSN, naming it correctly, setting up options, etc. All this can be done
   dynamically by the application.

<P><LI>It solves many JET engine connection and connect string caching issues.

<P><LI>Increases the flexibility of the application.
<P>
</OL>All of these uses can be realized in 16-bit ODBC by creating and deleting a
DSN on the fly. This method is also useful for simple DSN management. The
code could be used to automatically create, modify, or delete a DSN at any
time. Visual Basic does provide the ability to create a DSN using the
DBEngine.RegisterDatabase() method, but the API provides greater
functionality and the ability to modify and remove a DSN, as well.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a New Project.

<P><LI>In the Advanced tab of the Options dialog box under the Tools menu, set
   a Conditional Compilation Argument named WIN32 equal to 1 if using
   Visual Basic 4.0 32-bit, or 0 if using Visual Basic 4.0 16-bit.

<P><LI>Add two CommandButtons to the default form.

<P><LI>Add the following code to the General Declarations:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      'Constant Declaration
<PRE></PRE>      Private Const ODBC_ADD_DSN = 1        ' Add data source
      Private Const ODBC_CONFIG_DSN = 2     ' Configure (edit) data source
      Private Const ODBC_REMOVE_DSN = 3     ' Remove data source
      Private Const vbAPINull As Long = 0&amp;  ' NULL Pointer

      'Function Declare
      #If WIN32 Then
          Private Declare Function SQLConfigDataSource Lib "ODBCCP32.DLL" _
          (ByVal hwndParent As Long, ByVal fRequest As Long, _
          ByVal lpszDriver As String, ByVal lpszAttributes As String) _
          As Long
      #Else
          Private Declare Function SQLConfigDataSource Lib "ODBCINST.DLL" _
          (ByVal hwndParent As Integer, ByVal fRequest As Integer, ByVal _
          lpszDriver As String, ByVal lpszAttributes As String) As Integer
      #End If

</PRE><P><LI>Add the following code into the Click event of Command1:
<P>
<P><PRE>      #If WIN32 Then
<PRE></PRE>          Dim intRet As Long
      #Else
          Dim intRet As Integer
      #End If
      Dim strDriver As String
      Dim strAttributes As String

      'Set the driver to SQL Server because it is most common.
      strDriver = "SQL Server"
      'Set the attributes delimited by null.
      'See driver documentation for a complete
      'list of supported attributes.
      strAttributes = "SERVER=SomeServer" &amp; Chr$(0)
      strAttributes = strAttributes &amp; "DESCRIPTION=Temp DSN" &amp; Chr$(0)
      strAttributes = strAttributes &amp; "DSN=DSN_TEMP" &amp; Chr$(0)
      strAttributes = strAttributes &amp; "DATABASE=pubs" &amp; Chr$(0)
      strAttributes = strAttributes &amp; "UID=sa" &amp; Chr$(0)
      strAttributes = strAttributes &amp; "PWD=" &amp; Chr$(0)
      'To show dialog, use Form1.Hwnd instead of vbAPINull.
      intRet = SQLConfigDataSource(vbAPINull, ODBC_ADD_DSN, _
      strDriver, strAttributes)
      If intRet Then
          MsgBox "DSN Created"
      Else
          MsgBox "Create Failed"
      End If

</PRE><P><LI>Add the following code into the Click event of Command2:
<P>
<P><PRE>      #If WIN32 Then
<PRE></PRE>          Dim intRet As Long
      #Else
          Dim intRet As Integer
      #End If
      Dim strDriver As String
      Dim strAttributes As String

      'Set the driver to SQL Server because most common.
      strDriver = "SQL Server"
      'Set the attributes delimited by null.
      'See driver documentation for a complete list of attributes.
      strAttributes = "DSN=DSN_TEMP" &amp; Chr$(0)
      'To show dialog, use Form1.Hwnd instead of vbAPINull.
      intRet = SQLConfigDataSource(vbAPINull, ODBC_REMOVE_DSN, _
      strDriver, strAttributes)
      If intRet Then
          MsgBox "DSN Deleted"
      Else
          MsgBox "Delete Failed"
      End If

</PRE><P><LI>Run the project.

<P><LI>Click Command1 to add a DSN named DSN_TEMP.

<P><LI>Click Command2 to remove the DSN named DSN_TEMP.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
ODBC 2.0 Programmer's Reference and SDK Guide
Microsoft Press 1993
ISBN 1-55615-658-8
<P>
(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by
Troy Cambra, Microsoft Corporation
 
<PRE>Keywords          : VB4WIN vb5all kbhowto
Version           : 4.0 5.0
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
