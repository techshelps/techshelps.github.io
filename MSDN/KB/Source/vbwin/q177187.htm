

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Stored Procedures Cannot Process NULL Parameters from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177187">
<META NAME="KBModify" CONTENT="1997/11/24">
<META NAME="KBCreate" CONTENT="1997/11/21">
<META NAME="Keywords" CONTENT="vb5all VBKBDB VBKBNet VBKBObj VBKBRDO">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  A SQL stored procedure produces unexpected results if a NULL parameter is passed from a Visual Basic application using RDO. This behavior also occurs if the SQL stored procedure declares an optional parameter whose default value is NULL and no para...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAY2,QABM,QAI4,QA2Q,QBWS,QA7O,QA7N,QAS1,QAHE,QAG2,QAB9,QACI,QBXS,QBDM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Stored Procedures Cannot Process NULL Parameters from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177187</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Enterprise Edition for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A SQL stored procedure produces unexpected results if a NULL parameter is
passed from a Visual Basic application using RDO. This behavior also occurs
if the SQL stored procedure declares an optional parameter whose default
value is NULL and no parameters are passed.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The workaround is to modify the SELECT statement in the stored procedure.
<P>
If a stored procedure is declared as:
<P>
<P>
<PRE>   CREATE PROC Test_SP

      @Param VARCHAR (20) = NULL

   AS

   SELECT * FROM Test_Table WHERE Field = @Param

   GO

</PRE>replace it with:
<P>
<PRE>   CREATE PROC Test_SP

   @Param VARCHAR (20) = NULL

   AS

   IF @Param = NULL
      SELECT * FROM Test_Table WHERE Field = NULL
   ELSE
      SELECT * FROM Test_Table WHERE Field = @Param

   GO

</PRE>The following can also be used:
<P>
<PRE>   CREATE PROC Test_SP

   @Param VARCHAR (20) = NULL

   AS

   SELECT * FROM Test_Table WHERE (Field = NULL and @Param = NULL) OR
                                  (Field = @Param)

   GO

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
bug and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Run the following SQL script on the SQL Server:
<P>
<P><PRE>      CREATE PROC Test_SP
</PRE><P>
<PRE>            @Param VARCHAR (20) = NULL

         AS

         SELECT * FROM Test_Table WHERE Field2 = @Param

         GO

        CREATE TABLE Test_Table
         (
            Field1 INT NULL,
            Field2 VARCHAR (20) NULL
         )
         GO

         INSERT Test_Table (Field1) Values (1)
         INSERT Test_Table (Field1) Values (2)

</PRE><P><LI>You should now have a stored procedure called Test_SP and a table called
   Test_Table that contains the following data:
<P>
<PRE>   Field1      Field2
   ----------- --------------------
   1           (null)
   2           (null)

</PRE><P><LI>From ISQL or SQL Query Tool, type "Test_SP" and note that two rows are
   returned.

<P><LI>Start Visual Basic, add a CommandButton, and place the following RDO
   code in the Click event (NOTE: The Microsoft Remote Data Object must be
   added from Project References menu):
<P>
<PRE>      Dim cn                   As New rdoConnection
      Dim rs                   As rdoResultset
      Dim sql                  As String

      cn.CursorDriver = rdUseOdbc
      cn.Connect = "driver={sql server};" &amp; _
                   "server=your_server_name;" &amp; _
                   "uid=sa;pwd=;" &amp; _
                   "database=pubs;"
      cn.EstablishConnection rdDriverNoPrompt

      sql = "Test_SP"
      Set rs = cn.OpenResultset(sql, rdOpenKeyset, rdConcurReadOnly)

      If Not rs.EOF Then rs.MoveLast
      MsgBox rs.RowCount

      rs.Close
      cn.Close

      Set rs = Nothing
      Set cn = Nothing

</PRE><P><LI>Note that no rows are returned.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sqlserver<BR>
Keywords          : vb5all VBKBDB VBKBNet VBKBObj VBKBRDO<BR>
Version           : WINDOWS:5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
