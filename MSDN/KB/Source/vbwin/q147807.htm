

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use ShellExecute to Launch Associated File (16-bit) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147807">
<META NAME="KBModify" CONTENT="1997/07/02">
<META NAME="KBCreate" CONTENT="1996/02/29">
<META NAME="Keywords" CONTENT="APrgWindow vb4all vb4win kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can use the Windows API ShellExecute() function to start the application associated with a given document extension without knowing the name of the associated application. For example, you could start the Paintbrush program by passing the filen...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBQU,QAY5,QBBI,QBV8,QAHE,QAB9,QDL9,QBWS,QBWO,QBWN,QAH6,QAIJ,QAH7,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use ShellExecute to Launch Associated File (16-bit)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147807</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions, 16-bit
   only, for Windows, version 4.0
<LI>Microsoft Visual Basic Standard and Professional Editions for Windows,
   version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the Windows API ShellExecute() function to start the
application associated with a given document extension without knowing the
name of the associated application. For example, you could start the
Paintbrush program by passing the filename ARCADE.BMP to the ShellExecute()
function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ShellExecute function opens or prints the specified file. Following is
the declaration to use when calling this function from Visual Basic:
<P>
<PRE>   Declare Function ShellExecute Lib "SHELL" (ByVal hwnd%, ByVal lpszOp$, _
   ByVal lpszFile$, ByVal lpszParams$, ByVal lpszDir$, ByVal _
   fsShowCmd%) As Integer

</PRE>The table below provides descriptions for each parameter:
<P>
<PRE>Parameter   Description
</PRE> 
<P>
<PRE>hwnd%       Identifies the parent window. This window receives any message
            boxes an application produces (for example, for error
            reporting).
lpszOp$     Points to a null-terminated string specifying the operation to
            perform. This string can be "open" or "print." If this
            parameter is NULL, "open" is the default value.
lpszFile$   Points to a null-terminated string specifying the file to open.
</PRE>lpszParams$ Points to a null-terminated string specifying parameters passed
<PRE>            to the application when the lpszFile parameter specifies an
            executable file. If lpszFile points to a string specifying a
            document file, this parameter is NULL.
lpszDir$    Points to a null-terminated string specifying the default
            directory.
</PRE>fsShowCmd%  Specifies whether the application window is to be shown when
<PRE>            the application is opened. This parameter can be one of the
            values described in the API ShowWindow().

</PRE><h3>Step-by-Step Example</h3>
 
<P>
The following example demonstrates how to start an application or load a
document into its associated application. The Windows API ShellExecute()
function is different from the Visual Basic Shell() function in that you
can pass the ShellExecute() function the name of a document and it will
launch the associated application, and then pass the filename to the
application. In the following code sample, the underscore character, "_",
indicates a continuation of one line of code and must be removed for Visual
Basic 3.0:

<OL><P><LI>Start a New Project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code to the general declarations section of Form1:
  (NOTE: Remove the keyword "PRIVATE" when using Visual Basic 3.0)
<P>
<P><PRE>      Option Explicit
      
      Const SW_SHOWNORMAL = 1
      
      Private Declare Function ShellExecute Lib "shell.dll" (ByVal hwnd%, _
      ByVal lpszOp$, ByVal lpszFile$, ByVal spszParams$, ByVal _
      lpszDir$, ByVal fsShowCmd%) As Integer
      
      Private Declare Function GetDesktopWindow Lib "USER" () As Integer
      
      Function StartDoc(DocName As String) As Integer
<PRE></PRE>         Dim Scr_hDC As Integer
         Scr_hDC = GetDesktopWindow()
         StartDoc = ShellExecute(Scr_hDC, "Open", DocName, "", "C:\", _
         SW_SHOWNORMAL)
      End Function
      
      Sub Form_Click()
         Dim r As Integer
         r = StartDoc("C:\WINDOWS\ARCADE.BMP")
      End Sub

</PRE></OL><h3>General Information About the Process</h3>
 
<P>
If the function succeeds, the return value is the instance handle of the
application that was run. If there was an error, the return value is less
than or equal to 32.
<P>
The file specified by the lpszFile$ parameter can be a document file or an
executable file. If it is a document file, this function opens or prints it
depending on the value of the lpszOp$ parameter. If it is an executable
file, this function can only open it and the lpszOp$ parameter must specify
"OPEN."
<P>
<P><h2>REFERENCES</h2>
 
<P>
<P>
"Programmer's Reference, Volume 2: Functions" of the Microsoft Windows
Software Development Kit (SDK), pages 901-904.
<P>
ShellExecute topic of the Windows 3.1 SDK Help file.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgWindow vb4all vb4win kbprg<BR>
Version             : 3.0 4.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
