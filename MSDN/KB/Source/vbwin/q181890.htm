

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use the Animated Copy Functions in Windows 95 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181890">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1998/02/27">
<META NAME="Keywords" CONTENT="APrgOther vb432 VB4WIN vb5all vb5howto vbwin">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Windows API provides the ability to perform a copy, move, rename, or delete operation on a file system object using the SHFileOperation API function exported by Shell32.dll. This article shows how to copy a list of files into a named folder whi...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBBI,QA9N,QAY5,QASB,QBS0,QAUJ,QAFI,QA01,QBVV,QAK7,QAEF,QAH6,QAFO,QAH4,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use the Animated Copy Functions in Windows 95</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181890</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Windows API provides the ability to perform a copy, move, rename, or
delete operation on a file system object using the SHFileOperation API
function exported by Shell32.dll. This article shows how to copy a list of
files into a named folder while displaying a dialog box with a copy
animation and an animated scroll bar displayed to show the progress of the
copy operation. The article also shows how to create a sample project that
demonstrates how the use of this API function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The SHFileOperation function provides the ability to move, rename, or
delete file system objects based on the flags passed to the function. The
function requires the address of the SHFILEOPSSTRUCT structure. This
structure contains the following members:

<UL><LI>hwnd - Window handle to the dialog box to display information about the
   status of the file operation.

<LI>wFunc - the operation to perform, as defined by one of the following
   values:
<P>
<P><PRE>    - FO_COPY - Copies the files specified in the pFrom member to the
      location specified in the pTo member.
    - FO_DELETE - Deletes the files specified in pFrom. (pTo is ignored.)
    - FO_MOVE - Moves the files specified in pFrom to the location
      specified in pTo.
    - FO_RENAME - Renames the files specified in pFrom.
</PRE>
<LI>pFrom - Address of a buffer to specify one or more source file names.
   Multiple names must be null-separated. The list of names must be double
   null-terminated.

<LI>pTo - Address of a buffer to contain the name of the destination file or
   directory. The buffer can contain multiple destination file names if the
   fFlags member specifies FOF_MULTIDESTFILES. Multiple names must be
   null-separated. The list of names must be double null-terminated.

<LI>fFlags - Flags that control the file operation. This member can be a
   combination of the following flags:
<P>
<P><PRE>    - FOF_ALLOWUNDO - Preserve Undo information, if possible.
    - FOF_CONFIRMMOUSE - Not currently implemented.
    - FOF_FILESONLY - Perform the operation on files only if a wildcard
      file name (*.*) is specified.
    - FOF_MULTIDESTFILES - The pTo member specifies multiple destination
      files (one for each source file) rather than one directory where all
      source files are to be deposited.
    - FOF_NOCONFIRMATION - Respond with Yes to All for any dialog box that
      is displayed.
    - FOF_NOCONFIRMMKDIR - Does not confirm the creation of a new directory
      if the operation requires one to be created.
    - FOF_NOERRORUI - No user interface will be displayed if an error
      occurs.
    - FOF_RENAMEONCOLLISION - Give the file being operated on a new name in
      a move, copy, or rename operation if a file with the target name
      already exists.
    - FOF_SILENT - Does not display a progress dialog box.
    - FOF_SIMPLEPROGRESS - Displays a progress dialog box but does not show
      the file names.
    - FOF_WANTMAPPINGHANDLE - If FOF_RENAMEONCOLLISION is specified, the
      hNameMappings member will be filled in if any files were renamed.
</PRE>
<LI>fAnyOperationsAborted - Value that receives TRUE if the user aborted any
   file operations before they were completed, or FALSE otherwise.

<LI>hNameMappings - Handle to a file name mapping object that contains an
   array of SHNAMEMAPPING structures. Each structure contains the old and
   new path names for each file that was moved, copied, or renamed. This
   member is used only if the fFlags member includes the
   FOF_WANTMAPPINGHANDLE flag. The handle must be freed by using the
   SHFreeNameMappings function.

<LI>lpszProgressTitle - Address of a string to use as the title of a
   progress dialog box. This member is used only if fFlags includes the
   FOF_SIMPLEPROGRESS flag.
<P>
</UL>NOTE: The 32-bit version of Visual Basic aligns structures at double-word
boundaries, but some API functions, such as the SHFileOperation, expect the
data to arrive as byte-aligned. If you pass the SHFILEOPSTRUCT structure
without taking this double-word boundary into consideration, the
fAnyOperationsAborted, hNameMappings, and the lpszProgressTitle members of
the structure will not be passed correctly. If you want the copy dialog box
to contain a custom message string as defined by the lpszProgressTitle
member, use a byte array to work around this limitation. The use of a byte
array is demonstrated in the sample project.
<P>
The next section shows you how to create a sample project that demonstrates
how to use the SHFileOperation function to copy the Visual Basic executable
file and a Help file to a test folder. The sample project also shows you
how to display a custom message string in the dialog box that displays the
progress information.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new Standard EXE project in Visual Basic. Form1 is created by
   default.

<P><LI>Add the two check boxes and on CommandButton to the Form1 form.

<P><LI>Copy the following code to the Code window of the Form1 form:
<P>
   Option Explicit
   
<PRE>         Private Const FO_COPY = &amp;H2&amp;   'Copies the files specified
                                        'in the pFrom member to the
                                        'location specified in the
                                        'pTo member.
                                       
         Private Const FO_DELETE = &amp;H3&amp; 'Deletes the files specified
                                        'in pFrom (pTo is ignored.)
   
         Private Const FO_MOVE = &amp;H1&amp;   'Moves the files specified
                                        'in pFrom to the location
                                        'specified in pTo.
                                       
         Private Const FO_RENAME = &amp;H4&amp; 'Renames the files
                                        'specified in pFrom.
   
         Private Const FOF_ALLOWUNDO = &amp;H40&amp;   'Preserve Undo information.
   
         Private Const FOF_CONFIRMMOUSE = &amp;H2&amp; 'Not currently implemented.
   
         Private Const FOF_CREATEPROGRESSDLG = &amp;H0&amp; 'handle to the parent
                                                    'window for the
                                                    'progress dialog box.
   
         Private Const FOF_FILESONLY = &amp;H80&amp;        'Perform the operation
                                                    'on files only if a
                                                    'wildcard file name
                                                    '(*.*) is specified.
   
         Private Const FOF_MULTIDESTFILES = &amp;H1&amp;    'The pTo member
                                                    'specifies multiple
                                                    'destination files (one
                                                    'for each source file)
                                                    'rather than one
                                                    'directory where all
                                                    'source files are
                                                    'to be deposited.
   
         Private Const FOF_NOCONFIRMATION = &amp;H10&amp;   'Respond with Yes to
                                                    'All for any dialog box
                                                    'that is displayed.
   
         Private Const FOF_NOCONFIRMMKDIR = &amp;H200&amp;  'Does not confirm the
                                                    'creation of a new
                                                    'directory if the
                                                    'operation requires one
                                                    'to be created.
   
         Private Const FOF_RENAMEONCOLLISION = &amp;H8&amp; 'Give the file being
                                                    'operated on a new name
                                                    'in a move, copy, or
                                                    'rename operation if a
                                                    'file with the target
                                                    'name already exists.
   
         Private Const FOF_SILENT = &amp;H4&amp;            'Does not display a
                                                    'progress dialog box.
   
         Private Const FOF_SIMPLEPROGRESS = &amp;H100&amp;  'Displays a progress
                                                    'dialog box but does
                                                    'not show the
                                                    'file names.
   
         Private Const FOF_WANTMAPPINGHANDLE = &amp;H20&amp;
                                   'If FOF_RENAMEONCOLLISION is specified,
                                   'the hNameMappings member will be filled
                                   'in if any files were renamed.
   
         ' The SHFILOPSTRUCT is not double-word aligned. If no steps are
         ' taken, the last 3 variables will not be passed correctly. This
         ' has no impact unless the progress title needs to be changed.
   
         Private Type SHFILEOPSTRUCT
            hwnd As Long
            wFunc As Long
            pFrom As String
            pTo As String
            fFlags As Integer
            fAnyOperationsAborted As Long
            hNameMappings As Long
            lpszProgressTitle As String
         End Type
   
         Private Declare Sub CopyMemory Lib "KERNEL32" _
               Alias "RtlMoveMemory" _
               (hpvDest As Any, _
               hpvSource As Any, _
               ByVal cbCopy As Long)
   
         Private Declare Function SHFileOperation Lib "Shell32.dll" _
               Alias "SHFileOperationA" _
               (lpFileOp As Any) As Long
   
         Private Sub Form_Load()
            Check1.Caption = "Copy All Files in VB Directory"
            Check2.Caption = "Display Custom Message"
            Command1.Caption = "Copy Files"
         End Sub
   
         Private Sub Command1_Click()
            Dim result As Long
            Dim lenFileop As Long
            Dim foBuf() As Byte
            Dim fileop As SHFILEOPSTRUCT
   
            lenFileop = LenB(fileop)    ' double word alignment increase
            ReDim foBuf(1 To lenFileop) ' the size of the structure.
   
            With fileop
               .hwnd = Me.hwnd
   
               .wFunc = FO_COPY
   
               ' The files to copy separated by Nulls and terminated by two
               ' nulls
               If Check1.Value = vbChecked Then
                  .pFrom = "C:\Program Files\DevStudio\VB\*.*" &amp; vbNullChar
   _
                                                             &amp; vbNullChar
                  .fFlags = FOF_SIMPLEPROGRESS Or FOF_FILESONLY
               Else
                  .pFrom = "C:\PROGRAM FILES\DEVSTUDIO\VB\VB5.EXE" _
                           &amp; vbNullChar _
                           &amp; "C:\PROGRAM FILES\DEVSTUDIO\VB\README.HLP" _
                           &amp; vbNullChar _
                           &amp; vbNullChar
               End If
   
               .pTo = "C:\testfolder\" &amp; vbNullChar &amp; vbNullChar
   
               If Check2.Value = vbChecked Then
                  .fFlags = FOF_SIMPLEPROGRESS Or FOF_NOCONFIRMATION Or _
                            FOF_NOCONFIRMMKDIR
                  .lpszProgressTitle = "Your custom dialog string " &amp; _
                                       "appears here." &amp; vbNullChar _
                                                       &amp; vbNullChar
               End If
            End With
   
            ' Now we need to copy the structure into a byte array
            Call CopyMemory(foBuf(1), fileop, lenFileop)
   
            ' Next we move the last 12 bytes by 2 to byte align the data
            Call CopyMemory(foBuf(19), foBuf(21), 12)
            result = SHFileOperation(foBuf(1))
   
            If result &lt;&gt; 0 Then  ' Operation failed
               MsgBox Err.LastDllError 'Show the error returned from
                                       'the API.
               Else
               If fileop.fAnyOperationsAborted &lt;&gt; 0 Then
                  MsgBox "Operation Failed"
               End If
            End If
         End Sub
   
</PRE></OL>4. On the Run menu, click Start or press the F5 key to start the program.
<PRE>   Click Copy Files to start the copy process. To copy all the files in the
   Visual Basic program directory, check Copy All Files in VB Directory. To
   show where a custom message will display in the dialog box that shows
   the copy progress, check Display Custom Message.

   NOTE: On faster machines the dialog may not be displayed because the
   copy Operation completes before the dialog is shown. Select the Copy All
   Files option to guarantee that the dialog will be displayed.

</PRE><h2>REFERENCES</h2>
 
<P>
SHFileOperation and SHFILEOPSTRUCT in the Platform SDK product
documentation
<P>
Err Object topic in the Microsoft Visual Basic Language Reference
 
<PRE>Keywords          : APrgOther vb432 VB4WIN vb5all vb5howto vbwin
Version           : WINDOWS:4.0,5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
