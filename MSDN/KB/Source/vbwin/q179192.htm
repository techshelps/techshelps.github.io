

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Limit Cursor Movement Inside a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179192">
<META NAME="KBModify" CONTENT="1998/01/13">
<META NAME="KBCreate" CONTENT="1998/01/12">
<META NAME="Keywords" CONTENT="vb5all vb5howto VBKBGraphics VBKBWinAPI">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The ClipCursor API function allows you to limit cursor movement to a predefined area, such as a form. This article includes instructions and sample code to create a project that uses the ClipCursor API function.  MORE INFORMATION  You might want to...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABN,QAY5,QAO2,QAFF,QARL,QBV8,QAJB,QAB9,QABK,QAWE,QBS0,QBC9,QBC8,QANO,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Limit Cursor Movement Inside a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 13, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179192</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ClipCursor API function allows you to limit cursor movement to a
predefined area, such as a form. This article includes instructions and
sample code to create a project that uses the ClipCursor API function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You might want to limit the cursor movement area if you have drag-and-drop
functionality within a form and you only want the user to drag an item
inside a form.
<P>
The ClipCursor function confines the cursor to a rectangular area on the
screen. If a subsequent cursor position (set by the SetCursorPos function
or the mouse) lies outside the rectangle, Windows automatically adjusts the
position to keep the cursor inside the rectangular area.
<P>
The form borders serve as the rectangular area for the ClipCursor function.
To get the size of the form, use the GetClientRect function. This function
retrieves the coordinates of a window's client area. The coordinates are
relative to the upper-left corner of a window's client area; the
coordinates of the upper-left corner are (0,0). This means you will have to
convert the client coordinates to screen coordinates.
<P>
The ClientToScreen function converts the client coordinates of a specified
point to screen coordinates. The last function used is the OffsetRect
function. The OffsetRect function moves the specified rectangle by the
specified offsets.
<P>
NOTE: If you unload the form after executing the ClipCursor function, the
cursor will still be limited to the last coordinates of the now-unloaded
form. To prevent this behavior, calling the ClipCursor function with a null
argument in the Form_Unload event is recommended.
<P>
The next section shows you how to create a sample project that uses these
functions.
<P>
<P><h3>Steps to Create Project</h3>
 

<OL><P><LI>Start a new Standard EXE project in Visual Basic. Form1 is created by
   default.

<P><LI>Add two CommandButtons to Form1.

<P><LI>Copy the following code to the Code window of Form1:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Type RECT
<PRE></PRE>         left As Integer
         top As Integer
         right As Integer
         bottom As Integer
      End Type

      Private Type POINT
         x As Long
         y As Long
      End Type

      Private Declare Sub ClipCursor Lib "user32" (lpRect As Any)
      Private Declare Sub GetClientRect Lib "user32" _
                                            (ByVal hWnd As Long, _
                                             lpRect As RECT)
      Private Declare Sub ClientToScreen Lib "user32" _
                                            (ByVal hWnd As Long, _
                                             lpPoint As POINT)
      Private Declare Sub OffsetRect Lib "user32" (lpRect As RECT, _
                                          ByVal x As Long, _
                                          ByVal y As Long)

      Private Sub Form_Load()
         Command1.Caption = "Limit Cursor Movement"
         Command2.Caption = "Release Limit"
      End Sub

      Private Sub Command1_Click()
      'Limits the Cursor movement to within the form.
         Dim client As RECT
         Dim upperleft As POINT

         GetClientRect Me.hWnd, client
         upperleft.x = client.left
         upperleft.y = client.top
         ClientToScreen Me.hWnd, upperleft
         OffsetRect client, upperleft.x, upperleft.y
         ClipCursor client
      End Sub

      Private Sub Command2_Click()
      'Releases the cursor limits
         ClipCursor ByVal 0&amp;
      End Sub

      Private Sub Form_Unload(Cancel As Integer)
      'Releases the cursor limits
         ClipCursor ByVal 0&amp;
      End Sub

</PRE><P><LI>On the Run menu, click Start or press the F5 key to start the program.
   Click "Limit Cursor Movement" and note that the cursor is limited to the
   borders of the form. Click "Release Limit" and the cursor can move
   anywhere on the screen.
</OL> 
<PRE>Keywords          : vb5all vb5howto VBKBGraphics VBKBWinAPI
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 13, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
