

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determine if the Windows95 Taskbar is Visible/Hidden </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143117">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1996/01/28">
<META NAME="Keywords" CONTENT="PrgOther vb432 vb4win vb5all vb5howto kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Windows 95 taskbar allows you to easily launch Windows application programs and to determine which applications are currently executing. The taskbar can also display status information, such as the current time. This article will explain how yo...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANS,QBS0,QBW8,QBWQ,QBT6,QAH4,QBV4,QDL9,QBWO,QBWN,QAY5,QAPN,QAHP,QADK,QAEV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determine if the Windows95 Taskbar is Visible/Hidden</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143117</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
<LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 32-bit Editions, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Windows 95 taskbar allows you to easily launch Windows application
programs and to determine which applications are currently executing. The
taskbar can also display status information, such as the current time. This
article will explain how you can determine, from within a Visual Basic
program, if the taskbar is visible or hidden.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Windows 95 Taskbar</h3>
 
<P>
The taskbar in Windows 95 is an area of the screen that contains icons that
let you easily switch from one application to another, launch new
applications, or display status information.
<P>
You can customize certain aspects of the taskbar. From the Start menu,
select Settings/Taskbar. Windows 95 will display the current settings for
the taskbar. For example, if you set the AutoHide option, the taskbar is
always hidden from view. To see the taskbar, you simply move the mouse
pointer over that area of the screen where the taskbar is located. The
taskbar immediately pops into view.
<P>
In a Visual Basic program, you can use the SHAppBarMessage function to
determine if the taskbar is visible or hidden. To use the SHAppBarMessage
function in your program, you must include the following declare statement
in the general declarations section of your program:
<P>
<PRE>   Private Declare Function SHAppBarMessage Lib "shell32.dll" (ByVal
   dwMessage As Long, pData As APPBARDATA) As Long

</PRE>The SHAppBarMessage function requires two arguments. The first argument
identifies the appbar message you want to send. The dwMessage argument may
be set to one of the following values:
<P>
<PRE>Value                 Description
</PRE> 
<P>
<PRE>ABM_ACTIVATE          Notifies the system that an appbar has been
                      activated.
ABM_GETAUTOHIDEBAR    Retrieves the handle of the autohide appbar
                      associated with a particular edge of the screen
ABM_GETSTATE          Retrieves the autohide and always-on-top states of
                      the windows taskbar
ABM_GETTASKBARPOS     Retrieves the bounding rectangle of the Windows
                      taskbar.
ABM_NEW               Registers a new appbar and specifies the message
                      identifier that the system should use to send
                      notification messages to the appbar.
ABM_QUERYPOS          Requests a size and screen position for an appbar
ABM_REMOVE            Unregisters an appbar, removing bar from the
                      system's internal list
ABM_SETAUOTOHIDEBAR   Registers or unregisters an autohide appbar for an
                      edge of the screen
ABM_SETPOS            Sets the size and screen position of an appbar
</PRE>ABM_WINDOWPOSCHANGED  Notifies the system when an appbar's position has
<PRE>                      changed

</PRE>The second argument required by the SHAppBarMessage function is a pointer
to an APPBARDATA structure. The actual contents of this structure depends
on the message you send to the system. Because you are retrieving the state
of the taskbar, you do not need set any of the fields in the APPBARDATA
structure. Just set the dwMessage argument to the constant value
ABM_GETSTATE to retrieve the current state of the taskbar.
<P>
After you call the SHAppBarMessage function, a value is returned indicating
the state of the taskbar. If this value is zero, you know the taskbar is
not in auto-hide or always-on-top mode. If the value returned is &amp;H1, the
taskbar is in auto-hide mode and if the value returned is &amp;H2, the taskbar
is in always-on-top mode.
<P>
<P><h3>How to Create the Demonstration Program</h3>
 
<P>
The demonstration program below shows how to determine if the taskbar in
Windows 95 is visible or hidden.

<OL><P><LI>Create a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following constant and declare statements to the general
   declarations section of Form1:
<P>
<P><PRE>      Private Declare Function SHAppBarMessage Lib "shell32.dll" (ByVal _
      dwMessage As Long, pData As APPBARDATA) As Long
      Const ABS_ALWAYSONTOP = &amp;H2
      Const ABS_AUTOHIDE = &amp;H1
      Const ABM_GETSTATE = &amp;H4
</PRE>
<P><LI>Add a CommandButton control to Form1.

<P><LI>Add the following code to the Click event for Command1:
   
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>          Dim IsThere As Integer
   
          IsThere = BarExists()
          If IsThere = 0 Then
              Text1.Text = "TaskBar not in auto-hide or always-on-top mode"
          End If
          If IsThere = ABS_ALWAYSONTOP Then
              Text1.Text = "TaskBar always-on-top"
          End If
          If IsThere = ABS_AUTOHIDE Then
              Text1.Text = "TaskBar in auto-hide"
          End If
      End Sub

</PRE><P><LI>Create a new function called BarExists. Add the following code to the
   General Declarations section of Form1.
<P>
<P><PRE>      Public Function BarExists() As Integer
<PRE></PRE>          Dim Bardata As APPBARDATA
          BarExists = SHAppBarMessage(ABM_GETSTATE, Bardata)
      End Function

</PRE><P><LI>Add a Text Box control to Form1. Set its MultiLine property to True.

<P><LI>Add a new Module to the project.

<P><LI>Add the following Type structures to Module1.Bas:
<P>
<P><PRE>      Type RECT
<PRE></PRE>              Left As Long
              Top As Long
              Right As Long
              Bottom As Long
      End Type
      Type APPBARDATA
              cbSize As Long
              hwnd As Long
              uCallbackMessage As Long
              uEdge As Long
              rc As RECT
              lParam As Long '  message specific
      End Type

</PRE></OL>Execute the demonstration program by pressing the F5 key. Click on the
Command Button. If the Windows 95 taskbar is visible on the screen, a
message to that effect is displayed in the Text Box. On the other hand, if
the taskbar is currently hidden, the Text Box will display the text
"Taskbar is auto-hide." If both the Auto-Hide and Always-on-Top properties
of the taskbar are not set, then the Text Box will display the message
"Taskbar is not in auto-hide or always-on-top mode."
<P>
<P><h2>REFERENCES</h2>
 
<P>
Product Documentation, SDKs, Win32 SDK, Win32, Reference, Messages.
ABM_GETSTATE.
<P>
Product Documentation, SDKs, Win32 SDK, Win32, Reference, Structures,
ABC to CWPRETSTRUCT. APPBARDATA.
<P>
Product Documentation, SDKs, Win32 SDK, Guides, Programmer's Guide to
Windows 95.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: task bar auto hide vb5howto<BR>
Keywords            : PrgOther vb432 vb4win vb5all vb5howto kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
