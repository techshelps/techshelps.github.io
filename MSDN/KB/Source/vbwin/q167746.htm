

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Arrange Order of List Items within ListBox Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q167746">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1997/04/29">
<META NAME="Keywords" CONTENT="kbcode vb4all vb4win vb5all vb5howto kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article contains sample code that illustrates how to arrange the order of items within ListBox Control using drag-and-drop. Function ListRowCalc() returns the list index by calculating the position using the Windows API SendMessage() function ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA4Q,QBVR,QAFF,QAMN,QAH4,QA7O,QAY5,QAOE,QAB5,QACI,QBE7,QBE6,QA9N,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Arrange Order of List Items within ListBox Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q167746</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Enterprise Edition for Windows, version 5.0
<LI>Microsoft Visual Basic Professional and Enterprise Editions, 16-bit and
   32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains sample code that illustrates how to arrange the order
of items within ListBox Control using drag-and-drop. Function ListRowCalc()
returns the list index by calculating the position using the Windows API
SendMessage() function with the constant LB_GETITEMHEIGHT and
Screen.TwipsPerPixelY. Sub ListRowMove inserts the dragged item into the
dropped position and re-orders all other affected items.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a module to the project. The default is Module1.

<P><LI>Paste the following code into the General Declarations section of
   Module1:
<P>
<P><PRE>    #If Win16 Then
      Declare Function SendMessage&amp; Lib "User" (ByVal hWnd%, ByVal _
<PRE></PRE>                                  wMsg%, ByVal wParam%, lParam As Any)
    #Else
      Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
                     (ByVal hWnd As Long, ByVal wMsg As Long, _
                      ByVal wParam As Long, lParam As Long) As Long
    #End If

    Function ListRowCalc(lstTemp As Control, ByVal Y As Single) As Integer
       #If Win16 Then
           Const WM_USER = &amp;H400
           Const LB_GETITEMHEIGHT = (WM_USER + 34)
       #Else
           Const LB_GETITEMHEIGHT = &amp;H1A1
           'Determines the height of each item in ListBox control in pixels
       #End If
       Dim ItemHeight As Integer
       ItemHeight = SendMessage(lstTemp.hWnd, LB_GETITEMHEIGHT, 0, 0)
       ListRowCalc = min(((Y / Screen.TwipsPerPixelY)\ItemHeight)+ _
                     lstTemp.TopIndex, lstTemp.ListCount - 1)
    End Function

    Function min(X As Integer, Y As Integer) As Integer
         If X &gt; Y Then min = Y Else min = X
    End Function

    Sub ListRowMove(lstTemp As Control, ByVal OldRow As Integer, _
                    ByVal NewRow As Integer)
        Dim SaveList As String, i As Integer

        If OldRow = NewRow Then Exit Sub
        SaveList = lstTemp.List(OldRow)
        If OldRow &gt; NewRow Then
           For i = OldRow To NewRow + 1 Step -1
               lstTemp.List(i) = lstTemp.List(i - 1)
           Next i
        Else
           For i = OldRow To NewRow - 1
               lstTemp.List(i) = lstTemp.List(i + 1)
           Next i
        End If
        lstTemp.List(NewRow) = SaveList
    End Sub

</PRE><P><LI>Add a ListBox Control (List1) to Form1.

<P><LI>Clear all the code for Form1, and then paste the following code into the
   General Declarations section of Form1:
<P>
<P><PRE>    Dim DragIndex As Integer
</PRE><P>
<P><PRE>    Private Sub Form_Load()
<PRE></PRE>        List1.Clear
        List1.AddItem "Adam"
        List1.AddItem "Bob"
        List1.AddItem "Charles"
        List1.AddItem "David"
        List1.AddItem "Eric"
        List1.AddItem "Frank"
        List1.AddItem "George"
    End Sub

    Private Sub List1_DragDrop(Source As Control, X As Single, Y As Single)
        ListRowMove Source, DragIndex, ListRowCalc(Source, Y)
    End Sub

    Private Sub List1_MouseDown(Button As Integer, Shift As Integer, _
                               X As Single, Y As Single)
        If Button = vbRightButton Then
            DragIndex = ListRowCalc(List1, Y)
            List1.Drag
        End If
    End Sub

</PRE><P><LI>Assign an icon file to the DragIcon property of List1. Icon files are
   shipped with Visual Basic 4.0 under \ICONS directory.

<P><LI>From the Run menu, choose Start to run the program. Drag-and-drop any
   list item in List1 using the right-mouse button. The order of list
   items should be re-arranged accordingly.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information on how to drag-and-drop onto a list box, please
see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q80187.htm">Q80187</A></B>
   TITLE     : How to Drop Item into Specified Location in VB List Box

</PRE></OL>(c) Microsoft Corporation 1997, All Rights Reserved.
Contributions by Adrian Chiang, Microsoft Corporation.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbcode vb4all vb4win vb5all vb5howto kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
