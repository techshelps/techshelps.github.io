

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Initialize Static Variables to Nonzero Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119737">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/08/22">
<META NAME="Keywords" CONTENT="kbprg  kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Normally in Visual Basic, when a static variable is declared inside a Function or Sub procedure, it gets initialized to 0 (numeric data type) or an empty string,    (string data type), by default. This article shows a way to initialize these variab...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAYL,QAFF,QAKD,QAH4,QAGI,QAUD,QABA,QAMA,QATX,QAB9,QA5F,QAHT,QAY5,QAG1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Initialize Static Variables to Nonzero Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119737</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
<LI>Microsoft Visual Basic Programming System for Windows, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Normally in Visual Basic, when a static variable is declared inside a
Function or Sub procedure, it gets initialized to 0 (numeric data type) or
an empty string, "" (string data type), by default. This article shows a
way to initialize these variables to values other than the default.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When a variant variable is first declared, it is initialized with the EMPTY
value by default. The idea here is to take advantage of this fact, by
testing a dummy variant static variable with the IsEmpty function and
initializing the other static variables to the values you want if this
function returns TRUE. It is important to set the dummy variant to some
value after you initialize your static variables, so that IsEmpty always
returns FALSE for subsequent calls to the subroutine, and that because of
this the other static variables are not reinitialized.
<P>
Here is an example that shows how to initialize a static variant, integer,
and string variable declared in a Sub called InitStatic:
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>On Form1, add a command button (Command1).

<P><LI>Add the following code to the "(general) (declarations)" section of
   Form1:
<P>
<PRE>   Sub initstatic ()
      Static Dummy, V, I As Integer, S As String

      ' The code in the following if statement will be executed only once:
      If IsEmpty(Dummy) Then
         ' Initialize the dummy variant, so that IsEmpty returns FALSE for
         ' subsequent calls.
         Dummy = 0

         ' Initialize the other static variables.
         V = "Great"
         I = 7
         S = "Visual Basic"
      End If

      Print "V="; V, "I="; I, "S="; S

      ' Static variables will retain their values over calls when changed.
      V = 7
      I = I + 7
      S = Right$(S, 5)
   End Sub

</PRE><P><LI>Add the following code to the Command1_Click() event:
<P>
<PRE>   Sub Command1_Click()
      initstatic
   End Sub

</PRE><P><LI>Run the program (press the F5 key). Then double-click the Command1
   button to see the results.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
