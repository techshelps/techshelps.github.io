

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error in loading DLL When LIBRARY &amp; File Names Different </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98309 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/05/03">
<META NAME="Keywords" CONTENT="kbenv kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The  Error in loading DLL  error message occurs if you call a DLL and the LIBRARY name of the DLL is different from the filename.  STATUS ======  This behavior is by design. Visual Basic ensures that the LIBRARY name and filename of a DLL match. If...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAVW,QAVX,QAB4,QDNN,QAH4,QAGI,QBHQ,QAAP,QAUJ,QAY2,QAMA,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error in loading DLL When LIBRARY &amp; File Names Different</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98309 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The "Error in loading DLL" error message occurs if you call a DLL and
the LIBRARY name of the DLL is different from the filename.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design. Visual Basic ensures that the LIBRARY name and
filename of a DLL match. If they don't match, Visual Basic generates the
"Error in loading DLL" error.
<P>
Visual Basic version 3.0 does not require that the LIBRARY name and the
filename be the same for a DLL. However, unless you are designing a DLL
specifically to be called from Visual Basic version 3.0 or some other
application not written using Visual Basic, we recommend that you use the
same name for both the LIBRARY name and filename of a DLL.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When creating a Windows DLL, you must specify the LIBRARY name of the
DLL in the module-definition (.DEF) file for the DLL. In order to call
any procedure contained within the DLL from Visual Basic, the LIBRARY
name given in the module-definition file must be the same as the
filename for the DLL.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
Perform the following steps to build a DLL that will lead to a "Error
in loading DLL" error when called from Visual Basic. To build the
following application, you will need to use a C compiler capable of
creating Windows Dynamic Link Libraries (DLLs).

<OL><P><LI> Create a C source code file that contains the following code and
<P><PRE>    save the file as TEST.C.
</PRE><P>
<P><PRE>    #include &lt;windows.h&gt;
</PRE><P>
<P><PRE>    VOID FAR PASCAL test ( VOID );
    VOID FAR PASCAL test ( VOID )
    {
       //The contents of any procedure in the DLL is not important
       //Define this procedure to be called from Visual Basic
       return;
    }
</PRE><P>
<P><PRE>    //----------------------------------------------------------------
    // Initialize library. This routine is called when the first
    // client loads
    // the DLL.
    //----------------------------------------------------------------
    int FAR PASCAL LibMain
    (
       HANDLE hModule,
<PRE></PRE>       WORD   wDataSeg,
       WORD   cbHeapSize,
       LPSTR  lpszCmdLine
    )
    {
       // Avoid warnings on unused (but required) formal parameters
       wDataSeg = wDataSeg;
       cbHeapSize = cbHeapSize;
       lpszCmdLine = lpszCmdLine;

       return 1;
    }

    //----------------------------------------------------------------
    // WEP
    //----------------------------------------------------------------
    int FAR PASCAL WEP(int fSystemExit);

    //----------------------------------------------------------------
    // Performs cleanup tasks when the DLL is unloaded.  WEP() is
    // called automatically by Windows when the DLL is unloaded (no
    // remaining tasks still have the DLL loaded).  It is strongly
    // recommended that a DLL have a WEP() function, even if it does
    // nothing but returns success (1), as in this example.
    //----------------------------------------------------------------
    int FAR PASCAL WEP
    (
        int fSystemExit
    )
    {
        // Avoid warnings on unused (but required) formal parameters
        fSystemExit = fSystemExit;

        return 1;
    }

</PRE><P><LI> Create a module-definition file (DEF) file that contains the
<P><PRE>    following code and save the file as TEST.DEF.
</PRE><P>
   LIBRARY DIFFNAME
<P>
   DESCRIPTION 'Sample DLL where LIBRARY name != filename'
<P>
   EXETYPE WINDOWS
<P>
   CODE PRELOAD MOVEABLE DISCARDABLE
   DATA PRELOAD SINGLE MOVEABLE
<P>
   EXPORTS
<P><PRE>      WEP @1 RESIDENTNAME
      TEST @2
</PRE>
<P><LI>Compile TEST.C from the command line as follows:
<P>
<P><PRE>      CL /c /ASw /W3 TEST.C
</PRE>
<P><LI>Link the resulting TEST.OBJ file as follows:
<P>
<P><PRE>      LINK /NOE /NOD TEST.OBJ+LIBENTRY.OBJ,TEST.DLL,,LIBW+SDLLCEW,TEST.DEF;
</PRE>
<P><LI>Copy TEST.DLL to the Windows directory.

<P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add the following code to the general declarations section of Form1:
<P>
<P><PRE>      Declare Sub Test Lib "TEST.DLL" ()
</PRE>
<P><LI>Add the following code to the Form_Load event of Form1:
<P>
<PRE>      Sub Form_Load ()
         Call TEST
      End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S) or press the F5 key to run
   the program.
<P>
</OL>Execution will break on the Call statement in the Form_Load event, and you
will receive the error "Error in loading DLL."
<P>
To avoid this error, change the LIBRARY name in TEST.DEF, under step 2,
from DIFFNAME to TEST. Then do step 4 to link in the new module-definition
file. Follow steps 5 through 8 again and you should no longer see the
"Error in loading DLL" error message.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbenv kbprg kbprb<BR>
KBSubcategory: EnvtRun<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
