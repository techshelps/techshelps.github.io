

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Call Clipboard API from Visual Basic 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159823">
<META NAME="KBModify" CONTENT="1997/08/13">
<META NAME="KBCreate" CONTENT="1996/11/21">
<META NAME="Keywords" CONTENT="APrgWindow VB4ALL VB4WIN kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article contains sample code that illustrates how to call Windows Clipboard API to copy a disk metafile to the Windows Clipboard using the 16-bit and 32-bit versions of Visual Basic 4.0. The code in the article can also be used to work around ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QAY5,QANH,QBS0,QACJ,QAB9,QBV8,QAH4,QANF,QAFF,QA2P,QARM,QA9N,QAH2,QA0K V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Call Clipboard API from Visual Basic 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159823</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains sample code that illustrates how to call Windows
Clipboard API to copy a disk metafile to the Windows Clipboard using
the 16-bit and 32-bit versions of Visual Basic 4.0. The code in the article
can also be used to work around a bug in the SetData method of the Visual
Basic Clipboard object. The workaround replaces the SetData method you use
when you copy a disk metafile to clipboard.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following statement loads a metafile from a disk and copies it to the
Windows Clipboard:
<P>
<PRE>   'DiskMetaFileName is the path to a WMF file on the disk.
   Clipboard.SetData LoadPicture(DiskMetaFileName), vbCFMetafile

</PRE>The metafile is successfully copied to the Clipboard. However, the metafile
size in the y dimension suggested in the disk metafile is ignored, and is
set to match the suggested size in the x dimension. You can reproduce the
bug by using the following code fragment with an Image control (Image1) on
the form:
<P>
<PRE>   Clipboard.Clear                        ' Clear Clipboard.
   Clipboard.SetData LoadPicture(DiskMetaFileName), vbCFMetafile
   Image1.Stretch = False   'Resize the control to fit the graphics
   Image1.Picture = Clipboard.GetData(vbCFMetafile) 'Copy from Clipboard
   Debug.Print Image1.Width, Image1.Height

</PRE>NOTE: Image1.Width is always the same as Image1.Height.
<P>
The sample code in this article provides a subroutine, SetMetaToClp, that
works around the bug by directly calling Windows API.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start Visual Basic 4.0. If it is already running, choose New Project
   from the File menu. Form1 is created by default.

<P><LI>Add two CommandButtons, Command1 and Command2, to Form1.

<P><LI>Add one Image control, Image1, to Form1.

<P><LI>Clear all the code for Form1, and then paste the following code to the
   code window of Form1:
<P>
<PRE>'Please change the path so that it points to a valid metafile.
</PRE></OL>Private Const strFileName = "d:\vb4\metafile\arrows\Smallarw.wmf"
<P>
<PRE>Private Sub Command1_Click()
    Clipboard.Clear                ' Clear Clipboard.
    Clipboard.SetData LoadPicture(strFileName), vbCFMetafile
    Image1.Stretch = False
    Image1.Picture = Clipboard.GetData(vbCFMetafile) 'Copy from Clipboard
    Debug.Print Image1.Width, Image1.Height
'Image1.Width is always the same as Image1.Height. Bug!
End Sub

Private Sub Command2_Click()
    Clipboard.Clear                       ' Clear Clipboard.
    SetMetaToClp strFileName
    Image1.Stretch = False
    Image1.Picture = Clipboard.GetData(vbCFMetafile) 'Copy from Clipboard
    Debug.Print Image1.Width, Image1.Height
'Image1.Width and Image1.Height now display the metafile size suggested
'in the disk metafile
End Sub

</PRE><P><LI>Insert a module, Module1, into the project. Copy and paste the following
   code to Module1:
<P>
</OL>Public Const OFS_MAXPATHNAME = 128
Public Const OF_READ = &amp;H0
Public Const GMEM_SHARE = &amp;H2000
Public Const GMEM_MOVEABLE = &amp;H2
Public Const GMEM_ZEROINIT = &amp;H40
Public Const GHND = (GMEM_MOVEABLE Or GMEM_ZEROINIT)
Public Const HFILE_ERROR = &amp;HFFFF
<P>
Type OFSTRUCT
<PRE>        cBytes As Byte
        fFixedDisk As Byte
        nErrCode As Integer
        Reserved1 As Integer
        Reserved2 As Integer
        szPathName(OFS_MAXPATHNAME) As Byte
</PRE></OL>End Type
<P>
Type RECT
<PRE>        Left As Integer
        Top As Integer
        Right As Integer
        Bottom As Integer
</PRE>End Type
<P>
Type APMFILEHEADER
<PRE>    key As Long
    hmf As Integer
    bbox As RECT
    inch As Integer
    reserved As Long
    checksum As Integer
</PRE>End Type
<P>
#If Win16 Then
<PRE>  Type METAHEADER
        mtType As Integer
        mtHeaderSize As Integer
        mtVersion As Integer
        dummy1 As Integer
        mtSize As Long
        mtNoObjects As Integer
        dummy2 As Integer
        mtMaxRecord As Long
        mtNoParameters As Integer
  End Type

  Type METAFILEPICT
    mm As Integer
    xExt As Integer
    yExt As Integer
    hmf As Integer
  End Type
</PRE>#Else
<PRE>  Type METAHEADER
        mtType As Integer
        mtHeaderSize As Integer
        mtVersion As Integer
        mtSize As Long
        mtNoObjects As Integer
        mtMaxRecord As Long
        mtNoParameters As Integer
  End Type

  Type METAFILEPICT
    mm As Long
    xExt As Long
    yExt As Long
    hmf As Long
  End Type
</PRE>#End If
<P>
#If Win16 Then
<PRE>Declare Function OpenClipboard Lib "User" (ByVal hwnd As Integer) _
    As Integer
Declare Function CloseClipboard Lib "User" () As Integer
Declare Function EmptyClipboard Lib "User" () As Integer
Declare Function SetClipboardData Lib "User" (ByVal wFormat As _
    Integer, ByVal hMem As Integer) As Integer
Declare Function GlobalAlloc Lib "Kernel" (ByVal wFlags As Integer, _
    ByVal dwBytes As Long) As Integer
Declare Function GlobalLock Lib "Kernel" (ByVal hMem As Integer) As Long
Declare Function GlobalUnlock Lib "Kernel" (ByVal hMem As _
</PRE>Integer) As Integer
<PRE>Declare Function GlobalFree Lib "Kernel" (ByVal hMem As Integer) _
</PRE>As Integer
<PRE>Declare Sub CopyMemory Lib "Kernel" Alias "hmemcpy" (hpvDest As Any, _
    ByVal hpvSource As Long, ByVal cbCopy As Long)
Declare Sub CopyMemory2 Lib "Kernel" Alias "hmemcpy" (ByVal hpvDest _
    As Long, hpvSource As Any, ByVal cbCopy As Long)
Declare Function OpenFile Lib "Kernel" (ByVal lpFileName As String, _
    lpReOpenBuff As OFSTRUCT, ByVal wStyle As Integer) As Integer
Declare Function llseek Lib "Kernel" Alias "_llseek" (ByVal hFile As _
    Integer, ByVal lOffset As Long, ByVal iOrigin As Integer) As Long
Declare Function lread Lib "Kernel" Alias "_lread" (ByVal hFile As _
</PRE>Integer, lpBuffer As Any, ByVal wBytes As Integer) As Integer
<PRE>Declare Function lread2 Lib "Kernel" Alias "_lread" (ByVal hFile As _
    Integer, ByVal lpBuffer As Long, ByVal wBytes As Integer) As Integer
Declare Function hread2 Lib "Kernel" Alias "_hread" (ByVal hFile As _
    Integer, ByVal lpBuffer As Long, ByVal wBytes As Long) As Long
Declare Function lclose Lib "Kernel" Alias "_lclose" (ByVal hFile As _
    Integer) As Integer
Declare Function SetMetaFileBits Lib "GDI" (ByVal hMem As _
</PRE>Integer) As Integer
#Else
<PRE>Declare Function OpenClipboard Lib "user32" (ByVal hwnd As Long) As Long
Declare Function CloseClipboard Lib "user32" () As Long
Declare Function EmptyClipboard Lib "user32" () As Long
Declare Function SetClipboardData Lib "user32" (ByVal wFormat As Long, _
    ByVal hMem As Long) As Long
Declare Function GlobalAlloc Lib "Kernel32" (ByVal wFlags As Long, _
    ByVal dwBytes As Long) As Long
Declare Function GlobalLock Lib "Kernel32" (ByVal hMem As Long) As Long
Declare Function GlobalUnlock Lib "Kernel32" (ByVal hMem As Long) As Long
Declare Function GlobalFree Lib "Kernel32" (ByVal hMem As Long) As Long
Declare Sub CopyMemory Lib "Kernel32" Alias "RtlMoveMemory" ( _
    hpvDest As Any, ByVal hpvSource As Long, ByVal cbCopy As Long)
Declare Sub CopyMemory2 Lib "Kernel32" Alias "RtlMoveMemory" (ByVal _
    hpvDest As Long, hpvSource As Any, ByVal cbCopy As Long)
Declare Function OpenFile Lib "Kernel32" (ByVal lpFileName As String, _
    lpReOpenBuff As OFSTRUCT, ByVal wStyle As Long) As Long
Declare Function llseek Lib "Kernel32" Alias "_llseek" (ByVal hFile As _
    Long, ByVal lOffset As Long, ByVal iOrigin As Long) As Long
Declare Function lread Lib "Kernel32" Alias "_lread" (ByVal hFile _
    As Long, lpBuffer As Any, ByVal wBytes As Long) As Long
Declare Function lread2 Lib "Kernel32" Alias "_lread" (ByVal hFile _
    As Long, ByVal lpBuffer As Long, ByVal wBytes As Long) As Long
Declare Function lclose Lib "Kernel32" Alias "_lclose" (ByVal hFile _
    As Long) As Long
Declare Function SetMetaFileBitsEx Lib "gdi32" (ByVal nSize As Long, _
    ByVal lpData As Long) As Long
</PRE>#End If
<P>
Public Const CF_METAFILEPICT = 3
<P>
Public Const MM_ANISOTROPIC = 8
Public Const MM_ISOTROPIC = 7
Public Const MM_TWIPS = 6
Public Const MM_HIENGLISH = 5
Public Const MM_HIMETRIC = 3
Public Const MM_LOENGLISH = 4
Public Const MM_LOMETRIC = 2
Public Const MM_TEXT = 1
<P>
Public Sub SetMetaToClp(szFileName As String)
<PRE>    Dim inof As OFSTRUCT
    Dim APMHeader As APMFILEHEADER
    Dim mfHeader As METAHEADER
</PRE>#If Win16 Then
<PRE>    Dim fh As Integer
    Dim hData As Integer
    Dim hmf As Integer
    Dim hGlobal As Integer
</PRE>#Else
<PRE>    Dim fh As Long
    Dim hData As Long
    Dim hmf As Long
    Dim hGlobal As Long
</PRE>#End If
<PRE>    fh = OpenFile(szFileName, inof, OF_READ)
    If fh = HFILE_ERROR Then
        Debug.Print "openfile fails"
        Exit Sub
    End If
    llseek fh, 0, 0
    lread fh, APMHeader, LenB(APMHeader)
    llseek fh, LenB(APMHeader), 0
    lread fh, mfHeader, LenB(mfHeader)

    hData = GlobalAlloc(GHND, (mfHeader.mtSize * 2))
    If hData = 0 Then
        Debug.Print "fail to allocate memory"
        lclose fh
        Exit Sub
    End If
    Dim lpData As Long
    lpData = GlobalLock(hData)
    llseek fh, LenB(APMHeader), 0
</PRE>#If Win16 Then
<PRE>    hread2 fh, lpData, mfHeader.mtSize * 2
    GlobalUnlock (hData)
    hmf = SetMetaFileBits(hData)
</PRE>#Else
<PRE>    lread2 fh, lpData, mfHeader.mtSize * 2
    hmf = SetMetaFileBitsEx(mfHeader.mtSize * 2, lpData)
</PRE>#End If
<P>
<PRE>    lclose fh
     'if any above file op's fail, hmf will be 0
     'or you can check each file op return to see if it is HFILE_ERROR
     'but that will be a big waste of code
    If hmf = 0 Then
        Debug.Print "openfile or SetMetaFile fails"
        GlobalFree hData
        Exit Sub
    End If
    Dim myMetaFilePict As METAFILEPICT
    myMetaFilePict.mm = MM_ANISOTROPIC
    myMetaFilePict.xExt = 2540&amp; * (APMHeader.bbox.Right - _
        APMHeader.bbox.Left) / APMHeader.inch
    myMetaFilePict.yExt = 2540&amp; * (APMHeader.bbox.Bottom - _
        APMHeader.bbox.Top) / APMHeader.inch
    myMetaFilePict.hmf = hmf
 'cannot directly put myMetaFilePict to clipboard
 'memory block for clipboard has to have the flag GMEM_SHARE
    hGlobal = GlobalAlloc(GMEM_SHARE, LenB(myMetaFilePict))
    Dim lpPict As Long
    lpPict = GlobalLock(hGlobal)
    CopyMemory2 lpPict, myMetaFilePict, LenB(myMetaFilePict)
    GlobalUnlock hGlobal
    OpenClipboard 0
    EmptyClipboard
    SetClipboardData CF_METAFILEPICT, hGlobal
    CloseClipboard
End Sub

</PRE>(c) Microsoft Corporation 1996, All Rights Reserved.
Contributions by Wei Hua, Microsoft Corporation
 
<PRE>Keywords          : APrgWindow VB4ALL VB4WIN kbcode kbhowto
Version           : 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
