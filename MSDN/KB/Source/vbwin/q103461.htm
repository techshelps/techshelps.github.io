

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Out of Stack Space When One Modal Form Shows Another </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103461">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/08/24">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Any of the following error messages can occur when two or more forms in a program repeatedly show each other modally (SHOW 1).   - Out of stack space.  - Out of memory.  - Out of overlay stack space.  CAUSE =====  This can happen even if you unload...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFF,QAGI,QAHT,QAB9,QBS0,QAPN,QBE5,QAEF,QAY5,QAI2,QAH4,QAIF,QBVV,QAUD,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Out of Stack Space When One Modal Form Shows Another</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103461</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>The Standard and Professional Editions of Microsoft Visual Basic
   for Windows, versions 1.0, 2.0, and 3.0
<LI>The Standard and Professional Editions of Microsoft Visual Basic
   for MS-DOS, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Any of the following error messages can occur when two or more forms in a
program repeatedly show each other modally (SHOW 1).

<UL><LI>Out of stack space.
<LI>Out of memory.
<LI>Out of overlay stack space.
<P>
</UL><h2>CAUSE</h2>
 
<P>
This can happen even if you unload the form, which in turn shows the next
form. A form is not actually unloaded by the Unload statement until all its
event procedures return (End Sub or Exit Sub). Showing a form modally
suspends execution and, like a procedure call, maintains information on the
stack. Further explanation is given in the MORE INFORMATION section below.
<P>
<P><h2>WORKAROUNDS</h2>
 

<UL><LI>Show the forms non-modally (SHOW 0). It is acceptable practice to have
   forms show each other non-modally.

<LI>Do not have modal forms call each other continually. Instead, have an
   initial form call all the other forms. Think of this initial form
   (probably your startup form) as your foundation with all other forms
   called from the foundation.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The following example gives an Out of stack space error message. Remove
the apostrophe from (uncomment) the MsgBox statements in Visual Basic for
MS-DOS to see the amount of remaining stack space.
<P>
<PRE>' Form1:
Sub Form_Click ()
   ' MsgBox STR$(FRE(-2))
   Unload Form1
   Form2.Show 1
End Sub

' Form2:
Sub Form_Click ()
   ' MsgBox STR$(FRE(-2))
   Unload Form2
   Form1.Show 1
End Sub

</PRE>When a function or a subroutine is called, the variables in the calling
procedure get pushed onto the stack. This way these values are preserved.
When the function or subroutine ends on an End Function, End Sub, or Exit
<PRE>Sub statement, these variables get popped off the stack, and program
</PRE>execution returns to the statement that follows the call. Only then are
the variables once again usable.
<P>
If a subroutine or function calls another function, program execution is
halted within that subroutine or function, and the stack used is not
cleared up until an End Function, End Sub, or Exit Sub is encountered.
This is why you should not have two subroutines repeatedly call each
other with no stopping condition.
<P>
The behavior of event procedures within forms is similar to subroutines in
that when a form is shown, information is pushed onto the stack, and when
forms are unloaded, information is popped off the stack. Modal forms halt
program execution of all other events. However, a form is not actually
unloaded by the Unload statement until all of its event procedures return
with an End Sub or Exit Sub. When a modal form displays a second modal
form, the second modal form puts a hold on program execution, so the
first modal form cannot proceed to the rest of its code, thus making it
impossible to ever reach the End Sub or Exit Sub statement. This is why you
should not have modal forms show each other repeatedly.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 B_VBMSDOS<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
