

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 Contributing Articles to the Microsoft Knowledge Base </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q70220 ">
<META NAME="KBModify" CONTENT="1997/03/20">
<META NAME="KBCreate" CONTENT="1991/03/15">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article explains how you can write and contribute Visual Basic articles to the Microsoft Knowledge Base.  MORE INFORMATION  There are at least four different ways you can contribute to the Microsoft Knowledge Base:   - Contribute a fully-teste...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA6A,QBS0,QABA,QA2O,QAKC,QBXN,QBC6,QBCF,QAUJ,QAPF,QAMA,QA5F,QAGU,QABB,QDMW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 Contributing Articles to the Microsoft Knowledge Base</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q70220 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00
WINDOWS
kbpolicy kbref
<P>
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic
<PRE>  Programming System for Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how you can write and contribute Visual Basic
articles to the Microsoft Knowledge Base.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are at least four different ways you can contribute to the Microsoft
Knowledge Base:

<UL><LI>Contribute a fully-tested code sample containing ample comments and a
   short description.

<LI>Contribute a rough draft of an article that is complete with fully-
   tested technical information but that needs rewriting, editing, and
   formatting.

<LI>Contribute a fully-tested, well-written article that needs formatting.

<LI>Contribute a fully-tested, well-written article in the standard format.
<P>
</UL>All of these are equally valuable. Choose the method that is most
comfortable and easiest for you to do. You will be given credit for the
article either in the Author field or in the body of the article.
<P>
<P><h3>Submission Guidelines</h3>
 
<P>
When submitting an article, please ensure that it is fully tested and
includes all the following information in the body of the article:

<UL><LI>Name of the author(s) or contributor(s).

<LI>Name of the person(s) who signed off on the technical review.

<LI>Product name(s).

<LI>Product version number(s).

<LI>Operating system(s).
<P>
</UL><h3>Contributions from Microsoft Employees</h3>
 
<P>
If your article has been technically reviewed, include the name of the
technical reviewer in your article.
<P>
If the article is for a product that you support, please submit your
article according to your usual Knowledge Base article submission
procedures. If the article is for a product you do not support, please
email it to the KBINPUT alias. A Knowledge Base Lead will submit your
article for you.
<P>
<P><h3>Contributions from Outside Microsoft</h3>
 
<P>
If you are not a Microsoft employee, you can still contribute. You need to
find a Microsoft employee to sponsor you and review your article for
technical accuracy.
<P>
If you need us to assign a sponsor for you, please send mail to:
<P>
<PRE>   ykbfeed@Microsoft.com

</PRE>on the Internet.
<P>
In the body of the message, please include your name, the name of the
product, a short summary of your article, and your telephone number. We
will have a Microsoft sponsor call you to discuss your article. The sponsor
will advise you on the appropriateness of your article for the Knowledge
Base. If your article is selected for the Knowledge Base, your name will be
included in the body of the article as the contributor so that readers can
contact you directly if they have questions.
<P>
<P><h3>Writing Style</h3>
 
<P>
You don't have to be a writer to contribute to the Knowledge Base. The
Developer Support Knowledge Base team can rewrite your material for you.
All we need is complete, well-tested technical information.
<P>
If you would prefer to write your own article, please follow these and the
other general guidelines listed in this article:

<UL><LI>Emulate the writing style and standards used in the product manuals and
   Help menu.

<LI>Use active voice, present tense, short sentences, steps, and bullets to
   make your writing clear, crisp, and easy to read.

<LI>When writing about bugs, list the symptoms first followed by the cause
   (if known), and then the workaround or resolution.

<LI>Spell check your article.
<P>
</UL>The goal of good writing is to be as invisible as possible to the reader.
<P>
<P><h3>Format Style</h3>
 
<P>
If you want to put your article in standard format, follow these
guidelines. Each article should be organized into sections. There are two
basic format styles:

<UL><LI>Informational and how to articles use the Summary...More Information
   format. For example, this article is in Summary...More Information
   format.

<LI>Bugs and other problem articles use the Symptoms...Cause...Resolution
   format. For an example, query on the following word in the Microsoft
   Knowledge Base:
<P>
<P><PRE>      visual and basic and kbbuglist
</PRE><P>
</UL><h3>Reference Section</h3>
 
<P>
Many articles also include a References section at the bottom of the
article. When referring to the manuals or products, please use the official
names. For example:

<UL><LI>Microsoft Visual Basic Programming System for Windows, version 3.0,
   Professional Edition, "Professional Features Book 1," page 161,
   "SeeThru Property" section.

<LI>Microsoft Visual Basic Programming System for Windows, version 3.0,
   "Language Reference," page 333, "List Property" section.
<P>
</UL><h3>Categorization and Reference Keywords</h3>
 

<OL><P><LI>Add the following section to the bottom of each article:
<P>
   Additional reference words:
   KBCategory:
   KBSubcategory:

<P><LI>On the top line, fill in any reference words that you think may be
   useful when querying for the article. For example:
<P>
<PRE>   Reference Word    Description
   -------------------------------------------------------------------

   buglistx.xx:      Problem in article occurs in version x.xx of the
                     product. Version numbers are carried out to
                     hundredths in the buglistx.xx reference word.
                     For example, buglist4.00 buglist4.00b means that
                     the problem in the article occurs in versions 4.0
                     and 4.0b.

   fixlistx.xx:      Problem in article is corrected by version x.xx.
                     For example, buglist4.00 buglist4.00b fixlist4.50
                     means that the problem in the article was corrected
                     by version 4.5. The version number field at the top
                     of the article should not contain "4.50" because the
                     problem is not an issue there; it should contain
                     "4.00 4.00b." Also, include kbfixlist on the
                     KBCategory line.

   docerr:           Marks an article concerning an error in the product
                     documentation. We recommend querying on docerr and
                     the product database name, and writing all those
                     changes into your manual. Also, include kbdocerr
                     on the KBCategory line.

   softlib:          Marks an article that refers to a file contained in
                     the Microsoft Software Library (MSL). Also, include
                     kbfile on the KBCategory line.

   appnote:          Marks an application note article that is already
                     prepared on paper and/or disk and can be sent to
                     the customer. Also, include kbappnote on the
                     KBCategory line.

</PRE><P><LI>On the middle line, fill in the appropriate article subject and type
   keywords. For a listing of these keywords, please see the following
   article in the Microsoft Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q94671.htm">Q94671</A></B>
<PRE>   TITLE     : Categories and Keywords for All Knowledge Base Articles

</PRE><P><LI>On the bottom line, fill in the appropriate subcategory keywords. To
   find the list of available subcategory keywords for a particular
   product, query on the following words in the Microsoft Knowledge Base:
<P>
   kbsubcats or kbkeyword
<P>
</OL><h3>Boilerplates</h3>
 
<P>
There are several boilerplates that go on many if not all articles. Put the
following at the top of every article to identify the product and version
numbers. Modify this boilerplate to give the actual product name:
<P>
<PRE>   ---------------------------------------------------------------------
   The information in this article applies to:

   - Standard and Professional Editions of Microsoft Visual Basic
     Programming System for Windows, version 3.0
   ---------------------------------------------------------------------

</PRE></OL>If Microsoft has confirmed that the problem described in the article is a
bug, please add the following Status section below the Workaround or
Resolution section:
<P>
<PRE>   STATUS
   ======

   Microsoft has confirmed this to be a bug in the Microsoft products
   listed at the beginning of this article. We are researching this problem
   and will post new information here in the Microsoft Knowledge Base as it
   becomes available.

</PRE><h3>Miscellaneous Guidelines</h3>
 

<UL><LI>Always use the complete name of the product. For example, use Visual
   Basic, not VB. Use Microsoft Access, not Access.

<LI>Use the uppercase and lowercase standards as shown in the manuals. For
   example, controls such as command button and list box are in lowercase.

<LI>Write menu instructions using this wording:
<P>
   From the File menu, choose Save Project.

<LI>When you give code examples, always use Visual Basic's default control
   and procedure names, such as Command1, List1, Option1.

<LI>When you describe how to create a Visual Basic form, use complete
   sentences, and use the exact terminology used in the manual. Avoid
   using line-drawing characters in an article because of editing and
   interpretation problems. Instead, describe in complete sentences what
   controls go where and in what order.

<LI>Use active voice and engage the reader by using the second person (you)
   instead of using "the user," "the customer," or "one." Use "user" only
   when it is necessary to differentiate the user from the developer.

<LI>Use active voice such as: After you start Visual Basic, use x, call the
   y function, and click the z button. Avoid passive voice such as: After
   Visual Basic is started, x is used, the y function is called, and
   the z button is clicked.
<P>
   After writing your article, check for passive voice by looking at your
   use of the words have, is, and are. Where possible, change passive
   voice to active voice.

<LI>Enclose error messages in double quotation marks, and be sure to
   quote the exact error message displayed on the screen by the software.

<LI>Attempt to structure your article in a series of steps. There are many
   examples of this throughout the Visual Basic Knowledge Base.

<LI>List all version numbers mentioned in the article to the hundredths
   place in the following section at the bottom of every article. This will
   satisfy all potential article-body queries in the online services.
<P>
</UL><h3>Additional Knowledge Base Article Writing Guidelines</h3>
 
<P>
When you write an article, assume that the reading audience is just
learning the product. Ideally, the article should be tutorial in nature and
include complete step-by-step information. The goal is to help new users
make use of the article. Write the article to stand on its own. Explain all
underlying assumptions that the novice may not be aware of.
<P>
The 62-character (or shorter) title is one of the most important parts of
the article. From the title alone, the reader decides whether he or she
wants to read the article. The title should resemble a unique newspaper
headline that sums up the contents of the article or describes or the
symptoms of a problem or bug. All information conveyed by the title must
also appear somewhere in the body of the text, because people often
unintentionally separate downloaded articles from their titles.
<P>
When you include a code example, also include the necessary compiling,
linking, and running instructions.
<P>
Please do not put tab characters into articles. Use spaces. Also, please do
not put extended ASCII characters in articles submitted to bboard. Use
ASCII values from 32 through 126 only, and add a carriage return/line feed
combination to terminate each line. Every line in your submitted article
must end with a carriage return (CR+LF) at or before the 75th column.
<P>
<P><h3>Version Numbering Guidelines</h3>
 
<P>
In the special version number field at the top of the article (and in
the .VERSION(S) field of the dot format for article submissions), list
the product version numbers to the hundredths place (such as 1.00 for
B_VBasic), and just list the numbers for that article's database.
<P>
But in the body of the article, please list product version numbers to
the tenths (such as 4.0, 4.0b, 4.5). Only use hundredths for version
numbers such as 2.01 which require hundredths.
<P>
In addition to the above standards, please list all version numbers
mentioned in the article to the hundredths place in the following
section at the bottom of every article (to satisfy all potential
article-body queries in online services, where the separate version
number field mentioned above is not included in article-body
searches):
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 dskbguide kbartwrite<BR>
KBCategory: kbpolicy kbref<BR>
KBSubcategory: RefsPSS<BR>
Version           : 3.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
