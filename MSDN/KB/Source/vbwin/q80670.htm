

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 Copying Entire Screen into a Picture Box in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80670 ">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1992/02/10">
<META NAME="Keywords" CONTENT="kbui kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using the Windows API call BitBlt, you can capture the entire Microsoft Windows screen and place the image into a Microsoft Visual Basic for Windows picture box.  First, get the handle to the desktop. Then use the desktop window handle to get the h...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAYS,QDL9,QBWO,QBWN,QA4Q,QAGI,QBWQ,QAH4,QAFF,QAY5,QA5F,QAMA,QBXT,QA7H V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 Copying Entire Screen into a Picture Box in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80670 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows,
<PRE>  versions 1.0, 2.0, and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using the Windows API call BitBlt, you can capture the entire
Microsoft Windows screen and place the image into a Microsoft Visual
Basic for Windows picture box.
<P>
First, get the handle to the desktop. Then use the desktop window handle
to get the handle to the desktop's  device context (hDC). Finally, use
the Windows API call BitBlt to copy the screen into the Picture property
of a Visual Basic for Windows picture box control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 
1. Start Visual Basic for Windows (VB.EXE). Form1 is created by default.

<OL><P><LI>Add a picture box (Picture1) to Form1.

<P><LI>Set the following properties:
<P>
<PRE>   Control    Property      Value
   ------------------------------
   Picture1   AutoRedraw    True
   Picture1   Visible       False

</PRE><P><LI>Add the following code to your .BAS module:
<P>
   Type lrect
<P><PRE>      left As Integer
      top As Integer
      right As Integer
      bottom As Integer
</PRE>   End Type
<PRE>   Declare Function GetDesktopWindow Lib "user" () As Integer
   Declare Function GetDC Lib "user" (ByVal hWnd%) As Integer
   ' Enter the following Declare on one, single line:
   Declare Function BitBlt Lib "GDI" (ByVal hDestDC%, ByVal X%, ByVal Y%,
      ByVal nWidth%, ByVal nHeight%, ByVal hSrcDC%, ByVal XSrc%,
      ByVal YSrc%, ByVal dwRop&amp;) As Integer
   ' Enter the following Declare on one, single line:
   Declare Function ReleaseDC Lib "User"(ByVal hWnd As Integer, ByVal hDC
      As Integer) As Integer
   Declare Sub GetWindowRect Lib "User" (ByVal hWnd%, lpRect As lrect)
   Global Const True = -1 'Comment out this line if using Visual Basic 3.0.
   Global Const False = 0 'Comment out this line if using Visual Basic 3.0.
   Global TwipsPerPixel As Single

</PRE><P><LI>Add the following code to the Form1 Click event procedure:
<P>
<PRE>   Sub Form_Click ()
      Call GrabScreen
   End Sub

   Sub GrabScreen ()

      Dim winSize As lrect

      ' Assign information of the source bitmap.
      ' Note that BitBlt requires coordinates in pixels.
      hwndSrc% = GetDesktopWindow()
      hSrcDC% = GetDC(hwndSrc%)
      XSrc% = 0: YSrc% = 0
      Call GetWindowRect(hwndSrc%, winSize)
      nWidth% = winSize.right             ' Units in pixels.
      nHeight% = winSize.bottom           ' Units in pixels.

      ' Assign informate of the destination bitmap.
      hDestDC% = Form1.Picture1.hDC
      x% = 0: Y% = 0

      ' Set global variable TwipsPerPixel and use to set
      ' picture box to same size as screen being grabbed.
      ' If picture box not the same size as picture being
      ' BitBlt'ed to it, it will chop off all that does not
      ' fit in the picture box.
      GetTwipsPerPixel
      Form1.Picture1.Top = 0
      Form1.Picture1.Left = 0
      Form1.Picture1.Width = (nWidth% + 1) * TwipsPerPixel
      Form1.Picture1.Height = (nHeight% + 1) * TwipsPerPixel

      ' Assign the value of the constant SRCOPYY to the Raster operation.
      dwRop&amp; = &amp;HCC0020

      ' NOTE: function call must be on one line:
      Suc% = BitBlt(hDestDC%, x%, Y%, nWidth%, nHeight%,
                    hSrcDC%, XSrc%, YSrc%, dwRop&amp;)

      ' Release the DeskTopWindow's hDC to Windows.
      ' Windows may hang if this is not done.
      Dmy% = ReleaseDC(hwndSrc%, hSrcDC%)

      'Make the picture box visible.
      Form1.Picture1.Visible = True
   End Sub

   Sub GetTwipsPerPixel ()
      ' Set a global variable with the Twips to Pixel ratio.
      Form1.ScaleMode = 3
      NumPix = Form1.ScaleHeight
      Form1.ScaleMode = 1
      TwipsPerPixel = Form1.ScaleHeight / NumPix
   End Sub

</PRE><P><LI>Run the program. Click Form1.

<P><LI>Using the mouse, change the size of the form to see more of the picture
   box. With a little work, you can use this as a screen saver program.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 print printer<BR>
KBCategory: kbui kbprg kbcode<BR>
KBSubcategory: APrgWindow APrgGrap<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
