

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: VB 3.0 OLE Clients Do not Repaint Before OLE Call Returns </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149032">
<META NAME="KBModify" CONTENT="1996/03/27">
<META NAME="KBCreate" CONTENT="1996/03/26">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When calling a method or accessing a property of an OLE server from Visual Basic 3.0, no painting takes place on any of the Visual Basic 3.0 forms that are showing. This behavior remains until the call to the OLE server method or property returns. ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA9Q,QAGI,QAUD,QA5F,QAMA,QAPN,QAB5,QAIF,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: VB 3.0 OLE Clients Do not Repaint Before OLE Call Returns</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 27, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149032</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When calling a method or accessing a property of an OLE server from Visual
Basic 3.0, no painting takes place on any of the Visual Basic 3.0 forms
that are showing. This behavior remains until the call to the OLE server
method or property returns. This behavior occurs with OLE servers built in
any environment, including, but not limited to, Visual Basic 4.0. OLE
automation clients built with Visual Basic 4.0 do not show this
characteristic.
<P>
<P><h2>CAUSE</h2>
 
<P>
To receive Windows paint messages while in a synchronous OLE call, an OLE
automation client must implement the IMessageFilter interface. Visual Basic
3.0 does not implement this interface, and so Visual Basic 3.0 windows
cannot receive any paint messages until a synchronous call returns. Because
Visual Basic 4.0 does implement this interface, painting can continue
without problem before a call has returned.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps To Reproduce Problem</h3>
 

<OL><P><LI>Following the instructions in <B><A HREF="../VBWIN/Q129801.htm">Q129801</A></B>, "How to Create and Use a Minimal
   OLE Automation Server," create a simple OLE server with Visual Basic
   4.0. To obtain this article, query on the following words here in the
   Microsoft Knowledge Base:
<P>
<P><PRE>      vbwin and chocolates and step
</PRE>
<P><LI>Add a single form to this OLE server project by clickng Form on the
   Insert menu.

<P><LI>Add this procedure to the class module in the OLE server project:
<P>
<P><PRE>      Public Sub ShowForm()
<PRE></PRE>         Form1.Show vbModal
      End Sub

</PRE><P><LI>Compile the OLE server project and exit Visual Basic 4.0.

<P><LI>Start Visual Basic 3.0. Form1 is created by default.

<P><LI>Add this code to the Form_Click event in the Visual Basic 3.0 project:
<P>
<PRE>      Sub Form_Click()
         Dim o As Object

         ' If the ProgID has been changed then modify it below.
         Set o = CreateObject("Project1.Class1")
         o.ShowForm
         MsgBox "Method returned"
      End Sub

</PRE><P><LI>Press F5 or click Start on the Run menu to run the application. Click
   once on the form and notice how no repainting occurs while the modal
   form displays. Unloading the modal form causes the message box to
   display and also resumes all Windows messages to the Visual Basic 3.0
   project.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg<BR>
KBSubcategory: IAPOLE<BR>
Additional reference words: 4.00 vb4win vb4all 3.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 27, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
