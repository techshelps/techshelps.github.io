

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 How to Subclass a VB Form Using VB CDK Custom Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q78398 ">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1991/11/14">
<META NAME="Keywords" CONTENT="kbtool kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  In Windows programming terms, subclassing is the process of creating a message handling procedure and intercepting messages for a given window, handling any messages you choose, and passing the rest to the window's original message handler.  The su...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAEV,QAB9,QAH6,QDL9,QBWQ,QBWO,QBWN,QA3P,QA5F,QAMA,QA7O,QAOE,QAMN,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 How to Subclass a VB Form Using VB CDK Custom Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q78398 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Windows programming terms, subclassing is the process of creating a
message handling procedure and intercepting messages for a given
window, handling any messages you choose, and passing the rest to the
window's original message handler.
<P>
The subclass procedure is basically a message filter that performs
non-default processing for a few key messages, and passes other
messages to a default window procedure using CallWindowProc(). The
CallWindowProc() function passes a message to the Windows system,
which in turns sends the message to the target window procedure. The
target window procedure cannot be called directly by the subclass
procedure because the target procedure (in this case a window
procedure) is exported.
<P>
Below is a simple example of how to subclass a Visual Basic form by
writing a custom control using the Visual Basic Control Development
Kit (CDK). The Visual Basic CDK is shipped as part of Microsoft
Professional Toolkit for Microsoft Visual Basic version 1.0 for Windows
and as part of the Professional Edition of Microsoft Visual Basic versions
2.0 and 3.0 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates how to subclass a form from a
custom control using the Visual Basic Custom CDK.
<P>
This example is developed using the CIRCLE.C program example from the
CIRCLE1 project supplied with the CDK package. Only the file(s) that
have changed from this project are included, and it is assumed that
you have the additional CDK files as well as a C compiler capable of
creating a Windows 3.0 compatible dynamic link library (DLL).
<P>
The basic idea for subclassing is to examine the window structure for
a window directly using the GetWindowLong function to determine the
address of the original window procedure. You can then change the
address of the target window's window procedure to the address of your
subclass procedure using SetWindowLong. In your subclass
window procedure, you handle the messages you wish and use
CallWindowProc to pass along other messages to the original window
procedure.
<P>
<PRE>//=================== CIRCLE1 ==================
// CIRCLE.C
// An example of subclassing a Visual Basic Form
//==============================================

#define  NOCOMM
#include &lt;windows.h&gt;

#include &lt;vbapi.h&gt;
#include "circle.h"

//declare the subclass procedure
</PRE>LONG FAR PASCAL _export SbClsProc(HWND,USHORT,USHORT,LONG);
<P>
<PRE>//far pointer to the default procedure
</PRE>FARPROC lpfnOldProc = (FARPROC) NULL ;
<P>
<PRE>//get the controls parent handle(form1)
HWND    hParent ;

//----------------------------------------------------------
// Circle Control Procedure
//----------------------------------------------------------
</PRE>LONG FAR PASCAL _export CircleCtlProc (HCTL hctl, HWND hwnd,
<PRE>     USHORT msg, USHORT wp, LONG lp)
</PRE>{
<PRE>   LONG lResult ;
   switch (msg)
   {
      case WM_CREATE:
         switch (VBGetMode())
         {
            //this will only be processed during run mode
            case MODE_RUN:
            {
               hParent = GetParent (hwnd) ;
               //get the address instance to normal proc
               lpfnOldProc = (FARPROC) GetWindowLong
                              (hParent, GWL_WNDPROC) ;
               //reset the address instance to the new proc
               SetWindowLong (hParent,
                        GWL_WNDPROC, (LONG) SbClsProc) ;
            }
            break ;
         }
         break ;
   }
   // call the default VB proc
   lResult = VBDefControlProc(hctl, hwnd, msg, wp, lp);
   return lResult;

</PRE>}
<P>
LONG FAR PASCAL _export SbClsProc (HWND hwnd, USHORT msg,
<PRE>     USHORT wp, LONG lp)
</PRE>{
<PRE>   switch (msg)
   {
      case WM_SIZE:
      {
      //place size event here for example...
      }
      break;
      case WM_DESTROY:
         SetWindowLong (hwnd, GWL_WNDPROC,
                        (LONG) lpfnOldProc) ;
      break ;
   }
   // call CircleCtlProc to process any other messages
   return (CallWindowProc(lpfnOldProc, hwnd, msg, wp, lp));
</PRE>}
<P>
;==========================================================
;Circle.def - module definition file for CIRCLE3.VBX control
;==========================================================
<PRE>LIBRARY         CIRCLE
EXETYPE         WINDOWS
DESCRIPTION     'Visual Basic Circle Custom Control'

CODE            MOVEABLE
DATA            MOVEABLE SINGLE

HEAPSIZE        1024

</PRE>EXPORTS
<PRE>           WEP       @1 RESIDENTNAME
           SbClsProc @2
</PRE>;------------------------------------------------------
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbtool kbprg<BR>
KBSubcategory: TlsCDK<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
