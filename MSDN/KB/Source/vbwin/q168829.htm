

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Get a Hierarchical List of Window Names and Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q168829">
<META NAME="KBModify" CONTENT="1997/05/22">
<META NAME="KBCreate" CONTENT="1997/05/21">
<META NAME="Keywords" CONTENT="APrgWindow kbcode vb432 vb4win vb5all vb5howto VBKBWinAPI kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When trying to determine whether a child window of an application is open, you need to know whether it is a child of the main application window, a grandchild, or an independent window. This article provides a method of creating a hierarchical list...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QBT6,QBV4,QDL9,QBWO,QBWN,QAHP,QAUJ,QATX,QBWQ,QALQ,QARM,QAGQ,QA1S V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Get a Hierarchical List of Window Names and Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q168829</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
<LI>Microsoft Access versions 7.0, 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When trying to determine whether a child window of an application is open,
you need to know whether it is a child of the main application window, a
grandchild, or an independent window. This article provides a method of
creating a hierarchical listing of all currently open windows and their
window class names, making it easier navigating a program's window
hierarchy.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
WARNING: Microsoft provides code examples for illustration only, without
warranty either expressed or implied, including but not limited to the
implied warranties of merchantability and/or fitness for a particular
purpose. This code is provided 'as is' and Microsoft does not guarantee
that the following code can be used in all situations. Microsoft does not
support modifications of the code to suit customer requirements for a
particular purpose.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a new project with a Form and a Module.

<P><LI>Add the following controls to the form:
<P>
<PRE>   Control            Name         Property   Value
   ------------------------------------------------
   Command button     Command1
   Text box           Text1        MultiLine  TRUE
   Text box           Text1        Scrollbars 2- Vertical

   NOTE: The MultiLine property only applies to Visual Basic.

</PRE><P><LI>Type the following code into the module:
<P>
<P><PRE>      Option Explicit
</PRE>   
<P><PRE>      Public Const GW_CHILD = 5
      Public Const GW_HWNDNEXT = 2
</PRE>   
<P><PRE>      Declare Function GetWindow Lib "user32" (ByVal hwnd As Long, _
<PRE></PRE>              ByVal wCmd As Long) As Long
      Declare Function GetWindowText Lib "user32" Alias "GetWindowTextA" _
              (ByVal hwnd As Long, ByVal lpString As String, _
              ByVal cch As Long) As Long
      Declare Function GetTopWindow Lib "user32" _
              (ByVal hwnd As Long) As Long
      Declare Function GetClassName Lib "user32" Alias "GetClassNameA" _
              (ByVal hwnd As Long, ByVal lpClassName As String, _
              ByVal nMaxCount As Long) As Long

</PRE><P><LI>Add the following code to the form's module:
<P>
<PRE>      Sub AddChildWindows(ByVal hwndParent As Long, ByVal Level As Long)
      Dim WT As String, CN As String, Length As Long, hwnd As Long
        If Level = 0 Then
          hwnd = hwndParent
        Else
          hwnd = GetWindow(hwndParent, GW_CHILD)
        End If
        Do While hwnd &lt;&gt; 0
          WT = Space(256)
          Length = GetWindowText(hwnd, WT, 255)
          WT = Left$(WT, Length)
          CN = Space(256)
          Length = GetClassName(hwnd, CN, 255)
          CN = Left$(CN, Length)
          Me!Text1 = Me!Text1 &amp; vbCrLf &amp; String(2 * Level, ".") _
                   &amp; WT &amp; " (" &amp; CN &amp; ")"
          AddChildWindows hwnd, Level + 1
          hwnd = GetWindow(hwnd, GW_HWNDNEXT)
        Loop
      End Sub
   
      Sub Command1_Click()
      Dim hwnd As Long
        hwnd = GetTopWindow(0)
        If hwnd &lt;&gt; 0 Then
          AddChildWindows hwnd, 0
        End If
      End Sub

</PRE><P><LI>Visual Basic only: Run the project.
<P>
   Access only: Open the form.

<P><LI>Click the CommandButton. The text box will be filled with a list of
   windows and their children arranged in a hierarchical order. The class
   name will follow the window name, such as:
<P>
<P><PRE>      MainWindowName (WindowClass)
      ..ChildWindowName (WindowClass)
      ....GrandchildWindowName (WindowClass)
</PRE><P>
</OL>NOTE: Not all windows will have a name but all will have a Window Class.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Windows SDK
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgWindow kbcode vb432 vb4win vb5all vb5howto VBKBWinAPI kbhowto<BR>
Version             : 4.0 5.0 7.0 97<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
