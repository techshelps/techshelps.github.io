

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB:Parameter Mismatch Error When Pass Properties by Reference </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q79597 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1991/12/30">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When trying to pass a control property value by reference to a Sub or Function procedure, you receive a  Parameter Mismatch  error.  CAUSE =====  Control property values in Visual Basic are stored in a formatted form whose location is periodically ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH6,QAH7,QAD7,QAYL,QBS0,QAFF,QAB9,QAPN,QAY5,QAKD,QBV8,QAHE,QAC2,QAB4,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB:Parameter Mismatch Error When Pass Properties by Reference</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q79597 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When trying to pass a control property value by reference to a Sub or
Function procedure, you receive a "Parameter Mismatch" error.
<P>
<P><h2>CAUSE</h2>
 
<P>
Control property values in Visual Basic are stored in a formatted form
whose location is periodically changed as part of Windows memory
management. The values are accessed by handles, not addresses. Although the
values behave as their prescribed types when used directly, they cannot be
passed by reference to a Sub or Function procedure. Any attempt to do so
will generate a "Parameter Mismatch" error.
<P>
Passing by reference, the default parameter passing method in Visual Basic,
places the address of the variable on the stack. The Sub or Function
procedure then accesses the address on the stack and uses it to refer to
that variable.
<P>
Sending a control property as a parameter to a Sub or Function procedure
will place its handle on the stack instead of an address. Because the
handle uses a different form from an address, the Sub or Function procedure
finds a value that it is not expecting, and will generate a "Parameter
Mismatch" error.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Pass the property by value instead of by reference. To pass by value, place
a set of parentheses around the property variable in the Sub or Function
call. This syntax will place the actual value of the property on the stack
and tell the Sub or Function procedure to treat it as such. Because an
actual memory location is not transferred to the Sub or Function procedure,
any changes to the value of the property are localized to that Sub or
Function procedure.
<P>
As an alternative resolution, assign the property value to a temporary
variable. The temporary variable has an actual address and can be passed to
a Sub or Function procedure in the usual manner. Because an actual address
is sent, any change to the temporary variable will be permanent. In order
for the actual property variable to reflect this change, you must assign
the value of the temporary variable to the property variable upon return
from the Sub or Function procedure.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Place two command buttons (Command1 and Command2), and one text box
   (Text1) on Form1.

<P><LI>Add the two command Click events as follows:
<P>
<PRE>   Sub Command1_Click ()
      Text1.text = "passed by value"
      CALL Mysub ((Text1.text))
      ' Notice Text1.text did not change.
   End Sub

   Sub Command2_Click()
      Text1.text = "passed temporary variable"
      temp$ = Text1.text
      CALL Mysub (temp$)
      Text1.text = temp$
      ' Notice Text1.text did change when assigned to temp$.
   End Sub

</PRE><P><LI>In the General section of Form1, add the following:
<P>
<PRE>   Sub Mysub(A$)
      A$ = "Changed"
   End Sub

</PRE><P><LI>Run the program by pressing the F5 key. Click the command buttons to
   observe the behavior.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
