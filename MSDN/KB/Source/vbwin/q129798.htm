

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Display a Task Modal Dialog from a 32-Bit DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129798">
<META NAME="KBModify" CONTENT="1995/10/29">
<META NAME="KBCreate" CONTENT="1995/05/04">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If a Message box is displayed from a 32-bit DLL by calling it from Visual Basic version 4.0, the Message box does not behave as if it were a task modal dialog. In other words, Visual Basic allows you to change the focus to other forms in the applic...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA01,QAY2,QAH4,QAGI,QA5F,QAMA,QBE5,QDNN,QAHT,QA56,QA55,QAY5,QAD7,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Display a Task Modal Dialog from a 32-Bit DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 29, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129798</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If a Message box is displayed from a 32-bit DLL by calling it from Visual
Basic version 4.0, the Message box does not behave as if it were a task
modal dialog. In other words, Visual Basic allows you to change the focus
to other forms in the application by clicking them.
<P>
On the other hand, a MsgBox displayed from Visual Basic itself always
behaves as if it were a task modal dialog. This article shows by example
how to force a Message box invoked from a 32-bit DLL to behave as a Visual
Basic MsgBox behaves.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
All Visual Basic applications have a background window that handles all
messages for the application and all calls to the VB40032.DLL. This
background window is also the owner and parent of all non-MDI child forms.
You can use the GetWindow API function to get the handle of this background
window, and subsequently pass this handle to the Message box called from
the 32-bit DLL, so that it is also owned by the Visual Basic background
window.
<P>
NOTE: You can also make the Message box task-modal in the DLL itself by
calling it with a hWndOwner (first parameter) of NULL and a fuStyle (last
parameter) of MB_TASKMODAL.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add another form (Form2) by choosing Form from the Insert menu.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<PRE>   Private Declare Function GetWindow Lib "user32" (ByVal hWnd As _
      Long, ByVal wCmd As Long) As Long

   Private Declare Sub ShowTaskModal Lib "appmodal" (ByVal hWnd As Long)

   Private hWndVBOwner As Long
   Private Const GW_OWNER As Long = 4

</PRE><P><LI>Add the following code to the Form1_Load event:
<P>
   Form2.Show
   hWndVBOwner = GetWindow(Me.hWnd, GW_OWNER)

<P><LI>Add the following code to the Form_Click event:
<P>
   ShowTaskModal hWndVBOwner

<P><LI>Using Microsoft Visual C++ version 2.x:
<P>
   a. Compile a 32-bit DLL that contains the following function:
<P>
<P><PRE>      #include &lt;windows.h&gt;
</PRE><P>
<P><PRE>      //prototype of exported function
      void _stdcall ShowTaskModal (HWND hWnd);
</PRE><P>
<P><PRE>      void _stdcall ShowTaskModal (HWND hWnd)
      {
<PRE></PRE>         MessageBox (hWnd, "Hi! I am Task Modal!",
            "Task Modal Dialog From 32-bit DLL", MB_OK);
      }

   b. Use a definition file (.DEF) for the DLL as follows:

      LIBRARY AppModal

      CODE PRELOAD MOVEABLE DISCARDABLE
      DATA PRELOAD SINGLE

      EXPORTS
      ShowTaskModal @1

   c. Build the DLL. Call it APPMODAL.DLL, and move it to the system
      directory.

</PRE><P><LI>Go back to Visual Basic, and press the F5 key to run the program. Click
   Form1. The Message box from the DLL display. Try to click Form2 or any
   other window belonging to the Visual Basic design environment itself.
   You will hear a beep prohibiting you from doing so until you click the
   OK button of the Message box.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb432<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 29, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
