

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: OLE Server Terminate Not Fired If Client Uses 'End' </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129885">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbprg kbole kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An OLE Server with loaded forms does not unload when the client program terminates by using the End statement, even if the OLE server is programmed to unload its forms in the Terminate event.  CAUSE =====  When you use End to shut down an object ap...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QA9Q,QAGB,QAO4,QBS0,QBVV,QAH4,QDL9,QBWO,QBWN,QAW6,QARL,QBSO,QAML,QDKA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: OLE Server Terminate Not Fired If Client Uses 'End'</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129885</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An OLE Server with loaded forms does not unload when the client program
terminates by using the End statement, even if the OLE server is programmed
to unload its forms in the Terminate event.
<P>
<P><h2>CAUSE</h2>
 
<P>
When you use End to shut down an object application, the Terminate events
of objects are NOT executed. (This is analogous to forms -- if you use
End, the QueryUnload, Unload, and Terminate events of forms are NOT
executed.)
<P>
<P><h2>RESOLUTION</h2>
 
<P>
This behavior occurs under Microsoft Windows 95, Microsoft Windows version
3.X, and Microsoft Windows for Workgroups version 3.11. It does not occur
under Microsoft Windows NT.
<P>
Good programming uses the Terminate event of a class module to clean up and
release dependent object references. This is true for client applications
that create OLE objects as well. The Terminate, QueryUnload, or Unload
events gracefully close down any objects or forms that were created or
loaded during the session.
<P>
The End statement is convenient, but it does NOT go through the complete
sequence of cleaning up after your application. You should use it
cautiously and sparingly when developing applications.
<P>
A Visual Basic client can destroy the last instance of an OLE Server it
creates by:

<UL><LI>Setting it to Nothing (the preferred method).

<LI>Shutting down by unloading the last form (acceptable, but not as
   desirable).

<LI>Ending the program by executing the End statement (this can cause
   problems).
<P>
</UL><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a minimal OLE server and client application. If you need more
   information on how to do this, please see the following article in the
   Microsoft Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VBWIN/Q129801.htm">Q129801</A></B>
<PRE>   TITLE     : How to Create and Use a Minimal OLE Automation Server

</PRE><P><LI>In the OLE server application, add the following code to the
   Class1_Terminate event:
<P>
<PRE>   Sub Class1_Terminate ()
      MsgBox "I exited normally."
   End Sub

</PRE><P><LI>Run the OLE server and minimize Visual Basic.

<P><LI>Load or create the minimal OLE Client. If you need more information on
   how to do this, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VBWIN/Q129801.htm">Q129801</A></B>
<PRE>   TITLE     : How to Create and Use a Minimal OLE Automation Server

</PRE><P><LI>Add a command button (Command1) to Form1.

<P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Sub Command1_Click ()
      Dim X As Object
      Set X = CreateObject("Project1.Class1")
      End
   End Sub

</PRE><P><LI>Start the program by choosing Start from the Run menu or by pressing the
   F5 key.

<P><LI>Click the Command1 button. The OLE server is created, and the End
   statement executes. When this happens, the Terminate event is NOT fired
   on the OLE server object.
<P>
</OL><h3>Example Resolution for Failure to Fire Terminate</h3>
 
<P>
Add the following statement before the End statement in step 6:
<P>
<PRE>   Set X = Nothing

</PRE></OL>This explicitly unloads the OLE server, which fires the correct Terminate
event. While the End statement is still not optimal, it will no longer
cause problems with this OLE server.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbole kbprb<BR>
KBSubcategory: PrgOther IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
