

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Debug Typelib Shadowing </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129867">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbole kbprg kbtshoot">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If an object is defined by the same name in more than one type library or object library, and a reference to both of them is chosen, Visual Basic uses the definition provided by the application listed higher in the Available References Box of the R...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QBS0,QAB3,QBHQ,QBMH,QBJZ,QBXS,QA59,QA01,QAH4,QDKD,QAJH,QDM0,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Debug Typelib Shadowing</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129867</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If an object is defined by the same name in more than one type library or
object library, and a reference to both of them is chosen, Visual Basic
uses the definition provided by the application listed higher in the
Available References Box of the References Dialog.
<P>
This article explains how to deal with these libraries and this behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>What Is an Object Library?</h3>
 
<P>
An Object Library is a file with an .OLB extension that provides
information to OLE Automation controllers (like Visual Basic) about
available OLE Automation objects. The Object Browser can be used to examine
the contents of an object library to get information about the objects
provided.
<P>
<P><h3>What is a Type Library?</h3>
 
<P>
A Type Library is a file or component within the object library that
contains the OLE Automation standard descriptions of exposed objects,
properties, and methods.
<P>
How to Make Another Application's Objects Available to Your Application
 
<P>
Another application's objects can be made available in your code by setting
a reference to that application's object library. This can be done by
choosing References from the Tools menu to bring up the References dialog
box. Then you can select from a list of references displayed in the
Available References box. To view these objects, choose Object Browser from
the View menu.
<P>
When you refer to an object in code, Visual Basic searches each application
selected in the References dialog box in the order the applications are
displayed. If two applications use the same name for an object, Visual
Basic uses the definition provided by the application listed higher in the
Available References box.
<P>
<P><h3>What to Do If the Object You Want Lies Further Down in the List</h3>
 
<P>
If the object you actually want is defined in an object library futher down
in the reference list, you can:

<UL><LI>Use the Priority Buttons of the references dialog box to move the
   reference that you want higher up in the list. Then deselect and
   reselect the reference that has now become lower in priority.
<P>
   -or-

<LI>Determine the correct name of the reference that you want from the
   Object Brower, and qualify the object type with this complete name.
<P>
   -or-

<LI>Dimension the referered object as the generic type Object.
<P>
   -or-

<LI>Get rid of the one of the references if it is not used.
<P>
</UL><h3>Example</h3>
 
<P>
For example, say you have the following code in an add-in:
<P>
<PRE>   Dim ft As Object
   Dim ct As ControlTemplate
   Dim oprop As Property

   ' VBInstance is instance passed to add-in
   Set ft = VBInstance.Application.ActiveProject.ActiveForm

   ' Select first control on the form:
   Set ct = ft.ControlTemplates.Item(0)

   ' Generates Type Mismatch error when oprop is of type Property.
   For Each oprop In ct.Properties
      Debug.print oprop.Name
   Next

</PRE>The Property object is defined both in the DAO and the VBIDE object
libraries. If DAO appears ahead of VBIDE in the reference list, a "Type
Mismatch" error is generated at the For statement. This occurs because
VBIDE's Property object that is actually being used is shadowed by DAO's
Property object.
<P>
Choose one of the following solutions as a remedy:

<UL><LI>Use the priority buttons of the references dialog box to move the
   reference to VBIDE higher up than the reference to DAO. Then deselect
   DAO. Click the dialog's OK button. Bring up the references dialog again.
   Reselect DAO, and click the OK button again.
<P>
   -or-

<LI>Declare oprop as: Dim oprop As VBIDE.Property.
<P>
   -or-

<LI>Declare oprop as: Dim oprop As Object.
<P>
   -or-

<LI>Get rid of the reference to the DAO object (if it is not being used).
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbole kbprg kbtshoot<BR>
KBSubcategory: IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
