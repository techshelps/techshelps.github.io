

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Call LAN Manager Functions from 16-bit Visual Basic 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159423">
<META NAME="KBModify" CONTENT="1997/08/13">
<META NAME="KBCreate" CONTENT="1996/11/13">
<META NAME="Keywords" CONTENT="APrgNet vb416 VB4WIN kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Win32 network service APIs ported from LAN Manager are Unicode and used by Windows NT only. For Windows 95, you must use the 16-bit LAN Manager functions. This article illustrates how to call the 16-bit LAN Manager functions from a Visual Basic...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QATX,QA4Q,QAGI,QAGU,QAY5,QANF,QAUJ,QACJ,QA9A,QAWH,QAVZ,QBWF,QBWP,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Call LAN Manager Functions from 16-bit Visual Basic 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159423</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Win32 network service APIs ported from LAN Manager are Unicode and used
by Windows NT only. For Windows 95, you must use the 16-bit LAN Manager
functions. This article illustrates how to call the 16-bit LAN Manager
functions from a Visual Basic 4.0 16-bit application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample application retrieves network information for a
specified user. It uses two TextBoxes to collect the domain name and the
user name. It then calls NetGetDCName to get the name of the Primary Domain
Controller (PDC) for the specified domain. Once the application retrieves
the PDC, it calls NetUserGetGroups to retrieve the list of global groups
and NetUserGetInfo to retrieve the USER_INFO_10 structure. See the
REFERENCES section of this article for more information.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start Visual Basic 4.0. If you are already running Visual Basic, choose
   New Project on the File menu. Form1 is created by default.

<P><LI>Add a CommandButton, Command1, to Form1.

<P><LI>Add two TextBoxes, Text1 and Text2, to Form1. The domain name is entered
   in Text1 and the user name is entered in Text2.

<P><LI>Add a ListBox, List1, to Form1. The ListBox contains user information
   including the groups that the user belongs to.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
</OL>Option Explicit
<PRE>Private Declare Function LStrCpy Lib "kernel" (ByVal Dest As String, _
    ByVal Source As Any) As Integer
Private Declare Function NetGetDCName Lib "NETAPI.DLL" ( _
    ByVal server As String, ByVal domain As String, ByVal buffer As _
    String, ByVal cbBuffer As Integer) As Integer
Private Declare Function NetUserGetInfo Lib "NETAPI.DLL" (ByVal server _
    As String, ByVal UserName As String, ByVal level As Integer, buffer _
    As Any, ByVal cbBuffer As Integer, pcbTotal As Integer) As Integer
Private Declare Function NetUserGetGroups Lib "NETAPI.DLL" (ByVal server _
    As String, ByVal UserName As String, ByVal level As Integer, ByVal _
    buffer As String, ByVal cbBuffer As Integer, cEntriesRead As _
    Integer, cTotalAvail As Integer) As Integer

</PRE></OL>Private Type USER_INFO_10
<PRE>    usri10_name As String * 22
    usri10_comment As Long
    usri10_usr_comment As Long
    usri10_full_name As Long
    usri10_extraspace As String * 400
</PRE>End Type
<P>
Private Type group_users_info_0
<PRE>    grui0_name As String * 22
</PRE>End Type
<P>
Private UserI As USER_INFO_10
Private Group As group_users_info_0
<P>
Public Function PointerToString(Pointer As Long) As String
<PRE>    Dim res As Integer
    Dim buffer As String * 80
    buffer = String(80, 0)

    If Pointer &gt; 0 Then
      res = LStrCpy(buffer, Pointer)
    End If

    PointerToString = Left(buffer, InStr(buffer, Chr(0)) - 1)
</PRE>End Function

<OL><P><LI>Add the following code in the Command1_Click event procedure:
<P>
<PRE>Private Sub Command1_Click()
    List1.Clear
    Screen.MousePointer = vbHourglass

    Dim domain As String
    domain = Text1.Text
    Dim user_name As String
    user_name = Text2.Text

    Dim dc_name As String
    dc_name = String(22, 0)


    Dim status As Long
   'Get the name of the Domain Server
    status = NetGetDCName("", domain, dc_name, Len(dc_name))

    If status &lt;&gt; 0 Then
        MsgBox "Domain not found."
    Else
        'Strip off the extra characters from dc_name
        dc_name = Left(dc_name, InStr(dc_name, Chr(0)))

        Dim cRead As Integer
        Dim total As Integer
        Dim allGroups As String * 255
        allGroups = String(255, 0)
        status = NetUserGetGroups(dc_name, user_name, 0, _
                allGroups, 255, cRead, total)
        If (status &lt;&gt; 0) Then
            MsgBox "NetUserGetGroups fails."
            Exit Sub
        Else
            Dim i As Integer
            For i = 1 To total
                Group.grui0_name = Trim(Left(allGroups, 21))
                List1.AddItem Group.grui0_name
                allGroups = Mid(allGroups, 22, Len(allGroups) - 22)
                allGroups = Trim(allGroups)
            Next i
        End If

        status = NetUserGetInfo(dc_name, user_name, 10, _
                UserI, Len(UserI), total)

        If (status &lt;&gt; 0) Then
            MsgBox "User name not found."
            Exit Sub
        Else
            List1.AddItem "User Name: " &amp; Left(UserI.usri10_name, _
                InStr(UserI.usri10_name, Chr(0)) - 1)
            List1.AddItem "Comment: " &amp; _
                PointerToString(UserI.usri10_comment)
            List1.AddItem "User Comment: " &amp; _
                PointerToString(UserI.usri10_usr_comment)
            List1.AddItem "Full Name: " &amp; _
                PointerToString(UserI.usri10_full_name)
        End If
    End If

    Screen.MousePointer = vbNormal
End Sub

</PRE><P><LI>Start the program. Enter a valid domain name and user name in the
   TextBoxes and click the CommandButton. The ListBox fills with the user
   information.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
The following article in the Microsoft Knowledge Base demonstrates
techniques that are useful in calling most 32-bit network service APIs on
Windows NT from a Visual Basic 4.0 32-bit application:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q151774.htm">Q151774</A></B>
   TITLE     : How to Call NetUserGetInfo from Visual Basic 4.0

</PRE></OL>(c) Microsoft Corporation 1996, All Rights Reserved.
Contributions by Wei Hua, Microsoft Corporation
 
<PRE>Keywords          : APrgNet vb416 VB4WIN kbhowto
Version           : 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
