

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Drop Item into Specified Location in VB List Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80187 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/01/21">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can drag an item and drop it into a list box by using the Visual Basic TextHeight method and the Windows API SendMessage() function to calculate where to drop the item.  MORE INFORMATION  There is no standard way to determine the exact position...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBS0,QA9N,QACI,QAPN,QAKJ,QA28,QATJ,QAH4,QA5V,QAY5,QAY4,QAB9,QDL9,QBXT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Drop Item into Specified Location in VB List Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80187 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can drag an item and drop it into a list box by using the Visual
Basic TextHeight method and the Windows API SendMessage() function
to calculate where to drop the item.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There is no standard way to determine the exact position where you are
dropping an item into a Visual Basic list box when you perform a drag
and drop operation. You must calculate the position using the TextHeight
method and the Windows API SendMessage() function with the constant
LB_GETTOPINDEX.
<P>
Using TextHeight, determine the height of each row of a list box. Divide
this by the Y value that is passed as an argument in the List_DragDrop
event procedure to determine how many lines from the top of the list box
that the Drag.Icon is located over. The SendMessage constant LB_GETTOPINDEX
gives you the index of the first visible item in the list box. Adding these
two numbers shows you the index location for the insertion point -- the
spot where you want to insert the item in the list box.
<P>
<P><h3>Step-by-Step Example to Demonstrate Dropping Items into List box</h3>
 
1. Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
<PRE>   if Visual Basic is already running. Form1 is created by default.

</PRE><P><LI>Add a Picture control (Picture1) to Form1 and set its DragMode property
   to Automatic. Then add a List box (List1) to Form1 and set its DragMode
   property to Manual.

<P><LI>Add the following code to the global module:
<P>
<PRE>   '============= Global.Bas ===============
   'NOTE: Enter the following Declare statement as one, single line:
   Declare Function SendMessage&amp; Lib "User" (ByVal hWnd%, ByVal wMsg%,
      ByVal wParam%, lParam As Any)
   Declare Function GetFocus Lib "User" () As Integer
   Global Const LB_GETTOPINDEX = &amp;H400 + 15

</PRE><P><LI>Add the following code to the DragDrop event procedure of List1:
<P>
<PRE>   '============== Form1.frm ==================
   Sub List1_DragDrop (Source As Control, X As Single, Y As Single)

      'get the first visible index in the list box
      List1.SetFocus
      ListHwnd = GetFocus()
      TopI&amp; = SendMessage(ListHwnd, LB_GETTOPINDEX, 0&amp;, 0&amp;)
      ColumnHeight = TextHeight("A ")
      InsertI&amp; = Y \ ColumnHeight
      If InsertI&amp; &lt;= List1.ListCount Then
         ' Enter the following two lines on one, single line:
         List1.AddItem "This is inserted @" + Format$(InsertI&amp;
            + TopI&amp;, "0"), InsertI&amp; + TopI&amp;
      Else
         List1.AddItem "This is inserted"
      End If

   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S) to run the program.
<P>
</OL>Drag and drop the picture box over the list box and an item should be
added to the list box. An item will be added to the list box each time
you drag and drop the picture box over the list box.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
