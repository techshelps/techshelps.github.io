

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Quickly List the Contents of a Directory </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119396">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/08/15">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Although Visual Basic has both built-in functions (Dir$ and Dir) and a built-in control (File list box) for listing the files in a directory, using a standard list box and the Windows API SendMessage function lists files in a directory much more qu...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QAH4,QBS0,QAFI,QAE1,QA7H,QANG,QBBI,QBJZ,QBXB,QAY5,QATJ,QABA,QABB,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Quickly List the Contents of a Directory</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119396</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Although Visual Basic has both built-in functions (Dir$ and Dir) and a
built-in control (File list box) for listing the files in a directory,
using a standard list box and the Windows API SendMessage function lists
files in a directory much more quickly.
<P>
NOTE: Replacing the File list box or Dir command using the technique
described in this article will only improve performance perceptibly if the
File list box or Dir command is used heavily in the application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This technique uses the LB_DIR message for list boxes to add a list of
filenames to a list box. To do this, call the Windows API SendMessage
function. The SendMessage function requires the following parameters to
list the files:
<P>
<PRE>   SendMessage (hWnd%, LB_DIR, wParam%, lParam)

</PRE>where
<P>
<PRE>   hWnd%    is the handle of the list box.
   wParam%  is an integer that specifies the permissible file
            attributes.
   lParam   is a long pointer to a string containing the full path and
            file name to add to the list. This can include wildcards.

</PRE>The wParam% argument can be any combination of the following values:
<P>
<PRE>Value             Meaning
</PRE> 
<PRE>DDL_ARCHIVE       File has been archived.
DDL_DIRECTORY     File must be a directory name.
DDL_EXCLUSIVE     Exclusive flag. If the exclusive flag is set, only
                  files of the specified type are listed. Otherwise,
                  files of the specified type are listed in addition to
                  files that do not match the specified type.
DDL_HIDDEN        File must be hidden.
DDL_READONLY      File must be read only.
DDL_READWRITE     File can be read from or written to.
DDL_SYSTEM        File must be a system file.

</PRE><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start Visual Basic; or, choose New Project from the File menu
   (ALT+F, N) if Visual Basic is already running. Form1 is created by
   default.

<P><LI>Add a list box (List1) to Form1.

<P><LI>Add a new code module to the project by choosing New Module from the
   File menu.

<P><LI>Add the following code to the new code module:
<P>
<PRE>   ' Enter the Declare statement on one single line:
   Declare Function SendMessage Lib "user" (ByVal hwnd As Integer,
                                            ByVal wMsg As Integer,
                                            ByVal wParam As Integer,
                                            lParam As Any) As Long

</PRE><P><LI>Declare the following constants in the General Declaration section of
   the code module
<P>
<P><PRE>      Global Const WM_USER = &amp;H400
      Global Const LB_DIR = WM_USER + 14
      Global Const DDL_ARCHIVE = &amp;H0020
      Global Const DDL_DIRECTORY = &amp;H0010
      Global Const DDL_EXCLUSIVE = &amp;H8000
      Global Const DDL_HIDDEN = &amp;H0002
      Global Const DDL_READONLY = &amp;H0001
      Global Const DDL_READWRITE = &amp;H0000
      Global Const DDL_SYSTEM = &amp;H0004
</PRE>
<P><LI>To fill the list box with all of the files, which may or may not be
   hidden, in the C:\WINDOWS directory, place the following code in the
   Form_Load event of Form1:
<P>
<PRE>      Sub Form_Load ()
         List1.Clear
         s$ = "C:\WINDOWS\*.*"
         i% = SendMessage(List1.hWnd, LB_DIR, DDL_HIDDEN, ByVal s$)
      End Sub

</PRE><P><LI>Press the F5 key to run the application.
<P>
</OL>The contents of the list box can be manipulated by using any of the
standard list-box methods. In cases where the filenames are being used
elsewhere in the code (for example, in an outline control), the Visible
property of the list box can be set to False so that the list box will not
be displayed.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: speed faster 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: PrgOptTips<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
