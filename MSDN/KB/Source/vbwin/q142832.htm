

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Effect of Priority Setting in the References Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142832">
<META NAME="KBModify" CONTENT="1996/12/11">
<META NAME="KBCreate" CONTENT="1996/01/21">
<META NAME="Keywords" CONTENT="kbprg iapole">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  At compile time, when Visual Basic is attempting to resolve a constant or class name, Visual Basic will search all of the references in the 'Available References:' list box in the References dialog, from top to bottom. By changing the position of t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAB3,QAPN,QAW6,QBVR,QA5F,QAMA,QAOY,QABA,QAYZ,QAE1,QBXS,QA9Q,QA59 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Effect of Priority Setting in the References Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142832</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard, Professional, and Enterprise Editions of Microsoft Visual
<PRE>  Basic, 16-bit and 32-bit, for Windows, version 4.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
At compile time, when Visual Basic is attempting to resolve a constant or
class name, Visual Basic will search all of the references in the
<PRE>'Available References:' list box in the References dialog, from top to
</PRE>bottom. By changing the position of the files referred to in the 'Available
References:' list box with the Priority buttons, the order that Visual
Basic uses OLE Automation objects can be changed. Visual Basic uses the
definition of the first object found that matches the name provided in
code. For example, if OLE servers A and B define Window objects, and A is
higher in the references list, Visual Basic resolves "Window" to
"A.Window." You can make Visual Basic resolve "Window" to "B.Window" by
moving B higher in the priority list than A.
<P>
Note: Changing the order of references in an existing project may break
code. For example, given a project that has a reference only to OLE server
A (which defines the only "Window" object) and code in 20 different modules
that simply uses the syntax "Window". In this program all references to
"Window" will resolve to "A.Window". Now suppose the need arises in a
single module for a "Window" object provided by server B. While writing
code in this module, a programmer switches the priority of server A and B
so that the need to use "B.Window" is removed. This causes the code in the
20 other modules to break. Where "Window" used to resolve to "A.Window", it
now resolves to "B.Window" because server B is listed before server A in
the list of available references. In this case the references should be
left in the original order and all calls to "Window" in the single module
should be explicitly qualified (for example: "B.Window").
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For more information on this subject, including other methods to manipulate
the way Visual Basic chooses what object to use, please see the following
article(s) in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q129867.htm">Q129867</A></B>
   TITLE     : How to Debug Typelib Shadowing
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4all vb4win<BR>
KBCategory: kbprg<BR>
KBSubcategory: iapole<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
