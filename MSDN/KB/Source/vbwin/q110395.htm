

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Modify Destination Directory of Setupwizard SETUP1.EXE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110395">
<META NAME="KBModify" CONTENT="1997/02/05">
<META NAME="KBCreate" CONTENT="1994/01/20">
<META NAME="Keywords" CONTENT="kbtool kbprg kbfile">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using the Visual Basic Setup Toolkit, you can modify the setup program that was created by Setupwizard.  The example shown below makes your setup program install your program file to the Windows directory instead of to the directory specified by th...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAA1,QDI2,QDIZ,QAMA,QBJZ,QAFI,QBXB,QATJ,QA5F,QAH4,QAH6,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Modify Destination Directory of Setupwizard SETUP1.EXE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110395</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using the Visual Basic Setup Toolkit, you can modify the setup program that
was created by Setupwizard.
<P>
The example shown below makes your setup program install your program file
to the Windows directory instead of to the directory specified by the user.
You can do this by changing the SETUP1A.FRM source code. You can then
make a new SETUP1.EXE file and new SETUP1.EX_ file on your distribution
disk.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Run the Setupwizard to create the master distribution disks for your
   product's files.

<P><LI>Start Visual Basic and open the SETUP1A.MAK project. SETUP1A.MAK is
   already on the most recently opened list on the File menu because
   the Setupwizard used it once. The Setupwizard created the SETUP1A.MAK
   project in the C:\VB\SETUPKIT\SETUP1 directory.

<P><LI>Go to the Form Load event for the SETUP1A.FRM form. Find the lines of
   code that copy your file, which will appear as follows - but on one,
   single line:
<P>
<P><PRE>      If Not CopyFile(SourcePath$, destPath$, "yours.EX_", "yours.EXE")
<PRE></PRE>         Then GoTo ErrorSetup

   If you want to install your file &lt;yours&gt;.EXE into the user's Windows
   directory, change the destPath$ variable to WinDir$ as follows:

      ' Enter the following on one, single line:
      If Not CopyFile(SourcePath$, WinDir$, "yours.EX_", "yours.EXE")
         Then GoTo ErrorSetup

   You might want to change the destination to another directory, depending
   on your setup design.

</PRE><P><LI>From the File menu, choose Make EXE File to re-create the file
   SETUP1.EXE in the C:\VB\SETUPKIT\SETUP1 directory.

<P><LI>Compress and copy this new SETUP1.EXE file to your distribution disk.
   For example, the following command at the MS-DOS prompt compresses
   SETUP1.EXE into SETUP1.EX_ and copies SETUP1.EX_ to Drive A:
<P>
   C:\VB\SETUPKIT\KITFILES\COMPRESS -r SETUP1.EXE A:\
<P>
   This replaces the old SETUP1.EX_ that was created on the distribution
   disk by the Setupwizard.
<P>
</OL><h3>Updated Setup Toolkit Files</h3>
 
<P>
The following Setup Toolkit files were updated after Visual Basic version
3.0 shipped. The list shows the directories where the files are usually
located relative to the Visual Basic directory.
<P>
<PRE>   File                             Purpose
   ---------------------------------------------------------------
   \WINDOWS\SETUPWIZ.INI            Setupwizard configuration file
   SETUPKIT\KITFILES\SETUP.EXE      Setup toolkit
   SETUPKIT\KITFILES\SETUPWIZ.EXE   Application Setupwizard
   SETUPKIT\SETUP1\SETUP1.BAS       Setup toolkit
   SETUPKIT\SETUP1\SETUP1.FRM       Setup toolkit

</PRE></OL>The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/setupk.exe">setupk.exe</A> <I>(size: 104224 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services

</PRE><h3>Visual Basic Setup Toolkit and SetupWizard</h3>
 
<P>
The following section is taken from the SetupWizard topic in the Visual
Basic Help menu:
<P>
SETUP.EXE is the bootstrap program provided by the Visual Basic Setup
Toolkit in the KITFILES subdirectory. SETUP.EXE pre-installs files listed
in SETUP.LST and then runs SETUP1.EXE.
<P>
SETUP1.EXE is the Visual Basic setup program created by the SetupWizard.
The source files for the Visual Basic Setup Toolkit's SETUP1.EXE file are
in the SETUPKIT\SETUP1 subdirectory.
<P>
SETUP.LST is a file required by SETUP.EXE. It allows files needed by your
Visual Basic setup program to be pre-installed into the Windows System
directory. SETUP.LST lists the files to be pre-installed by the SETUP.EXE
bootstrap. Each line contains a single file. The Visual Basic setup program
(SETUP1.EXE) must be the first entry. SETUP.LST is created automatically by
the SetupWizard. The files in SETUP.LST can be compressed. Here is a sample
SETUP.LST file:
<P>
<PRE>   SETUP1.EX_
   VBRUN300.DL_
   SETUPKIT.DL_
   GRID.VB_

</PRE>The Visual Basic SetupWizard is a tool used with the Visual Basic Setup
Toolkit. The SetupWizard takes you through six steps to create master
distribution disks for your Visual Basic application.
<P>
The first time you run the SetupWizard, you are prompted for the location
of several important files. This information is then kept in the
SETUPWIZ.INI file in your Windows directory. The SetupWizard creates a
standard SETUP1.EXE file based on the information in your .MAK file and the
information you provide in the SetupWizard. The SetupWizard supports
multiple disks and can split large files to fit on your disk media.
<P>
NOTE: The SetupWizard is geared toward Visual Basic developers and is not a
general Windows Setup Tool. Use the GUI Setup Toolkit provided in the
Windows SDK. The SetupWizard is designed to handle most setup scenarios
that a Visual Basic developer may encounter. Some scenarios may require you
to create a custom SETUP1.EXE file.
<P>
The SetupWizard is not a diskcopy tool. Use MS-DOS's DiskCopy or File
Manager's Disk Copy Disk menu choice to make copies of your master
distribution disks.
<P>
<P><h2>REFERENCES</h2>
 
<P>
See the SetupWizard topic in Visual Basic's Help menu.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool kbprg kbfile<BR>
KBSubcategory: TlsSetWiz update3.00<BR>
Additional reference words: 3.00 installing
<P>

<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
