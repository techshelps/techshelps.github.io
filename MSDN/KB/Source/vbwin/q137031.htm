

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: OLE Servers Don't Unload When Last Object Set to Nothing </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137031">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/09/19">
<META NAME="Keywords" CONTENT="kbole kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An OLE Automation server created with Visual Basic fails to unload from memory when the last instance of the object is destroyed.  CAUSE ======  A Visual Basic client can destroy the last instance of a Visual Basic OLE server it created by:   - Set...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA9Q,QAML,QAPN,QAH4,QAO4,QARL,QAIJ,QAGB,QAW6,QA5F,QAMA,QBXS,QAFF,QBVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: OLE Servers Don't Unload When Last Object Set to Nothing</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137031</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
SYMPTOMS
 
<P>
An OLE Automation server created with Visual Basic fails to unload from
memory when the last instance of the object is destroyed.
<P>
CAUSE
 
<P>
A Visual Basic client can destroy the last instance of a Visual Basic OLE
server it created by:

<UL><LI>Setting it to Nothing (the preferred method).

<LI>Shutting down by unloading the last form (acceptable, but not as good).

<LI>Ending the program by using the End statement (this is not recommended;
   it can cause problems because the QueryUnload, Unload, and Terminate
   events don't fire)
<P>
</UL>If the OLE server has a non-visible form still loaded when the last
instance is destroyed, the OLE server is not destroyed. This is usually
handled in the Terminate event of the OLE server.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
OLE servers are responsible for cleaning up any objects that they create or
load. When an OLE server is unloaded, the Terminate event will be fired.
This is where code should be located to unload any forms that the OLE
server has in memory.
<P>
STATUS
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior in Visual Basic 4.0</h3>
 

<OL><P><LI>Begin with a minimal OLE server and client application. For information
   on how to do this, please see the following article in the Microsoft
   Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VBWIN/Q129801.htm">Q129801</A></B>
<PRE>   TITLE     : How to Create and Use a Minimal OLE Automation Server

</PRE><P><LI>Add a form (Form1) to the OLE server.

<P><LI>Add a timer control (Timer1) to Form1.

<P><LI>Set the following properties:
<P>
<PRE>   Object   Property    Value
   --------------------------
   Form1    Visible     False
   Timer1   Enabled     True
   Timer1   Internal    2000

</PRE><P><LI>Add the following code to the Timer1_Timer event procedure:
<P>
<PRE>   Private Sub Timer1_Timer ()
      Beep
   End Sub

</PRE><P><LI>Add the following code to the General Declarations section of Class1:
<P>
   Dim frmX As New Form1

<P><LI>Add the following line to the existing MyClass_Initialize event
   procedure:
<P>
   Load frmX

<P><LI>Start the OLE server program by pressing the F5 key.

<P><LI>Minimize Visual Basic.

<P><LI>Start a second instance of Visual Basic.

<P><LI>Open (or create) the OLE client application described in Phase 2 of
<P><PRE>    the article referenced in step 1.
</PRE>
<P><LI>Start the OLE client program running by pressing the F5 key.

<P><LI>Click Form1 of the OLE client program. The OLE server is created and
<P><PRE>    begins beeping every two seconds.
</PRE>
<P><LI>Close the OLE client application. Notice that the OLE server continues
<P><PRE>    to beep.
</PRE><P>
</OL>Steps to Resolve the Failure to Unload
 
<P>
With the above OLE server add the following code to the MyClass_Terminate
event:
<P>
<PRE>   Private Sub MyClass_Terminate ()
      Unload frmX
   End Sub

</PRE></OL>When the OLE server is terminated, the Terminate event fires, and the
hidden form is unloaded.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbole kbprg kbprb<BR>
KBSubcategory: IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
