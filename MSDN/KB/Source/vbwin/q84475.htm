

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Toolkit 3-D Option &amp; Check Controls Don't Repaint in 3.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84475 ">
<META NAME="KBModify" CONTENT="1997/10/30">
<META NAME="KBCreate" CONTENT="1992/05/12">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The 3-D Option Button and 3-D Check Box custom controls in the THREED.VBX file do not paint properly if their Value property is changed while the form is loaded (hidden) before being shown. The caption area appears transparent (not painted) until t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABI,QABH,QAH4,QAB5,QBS0,QAMN,QA7O,QAOE,QDL9,QBWO,QBWN,QAHP,QAFF,QBWQ,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Toolkit 3-D Option &amp; Check Controls Don't Repaint in 3.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84475 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 2.00
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 2.0
- Microsoft Professional Toolkit for Visual Basic programming system
<PRE>  for Windows, version 1.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The 3-D Option Button and 3-D Check Box custom controls in the
THREED.VBX file do not paint properly if their Value property is
changed while the form is loaded (hidden) before being shown. The
caption area appears transparent (not painted) until the user clicks
it or until the Value is changed in code after the form is shown. This
problem occurs only in Windows version 3.1, not Windows version 3.0.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs because of changes in the Windows GDI routines
to optimize screen refresh performance. For that reason, Windows
version 3.1 eliminates what it considers redundant paints.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
You can work around this problem by assigning the Caption property of
the affected controls to themselves when the form is shown again. This
code would be placed after the Form2.Show. For example:
<P>
<PRE>   Form.Control.Caption = Form.Control.Caption

</PRE>This forces a refresh of the area not being painted. Here are the steps
to implement this workaround:

<OL><P><LI>Add the following code to the Command2_Click event:
<P>
<PRE>   Sub Command2_Click ()
      Option3D3.Value=1
      Check3D3.Value=1
      Form2.Show
      Form2.Option3D1.Caption = Form2.Option3D1.Caption
      Form2.Option3D2.Caption = Form2.Option3D2.Caption
      Form2.Option3D3.Caption = Form2.Option3D3.Caption
      Form2.Check3D1.Caption = Form2.Check3D1.Caption
      Form2.Check3D2.Caption = Form2.Check3D2.Caption
      Form2.Check3D3.Caption = Form2.Check3D3.Caption
   End Sub

</PRE><P><LI>Run the program. Change the values by clicking some checks and
   options.

<P><LI>Click Form2 to hide it.

<P><LI>Click the Second Show and notice that the paint is now handled
   correctly.
<P>
</OL>You can also work around this problem by explicitly doing a SetFocus
call on the control(s) in question. If you are using control array(s),
it should be fairly easy. For example, if you had a five-element
control array of Check3D1 check boxes, use this code:
<P>
<PRE>   Sub Form_Paint()
      For a% = 0 to 4
         Check3D1(a%).SetFocus
      Next
   End Sub

</PRE></OL><h2>RESOLUTION</h2>
 
<P>
Sheridan Software, manufacturer of the 3-D Check Box and 3-D Option
Button controls, has issued an update to THREED.VBX that corrects the
painting problems experienced in Windows version 3.1. To obtain this
update, call the Sheridan BBS at (516) 753-5452 (2400 baud) or (516)
753-6510 (9600 baud).
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed above
when used in Microsoft Windows version 3.1. This problem was corrected
in Microsoft Visual Basic version 3.0 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default. Add a
   second form (Form2).

<P><LI>From the File menu, choose Add File. In the Files box, select the
   THREED.VBX custom control file. The 3-D tools appear in the Toolbox.

<P><LI>Add the following controls to the forms, and set their properties as
   indicated:
<P>
   Form1:
<P>
<PRE>      Control              Property    Setting
      --------------------------------------------
      Form                 FormName    Form1
      Command button       CtlName     Command1
      Command button       Caption     First Show
      Command button       CtlName     Command2
      Command button       Caption     Second Show

   Form2:

      Control              Property    Setting
      ------------------------------------------
      Form                 FormName    Form2
      3-D Check box        CtlName     Check3D1
      3-D Check box        CtlName     Check3D2
      3-D Check box        CtlName     Check3D3
      3-D Option button    CtlName     Option3D1
      3-D Option button    CtlName     Option3D2
      3-D Option button    CtlName     Option3D3

</PRE><P><LI>Add the following code to the Command1_Click event procedure for Form1:
<P>
<PRE>   Sub Command1_Click
     Form2.Option3D1.Value=1 ' Set values for first show.
     Form2.Check3D1.Value=1
     Form2.Show
   End Sub

</PRE><P><LI>Add the following code to the Command2_Click event procedure for Form1:
<P>
<PRE>   Sub Command2_Click ()
     Form2.Option3D3.Value=1
     Form2.Check3D3.Value=1
     Form2.Show
   End Sub

</PRE><P><LI>Add the following code to the Form_Click event procedure for Form2:
<P>
<PRE>   Sub Form_Click ()
     Form2.Hide
   End Sub

</PRE><P><LI>Run the program.
<P>
</OL>When you click the First Show button, the paint occurs properly for
all controls, including the controls whose values were changed in code
prior to the show. On Form2, click an option box and a check box to
change Values.Click on Form2 to hide the form. Click the Second Show
button. The controls whose values changed prior to the form being
shown are only painted around the area with the check box or option
box. The rest of the area is unpainted.
<P>
Reference(s):
<P>
Sheridan Software Systems, Inc.
65 Maxess Road
Melville, NY  11747
<P>
Phone: (516) 753-0985
Fax:   (516) 293-4155
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist1.00 buglist2.00 fixlist3.00 1.00 2.00<BR>
3.00 3.10<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsCus<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
