

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Palette Does Not Change with Picture on MDI Child </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149233">
<META NAME="KBModify" CONTENT="1996/03/29">
<META NAME="KBCreate" CONTENT="1996/03/28">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Changing from one 256-color bitmap to another 256-color bitmap at run time causes the second bitmap to be rendered with the palette from the first bitmap. This causes the second bitmap to look wrong, unless both bitmaps have similar or identical co...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBLP,QAPG,QAYS,QAH4,QBS0,QAR4,QAG9,QAY2,QAB2,QBWS,QAKJ,QAIJ,QDKW,QAKP,QBQU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Palette Does Not Change with Picture on MDI Child</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149233</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Changing from one 256-color bitmap to another 256-color bitmap at run time
causes the second bitmap to be rendered with the palette from the first
bitmap. This causes the second bitmap to look wrong, unless both bitmaps
have similar or identical colors. This problem occurs only when the picture
or image control resides on an MDI child form.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, send a WM_QUERYNEWPALETTE message to the MDI
child form immediately after changing the bitmap. Follow these steps to
implement this fix:

<OL><P><LI>Add a single module to the project to hold the declaration for
   SendMessage and the WM_QUERYNEWPALETTE constant. If a module already
   exists in the project it can be used instead of adding a new one.

<P><LI>Add the following function and constant declarations for the appropriate
   bitness to the module:
<P>
   For Win16 or Win32:
<P>
   Public Const WM_QUERYNEWPALETTE = &amp;H30F
<P>
   For Win32 (only):
<P>
<PRE>   Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
   (ByVal hWnd As Long, ByVal wMsg As Long, ByVal wParam As Long, lParam As
   Long) As Long

   For Win16 (only):

   Declare Function SendMessage Lib "User" (ByVal hWnd As Integer, _
   ByVal wMsg As Integer, ByVal wParam As Integer, lParam As Any) As Long

</PRE><P><LI>Immediately after the code where the bitmap is changed, add this single
   call to SendMessage (assuming Form1 is the MDI child where the picture
   or image control is located):
<P>
   SendMessage Form1.hWnd, WM_QUERYNEWPALETTE, 0, 0
<P>
   When the form receives this message it will correctly set the palette so
   that the new image is displayed correctly. These declarations were
   obtained from the 16-bit and 32-bit versions of the API Text Viewer.
<P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be an issue in the Microsoft products
listed at the beginning of this article. Microsoft is researching this
problem and will post new information here in the Microsoft Knowledge Base
as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce</h3>
 

<OL><P><LI>Start Visual Basic 4.0. Form1 is created by default.

<P><LI>Add an MDI form by selecting MDI Form from the Insert menu.

<P><LI>Change the MDIChild property for Form1 to True.

<P><LI>Add a single Image control to Form1.

<P><LI>Change the Picture property of the image control to point to a 256-color
   bitmap.

<P><LI>Add this code to the Form_Click event of Form1 (where PICTURE.BMP is the
   filename of a 256-color bitmap with a different palette than the one
   selected in step 5):
<P>
<PRE>   Private Sub Form_Click()
      Image1.Picture = LoadPicture("PICTURE.BMP")
   End Sub

</PRE><P><LI>Press F5 or select Start from the Run menu to run the application. Click
   Form1 and see that the picture changes but that the colors are not
   correct. Sending a WM_QUERYNEWPALETTE message immediately after changing
   the bitmap will fix the problem.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgOther<BR>
Additional reference words: 4.00 vb4win vb4all
<P>

<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
