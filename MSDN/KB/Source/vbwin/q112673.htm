

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Pass &amp; Return Unsigned Integers to DLLs from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112673">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/03/16">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic supports signed integers, not unsigned integers. Therefore, the valid range of values, for an integer variable, is from -32767 to +32767.  The C language supports unsigned integers, which have a range from 0 to 65536. To pass a value w...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA4Q,QAD7,QAH7,QAH6,QAUD,QAYL,QAY2,QAKD,QAH4,QDMR,QAJQ,QA5F,QAMA,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Pass &amp; Return Unsigned Integers to DLLs from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112673</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 1.0, 2.0, and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic supports signed integers, not unsigned integers. Therefore,
the valid range of values, for an integer variable, is from -32767 to
+32767.
<P>
The C language supports unsigned integers, which have a range from 0 to
65536. To pass a value within the range 32767 to 65536, you need to do a
conversion in code to see the correct results. This article shows you how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Visual Basic stores its integer variables in an 8-bit data field, as
does C. Visual Basic uses signed integers only, so it reserves one of the
bits as a sign bit. In C, you have the choice of an unsigned integer (the
variable ranges from 0 to 65536) or a signed integer (the variable ranges
from -32767 to +32767 as do Visual Basic integer variables).
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
Follow a process similar to the following to pass a value greater than
32767 as an integer from Visual Basic to a dynamic link library (DLL) that
is expecting an unsigned integer or to return an integer value that is
outside the range of valid Visual Basic integers:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code to the general declarations section of Form1.
   Note that you must actually have a DLL that takes an unsigned integer
   as a parameter.
<P>
<PRE>   ' MyLong is a function in a DLL that takes an unsigned integer as a
   ' parameter and returns the same value passed in. To run this sample you
   ' will have to create the MYLONG function. Enter the following Declare
   ' statement as one, single line:
   Declare Function MyLong Lib "MyLong.DLL" (ByVal iInt AS Integer)
      As Integer

</PRE><P><LI>Add a command button (Comamnd1) to Form1.

<P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Sub Command1_Click()
      Dim lValue As Long
      Dim i As Integer, w As Integer
      ' Initialize lvalue:
      lValue = 40000
      If lValue &gt; 32767 Then
         w = lValue - 65536
      Else
         w = lValue     ' Just pass it on
      End If
      ' Call a DLL that is expecting an unsigned integer.
      ' For this example, the MyLong function will return
      ' the same value passed in.
      i = MyLong(w)

      ' Convert returned value:
      If i &lt; 0 Then
         lValue = 65536 + i
      Else
         lValue = i
      End If
      ' Display the results:
      Print Str(lValue)
   End Sub

</PRE><P><LI>Run the program.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
