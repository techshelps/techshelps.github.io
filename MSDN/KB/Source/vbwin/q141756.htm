

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Play MIDI Files Using API Calls from Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141756">
<META NAME="KBModify" CONTENT="1995/12/29">
<META NAME="KBCreate" CONTENT="1995/12/24">
<META NAME="Keywords" CONTENT="kbui kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates how to play a MIDI (.MID) file from Visual Basic using the WIN16 or WIN 32 API call named mciSendString. If you have the Professional or Enterprise Editions of Visual Basic version 4.0, you can use the MCI control to play ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGI,QBWS,QAH4,QA5F,QAMA,QA5B,QAMN,QAIJ,QAI4,QBJZ,QDL9,QDIT,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Play MIDI Files Using API Calls from Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 29, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141756</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to play a MIDI (.MID) file from Visual Basic
using the WIN16 or WIN 32 API call named mciSendString. If you have the
Professional or Enterprise Editions of Visual Basic version 4.0, you can
use the MCI control to play a MIDI file. You don't need to use the APIs.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step to an Application that Plays a .MID File</h3>
 

<OL><P><LI>Start Visual Basic, or if Visual Basic is already running, click New
   Project on the File menu (ALT, F, N). Form1 is created by default.

<P><LI>Add a Command Button (Command1) to Form1.

<P><LI>Add the following code to the Command1_Click event of Form1:
<P>
<PRE>   Private Sub Command1_Click()
   Dim ret As Integer

   ' The following will open the sequencer with the C:\WIN31\CANYON.MID
   ' file. Canyon is the device_id.

   ret = mciSendString( _
   "open c:\windows\CANYON.MID type sequencer alias canyon", 0&amp;, 0, 0)

   ' The wait tells the MCI command to complete before returning control
   ' to the application.

   ret = mciSendString("play canyon wait", 0&amp;, 0, 0)

   ' Close CANYON.MID file and sequencer device

   ret = mciSendString("close canyon", 0&amp;, 0, 0)

   End Sub

</PRE><P><LI>Add the following code to the general declarations section of Form1:
<P>
   #If Win32 Then
<P>
<PRE>   Private Declare Function mciSendString Lib "winmm.dll" Alias _
   "mciSendStringA" (ByVal lpstrCommand As String, ByVal  _
   lpstrReturnString As Any, ByVal uReturnLength As Long, ByVal _
   hwndCallback As Long) As Long

   #ElseIf Win16 Then

   Private Declare Function mciSendString Lib "mmsystem" (ByVal _
   lpstrCommand As String, ByVal lpstrReturnStr As Any, ByVal _
   wReturnLen As Integer, ByVal hCallBack As Integer) As Long

   #End If

</PRE><P><LI>On the Run menu, click Start (ALT, R, S) or press F5 to run the program.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
More information about mciSendString() can be found in:

<UL><LI>  The Multimedia Programmer's Reference on page 3-26.
<LI>  Command strings described on pages 7-23 to 7-93 and in the
<P><PRE>     WIN31MWH.HLP file shipped with the Windows 3.1 Software Development
     Kit (SDK).
<P></BLOCKQUOTE>
</UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbui kbprg<BR>
KBSubcategory: APrgWindow<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 29, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
