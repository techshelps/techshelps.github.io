

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Printer.TextWidth Returning Inconsistent Results in IDE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171815">
<META NAME="KBModify" CONTENT="1997/12/18">
<META NAME="KBCreate" CONTENT="1997/07/23">
<META NAME="Keywords" CONTENT="vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using Printer.TextWidth from the IDE works correctly the first time a project is run, but may return incorrect values after that. You must completely close Visual Basic and restart to see correct results again. The TextWidth method works correctly ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAR4,QACT,QAOX,QATX,QADF,QDO3,QAVX,QA56,QA55,QAM1,QAMB,QAAP,QAUD,QAL3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Printer.TextWidth Returning Inconsistent Results in IDE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171815</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise
   Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using Printer.TextWidth from the IDE works correctly the first time a
project is run, but may return incorrect values after that. You must
completely close Visual Basic and restart to see correct results again.
The TextWidth method works correctly for other objects, and
Printer.TextWidth works correctly in an EXE.
<P>
<P><h2>CAUSE</h2>
 
<P>
Visual Basic closes the Printer Object's Font information incorrectly when
switching from run-time to design-time, so, on subsequent runs, the Font
information may not be retrieved properly.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. This bug has been fixed in Visual Studio
97 Service Pack 2.
<P>
For more information on the Visual Studio 97 Service Pack 2, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VSTUDIO/Q170365.htm">Q170365</A></B>
   TITLE     : INFO: Visual Studio 97 Service Packs - What, Where, and Why

</PRE>For a list of the Visual Basic 5.0 bugs that were fixed in the Visual
Studio 97 Service Pack 2, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q171554.htm">Q171554</A></B>
   TITLE     : INFO: Visual Basic 5.0 Fixes in Visual Studio 97
               Service Pack 2

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new Visual Basic 5.0 Standard EXE Project.

<P><LI>Add a CommandButton to Form1.

<P><LI>Add code to the Click of the CommandButton to set the Printer object's
   Font information and to report Printer.TextWidth(&lt;text string&gt;) for a
   string. For example:
<P>
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>         Printer.FontName = "Arial"
         Printer.FontSize = 8
         Debug.Print Printer.Font.Name;
         Debug.Print Printer.FontSize;
         Debug.Print Printer.TextWidth("Any text string")

         Printer.FontName = "Arial"
         Printer.FontSize = 12
         Debug.Print Printer.Font.Name;
         Debug.Print Printer.FontSize;
         Debug.Print Printer.TextWidth("Any text string")

         Printer.FontName = "Arial"
         Printer.FontSize = 8
         Debug.Print Printer.Font.Name;
         Debug.Print Printer.FontSize;
         Debug.Print Printer.TextWidth("Any text string")
      End Sub

</PRE><P><LI>Run the project and click the button. Observe the Immediate Window.
   You will see the correct value for the text width of the string.

<P><LI>Return to design view.

<P><LI>Repeat steps 4 and 5 one or more times.
<P>
</OL>Results: Values will be correct the first time this runs. But reported
values will sometimes be incorrect on subsequent runs. When compiled into
an EXE, the results are consistently correct.
<P>
Results are unaffected by using a StdFont object or by resetting the
Printer and Font. For example, adding this before setting the font does not
help:
<P>
<PRE>   Printer.Print ""
   Printer.Font = ""
   Printer.ScaleMode = 1
</PRE></OL> 
<PRE>Keywords          : vb5all VS97FixlistSP3 VS97FixlistSP2 VB5FixlistSP2
Version           : 5.0
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbfix kbservicepack</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
