

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Print Text Sideways in Picture Control with Windows API </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99874 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/06/09">
<META NAME="Keywords" CONTENT="kbprint kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The example below shows how to print text sideways in a picture control using Windows API function calls. The text prints vertically in the picture control, rotated by 90 degrees.  MORE INFORMATION  Step-by-Step Example 1. Start Visual Basic. Form1...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADF,QATX,QA4Q,QBS0,QAH4,QAY5,QAYS,QAAL,QAOX,QDL9,QBWQ,QBWO,QBWN,QA7O,QAOE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Print Text Sideways in Picture Control with Windows API</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99874 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The example below shows how to print text sideways in a picture control
using Windows API function calls. The text prints vertically in the
picture control, rotated by 90 degrees.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 
1. Start Visual Basic. Form1 is created by default.

<OL><P><LI>Draw a large picture box (Picture1) on the form.

<P><LI>From the File menu, choose New Module to create a new module. Put the
   following code in the module:
<P>
   DefInt A-Z
   global Const LF_FACESIZE = 32
   Type LOGFONT
<P><PRE>      lfheight As Integer
      lfwidth As Integer
      lfescapement As Integer
      lforientation As Integer
      lfweight As Integer
      lfitalic As String * 1
      lfunderline As String * 1
      lfstrikeout As String * 1
      lfcharset As String * 1
      lfoutprecision As String * 1
      lfclipprecision As String * 1
      lfquality As String * 1
      lfpitchandfamily As String * 1
      lffacename As String * LF_FACESIZE
</PRE>   End Type
<P>
<PRE>   ' Enter each of the following 7 Declare statement on one, single line:
   Declare Function CreateFont% Lib "GDI" (ByVal h%, ByVal w%, ByVal e%,
      ByVal o%, ByVal n%, ByVal i%, ByVal u%, ByVal s%, ByVal c%,
      ByVal op%, ByVal cp%, ByVal q%, ByVal j%, ByVal f$)
   Declare Function createfontindirect Lib "GDI" (lplogfont As LOGFONT)
      As Integer
   Declare Function selectobject Lib "GDI" (ByVal hdc%, ByVal object%)
      As Integer
   Declare Function textout Lib "GDI" (ByVal hdc%, ByVal x%, ByVal y%,
      ByVal text$, ByVal ncount%) As Integer
   Declare Sub deleteobject Lib "GDI" (ByVal object%)
   Declare Function getdevicecaps Lib "GDI" (ByVal hdc%, ByVal nindex%)
      As Integer
   Declare Function gettextface Lib "GDI" (ByVal hdc As Integer,
      ByVal ncount As Integer, ByVal lpname As String) As Integer

   Global Const PROOF_QUALITY = 2
   Global Const FW_NORMAL = 400

</PRE><P><LI>Add the following code to the Form_Click event:
<P>
   picture1.Cls
   Dim hfont As Integer, holdfont As Integer
   Dim font As LOGFONT
   nvalue = getdevicecaps(picture1.hDC, 34)
   font.lfheight = 12
   font.lfwidth = 0
   font.lfescapement = 900
   font.lforientation = 900
<PRE>   font.lfweight = 400    'This is normal
   font.lfitalic = Chr$(0)
   font.lfunderline = Chr$(0)
   font.lfstrikeout = Chr$(0)
   font.lfcharset = Chr$(0)
   font.lfoutprecision = Chr$(0)
   font.lfclipprecision = Chr$(0)
   font.lfquality = Chr$(2)
   font.lfpitchandfamily = Chr$(33)
   font.lffacename = "Courier New" + Chr$(0)

   hfont = createfontindirect(font)
   holdfont = selectobject(picture1.hDC, hfont)
   szfacename$ = Space$(80)
   retval% = gettextface(picture1.hDC, 79, szfacename$)

   nchars = Len(sometext$)
   picture1.CurrentX = 200
   picture1.CurrentY = 2000
   picture1.Print Left$(RTrim$(szfacename$), Len(RTrim$(szfacename$)) - 1)
   deleteobject hfont

</PRE><P><LI>Run the program. Click the form, not the picture. You'll see the phrase
   "Courier New" print sideways in the picture control, from the lower left
   to the upper left.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprint kbprg kbcode<BR>
KBSubcategory: APrgPrint APrgWindow<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
