

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create and Use a Minimal ActiveX Component in VB5 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170946">
<META NAME="KBModify" CONTENT="1997/07/03">
<META NAME="KBCreate" CONTENT="1997/07/02">
<META NAME="Keywords" CONTENT="vb5all vb5howto kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic version 5.0 features the ability to create ActiveX Components. This article illustrates how to create a minimal ActiveX Component and use it from a minimal Automation Controller. This article does not exercise the full functionality of...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAIJ,QAFF,QAHV,QBXS,QAH4,QBWS,QAY2,QDIV,QAPN,QAJG,QAMA,QBXR,QA9Q,QA5F V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create and Use a Minimal ActiveX Component in VB5</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170946</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic version 5.0 features the ability to create ActiveX Components.
This article illustrates how to create a minimal ActiveX Component and use
it from a minimal Automation Controller. This article does not exercise the
full functionality of ActiveX Components. It is intended to help you write
your first ActiveX Component.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step One: Create the Server</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Choose either ActiveX EXE or
   ActiveX DLL.

<P><LI>From the Project Menu, choose Add Module, then Module.

<P><LI>Type the following code in the General Declarations section of Module1:
<P>
<PRE>      Sub Main ()

   NOTE: End Sub will be added automatically for you.

</PRE><P><LI>Add the following code to the General Declaration section of Class1:
<P>
<P><PRE>      Public MyString As String
</PRE><P>
<P><PRE>      Public Function MyFunction() As String
<PRE></PRE>         MyFunction = "You never know what you're gonna get."
      End Function

      Public Sub Class_Initialize()
         MyString = "Life is like a box of chocolates."
      End Sub

</PRE><P><LI>In the Properties window for Class1, set the following property:
<P>
<PRE>    Property      Value
    ------------------------------------
    Instancing    5 - MultiUse

</PRE><P><LI>From the Project menu, choose Project1 Properties. Under the General
   Tab, choose Sub Main from Startup Object list and click OK.

<P><LI>Start the program by choosing Start from the Run menu or by pressing
   the F5 key.
<P>
   You now have a complete (though limited) OLE automation server. Later,
   you can choose Make Project1 EXE or Make Project1 DLL from the File menu
   to create an ActiveX component that can be used without having to run
   the project. Now you're ready to automate your server.

<P><LI>Minimize Visual Basic.
<P>
</OL><h3>Step Two: Create a Client to Access the Server</h3>
 

<OL><P><LI>Start a second copy of Visual Basic. A new project (Project1) with a
   default form (Form1) is created.

<P><LI>Add the following code to the appropriate events of Form1:
<P>
<P><PRE>      ' In the General Declarations section:
      Private MyObj As Object
</PRE><P>
<P><PRE>      Private Sub Form_Load ()
<PRE></PRE>         Set MyObj = CreateObject("Project1.Class1")
      End Sub

      Private Sub Form_Click()
         Print MyObj.MyString
         Print MyObj.MyFunction
      End Sub

      Private Sub Form_Unload (Cancel As Integer)
         Set MyObj = Nothing
      End Sub

</PRE><P><LI>Start the program by choosing Start from the Run menu or by
   pressing the F5 key.

<P><LI>Click Form1. The following text is output to Form1:
<P>
<P><PRE>      Life is like a box of chocolates.
      You never know what you're gonna get.
</PRE><P>
</OL>When Form1 loads, it instantiates one copy of your ActiveX Component. On
the click, it makes two OLE calls: One to retrieve the value of the
MyString public variable and one to invoke the MyFunction public function.
<P>
When Form1 unloads, it destroys its created instance of the ActiveX
Component. If this is the last instance in memory, the server process is
removed from memory as well.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information on creating and using a minimal OLE Automation
Server with Visual Basic version 4.0, please see the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q129801.htm">Q129801</A></B>
   TITLE     : HOWTO: Create and Use a Minimal OLE Automation Server
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OLE Server<BR>
Keywords            : vb5all vb5howto kbhowto<BR>
Version             : 5.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
