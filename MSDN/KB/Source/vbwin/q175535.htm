

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Problems Printing Rotated Text on Visual Basic 5.0 SP2 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q175535">
<META NAME="KBModify" CONTENT="1997/12/22">
<META NAME="KBCreate" CONTENT="1997/10/22">
<META NAME="Keywords" CONTENT="vb5all VS97FixlistSP2">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If you try to print rotated text using the Printer object from Visual Basic 5.0 with Visual Studio 97 Service Pack 2 using the technique described in the following Microsoft Knowledge Base article, the text fails to rotate:     ARTICLE-ID: Q154515 ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOX,QBS0,QATX,QAY5,QADF,QDO3,QACT,QAL3,QAK7,QAW6,QAPN,QANF,QAMB,QALG,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Problems Printing Rotated Text on Visual Basic 5.0 SP2</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q175535</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you try to print rotated text using the Printer object from Visual Basic
5.0 with Visual Studio 97 Service Pack 2 using the technique described in
the following Microsoft Knowledge Base article, the text fails to rotate:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q154515.htm">Q154515</A></B>
   TITLE     : HOWTO: Print Rotated Text Using Win32 API

</PRE><h2>CAUSE</h2>
 
<P>
There is a problem in Visual Studio 97 Service Pack 2 for Visual Basic 5.0
where any Font selected for the Printer.hDC is ignored by the Printer
object.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, print with API functions entirely without
using the Printer object.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft Visual Studio 97
Service Pack 2 (SP2.) We are researching this bug and will post new
information here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The technique described in Knowledge Base article <B><A HREF="../VBWIN/Q154515.htm">Q154515</A></B>, prints to a
PictureBox control but will also work using the Printer object. Printing to
a PictureBox still works in SP2 but fails using the Printer object. The
following code example will work from Visual Basic 4.0 or Visual Basic 5.0,
with or without a Service Pack. Because this code creates a Device Context
(DC) for your printer and you can only print to one DC at a time, it has
the limitation that you cannot use the Printer object at the same time. So,
you must end this document before returning to using the Printer object.
<P>
<P><h3>Code Example</h3>
 

<OL><P><LI>Start a new project. Form1 is created by default.

<P><LI>Add a CommandButton to Form1.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Private Const LF_FACESIZE = 32
</PRE><P>
<P><PRE>      Private Type LOGFONT
<PRE></PRE>          lfHeight As Long
          lfWidth As Long
          lfEscapement As Long
          lfOrientation As Long
          lfWeight As Long
          lfItalic As Byte
          lfUnderline As Byte
          lfStrikeOut As Byte
          lfCharSet As Byte
          lfOutPrecision As Byte
          lfClipPrecision As Byte
          lfQuality As Byte
          lfPitchAndFamily As Byte
          lfFaceName As String * LF_FACESIZE
      End Type

      Private Type DOCINFO
          cbSize As Long
          lpszDocName As String
          lpszOutput As String
          lpszDatatype As String
          fwType As Long
      End Type

      Private Declare Function CreateFontIndirect Lib "gdi32" Alias _
      "CreateFontIndirectA" (lpLogFont As LOGFONT) As Long

      Private Declare Function SelectObject Lib "gdi32" _
      (ByVal hdc As Long, ByVal hObject As Long) As Long

      Private Declare Function DeleteObject Lib "gdi32" _
      (ByVal hObject As Long) As Long

      Private Declare Function CreateDC Lib "gdi32" Alias "CreateDCA" _
      (ByVal lpDriverName As String, ByVal lpDeviceName As String, _
      ByVal lpOutput As Long, ByVal lpInitData As Long) As Long

      Private Declare Function DeleteDC Lib "gdi32" (ByVal hdc As Long) _
      As Long

      Private Declare Function TextOut Lib "gdi32" Alias "TextOutA" _
      (ByVal hdc As Long, ByVal x As Long, ByVal y As Long, _
      ByVal lpString As String, ByVal nCount As Long) As Long ' or Boolean

      Private Declare Function StartDoc Lib "gdi32" Alias "StartDocA" _
      (ByVal hdc As Long, lpdi As DOCINFO) As Long

      Private Declare Function EndDoc Lib "gdi32" (ByVal hdc As Long) _
      As Long

      Private Declare Function StartPage Lib "gdi32" (ByVal hdc As Long) _
      As Long

      Private Declare Function EndPage Lib "gdi32" (ByVal hdc As Long) _
      As Long

      Private Sub Command1_Click()
         Const DESIREDFONTSIZE = 12     ' Could use variable, TextBox, etc.

         Dim OutString As String  'String to be rotated
         Dim lf As LOGFONT        'Structure for setting up rotated font
         Dim temp As String       'Temp string var
         Dim result As Long       'Return value for calling API functions
         Dim hOldfont As Long     'Hold old font information
         Dim hPrintDc As Long     'Handle to printer dc
         Dim hFont As Long        'Handle to new Font
         Dim di As DOCINFO        'Structure for Print Document info

         OutString = "Hello World"   'Set string to be rotated

         'Set rotation in tenths of a degree, i.e., 1800 = 180 degrees
         lf.lfEscapement = 1800
         lf.lfHeight = (DESIREDFONTSIZE * -60) / Screen.TwipsPerPixelY
         hFont = CreateFontIndirect(lf)  'Create the rotated font
         di.cbSize = 20                  'Size of DOCINFO structure
         di.lpszDocName = "My Document"  'Set name of print job (Optional)

         'Create a printer device context
         hPrintDc = CreateDC(Printer.DriverName, Printer.DeviceName, 0, 0)

         result = StartDoc(hPrintDc, di) 'Start a new print document
         result = StartPage(hPrintDc)    'Start a new page

         'Select our rotated font structure and save previous font info
         hOldfont = SelectObject(hPrintDc, hFont)

         'Send rotated text to printer, starting at location 1000, 1000
         result = TextOut(hPrintDc, 1000, 1000, OutString, Len(OutString))

         'Reset font back to original, non-rotated
         result = SelectObject(hPrintDc, hOldfont)

         'Send non-rotated text to printer at same page location
         result = TextOut(hPrintDc, 1000, 1000, OutString, Len(OutString))

         result = EndPage(hPrintDc)      'End the page
         result = EndDoc(hPrintDc)       'End the print job
         result = DeleteDC(hPrintDc)     'Delete the printer device context
         result = DeleteObject(hFont)    'Delete the font object
      End Sub

</PRE><P><LI>Run the Project and click on Command1.
<P>
</OL>This will print a single page to the current default printer with "Hello
World" printed normally and rotated 180 degrees.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sideways angle sp2<BR>
Keywords          : vb5all VS97FixlistSP2<BR>
Version           : WINDOWS:5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
