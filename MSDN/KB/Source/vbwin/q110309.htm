

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Double-Click Still Maximizes/Restores If MaxButton=False </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110309">
<META NAME="KBModify" CONTENT="1997/10/30">
<META NAME="KBCreate" CONTENT="1994/01/19">
<META NAME="Keywords" CONTENT="PrgOther kbbuglist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Setting the MaxButton property of a form to False removes the Maximize item in the Control-menu box and removes the maximize button in the upper right corner of the form. However, double-clicking the title-bar still maximizes the form or toggles ba...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAEF,QBW1,QABA,QAPN,QBTM,QAH4,QDL9,QBWO,QBWN,QA9N,QAY5,QANJ,QDH6,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Double-Click Still Maximizes/Restores If MaxButton=False</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110309</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 2.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Setting the MaxButton property of a form to False removes the Maximize item
in the Control-menu box and removes the maximize button in the upper right
corner of the form. However, double-clicking the title-bar still maximizes
the form or toggles back to the default size.
<P>
The Control-menu box is also known as the System-menu box in other products
for Windows.
<P>
<P><h2>CAUSE</h2>
 
<P>
By default, double-clicking the title bar has the same effect as choosing
Maximize or Restore from the Control-menu box -- it acts as a toggle
between the normal window size and the maximized window size. This behavior
is by design in standard Microsoft Windows. Setting the MaxButton property
of the form to False fails to suppress this behavior in Visual Basic
version 2.0.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To prevent a double-click on the title bar from causing Maximize or
Restore, call Windows API functions as shown in the sample program
in the More Information section below.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Visual Basic version 2.0
for Windows. This problem was corrected in version 3.0. In version 3.0,
setting the form's MaxButton property to False correctly ignores double-
clicks on the title bar.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The default Control-menu box in the upper left-hand corner of a Visual
Basic form contains the following nine entries including separators:
<P>
<PRE>   Restore
   Move
   Size
   Minimize
   Maximize
   -----------------------
   Close            Alt+F4
   -----------------------
   Switch to...   Ctrl+Esc

</PRE>These are numbered 0 through 8 from the top down. You may remove any or all
entries. Be sure to remove items in reverse sequence, from 8 to 0, or else
the numbering will become confused.
<P>
NOTE: To remove the Control-menu box, set the ControlBox property to False.
To remove the minimize button, set the MinButton property to False. To
remove the maximize button, set the MaxButton property to False.
<P>
<P><h3>Steps to Work Around the Behavior</h3>
 
<P>
The following program removes the Maximize feature from a Visual Basic
form. This code can be used in Visual Basic versions 2.0 and 3.0.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following to the Form Load event code:
<P>
<PRE>   Sub Form_Load ()

   Dim hSysMenu%, r%, j%, dw&amp;, rr&amp;
   Const MF_BYPOSITION = &amp;H400

   ' Set the default size of the form:
   Form1.Height = Screen.Height + 45  ' Works on VGA.
   Form1.Width = Screen.Width + 60    ' Works on VGA.
   Form1.Left = -15                   ' Works on VGA.
   Form1.Top = -15                    ' Works on VGA.

   hSysMenu = GetSystemMenu(Form1.hWnd, 0)
   For j = 8 To 4 Step -1
      r = RemoveMenu(hSysMenu, j, MF_BYPOSITION)
   Next j
   For j = 2 To 1 Step -1
      r = RemoveMenu(hSysMenu, j, MF_BYPOSITION)
   Next j
   ' Leave Restore and Minimize in the Control-menu box.
   dw&amp; = GetWindowLong(Form1.hWnd, -16)   'Window style
   dw&amp; = dw&amp; And &amp;HFFFEFFFF            'Turn off Maximize button
   rr&amp; = SetWindowLong(Form1.hWnd, -16, dw&amp;)

   End Sub

</PRE><P><LI>Add a command button to the form. Double-click the command button and
   add the following code to the Command1 click event:
<P>
<PRE>   Sub Command1_Click ()
      End
   End Sub

   This button lets you end the program because Close is removed from the
   Control-menu box.

</PRE><P><LI>Add the following Declare statements to the general declarations
   section:
<P>
<PRE>   ' Enter each of the following Declare statements as one, single line:
   Declare Function RemoveMenu% Lib "User" (ByVal hMenu%, ByVal nPosition%,
      ByVal wFlags%)
   Declare Function GetSystemMenu% Lib "User" (ByVal hWnd%, ByVal revert%)
   Declare Function GetWindowLong Lib "User" (ByVal hWnd As Integer,
      ByVal nIndex As Integer) As Long
   Declare Function SetWindowLong Lib "User" (ByVal hWnd As Integer,
      ByVal nIndex As Integer, ByVal dwNewLong As Long) As Long

</PRE><P><LI>Start the program, or press the F5 key.
<P>
</OL>The form's Control-menu box shows Restore (greyed) and Minimize. Double-
clicking the title-bar has no effect, as desired.
<P>
Clicking the Minimize arrow or choosing the Minimize menu item minimizes
the form to an icon. A single-click on that icon does not open a control
menu, unlike normal Visual Basic application icons. A double-click is
required to restore the form to its full-screen state.
<P>
NOTE: In the above program, the following Form properties should be left
with their design-time default: ControlBox = True, MaxButton = True,
MinButton = True. The API functions take care of any necessary property
changes.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>"PC Magazine's Visual Basic Programmer's Guide to the Windows API" by
   Daniel Appleman (of Desaware), published by Ziff-Davis Press, pages 414
   and 418. This reference describes most Windows API functions that can
   be used from within Visual Basic.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist2.00 fixlist3.00 2.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgOther<BR>
Keywords          : PrgOther kbbuglist kbprg<BR>
Version           : 2.00<BR>
Platform          : WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
