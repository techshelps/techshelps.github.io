

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Move Controls Between Forms in VB for Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q79884 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/01/09">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Microsoft Visual Basic for Windows does not support the actual movement of controls between forms. Attempting to change the parent/child relationship of a control from one form to another can result in unpredictable behavior.  However, by creating ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QBS0,QAH4,QAMN,QAK6,QA7O,QAOE,QAB5,QAFF,QA9N,QBXS,QAPN,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Move Controls Between Forms in VB for Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q79884 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Visual Basic for Windows does not support the actual movement
of controls between forms. Attempting to change the parent/child
relationship of a control from one form to another can result in
unpredictable behavior.
<P>
However, by creating a control array of the same control type on each
form, and by creating a subroutine or function in a Visual Basic for
Windows module, you can simulate the movement of a control from one form
to another. An example of how to do this is listed below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This example uses the Windows API functions GetFocus and GetParent to
determine the origin of the control dropped onto a form. For more
information on GetFocus and GetParent, query separately on the
following words in the Microsoft Knowledge Base:
<P>
<PRE>   GetFocus
   GetParent

</PRE>The following steps demonstrate how to simulate the movement of
controls between two forms. Note that you can improve this example by
Loading and Unloading the controls as they are needed.

<OL><P><LI>Start Visual Basic for Windows, or from the File menu, choose New
    Project (press ALT, F, N) if Visual Basic for Windows is already
    running. Form1 will be created by default.

<P><LI>From the File menu, choose New Form (press ALT, F, F). Form2 will be
    created.

<P><LI>From the File menu, choose New Module (press ALT, F, M). Module1
    will be created.

<P><LI>Create the following controls for both Form1 and Form2:
<P>
<PRE>    Control          Name         Property Setting
    -------          ----------   ----------------
    Command button   Command1()   Index = 0
    Command button   Command2     Caption = "Enable Drag"

   (In Visual Basic version 1.0 for Windows, set the CtlName Property
    for the above objects instead of the Name property.)

</PRE><P><LI>Add the following code to the Module1 (or GLOBAL.BAS in Visual Basic
    version 1.0 for Windows):
<P>
<PRE>' Windows API function declarations.
Declare Function GetFocus Lib "USER" () As Integer
Declare Function GetParent Lib "USER" (ByVal hWnd As Integer) As Integer

</PRE><P><LI>Add the following code to the General Declarations section of
    Form1:
<P>
      Dim EnableDrag As Integer

<P><LI>Add the following code to the Form_Load event procedure of Form1:
<P>
<PRE>Sub Form_Load ()

   ' Move the form to the left half of the screen.
   Move 0, Top, Screen.Width \ 2
   Form2.Show
   EnableDrag = 0
   Command1(0).Top = 0
   Command1(0).Left = 100

   For i% = 1 To 4                             ' Load Control Array.
      Load Command1(i%)
      Command1(i%).Left = Command1(i% - 1).Left
      Command1(i%).Top = Command1(i% - 1).Top + Command1(i% - 1).Height
   Next i%

   For i% = 0 To 4                        ' Define Control Properties.
      Command1(i%).Caption = "Button" + Str$(i%)
      Command1(i%).Visible = -1
   Next i%
End Sub

</PRE><P><LI>Add the following code to the Command1_Click event procedure of
    Form1:
<P>
<PRE>Sub Command1_Click (Index As Integer)
   Button_Clicked Command1(Index)        ' Call Routine in MODULE1.BAS.
End Sub

</PRE><P><LI>Add the following code to the Command2_Click event procedure of
    Form1:
<P>
<PRE>Sub Command2_Click ()
   If EnableDrag = 0 Then                      ' Toggle DragMode.
      EnableDrag = 1
      Command2.Caption = "Disable Drag"
   Else
      EnableDrag = 0
      Command2.Caption = "Enable Drag"
   End If

   For i% = 0 To 4                        ' Set DragMode for Controls.
      Command1(i%).DragMode = EnableDrag
   Next i%
End Sub

</PRE><P><LI>Add the following code to the Form_DragDrop event procedure of
    Form1:
<P>
<PRE>Sub Form_DragDrop (Source As Control, X As Single, Y As Single)
   Source.SetFocus                     ' Get Parent of Source Control.
   CtrlHnd% = GetFocus()
   Parent% = GetParent(CtrlHnd%)

   If Parent% &lt;&gt; Form1.hWnd Then       ' If Parent is other Form.
      Index% = Source.Index
      Command1(Index%).Caption = Source.Caption
      Command1(Index%).Left = Source.Left
      Command1(Index%).Top = Source.Top
      Command1(Index%).Width = Source.Width
      Command1(Index%).Height = Source.Height
      Command1(Index%).Visible = -1
      Source.Visible = 0
   End If
End Sub

</PRE><P><LI>Add the following code to the General Declarations section of
    Form2:
<P>
</OL>Dim EnableDrag As Integer

<OL><P><LI>Add the following code to the Form_Load event procedure of Form2:
<P>
<PRE>Sub Form_Load ()
   ' Move the form to the right half of the screen.
   Move Screen.Width \ 2, Top, Screen.Width \ 2

   EnableDrag = 0
   Command1(0).Visible = 0
   For i% = 1 To 4                        ' Load Control Array.
      Load Command1(i%)
      Command1(i%).Top = Command1(i% - 1).Top + Command1(i% - 1).Height
      Command1(i%).Visible = 0
   Next i%
End Sub

</PRE><P><LI>Add the following code to the Command1_Click event procedure of
<P><PRE>    Form2:
</PRE><P>
<PRE>Sub Command1_Click (Index As Integer)
   Button_Clicked Command1(Index)
End Sub

</PRE><P><LI>Add the following code to the Command2_Click event procedure of
<P><PRE>    Form2:
</PRE><P>
<PRE>Sub Command2_Click ()
   If EnableDrag = 0 Then
      EnableDrag = 1
      Command2.Caption = "Disable Drag"
   Else
      EnableDrag = 0
      Command2.Caption = "Enable Drag"
   End If

   For i% = 0 To 4
      Command1(i%).DragMode = EnableDrag
   Next i%
End Sub

</PRE><P><LI>Add the following code to the Form_DragDrop event procedure of
<P><PRE>    Form2:
</PRE><P>
<PRE>Sub Form_DragDrop (Source As Control, X As Single, Y As Single)
   Source.SetFocus           ' Determine Parent of Source.
   CtrlHnd% = GetFocus()
   Parent% = GetParent(CtrlHnd%)
   If Parent% &lt;&gt; Form2.hWnd Then
      Index% = Source.Index
      Command1(Index%).Caption = Source.Caption
      Command1(Index%).Left = Source.Left
      Command1(Index%).Top = Source.Top
      Command1(Index%).Width = Source.Width
      Command1(Index%).Height = Source.Height
      Command1(Index%).Visible = -1
      Source.Visible = 0
   End If
End Sub

</PRE><P><LI>Add the following code to Module1:
<P>
<PRE>Sub Button_Clicked (Source As Control) ' Generic Click routine.
    MsgBox "Button" + Str$(Source.Index) + " Clicked!!!"
End Sub

</PRE><P><LI>From the Run menu, choose Start (press ALT, R, S) to run the
<P><PRE>    program.
</PRE><P>
</OL>To drag controls from one form to the other, choose the Enable Drag
button. Once this button has been activated on a form, you can drag
any of the command buttons from one form to the other. The drag mode
can be disabled by choosing the Disable Drag button. When drag mode
has been disabled, clicking any of the command buttons on the form
will cause a message box to be displayed.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
