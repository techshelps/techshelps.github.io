

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use the Procedure Attributes Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161094">
<META NAME="KBModify" CONTENT="1997/03/21">
<META NAME="KBCreate" CONTENT="1996/12/17">
<META NAME="Keywords" CONTENT="IAPOLE kbusage PrgOther vb5all vb5howto VBKBObj_VBKBAX kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Just as there are properties associated with objects, there are also type library attributes for each object property, method, and event. The Tools|Procedure Attributes menu in Visual Basic 5.0 allows you to set and alter these attributes. The Proc...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBWC,QAH4,QBMH,QBXS,QBS0,QDM0,QAB9,QA2Q,QABA,QAO4,QA7O,QAG2,QA4H,QA01 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use the Procedure Attributes Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161094</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Control Creation and Enterprise Editions of Microsoft Visual Basic,
   for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Just as there are properties associated with objects, there are also type
library attributes for each object property, method, and event. The
Tools|Procedure Attributes menu in Visual Basic 5.0 allows you to set and
alter these attributes. The Procedure Attributes dialog box is disabled
unless you have existing property procedures, methods, or events in your
project and you are currently in a project file (for example, Form,
UserControl, Basic Module, etc.). Once you add a property procedure,
method, or event to your project file you can set specific attributes for
it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Procedure Attributes dialog box contains the following attributes:

<OL><P><LI>Name: Lists of all available properties, methods, and events. The list
   box defaults to display properties for the property procedure, method,
   or event that the cursor was on in the code window. You can select and
   modify a different property procedure, method, or event without having
   to leave the dialog box.

<P><LI>Description: Enter information that you want to display in the
   description area of the Object Browser.

<P><LI>Project Help File: Displays the path to the Help file that is specified
   in the General tab of the Project Properties dialog box. This option is
   read-only.

<P><LI>Help Context ID: Allows you to specify a Help Context ID to be
   associated with the selected property procedure, method, or event. If
   you are in Code View or in the Object Browser, you can get help on this
   procedure, method, or event based on this ID.
<P>
</OL>By Selecting the 'Advanced&gt;&gt;' button, you can set the following additional
options:

<OL><P><LI>Procedure ID: Sets a standard member ID for the currently selected
   property, event or method. This member ID may be one a client may know
   about, and therefore behaves in an expected way.
<P>
   A ProcedureID is a GUID. If this is left blank, Visual Basic 5.0 will
   assign one. There are some common GUIDs that developers can use for
   their procedures that the host application may be aware of and handle in
   a specific manner. By choosing a common GUID, you are letting the host
   application know that your code behaves in a standard fashion. For
   example, if you have a procedure to handle the background color, you
   could use the predefined GUID for BackColor because it’s a common
   property that controls expose. The host application can look for this
   GUID and, if it is found, can assume that your code will behave in a
   predictable fashion.
<P>
   Setting this attribute does not guarantee that the procedure will behave
   as expected. It is up to you to write code to do what you say you’re
   going to do. For example, if you select the Refresh Procedure ID, the
   code you write and associate with the procedure should Refresh the
   control.
<P>
   NOTE: Assigning a property procedure or method a Procedure ID of 0
   makes it the default property (also known as the Value property).

<P><LI>Use This Page In Property Browser: This setting is only available for
   Properties. It sets which property page is used for your property when
   you change its value in the Property Window. You can select a predefined
   property page or one of your own custom property pages. If you select a
   predefined property page, make sure your property exposes the
   appropriate data type (OLE_COLOR, FONT, PICTURE).
<P>
   If you want the Properties Verb to appear when you right-click your
   control, you need to add the PropertyPage to the UserControl’s
   PropertyPages property. When you select modify PropertyPages, you can
   choose which property pages appear when you select the Properties Verb
   for your UserControl. You can also use this dialog box to modify the
   order in which the pages are presented.

<P><LI>Property Category: This setting is only available for Properties. It
   lets you select which category your property appears in under the
   Property Window's "Categorized Tab."

<P><LI>Hide This Member: Prevents your procedure from appearing in the Object
   Browser (unless the Object Browser has "Show Hidden Members" enabled).

<P><LI>User Interface Default: You can select this for one Event and one
   Property per UserControl. This determines which event is displayed when
   you double-click on a new instance of the control to see the Code
   Window. This determines which property is automatically highlighted in
   the Property Window. Note that this is not the same as the default
   property, which applies to coding (see Procedure ID above).

<P><LI>Don’t Show In Property Browser: This setting is for properties only.
   This option prevents your property from appearing in the Property
   Window. However, it still appears in the Object Browser.
<P>
</OL>The 'DataBinding' section allows you to control whether a property can be
bound or linked to a field in a database table. These settings are:

<OL><P><LI>Property is data bound: Determines if the property supports databinding
   and appears in the DataBindings Collection.

<P><LI>This Property binds to DataField: Determines if the field that this
   property is bound to is specified in the DataField property. When this
   is set the user can set the DataField property instead of using the
   DataBindings Collection.

<P><LI>Show in DataBindings Collection at design time: Determines if the
   property will appear as bindable at design time. If this is set, the
   property appears in the Bindings dialog box. If it is not selected, the
   property does not appear in the user interface as bindable property but
   you can continue to write code to access it.

<P><LI>Property will call CanPropertyChange before Changing: Tells the control
   container that the control will always call the CanPropertyChange method
   and respect the return value before changing a property value.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Visual Basic 5.0 online Help, topic "Procedure Attributes Dialog Box"
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : IAPOLE kbusage PrgOther vb5all vb5howto VBKBObj_VBKBAX kbhowto<BR>
Version             : 5.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
