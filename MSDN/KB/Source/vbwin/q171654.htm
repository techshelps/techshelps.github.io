

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Attach a Console Window to your Visual Basic Program </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171654">
<META NAME="KBModify" CONTENT="1997/07/23">
<META NAME="KBCreate" CONTENT="1997/07/18">
<META NAME="Keywords" CONTENT="APrgOther APrgWindow vb432 vb4win vb5all kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates attaching a console window to your Visual Basic application, writing to it, and running another application in the console window.  MORE INFORMATION  If a Visual Basic application is started from a console application, the...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGB,QAH4,QA5F,QAMA,QAJH,QAY2,QAFF,QBWS,QDL9,QBWO,QBWN,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Attach a Console Window to your Visual Basic Program</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171654</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates attaching a console window to your Visual Basic
application, writing to it, and running another application in the console
window.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If a Visual Basic application is started from a console application, the
operating system automatically detaches it from the console, preventing the
Visual Basic application from interacting with it. This article does not
provide a method to prevent this from happening, but does demonstrate
creating a new console window that your application can interact with. It
also demonstrates running a console application (batch file, in this case)
from Visual Basic, which utilizes the created console.
<P>
WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT YOUR OWN
RISK. Microsoft provides this code "as is" without warranty of any kind,
either express or implied, including but not limited to the implied
warranties of merchantability and/or fitness for a particular purpose.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Use Notepad to create the following batch file:
<P>
<P><PRE>      DIR /W
</PRE><P>
   and save it as C:\TEST.BAT

<P><LI>In Visual Basic, create a new project with a form and a module.

<P><LI>Type the following API declarations in the module:
<P>
   Option Explicit
<P>
<PRE>   Declare Function AllocConsole Lib "kernel32" () As Long
   Declare Function FreeConsole Lib "kernel32" () As Long
   Declare Function CloseHandle Lib "kernel32" (ByVal hObject As Long) _
           As Long
   Declare Function GetStdHandle Lib "kernel32" (ByVal _
           nStdHandle As Long) As Long
   Declare Function WriteConsole Lib "kernel32" Alias "WriteConsoleA" _
           (ByVal hConsoleOutput As Long, lpBuffer As Any, ByVal _
           nNumberOfCharsToWrite As Long, lpNumberOfCharsWritten As Long, _
           lpReserved As Any) As Long

   Public Const STD_OUTPUT_HANDLE = -11&amp;

</PRE><P><LI>Add a CommandButton to the form and enter the following code:
<P>
   Dim hConsole As Long
<P>
<PRE>   Private Sub Command1_Click()
   Dim Result As Long, sOut As String, cWritten As Long
     sOut = "Hi There" &amp; vbCrLf
     Result = WriteConsole(hConsole, ByVal sOut, Len(sOut), cWritten, _
                           ByVal 0&amp;)
     Shell "C:\TEST.BAT"
   End Sub

   Private Sub Form_Load()
     If AllocConsole() Then
       hConsole = GetStdHandle(STD_OUTPUT_HANDLE)
       If hConsole = 0 Then MsgBox "Couldn't allocate STDOUT"
     Else
       MsgBox "Couldn't allocate console"
     End If
   End Sub

   Private Sub Form_Unload(Cancel As Integer)
     CloseHandle hConsole
     FreeConsole
   End Sub

</PRE><P><LI>Run the application. A blank console window will appear.

<P><LI>Click the CommandButton. Both the text in sOut and the output from the
   batch file will appear in the console.

<P><LI>Close the form. The console window will terminate.
<P>
</OL>NOTES:

<OL><P><LI>If you run another application in the console, it will run
   asynchronously with your Visual Basic application. Output from the two
   applications can become interspersed.

<P><LI>If the console application hasn't terminated prior to your Visual Basic
   application closing, the console window will remain open.

<P><LI>If you close the console window, the Visual Basic EXE will terminate. If
   you are in the Visual Basic development environment (IDE), closing the
   console window will terminate the IDE and it may hang the console
   window. Use the Task Manager to terminate the task.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Microsoft Windows SDK.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgOther APrgWindow vb432 vb4win vb5all kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
