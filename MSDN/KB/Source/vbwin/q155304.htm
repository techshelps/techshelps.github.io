

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Trap an Invalid ODBC Logon Using the ODBC API </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155304">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1996/08/27">
<META NAME="Keywords" CONTENT="APrgDataODBC APrgOther kbinterop kbusage VB4ALL VB4WIN vb5all kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates how to use Open Database Connectivity (ODBC) API calls to test the validity of a Data Source Name, User ID, and Password.  MORE INFORMATION  When a user tries opening an ODBC Data Source with an incorrect Data Source Name,...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9E,QA4Q,QBS0,QATX,QAI5,QAY5,QAVX,QAVW,QAAP,QBV8,QAK7,QAB9,QAB4,QBG2,QANF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Trap an Invalid ODBC Logon Using the ODBC API</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155304</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for Windows,
   version 4.0, 5.0
<LI>Professional and Enterprise Editions of  Microsoft
   Visual Basic for Windows, 16-bit and 32-bit, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to use Open Database Connectivity (ODBC) API
calls to test the validity of a Data Source Name, User ID, and Password.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When a user tries opening an ODBC Data Source with an incorrect Data Source
Name, User ID, or Password, ODBC prompts the user for the correct
information. It is not possible to trap for this error using Visual Basic
Error Handling methods.
<P>
The following steps demonstrate how to test the logon parameters:

<OL><P><LI>Start a new Visual Basic project. Form1 is created by default.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add three text boxes (Text1, Text2, and Text3) to Form1.

<P><LI>Add a check box (Check1) to Form1.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      #If Win32 Then
<PRE></PRE>        Private Declare Function SQLAllocEnv Lib "odbc32.dll" _
           (phenv As Long) As Integer
        Private Declare Function SQLAllocConnect Lib "odbc32.dll" _
           (ByVal henv As Long, phdbc As Long) As Integer
        Private Declare Function SQLConnect Lib "odbc32.dll" ( _
           ByVal hdbc As Long, ByVal szDSN As String, _
           ByVal cbDSN As Integer, ByVal szUID As String, _
           ByVal cbUID As Integer, ByVal szAuthStr As String, _
           ByVal cbAuthStr As Integer) As Integer
        Private Declare Function SQLFreeEnv Lib "odbc32.dll" _
           (ByVal henv As Long) As Integer
        Private Declare Function SQLFreeConnect Lib "odbc32.dll" _
           (ByVal hdbc As Long) As Integer
        Private Declare Function SQLError Lib "odbc32.dll" ( _
           ByVal henv As Long, ByVal hdbc As Long, ByVal hstmt As Long, _
           ByVal szSqlState As String, pfNativeError As Long, _
           ByVal szErrorMsg As String, ByVal cbErrorMsgMax As Integer, _
           pcbErrorMsg As Integer) As Integer
      #ElseIf Win16 Then
        Private Declare Function SQLAllocEnv Lib "odbc.dll" _
           (phenv As Long) As Integer
        Private Declare Function SQLAllocConnect Lib "odbc.dll" _
           (ByVal henv As Long, phdbc As Long) As Integer
        Private Declare Function SQLConnect Lib "odbc.dll" ( _
           ByVal hdbc As Long, ByVal szDSN As String, _
           ByVal cbDSN As Integer, ByVal szUID As String, _
           ByVal cbUID As Integer, ByVal szAuthStr As String, _
           ByVal cbAuthStr As Integer) As Integer
        Private Declare Function SQLFreeEnv Lib "odbc.dll" _
           (ByVal henv As Long) As Integer
        Private Declare Function SQLFreeConnect Lib "odbc.dll" _
           (ByVal hdbc As Long) As Integer
        Private Declare Function SQLError Lib "odbc.dll" ( _
           ByVal henv As Long, ByVal hdbc As Long, _
           ByVal hstmt As Long, ByVal szSqlState As String, _
           pfNativeError As Long, ByVal szErrorMsg As String, _
           ByVal cbErrorMsgMax As Integer, pcbErrorMsg As Integer) _
           As Integer
      #End If

      Private Const SQL_SUCCESS As Long = 0
      Private Const SQL_SUCCESS_WITH_INFO As Long = 1

      Private Function IsValidODBCLogin(ByVal sDSN As String, _
         ByVal sUID As String, ByVal sPWD As String) As Boolean
      Dim henv As Long    'Environment Handle
      Dim hdbc As Long    'Connection Handle
      Dim iResult As Integer

        'Obtain Environment Handle
        iResult = SQLAllocEnv(henv)
        If iResult &lt;&gt; SQL_SUCCESS Then
          IsValidODBCLogin = False
          Exit Function
        End If

        'Obtain Connection Handle
        iResult = SQLAllocConnect(henv, hdbc)
        If iResult &lt;&gt; SQL_SUCCESS Then
          IsValidODBCLogin = False
          iResult = SQLFreeEnv(henv)
          Exit Function
        End If

        'Test Connect Parameters
        iResult = SQLConnect(hdbc, sDSN, Len(sDSN), sUID, Len(sUID), _
                  sPWD, Len(sPWD))
        If iResult &lt;&gt; SQL_SUCCESS Then
          If iResult = SQL_SUCCESS_WITH_INFO Then
            'The Connection has been successful, but SQLState Information
            'has been returned
            'Obtain all the SQLState Information
            If Check1.Value Then ShowSQLErrorInfo hdbc, vbInformation
            IsValidODBCLogin = True
          Else
            'Obtain all the Error Information
            If Check1.Value Then ShowSQLErrorInfo hdbc, vbExclamation
            IsValidODBCLogin = False
          End If
        Else
          IsValidODBCLogin = True
        End If

        'Free Connection Handle and Environment Handle
        iResult = SQLFreeConnect(hdbc)
        iResult = SQLFreeEnv(henv)

      End Function

      Private Sub Form_Load()

        Text1.Text = "DSN"
        Text2.Text = "User ID"
        Text3.Text = ""
        Text3.PasswordChar = "*"
        Command1.Caption = "Test Connect"
        Check1.Caption = "Return Errors and Warnings"

      End Sub

      Private Sub Command1_Click()
      Dim sServer As String, sLogin As String, sPassword As String

        sServer = Text1.Text
        sLogin = Text2.Text
        sPassword = Text3.Text

        If IsValidODBCLogin(sServer, sLogin, sPassword) = True Then
          MsgBox "Connection Successful", vbInformation, "ODBC Logon"
        Else
          MsgBox "Connection Failed", vbExclamation, "ODBC Logon"
        End If

      End Sub

      Private Sub ShowSQLErrorInfo(hdbc As Long, iMSGIcon As Integer)
      Dim iResult As Integer
      Dim hstmt As Long
      Dim sBuffer1 As String * 16, sBuffer2 As String * 255
      Dim lNative As Long, iOutlen As Integer

        sBuffer1 = String$(16, 0)
        sBuffer2 = String$(256, 0)

        Do 'Cycle though all the Errors
          iResult = SQLError(0, hdbc, hstmt, sBuffer1, lNative, sBuffer2, _
                    256, iOutlen)
          If iResult = SQL_SUCCESS Then
            If iOutlen = 0 Then
              MsgBox "Error -- No error information available", _
              iMSGIcon, "ODBC Logon"
            Else
              MsgBox Left$(sBuffer2, iOutlen), iMSGIcon, "ODBC Logon"
            End If
          End If
        Loop Until iResult &lt;&gt; SQL_SUCCESS

      End Sub

</PRE><P><LI>Press F5 to run the project. Enter a valid Data Source Name, User ID,
   and Password in the appropriate text boxes and click on the Test
   Connect button. A dialog box appears showing whether the
   connection is Successful or has Failed. Select the check box "Return
   Errors and Warnings," and click on the Test Connection button. Any
   errors and warnings are returned.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Open Database Connectivity (ODBC) SDK, version 2.10, "Programmer's
Reference," on the Microsoft Developer Network (MSDN) CD.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q150786.htm">Q150786</A></B>
   TITLE     : How to Use SQLBindParameter with 32-bit Visual Basic 4.0

</PRE></OL>"Hitchhiker's Guide to Visual Basic and SQL Server," William R. Vaughn,
Microsoft Press, April 1996, ISBN: 1-55615-906-4.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgDataODBC APrgOther kbinterop kbusage VB4ALL VB4WIN vb5all kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
