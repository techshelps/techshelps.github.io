

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Form Global (Static) Data Is Preserved After Form Unload </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80287 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/01/23">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Static data allocated from a form does not get deallocated when you unload the form. Static data stored in a form consists of:   - Arrays or variables dimensioned in the general Declarations section    of a form.  - Arrays or variables declared in ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAYL,QAB9,QAYY,QAI2,QAUR,QAPN,QAOX,QA7H,QA5F,QAY5,QANG,QAMA,QAFF,QACJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Form Global (Static) Data Is Preserved After Form Unload</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80287 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Static data allocated from a form does not get deallocated when you unload
the form. Static data stored in a form consists of:

<UL><LI>Arrays or variables dimensioned in the general Declarations section
   of a form.
<LI>Arrays or variables declared in a Sub or Function procedure using
   the Static keyword.
<LI>All local variables and arrays allocated in a Sub or Function
   procedure where the procedure name is preceded by the keyword Static.
<P>
</UL>All static data is allocated in a global area of memory managed by Visual
Basic. Unloading the form does not cause this memory to be deallocated.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Although the data is maintained after the form is unloaded, you cannot
access this data from any other form or module. You must reload the form to
access the data.
<P>
To deallocate arrays, use the ReDim statement to allocate the array
dynamically as needed. To unload variables, use local variables instead of
static variables. If you use local variables instead of static variables,
the local variables are deallocated upon exit from the procedure in which
they were allocated.
<P>
In version 1.0 or 2.0, Visual Basic preserves the data until the program
terminates. There is no way to cause static data in the general
Declarations section to be deallocated when the form is unloaded. For
example, the Erase statement will not cause memory to be deallocated for
arrays dimensioned in the general Declarations section.
<P>
In version 3.0, you can deallocate the memory by setting the form to
nothing. This forces Visual Basic to unload the module data segment (the
place where the memory is allocated) as in this example:
<P>
<PRE>   Unload Form2
   Set Form2 = Nothing

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Visual Basic version 1.0 Documentation Errors</h3>
 
<P>
The information on page 226 of the "Microsoft Visual Basic: Programmer's
Guide" version 1.0 manual in the section titled "Unloading Forms" implies
that all data in a form is lost after the form is unloaded using the
Unload statement. However, this does not apply to these types of data:

<UL><LI>Any variable or array that is dimensioned in the general
   Declarations section of the form.
<LI>Any static variable or array that has been declared within a Sub or
   Function procedure.
<LI>Any local variable or array that has been allocated in a static Sub
   or Function procedure.
<P>
</UL>The following statement on page 226 of the "Visual Basic: Programmer's
Guide" is incorrect:
<P>
<PRE>   Any data stored in the form is lost unless you have saved it to a file.

</PRE>This statement should be changed to read as follows:
<P>
<PRE>   Any data stored in the form, with the exception of static variables
   and arrays, is lost unless you have saved it to a file. The values
   of static arrays and variables are preserved after the form is unloaded.

</PRE><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Change the caption of Command1 to "Show Form Global Vars" (without
   the quotation marks).

<P><LI>Add the following statements to the general Declarations section of
   Form1:
<P>
   Dim varX As Integer
   Dim arrayX(10) As String

<P><LI>Add the following code to the Command1_Click event procedure of
   Command1:
<P>
<PRE>   Sub Command1_Click ()

      Static StaticX

      StaticX = 1           ' Initialize the form global variables.
      varX = 10
      For i = 0 To 10
         arrayX(i) = Format$(i, "#0")
      Next i

      Unload Form1
      Form1.Show            ' Reload and show form.
                            ' Values of varX and arrayX will still be
                            ' preserved.
      Print StaticX         ' Print the values to the form.
      Print varX
      For i = 0 To 10
         Print arrayX(i)
      Next i

   End Sub

</PRE><P><LI>Run the application by pressing the F5 key. Click the Show Form Global
   Vars button.

<P><LI>The values of StaticX, varX, and arrayX will print, even though the
   form has been unloaded.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
