

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: VB Form_Load Procedure Not Executed when Unload Not Used </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q76629 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1991/09/29">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Code inside a Form_Load event procedure will not execute under the circumstances described in this article. The example below helps clarify the behavior of the Load event procedure.  CAUSE =====  A Load event procedure executes only when a form is ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAPN,QAB9,QAO4,QAFF,QBS0,QBJZ,QAO2,QBVV,QA9N,QA3F,QA3E,QAEF,QACI,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: VB Form_Load Procedure Not Executed when Unload Not Used</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q76629 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Code inside a Form_Load event procedure will not execute under the
circumstances described in this article. The example below helps clarify
the behavior of the Load event procedure.
<P>
<P><h2>CAUSE</h2>
 
<P>
A Load event procedure executes only when a form is loaded, either with the
Load statement or an implicit load. An implicit load is caused when a form
is currently not loaded, and a property or method accesses the form or
associated control.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Below is a demonstration of this behavior:

<OL><P><LI>From the File menu, choose New Project.

<P><LI>From the File menu, choose New Form.

<P><LI>Place a command button on each form. Place command button 1 on form
   1 and command button 2 on form 2.

<P><LI>Place the following code in the event procedure Command1_Click
   in form 1:
<P>
<PRE>   Sub Command1_Click ()
      Form1.MousePointer = 11  'Hourglass pointer
      Form2.Show
   End Sub

</PRE><P><LI>Add the following code in the event procedure Form_Load in form 1:
<P>
<PRE>   Sub Form_Load ()
      Form1.MousePointer = 0   'Default pointer
   End Sub

</PRE><P><LI>Add the following code in the event procedure Command2_Click in form 2:
<P>
<PRE>   Sub Command2_Click ()
      Form2.MousePointer = 11  'Hourglass pointer
      Form1.Show
   End Sub

</PRE><P><LI>Add the following code in the event procedure Form_Load in form 2:
<P>
<PRE>   Sub Form_Load ()
      Form2.MousePointer = 0   'Default pointer
   End Sub

</PRE><P><LI>Run the program with the F5 key. You will see Form1 load up
   with the Command1 button on it. If you click the Command1 button,
   you will see the mouse cursor change to an hourglass until Form2 is
   loaded. With Form2 loaded, you can see that the mouse cursor is back
   to the default arrow. Click the Command2 button and see the mouse
   cursor change back to an hourglass until Form1 is loaded.
<P>
   This is where the behavior starts; the hourglass continues
   to be displayed instead of going back to the default arrow. This
   is because the code Form1.MousePointer = 0 in the Form_Load
   event procedure of Form1 is not being executed. You can continue
   by clicking the Command1 button again to go to Form2 and the
   hourglass continues to be displayed.
<P>
</OL><h3>Workaround</h3>
 
<P>
The easiest way to work around this behavior is to add an Unload
statement after each .Show statement, as shown below:
<P>
<PRE>   Sub Command1_Click ()
      Form1.MousePointer = 11
      Form2.Show
      Unload Form1           'new line of code to be added
   End Sub

   Sub Command2_Click ()
      Form2.MousePointer = 0
      Form1.Show
      Unload Form2           'new line of code to be added
   End Sub

</PRE></OL>NOTE: This method may slow the painting of forms at run-time, but this
method will guarantee that the Form_Load event procedure is executed when
the Show method is executed.
<P>
Another workaround is to place this code:
<P>
<PRE>   .MousePointer = 0 statements

</PRE>into the Form_Paint event procedures. Note that this method will work only
when one form is being painted over another. Use the Cut and Paste routines
from the Edit menu of Visual Basic. Cut this line of code:
<P>
<PRE>   Form1.MousePointer = 0

</PRE>from the event procedure Form_Load in Form1 and paste the code into the
Form1 Form_Paint event procedure. Repeat the same Cut and Paste task in
Form2, placing the code
<P>
<PRE>   Form2.MousePointer = 0

</PRE>in the Form2 Form_Paint event procedure.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
