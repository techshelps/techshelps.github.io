

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Obtain the Host IP Address Using Windows Sockets </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q160215">
<META NAME="KBModify" CONTENT="1996/12/09">
<META NAME="KBCreate" CONTENT="1996/12/02">
<META NAME="Keywords" CONTENT="kbusage kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates how to obtain the host IP address of the local machine by using the GetHostByName API of the Windows Sockets dll, Wsock32.dll. To obtain the host IP address, you must use GetHostByName in conjunction with GetHostName.  MOR...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWD,QAFF,QA4Q,QANF,QAK7,QDN1,QAY5,QDL9,QBWQ,QBWO,QBWN,QBS0,QACJ,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Obtain the Host IP Address Using Windows Sockets</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q160215</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to obtain the host IP address of the local
machine by using the GetHostByName API of the Windows Sockets dll,
Wsock32.dll. To obtain the host IP address, you must use GetHostByName in
conjunction with GetHostName.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
GetHostName returns the standard host name for the local machine. You can
use GetHostByName to resolve this name and return a pointer to the HOSTENT
structure. This structure contains the host address information.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic.  Form1 is created by default.

<P><LI>Place a CommandButton, Command1, on Form1.

<P><LI>Place the following code in the General Declarations section of Form1.
<P>
   Private Const WS_VERSION_REQD = &amp;H101
   Private Const WS_VERSION_MAJOR = WS_VERSION_REQD \ &amp;H100 And &amp;HFF&amp;
   Private Const WS_VERSION_MINOR = WS_VERSION_REQD And &amp;HFF&amp;
   Private Const MIN_SOCKETS_REQD = 1
   Private Const SOCKET_ERROR = -1
   Private Const WSADescription_Len = 256
   Private Const WSASYS_Status_Len = 128
<P>
   Private Type HOSTENT
<P><PRE>       hName As Long
       hAliases As Long
       hAddrType As Integer
       hLength As Integer
       hAddrList As Long
</PRE>   End Type
<P>
   Private Type WSADATA
<P><PRE>       wversion As Integer
       wHighVersion As Integer
       szDescription(0 To WSADescription_Len) As Byte
       szSystemStatus(0 To WSASYS_Status_Len) As Byte
       iMaxSockets As Integer
       iMaxUdpDg As Integer
       lpszVendorInfo As Long
</PRE>   End Type
<P>
<PRE>   Private Declare Function WSAGetLastError Lib "WSOCK32.DLL" () As Long
   Private Declare Function WSAStartup Lib "WSOCK32.DLL" (ByVal
   wVersionRequired&amp;, lpWSAData As WSADATA) As Long
   Private Declare Function WSACleanup Lib "WSOCK32.DLL" () As Long
   Private Declare Function gethostname Lib "WSOCK32.DLL" (ByVal hostname$,
   HostLen&amp;) As Long
   Private Declare Function gethostbyname Lib "WSOCK32.DLL" (ByVal
   hostname$) As Long

   Private Declare Sub RtlMoveMemory Lib "KERNEL32" (hpvDest As Any, ByVal
   hpvSource&amp;, ByVal cbCopy&amp;)

   Function hibyte(ByVal wParam As Integer)

       hibyte = wParam \ &amp;H100 And &amp;HFF&amp;

   End Function

   Function lobyte(ByVal wParam As Integer)

       lobyte = wParam And &amp;HFF&amp;

   End Function

   Sub SocketsInitialize()
   Dim WSAD As WSADATA
   Dim iReturn As Integer
   Dim sLowByte As String, sHighByte As String, sMsg As String

       iReturn = WSAStartup(WS_VERSION_REQD, WSAD)

       If iReturn &lt;&gt; 0 Then
           MsgBox "Winsock.dll is not responding."
           End
       End If

       If lobyte(WSAD.wversion) &lt; WS_VERSION_MAJOR Or
   (lobyte(WSAD.wversion) = WS_VERSION_MAJOR And hibyte(WSAD.wversion) &lt;
   WS_VERSION_MINOR) Then
           sHighByte = Trim$(Str$(hibyte(WSAD.wversion)))
           sLowByte = Trim$(Str$(lobyte(WSAD.wversion)))
           sMsg = "Windows Sockets version " &amp; sLowByte &amp; "." &amp; sHighByte
           sMsg = sMsg &amp; " is not supported by winsock.dll "
           MsgBox sMsg
           End
       End If

       If WSAD.iMaxSockets &lt; MIN_SOCKETS_REQD Then
           sMsg = "This application requires a minimum of "
           sMsg = sMsg &amp; Trim$(Str$(MIN_SOCKETS_REQD)) &amp; " supported
   sockets."
           MsgBox sMsg
           End
       End If

   End Sub

   Sub SocketsCleanup()
   Dim lReturn As Long

       lReturn = WSACleanup()

       If lReturn &lt;&gt; 0 Then
           MsgBox "Socket error " &amp; Trim$(Str$(lReturn)) &amp; " occurred in
   Cleanup "
           End
       End If

   End Sub

   Sub Form_Load()

       SocketsInitialize

   End Sub

   Private Sub Form_Unload(Cancel As Integer)

       SocketsCleanup

   End Sub

   Private Sub Command1_click()
   Dim hostname As String * 256
   Dim hostent_addr As Long
   Dim host As HOSTENT
   Dim hostip_addr As Long
   Dim temp_ip_address() As Byte
   Dim i As Integer
   Dim ip_address As String

       If gethostname(hostname, 256) = SOCKET_ERROR Then
           MsgBox "Windows Sockets error " &amp; Str(WSAGetLastError())
           Exit Sub
       Else
           hostname = Trim$(hostname)
       End If

       hostent_addr = gethostbyname(hostname)

       If hostent_addr = 0 Then
           MsgBox "Winsock.dll is not responding."
           Exit Sub
       End If

       RtlMoveMemory host, hostent_addr, LenB(host)
       RtlMoveMemory hostip_addr, host.hAddrList, 4

       ReDim temp_ip_address(1 To host.hLength)
       RtlMoveMemory temp_ip_address(1), hostip_addr, host.hLength

       For i = 1 To host.hLength
           ip_address = ip_address &amp; temp_ip_address(i) &amp; "."
       Next
       ip_address = Mid$(ip_address, 1, Len(ip_address) - 1)

       MsgBox hostname
       MsgBox ip_address

   End Sub

</PRE><P><LI>Press the F5 key to run the project.

<P><LI>Click Command1 to obtain the host information.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../VBWIN/Q154512.htm">Q154512</A></B>
   TITLE     : SAMPLE: WINSOCK.EXE: Getting HostAddress Using Windows
               Sockets
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage kbhowto<BR>
KBSubcategory: APrgOther<BR>
Additional reference words: 4.00 kbstream vb4win vb432
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
