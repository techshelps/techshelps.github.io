

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Extract Multiple RDO Resultsets from Stored Procedures </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154825">
<META NAME="KBModify" CONTENT="1997/10/13">
<META NAME="KBCreate" CONTENT="1996/08/15">
<META NAME="Keywords" CONTENT="APrgDataRDO VB4ALL VB4WIN vb5all vb5howto VBKBDB VBKBNet kbusage kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  SQL Server stored procedures are capable of returning more than one recordset and the Remote Data Object (RDO) has the ability to access these Multiple Resultsets.  When calling these stored procedures, the following error can be encountered:     E...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXS,QBS0,QBVR,QAUD,QAB9,QAO2,QABM,QBWS,QAH4,QAGI,QAI5,QAPN,QAY2,QAL3,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Extract Multiple RDO Resultsets from Stored Procedures</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154825</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for Windows,
   version 5.0
<LI>Enterprise Edition of Microsoft Visual Basic, 32-bit only,
   for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
SQL Server stored procedures are capable of returning more than one
recordset and the Remote Data Object (RDO) has the ability to access these
Multiple Resultsets.
<P>
When calling these stored procedures, the following error can be
encountered:
<P>
<PRE>   Error 40002

   "37000: [Microsoft][ODBC SQL Server Driver][SQL Server]Cannot open a
   cursor on a stored procedure that has anything other than a single
   select statement in it"

</PRE>Below is a code sample showing how to return the multiple Resultsets using
the MoreResults Property of the RDO.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are two methods to avoid Error 40002.
<P>
<P><h3>Method 1</h3>
 
<P>
Use The ODBC Cursor library rather than Server Side Cursors. To do this,
use the following code:
<P>
<PRE>   rdoEngine. rdoDefaultCursorDriver = rdUseODBC

    - or -

   rdoEnvironments(0).CursorDriver = rdUseOdbc

</PRE>This option gives better performance for small result sets, but may degrade
quickly for larger result sets depending on the Server and workstation
configuration.
<P>
<P><h3>Method 2</h3>
 
<P>
Use Server Side Cursors, a Forward Only Cursor, and a rowset size of 1.
Make the server create a cursor-less resultset on the server side by using
a forward only cursor and a RowSetSize of 1.
<P>
The code sample below illustrates how to create a stored procedure that
returns multiple result sets using method 2:

<OL><P><LI>Create the stored procedure on SQL Server:
<P>
   a. Start the ISQL utility that shipped with SQL server.
<P>
   b. Connect to your SQL server.
<P>
   c. Select the pubs database from the combo box labeled DB.
<P>
   d. Enter the following lines into the Query Tab:
<P>
<P><PRE>      CREATE PROCEDURE TestMultiResults AS
      select * from authors
      select * from discounts
      GO
</PRE><P>
   e. Choose the Query|Execute menu. The Results tab should display:
<P>
<P><PRE>      This command did not return data, and it did not return any rows
</PRE><P>
<P><PRE>      A stored procedure called TestMultiResults has now been created
      in the pubs database on SQL Server.
</PRE>
<P><LI>Create the Visual Basic client to call the stored procedure:
<P>
   a. Start Visual Basic. Form1 is created by default.
<P>
   b. Add a Command Button (Command1) and a List Box (List1) to Form1.
<P>
   c. Add the following code to Form1:
<P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>         Command1.Caption = "Run Stored Procedure"
      End Sub

       Private Sub Command1_Click()
        Dim cn As rdoConnection
        Dim ps As rdoPreparedStatement
        Dim rs As rdoResultset
        Dim strConnect As String
        'set cursor driver to use server-side cursors
        rdoDefaultCursorDriver = rdUseServer

        'open a connection to the pubs database using DSNless connections
        'replace myServer with the name of your SQL server

        strConnect = "Driver={SQL Server}; Server=myServer; " &amp; _
                     "Database=pubs; Uid=sa; Pwd="
        Set cn = rdoEnvironments(0).OpenConnection(dsName:="", _
                                              Prompt:=rdDriverNoPrompt, _
                                              ReadOnly:=False, _
                                              Connect:=strConnect)

        'create a prep stmt for the stored proc call
        Set ps = cn.CreatePreparedStatement("MyPs", _
                                            "{call TestMultiResults}")
        'set the RowSet size to 1
         ps.RowsetSize = 1

         'open the resultset with forward-only cursor
         Set rs = ps.OpenResultset(rdOpenForwardOnly)

         'add the first resultset to a list box
         While Not rs.EOF
             list1.AddItem rs("au_fname") &amp; " " &amp; rs("au_lname")
             rs.MoveNext
         Wend

         'move to the second resultset
         rs.MoreResults
         list1.AddItem "Second Resultset Below"
         'add the second resultset to the same list box
         While Not rs.EOF
             list1.AddItem rs("discounttype") &amp; " = " &amp; rs("discount")
             rs.MoveNext
         Wend

         'Close the resultset and the connection and set both to nothing
         rs.Close
         Set rs = Nothing
         cn.Close
         Set cn = Nothing
      End Sub

   d. Run the project and click the "Run Stored Procedure" button. You
      should see a list of Authors and then Discounts in the list box.

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information, please see the following articles in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q147875.htm">Q147875</A></B>
   TITLE     : HOWTO: Use "DSN-Less" ODBC Connections with RDO and DAO

   ARTICLE-ID: <B><A HREF="../VBWIN/Q147814.htm">Q147814</A></B>
   TITLE     : HOWTO: Retrieve Multiple Result Sets from a Stored Procedure

   ARTICLE-ID: <B><A HREF="../VBWIN/Q149054.htm">Q149054</A></B>RDO
   TITLE     : Choosing a rdoResultset Cursortype
</PRE> 
<PRE>Keywords          : APrgDataRDO VB4ALL VB4WIN vb5all vb5howto VBKBDB VBKBNet kbusage kbhowto
Version           : 4.0 5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
