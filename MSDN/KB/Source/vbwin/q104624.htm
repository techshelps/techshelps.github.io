

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Include Return Receipt Functionality w/ MAPI Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104624">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/09/23">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article explains how to install return receipt functionality on a message sent in a Visual Basic application. When a message has return receipt functionality, it means that when the message you sent is opened by the recipient, a message is sen...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAUD,QAYC,QBS0,QAMB,QALW,QAH6,QAGI,QAA1,QA2T,QAR2,QDI2,QAH4,QBXS,QA2P V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Include Return Receipt Functionality w/ MAPI Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104624</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic programming system
<PRE>  for Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to install return receipt functionality on
a message sent in a Visual Basic application. When a message has return
receipt functionality, it means that when the message you sent is opened
by the recipient, a message is sent back to you to confirm that the
message was opened by the recipient. The returned message typically
contains the date, time, and original message subject.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Visual Basic, you can send a message by calling the automatic dialog
box or by manually programming the message properties.
<P>
Using the automatic dialog box, the sender can select the Return Receipt
option in the Send Note dialog box.
<P>
To manually program Return Receipt functionality, use the following
example as a guide:
<P>
<PRE>   ' set up a session associated with the message:
   Const SESSION_SIGNON = 1
   mapisession1.Action = SESSION_SIGNON
   mapimessages1.SessionID = mapisession1.SessionID

   ' Send the message
   Const MESSAGE_SEND = 3
   mapimessages1.MsgIndex = -1                        ' The compose buffer
   mapimessages1.MsgNoteText = "How's it going?"      ' The message text
   mapimessages1.MsgOrigAddress = "FredBloggs"        ' Sender's alias
   mapimessages1.MsgSubject = "Hi"                    ' The message title
   mapimessages1.RecipDisplayName = "JoSmith"         ' Recipient's alias
   mapimessages1.MsgReceiptRequested = True           ' Request receipt
   mapimessages1.Action = MESSAGE_SEND                ' Send message

</PRE>Below is the example code that traps whether Request Receipt has been set.
Place this code at the point where the user reads the message.
<P>
<PRE>   If mapimessages1.MsgReceiptRequested Then          ' Check Return
</PRE>receipt
<PRE>      mapimessages1.MsgIndex = -1                     ' Compose buffer
      mapimessages1.RecipDisplayName = sender$        ' Set sender to
</PRE>receiver
<PRE>      mapimessages1.MsgSubject = "RECEIVED " + title$ ' Set message title
      mapimessages1.Action = MESSAGE_SEND             ' Send Return Receipt
   End If

</PRE>The variables sender$ and title$ contain the alias and the message title of
the original message.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
