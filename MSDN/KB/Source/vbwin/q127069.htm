

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: GP Faults from Using IIF with Temporary Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q127069">
<META NAME="KBModify" CONTENT="1997/10/30">
<META NAME="KBCreate" CONTENT="1995/03/12">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using the IIF statement may cause a general protection (GP) fault in a range of addresses from 0023:6BB0 to 0023:7DE0 within VBRUN300.DLL or from 004A:68D0 or 004a:7B00 within VB.EXE. This is a subtle bug that may not be encountered and will not oc...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBKN,QATX,QBS0,QAPN,QAO4,QBVV,QAR4,QAH4,QAB9,QBF0,QAY2,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: GP Faults from Using IIF with Temporary Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q127069</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00
WINDOWS
kbprg kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the IIF statement may cause a general protection (GP) fault in a
range of addresses from 0023:6BB0 to 0023:7DE0 within VBRUN300.DLL or from
004A:68D0 or 004a:7B00 within VB.EXE. This is a subtle bug that may not be
encountered and will not occur on a line using the IIF statement.
Other GP faults in segment 23 of VBRUN300.DLL are more indicative of
calling a DLL incorrectly, such as forgetting to put "byval" on a DLL's
string parameter.
<P>
<P><h2>CAUSE</h2>
 
<P>
The IIF statement does not release string handles for temporary strings
used in its arguments. Under certain conditions, this can result in a GP
fault occurring at a seemingly random location later in your program. The
code below demonstrates the condition where IIF will not release its string
handles.
<P>
<PRE>   dim x$
   x$ = "World"
   y$ = "Hello World"
   Label1.Caption = IIf(3 &gt; 1000, "Hello " &amp; x$, Mid$( y$, 1, 5 ) )

</PRE>The second and third arguments of this statement result in temporary
strings being created. This does not, however, cause the GPF. One of two
other events must occur for that to happen:

<UL><LI>If the user allocates a large string and there is not enough contiguous
   space for it, Visual Basic will attempt to compact the heap, creating a
   condition in which the GP fault can occur.
<P>
   -OR-

<LI>Upon exit of the procedure the IIF was located in, the heap will be
   compacted.
<P>
</UL>Once either condition occurs, the GP fault will not occur until the next
temp string is allocated, which just happens to use the string handle used
by the IIF statement. Then the GP fault will occur within one of the two
address ranges given above.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Avoid the use of functions that return Strings within the IIF statement.
For example, to avoid the bug, modify the code listed in the CAUSE section
of this article to this:
<P>
<PRE>   dim y$, z$
   y$ = "Hello World"
   z$ = "Small World"
   Label1.Caption = IIf(3 &gt; 1000, y$, z$ )

</PRE>Here's another alternative:
<P>
<PRE>   if 3 &gt; 1000 then
      label1.caption = y$
   else
      label1.caption = z$
   end if

</PRE><h2>STATUS</h2>
 
<P>
This bug was corrected in Microsoft Visual Basic version 4.0 for Windows.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 GPF buglist3.00 fixlist4.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsCus<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
