

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create and Use a Minimal OLE Automation Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129801">
<META NAME="KBModify" CONTENT="1997/07/02">
<META NAME="KBCreate" CONTENT="1995/05/04">
<META NAME="Keywords" CONTENT="IAPOLE vb4all vb4win">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic version 4.0 introduces the powerful new ability to create OLE Automation Servers. This article shows you, step by step, how to create a minimal OLE Automation server and use it from a minimal OLE Client. This article does not exercise ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA9Q,QAH4,QAIJ,QBJZ,QBXS,QAFF,QBWS,QA2K,QAY2,QDIV,QAPN,QAEF,QASR,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create and Use a Minimal OLE Automation Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129801</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic version 4.0 introduces the powerful new ability to create OLE
Automation Servers. This article shows you, step by step, how to create a
minimal OLE Automation server and use it from a minimal OLE Client. This
article does not exercise the full functionality of OLE servers. It is
intended to help you write your first OLE Automation Server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Phase One - Create the Server</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>From the File menu, choose Remove File to remove Form1.

<P><LI>From the Insert menu, add a Module (Module1) and a Class Module (Class1)
   to your project.

<P><LI>Type the following code in the General Declarations section of Module1:
<P>
<PRE>      Sub Main ()

</PRE></OL>NOTE: End Sub will be added automatically for you.

<OL><P><LI>Add the following code to the General Declaration section of Class1:
<P>
<P><PRE>      Public MyString As String
</PRE>   
<P><PRE>      Public Function MyFunction() As String
<PRE></PRE>         MyFunction = "You never know what you're gonna get."
      End Function

</PRE><P><LI>Add the following code to the Class_Initialize event of Class1:
<P>
<P><PRE>      Public Sub Class_Initialize()
<PRE></PRE>         MyString = "Life is like a box of chocolates."
      End Sub

</PRE><P><LI>In the Properties window for Class1, set the following properties:
<P>
<PRE>   Property      Value
   ------------------------------------
   Instancing    2 – Creatable MultiUse
   Public        True

</PRE><P><LI>From the Tools menu, choose Options. In the StartMode group of the
   Project tab, choose OLE Server. You now have a complete (though limited)
   OLE automation server. You can choose Make EXE to make an .EXE file that
   you can run later, or you can choose Make DLL to make an Inprocess OLE
   Server. Now you're ready to automate your server.

<P><LI>Start the program by choosing Start from the Run menu or by pressing the
   the F5 key.

<P><LI>Minimize Visual Basic.
<P>
</OL><h3>Phase Two - Create a Client to Access the Server</h3>
 

<OL><P><LI>Start a second copy of Visual Basic. A new project (Project1) with a
   default form (Form1) is created.

<P><LI>Add the following code to the appropriate events of Form1:
<P>
<P><PRE>      ' In the General Declarations section:
      Private MyObj As Object
</PRE>   
<P><PRE>      Private Sub Form_Load ()
<PRE></PRE>         Set MyObj = CreateObject("Project1.Class1")
      End Sub
   
      Private Sub Form_Click()
         Print MyObj.MyString
         Print MyObj.MyFunction
      End Sub
   
      Private Sub Form_Unload (Cancel As Integer)
         Set MyObj = Nothing
      End Sub

</PRE><P><LI>Start the program by choosing Start from the Run menu or by pressing the
   the F5 key.

<P><LI>Click Form1. You'll see this output:
<P>
   Life is like a box of chocolates.
   You never know what you're gonna get.
<P>
</OL>When Form1 loads, it instantiates one copy of your OLE automation server.
On the click, it makes two OLE calls. One to retrieve the value of the
MyString public variable and one to invoke the MyFunction public function.
<P>
When Form1 unloads, it destroys its created instance of the OLE automation
server. If this is the last instance in memory, the server process is
removed from memory as well.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : IAPOLE vb4all vb4win<BR>
Technology          : kbole<BR>
Version             : 4.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
