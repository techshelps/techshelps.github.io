

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: How Visual Basic 4.0 Handles Files Marked Read-Only </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143044">
<META NAME="KBModify" CONTENT="1997/03/31">
<META NAME="KBCreate" CONTENT="1996/01/24">
<META NAME="Keywords" CONTENT="kbenv PrgOther ssint ssvb VB4ALL VB4WIN">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic 4.0 may handle files with the read-only attribute set differently than Visual Basic 3.0. This may result in a  Can't Edit Module  error when trying to change a code module. The Visual Basic 4.0 development environment will handle read-...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QATX,QAH4,QAMA,QA5F,QBXS,QABA,QAFF,QAPN,QA56,QA55,QAH0,QABB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: How Visual Basic 4.0 Handles Files Marked Read-Only</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 31, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143044</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
<LI>Microsoft Visual SourceSafe for Windows, version 4.00
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic 4.0 may handle files with the read-only attribute set
differently than Visual Basic 3.0. This may result in a "Can't Edit Module"
error when trying to change a code module. The Visual Basic 4.0 development
environment will handle read-only files in one of two ways. The way Visual
Basic 4.0 behaves is dependent on the current setting of the ReadOnlyMode
property of the development environment. If the ReadOnlyMode is set to 0
(lenient) you will be able to edit files marked read-only just like Visual
Basic 3.0. Of course you will still not be able to save your changes. If
the ReadOnlyMode is set to 1 (strict) Visual Basic will not allow you to
edit files marked read-only.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The default ReadOnlyMode for Visual Basic 4.0 is lenient. However, the
default can be changed to strict by adding ReadOnlyMode=1 to the Visual
Basic section of the VB.INI.
<P>
ReadOnlyMode can also be changed dynamically by Visual Basic 4.0 add-ins
through the ReadOnlyMode property of the Application object of Visual Basic
4.0 add-in object model. The Microsoft SourceSafe add-in for Visual Basic
4.0 sets Visual Basic 4.0 to the strict mode. The following example shows
you how to create a add-in that will allow you to toggle the ReadOnlyMode
from a menu item.
<P>
<P><h3>Example</h3>
 

<OL><P><LI>Start a new project.
</OL>2. Remove the default Form1.
3. Add a reference to "Microsoft Visual Basic 4.0 Development Environment"
<PRE>   using the Tools/References dialog.
</PRE></OL>4. Add a new standard module (Module1.BAS by default).
5. Put the following code in the standard module:
<P>
<PRE>   ''' MODULE1.BAS
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   #If Win16 Then
      Declare Function WritePrivateProfileString Lib "KERNEL" ( _
         ByVal AppName As String, ByVal KeyName As String, _
         ByVal keydefault As String, ByVal FileName As String) As Integer
      Declare Function GetPrivateProfileString Lib "KERNEL" ( _
         ByVal AppName As String, ByVal KeyName As String, _
         ByVal keydefault As String, ByVal ReturnString As String, _
         ByVal NumBytes As Integer, ByVal FileName As String) As Integer
   #ElseIf Win32 Then
      Declare Function WritePrivateProfileString Lib "KERNEL32" _
         Alias "WritePrivateProfileStringA" (ByVal AppName As String, _
         ByVal KeyName As String, ByVal keydefault As String, _
         ByVal FileName As String) As Long
      Declare Function GetPrivateProfileString Lib "KERNEL32" _
         Alias "GetPrivateProfileStringA" (ByVal AppName As String, _
         ByVal KeyName As String, ByVal keydefault As String, _
         ByVal ReturnString As String, ByVal NumBytes As Long, _
         ByVal FileName As String) As Long
   #End If

   Sub Main()
      #If Win16 Then
         Const Section = "Add-Ins16"
      #ElseIf Win32 Then
         Const Section = "Add-Ins32"
      #End If
      Const BufSize = 255

      Dim Ret As Variant
      Dim RetStr As String

      'Check to see if the entry is already in the VB.INI file.  Add if
</PRE>not.
<P>
<PRE>      RetStr = Space(BufSize)
      Ret = GetPrivateProfileString(Section, "ReadOnlyMode.Switch", _
         "NotFound", RetStr, BufSize, "VB.INI")
      RetStr = Left(RetStr, Ret)
      If RetStr = "NotFound" Then
         WritePrivateProfileString Section, "ReadOnlyMode.Switch", _
            "0", "VB.INI"
      End If
   End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

</PRE><P><LI>Add a new class module to the project (Class1.CLS by default.)
</OL>7. Set the following properties of the class module to the specified
<PRE>   values:

   Property        Value
   ----------      -----------------------

   Instancing      1 - Creatable MultiUse
   Name            Switch
   Public          True

</PRE><P><LI>Put the following code in the class module:
<P>
<PRE>   ''' CLASS1.CLS
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
   Option Explicit

   Private ThisInstance As VBIDE.Application
   Private AddInMenuLine As VBIDE.MenuLine
   Private AddInID As Long

   Public Sub ConnectAddIn(VBInstance As Object)
      Set ThisInstance = VBInstance
      Set AddInMenuLine = ThisInstance.AddInMenu.MenuItems.Add( _
         "Strict &amp;ReadOnlyMode")
      AddInMenuLine.Checked = ThisInstance.ReadOnlyMode
      AddInID = AddInMenuLine.ConnectEvents(Me)
   End Sub

   Public Sub DisconnectAddIn(Mode As Integer)
      AddInMenuLine.DisconnectEvents AddInID
      ThisInstance.AddInMenu.MenuItems.Remove AddInMenuLine
   End Sub

   Public Sub AfterClick()
      ThisInstance.ReadOnlyMode = ThisInstance.ReadOnlyMode Xor 1
      AddInMenuLine.Checked = ThisInstance.ReadOnlyMode
   End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

</PRE><P><LI>Set the following Project Options:
<P>
<PRE>   Option            Value
   --------------    ---------------------

   Startup Form      Sub Main
   Project Name      ReadOnlyMode
   StartMode         OLE Server
   Error Trapping    Break in Class Module

</PRE><P><LI>Save the project.
</OL>11. Run the project.
12. Start up a second instance of Visual Basic (Form1 is created by
<PRE>    default.)
</PRE></OL>13. Use the Add-In Manager to add the ReadOnlyMode.Switch add-in.
14. Open a code module with that has the read-only attribute set. You can
<PRE>    tell if a file is marked read-only by the small red lock that appears
    in the project window next to the file.
</PRE>15. From the Add-In menu you can switch the ReadOnlyMode. When checked the
<PRE>    environment will be in strict mode and when unchecked it will be in
    lenient mode.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Addin Addins VBIDE ssafe<BR>
Keywords            : kbenv PrgOther ssint ssvb VB4ALL VB4WIN<BR>
Version             : 4.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 31, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
