

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB 4.0 Calls the FreezeEvents Method to Inform OLE Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129733">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/02">
<META NAME="Keywords" CONTENT="kbprg kbole">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic version 4.0 uses the FreezeEvents method to inform an OLE control of its readiness to accept events at key points during execution.  MORE INFORMATION  This information is quoted from the OLE Control Developer's Kit, Part 4, Appendix D:...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAMN,QAOE,QAGI,QAPN,QAO4,QBS0,QAIF,QAHV,QA01,QA5W,QBC9,QBC8,QA9Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB 4.0 Calls the FreezeEvents Method to Inform OLE Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129733</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic version 4.0 uses the FreezeEvents method to inform an OLE
control of its readiness to accept events at key points during execution.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This information is quoted from the OLE Control Developer's Kit, Part 4,
Appendix D:
<P>
<PRE>   The FreezeEvents method determines whether the control should fire
   events. When initially created, the control's freeze count is at zero,
   and the control is free to fire events when appropriate. If the
   container calls FreezeEvents(TRUE), then the freeze count is
   incremented, and the control should not fire any events until the freeze
   count returns to zero by the container calling FreezeEvents(FALSE).
   This mechanism gives the container a way to suppress events being fired
   until it is fully ready to deal with them.

   The control is free to decide whether to discard events triggered when
   the control is frozen, or to queue them up and fire them when the
   control becomes unfrozen. Normally, a control makes this decision based
   on how important the event is to the control's contract. If discarding
   the event is likely to break users' assumptions and therefore their
   code, then the control should queue the event.

</PRE>Visual Basic uses the FreezeEvents at the following key points during
run time:

<UL><LI>Before starting to load a form, FreezeEvents(TRUE) is called on all
   existing controls. Any controls on the form being loaded will have
   FreezeEvents(TRUE) called immediately before their SetClientSite is
   called. FreezeEvents(FALSE) is called on all controls immediately after
   the Form_Load event is fired. This is to guarantee that Form_Load is the
   first event fired once a form is loaded.

<LI>Before dynamically loading a control, FreezeEvents(TRUE) is called on
   all existing controls. The control being dynamically loaded will have
   FreezeEvents(TRUE) called immediately before its SetClientSite is
   called. FreezeEvents(FALSE) is called on all controls after the new
   control is completely loaded.

<LI>FreezeEvents(TRUE) is called on all controls before a modal dialog or
   message box is put up. FreezeEvents(FALSE) is called after that dialog
   or messagebox is destroyed.

<LI>In design mode, whenever a control is first drawn on a form, its
   FreezeEvents(TRUE) is called immediately before its SetClientSite is
   called.

<LI>FreezeEvents(TRUE) is called on all controls whenever you exit run mode,
   whether transitioning to break or design mode. This is only interesting
   in the run-to-break transition in the design environment because in the
   run-to-design transition (or in built-EXEs), the controls are in the
   process of being destroyed.

<LI>FreezeEvents(FALSE) is called on all controls whenever you enter run
   mode from break mode. However, this doesn't apply to built EXEs.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbole<BR>
KBSubcategory: TlsCDK IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
