

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Get More Information on the ODBC Call Failed Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154510">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1996/08/08">
<META NAME="Keywords" CONTENT="vb4all vb4win kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article describes how to get more information on the ODBC Call Failed error. When errors occur using ODBC databases, Visual Basic will provide an  ODBC Call Failed  error message. This generic error message provides no specific detail so you m...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB4,QAAP,QAGI,QAH4,QA9E,QA1S,QA5V,QAMA,QA5F,QA5B,QAIF,QAKP,QAPN,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Get More Information on the ODBC Call Failed Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154510</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to get more information on the ODBC Call Failed
error. When errors occur using ODBC databases, Visual Basic will provide an
"ODBC Call Failed" error message. This generic error message provides no
specific detail so you must cycle through the Errors collection to get
additional information. This can be done with both the Visual Basic 16-bit
and 32-bit editions. Below is a code sample that shows the difference in
behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The DBEngine has an Errors collection that can be manipulated by the FOR-
EACH construct. The JET Engine can store multiple errors in the DBEngine
Errors collection. In Visual Basic 3.0, it was possible to parse the string
using the routine shown on Page 175 of the Visual Basic 4.0 Professional
Features Book under the "Guide to Data Access Objects" section. The #
symbol was used to separate the "ODBC Call Failed" message from the
detailed ODBC description in Visual Basic 3.0 but this is not necessary
under Visual Basic 4.0.
<P>
For the example below, a two-field table called MyTable has been set up on
an ODBC Source and a primary key set on the ID Field. Two records have been
added as below:
<P>
<PRE>   Field      ID      Description
   ===============================
   Record 1    1      Hello
   Record 2    2      World

</PRE>The code below will generate an error by trying to add a record with a
duplicate primary key value to test the code:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a Command button to Form1.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
   Option Explicit
<P>
<PRE>   Private Sub Command1_Click()
     Dim db As Database
     Dim rs As Recordset
     On Error GoTo trap:
     Set db = OpenDatabase("")
     Set rs = db.OpenRecordset("Select * from MyTable")
     rs.AddNew
       rs.Fields(0).Value = 2
     rs.Update
     Exit Sub
   trap:
     MsgBox Errors.Count
     MsgBox Err.Number &amp; " " &amp; Err.Description
   End Sub

</PRE><P><LI>Press the F5 key to run the project. Click on the Command button and you
   should receive Error message 3146 stating "ODBC Call Failed."
   Although the Error count is greater than one, only one message will be
   displayed.

<P><LI>Remove the code from within the error trap and replace it with the
   following code:
<P>
   Dim MyError As Error
   MsgBox Errors.Count
   For Each MyError In DBEngine.Errors
<P><PRE>     With MyError
       MsgBox .Number &amp; " " &amp; .Description
     End With
</PRE>   Next MyError

<P><LI>Press the F5 key to run the project. You should see a detailed
   message and then the 3146 Error for "ODBC Call Failed."
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Visual Basic 4.0 Professional Features, Chapter 9 of the "Guide to Data
Access Object."
<P>
Jet Database Engine Programmers Guide, Page 425-427.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q120763.htm">Q120763</A></B>
   TITLE     : How to Retrieve Info from RAISERROR Function in SQL
               Server DB</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: errors Collection<BR>
Keywords            : vb4all vb4win kbhowto<BR>
Version             : 4.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
