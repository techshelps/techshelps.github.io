

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mode Property of MCIWNDX.VBX Returns Localized Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126990">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1995/03/08">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The MCIWNDX.VBX control distributed with the Video for Windows Development Kit version 1.1, has a Mode property containing a localized string that tells you the current state of the control. When this control is used on versions of Windows other th...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7H,QANG,QA5W,QAPN,QAH4,QA7O,QAUD,QAOE,QAMN,QDL9,QBWQ,QBWO,QBWN,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Mode Property of MCIWNDX.VBX Returns Localized Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126990</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 3.0
- Microsoft Video for Windows Development Kit, version 1.1
 
<P>
SUMMARY
 
<P>
The MCIWNDX.VBX control distributed with the Video for Windows Development
Kit version 1.1, has a Mode property containing a localized string that
tells you the current state of the control. When this control is used on
versions of Windows other than those that use the English language, such as
German or French, the Mode is automatically translated into that language.
Because of this feature, you must not use a hard coded string literal when
checking the Mode property. As an alternative, you can call the Multimedia
API mciSendCommand() function. This article shows you how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To determine the state of the MCIWNDX control, you can check the Mode
property. However, both the Mode property and the Mode argument to the
ModeChange event are represented as localized strings. For example, if the
control were playing back a video clip and the Mode property was displayed
in the US version of Windows, the word "running" would be displayed.
However, in the German version of Windows, the word "Wiedergabe" would be
displayed. This makes it impossible to write code like the following that
works in all versions of Windows:
<P>
<PRE>   If MCIWnd1.Mode = "playing" Then
      ...
   End If

</PRE>The solution is to use the multimedia API mciSendCommand() function to get
the current mode of the MCI device associated with the MCIWndx control. The
mciSendCommand() function returns the state of the device as a number
instead of a string. The numbers returned by mciSendCommand are constant
across all versions of Windows. An example of calling mciSendCommand is
shown below.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the MCIWNDX.VBX to your project.

<P><LI>Create a new Module (Module1) to the project and add the following
   code to the general declarations section:
<P>
   Global Const MCI_STATUS = &amp;H814
   Global Const MCI_STATUS_ITEM = &amp;H100&amp;
   Global Const MCI_STATUS_MODE = &amp;H4&amp;
<P>
   Global Const MCI_STRING_OFFSET = 512
   Global Const MCI_MODE_NOT_READY = (MCI_STRING_OFFSET + 12)
   Global Const MCI_MODE_STOP = (MCI_STRING_OFFSET + 13)
   Global Const MCI_MODE_PLAY = (MCI_STRING_OFFSET + 14)
   Global Const MCI_MODE_RECORD = (MCI_STRING_OFFSET + 15)
   Global Const MCI_MODE_SEEK = (MCI_STRING_OFFSET + 16)
   Global Const MCI_MODE_PAUSE = (MCI_STRING_OFFSET + 17)
   Global Const MCI_MODE_OPEN = (MCI_STRING_OFFSET + 18)
<P>
   Type MCI_STATUS_PARMS
<P><PRE>      dwCallback As Long
      dwReturn As Long
      dwItem As Long
      dwTrack As Long
</PRE>   End Type
<P>
<PRE>   ' Enter the following declaration as one, single line:
   Declare Function mciSendCommand Lib "mmsystem"
      (ByVal udeviceid As Integer, ByVal uMessage As Integer,
      ByVal dwParam1 As Long, dwParam2 As Any) As Long

</PRE><P><LI>Add the following function to the module:
<P>
   Function GetMCIWndxMode (MCIControl As MCIWnd) As Long
<P><PRE>      Dim Info As MCI_STATUS_PARMS
      Dim Ret As Long
</PRE><P>
<P><PRE>      Info.dwItem = MCI_STATUS_MODE
      Info.dwCallback = 0
      Info.dwTrack = 0
</PRE><P>
<P><PRE>      ' Enter the following two lines as one, single line:
      Ret =
<PRE></PRE>        mciSendCommand(MCIControl.DeviceID,MCI_STATUS,MCI_STATUS_ITEM,Info)

      GetMCIWndxMode = Info.dwReturn
   End Function

</PRE><P><LI>Add a command button (Command1) and an MCIWNDX control (MCIWnd1) to
   Form1.

<P><LI>In the click event of Command1, add this code:
<P>
<PRE>   Sub Command1_Click ()
      Dim status As Long

      ' Load an AVI file into the control:
      MCIWnd1.Filename = "c:\winnt35\clock.avi"
      ' Get the status:
      status = GetMCIWndxMode(MCIWnd1)
      If status = MCI_MODE_STOP Then   ' is it playing or stopped
         Print "stopped"
      End If
   End Sub

</PRE><P><LI>Press the F5 key to run the program. Click the Command1 button to load
   CLOCK.AVI into the control and see "stopped" printed on the form.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 localize foreign<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
