

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use an RDO Prepared Statement to Find a Single Record </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143263">
<META NAME="KBModify" CONTENT="1997/10/16">
<META NAME="KBCreate" CONTENT="1996/01/29">
<META NAME="Keywords" CONTENT="APrgDataODBC vb432 VB4WIN vb5all vb5howto VBKBDB VBKBNet VBKBObj VBKBRDO kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  RDO does not have a FindFirst or a Seek method and in many cases as a programmer you need to find out if a particular record exists or not. This sample uses an RDO prepared statement to provide this kind of functionality. The following code allows ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA5V,QAHH,QA01,QABI,QAFF,QAPN,QAPF,QAH4,QA5F,QAMA,QBXN,QBWS,QBT6,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use an RDO Prepared Statement to Find a Single Record</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143263</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Enterprise Edition for Windows, version 5.0
<LI>Microsoft Visual Basic Enterprise Edition, 32-bit only, for Windows,
   version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
RDO does not have a FindFirst or a Seek method and in many cases as a
programmer you need to find out if a particular record exists or not. This
sample uses an RDO prepared statement to provide this kind of
functionality. The following code allows the user to type in a field they
would like to search on (for instance, OrderID, PONum, LastName), click on
a command button and then see a message box with the result of the query.
This example will only find the first occurrence of what you are searching
for. You may also want to use a stored procedure once you know that your
query is working the way that you want it to. Keep in mind that RDO is
available in Visual Basic 4.0 32-bit and Visual Basic 5.0 Enterprise
Editions only.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-By-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default. Add a
   CommandButton and a text box. Accept the default names for all.

<P><LI>Make sure a reference to the Microsoft Remote Data Object library has
   been established. In Visual Basic 4.0, you can establish the reference
   by clicking References from the Tools menu. In Visual Basic 5.0, click
   References from the Project menu.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Option Explicit
      Dim ps As rdoPreparedStatement
      Dim conn As rdoConnection
      Dim rs As rdoResultset
</PRE><P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>          With rdoEnvironments(0)
              .CursorDriver = rdUseOdbc
         Set conn = .OpenConnection("", rdDriverNoPrompt, False, _
              "driver={SQL Server};
              server=Myserver;uid=MyUID;pwd=Mypwd;database=pubs")
          End With
          Set ps = conn.CreatePreparedStatement("", _
                        "select au_lname from authors where au_lname = ?")
      End Sub

      Private Sub Command1_Click()
          ps.rdoParameters(0) = Text1.Text
          If rs Is Nothing Then
              Set rs = ps.OpenResultset(rdOpenKeyset)
          Else
              rs.Requery
          End If
          If Not rs.EOF Then
              Msgbox rs!au_lname
          Else
           Msgbox "No record match."
          End If
      End Sub

      Private Sub Form_Unload(Cancel As Integer)
          rs.Close
          ps.Close
          conn.Close
      End Sub

</PRE><P><LI>Make sure you have an appropriate ODBC data source, user ID, and
   password, then press F5 to run the program. Type your search criteria in
   Text1 (for example, "White"), and click the CommandButton. A message
   box will appear with either the record you are searching for if there
   is a match, or with a message "No record match" if there is no match.
</OL> 
<PRE>Keywords          : APrgDataODBC vb432 VB4WIN vb5all vb5howto VBKBDB VBKBNet VBKBObj VBKBRDO kbhowto
Version           : 4.0 5.0
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
