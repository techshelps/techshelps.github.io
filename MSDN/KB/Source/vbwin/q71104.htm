

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 How to Use Windows BitBlt Function in VB Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q71104 ">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1991/04/06">
<META NAME="Keywords" CONTENT="kbgraphic kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Windows GDI.EXE has a function called BitBlt that will move the source device given by the hSrcDC parameter to the destination device given by the hDestDC parameter. This article explains in detail the arguments of the Windows BitBlt function call....">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QANY,QAK6,QDL9,QBWO,QBWN,QAY5,QAH4,QAYS,QAKM,QBWQ,QBBI,QAU4,QAB5,QAB2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 How to Use Windows BitBlt Function in VB Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q71104 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows GDI.EXE has a function called BitBlt that will move the source
device given by the hSrcDC parameter to the destination device given by
the hDestDC parameter. This article explains in detail the arguments of
the Windows BitBlt function call.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This information is included with the Help file provided with Microsoft
Professional Toolkit for Visual Basic version 1.0, Microsoft Visual Basic
version 2.0, and Microsoft Visual Basic version 3.0.
<P>
To use BitBlt within a Visual Basic application, you must Declare the
BitBlt function in one of these places:

<UL><LI>Global module if using Visual Basic version 1.0.
<LI>Declaration section of any code module if using Visual Basic version
   2.0 or higher.
<LI>Declaration section of a code window for the form.
<P>
</UL>Use the following Declare statement to declare the Function. Enter the
entire Declare statement on one, single line:
<P>
<PRE>Declare Function BitBlt Lib "GDI" (ByVal hDestDC%, ByVal X%, ByVal Y%,
   ByVal nWidth%, ByVal nHeight%, ByVal hSrcDC%, ByVal XSrc%, ByVal YSrc%,
   ByVal dwRop&amp;) As Integer

</PRE>The following defines each of the formal parameters used in the Declare:
<P>
<PRE>   Parameter   Definition
   ----------------------------------------------------------------------
   hDestDC     Specifies the device context that is to receive the bitmap.

   X,Y         Specifies the logical x-coordinate and y-coordinate of the
               upper-left corner of the destination rectangle.

   nWidth      Specifies the width (in logical units) of the destination
               rectangle and the source bitmap.

   nHeight     Specifies the height (in logical units) of the destination
               rectangle and the source bitmap.

   hSrcDC     Identifies the device context from which the bitmap will be
              copied. It must be NULL(zero) if the dwRop&amp; parameter
              specifies a raster operation that does not include a source.

   XSrc       Specifies the logical x-coordinate and the y-coordinate of
              the upper-left corner of the source bitmap.

   dwRop      Specifies the raster operation to be performed as defined
              below.

</PRE>The following Raster operations are defined using the predefined constants
found in the WINDOWS.H file supplied with the Microsoft Windows Software
Development Kit (SDK). The value in the parentheses () is the value to
assign to the dwRop&amp; variable.
<P>
<PRE>   Code/Value (hex)     Description
   ----------------------------------------------------------------------
   BLACKNESS (42)       Turn output black.

   DSINVERT(550009)     Inverts the destination bitmap.

   MERGECOPY(C000CA)    Combines the pattern and the source bitmap using
                        the Boolean AND operation.

   MERGEPAINT(BB0226)    Combines the inverted source bitmap with the
                         destination bitmap using the Boolean OR operator.

   NOTSRCCOPY(330008)    Copies the inverted source bitmap to the
                         destination.

   NOTSRCERASE(1100A6)   Inverts the result of combining the destination
                         and source bitmap using the Boolean OR operator.

   PATCOPY(F00021)       Copies the pattern to the destination bitmap.

   PATINVERT(5A0049)     Combines the destination bitmap with the
                         pattern using the Boolean XOR operator.

   PATPAINT(FB0A09)      Combines the inverted source bitmap with the
                         pattern using the Boolean OR operator. Combines
                         the result of this operation with the destination
                         bitmap using the Boolean OR operator.

   SRCAND(8800C6)        Combines pixels of the destination and source
                         bitmap using the Boolean AND operator.

   SRCCOPY(CC0020)       Copies the source bitmap to destination bitmap.

   SRCERASE(4400328)     Inverts the destination bitmap and combines the
                         results with the source bitmap using the Boolean
                         AND operator.

   SRCINVERT(660046)     Combines pixels of the destination and source
                         bitmap using the Boolean XOR operator.

   SRCPAINT(EE0086)      Combines pixels of the destination and source
                         bitmap using the Boolean OR operator.

   WHITENESS(FF0062)     Turns all output white.

</PRE><h3>Step-by-Step Example</h3>
 
Here is an example showing how to copy the contents of a picture control
to the contents of another picture control.

<OL><P><LI>Define a form (Form1) and place two picture controls (Picture1 and
   Picture2) on Form1.

<P><LI>Display some graphics on Picture1 by loading from a picture file or
   by pasting from the clipboard at design time. You can load a picture
   from a file as follows:
<P>
<P><PRE>    - Select Picture from the Properties list box and click the arrow at
</OL></PRE>the
<PRE>      right of the Settings box.
    - Then select the desired picture file such as a .BMP or .ICO file
      supplied with Microsoft Windows from the dialog box.

</PRE><P><LI>Add the following code to the Form_Click procedure:
<P>
<PRE>   Sub Form_Click ()

      ' Assign information of the destination bitmap. Note that Bitblt
      ' requires coordinates in pixels.
      Const PIXEL = 3
      Picture1.ScaleMode = PIXEL
      Picture2.ScaleMode = PIXEL
      hDestDC% = Picture2.hDC
      X% = 0: Y% = 0
      nWidth% = Picture2.ScaleWidth
      nHeight% = Picture2.ScaleHeight

      ' Assign information of the source bitmap.
      hSrcDC% = Picture1.hDC
      XSrc% = 0: YSrc% = 0

      ' Assign the SRCCOPY constant to the Raster operation.
      dwRop&amp; = &amp;HCC0020

      Suc% = BitBlt(hDestDC%, X%, Y%, nWidth%, nHeight%,_
      hSrcDC%, XSrc%, YSrc%, dwRop&amp;)
   End Sub

</PRE><P><LI>Run the program.
<P>
</OL>Click the form. The contents of the first picture will be displayed on the
the second picture.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 vb3only<BR>
KBCategory: kbgraphic kbprg kbcode<BR>
KBSubcategory: APrgGrap
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
