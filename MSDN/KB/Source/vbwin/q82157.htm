

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Strings w/ TABs Sent from VB to Excel via DDE Are Chopped </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q82157 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/03/26">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Unexpected behavior may occur in a dynamic data exchange (DDE) conversation from Visual Basic to Microsoft Excel when you send a string that contains TAB characters.  If you specified a specific row and column in the Visual Basic LinkItem property,...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QATX,QBS0,QBVR,QA5V,QAH6,QAH4,QDO5,QAPN,QAY5,QAIJ,QAMB,QAY2,QAH7,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Strings w/ TABs Sent from VB to Excel via DDE Are Chopped</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q82157 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Unexpected behavior may occur in a dynamic data exchange (DDE) conversation
from Visual Basic to Microsoft Excel when you send a string that contains
TAB characters.
<P>
If you specified a specific row and column in the Visual Basic LinkItem
property, the string may be truncated in Excel. If you didn't specify a
column in the LinkItem property but only specified a specific row, the
string will be parsed by Excel, and each TAB will cause the characters
following the TAB to be entered into the following cell in Excel.
<P>
<P><h2>CAUSE</h2>
 
<P>
The reason for this behavior is that Excel uses TABs as its delimiter. You
can use this method to send multiple items to Excel, placing them in their
own cells if desired.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Either don't send strings that contain TABs or else provide more complete
information in the LinkTopic property. For example, in the code shown in
the "Steps to Reproduce Behavior" section below, you can work around the
undesired behavior by placing the following value in the ListTopic
property:
<P>
<PRE>   DDEbox.LinkTopic = "R" + Row$ + "C1:R" + Row$ + "C2"

</PRE>By specifying a larger selection of cells, you can ensure that the data
being passed will not be truncated and that the embedded TAB, RETURN, or
LINEFEED characters will be interpreted correctly as the next column or
next row.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This behavior occurs when the following is true:

<UL><LI>A string that you are trying to send to Excel through DDE contains
   an embedded TAB.

<LI>You set your LinkItem property to a specific Excel cell (both row
   and column, such as R1C1, meaning row 1 column 1).
<P>
</UL>The attempted conversation will result in a truncated string. For
example, if both conditions are true and you pass the following string to
Excel:
<P>
<PRE>   "The cow jumped" + Chr$(9) + "over the moon"

</PRE>the only thing you will see on the Excel side is "The cow jumped." The rest
of the string will be lost.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following example passes strings to Excel from a list box that has TAB-
delimited columns. Run the program twice, and change the LinkItem line from
a comment into an executed line of code, and observe the different
behavior.

<OL><P><LI>Start a new project in Visual Basic (ALT, F, N). Form1 is created by
   default.

<P><LI>Put a text box (Text1) on Form1, and change its name from Text1 to
   DDEbox.

<P><LI>Put a list box (List1) and a command button (Command1) on Form1.

<P><LI>Add the following code to the Form_Load procedure:
<P>
<PRE>   Sub Form_Load ()
      Form1.Show
      ' Add items to list box with TABs embedded.
      List1.AddItem "hey" + Chr$(9) + "is"
      List1.AddItem "for" + Chr$(9) + "horses"
   End Sub

</PRE><P><LI>Add the following code to the Command1_Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      Const NONE = 0, COLD = 2     ' Define constants.

      If DDEbox.LinkMode = NONE Then
         Z% = Shell("Excel", 4)   ' Start Excel.
         ' Set link topic.
         DDEbox.LinkTopic = "Excel|Sheet1"
         DDEbox.LinkItem = ""     ' Set link item.
         DDEbox.LinkMode = COLD   ' Set link mode.
      End If

      ' Loop through all items in list box:
      For i% = 0 To List1.ListCount - 1
         Row$ = Format$(i% + 1)         ' Format row variable.
         ' DDEbox.LinkItem = "R"+Row$   ' Take out comment to send entire
                                        ' string.
         ' Comment next line when uncommenting above line.
         DDEbox.LinkItem = "R" + Row$ + "C1"   ' This statement truncates
                                               ' string in Excel.
         DDEbox.text = List1.list(i%) ' Assign text box to list box string.
         DDEbox.LinkPoke     ' Send the string to Excel.
      Next

      DDEbox.LinkMode = NONE
   End Sub

</PRE></OL>For best results, make sure Excel is not running before you start the
program. When you start the program, notice the list box has the strings
added to it during the form Load event. If you choose the command button to
initialize the DDE conversation with the program typed in exactly as shown,
the following will appear in Excel:
<P>
hey   ' This will be in cell A1.
for   ' This will be in cell A2.
<P>
If you change the assignment statement of the LinkItem of the DDEbox from:
<P>
<PRE>   DDEbox.LinkItem = "R" + Row$ + "C1"

</PRE>to:
<P>
<PRE>   DDEbox.LinkItem = "R"+ Row$

</PRE>the entire string is passed to Excel with the following results:
<P>
<PRE>hey       is      ' These words will be in A1 and B1.
for        horses ' These words will be in A2 and B2.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbinterop kbprg kbcode kbprb<BR>
KBSubcategory: IAPDDE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
