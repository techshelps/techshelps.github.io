

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use ExitWindowsExec() in VB to Run MS-DOS Batch File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147806">
<META NAME="KBModify" CONTENT="1997/03/18">
<META NAME="KBCreate" CONTENT="1996/02/29">
<META NAME="Keywords" CONTENT="APrgWindow kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The ExitWindowsExec() function terminates Windows, runs a specified MS-DOS application, and then restarts Windows. The information in this article shows you how to call this function from Microsoft Visual Basic.  MORE INFORMATION  The ExitWindowsEx...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWQ,QBWO,QBWN,QBV8,QAB9,QBFY,QAY5,QAHE,QBWS,QATX,QACI,QBBI,QAIJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use ExitWindowsExec() in VB to Run MS-DOS Batch File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147806</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-Bit for Windows, version 4.0.
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The ExitWindowsExec() function terminates Windows, runs a specified MS-DOS
application, and then restarts Windows. The information in this article
shows you how to call this function from Microsoft Visual Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ExitWindowsExec() function is typically used by installation programs
to replace components of Windows that are active when Windows is running.
Normally, you'd want to run an MS-DOS batch file that performs the file
copying while Windows is temporarily shut down. The declaration for
ExitWindowsExec() is as follows:
<P>
<PRE>   ' Place the following declaration on one, single line:
  Private Declare Function ExitWindowsExec Lib "User" (ByVal lpszExe As
</PRE>String,
<PRE>      ByVal lpszParams As Any) As Integer

</PRE><h3>First Parameter: lpszExe$</h3>
 
<P>
The first parameter for ExitWindowsExec(), lpszExe$, should be a string
containing the fully qualified path to the executable file you want to run.
This string must contain no more than 127 characters. For batch files,
you'll need to specify COMMAND.COM as the file -- C:\DOS\COMMAND.COM. To
get the fully qualified path in Visual Basic to COMMAND.COM, you can use
the Environ$ function:
<P>
<PRE>   lpszExe$ = Environ$("COMSPEC")

</PRE>For more information on the Environ$ function, please refer to the
Microsoft Visual Basic Language Reference or the Help menu.
<P>
<P><h3>Second Parameter: lpszParams$</h3>
 
<P>
The second parameter for ExitWindowsExec(), lpszParams$, should be a string
containing any necessary parameters for the executable file. If no
parameters are necessary, pass a long integer 0 such as 0&amp;.
<P>
To execute a batch file, however, this is where you specify the path to the
batch file and any parameters it needs. Also, you need to preface the
string with the /c switch which tells MS-DOS to invoke a copy of
COMMAND.COM. Here is an example:
<P>
<PRE>   lpszParams$ = "/C C:\DIRNAME\GENERIC.BAT  PARAMETER1 PARAMETER2"

</PRE>The return value of this function is False when the function fails.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Using either NotePad in Windows or Edit in MS-DOS, create a batch file
   in the root directory of your hard disk called C:\RUNIT.BAT. Give it
   the following contents:
<P>
   @echo off
   echo Making Backup of autoexec.bat
   copy c:\autoexec.bat c:\*.bak
   echo Done

<P><LI>Start a new project in Visual Basic (Alt, F, N). Form1 is created
   by default.

<P><LI>Add the following declaration to the General Declarations section
   of the form:
<P>
<PRE>   ' Place the following declaration on one, single line:
   Private Declare Function ExitWindowsExec Lib "User" (ByVal lpszExe As
</PRE></OL>String, _
<PRE>      ByVal lpszParams As Any) As Integer

</PRE><P><LI>Add a command button (Command1) to the form, and place the following
   code in the Click() event.
<P>
<PRE>   Private Sub Command1_Click ()
      sComspec$ = Environ$("COMSPEC")
      ret% = ExitWindowsExec(sComspec$,  "/c c:\runit.bat")
   End Sub

</PRE><P><LI>Save the project (Alt, F, V). Then press the F5 key to run the program.
   Click the command button to exit Windows, run the batch file, and then
   restart Windows.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: vbwin vb416 4.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgWindow<BR>
Keywords            : APrgWindow kbcode kbprg<BR>
Version             : 4.00<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
