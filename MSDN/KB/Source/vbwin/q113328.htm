

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Form KeyDown Displays Inconsistent Behavior </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113328">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/03/31">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The KeyDown event on a Form that has KeyPreview set to True may not fire when certain controls have the focus and arrow keys are pressed. Also, the ENTER key won't show up in the KeyPreview if the focus is on a command button.  CAUSE =====  When an...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMN,QAB5,QA7O,QAOE,QAHP,QBT6,QBS0,QADO,QBV4,QAPN,QAO4,QBVV,QAH4,QAY5,QAO2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Form KeyDown Displays Inconsistent Behavior</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113328</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The KeyDown event on a Form that has KeyPreview set to True may not fire
when certain controls have the focus and arrow keys are pressed. Also, the
ENTER key won't show up in the KeyPreview if the focus is on a command
button.
<P>
<P><h2>CAUSE</h2>
 
<P>
When any of the following controls have the Focus, pressing the arrow
keys will not cause the Form_KeyDown event to fire:

<UL><LI>Option Button
<LI>Command Button
<LI>Check Box
<LI>3D Check Box
<LI>3D Option Button
<LI>3D GroupPushButton
<P>
</UL>This is not the case when controls that accept Text input, such as a text
box, have the focus. In the case of a control that accepts text input,
you'll find that the Form_KeyDown event fires normally.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design. The problem is that these controls are
subclassed off a default control type provided by Windows. For more
information, please see the Visual Basic version 3.0 "Professional Features
Book 1" manual, "Control Development Guide," page 87, the paragraph that
begins, "If Click were implemented ..."
<P>
The superclass in Windows treats these keys in a special way, so that the
control always gets the keystroke before the form does. When the control
itself handles the event, it can reflect the keystroke back to the form for
the KeyPreview. But if the superclass handles the event, the control must
also avoid handling it in order to prevent conflicts, so there is no way to
reflect the keystroke back to the form.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Set the KeyPreview property of the form to True.

<P><LI>Add two command buttons (Command1 and Command2) to the form.

<P><LI>Add the following code to the Form_KeyDown procedure:
<P>
<PRE>   Sub Form_KeyDown()
      Print "Hello from keydown"
   End Sub

</PRE><P><LI>Run the program. Pressing any of the arrow keys does not evoke the
   Form_KeyDown event. Instead, the program cycles through the controls
   on the form, making each in turn become the active control.

<P><LI>Add a Text box (Text1) to the form.

<P><LI>Run the program.
<P>
</OL>Pressing the arrow keys will evoke the Form_KeyDown when focus shifts
to the Text box.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
