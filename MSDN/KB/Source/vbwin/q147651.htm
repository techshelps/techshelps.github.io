

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error When Assign DB Value to Var: Invalid Use of Null </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147651">
<META NAME="KBModify" CONTENT="1996/04/16">
<META NAME="KBCreate" CONTENT="1996/02/28">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  It is possible to receive the error message  Invalid Use of Null  when assigning data from an empty field in a database to a variable or control. This article explains why this error occurs and how to work around it.  CAUSE =====  The variant data ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBT6,QBV4,QAPN,QAN0,QAHP,QAI4,QATX,QAB4,QAUD,QAH4,QAAP,QAY5,QA7O,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error When Assign DB Value to Var: Invalid Use of Null</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147651</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
It is possible to receive the error message "Invalid Use of Null" when
assigning data from an empty field in a database to a variable or control.
This article explains why this error occurs and how to work around it.
<P>
<P><h2>CAUSE</h2>
 
<P>
The variant data type can hold several types of data. It can also be Null
or Empty. It is important to distinguish between Null and Empty. A Null
variant contains no valid data, while an Empty variant has not been
initialized.
<P>
When an Empty variant is assigned to a string it is converted to "". When
an Empty variant is assigned to a numeric it is converted to 0. The Null
variant on the other hand has no valid data, so it cannot be assigned to a
string or a numeric. Trying to assign a Null variant generates the "Invalid
Use of Null" error. The following example demonstrates this behavior:
<P>
<PRE>   Dim a as Variant
   Dim b as Integer
   a = Null
   b = a

</PRE>Some properties, functions, and methods also return Null. An obvious
example is the Null function. To avoid the "Invalid Use of Null" error,
don't assign a function or method that returns Null to a string or numeric.
The following example demonstrates this behavior:
<P>
<PRE>   Dim b as Integer
   b = Null

</PRE>The "Invalid Use of Null" error can also occur when assigning a value to a
string or numeric property of a control. The text property of a text box is
a string property. The following example shows how the "Invalid Use of
Null" error can occur with a text box.
<P>
<PRE>   Text1.Text = Null

</PRE>In database programming, you may also receive the "Invalid Use of Null"
error when assigning the value of a field to a text box. This happens
because the Value property returns Null when the field contains no valid
data. Here's an example that demonstrates this:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a data control (Data1) and a text box (Text1) to the form.

<P><LI>Add the following code to the Form_Load event:
<P>
<PRE>   Private Sub Form_Load()
      Data1.DatabaseName = "C:\VB\BIBLIO.MDB"
      Data1.RecordSource = "Authors"
      Data1.Refresh
      Data1.Recordset.AddNew
      Data1.Recordset.Update
      Data1.Recordset.Bookmark = Data1.Recordset.LastModified
      Text1.Text = Data1.Recordset("Author")
   End Sub

</PRE><P><LI>Run the program.
<P>
</OL><h2>WORKAROUND</h2>
 
<P>
Visual Basic provides two mechanisms for working around the error.

<UL><LI>The IsNull() function method.
<LI>The ampersand (&amp;) concatenation method.
<P>
</UL><h3>The IsNull() Function Method</h3>
 
<P>
The IsNull() function allows you to detect Null. Here's how you could use
IsNull() in a database program:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a data control (Data1) and a text box (Text1) to the form.

<P><LI>Add the following code to the Form_Load event:
<P>
<PRE>   Private Sub Form_Load()
      Data1.DatabaseName = "C:\VB\BIBLIO.MDB"
      Data1.RecordSource = "Authors"
      Data1.Refresh
      Data1.Recordset.AddNew
      Data1.Recordset.Update
      Data1.Recordset.Bookmark = Data1.Recordset.LastModified
      If IsNull(Data1.RecordSet("Author")) Then
         Text1.Text=""
      Else
         Text1.Text = Data1.Recordset("Author")
      End If
   End Sub

</PRE><P><LI>Run the program.
<P>
</OL><h3>The Ampersand (&amp;) Concatenation Method</h3>
 
<P>
The other method is to take advantage of Visual Basic's string
concatenation operator--the ampersand (&amp;). If one of the arguments in a
concatenation is valid and the other is Null, a concatenation will convert
the null value to "". You can take advantage of this behavior when
assigning values that might return Null. When concatenating a valid string
with a value that could return null, the result will always be a valid
string. Here's an example that uses string concatenation:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a data control (Data1) and a text box (Text1) to the form.

<P><LI>Add the following code to the Form_Load event:
<P>
<PRE>   Private Sub Form_Load()
      Data1.DatabaseName = "C:\VB\BIBLIO.MDB"
      Data1.RecordSource = "Authors"
      Data1.Refresh
      Data1.Recordset.AddNew
      Data1.Recordset.Update
      Data1.Recordset.Bookmark = Data1.Recordset.LastModified
      Text1.Text = "" &amp; Data1.Recordset("Author")
   End Sub

</PRE><P><LI>Run the program.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 Access vb4win vb416<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
