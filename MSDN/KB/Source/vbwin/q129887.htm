

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introducing the Powerful New Picture Object in VB 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129887">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbgraphic kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  In Visual Basic version 3.0, you had only the Picture property of the PictureBox control. Now, in Visual Basic version 4.0, you have a new Picture object that adds many capabilities. This article details some of these new capabilities.  MORE INFORM...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAYS,QAW6,QBS0,QBLP,QAB2,QBE7,QBE6,QAH4,QAB5,QA7O,QAY5,QAOE,QAMN,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Introducing the Powerful New Picture Object in VB 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129887</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Visual Basic version 3.0, you had only the Picture property of the
PictureBox control. Now, in Visual Basic version 4.0, you have a new
Picture object that adds many capabilities. This article details some of
these new capabilities.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Array of Picture Objects</h3>
 
<P>
You can use an array of Picture objects to keep a series of graphics in
memory without using a form that contains multiple PictureBox or Image
controls. For example, the following code loads a Picture object with a
bitmap and uses that bitmap to set the Picture property of a PictureBox
control:
<P>
<PRE>   Private Sub Command1_Click()
      Dim x As Picture
      Set x = LoadPicture("cars")
      Set Picture1.Picture = x
   End Sub

</PRE>Handle Property of Picture Object Differs from hDC Property of PictureBox
 
<P>
There is no direct relationship between a Picture.Handle and a
PictureBox.hDC. The hDC property of the PictureBox is the handle provided
by the operating system to the device context of the PictureBox control.
The Handle property of the Picture object is actually the handle of the GDI
object that is contained in the Picture object. If the Picture property
contains a bitmap, its an HBITMAP. If it contains an icon, then its an
HICON, or if it contains a metafile, then its an HMETAFILE.
<P>
<P><h3>Use the Picture Object Instead of the Windows API</h3>
 
<P>
There are lots of things you can do with an HBITMAP, an HICON, or an
HMETAFILE in the Windows API, but the Picture object already does most of
them for you. This means that you are better off using the Picture object
instead of the Windows API whenever possible.
<P>
There are now two completely different ways to paint graphics on a window
(or blit). You can use BitBlt or StretchBlt on the hDC of an object, or you
can use the PaintPicture method on the Picture Object or Property. If you
have an Image control, you can only use PaintPicture because Image controls
do not have an hDC. For example:
<P>
<PRE>   Private Sub Command1_Click()
      Dim x as Picture
      Set x = LoadPicture("cars.bmp")
      PaintPicture x, 0, 0
      PaintPicture Picture1.Picture, 0, 200
      PaintPicture Image1.Picture, 0, 500
   End Sub

</PRE>The link between the Picture object and the PictureBox control is the Image
property. You can draw something into the hDC of the PictureBox (with
BitBlt, Polygon, LineTo, or other API functions), and then assign its Image
property to the Picture property. This gives the PictureBox a bitmap with
the same content as the hDC. This is useful for operations such as
converting an icon or a metafile into a bitmap. However, you can only use
raster operation (ROP) codes with PaintPicture on bitmaps, so this
conversion is necessary for many blitting operations.
<P>
NOTE: For a list of Raster Operation (ROP) codes for use with PaintPicture,
see WIN32API.TXT in your VB\WINAPI directory.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbgraphic kbprb kbcode<BR>
KBSubCategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
