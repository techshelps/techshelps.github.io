

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Access Word for Windows Document Variables from VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117830">
<META NAME="KBModify" CONTENT="1997/03/12">
<META NAME="KBCreate" CONTENT="1994/07/10">
<META NAME="Keywords" CONTENT="IAPOLE kbinterop kbmacro kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article describes and demonstrates how to pass information from Word for Windows to Visual Basic using Word document variables. The example included in this article uses a WordBasic macro and a Visual Basic Sub procedure.  You can pass informa...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBS0,QAYL,QAH4,QA5F,QA01,QAY2,QDL9,QBWQ,QBWO,QBWN,QDO7,QA3P,QAMA,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Access Word for Windows Document Variables from VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117830</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 3.00
WINDOWS
kbinterop kbole kbprg kbcode kbmacro
<P>
 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Word for Windows, versions 6.0 and 6.0a
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes and demonstrates how to pass information from Word
for Windows to Visual Basic using Word document variables. The example
included in this article uses a WordBasic macro and a Visual Basic Sub
procedure.
<P>
You can pass information from Word to Visual Basic using any of the
following methods:

<UL><LI>Store the information in a text file.
<LI>Store the information in a Word AutoText entry.
<LI>Store the information in document variables.
<P>
</UL>This article demonstrates the document variable approach.
<P>
For more information about retrieving dialog box values in Word, query on
the following words in the Microsoft Knowledge Base:
<P>
<PRE>   ole and automation and retrieving and settings and dialog

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Using WordBasic (the Word for Windows macro language), you can retrieve
values stored in Word dialog boxes and use them in Visual Basic. The
example in this article uses OLE automation to launch a WordBasic macro
that retrieves all the values from the File Summary Info dialog box in Word
and displays them in a Visual Basic message box. (The File Summary Info
dialog box corresponds to the FileSummaryInfo statement in WordBasic.)
<P>
The WordBasic macro, named PassSummaryInfo, creates a ParamList document
variable, which is a comma-delimited string of all the document variables
to be extracted. Then, using OLE automation, Visual Basic extracts and
displays the document variables.
<P>
The advantage of using this method is that you can save the document
variables along with your document, where you can retrieve them at any
future time.
<P>
<P><h3>Visual Basic Sub Procedure</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code in the Form_Click event of the form:
<P>
<PRE>Sub File_Click ()
   'Dimension variables:
   Dim sReturn As String, Msg As String
   Dim ParamArray() As String, ParamElement As String
   Dim count As Integer, j As Integer
   Dim wb As Object

   'Run Word Macro Block:
   Macro$ = "PassSummaryInfo"
   On Error Resume Next
   Set wb = CreateObject("Word.basic")
   wb.FileNew
   wb.ToolsMacro Macro$, True

   If Err Then
      MsgBox "Err #" &amp; Str$(Err) &amp; ", " &amp; Error
   End If

   'Extract Document variables:
   sReturn = wb.[getdocumentvar$]("ParamList")
   If Err Then
      MsgBox "Err #" &amp; Str$(Err) &amp; ", " &amp; Error
      Exit Sub
   End If
   'Parse Document variable list from ParamList:
   Do While InStr(sReturn, ",")
      j = InStr(sReturn, ",")
      ParamElement = Left(sReturn, j - 1)
      sReturn = Mid$(sReturn, j + 1)
      ReDim Preserve ParamArray(count)
      ParamArray(count) = ParamElement
      count = count + 1
   Loop
   'Retrieve Last Document variable name:
   ReDim Preserve ParamArray(count)
   ParamArray(count) = sReturn
   'Extract values from document variables:
   For j = 0 To count
      Msg = Msg &amp; ParamArray(j) &amp; " = "
      Msg = Msg &amp; wb.[getdocumentvar$]((ParamArray(j))) &amp; Chr$(10)
   Next
   'wb.FileClose (2)
   If Err Then
      MsgBox "Err #" &amp; Str$(Err) &amp; ", " &amp; Error
   End If
   'Display values in message box:
   MsgBox Msg

End Sub

</PRE></OL><h3>WordBasic Macro</h3>
 
<P>
Create the following WordBasic macro in Word and name it PassSummaryInfo.
Store the macro in the global template (NORMAL.DOT).

<OL><P><LI>Start Word for Windows.

<P><LI>Create the macro by choosing Macro from the Tools menu.

<P><LI>Type in the name as PassSummaryInfo, and choose Create.

<P><LI>Add the following code to the macro. When you are done, choose Close
   from the File menu and respond Yes to the "save" dialog box.
<P>
<PRE>Sub MAIN
</PRE></OL>Dim dlg As FileSummaryInfo
GetCurValues dlg
ParamList$ = "Title,Subject,Author,KeyWords,Comments,FileName,Directory"
ParamList$ = ParamList$ + ",Template,CreateDate,LastSavedDate"
ParamList$ = ParamList$ + ",LastSavedBy,RevisionNumber,EditTime"
ParamList$ = ParamList$ + ",LastPrintedDate,NumPages,NumWords,NumChars"
ParamList$ = ParamList$ + ",NumParas,NumLines,FileSize"
SetDocumentVar "ParamList", ParamList$
SetDocumentVar "Title", dlg.Title
SetDocumentVar "Subject", dlg.Subject
SetDocumentVar "Author", dlg.Author
SetDocumentVar "Keywords", dlg.Keywords
SetDocumentVar "Comments", dlg.Comments
SetDocumentVar "FileName", dlg.FileName
SetDocumentVar "Directory", dlg.Directory
SetDocumentVar "Template", dlg.Template
SetDocumentVar "CreateDate", dlg.CreateDate
SetDocumentVar "LastSavedDate", dlg.LastSavedDate
SetDocumentVar "LastSavedBy", dlg.LastSavedBy
SetDocumentVar "RevisionNumber", dlg.RevisionNumber
SetDocumentVar "EditTime", dlg.EditTime
SetDocumentVar "LastPrintedDate", dlg.LastPrintedDate
SetDocumentVar "NumPages", dlg.NumPages
SetDocumentVar "NumWords", dlg.NumWords
SetDocumentVar "NumChars", dlg.NumChars
SetDocumentVar "NumParas", dlg.NumParas
SetDocumentVar "NumLines", dlg.NumLines
SetDocumentVar "FileSize", dlg.FileSize
<PRE>End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Word User's Guide," version 6.0, pages 216-217, 220-223, 749,
755
<P>
"Microsoft Word Developer's Kit," version 6.0, Microsoft Press, 1994,
pages 174-182, 446-447, 492, 679-680
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00 kbmacro wdk 6.00 6.00a<BR>
KBCategory: kbinterop kbole kbprg kbcode kbmacro<BR>
KBSubcategory: IAPOLE<BR>
Keywords            : IAPOLE kbinterop kbmacro kbprg<BR>
Technology          : kbole<BR>
Version             : 2.0 3.0<BR>
Platform            : WINDOWS<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
