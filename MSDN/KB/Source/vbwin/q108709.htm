

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Expected Expression Error: Dynamic Array Not OK in User-Type </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108709">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1993/12/16">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An  Expected: expression  error occurs within a Type statement in Visual Basic when you follow an array name with empty parentheses ().  You can use the Type ... End Type statement block to define your own data type using Basic's predefined data ty...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAP2,QAVQ,QAH4,QAPN,QAKC,QAB9,QA5F,QAMA,QAAP,QBC6,QAOX,QAB4,QBJZ,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Expected Expression Error: Dynamic Array Not OK in User-Type</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108709</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An "Expected: expression" error occurs within a Type statement in Visual
Basic when you follow an array name with empty parentheses ().
<P>
You can use the Type ... End Type statement block to define your own data
type using Basic's predefined data types as components. You can dimension
variables or arrays using that user-defined type.
<P>
<P><h2>CAUSE</h2>
 
<P>
Visual Basic interprets the empty parentheses () that follow a variable
name in the Type statement as a declaration of a dynamic array. Visual
Basic does not allow dynamic arrays to be declared within a user-defined
Type statement block.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Within the Type ... End Type statement block, parentheses that follow a
variable name must contain a number to indicate the number of elements
in a static array. Visual Basic allows Type statements to contain static
arrays but not dynamic arrays.
<P>
NOTE: Once you correctly define a user-defined type, you can dimension a
dynamic array of that type. See further below for an example.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>From the File menu, choose New Module.

<P><LI>Add the following code to the new module, MODULE1.BAS:
<P>
   Type newinfo
<P><PRE>      tarray() as string  'Gives "Expected: Expression" error on ()
      numstores As Long
</PRE>   End Type

<P><LI>Edit the line containing tarray(). Then select any other line. The
   automatic syntax checker in Visual Basic correctly highlights the () and
   gives the following error:
<P>
<P><PRE>      Expected: Expression
</PRE><P>
   Running the program by pressing the F5 key also correctly reports this
   syntax error.

<P><LI>To correct this programming error, add a number of array elements in the
   empty parentheses. For example, change tarray() to tarray(10). This
   changes the array from dynamic to static.
<P>
</OL>Visual Basic interprets the empty parentheses in tarray() in the Type
statement as a declaration of a dynamic array. Visual Basic does not
allow dynamic arrays to be declared within a user-defined Type ... End
Type statement block. The parentheses () must contain a number to
indicate the number of elements in a static array.
<P>
<P><h3>How to Make a Dynamic Array of User-Defined Type</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>From the File menu, choose New Module.

<P><LI>Add the following code to the new module, MODULE1.BAS:
<P>
   Type newinfo
<P><PRE>      tarray(20) As String  'Static array declared in user-defined type
      numstores As Long
</PRE>   End Type

<P><LI>Double-click Form1 to display the form's code window. Add the following
   to the form load event:
<P>
<PRE>   Sub Form_Load ()
      ' Use ReDim to declare or redimension a dynamic array:
      ReDim arrayx(20) As newinfo  'Make dynamic array of user-defined type
      arrayx(18).tarray(12) = "Ruby slippers"       ' Assign value.
      arrayx(18).numstores = 999                    ' Assign value.
      form1.Show  ' In load event, must Show form before Print can work.
      Print arrayx(18).tarray(12)   ' Print value.
      Print arrayx(18).numstores    ' Print value.
   End Sub

</PRE></OL>NOTE: You cannot change the number of elements in static arrays at run
time, but you can use the ReDim statement to change the number of elements
in dynamic arrays.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>Visual Basic version 3.0 for Windows, "Programmer's Guide," Chapter 7,
   "User-Defined Types (Structures)", pages 176-178. A user-defined type
   can contain an ordinary (fixed-size) array, but not a dynamic array.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
