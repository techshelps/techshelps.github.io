

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use OLE_TRISTATE Property Data Type </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177628">
<META NAME="KBModify" CONTENT="1997/12/08">
<META NAME="KBCreate" CONTENT="1997/12/04">
<META NAME="Keywords" CONTENT="vb5all vb5howto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An ActiveX control property can be any valid data type, such as long or string. Visual Basic provides some special data types for ActiveX control properties, such as OLE_TRISTATE. This article demonstrates how to use the OLE_TRISTATE data type.  MO...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QA7O,QABI,QAOE,QAMN,QAKD,QAB5,QABH,QAHV,QAFF,QAP2,QBWC,QAVX,QAVW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use OLE_TRISTATE Property Data Type</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177628</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An ActiveX control property can be any valid data type, such as long or
string. Visual Basic provides some special data types for ActiveX control
properties, such as OLE_TRISTATE. This article demonstrates how to use the
OLE_TRISTATE data type.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The OLE_TRISTATE is an enumerated data type with three possible values:
<P>
<PRE>   0 - Unchecked
   1 - Checked
   2 - Gray

</PRE>When you create a property of this type, Visual Basic provides a drop-down
list with the above three choices in the property window. Visual Basic will
not verify that the values assigned to the OLE_TRISTATE property are valid;
therefore, a program or user can assign a value beyond 2 or less than zero
to the property. This behavior should be considered in code.
<P>
The steps below describe how to create a simple ActiveX control with a
property of type OLE_TRISTATE.
<P>
<P><h3>Create ActiveX Control</h3>
 
<P>
The following steps describe how to create an ActiveX control with a
property named YesNoMaybe of type OLE_TRISTATE.

<OL><P><LI>In Visual Basic 5.0, create a new ActiveX Control project. UserControl1
   will be created by default.

<P><LI>From the Project menu, choose Project1 Properties. In the Project Name
   field, type "OleTriState" without the quotes. Click OK.

<P><LI>Create a Checkbox control on UserControl1 and set its Caption property
   to "TriState Value."

<P><LI>Add four CommandButtons to UserControl1. Set the CommandButton
   properties as follows;
<P>
   Command1
<P><PRE>      (Name):  cmdUnChecked
      Caption: No
</PRE><P>
   Command2
<P><PRE>      (Name):  cmdChecked
      Caption: Yes
</PRE><P>
   Command3
<P><PRE>      (Name):  cmdGray
      Caption: Maybe
</PRE><P>
   Command4
<P><PRE>      (Name):  cmdInvalid
      Caption: Invalid
</PRE>
<P><LI>Add the following code to Usercontrol1:
<P>
<P><PRE>      Option Explicit
      Private CurrentValue As OLE_TRISTATE
</PRE><P>
<P><PRE>      Public Property Get YesNoMaybe() As OLE_TRISTATE
<PRE></PRE>         'Retrieve the current value of the YesNoMaybe property

         YesNoMaybe = CurrentValue

      End Property

      Public Property Let YesNoMaybe(ByVal NewValue As OLE_TRISTATE)
         'Because Visual Basic does not check for valid values assigned to
         'an enumerated type, such as OLE_TRISTATE, you must first check
         'for values outside the range of 0-2.

         If NewValue &gt; 2 or NewValue &lt; 0 Then
            Msgbox "Invalid Value: Valid Values are 0, 1, or 2."
            Exit Property
         End If

         CurrentValue = NewValue
         PropertyChanged "YesNoMaybe"
      End Property

      Private Sub cmdUnChecked_Click()
         Me.YesNoMaybe = UnChecked
         Check1.Value = Me.YesNoMaybe
      End Sub

      Private Sub cmdChecked_Click()
         Me.YesNoMaybe = Checked
         Check1.Value = Me.YesNoMaybe
      End Sub

      Private Sub cmdGray_Click()
         Me.YesNoMaybe = Gray
         Check1.Value = Me.YesNoMaybe
      End Sub

      Private Sub cmdInvalid_Click()
         Me.YesNoMaybe = 3
         Check1.Value = Me.YesNoMaybe
      End Sub

</PRE><P><LI>Save the Project and compile the OleTriState.Ocx.
<P>
</OL><h3>Creating the Test Container</h3>
 
<P>
The test container is designed to test the OleTriState control created in
the steps above.

<OL><P><LI>Create a new Standard EXE project in Visual Basic 5.0. Form1 is created
   by default.

<P><LI>From the Project menu, choose Components. Select the OleTriState control
   created in the above steps.

<P><LI>Add an OleTriState control to Form1.

<P><LI>Run the Project.
<P>
</OL>When you run the Project you can click on each of the CommandButtons and
watch the corresponding behavior in the TriState Value check box. If you
select the Invalid CommandButton, a message box will appear and the value
will not be changed.
 
<PRE>Keywords          : vb5all vb5howto
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
