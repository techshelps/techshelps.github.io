

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Fill (Populate) a Grid with Database Data -- 4 Methods </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103437">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/08/24">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article gives you four separate examples demonstrating how to use Visual Basic to fill a grid control with data coming from database tables.   - The first example uses a data control to fill the grid.  - The second example uses a Dynaset objec...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAN0,QALX,QAM9,QBS0,QAIJ,QAMN,QBWS,QAPN,QAUJ,QAH4,QBXS,QA4H,QAFF,QARR,QA7O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Fill (Populate) a Grid with Database Data -- 4 Methods</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103437</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article gives you four separate examples demonstrating how to use
Visual Basic to fill a grid control with data coming from database tables.

<UL><LI>The first example uses a data control to fill the grid.
<LI>The second example uses a Dynaset object to fill the grid.
<LI>The third example uses a Snapshot object to fill the grid.
<LI>The fourth example uses a Table object to fill the grid.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Example One</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add one Data1 control, one Grid control, one Command button and two
   Text boxes to Form1.

<P><LI>Using the following table as a guide, set the properties of the
   controls you added in step 2.
<P>
<PRE>   Control Name   Property       New Value    Comment
   --------------------------------------------------------------------
   Data1          DatabaseName   BIBLIO.MDB   Provide the full path to
                                              this file, which
                                              should be in the Visual
                                              Basic directory -- C:\VB
   Data1          RecordSource   Authors
   Data1          Visible        False
   Text1          DataSource     Data1
   Text1          DataField      AU_ID
   Text1          Visible        False
   Text2          DataSource     Data1
   Text2          DataField      Author
   Text2          Visible        False
   Grid1          Cols           3
   Grid1          Rows           50
   Command1       Caption        Press to Load Grid

</PRE><P><LI>Place the following code in the Form1 Load event procedure:
<P>
<PRE>   Sub Form_Load ()
      'Initialize the colwidths for the grid and supply headers
      Show
      grid1.ColWidth(1) = 3000      'For Author name
      grid1.ColWidth(2) = 1000      'For Author ID
      grid1.Col = 1
      grid1.Row = 0
      grid1.Text = "Author Name"    'Header for Author Name
      grid1.Col = 2
      grid1.Row = 0
      grid1.Text = "Author ID"      'Header for Author ID
   End Sub

</PRE><P><LI>Place the following code in the Command1 Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      ' The routine to load data into grid
      Dim counter%
      counter% = 1                          'Start counter at Row=1
      Do Until data1.Recordset.EOF
         grid1.Col = 1
         grid1.Row = counter%
         grid1.Text = data1.Recordset(1)    'Load the Author Name
         grid1.Col = 2
         grid1.Row = counter%
         grid1.Text = data1.Recordset(0)    'Load the Author ID
         counter% = counter% + 1
         data1.Recordset.MoveNext
      Loop
      data1.Recordset.Close
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program. Click the Command1 button.
<P>
</OL><h3>Example Two</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add one Grid control and one Command button to Form1.

<P><LI>Using the following table as a guide, set the properties of the
   controls you added in step 2.
<P>
<PRE>   Control Name   Property       New Value
   -------------------------------------------------
   Grid1          Cols           3
   Grid1          Rows           50
   Command1       Caption        Press to Load Grid

</PRE><P><LI>Place the following code in the Form1 Load event procedure:
<P>
<PRE>   Sub Form_Load ()
      'Initialize the colwidths for the grid and supply headers
      Show
      grid1.ColWidth(1) = 3000      'For Author name
      grid1.ColWidth(2) = 1000      'For Author ID
      grid1.Col = 1
      grid1.Row = 0
      grid1.Text = "Author Name"    'Header for Author Name
      grid1.Col = 2
      grid1.Row = 0
      grid1.Text = "Author ID"      'Header for Author ID
   End Sub

</PRE><P><LI>Place the following code in the Command1 Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      ' The routine to load data into grid
      Dim db as Database
      Dim ds as Dynaset
      Dim counter%
      Set db = OpenDatabase("BIBLIO.MDB")
      Set ds = db.CreateDynaset("Authors")
      counter% = 1                  'Start counter at Row=1
      Do Until ds.EOF
         grid1.Col = 1
         grid1.Row = counter%
         grid1.Text = ds(1)         'Load the Author Name
         grid1.Col = 2
         grid1.Row = counter%
         grid1.Text = ds(0)         'Load the Author ID
         counter% = counter% + 1
         ds.MoveNext
      Loop
      ds.Close
      db.Close
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program. Click the Command1 button.
<P>
</OL><h3>Example Three</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add one Grid control and one Command button to Form1.

<P><LI>Using the following table as a guide, set the properties of the
   controls you added in step 2.
<P>
<PRE>   Control Name   Property       New Value
   ------------------------------------------------
   Grid1          Cols           3
   Grid1          Rows           50
   Command1       Caption        Press to Load Grid

</PRE><P><LI>Place the following code in the Form1 Load event procedure:
<P>
<PRE>   Sub Form_Load ()
      'Initialize the colwidths for the grid and supply headers
      Show
      grid1.ColWidth(1) = 3000      'For Author name
      grid1.ColWidth(2) = 1000      'For Author ID
      grid1.Col = 1
      grid1.Row = 0
      grid1.Text = "Author Name"    'Header for Author Name
      grid1.Col = 2
      grid1.Row = 0
      grid1.Text = "Author ID"      'Header for Author ID
   End Sub

</PRE><P><LI>Place the following code in the Command1 Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      ' The routine to load data into grid
      Dim db as Database
      Dim Snap1 as Snapshot
      Dim counter%
      Set db = OpenDatabase("BIBLIO.MDB")
      Set Snap1 = db.CreateSnapshot("Authors")
      counter% = 1                  'Start counter at Row=1
      Do Until Snap1.EOF
         grid1.Col = 1
         grid1.Row = counter%
         grid1.Text = Snap1(1)      'Load the Author Name
         grid1.Col = 2
         grid1.Row = counter%
         grid1.Text = Snap1(0)      'Load the Author ID
         counter% = counter% + 1
         Snap1.MoveNext
      Loop
      Snap1.Close
      db.Close
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program. Click the Command1 button.
<P>
</OL><h3>Example Four</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add one Grid control and one Command button to Form1.

<P><LI>Using the following table as a guide, set the properties of the
   controls you added in step 2.
<P>
<PRE>   Control Name   Property       New Value
   ------------------------------------------------
   Grid1          Cols           3
   Grid1          Rows           50
   Command1       Caption        Press to Load Grid

</PRE><P><LI>Place the following code in the Form1 Load event procedure:
<P>
<PRE>   Sub Form_Load ()
      'Initialize the colwidths for the grid and supply headers
      Show
      grid1.ColWidth(1) = 3000      'For Author name
      grid1.ColWidth(2) = 1000      'For Author ID
      grid1.Col = 1
      grid1.Row = 0
      grid1.Text = "Author Name"    'Header for Author Name
      grid1.Col = 2
      grid1.Row = 0
      grid1.Text = "Author ID"      'Header for Author ID
   End Sub

</PRE><P><LI>Place the following code in the Command1 Click event procedure:
<P>
<PRE>   Sub Command1_Click ()
      ' The routine to load data into grid
      Dim db as Database
      Dim t as Table
      Dim counter%
      Set db = OpenDatabase("BIBLIO.MDB")
      Set t = db.Opentable("Authors")
      counter% = 1         'Start counter at Row=1
      Do Until t.EOF
         grid1.Col = 1
         grid1.Row = counter%
         grid1.Text = t(1)          'Load the Author Name
         grid1.Col = 2
         grid1.Row = counter%
         grid1.Text = t(0)          'Load the Author ID
         counter% = counter% + 1
         t.MoveNext
      Loop
      t.Close
      db.Close
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program. Click the Command1 button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
