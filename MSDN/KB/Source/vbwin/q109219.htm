

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to List the Fields in a Table &amp; the Tables in a Database </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109219">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/12/28">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Below are two examples showing how to list all the fields in a table and all the tables in a database.   - Example One shows how to list all the fields in a database table by    using the Fields collection of a table's TableDef object. It also show...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA7N,QA7O,QAUJ,QAH4,QBVR,QAPN,QBS0,QAZV,QA2R,QAE1,QARM,QBXS,QAIJ,QBWS,QAP2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to List the Fields in a Table &amp; the Tables in a Database</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109219</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Below are two examples showing how to list all the fields in a table and
all the tables in a database.

<UL><LI>Example One shows how to list all the fields in a database table by
   using the Fields collection of a table's TableDef object. It also shows
   how to list the names of all tables in a database.

<LI>Example Two shows how to list all the fields in a database table using
   the ListFields method. The ListFields method creates a Snapshot with one
   record for each field in a specified recordset.
<P>
</UL>The technique used in Example One is more efficient than Example Two.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Example One: How to List the Fields in a Table Using the Fields Collection</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add two list boxes to Form1.

<P><LI>Double-click the form to open the code window. Add the following code to
   the Form Load event:
<P>
<PRE>   Sub Form_Load ()

      Set MyDb = OpenDatabase("BIBLIO.MDB")
      ' Set AllTableDefs to definitions of all tables in the database:
      Set AllTableDefs = MyDb.TableDefs
      ' Display names of all tables in database:
      For j = 0 To AllTableDefs.Count - 1
         List1.AddItem AllTableDefs(j).Name
      Next

   End Sub

</PRE><P><LI>Double-click the List1 list box and enter the following code in its
   Click event:
<P>
<PRE>   Sub List1_Click ()

      ' Delete any existing entries in List2 box:
       Do While list2.ListCount &gt; 0
          list2.RemoveItem 0
       Loop

      ' Get the definition of the single table currently selected in List1:
      Set SingleTableDef = MyDb(List1.List(List1.ListIndex))
      ' Display the properties of each field in the table:
      For j = 0 To SingleTableDef.Fields.Count - 1
         list2.AddItem "Field item number " &amp; Val(j) &amp; ":"

         ' Display the name of the field in the table selected in List1:
         list2.AddItem SingleTableDef.Fields(j).Name
         ' or use the following since Fields are the default collection:
         ' List2.AddItem SingleTableDef(j).Name

         list2.AddItem SingleTableDef.Fields(j).Size  ' Size of field.
         list2.AddItem SingleTableDef.Fields(j).Type  ' Type of field.
         ' If field is an index, list the name of the index:
         If j &lt;= SingleTableDef.Indexes.Count - 1 Then
            list2.AddItem "Index name: " &amp; SingleTableDef.Indexes(j).Name
         End If

         ' The Value property is only valid if part of a recordset:
         ' list2.AddItem SingleTableDef.Fields(i).Value

         ' The other 5 properties are valid for a field of TableDef object:
         list2.AddItem SingleTableDef.Fields(j).OrdinalPosition
         list2.AddItem SingleTableDef.Fields(j).CollatingOrder
         list2.AddItem SingleTableDef.Fields(j).Attributes
         list2.AddItem SingleTableDef.Fields(j).SourceField
         list2.AddItem SingleTableDef.Fields(j).SourceTable
         list2.AddItem " "
      Next

   End Sub

</PRE><P><LI>From the File menu, choose New Module. Then enter the following code in
   the General Declarations section:
<P>
   Global MyDb As Database
   Global SingleTableDef As TableDef
   Global AllTableDefs As TableDefs

<P><LI>Start the program. Click any table name in the first list box. In the
   second list box, the program displays all the fields and field
   properties for that table. Close the form to end the program.
   NOTE: Some MSys* tables (such as MSysACEs) have no fields.
<P>
</OL><h3>Example Two: How to List the Fields in a Table Using the ListFields Method</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a list box to Form1. Size the list box to fill all of Form1.

<P><LI>Double-click the form to open the code window. Add the following code to
   the Form Load event:
<P>
<PRE>   Sub Form_Load ()
   Dim ListSet As Snapshot, MyDB As database, MyTable As table
   Set MyDB = OpenDatabase("BIBLIO.MDB")
   Set MyTable = MyDB.OpenTable("Publishers")  ' Open Table.
   Set ListSet = MyTable.ListFields()  ' Put field info in ListSet.
   MyTable.Close           ' Close Table.
   Do While Not ListSet.EOF
      list1.AddItem "Name: " &amp; ListSet("Name")
      list1.AddItem "type: " &amp; ListSet("Type")
      list1.AddItem "size: " &amp; ListSet("Size")
      list1.AddItem "Attributes: " &amp; ListSet("Attributes")
      list1.AddItem "SourceTable: " &amp; ListSet("SourceTable")
      list1.AddItem "SourceField: " &amp; ListSet("SourceField")
      list1.AddItem " "
      ListSet.MoveNext
   Loop
   End Sub

   The above program uses the BIBLIO.MDB database that ships with Visual
   Basic version 3.0

</PRE><P><LI>Start the program (or press the F5 key). Close the form to end the
   program.
<P>
</OL>The above program lists the following field structure for the Publishers
table in the BIBLIO.MDB database:
<P>
Name: PubID
type: 4
size: 4
Attributes: 33
SourceTable: Publishers
SourceField: PubID
<P>
Name: Name
type: 10
size: 50
Attributes: 32
SourceTable: Publishers
SourceField: Name
<P>
Name: Company Name
type: 10
size: 255
Attributes: 32
SourceTable: Publishers
SourceField: Company Name
<P>
Name: Address
type: 10
size: 50
Attributes: 32
SourceTable: Publishers
SourceField: Address
<P>
Name: City
type: 10
size: 20
Attributes: 32
SourceTable: Publishers
SourceField: City
<P>
Name: State
type: 10
size: 10
Attributes: 32
SourceTable: Publishers
SourceField: State
<P>
Name: Zip
type: 10
size: 15
Attributes: 32
SourceTable: Publishers
SourceField: Zip
<P>
Name: Telephone
type: 10
size: 15
Attributes: 32
SourceTable: Publishers
SourceField: Telephone
<P>
Name: Fax
type: 10
size: 15
Attributes: 32
SourceTable: Publishers
SourceField: Fax
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
