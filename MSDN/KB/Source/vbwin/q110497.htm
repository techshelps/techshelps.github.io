

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Seek and MoveNext to Find a Group/Range of Records </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110497">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1994/01/24">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Seek method can search for a value only in an indexed field. Seek can find only one record at a time. The Seek method alone cannot find all duplicate field values.  After doing a Seek, to find a group of records that have indexed field values t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAPN,QA28,QATJ,QACI,QAKD,QDMH,QA7O,QA7N,QAIJ,QAHH,QAGB,QAH4,QABO,QALQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Seek and MoveNext to Find a Group/Range of Records</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110497</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Seek method can search for a value only in an indexed field. Seek can
find only one record at a time. The Seek method alone cannot find all
duplicate field values.
<P>
After doing a Seek, to find a group of records that have indexed field
values that are duplicates or within a given range, you must do a series of
move methods (MoveNext or MovePrevious). After each move method in a loop,
you must check the indexed field value until your criteria is exceeded. The
indexed field values are automatically in alphabetical or numerical order.
<P>
The sample program below uses a Seek method, then uses MoveNext in a loop
to roughly emulate the FindNext method.
<P>
NOTE: FindNext applies only to Dynasets or Snapshots. The Seek method
applies only to Table object variables.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Seek method is very fast, but doesn't support SQL or wildcard searches
to find groups of articles. Seek is mainly useful for finding one, single
record that matches or exceeds a given value.
<P>
You can use one of the following methods instead of the Seek method to find
a group of records:

<UL><LI>CreateDynaset method.
<LI>CreateSnapshot method.
<LI>Find methods (FindFirst, FindLast, FindNext, and FindPrevious), which
   work only on a Dynaset or Snapshot.
<LI>Move methods (MoveFirst, MoveLast, MoveNext, MovePrevious), which work
   on a Table object variable, Dynaset, or Snapshot.
<P>
</UL>The Seek method requires you to first set the current index with the Index
property. This orders the records alphabetically or numerically.
<P>
Seek can use only the following comparison operators: &gt;, &gt;=, &lt;=, &lt;, =, and
&lt;&gt;. When the comparison is =, &gt;=, &gt;, or &lt;&gt;, Seek starts at the beginning of
the index and searches forward. When the comparison is &lt;= or &lt;, Seek starts
at the end of the index and searches backward. Thus, if three or more
records have duplicate values in the current index, the Seek method cannot
locate the middle records. Seek can locate only the first or last of those
records, depending upon the comparison operator used. A move method is
required to locate those middle records. A MoveNext always moves forward
one record from the current record found by a Seek, independent of the
comparison operator that Seek used. MovePrevious moves one record previous.
<P>
<P><h3>Example: How to Use Seek and MoveNext to Find a Group of Records</h3>
 
<P>
The following sample program finds all records for which the PubID field is
2 in the BIBLIO.MDB database (9 records). The program uses one Seek to find
the first record for which PubID is 2. The NoMatch property is False if the
first match is found. From there onwards, the program uses MoveNext and
tests MyTable!PubID in a loop to find all remaining records where PubID is
2. You could also modify this program to find a range of PubID field
values.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following to the Form Load event code:
<P>
<PRE>   Sub Form_Load ()

   form1.Show   ' In Load event, must Show form to make Print visible.
   Dim MyDB As Database, MyTable As Table, testval As Long
   ' Several duplicates exist in BIBLIO.MDB for PubID = 2 in Titles table.
   ' testval is the key value for which you want to Seek all duplicates:
   testval = 2
   Set MyDB = OpenDatabase("BIBLIO.MDB")      ' Open a database.
   Set MyTable = MyDB.OpenTable("Titles") ' Open a table.
   ' Sort the Titles table by the PubID indexed field, which is designed
   ' with duplicates OK:

   MyTable.Index = "PubID"
   MyTable.Seek "=", testval  ' Seek a record with PubID key = testval.
   If MyTable.NoMatch Then
      MsgBox "Match for " &amp; testval &amp; " was not found"
   Else
      Do
         Print MyTable!PubID &amp; ": " &amp; MyTable!Title
         x = MsgBox("Match was found. PubID = " &amp; MyTable!PubID &amp; ": ", 1)
         If x = 2 Then End  ' End if user clicks Cancel on message box.
         MyTable.MoveNext   ' Move to next record.
         If MyTable!PubID &lt;&gt; testval Then Exit Do  'Stop when past testval.
      Loop
   End If

   End Sub

</PRE><P><LI>Start the program (or press F5). Click OK multiple times to see all
   record titles where PubID is 2. Choose Cancel if you want to abort the
   MoveNext loop. Close the form to end the program.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
