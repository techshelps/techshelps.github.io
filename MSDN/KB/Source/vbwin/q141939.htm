

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Create an OLE Server to Implement "Thunking" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141939">
<META NAME="KBModify" CONTENT="1998/01/21">
<META NAME="KBCreate" CONTENT="1996/01/02">
<META NAME="Keywords" CONTENT="IAPOLE VB4ALL VB4WIN kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An out-of-process OLE server (that is, an EXE) may be called by either a 16- bit or 32-bit program. Hence, it can be used as an interface between a 16- bit program that requires the services of a 32-bit DLL, or a 32-bit program that calls functions...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAY5,QA9Q,QBE7,QBE6,QBV8,QATX,QAB9,QAGI,QACI,QAHH,QAFF,QAMA,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Create an OLE Server to Implement "Thunking"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 21, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141939</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An out-of-process OLE server (that is, an EXE) may be called by either a 16-
bit or 32-bit program. Hence, it can be used as an interface between a 16-
bit program that requires the services of a 32-bit DLL, or a 32-bit program
that calls functions inside a 16-bit application/DLL. This permits the OLE
system DLLs to handle any necessary "thunking" of the 16-bit to 32-bit or
32-bit to 16-bit translations.
<P>
This article demonstrates how the functions contained in a 16-bit DLL can
be called from a 32-bit program using an OLE server as an intermediary.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A key goal of OLE is to establish a standardized way for objects to be
created and to communicate with one another. This communication can take
place between applications even if they are written in different languages.
Because OLE defines the interface, it handles the communication between the
two objects. Please see the REFERENCES section below for more details.
<P>
In particular, one useful corollary of the standardized interface that OLE
demands is that an out-of-process OLE server can act as an intermediary to
perform the "thunking" required if a 32-bit application needs to call a
function contained in a 16-bit DLL and vice versa.
<P>
<P><h3>Example: A 32-Bit Program Calling a 16-Bit DLL</h3>
 
<P>
This example creates a 16-bit OLE server to wrap the functions contained in
a 16-bit DLL. In this example, the Mbf2ieee.dll is used. You must have this
DLL in order to be able to complete this example.
<P>
This DLL converts floating point numbers in the earlier Microsoft Binary
Format (MBF) into IEEE format.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q113439.htm">Q113439</A></B>
   TITLE     : VB3PRB: Converting MBF to IEEE in Visual Basic for Windows

</PRE>The file can be downloaded from the Microsoft Software Library as
Mbf2ieee.exe. This DLL is an example of a 16-bit DLL that is difficult to
update to 32-bit because the DLL calls two C run-time functions that have
not been ported over to 32-bit.
<P>
Use the steps below to create the OLE server:

<OL><P><LI>Start a new Visual Basic project in Visual Basic 16-Bit Edition.

<P><LI>Add a class module to the project by clicking the Insert/Class Module
   menu option.

<P><LI>Bring up the Property window for the class module and modify the
   following properties:
<P>
<PRE>      Instancing:   2-Creatable MultiUse
      Name:         OLE2MBF2IEEE
      Public:       True

</PRE><P><LI>In the new class module, place the following code in the General
   Declarations section:
<P>
<P><PRE>      Private Declare Function cvs Lib "mbf2ieee.dll" _
      (x As String) As Single
      Private Declare Function cvd Lib "mbf2ieee.dll" _
      (x As String) As Double
      Private Declare Function mks Lib "mbf2ieee.dll" _
      (x As Single) As String
      Private Declare Function mkd Lib "mbf2ieee.dll" _
      (x As Double) As String
</PRE><P>
<P><PRE>      Public Function CvsOle(x As String) As Single
<PRE></PRE>          CvsOle = cvs(x)
      End Function

      Public Function cvdole(x As String) As Double
          cvdole = cvd(x)
      End Function

      Public Function mksole(x As Single) As String
          mksole = mks(x)
      End Function

      Public Function mkdole(x As Double) As String
          mkdole = mkd(x)
      End Function

</PRE><P><LI>Add a module to the project by clicking the Insert/Module menu option.
   Add a single, empty subroutine to the code module:
<P>
<PRE>      Sub Main()
      End Sub

   This is required because the OLE server must either start in a "Sub
   Main" subroutine or in a form. Because a form is not required for this
   OLE server, including it would not be a good use of resources.

</PRE><P><LI>Add a name for the project. On the Tools/Options menu, click the Project
   tab, and enter the following settings:
<P>
<PRE>      Startup Form:   Sub Main()
      Project Name:   MBFIEEEServer

   Also, in this same tab, select the OLE Server radio button in the
   StartMode frame.

</PRE><P><LI>Build the server. On the File menu, click Make EXE, name the executable
   Mbfole.exe, and place the EXE into the \vb directory.

<P><LI>Exit from Visual Basic 16-bit edition.
<P>
</OL>Now, it is a simple matter to make a client that makes uses of the server.

<OL><P><LI>Create a new project in Visual Basic, using any 32-bit edition. Form1 is
   created by default.

<P><LI>On the Tools menu, click References and place an x next to the
   MBFIEEEServer option. Click Okay to close the dialog box.

<P><LI>In the Form_Click event for the Form, place the following code:
<P>
<P><PRE>      Private Sub Form_Click()
<PRE></PRE>          Dim fInput As Single
          Dim CVSString As String
          Dim MBF as New OLE2MBF2IEEE
          Dim newresult As String

          fInput = 1234.6789  'IEEE format

      'Convert from Single to string
          newresult = MBF.mksole(fInput)

      'Convert from String to single
          CVSString = MBF.CvsOle(newresult)
          MsgBox CStr(CVSString)
      End Sub

</PRE></OL>Run the program by pressing the F5 key. Click on Form1, and a message box
will appear with the original number dimensioned in the routine. The OLE
server has successfully called the Cvs and Mks functions.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft OLE Today and Tomorrow: Technology Overview," created December,
1993. Found under Backgrounders and White Papers, Operating System
Extensions, Microsoft Developer Network CD-ROM.
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q140520.htm">Q140520</A></B>
   TITLE     : PRB: Converting MBF to IEEE in Visual Basic for Windows
</PRE> 
<PRE>Keywords          : IAPOLE VB4ALL VB4WIN kbhowto
Technology        : kbole
Version           : 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 21, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
