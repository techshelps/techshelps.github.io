

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Errors When Referencing Oracle Synonym or Table Names </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115713">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/06/01">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The following two errors may occur when you use the CreateDynaset command against an Oracle database:  1. Error 3024: Couldn't find file            .mdb     This error occurs when the Microsoft Access database engine's SQL parser    in Visual Basic...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDKY,QAZV,QAB4,QAFO,QA94,QAUJ,QAN0,QAH5,QAAP,QA39,QALH,QBS0,QARR,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Errors When Referencing Oracle Synonym or Table Names</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115713</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows,
<PRE>  version 3.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The following two errors may occur when you use the CreateDynaset
command against an Oracle database:

<OL><P><LI>Error 3024: Couldn't find file &lt;ownername&gt;.mdb
<P>
   This error occurs when the Microsoft Access database engine's SQL parser
   in Visual Basic version 3.0 cannot handle the Oracle-style reference
   of &lt;ownername&gt;.&lt;tablename or synonym&gt; within an SQL statement:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("Select * From &lt;ownername&gt;.&lt;tablename&gt;")
</PRE>
<P><LI>Error 3078: Couldn't find input table or query &lt;ownername&gt;.&lt;tablename&gt;
<P>
   This error occurs when only a table name is provided and duplicate
   tables exist or synonyms with different owners exist. In this case, the
   Microsoft Access database engine resolves the ambiguous reference by
   picking one of the duplicate table name owners based on alphabetical
   order:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("Select * From ,&lt;tablename&gt;")
</PRE><P>
</OL><h2>RESOLUTION</h2>
 
<P>
Use the following techniques to prevent the error messages:

<UL><LI>Use DB_SQLPASSTHROUGH when creating the Dynaset.

<LI>Attach the Oracle table to a Microsoft Access database.

<LI>Remove all duplicate tables and synonyms from the Oracle database.
<P>
</UL>Please see the More Information section below for details.
<P>
<P><h2>STATUS</h2>
 
<P>
The Microsoft Access database engine is not currently designed to
handle Oracle-style references. The current design is under review
and may be modified in future versions of the database engine.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Four Example Scenarios</h3>
 
<P>
The following four scenarios demonstrate how the Microsoft Access
database engine in Visual Basic version 3.0 responds when you
use the CreateDynaset command against an Oracle database.

<OL><P><LI>You are the owner of the table and there are no duplicate tables or
   synonyms owned by you or any other user. You issue this command:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("&lt;tablename&gt;")
</PRE><P>
   The database engine resolves this ambiguous reference by assuming you
   are the owner, which is a reasonable assumption given that there are
   no other owners. This works without error.

<P><LI>You are the owner of the table and there are no duplicate tables or
   synonyms owned by you or any other user. You issue this command:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("&lt;ownername&gt;.&lt;tablename&gt;")
</PRE><P>
   The database engine's SQL parser is unable to resolve this reference.
   It interprets &lt;ownername&gt; to be a database name, whether you specify
   your ownername or someone else's. This results in error 3024:
<P>
<P><PRE>      Couldn't find file &lt;ownername&gt;.mdb
</PRE>
<P><LI>You are the owner of the table and there's a duplicate table name in
   the database that has another owner. You issue this command:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("&lt;tablename&gt;")
</PRE><P>
   The database engine resolves this ambiguous reference alphabetically
   by selecting the first owner of a table with the given table name. If
   the other owner happens to be first alphabetically, then you receive
   error 3078:
<P>
<P><PRE>      Couldn't find input table or query "&lt;ownername&gt;.&lt;tablename&gt;"
</PRE><P>
   where &lt;ownername&gt; is the name of the other owner.

<P><LI>You are the owner of the table and there's a duplicate table name in
   the database that has another owner. You issue this command:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("&lt;ownername&gt;.&lt;tablename&gt;")
</PRE><P>
   The database engine's SQL parser is unable to resolve this reference.
   It interprets &lt;ownername&gt; to be a database name. This results in
   error 3024:
<P>
<P><PRE>      Couldn't find file &lt;ownername&gt;.mdb
</PRE><P>
</OL><h3>Detailed Workarounds</h3>
 
<P>
Here are detailed suggestions to help you avoid the errors caused by
the Microsoft Access database engine's inability to resolve your
Oracle-style references:

<OL><P><LI>When using a SQL statement against an Oracle database that contains
   duplicate tables, use the CreateDynaset Method with the
   DB_SQLPASSTHROUGH option (DB_SQLPASSTHROUGH = 64) as in this example:
<P>
<P><PRE>      Set DS = DB.CreateDynaset("&lt;ownername&gt;.&lt;tablename&gt;", 64)
</PRE><P>
   This passes the SQL statement directly to the ODBC backend processor,
   bypassing the Microsoft Access database engine. The only drawback
   to this method is that the resulting dynaset will note be updatable.

<P><LI>Attach the Oracle table to a Microsoft Access database, and then
   reference it as a Microsoft Access table as in this example:
<P>
   Dim DB as Database
   Dim DS as Dynaset
   Dim TD as New TableDef
<P>
   Set DB = OpenDatabase("C:\VB\BIBLIO.MDB") ' Any temporary Microsoft
<PRE>                                             ' Access database.
   TD.Name = "&lt;newtablename&gt;" ' New table name in the Access database.
   TD.SourceTableName = "&lt;ownername&gt;.&lt;tablename&gt;"
   TD.Connect = "ODBC;" ' A longer string can be used.
   DB.TableDefs.Append TD  ' Append the Oracle table.

   ' Create a dynaset based on the attached table:
   Set DS = DB.CreateDynaset("Select * from &lt;newtablename&gt;")
          .
   ' Any operations you perform on the attached table are
   ' applied to the actual table in the Oracle database.
   ' But you cannot use the OpenTable Method on an attached table.

   DB.TableDefs.Delete TD  ' Remove the attached table when finished.

   Instead of attaching and removing Oracle tables by using a temporary
   Microsoft Access database, you can attach all the Oracle tables to a
   permanent Microsoft Access database and reference that instead.

</PRE><P><LI>Remove all duplicate table names and synonyms from your Oracle database
   and reference only the table name in the SQL statement (see scenario 1).
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbinterop kbprg kbprb<BR>
KBSubcategory: APrgDataODBC<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
