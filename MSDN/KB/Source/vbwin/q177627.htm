

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use the OLE_OPTEXCLUSIVE Property Data Type </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177627">
<META NAME="KBModify" CONTENT="1997/12/08">
<META NAME="KBCreate" CONTENT="1997/12/04">
<META NAME="Keywords" CONTENT="vb5all vb5howto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  An ActiveX control property can be any valid data type, such as long or string. Visual Basic provides some special data types for ActiveX control properties, such as OLE_OPTEXCLUSIVE. This article demonstrates how to use the OLE_OPTEXCLUSIVE data t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBXS,QA7O,QAB5,QAOE,QAMN,QAKD,QAHV,QAG9,QBS0,QABA,QAW6,QAVX,QAVW,QBWC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use the OLE_OPTEXCLUSIVE Property Data Type</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177627</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An ActiveX control property can be any valid data type, such as long or
string. Visual Basic provides some special data types for ActiveX control
properties, such as OLE_OPTEXCLUSIVE. This article demonstrates how to use
the OLE_OPTEXCLUSIVE data type.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The OLE_OPTEXCLUSIVE data type is internally represented as a Boolean, with
valid values True and False. However, what makes OLE_OPTEXCLUSIVE unique is
that if several controls of this data type are placed within a container
(such as a Frame or Form), only one member of the group will be capable of
being set to True, all others will be set to False.
<P>
For example, you could use an OLE_OPTEXCLUSIVE control if you created a
option group with three options (Paper, Scissors, and Rock), where users
can only select one of the three choices. Basically, when controls of this
type are placed into a container, they are expected to behave as an option
button; no more than one control can have its value set to True at any
given time.
<P>
The steps below describe how to create a simple ActiveX control of type
OLE_OPTEXCLUSIVE.
<P>
<P><h3>Create ActiveX Control</h3>
 
<P>
The following steps describe how to create an ActiveX control whose default
value will be of type OLE_OPTEXCLUSIVE. If its default value is set to
True, its color turns green. If its default value is set to False, its
color turns red.

<OL><P><LI>In Visual Basic 5.0, create a new ActiveX Control project.

<P><LI>From the Project menu, choose Project1 Properties. In the Project Name
   field, type "OptExclusiveControl" without the quotes. Click OK.

<P><LI>Set the UserControl BackColor property to red (&amp;H000000FF&amp;); this will
   be the default color for the UserControl.

<P><LI>View the code for the UserControl and copy the following code:
<P>
<P><PRE>      Option Explicit
      Private CurrentValue As OLE_OPTEXCLUSIVE
</PRE><P>
<P><PRE>      Private Sub UserControl_InitProperties()
<PRE></PRE>         'Set the initial value for the Value property to False...much
         'like an option button would set its initial value to False
         '(unselected).

         Me.Value = False

      End Sub

      Private Sub UserControl_Click()
         'When the User Clicks on the control, the Value property of the
         'control will be set to True, just as an option button
         'sets its value to True when it is clicked.

         Me.Value = True

      End Sub

      Public Property Get Value() As OLE_OPTEXCLUSIVE
         'Retrieve the current value of the Value property

         Value = CurrentValue

      End Property

      Public Property Let Value(ByVal NewValue As OLE_OPTEXCLUSIVE)
         'If the NewValue is True, the UserControls color is set
         'to green and all other instances of the control within
         'a container are set to False automatically.
         '
         'If NewValue is False, the UserControls color is set to red.

         If NewValue = True Then
            UserControl.BackColor = &amp;HFF00&amp;   'Green
            CurrentValue = NewValue
            PropertyChanged "Value"   'Notifies the container that the
                                      'property has changed. If you exclude
                                      'this line of code, the ActiveX
                                      'control will not behave as an
                                      'option group because there is no
                                      'mechanism to inform the container
                                      'that the property has changed.
            Else
               UserControl.BackColor = &amp;HFF&amp;     'Red
               CurrentValue = NewValue
               PropertyChanged "Value"
            End If
         End Property

</PRE><P><LI>From the Tools menu, choose Procedure Attributes.

<P><LI>In the Procedure Attributes window, be sure the Value property is
   selected in the Name combo box, and then click Advanced.

<P><LI>For Procedure ID, choose (Default) from the drop -own list. Only one
   property procedure can be set to the default. This becomes the default
   property for your ActiveX Control. If you do not set the
   OLE_OPTEXCLUSIVE property to the default value, it will not function as
   expected. In this example, the property was named "Value" for
   simplicity. However, you can set any named property procedure as your
   default.

<P><LI>Save the Project and compile the OptExclusiveControl.Ocx.
<P>
   You now have an ActiveX Control whose data type is OLE_OPTEXCLUSIVE. The
   next set of steps describe how to build a container to test the control.
<P>
</OL><h3>Creating the Test Container</h3>
 
<P>
The test container is designed to test the OptExclusiveControl created in
the steps above.

<OL><P><LI>Create a new Standard EXE project in Visual Basic 5.0. Form1 is created
   by default.

<P><LI>From the Project menu, choose Components. Select the OptExclusiveControl
   created in the above steps.

<P><LI>Add a Frame control to Form1.

<P><LI>Add three OptExclusiveControls to the Frame.

<P><LI>Run the Project.
<P>
   When the project is running, Form1 will display the frame with three of
   the OptExlcusiveControls on it. Clicking on a OptExclusiveControl turns
   its color green. As you click on the other OptExlcusiveControls, notice
   that only one OptExclusiveControl can be green at any given time.
<P>
</OL>NOTE: OLE_OPTEXCLUSIVE controls behave as such within a container. The
example above uses a frame to demonstrate the OLE_OPTEXCLUSIVE behavior.
However, the form itself could server as the container.
 
<PRE>Keywords          : vb5all vb5howto
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
