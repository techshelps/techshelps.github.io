

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Mimic HIWORD, LOWORD, HIBYTE, LOBYTE C Macros in VB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112651">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/03/15">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic does not provide any bitwise functions for pulling apart numeric values. In C, there are macros (HIBYTE, LOBYTE, HIWORD, and LOWORD) to separate parts of long integers into two parts, or separate integers into two parts. This article s...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QA4Q,QAY5,QAOX,QAKD,QANF,QAB9,QBV8,QAUD,QBFY,QAY4,QAYZ,QAGI,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Mimic HIWORD, LOWORD, HIBYTE, LOBYTE C Macros in VB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112651</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic
<PRE>  programming system for Windows, versions 2.0 and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic does not provide any bitwise functions for pulling apart
numeric values. In C, there are macros (HIBYTE, LOBYTE, HIWORD, and
LOWORD) to separate parts of long integers into two parts, or separate
integers into two parts. This article shows by example how to do the
same thing in a Visual Basic program.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The HIBYTE, LOBYTE, HIWORD, and LOWORD macros are defined in C in the
WINDOWS.H file. The HIBYTE and LOBYTE macros are used to retrieve the
high-order or low-order byte of the integer passed to them. The HIWORD
and LOWORD macros retrieve the high-order or low-order word from a
long integer value passed to them.
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
This example uses Visual Basic to mimic the HIBYTE, LOBYTE, HIWORD,
and LOWORD macros

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add two command buttons (Command1 and Command2) to Form1.

<P><LI>Add the following code to the Comamnd1_Click event:
<P>
<PRE>   Sub Command1_Click ()
      Dim wParam As Integer
      Dim LOBYTE As Integer
      Dim HIBYTE As Integer
      ' Set wParam to a value:
      wParam = &amp;H77FF
      ' Make call to function:
      ret = gethilobyte(wParam, LOBYTE, HIBYTE)
      ' Print out return values:
      Print LOBYTE, HIBYTE
   End Sub

</PRE><P><LI>Add the following code to the Comamnd2_Click event:
<P>
<PRE>   Sub Command2_Click ()
      Dim lParam As Long
      Dim LOWORD As Long
      Dim HIWORD As Long
      ' Set lParam to a value:
      lParam = &amp;H7777FFFF
      ' Make call to function:
      ret = gethiloword(lParam, LOWORD, HIWORD)
      ' Print out return values:
      Print LOWORD, HIWORD
   End Sub

</PRE><P><LI>Add the following code to the general declarations section of Form1:
<P>
<PRE>   ' Enter the following Function statement as one, single line:
   Function gethilobyte(wparam as integer, LOBYTE as integer,
      HIBYTE as integer)
      ' This is the LOBYTE of the wParam:
      LOBYTE = wParam And  &amp;HFF&amp;
      ' This is the HIBYTE of the wParam:
      HIBYTE = wParam  \  &amp;H100  And  &amp;HFF&amp;
      gethilobyte = 1
   End Function

</PRE><P><LI>Add the following code to the general declarations section of Form1:
<P>
   Function gethiloword(lparam as long, LOWORD as long, HIWORD as long)
<P><PRE>      ' This is the LOWORD of the lParam:
      LOWORD = lParam And  &amp;HFFFF&amp;
      ' LOWORD now equals 65,535 or &amp;HFFFF
      ' This is the HIWORD of the lParam:
      HIWORD = lParam  \  &amp;H10000  And  &amp;HFFFF&amp;
      ' HIWORD now equals 30,583 or &amp;H7777
      gethiloword = 1
</PRE>   End Function

<P><LI>Run the program. Click the Command1 button to pull apart an integer
   value into its high-order and low-order bytes. Click the Command2 button
   to pull apart a long integer into its high-order and low-order words.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
