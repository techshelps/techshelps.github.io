

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: MouseMove Button Is Incorrect with ListView MultiSelect </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149275">
<META NAME="KBModify" CONTENT="1996/03/29">
<META NAME="KBCreate" CONTENT="1996/03/29">
<META NAME="Keywords" CONTENT="kbbuglist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Button argument of the ListView's MouseMove event may not always correctly reflect the most current mouse button status. This can occur if the MultiSelect property of the ListView control is set to True. The Button argument of the MouseMove eve...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAQ7,QAPN,QAB5,QAMN,QAKJ,QBS0,QA7O,QAO4,QAOE,QAMB,QAC2,QAHE,QAEV,QA5D,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: MouseMove Button Is Incorrect with ListView MultiSelect</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149275</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Button argument of the ListView's MouseMove event may not always
correctly reflect the most current mouse button status. This can occur if
the MultiSelect property of the ListView control is set to True. The Button
argument of the MouseMove event is updated only when the MouseDown event is
fired, not every time the MouseMove event is fired.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, one could use an OCX or tool that allows the
trapping of Windows messages. The code would need to be written, but one
possible scheme could involve a flag variable that would be set whenever
the ListView control received a WM_LBUTTONDOWN or WM_RBUTTONDOWN message
and only reset when a corresponding WM_LBUTTONUP or WM_RBUTTONUP message
was received. This flag variable could be used as the equivalent of the
button argument in the MouseMove event, because it will return different
values when the mouse button has been clicked or when the mouse button has
been clicked but not released. The Message Blaster OCX, produced by
WareWithAll, is a good tool to use to trap Windows messages.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be an issue in the Microsoft products
listed at the beginning of this article. Microsoft is researching this
problem and will post new information here in the Microsoft Knowledge Base
as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce</h3>
 

<OL><P><LI>Start Visual Basic 4.0. Form1 is created by default.

<P><LI>Add a single ListView control to the form. Also add one label control.

<P><LI>Set the following property of the ListView control:
<P>
<PRE>   MultiSelect:      True

</PRE><P><LI>Add this code to the form:
<P>
<PRE>   Private Sub Form_Load()
       ListView1.ListItems.Add , , "item 1"
   End Sub

   Private Sub ListView1_MouseMove(Button As Integer, Shift As Integer, x
   As Single, y As Single)
       Label1.Caption = Button
   End Sub

</PRE><P><LI>Press F5 or select Start from the Run menu to run the application. Click
   once on the white space of the control and see that the label changes to
   show a 1--the constant for the left mouse button. Now move the mouse
   button around and see that the label still shows 1 even though the left
   mouse button is not pressed.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsCus<BR>
Additional reference words: 4.00 vb4win vb432
<P>

<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
