

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Send a Mail Message Using Visual Basic MAPI Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113033">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/03/23">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article demonstrates how to create a Microsoft Mail message programmatically and send it by using the Visual Basic MAPI controls. You can use this technique to automate the process of sending messages.  MORE INFORMATION  The professional editi...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYC,QBS0,QAL7,QAEV,QA7O,QAOE,QAMN,QAB5,QAR2,QAH6,QBXS,QA5T,QAH4,QBV0,QAIJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Send a Mail Message Using Visual Basic MAPI Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113033</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Editions of Microsoft Visual Basic for Windows,
<PRE>  versions 2.0 and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates how to create a Microsoft Mail message
programmatically and send it by using the Visual Basic MAPI controls. You
can use this technique to automate the process of sending messages.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The professional editions of Visual Basic versions 2.0 and 3.0 come with
the custom control MSMAPI.VBX, which contains two controls (MAPI
session control and MAPI message control) for creating Microsoft Mail
enabled applications. The MAPI session control is used to manipulate a
Microsoft Mail session, and the MAPI message control is used to create and
manipulate mail messages. It is possible to use these two controls to
automate the process of sending mail messages.
<P>
The following example illustrates the use of the MAPI controls to send
messages. The example creates a mail message with an attachment and sends
it to a recipient.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add MSMAPI.VBX to the project.

<P><LI>Add a MAPI session control (MAPISession1) and a MAPI message control
   (MAPIMessages1) to the form.

<P><LI>Add a command button (Command1) to the form.

<P><LI>Put the following code in the command button click event.
<P>
<PRE>   Sub Command1_Click ()
      'MAPI constants from CONSTANT.TXT file:
      Const SESSION_SIGNON = 1
      Const MESSAGE_COMPOSE = 6
      Const ATTACHTYPE_DATA = 0
      Const RECIPTYPE_TO = 1
      Const RECIPTYPE_CC = 2
      Const MESSAGE_RESOLVENAME = 13
      Const MESSAGE_SEND = 3
      Const SESSION_SIGNOFF = 2

      'Open up a MAPI session:
      MapiSession1.Action = SESSION_SIGNON
      'Point the MAPI messages control to the open MAPI session:
      MapiMessages1.SessionID = form1.MapiSession1.SessionID

      MapiMessages1.Action = MESSAGE_COMPOSE   'Start a new message

      'Set the subject of the message:
      MapiMessages1.MsgSubject = "This is the subject."
      'Set the message content:
      MapiMessages1.MsgNoteText = "This is the mail message."

      'The following four lines of code add an attachment to the message,
      'and set the character position within the MsgNoteText where the
      'attachment icon will appear. A value of 0 means the attachment will
      'replace the first character in the MsgNoteText. You must have at
      'least one character in the MsgNoteText to be able to attach a file.
      MapiMessages1.AttachmentPosition = 0
      'Set the type of attachment:
      MapiMessages1.AttachmentType = ATTACHTYPE_DATA
      'Set the icon title of attachment:
      MapiMessages1.AttachmentName = "System Configuration File"
      'Set the path and file name of the attachment:
      MapiMessages1.AttachmentPathName = "C:\CONFIG.SYS"

      'Set the recipients
      MapiMessages1.RecipIndex = 0                    'First recipient
      MapiMessages1.RecipType = RECIPTYPE_TO          'Recipient in TO line
      MapiMessages1.RecipDisplayName = "EddieSpaghetti"   'e-mail name
      MapiMessages1.RecipIndex = 1                  'add a second recipient
      MapiMessages1.RecipType = RECIPTYPE_TO        'Recipient in TO line
      MapiMessages1.RecipDisplayName = "TanyaLasagna"     'e-mail name
      MapiMessages1.RecipIndex = 2                   'Add a third recipient
      MapiMessages1.RecipType = RECIPTYPE_CC         'Recipient in CC line
      MapiMessages1.RecipDisplayName = "BlairAngelHair"  'e-mail name
      MapiMessages1.RecipIndex = 3                  'Add a fourth recipient
      MapiMessages1.RecipType = RECIPTYPE_CC          'Recipient on CC Line
      MapiMessages1.RecipDisplayName = "JoanieCannelloni" 'e-mail name"

      'MESSAGE_RESOLVENAME checks to ensure the recipient is valid and puts
      'the recipient address in MapiMessages1.RecipAddress
      'If the E-Mail name is not valid, a trappable error will occur.
      MapiMessages1.Action = MESSAGE_RESOLVENAME
      'Send the message:
      MapiMessages1.Action = MESSAGE_SEND

      'Close MAPI mail session:
      MapiSession1.Action = SESSION_SIGNOFF
End Sub

</PRE><P><LI>Save the project.

<P><LI>Run the code, and click the command button.
<P>
</OL>The program should start a MAPI session, create a message, send the
message, and then close the session.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
