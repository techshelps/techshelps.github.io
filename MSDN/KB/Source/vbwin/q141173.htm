

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Default Property of Dynaset Different in VB 4.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141173">
<META NAME="KBModify" CONTENT="1996/04/05">
<META NAME="KBCreate" CONTENT="1995/12/12">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Code that doesn't refer explicitly to the Name property of the dynaset object, but instead uses the dynaset's old default property, Name, compiles and runs correctly when using Visual Basic 3.0. However, the compilation fails under Visual Basic 4.0...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QAH4,QA5F,QAW6,QAMA,QAUJ,QABA,QBWS,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Default Property of Dynaset Different in VB 4.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 5, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141173</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
<LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Code that doesn't refer explicitly to the Name property of the dynaset
object, but instead uses the dynaset's old default property, Name, compiles
and runs correctly when using Visual Basic 3.0. However, the compilation
fails under Visual Basic 4.0, stopping and giving a "Type mismatch" error
on lines where the default property is used.
<P>
<P><h2>CAUSE</h2>
 
<P>
With Visual Basic 4.0, the default value of the dynaset object is no longer
the Name property. When you refer to a dynaset object without referring to
any properties, Visual Basic 4.0 interprets this to be a reference to the
dynaset object itself.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Change the code to refer explicitly to all properties. When assigning a
string to the RecordSource property of a data control, instead of using
<P>
<PRE>   Dim ds as Dynaset
   Data1.RecordSource = ds

</PRE>use the following:
<P>
<PRE>   Dim ds as Dynaset
   Data1.RecordSource = ds.Name

</PRE>NOTE: The Dynaset object is provided for backwards compatibility. Use of
the new enhanced RecordSet object is recommended.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce</h3>
 

<OL><P><LI>Start Visual Basic.

<P><LI>On the File menu, click New Project.

<P><LI>Double-click the data control button in the Toolbox to add a new data
   control, named Data1, to the form.

<P><LI>Add a command button to the form by clicking the command button icon in
   the Toolbox.

<P><LI>Insert the following code in the Command1_Click procedure, changing the
   path with the OpenDatabase statement to refer to where your copy of
   BIBLIO.MDB is located. In addition, because the code below uses old
   style syntax, when running under Visual Basic 4.0 you must have
   "Microsoft DAO 2.5/3.0 Compatibility Layer" checked in the References
   dialog box.
<P>
<PRE>      Sub Command1_Click ()
          Dim db As Database
          Dim ds As Dynaset

          Set db = OpenDatabase("c:\vb\biblio.mdb")
          Set ds = db.CreateDynaset("Authors")
          'set Data1's RecordSource to the Name of the ds object
          'works with Visual Basic 3.0, doesn't work with Visual Basic 4.0
          Data1.RecordSource = ds
      End Sub

</PRE><P><LI>On the Run menu, click Start (ALT, R, S) or press F5. When compiled
   under Visual Basic 3.0, the above code works as expected and
   Data1.RecordSource has the value "Authors" when the procedure exits.
   With Visual Basic 4.0, the program fails to run and flags the last line
   in the procedure with a 'Type mismatch' error. Changing the last line
   from
<P>
<P><PRE>      Data1.RecordSource = ds
</PRE><P>
   to the following
<P>
<P><PRE>      Data1.RecordSource = ds.Name
</PRE><P>
   resolves the problem.
<P>
</OL>The RecordSource property of a data control expects a string value, and
that is what is returned as the default property of a dynaset in Visual
Basic 3.0. In Visual Basic 4.0, referring to a dynaset by its name only is
interpreted to mean that you are referring to the recordset object itself.
Because RecordSource expects a string, Visual Basic raises the "Type
mismatch" error when an attempt is made to assign a recordset object to
RecordSource.
<P>
NOTE: The Name property of a dynaset or recordset object refers to the name
of the table, QueryDef, or SQL statement used to create it (see the online
help for Name).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: APrgData<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 5, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
