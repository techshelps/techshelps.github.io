

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why Some Methods/Properties Do Not Appear in Object Browser </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142293">
<META NAME="KBModify" CONTENT="1996/01/12">
<META NAME="KBCreate" CONTENT="1996/01/09">
<META NAME="Keywords" CONTENT="kbprg kbole">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Most, but not all, of the functions and procedures available in Visual Basic 4.0 can be viewed by selecting the  VBA - Visual Basic For Applications  library in the Object Browser. For example, the StrConv function is visible, but the StrComp and I...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBMH,QAY5,QA5F,QAPN,QDM0,QAB9,QBVV,QBV8,QAGI,QAMA,QAUJ,QAHE,QBHQ,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Why Some Methods/Properties Do Not Appear in Object Browser</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142293</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard, Professional and Enterprise Editions of Microsoft Visual
<PRE>  Basic, 16-bit and 32-bit, for Windows, version 4.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Most, but not all, of the functions and procedures available in Visual
Basic 4.0 can be viewed by selecting the "VBA - Visual Basic For
Applications" library in the Object Browser. For example, the StrConv
function is visible, but the StrComp and InStr functions are not. The
subroutines that are not visible do not support named arguments.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This behavior is caused by a difference in the internal representation of
different statements and procedures. All of the subroutines available in
Visual Basic 4.0 are a part of Visual Basic for Applications, and are
included in the VBA type library. However, some functions and procedures
were also implemented internally in either Vb32.exe or Vb.exe to improve
performance.
<P>
While VBA functions and procedures support named arguments, internal
functions do not. This can be shown by executing the following line of
code:
<P>
<PRE>   Debug.Print ABS(Number := -5)

</PRE>Because the ABS function is implemented in two places, and because Visual
Basic uses the internal version by default, the above line of code
generates the error:
<P>
<PRE>   'Expected: )'

</PRE>The use of the VBA version of the function (as well as of named arguments)
can be forced by explicitly referencing the VBA type library in the call to
the function or subroutine. For example, the following works properly:
<P>
<PRE>   Debug.Print VBA.ABS(Number := -5)

</PRE>In this case the function used resides in the type library.
<P>
Because the subroutines that have been implemented internally do not
support named arguments by default, they were removed from the Object
Browser to prevent copying and pasting of calls with incorrect syntax.
Named arguments can still be used, as long as each call includes the "vba."
prefix to tell Visual Basic to use the Visual Basic for Applications
version of the function.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all vba<BR>
KBCategory: kbprg kbole<BR>
KBSubcategory: iapvba<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
