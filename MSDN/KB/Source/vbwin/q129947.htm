

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Win32 Replacement for the hmemcpy Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129947">
<META NAME="KBModify" CONTENT="1997/11/03">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="APrgOther kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The hmemcpy function is no longer available in Windows 32-bit development systems. This article describes the Win32 Replacement for HMEMCPY function.  MORE INFORMATION  Excerpted from  Hardcore Visual Basic  by Bruce McKinney, published by Microsof...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QA5F,QAMA,QAJQ,QAB9,QBV8,QBS0,QARM,QA2P,QDL9,QBWQ,QBWO,QBWN,QBVV,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Win32 Replacement for the hmemcpy Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129947</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00
WINDOWS
kbprg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The hmemcpy function is no longer available in Windows 32-bit development
systems. This article describes the Win32 Replacement for HMEMCPY function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Excerpted from "Hardcore Visual Basic" by Bruce McKinney, published by
Microsoft Press:
<P>
<P><h3>CopyMemory: A Strange and Terrible Saga</h3>
 
<P>
Experienced Basic API programmers have come to know, if not love, the
hmemcpy function. When C's weak data typing and Basic's strong data typing
meet in the Windows API, hmemcpy is frequently called on to mediate. The h
in the name indicates that hmemcpy can handle huge memory (greater than 64K
bytes), but Basic programmers rarely need it for such large chunks.
Unfortunately, if you look for hmemcpy in the Win32 documentation, you'll
come up with nothing — not even a note saying that the function is
obsolete.
<P>
But you might happen to run across the Win32 CopyMemory function, which has
exactly the same arguments and in fact looks like the same procedure. The h
has disappeared because all memory in 32-bit mode is huge. If you write a
Declare statement for CopyMemory, however, giving KERNEL32.DLL as the most
likely library, you'll get nothing but an error indicating that no such
function exists. In fact, you can search all the 32-bit DLLs with the
DumpBin utility, but you won't find any containing CopyMemory.
<P>
But a careful search of Win32 C include files turns up the following in
WINBASE.H:
<P>
<PRE>   #define CopyMemory RtlCopyMemory
   #define MoveMemory RtlMoveMemory
   #define ZeroMemory RtlZeroMemory

</PRE>This C equivalent of an alias indicates that CopyMemory is another name for
a function called RtlCopyMemory. Don't ask why; just check for
RtlCopyMemory in KERNEL32.DLL. Again, nothing. A little more sleuthing in
Win32 include files reveals the reason. WINNT.H contains something like
this:
<P>
<PRE>   #define RtlCopyMemory(dst, src, len) memcpy(dst, src, len)

</PRE>In other words, RtlCopyMemory is an alias for the C memcpy function, but
you can't use memcpy or any other C library function from Basic. If it's
not exported from a DLL, you can't call it.
<P>
But KERNEL32.DLL does contain an entry for RtlMoveMemory. If you check the
Win32 documentation, you'll see that MoveMemory does the same thing as
CopyMemory except that it handles overlapped memory differently. I can't
imagine a situation in which a Basic programmer would be copying overlapped
memory. No reason not to use MoveMemory instead. Because CopyMemory is more
intelligible than hmemcpy, I alias this name for both 16-bit and 32-bit
versions:
<P>
<PRE>   #If Win32 Then
      Declare Sub CopyMemory Lib "KERNEL32" Alias "RtlMoveMemory" ( _
         hpvDest As Any, hpvSource As Any, ByVal cbCopy As Long)
   #Else
      Declare Sub CopyMemory Lib "KERNEL" Alias "hmemcpy" ( _
         hpvDest As Any, hpvSource As Any, ByVal cbCopy As Long)
   #End If

</PRE>You must still be careful about what you pass to these functions. There are
a lot of issues with ByVal versus ByRef depending on whether you're passing
strings, UDTs, pointers, and so on.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb432<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>
Keywords          : APrgOther kbcode kbprg<BR>
Version           : 4.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
