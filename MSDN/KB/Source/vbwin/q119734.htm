

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Recompiling VB Project May Produce Larger .EXE File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119734">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/08/22">
<META NAME="Keywords" CONTENT="kbenv kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When you compile a Visual Basic project (by choosing Make EXE File from the File menu) more than once without making any modifications to the project, the size of the subsequent .EXE file may be different. In other applications, successive compilat...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAKJ,QAJQ,QATX,QA7H,QANG,QA5F,QAMA,QAYY,QBJZ,QAHT,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Recompiling VB Project May Produce Larger .EXE File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119734</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you compile a Visual Basic project (by choosing Make EXE File from the
File menu) more than once without making any modifications to the project,
the size of the subsequent .EXE file may be different. In other
applications, successive compilation of an application's unaltered files
results in executable files of the same size. However, in Visual Basic the
.EXE file usually increases in size with each compilation.
<P>
<P><h2>CAUSE</h2>
 
<P>
Each Visual Basic application receives one data segment of up to 64K (minus
overhead) to store global variables and global constants. Space for the
global string constant descriptors is allocated in this data segment. The
actual text for global string constants is stored in a segment of up to 32K
(minus overhead), allocated separately from dynamic memory.
<P>
A Visual Basic custom control (.VBX) is allocated space in the same 32K
segment for any strings created with the Visual Basic API VBCreateHlstr. If
the custom control does not deallocate this space, because it needs to
reference these strings when it is unloaded or because it does not clean up
properly, the data in the segment may exceed 32K. Visual Basic allocates
another segment to hold the excess data any time the data exceeds 32K and
links this new segment to an internal list of dynamic data segments.
<P>
While it is legal to allocate another segment to custom controls, the
global string constant data is limited to one segment. Visual Basic gets
confused because the global string constant data segment has another
segment attached to it, and an .EXE file of a larger size is usually
generated as a result. In some cases, the global string constant data
segment is even lost, resulting in a smaller .EXE file.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
If you encounter the above situation, the only way to make consistent .EXE
files so that any differences in size can be attributed to a problem like
the one described in this article is to compile from the command line. In
Program Manager, choose Run from the File menu and enter a Visual Basic
command line like the one below in the Command Line text box:
<P>
<PRE>     VB.EXE /Make SAMPLE.MAK SAMPLE.EXE

</PRE>Because it is impossible to tell how much of the segment custom controls
using VBCreateHlstr may need and because Visual Basic needs some of the
space to manage the segment, you should also try to use as little space as
possible for global string constants, thus attempting to avoid allocating
another segment. To eliminate this possibility, you should try and reduce
the space needed to store global string constant data to well under 32K.
This space can be reduced by using fewer global string constants and by
making the strings shorter.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in Visual Basic version 3.0. We
are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Executable files compiled from the command line for the same unmodified
project are normally the same size, but they are not necessarily identical.
Executable files produced by Visual Basic contain some uninitialized data,
and when they are saved, they contain whatever happened to be at that
location on the disk. You will see these differences within the .EXE files
when comparing them with a binary-file comparison utility like DIFF.
<P>
For further information on what Visual Basic places in its .EXE files,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q112860.htm">Q112860</A></B>
   TITLE     : General Memory Management in Visual Basic 3.0 for Windows
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist3.00 3.00 inconsistent<BR>
KBCategory: kbenv kbbuglist<BR>
KBSubcategory: EnvtDes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
