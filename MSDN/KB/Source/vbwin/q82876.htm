

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Disable Close Command in VB Control Menu (System Menu) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q82876 ">
<META NAME="KBModify" CONTENT="1996/08/08">
<META NAME="KBCreate" CONTENT="1992/04/01">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  To modify an item in the Visual Basic Control menu (also known as the System menu), you need to call the API functions GetSystemMenu and ModifyMenu. This article describes how to disable the Close command in the Control menu.  MORE INFORMATION  If ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGB,QAVI,QAAW,QAH4,QBXS,QAMN,QAB9,QA7O,QAOE,QAB5,QBV8,QA4P,QAF0,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Disable Close Command in VB Control Menu (System Menu)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 8, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q82876 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To modify an item in the Visual Basic Control menu (also known as the
System menu), you need to call the API functions GetSystemMenu and
ModifyMenu. This article describes how to disable the Close command in the
Control menu.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you do not want the user to be able to choose the Close command from
the Control menu or to be able to double-click the Control-menu box to end
the application, you can disable the Close command. GetSystemMenu returns
the handle to the Control menu. That handle can be used by ModifyMenu to
change the control menu.
<P>
The following code example disables (grays out) the Close command in
the Visual Basic Control menu.

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT,
   F, N) if Visual Basic is already running. Form1 is created by default.

<P><LI>Place a command button (Command1) on Form1. Change its Caption property
   to Disable Close.

<P><LI>Place another command button (Command2) on Form1. Change its caption
   to Exit.

<P><LI>Add the following declarations and constants to the general
   Declarations section of Form1:
<P>
<PRE>   ' Enter each Declare statement as one, single line:
   Declare Function GetSystemMenu Lib "User" (ByVal hWnd%,
      ByVal bRevert%) as Integer
   Declare Function ModifyMenu Lib "User" (ByVal hMenu%, ByVal nPosition%,
      ByVal wFlags%, ByVal wIDNewItem%, ByVal lpNewItem as Any) as Integer

   Const MF_BYCOMMAND = &amp;H0
   Const MF_GRAYED = &amp;H1
   Const SC_CLOSE = &amp;HF060

   NOTE: Other constants to disable other menu items in the Control
   menu are described in the CONSTANT.TXT file.

</PRE><P><LI>Add the following code to the Command1 Click event:
<P>
<PRE>   Sub Command1_Click ()
      ' See the notes at the end of this article for important additional
      ' information about this code.
      nPosition% = SC_CLOSE
      idNewItem%=-10
      s$ = "Close"
      hMenu% = GetSystemMenu(hWnd, 0)
      wFlags% = MF_BYCOMMAND Or MF_GRAYED
      success% = ModifyMenu(hMenu%, nPosition%, wFlags%, idNewItem%, s$)
   End Sub

</PRE><P><LI>Add the following code to the Command2 Click event:
<P>
<PRE>   Sub Command2_Click ()
      End
   End Sub

</PRE><P><LI>Press the F5 key to run the program.

<P><LI>Click the Control-menu box to see that all the menu items are available.

<P><LI>Click the Disable Close command button. Then click the Control-menu box.
   Notice that the Close menu command is unavailable.
<P>
</OL>The user cannot end the application by either choosing Close from the
Control menu or by double-clicking the Control-menu box. The only way to
end this program is to choose the Exit command button.
<P>
<P><h3>Notes on the Use of ModifyMenu() in the Code</h3>
 
<P>
The code listed above uses the ModifyMenu() function, but the
EnableMenuItem() may be more appropriate in your particular situation.
<P>
Here's the syntax for ModifyMenu():
<P>
<PRE>   ModifyMenu(hMenu, SC_CLOSE, MF_BYCOMMAND|MF_GRAYED, SC_CLOSE, "Close")

</PRE></OL>Here's the syntax for EnableMenuItem():
<P>
<PRE>   EnableMenuItem(hMenu, SC_CLOSE, MF_BYCOMMAND|MF_GRAYED)

</PRE>Both functions work. However it appears that Visual Basic re-enables the
menu item whose ID is SC_CLOSE. This is why it may appear as if the
ModifyMenu() or EnableMenuItem() function failed.
<P>
To work around this problem in the code listed above, the second to last
argument (idNewItem%) is set to -10 (0 would also work):
<P>
<PRE>   ModifyMenu(hMenu, SC_CLOSE, MF_BYCOMMAND|MF_GRAYED, -10, "Close")

</PRE>This works because Visual Basic looks for a menu item with ID SC_CLOSE to
re-enable and cannot find one because it has been changed to 0 or -10. So
Visual Basic can't re-enable the Close menu item.
<P>
However, because of this workaround, another limitation is introduced. The
problem is that the ID of the Close menu item is changed to -10. If you
want the program to be able to re-enable the Close item, you'll need to use
this alternative version:
<P>
<PRE>   ModifyMenu(hMenu, -10, MF_BYCOMMAND|MF_GRAYED, SC_CLOSE, "Close")

</PRE>This is a good workaround to Visual Basic's re-enabling of Close. Don't use
0 because menu separators also have the ID 0 and you will run into problems
when you try to re-enable Close. 0xFFFF is a good ID to use.
<P>
Another alternative solution is to use DeleteMenu to remove Close and the
separator above it, and use InsertMenu to add the Close and the separator.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows Programmer's Reference Book and Online Resource"
(Visual Basic Add-on kit number 1-55615-413-5)
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 control box controlbox<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 8, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
