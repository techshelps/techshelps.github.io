

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Print with Rotated Text </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119673">
<META NAME="KBModify" CONTENT="1996/05/16">
<META NAME="KBCreate" CONTENT="1994/08/20">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can use the CreateFont or CreateFontIndirect Windows API calls to obtain a rotated font. This allows printing of rotated text to a Visual Basic form, picture control, or the printer object.  NOTE: This technique may not work under Windows versi...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QADF,QATX,QA4Q,QAGI,QAH4,QDL9,QBWQ,QBWO,QBWN,QAMB,QAOX,QAYS,QAK8,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Print with Rotated Text</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119673</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional Edition of Microsoft Visual Basic for Windows,
   version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the CreateFont or CreateFontIndirect Windows API calls to
obtain a rotated font. This allows printing of rotated text to a Visual
Basic form, picture control, or the printer object.
<P>
NOTE: This technique may not work under Windows version 3.0 or when you use
a non-TrueType font.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can specify the rotation for a font when you request a font from
Windows with the CreateFont or CreateFontIndirect Windows API calls; you do
this by setting the escapement of the desired font. The escapement is
expressed in tenths of degrees of rotation, so an escapement of 450 would
be a 45-degree rotation; an 1800 escapement would be 180 degrees of
rotation.
<P>
Once you have obtained a handle to the desired font with
CreateFont/CreateFontIndirect, you can then use the SelectObject Windows
API call to select the font for the device context (DC) of the Visual Basic
printer object or for a Visual Basic form or picture control.
<P>
The following is a sample program that demonstrates printing rotated text
in a Visual Basic picture control:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button (Command1) and a picture box (Picture1) to the
   form.

<P><LI>Create a new module and add the following code to the General
   declarations section of the module (NOTE: each declaration must be
   placed on one line.):
<P>
<PRE>   Declare Function CreateFontIndirect Lib "GDI" (lpLogFont As Any)
                                                 As Integer
   Declare Function SelectObject Lib "GDI" (ByVal hDC As Integer,
                                            ByVal hgdiObj As Integer)
                                           As Integer
   Declare Function DeleteObject Lib "GDI" (ByVal hgdiObj As Integer)
                                           As Integer

   Type LOGFONT_TYPE
       lfHeight As Integer
       lfWidth As Integer
       lfEscapement As Integer
       lfOrientation As Integer
       lfWeight As Integer
       lfItalic As String * 1
       lfUnderline As String * 1
       lfStrikeOut As String * 1
       lfCharSet As String * 1
       lfOutPrecision As String * 1
       lfClipPrecision As String * 1
       lfQuality As String * 1
       lfPitchAndFamily As String * 1
       lfFaceName As String * 32
   End Type

</PRE><P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Sub Command1_Click ()
     Dim font As LOGFONT_TYPE
     Dim prevFont As Integer, hFont As Integer, ret As Integer

     Const FONTSIZE = 12   ' Desired point size of font


     font.lfEscapement = 1800    ' 180-degree rotation
     font.lfFaceName = "Arial" + Chr$(0)

     ' Windows expects the font size to be in pixels and to
     ' be negative if you are specifying the character height
     ' you want.
     font.lfHeight = (FONTSIZE * -20) / Screen.TwipsPerPixelY

     hFont = CreateFontIndirect(font)
     prevFont = SelectObject(Picture1.hDC, hFont)

     Picture1.CurrentX = Picture1.Width \ 2
     Picture1.CurrentY = Picture1.Height \ 2
     Picture1.Print "Rotated Text"

     ' Clean up by restoring original font.
     ret = SelectObject(Picture1.hDC, prevFont)
     ret = DeleteObject(hFont)

     Picture1.Print "Normal Text"
   End Sub

</PRE><P><LI>Press F5 to run the program. Choose the new command button and the
   string "Rotated Text" will be printed with a rotation of 180 degrees on
   the picture control.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 rotate<BR>
KBCategory: kbprg kbcode<BR>
KBSubCategory: APrgGraph<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
