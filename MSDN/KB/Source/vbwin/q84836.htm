

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Determine the Number of VB Applications Running at Once </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84836 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/05/20">
<META NAME="Keywords" CONTENT="kbui kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  To determine the total number of Microsoft Visual Basic for Windows applications running at any given time, you can use the Microsoft Windows API functions GetModuleHandle and GetModuleUsage.  MORE INFORMATION  The following code fragment demonstra...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWO,QBWN,QBWQ,QBWS,QAKC,QAH4,QA5F,QAMA,QBC6,QBJZ,QAJZ,QAG8,QAWH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Determine the Number of VB Applications Running at Once</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84836 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To determine the total number of Microsoft Visual Basic for Windows
applications running at any given time, you can use the Microsoft
Windows API functions GetModuleHandle and GetModuleUsage.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code fragment demonstrates a technique to find the total
number of Visual Basic for Windows applications currently executing by
determining the number of instances of the Visual Basic run-time module
(VBRUN100.DLL) with the Windows API functions GetModuleHandle and
GetModuleUsage. Remember that Visual Basic for Windows itself is not
counted; only applications created with Visual Basic for Windows are
included.
<P>
<P><h3>Steps to Create Example Program</h3>
 

<OL><P><LI>Start several Visual Basic for Windows applications and leave them
   running.

<P><LI>Run Visual Basic for Windows, or from the File menu, choose New
   Project (press ALT, F, N) if Visual Basic for Windows is already
   running. Form1 is created by default.

<P><LI>Enter the following Windows API function declarations into the
   General Declarations section of Form1:
<P>
<PRE>   Declare Function GetModuleUsage% Lib "kernel" (ByVal hModule%)
   Declare Function GetModuleHandle% Lib "kernel" (ByVal FileName$)

</PRE><P><LI>Place a command button (Command1) on Form1. Double-click that
   button to open the Code window. In the Command1_Click procedure,
   add the following code:
<P>
<PRE>   Sub Command1_Click ()
     msg$ = "Number of executing VB Apps: "

     hModule% = GetModuleHandle("VBRUN300.DLL")
       ' For Visual Basic versions 1.0 and 2.0 for Windows, use
       ' VBRun100.DLL and VBRun2.00.DLL respectively.
     nInstances% = GetModuleUsage(hModule%)

     msg$ = msg$ + Str$(nInstances%)
     MsgBox msg$
   End Sub

</PRE><P><LI>From the File menu, choose Make EXE File.

<P><LI>Press the F5 key to run the file.

<P><LI>Click the command button.
<P>
</OL>A message box displays the total number of executing Visual Basic
for Windows applications.
<P>
NOTE: This program itself will count as one application.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbui kbprg kbcode<BR>
KBSubcategory: APrgWindow<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
