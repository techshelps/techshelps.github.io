

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Set Up ODBC Data Sources When Distributing Apps </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q123008">
<META NAME="KBModify" CONTENT="1997/11/24">
<META NAME="KBCreate" CONTENT="1994/11/20">
<META NAME="Keywords" CONTENT="APrgDataODBC VB4ALL VB4WIN">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article discusses the following four methods for setting up an ODBC data source on a computer:     - ODBC Setup    - RegisterDatabase    - ODBC API    - Blind Copy of INI files  MORE INFORMATION  Required Files  The following files must be dis...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QA9E,QDI2,QAIV,QBS0,QAU9,QANE,QAH4,QAH6,QDIZ,QAK6,QAB9,QA9N,QA0B,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Set Up ODBC Data Sources When Distributing Apps</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q123008</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of Microsoft Visual Basic,
   16-bit and 32-bit, for Windows, version 4.0
<LI>Professional Edition of Microsoft Visual Basic for Windows,
   version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses the following four methods for setting up an ODBC
data source on a computer:
<P>
<PRE>   - ODBC Setup
   - RegisterDatabase
   - ODBC API
   - Blind Copy of INI files

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Required Files</h3>
 
<P>
The following files must be distributed with your application if you use
ODBC. When using the Setup Wizard to create distribution disks, ensure
that the necessary files are included in the file list. All of the files
listed should be installed in the \WINDOWS\SYSTEM directory.
<P>
Optional files (SQL Server or Oracle) are denoted with an asterisk (*).
<P>
<PRE>File                  Description
</PRE> 
<PRE>ODBC.DLL              The ODBC Driver Manager. This DLL is called by the
                      Microsoft Jet database engine when performing ODBC
                      operations. The Driver Manager handles loading the
                      correct ODBC driver and dispatching ODBC function
                      calls to the driver.

ODBCINST.DLL          The ODBC Driver Installation library. This DLL
                      contains Driver installation specific functions.
                      The ODBC Administrator (ODBCADM.EXE) calls functions
                      exported from this DLL when installing ODBC
                      drivers. You may also call functions in this DLL
                      to automate driver installation.

ODBCADM.EXE           The ODBC Administrator program. This program
                      allows a user to install ODBC drivers and
                      set up or modify Data Sources.

ODBCINST.HLP          The ODBC Administrator help file.

COMMDLG.DLL           The Common Dialog DLL. This DLL is used by the
                      ODBC Administrator program.

CTL3D.DLL             The 3D Control DLL. This DLL is used by the ODBC
                      Administrator program. If you are using ODBC.DLL
                      version 1.05 or greater, you need to distribute
                      CTL3DV2.DLL.

PDSODBC.DLL           Crystal Reports Physical Server DLL for ODBC. This
                      DLL is required only if your application uses Crystal
                      Reports to access an ODBC data source.

&lt;driver&gt;.DLL          The ODBC driver(s) that the application will use
                      to connect to specific Data Sources.

                      SQL Server:  SQLSRVR.DLL*
                      Oracle 6:    SQORA.DLL*

&lt;netlib&gt;.DLL          The network library file(s). This file is used
                      to access the Data Source when using a specific
                      network protocol.

                      Named Pipes: DBNMP3.DLL*
                      TCP/IP (Sybase SQL Server): WDBNOVTC.DLL*
                      IPX/SPX (Sybase SQL Server): WDBNOVSP.DLL*
                      SQL*Net Interface: ORA6WIN.DLL*

INSTCAT.SQL*          SQL Server Catalog Stored Procedures script.

DRVSSRVR.HLP*         SQL Server ODBC Driver help file.

ORASETUP.DLL*         Oracle ODBC Driver setup functions.

DRVORACL.HLP*         Oracle ODBC Driver help file.

ORACLE.TXT*           Oracle ODBC Setup "read me" file.

ODBC.INI              Initialization file containing information
                      about specific Data Sources. The DSN parameter
                      in the Connect property of the data control or
                      the OpenDatabase statement corresponds to an
                      entry in the ODBC.INI. This file must also be
                      created or modified on the client computer.

ODBCINST.INI          The Initialization file that contains
                      information about installed ODBC drivers. The
                      RegisterDatabase statement and ODBC Administrator
                      use the information contained in this file to
                      set up Data Sources. Entries in ODBCINST.INI
                      are created either by running an ODBC driver
                      setup or through the ODBC API. This file must
                      also be either created or modified on the client
                      computer.

</PRE><h3>Four Methods to Get DSN information into ODBC.INI and ODBCINST.INI</h3>
 
<P>
The .INI files store information about the ODBC driver(s) and the ODBC Data
Sources. As a result, they are variable -- a user's may already have them
installed in the \WINDOWS directory. If a developer were to blindly
copy ODBC.INI and ODBCINST.INI onto the user's computer, the new files may
overwrite existing Data Sources.
<P>
Below are four methods you can use to get DSN information into the user's
ODBC.INI and ODBCINST.INI files.
<P>
<P><h3>ODBC Setup</h3>
 
<P>
To install an ODBC Driver and establish an ODBC Data Source, the Visual
Basic online Help documentation recommends that you copy the entire
contents of the \VB\ODBC directory to an additional distribution disk.
<P>
As a developer, you can specify that the disk be inserted and SETUP.EXE run
from the floppy disk. In addition, you can prompt the user to insert the
ODBC floppy disk, and then use the Visual Basic Shell command to shell out
to SETUP.EXE.
<P>
The Setup Wizard copies and modifies SETUP1.MAK into SETUP1A.MAK during the
process of creating distribution disks. It builds SETUP1A.MAK into
SETUP1.EXE, compresses it, and copies it to the distribution disks. When
SETUP.EXE is executed on the distribution disks, the files in SETUP.LST
are copied to the destination computer. SETUP1.EX_ is then uncompressed and
executed to start copying files from the floppy disks to the destination
computer.
<P>
It is possible to then modify SETUP1A.MAK, rebuild SETUP1.EXE, compress it,
and copy it to the distribution disks. To ensure that the compressed file
size will fit on the first distribution disk, you must pad the project with
code prior to first executing the Setup Wizard. Then you can change the
code into comments and add new code to prompt for the ODBC Setup disk. The
resulting EXE size will then still fit on the first distribution floppy
disk.
<P>
Modify SETUP1.FRM in the \VB\SETUPKIT\SETUP1 directory to add the necessary
code to pad the executable. This file is copied into SETUP1A.MAK during the
Setup Wizard's execution.
<P>
Here are the steps to follow:

<OL><P><LI>Start Visual Basic and from the File menu, choose Open Project. Open
   SETUP1.MAK in the \VB\SETUPKIT\SETUP directory.

<P><LI>Select SETUP1.FRM from the project window. Press F7 to view the code.

<P><LI>At the end of the Form_Load procedure add the following code in the
   ExitSub: label part, after RestoreProgMan and before the End statement:
<P>
<P><PRE>      Dim tmpK As String
      Dim tmpS As String
      Dim I As Long
      tmpK = "dummy"
      For I = 1 To 1000
<PRE></PRE>         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
         tmpS = Mid$(tmpK, 1, 2)
      Next I

</PRE><P><LI>Save the project (ALT, F, V).

<P><LI>Run the Setup Wizard, and create the distribution disks.
<P>
</OL>Once the disks have been created, you need to go back into Visual
Basic, edit SETUP1A.MAK, and add the appropriate code to prompt for the
ODBC Setup And Installation Disk. Follow these steps:

<OL><P><LI>Start Visual Basic.

<P><LI>Open the SETUP1A.MAK project in \VB\SETUPKIT\SETUP1 (ALT, F, O).

<P><LI>Choose SETUP1A.FRM and press F7 to view the code.

<P><LI>In the Form_Load procedure, place an apostrophe in front of each line
   of the dummy code that was previously inserted as a place holder:
<P>
<P><PRE>      'Dim tmpK As String
      'Dim tmpS As String
      'Dim I As Long
      'tmpK = "dummy"
      'For I = 1 To 1000
<PRE></PRE>      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      '   tmpS = Mid$(tmpK, 1, 2)
      'Next I

</PRE><P><LI>Add the following code within the Form_Load procedure immediately
   following the commented code:
<P>
<P><PRE>      x% = MsgBox("Do you want to install the ODBC Drivers?", 36,
<PRE></PRE>         App.title)
      If x% = 6 Then
         If Not PromptForNextDisk(2, SourcePath$ + "ODBCADM.EX_") Then
            GoTo ErrorSetup
         End If
         x% = Shell(SourcePath$ &amp; "setup.exe")
      End If

</PRE><P><LI>Change the disk number to 1 greater than the total number of
   distribution disks created. The disk number is the first parameter to
   the PromptForNextDisk procedure. In this example, the next disk to
   prompt for is 2.

<P><LI>Save the SETUP1A.MAK project and create the executable as SETUP1.EXE
   in the \VB\SETUPKIT\SETUP1 directory (ALT, F, K).

<P><LI>Shell out to an MS-DOS command prompt and change the directory to
   \VB\SETUPKIT\SETUP1. Execute the following at the command prompt:
<P>
<P><PRE>      \VB\SETUPKIT\KITFILES\COMPRESS -r SETUP1.EXE
</PRE>
<P><LI>Place the first distribution floppy disk in the appropriate drive and
   copy SETUP1.EX_ to the floppy disk:
<P>
<P><PRE>      copy SETUP1.EX_ A:\SETUP1.EX_
</PRE><P>
</OL>Now, when your distribution disks are run, the final step will be to prompt
for the ODBC Setup and Installation disk. SETUP.EXE will be executed from
this disk and the user can then install the appropriate ODBC driver and
create the necessary Data Source. You should include instructions for this
process.
<P>
For more information on modifying SETUP1.EXE please refer to Chapter 25,
"Distributing Your Application" in the Microsoft Visual Basic Programmer's
Guide.
<P>
<P><h3>RegisterDatabase</h3>
 
<P>
Visual Basic provides the RegisterDatabase statement to help in installing
ODBC data sources, not drivers. The RegisterDatabase statement assumes that
ODBCINST.INI and ODBCINST.DLL already exist on the computer. That is, the
drivers must be installed before running RegisterDatabase. If so, the
developer can use RegisterDatabase to add or update an entry in the
ODBC.INI.
<P>
The problem with this method is that if the client computer does not have
ODBC installed on the computer, the ODBCINST.INI and DLL will not exist.
Also, if the ODBC driver is new to the computer, there will not be an entry
for it in ODBCINST.INI, so RegisterDatabase will fail then as well.
<P>
The following description, syntax, remarks, and example about the
RegisterDatabase statement come from the Visual Basic online Help:
<P>
Description:
<P>
<PRE>      Makes connect information for an ODBC data source name available for
      use by the OpenDatabase function.

</PRE></OL>Syntax:
<P>
<PRE>      RegisterDatabase dsn, driver, silent, attributes

</PRE>Remarks:
<P>
<PRE>    The RegisterDatabase statement has the following parts:

    - DSN: A string expression that is a name used in the OpenDatabase
         function and refers a block of descriptive information about the
         data source. For example, if the data source is an ODBC remote
         database, it would be the name of the server.

    - DRIVER: A string expression that is the name of the ODBC driver.
         This is not the name of the ODBC driver DLL file. For example,
         "SQL Server" or "Oracle" are driver name but "SQLSRVR.DLL" is the
         name of a DLL file. You must have ODBC and the appropriate driver
         already installed.

    - SILENT: A numeric expression that is True if you do not want to
         display the ODBC driver dialogs that prompt for driver-specific
         information, or False if you do want to display the ODBC driver
         dialogs. If silent is True, then attributes must contain all the
         necessary driver-specific information or the dialog will appear
         anyway.

    - ATTRIBUTES: String expression that is a list of keywords to be added
         to the ODBC.INI file. The keywords are in a carriage-return
         delimited string.

</PRE>Example:
<P>
<PRE>      Sub Command1_Click ()
         Dim att As String
         Dim mydb As Database

         att = "Description = SQL Server on server Texas" &amp; Chr$(13)
         att = att &amp; "OemToAnsi=No" &amp; Chr$(13)   ' Build keywords string.
         att = att &amp; "Server=TEXAS" &amp; Chr$(13)
         att = att &amp; "Network=DBNMP3" &amp; Chr$(13)
         att = att &amp; "Address=\\TEXAS\PIPE\SQL\QUERY" &amp; Chr$(13)
         att = att &amp; "Database=Pubs" &amp; Chr$(13)
         att = att &amp; "LastUser=Stimpy"

         ' Update ODBC.INI.
         RegisterDatabase "Texas", "SQL Server", True, att

         Set mydb = OpenDatabase("Texas", False, False, "ODBC;")
         mydb.Close

      End Sub

</PRE>If the database is already registered in the ODBC.INI file, the entry is
updated. If RegisterDatabase fails for any reason, no changes are made to
the ODBC.INI file and an error occurs.
<P>
<P><h3>ODBC API</h3>
 
<P>
This is probably the most flexible and most efficient method, but most
developers are not familiar with it and do not have the ODBC SDK that
documents the API. Developers should get the Microsoft Software Development
Kit (SDK) and get the "Microsoft ODBC 2.0 Programmer's Reference and SDK
Guide" from Microsoft Press.
<P>
<P><h3>Copy INI</h3>
 
<P>
If the developer is certain that an ODBC.INI and ODBCINST.INI do not exist
on the installation computer, they can simply copy the files. However, the
developer must ensure that the paths to the drivers are correct; paths are
fully qualified within the .INI files. For example, the ODBC.INI file will
specify C:\WINDOWS\SYSTEM\SQLSRVR.DLL as the driver for SQL Server, so if
the user's Windows setup is in \WIN31, the path won't work.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbsetup kbhowto<BR>
KBSubcategory: APrgDataODBC VB4ALL VB4WIN<BR>
Additional reference words: 3.00 4.00<BR>
Keywords          : APrgDataODBC VB4ALL VB4WIN<BR>
Version           : WINDOWS:3.0, 4.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
