

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Trapping Options in the Advanced Options Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129876">
<META NAME="KBModify" CONTENT="1996/11/19">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbprg kbtshoot">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Advanced tab of the Options dialog box has the following three error trapping options:   - Break on All Errors.  - Break in Class Module.  - Break on Unhandled Errors.  This article explains in detail what it means to set each option.  MORE INF...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QAH4,QAKP,QBV8,QAFV,QAB9,QBXS,QA9Q,QAUD,QAFK,QABO,QAM4,QBWC,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Error Trapping Options in the Advanced Options Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 19, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129876</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Advanced tab of the Options dialog box has the following three error
trapping options:

<UL><LI>Break on All Errors.
<LI>Break in Class Module.
<LI>Break on Unhandled Errors.
<P>
</UL>This article explains in detail what it means to set each option.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An "enabled" error handler is one that has been turned on by an On Error
statement. An "active" error handler is an enabled handler that is in the
process of handling an error.
<P>
If an error occurs while an error handler is active (that is, between the
occurrence of the error and a Resume, Exit Sub, Exit Function, or Exit
Property statement), the current procedure's error handler can't handle the
error. Control returns to the calling procedure. If the calling procedure
has an enabled error handler, it is activated to handle the error. If the
calling procedure's error handler is also active, control passes back
through previous calling procedures until an enabled, but inactive, error
handler is found. If no inactive, enabled error handler is found, the error
is fatal at the point at which it actually occurred.
<P>
Each time the error handler passes control back to the calling procedure,
that procedure becomes the current procedure. Once an error is handled by
an error handler in any procedure, execution resumes in the current
procedure at the point designated by the Resume statement.
<P>
If the "Break on All Errors" option is selected, any error causes the
project to enter break mode, whether or not an error handler is active and
whether or not the code is in a class module. In other words, error
handlers are ignored when an error occurs.
<P>
If the "Break in Class Module" option is selected, any unhandled error
produced in a class module causes the project to enter break mode at the
offending line of code in the class module. Setting this option in an OLE
server is useful when debugging the server. Untrapped errors in OLE
Automation objects are returned to the controlling application when the OLE
Automation object is running as an executable file. Within the development
environment, they are only returned to the OLE Automation controller if
this option is not selected.
<P>
How this option is set on the client side has absolutely nothing to do with
breaking in OLE servers. The only way to get errors to break in an OLE
server is to open the Options dialog in the OLE server project itself, and
then choose either the "Break on All Errors" or the "Break in Class Module"
option. You cannot do this from the client project.
<P>
In a client, if you have the "Break in Class Module" option set, it just
means you can break in a class module inside your project. This is useful
because errors in class modules are always handled, even if you don't have
an error handler. OLE packages them up and hands them to the calling
procedure. Thus, even with the "Break on Unhandled Errors" option set, you
will never be able to break in one of your class modules, whether you are
acting as a client or as a server, even if you have no error handlers at
all.
<P>
Therefore, the phrase "Break in Class Module" really means "Break on
Unhandled Errors in Class Modules," which is exactly what it does when this
option is set.
<P>
If the "Break on Unhandled Errors" option is set and an error handler is
active, the error is trapped without entering break mode. If there is no
active error handler, the error causes the project to enter break mode.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbtshoot<BR>
KBSubcategory: EnvtDes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 19, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
