

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determine the Size of the Desktop Area </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154823">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1996/08/15">
<META NAME="Keywords" CONTENT="APrgOther vb432 vb4win kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  It is often useful to determine the size and position of the display area taking the system tray into account. There are at least two methods to obtain this information: One requires the use of an OCX, while another makes a call to the Win32 API. T...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAOX,QAH4,QBWS,QAIJ,QAB5,QAPN,QBJZ,QABA,QA7O,QA5F,QAOE,QAMN,QAMA,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determine the Size of the Desktop Area</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154823</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is often useful to determine the size and position of the display area
taking the system tray into account. There are at least two methods to
obtain this information: One requires the use of an OCX, while another
makes a call to the Win32 API. This article demonstrates the step-by-step
approaches to both of these methods.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Method 1</h3>
 
<P>
NOTE: The SYSINFO.OCX control is in the \VB4\TOOLS\SYSINFO folder of the
Visual Basic CD-ROM. It does not ship with the diskette version, and it is
not automatically installed by Visual Basic Setup. Copy SYSINFO.OCX to the
\WINDOWS\SYSTEM folder, and register it with REGOCX32.EXE.
<P>
Use the SYSINFO.OCX control in your project. It has a number of useful
properties, four of which disclose the size and position of the desktop
area in twips. Follow the steps below:

<OL><P><LI>Start Visual Basic. Form1 is created by default.

<P><LI>Add a Command button to Form1.

<P><LI>From the Tools menu, choose Custom Controls and check the "Microsoft
   System Info" component. If the component is not listed, click the
   browse button and locate SYSINFO.OCX.

<P><LI>Add a SysInfo control to Form1.

<P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Private Sub Command1_Click()

     With SysInfo1
       Print "WorkAreaLeft: " &amp; .WorkAreaLeft / Screen.TwipsPerPixelX
       Print "WorkAreaTop: " &amp; .WorkAreaTop / Screen.TwipsPerPixelY
       Print "WorkAreaWidth: " &amp; .WorkAreaWidth / Screen.TwipsPerPixelX
       Print "WorkAreaHeight: " &amp; .WorkAreaHeight / Screen.TwipsPerPixelY
     End With

   End Sub

</PRE><P><LI>Choose Start from the Run menu, or press the F5 key to run the project.

<P><LI>Click the Command button to observe the size of the work area.
<P>
</OL><h3>Method 2</h3>
 
<P>
The SystemParametersInfo function has many uses, including the ability to
determine the size and position of the desktop. Follow the steps below:

<OL><P><LI>Start Visual Basic. Form1 is created by default.

<P><LI>From the Insert menu, choose Module to add a single code module
   to the project. Module1 is created by default.

<P><LI>Add the following code to Module1:
<P>
   Type RECT
<P><PRE>     Left As Long
     Top As Long
     Right As Long
     Bottom As Long
</PRE>   End Type
<P>
   Public Const SPI_GETWORKAREA = 48
<P>
<PRE>   Declare Function SystemParametersInfo Lib "user32" _
     Alias "SystemParametersInfoA" (ByVal uAction As Long, _
     ByVal uParam As Long, lpvParam As Any, ByVal fuWinIni As Long) _
     As Long

</PRE><P><LI>Add a Command button to Form1.

<P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Private Sub Command1_Click()

     Dim lRet As Long
     Dim apiRECT As RECT

     lRet = SystemParametersInfo(SPI_GETWORKAREA, vbNull, apiRECT, 0)

     If lRet Then
       Print "WorkAreaLeft: " &amp; apiRECT.Left
       Print "WorkAreaTop: " &amp; apiRECT.Top
       Print "WorkAreaWidth: " &amp; apiRECT.Right - apiRECT.Left
       Print "WorkAreaHeight: " &amp; apiRECT.Bottom - apiRECT.Top
     Else
       Print "Call to SystemParametersInfo failed."
     End If

   End Sub

</PRE><P><LI>Choose Start from the Run menu, or press the F5 key to run the project.

<P><LI>Click the Command button to observe the size of the work area.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
SYSINFO.HLP in the \TOOLS\SYSINFO directory on the Visual Basic 4.0 CD-ROM.
<P>
Win32 SDK on the MSDN Visual Basic starter kit. This can be installed by
running SETUP.EXE from the MSDN directory on the Visual Basic 4.0 CD-ROM.
<P>
For more information, please see the following articles on the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q113702.htm">Q113702</A></B>
   TITLE     : How to Control the Placement of Desktop Windows

   ARTICLE-ID: <B><A HREF="../VBWIN/Q97142.htm">Q97142</A></B>
   TITLE     : How to Use SystemParametersInfo API for Control Panel
               Settings
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgOther vb432 vb4win kbhowto<BR>
Version             : 4.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
