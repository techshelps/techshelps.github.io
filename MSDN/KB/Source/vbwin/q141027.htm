

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Quickly Search a List Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141027">
<META NAME="KBModify" CONTENT="1996/01/10">
<META NAME="KBCreate" CONTENT="1995/12/10">
<META NAME="Keywords" CONTENT="kbprg kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  A popular item in a user interface is to  link  a text box to a list box so that as the user types text into the text box, the nearest match in the list box is selected. Although this technique can be implemented fairly easily using pure Visual Bas...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBT6,QBV4,QAH4,QBS0,QAHP,QATX,QAHH,QA4Q,QAMB,QAE1,QAY5,QAFF,QBSO,QBJZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Quickly Search a List Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 10, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141027</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A popular item in a user interface is to "link" a text box to a list box so
that as the user types text into the text box, the nearest match in the
list box is selected. Although this technique can be implemented fairly
easily using pure Visual Basic code, the Windows API provides a quick and
easy way of doing this.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following technique uses the LB_FINDSTRING message for a list box to
locate a partial match for a string in a list box. To do this, call the
Windows API SendMessage function. The SendMessage function requires the
following parameters to list the files:
<P>
<PRE>SendMessage   (hWnd,LB_FINDSTRING, wParam, lparam)

</PRE>where
<P>
<PRE>hWnd    is the hWnd of the list box.
</PRE>wParam  is an integer that specifies the starting point for the search.
<PRE>          Use -1 to search the whole list box.
Lparam   is a long pointer to the string to find.

</PRE><h3>Example to Demonstrate Searching a List Box</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Add a text box (Text1) and a list
   box (list1) to Form1.

<P><LI>On the Visual Basic Insert menu, choose module to add a new code module
   to the project. Add the following code to the General declarations
   section of module1:
<P>
<P><PRE>      #If Win32 Then
<PRE></PRE>         Declare Function SendMessage Lib "user32" Alias "SendMessageA" _
         (ByVal hwnd As Long, ByVal wMsg As Long, ByVal wParam As _
         Integer, ByVal lParam As Any) As Long
      #Else
         Declare Function SendMessage Lib "user" (ByVal hwnd As Integer, _
         ByVal wMsg As Integer, ByVal wp As Integer, lp As Any) As Long
      #End If

      Public Const LB_FINDSTRING = &amp;H18F

</PRE><P><LI>In the Form_Load method for the form, add the following items to the
   list box using the following code:
<P>
<PRE>      Sub Form_Load()
         List1.Clear
         List1.AddItem "Apples"
         List1.AddItem "Banana"
         List1.AddItem "Bread"
         List1.AddItem "Break"
      End Sub

</PRE><P><LI>In the Change method of the text box, add the following code:
<P>
<PRE>      Sub Text1_Change()
         List1.ListIndex = SendMessage(List1.hWnd, LB_FINDSTRING, -1, _
         ByVal Cstr(Text1.Text))
      End Sub

</PRE></OL>If you run the code, typing text into the text box selects the first
item in the list that matches the text in the text box.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbcode kbhowto<BR>
KBSubCategory: APrgDataAcc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 10, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
