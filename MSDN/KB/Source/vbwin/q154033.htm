

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: CDK: VBSetVariantValue GPF with Null Pointer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154033">
<META NAME="KBModify" CONTENT="1996/07/26">
<META NAME="KBCreate" CONTENT="1996/07/25">
<META NAME="Keywords" CONTENT="kbusage kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The 16-bit edition of Visual Basic 4.0 stops with a General Protect Fault in module VB.EXE at 002F:350B.  CAUSE =====  Passing a NULL pointer to the lpData argument of VBSetVariantValue() in the VBAPI library will cause this General Protection Faul...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAD7,QAUD,QAH7,QAH6,QAY5,QBVV,QA5F,QAMA,QA7O,QATX,QAOE,QAMN,QAGI,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: CDK: VBSetVariantValue GPF with Null Pointer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 26, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154033</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional and Enterprise Editions of  Microsoft Visual Basic
   16-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The 16-bit edition of Visual Basic 4.0 stops with a General Protect Fault
in module VB.EXE at 002F:350B.
<P>
<P><h2>CAUSE</h2>
 
<P>
Passing a NULL pointer to the lpData argument of VBSetVariantValue() in the
VBAPI library will cause this General Protection Fault. Normally, you would
not pass a NULL pointer to lpData, but the VBCreateTempHlstr() function is
documented as returning a NULL if you create a TempHLSTR on an empty (zero-
length) string. Because you can call VBSetVariantValue() using a TempHLSTR
to assign a string to a variant, this function should work with a NULL
pointer in the lpData argument, but it doesn't.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Visual Basic 3.0 is not affected by this problem, as the
VBCreateTempHlstr() function will not return a NULL, even for empty
strings. This is the only situation that is documented as acceptable to
pass NULL as the lpData argument.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
There are several workarounds available to you. Choose the one that best
fits your needs:

<OL><P><LI>Avoid using a TempHLSTR to set a variant's value. Instead, use a normal
   HLSTR to set the variant's value instead.
<P>
   You must be sure not to call VBDestroyHlstr() on this HLSTR before you
   return control to Visual Basic. Visual Basic 4.0 simply copies a
   reference to the HLSTR's data in VBSetVariantValue(). Destroying the
   HLSTR before Visual Basic regains control from your function prevents it
   from reading the string data stored by the HLSTR. You may reuse the same
   HLSTR in your function; that is, you do not have to maintain the data in
   the HLSTR after your function has returned control to Visual Basic.
<P>
   NOTE: TempHLSTR values work best when they return a string from a
   function call or are used to retrieve property values from custom
   controls (VBXs). Even though they are documented as being suitable for
   setting variants, there are only a few TempHLSTR spaces available to
   Visual Basic programs; you should use them sparingly.

<P><LI>Instead of trying to return an empty string, pass another variant type.
   For instance, VT_NULL indicates that the variant has no data in it.
<P>
   Be aware that this workaround may affect the behavior of Visual Basic
   programs that have already been compiled using your DLL or custom
   control. If no Visual Basic programs have been compiled using your DLL
   or custom control, this should not be a problem.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb416 CDK CDG DLL VARIANT VBAPI<BR>
KBCategory: kbusage kbbuglist<BR>
KBSubcategory: TlsCDK
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 26, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
