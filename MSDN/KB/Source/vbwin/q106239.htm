

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 How to Create a Screen Saver in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106239">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1993/11/03">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can create a Windows screen saver with Visual Basic by following the guidelines listed below. However, please note that this article gives only a very rough outline of what you should do for a robust screen saver. These are general guidelines o...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAFF,QAMA,QAA8,QDL9,QBWQ,QBWO,QBWN,QAPN,QBWS,QAIB,QAO4,QAJH,QBSO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 How to Create a Screen Saver in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106239</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional, and Enterprise Editions of Microsoft Visual Basic,
   16-bit only, for Windows, version 4.0
<LI>Professional Edition of Microsoft Visual Basic for Windows,
   versions 2.0 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can create a Windows screen saver with Visual Basic by following the
guidelines listed below. However, please note that this article gives only
a very rough outline of what you should do for a robust screen saver. These
are general guidelines only.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Follow these guidelines when creating a Windows screen saver with Visual
Basic:

<UL><LI>In the File Make EXE File dialog, insert the string SCRNSAVE: (in
   upper case) at the beginning of the Application Title. For example:
<P>
   SCRNSAVE:Flying Fish.

<LI>In the File Make EXE File dialog, specify the program file name
   extension as .SCR instead of .EXE.

<LI>Locate the .SCR program file in the \WINDOWS directory.

<LI>Give your form the following property settings so that it
   occupies the entire screen and does not have a title bar:
<P>
<PRE>      Caption     = ""     (no caption)
      ControlBox  = False
      MaxButton   = False
      MinButton   = False
      WindowState = 2      (maximized)

</PRE><LI>Place code in all MouseMove, MouseDown, and KeyDown event handlers
   that exit the program. Because Visual Basic may invoke the MouseMove
   event when the form is first loaded, you must write code to ignore
   the first MouseMove event. The following MouseMove code avoids an
   artifact event that occurs when the application is first activated or
   when the application is running and another instance starts (causing
   loss of focus) and then quits (restoring focus):
<P>
<PRE>   ' VB3Line: Enter the following two lines as one, single line of code:
   Sub Form_MouseMove (Button As Integer, Shift As Integer, _
      X As Single, Y As Single)
      Static count As Integer
      If count &gt; 2 Then
         End
      Else
         count = count + 1
      End If
   End Sub

   This gives you a bit of slack when it comes to artifact MouseMove
   events. You'll want to do something similar with the MouseDown and
   KeyDown events.

</PRE></UL><h3>Preventing Multiple Launches</h3>
 
<P>
Windows usually launches the screen saver program multiple times. To
prevent more than one copy of your screen saver from running, add the
following statements to the Form_Load event handler, or Sub Main if used.
<P>
<PRE>Sub Form_Load ()
   If App.PrevInstance Then
      End
   End If
End Sub

</PRE>There is no reason to attempt to restore the previous instance of the
screen saver as the active window because it will become the active window
when the new instance ends. All you have to do is terminate when you see
another instance running.
<P>
To prevent multiple instances of the application from running as well as to
keep the application running, you should move the code from the Form_Load()
to a Sub Main(). Then set the project's Startup Form Option to Sub Main().
<P>
<PRE>Sub Main ()
   If App.PrevInstance Then   ' If already running, end the application.
      End
   Else
      Form1.Show 1             ' Show the screen saver form.
   End If
End Sub

</PRE><h3>Launching the Screen Saver</h3>
 
<P>
Windows takes care of launching the Screen Saver. It keeps track of system
idle time and launches the screen saver program. You can use a timer
control to periodically draw graphics on the form.
<P>
Screen savers are selected and configured from Windows Control Panel in
the Desktop dialog. The screen saver section of this dialog has a button
labeled Setup that invokes the screen saver program with the command
line option /c. When your program is invoked with this option, you can
display a configuration form to allow the user to select settings such
as speed, number of objects, colors, and so on. Detect the /c command line
parameter by checking the Command$ function. For example:
<P>
<PRE>Sub Form_Load ()
   If Command$ = "/c" Then
      frmConfig.Show   ' display configuration form
      Unload Me        ' bypass regular form
   End If
End Sub

</PRE>When Windows launches the screen saver, it usually specifies the command
line option /s.
<P>
<P><h3>Possible Improvements</h3>
 
<P>
You may also want your program to appear on top of all other windows by
making it a TOPMOST window.
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
ARTICLE-ID: <B><A HREF="../VBWIN/Q84251.htm">Q84251</A></B>
<PRE>TITLE     : How to Create a Topmost or Floating Window in Visual Basic

</PRE>Also, you can find two example programs and a complete explanation showing
how to write your own screen savers in Visual Basic in the following book:
<P>
<PRE>   "Visual Basic Workshop 3.0" by John C. Craig, published by Microsoft
   Press.

</PRE>This article is a rough outline of what you should do for a robust screen
saver. For example, you might want to have the startup be a Sub Main() in
which you check for a previous instance and End if there is one. This would
avoid the form load totally if there were already an instance running. It
might also avoid the artifact MouseMove problem.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>
Additional reference words: 2.00 3.00 4.00 vb416<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
