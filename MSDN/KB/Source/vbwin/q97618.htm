

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE Embedding &amp; Linking Word for Windows Objects into VB Apps </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q97618 ">
<META NAME="KBModify" CONTENT="1995/07/20">
<META NAME="KBCreate" CONTENT="1993/04/15">
<META NAME="Keywords" CONTENT="kbole kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article shows by example how to use the object linking and embedding (OLE) client custom control (OLECLIEN.VBX) with Microsoft Word for Windows. The example demonstrates both how to embed and how to link a Word for Windows document into a Visu...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAPN,QBS0,QBJZ,QAW6,QDL9,QBWQ,QBWO,QBWN,QA9Q,QAMN,QBWS,QAH4,QDO7,QBPG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OLE Embedding &amp; Linking Word for Windows Objects into VB Apps</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q97618 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 2.0
- Microsoft Word for Windows, version 2.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to use the object linking and embedding
(OLE) client custom control (OLECLIEN.VBX) with Microsoft Word for Windows.
The example demonstrates both how to embed and how to link a Word for
Windows document into a Visual Basic application.
<P>
NOTE: In Word for Windows, version 6.0 or 6.0a, the Bookmark menu item
moved from the Insert menu to the View menu.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Embedding an object encapsulates the data displayed in the Visual Basic OLE
client control and makes the data inaccessible to other applications,
unlike the data in an linked object. In addition, embedding an object does
not require that a file already exist for the object to be usable.
<P>
Linking an object, on the other hand, does require that a file already
exist, and it requires a LinkItem setting. For a Word for Windows document,
the LinkItem can be any bookmark within the document.
<P>
The example shown below demonstrates how to use:

<UL><LI>Embedded Word for Windows objects
<LI>Linked Word for Windows objects
<P>
</UL>The following OLE client control property settings are required to create a
Word for Windows OLE object:
<P>
<PRE>   Property   Value
   ----------------------------
   Class      "WordDocument"
   Protocol   "StdFileEditing"

</PRE>In addition, linked objects require the following OLE client control
property settings:
<P>
<PRE>   Property     Value
   -------------------------------------------------------------
   SourceDoc    The full path of the document to use (such as
                 C:\OLETEST.DOC)
   SourceItem   A bookmark (OLE_Link is used in this example)

</PRE>Here are the steps you need to follow to create the example:
<P>
<P><h3>Step One: Create the Word for Windows Document You Want to Link Or Embed</h3>
 
1. Start Word for Windows. Document1 is created by default.

<OL><P><LI>Press CTRL+SHIFT+END to select to the end of the document.

<P><LI>From the Insert menu, choose Bookmark. Under Bookmark Name, type:
<P>
<P><PRE>      OLE_Link
</PRE><P>
   and press ENTER to set a bookmark for the entire document. This bookmark
   functions as the LinkItem.

<P><LI>From the File menu, choose Save As, and save the document with the
   name C:\OLETEST.DOC. (If the path is different, change the ServerDoc
   property on OleClient1 to reflect the correct path.)
<P>
</OL><h3>Step Two: Create the Visual Basic Application That Will Hold the Document</h3>
 
1. Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
<PRE>   if Visual Basic is already running. Form1 is created by default.

</PRE><P><LI>From the File menu, choose Add File and add OLECLIEN.VBX to the project.

<P><LI>Add the following controls to Form1, and give them the properties shown:
<P>
<PRE>   Default Name   Caption                Name
   ----------------------------------------------------
   OleClient1     N/A                    OleClient1
   Option1        &amp;Embed Object          OptionEmbed
   Option2        &amp;Link Object           OptionLink
   Command1       Embed WinWord Object   Command1

</PRE><P><LI>Change the Value property on OptionEmbed to True.

<P><LI>Add the following code to the general declarations section of Form1:
<P>
   Dim fshowing As Integer
<P>
   Const OLE_LINKED = 0
   Const OLE_EMBEDDED = 1
   Const OLE_STATIC = 2
<P>
   Const OLE_CREATE = 0
   Const OLE_CREATE_FROM_FILE = 1
   Const OLE_UPDATE = 6
   Const OLE_ACTIVATE = 7
   Const OLE_DELETE = 10

<P><LI>Add the following code to the click event of Command1:
<P>
<PRE>   Sub Command1_Click ()

      ' Unload the current object so a new object can be loaded
      If fshowing Then
         OleClient1.Action = OLE_DELETE
      End If

      OleClient1.Class = "WordDocument"
      OleClient1.Protocol = "StdFileEditing"
      If OptionEmbed Then
         ' Data is managed by Visual Basic
         OleClient1.ServerType = OLE_EMBEDDED
         OleClient1.Action = OLE_CREATE
      Else
         OleClient1.SourceDoc = "C:\OLETEST.DOC"
         OleClient1.SourceItem = "OLE_Link"
         OleClient1.ServerType = OLE_LINKED
         OleClient1.Action = OLE_CREATE_FROM_FILE
      End If
      OleClient1.Action = OLE_UPDATE
      fshowing = True

   End Sub

</PRE><P><LI>Add the following code to the DblClick event of OleClient1:
<P>
<PRE>   Sub OleClient1_DblClick ()
      OleClient1.Action = OLE_ACTIVATE
   End Sub

</PRE><P><LI>Add the following code to the Click event of OptionEmbed:
<P>
<PRE>   Sub OptionEmbed_Click ()
      Command1.Caption = "Embed WinWord Object"
   End Sub

</PRE><P><LI>Add the following code to the Click event of OptionLink:
<P>
<PRE>   Sub OptionLink_Click ()
      Command1.Caption = "Link WinWord Object"
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT+R, S) to run the program.

<P><LI>Click the Embed WinWord Object button to activate Word for Windows.

<P><LI>Type some text into the active Word document.

<P><LI>Close Word and click the Yes button when asked if you want to update
<P><PRE>    the Object in OleClient1. The Word for Windows icon is painted in the
    OleClient1 control.
</PRE>
<P><LI>Double-click the OLE client control to reactivate Word and redisplay
<P><PRE>    the text you entered.
</PRE>
<P><LI>Click OptionLink. The caption of button changes to Link WinWord Object.

<P><LI>Click the Link WinWord Object button. The Word icon remains in the OLE
<P><PRE>    client control, however it is now linked to the document created in the
    first part of this example, not the embedded object.
</PRE>
<P><LI>Double-click the OLE client control to activate Word for Windows and
<P><PRE>    redisplay the text you entered in the first document.
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: noupd 2.00<BR>
KBCategory: kbole kbprg kbcode<BR>
KBSubcategory: IAPOLE<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
