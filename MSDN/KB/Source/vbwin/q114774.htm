

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Modify SetupKit to Install New Icon &amp; Working Directory </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114774">
<META NAME="KBModify" CONTENT="1996/02/16">
<META NAME="KBCreate" CONTENT="1994/05/11">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using the Visual Basic Setup Toolkit, you can modify the setup program that was created by Setupwizard.  The example shown below modifies your setup program to install a separate icon and default working directory for your program.  You can do this...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIB,QBXT,QA5V,QAA1,QBJZ,QATJ,QAH4,QDI2,QBXB,QBS0,QAMN,QACI,QAFI,QABA,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Modify SetupKit to Install New Icon &amp; Working Directory</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114774</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Edition of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using the Visual Basic Setup Toolkit, you can modify the setup program that
was created by Setupwizard.
<P>
The example shown below modifies your setup program to install a separate
icon and default working directory for your program.  You can do this by
changing the SETUP1A.FRM and SETUP1.BAS source code. You can then make a
new SETUP1.EXE file and new SETUP1.EX_ file on your distribution disk.
<P>
For additional information regarding the updates and other modifications
you can make to the SetupKit, please see the following articles in the
Microsoft Knowledge Base:
<P>
ARTICLE-ID: <B><A HREF="../VBWIN/Q110395.htm">Q110395</A></B>
<PRE>TITLE     : How to Modify Destination Directory of Setupwizard SETUP1.EXE

</PRE>ARTICLE-ID: <B><A HREF="../VBWIN/Q100003.htm">Q100003</A></B>
<PRE>TITLE     : UPD: New Setup Toolkit &amp; Setup Wizard Available for VB ver 3.0

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
The following step-by-step example, is based on an example developed by
Jim St. John:

<OL><P><LI>Run the Setupwizard to create the master distribution disks for your
   product's files. Be sure to include the icon file you want to assign
   to your program.

<P><LI>Start Visual Basic and open the SETUP1A.MAK project. SETUP1A.MAK is
   already on the most recently opened list on the File menu because
   the Setupwizard used it once. The Setupwizard created the SETUP1A.MAK
   project in the C:\VB\SETUPKIT\SETUP1 directory.

<P><LI>Go to the CreateProgManItem subroutine for the SETUP1.BAS module to
   add parameters to the declaration of the subroutine and to modify one
   of the LinkExecute lines. Here's the changed code:
<P>
<PRE>'----------------------------------------------------------
' Procedure: CreateProgManItem
'
' Arguments: X           The form where Label1 exists
'
'            CmdLine$    A string that contains the command
'                        line for the item/icon.
'                        ie 'c:\myapp\setup.exe'
'
'            IconTitle$  A string that contains the item's
'                        caption
'----------------------------------------------------------
Sub CreateProgManItem (x As Form, CmdLine$, IconTitle$)

    ...
    ' Enter the following two lines as one, single line:
    x.Label1.LinkExecute "[AddItem(" + CmdLine$ + Chr$(44) + IconTitle$ +
       Chr$(44) + ",,)]"
    ...

End Sub

</PRE></OL>To add a separate icon and default working directory, modify the above
lines to read as follows:
<P>
<PRE>'----------------------------------------------------------
' Procedure: CreateProgManItem
'
' Arguments: X           The form where Label1 exists
'
'            CmdLine$    A string that contains the command
'                        line for the item/icon.
'                        ie 'c:\myapp\setup.exe'
'
'            IconTitle$  A string that contains the item's
'                        caption
'
'            IconPath$   A string that contains the filename
'                        for the icon to be displayed in the
'                        group window
'
'            IconIndex   Specifies the index of the icon in
'                        the file indicated by the IconPath$
'                        parameter
'                        -1 for default icon
'
'            xPos        Specifies the horizontal position
'                        of the icon in the group window
'                        -1 for next icon in group
'
'            yPos        Specifies the vertical position
'                        of the icon in the group window
'                        -1 for next icon in group
'
'            DefDir$     A string that contains the name of
'                        the default (or working) directory
'                        Win 3.1
'
'            HotKey      Identifies a hot (or shortcut) key
'                        that is specified by the user
'                        Win 3.1
'                       NOTE: For the HotKey parameter, specify the ASCII
'                       value of the desired key. The application can
'                       create a key combination (for example, ALT+SHIFT+A)
'                       by adding one or more of the following values to
'                       the ASCII value for the key:
'
'                                        Decimal
'                          Key           Offset
'                          ---           ------
'                          SHIFT            256
'                          CTRL             512
'                          ALT             1024
'
'                       For example, ALT+SHIFT+A is signified by 1345
'                       (1024+256+65).
'
'            fMinimize   Specifies whether an application
'                        should be minimized when it is
'                        first displayed
'                        Win 3.1
'
'----------------------------------------------------------

' Enter the following two lines as one, single line:
Sub CreateProgManItem (x As Form, CmdLine$, IconTitle$, IconPath$,
   IconIndex, xPos, yPos, DefDir$, HotKey, fMinimize)
   Dim sParam As String
   ...
   ' Add the following lines in place of the single LinkExecute line above
   sParam = CmdLine$ + "," + IconTitle$
   sParam = sParam + "," + IconPath$ + ","
   If IconIndex &gt;= 0 Then sParam = sParam + Format$(IconIndex)
   sParam = sParam + "," + Format$(xPos) + "," + Format$(yPos)
   If gfWin31% Then ' Win 3.1 - additional parameters allowed
      sParam = sParam + "," + DefDir
      sParam = sParam + ","
      If HotKey Then sParam = sParam + Format$(HotKey)
      sParam = sParam + ","
      If fMinimize Then sParam = sParam + Format$(fMinimize)
   End If
   x.Label1.LinkExecute "[AddItem(" + sParam + ")]"
   ...
End Sub

</PRE><P><LI>From the File menu, choose Save File As, and change the name of the
   file from SETUP1.BAS to SETUP1A.BAS. Now, you can use this modified
   version in later distributions of your product.

<P><LI>Modify where you call CreateProgmanItem. Locate the following line of
   code in the Form_Load event of SETUP1A.FRM:
<P>
   CreateProgManItem Setup1, destPath$ + "&lt;your&gt;.EXE", "your title"
<P>
   Change it to read:
<P>
<PRE>   ' The following installs your program's icon setting it to be used
   ' from the the destination directory. It also sets the default working
   ' directory as the windows directory.
   ' Enter the following two lines as one, single line:
   CreateProgManItem Setup1, destPath$ + "&lt;your&gt;.EXE", "your title",
      destPath$ + "your.ico", -1, -1, -1, winDir$, 0, 0

</PRE><P><LI>Modify the line that installs the ODBC administrator. Locate the line
   that reads:
<P>
  CreateProgManItem Setup1, destPath$ + "ODBCADM.EXE", "ODBC Administrator"
<P>
   Change it to read:
<P>
  ' Enter the following three lines as one, single line:
  CreateProgManItem Setup1, destPath$ + "ODBCADM.EXE",
<P><PRE>     "ODBC Administrator", destPath$ + "ODBCADM.EXE", -1, -1, -1,
     destPath$, 0, 0
</PRE>
<P><LI>From the File menu, choose Save Project to save all the changes.

<P><LI>From the File menu, choose Make EXE File to re-create the file
</OL>SETUP1.EXE
<PRE>   in the C:\VB\SETUPKIT\SETUP1 directory.

</PRE><P><LI>Compress and copy this new SETUP1.EXE file to your distribution disk.
   For example, the following command at the MS-DOS prompt compresses
   SETUP1.EXE into SETUP1.EX_ and copies SETUP1.EX_ to Drive A:
<P>
   C:\VB\SETUPKIT\KITFILES\COMPRESS -r SETUP1.EXE A:\
<P>
   This replaces the old SETUP1.EX_ created on the distribution disk by the
   Setupwizard.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 CustomerContrib<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: TlsSetWiz<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
