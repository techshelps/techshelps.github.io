

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use ShellExecute to Launch Associated File (32-bit) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170918">
<META NAME="KBModify" CONTENT="1997/07/03">
<META NAME="KBCreate" CONTENT="1997/07/01">
<META NAME="Keywords" CONTENT="APrgWindow vb432 vb4win vb5all vb5howto kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  You can use the Windows API ShellExecute() function to start the application associated with a given document extension without knowing the name of the associated application. For example, you could start the Paintbrush program by passing the filen...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBQU,QBS0,QAY5,QATX,QAGX,QBBI,QBWS,QBV8,QAB9,QAH6,QDL9,QBWO,QBWN,QAIJ,QAH7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use ShellExecute to Launch Associated File (32-bit)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170918</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the Windows API ShellExecute() function to start the
application associated with a given document extension without knowing the
name of the associated application. For example, you could start the
Paintbrush program by passing the filename ARCADE.BMP to the ShellExecute()
function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ShellExecute function opens or prints the specified file. Following is
the declaration to use when calling this function from Visual Basic:
<P>
<PRE>   Declare Function ShellExecute Lib "shell32.dll" Alias "ShellExecuteA" _
                   (ByVal hwnd As Long, ByVal lpszOp As String, _
                    ByVal lpszFile As String, ByVal lpszParams As String, _
                    ByVal LpszDir As String, ByVal FsShowCmd As Long) _
                    As Long

</PRE>The following table provides descriptions for each parameter:
<P>
<PRE>Parameter     Description
</PRE> 
<P>
<PRE>hwnd          Identifies the parent window. This window receives any
              message boxes an application produces (for example, for error
              reporting).

lpszOp        Points to a null-terminated string specifying the operation
              to perform. This string can be "open" or "print." If this
              parameter is NULL, "open" is the default value.

lpszFile      Points to a null-terminated string specifying the file
              to open.

lpszParams    Points to a null-terminated string specifying parameters
              passed to the application when the lpszFile parameter
              specifies an executable file. If lpszFile points to a string
              specifying a document file, this parameter is NULL.

LpszDir       Points to a null-terminated string specifying the default
              directory.

FsShowCmd     Specifies whether the application window is to be shown when
              the application is opened.

</PRE><h3>Step-by-Step Example</h3>
 
<P>
The following example demonstrates how to start an application or load a
document into its associated application. The Windows API ShellExecute()
function is different from the Visual Basic Shell() function in that you
can pass the ShellExecute() function the name of a document and it will
launch the associated application, and then pass the filename to the
application.

<OL><P><LI>Start a New project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Option Explicit
      
      Private Declare Function ShellExecute Lib "shell32.dll" Alias _
      "ShellExecuteA" (ByVal hwnd As Long, ByVal lpszOp As _
      String, ByVal lpszFile As String, ByVal lpszParams As String, _
      ByVal lpszDir As String, ByVal FsShowCmd As Long) As Long
      
      Private Declare Function GetDesktopWindow Lib "user32" () As Long
      
      Const SW_SHOWNORMAL = 1
</PRE><P>
<P><PRE>      Const SE_ERR_FNF = 2&amp;
      Const SE_ERR_PNF = 3&amp;
      Const SE_ERR_ACCESSDENIED = 5&amp;
      Const SE_ERR_OOM = 8&amp;
      Const SE_ERR_DLLNOTFOUND = 32&amp;
      Const SE_ERR_SHARE = 26&amp;
      Const SE_ERR_ASSOCINCOMPLETE = 27&amp;
      Const SE_ERR_DDETIMEOUT = 28&amp;
      Const SE_ERR_DDEFAIL = 29&amp;
      Const SE_ERR_DDEBUSY = 30&amp;
      Const SE_ERR_NOASSOC = 31&amp;
      Const ERROR_BAD_FORMAT = 11&amp;
      
      Function StartDoc(DocName As String) As Long
<PRE></PRE>          Dim Scr_hDC As Long
          Scr_hDC = GetDesktopWindow()
          StartDoc = ShellExecute(Scr_hDC, "Open", DocName, _
          "", "C:\", SW_SHOWNORMAL)
      End Function
      
      Private Sub Form_Click()
          Dim r As Long, msg As String
          r = StartDoc("C:\WINDOWS\ARCADE.BMP")
          If r &lt;= 32 Then
              'There was an error
              Select Case r
                  Case SE_ERR_FNF
                      msg = "File not found"
                  Case SE_ERR_PNF
                      msg = "Path not found"
                  Case SE_ERR_ACCESSDENIED
                      msg = "Access denied"
                  Case SE_ERR_OOM
                      msg = "Out of memory"
                  Case SE_ERR_DLLNOTFOUND
                      msg = "DLL not found"
                  Case SE_ERR_SHARE
                      msg = "A sharing violation occurred"
                  Case SE_ERR_ASSOCINCOMPLETE
                      msg = "Incomplete or invalid file association"
                  Case SE_ERR_DDETIMEOUT
                      msg = "DDE Time out"
                  Case SE_ERR_DDEFAIL
                      msg = "DDE transaction failed"
                  Case SE_ERR_DDEBUSY
                      msg = "DDE busy"
                  Case SE_ERR_NOASSOC
                      msg = "No association for file extension"
                  Case ERROR_BAD_FORMAT
                      msg = "Invalid EXE file or error in EXE image"
                  Case Else
                      msg = "Unknown error"
              End Select
              MsgBox msg
          End If
      End Sub

</PRE><P><LI>Run the project and click the form.
<P>
</OL><h3>General Information About the Process</h3>
 
<P>
If the function succeeds, the return value is the instance handle of the
application that was run. If there was an error, the return value is less
than or equal to 32.
<P>
The file specified by the lpszFile parameter can be a document file or an
executable file. If it is a document file, this function opens or prints it
depending on the value of the lpszOp parameter. If it is an executable
file, this function opens it even if the lpszOp specifies "PRINT."
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Programmer's Reference, Volume 2: Functions" of the Microsoft Windows
Software Development Kit (SDK), pages 901-904
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgWindow vb432 vb4win vb5all vb5howto kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
