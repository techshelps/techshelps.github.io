

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 How to Size a Picture Box Dynamically to Fit an AVI Image </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126742">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1995/03/01">
<META NAME="Keywords" CONTENT="kbprb kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  To size a picture box to fit an AVI image at run time, you must first get the dimensions of the AVI file. This article shows you how to do it.  MORE INFORMATION  The example uses the mciSendCommand function to get the dimensions of the AVI file cur...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYS,QA4Q,QAH4,QAYA,QBS0,QACJ,QAB9,QAPN,QBV8,QDK0,QBXT,QA7O,QA5V,QAUD,QAOE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 How to Size a Picture Box Dynamically to Fit an AVI Image</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126742</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To size a picture box to fit an AVI image at run time, you must first get
the dimensions of the AVI file. This article shows you how to do it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The example uses the mciSendCommand function to get the dimensions of the
AVI file currently referenced by an MCI control.
<P>
<P><h3>Step-by-Step Example Demonstrates How to Get the Dimensions of an AVI file</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Add a module (.BAS) file, and make
   sure the MCI control is included in the project. Add a MCI control
   (MMControl1), a Command Button (Command1), and a Picture box (Picture1)
   to Form1. Set Form1's ScaleMode property to Pixels (3).

<P><LI>In the General declarations section of the .BAS file, add this code:
<P>
   Type RECT
<P><PRE>      left As Integer
      top As Integer
      right As Integer
      bottom As Integer
</PRE>   End Type
<P>
   Type MCI_OVLY_RECT_PARMS
<P><PRE>      dwCallback As Long
      rc As RECT
</PRE>   End Type
<P>
   Global Const MCI_OVLY_WHERE_SOURCE = &amp;H20000
   Global Const MCI_OVLY_WHERE_DESTINATION = &amp;H40000
   Global Const MCI_WHERE = &amp;H843
<P>
<PRE>   ' Enter the following Declare statement on one, single line:
   Declare Function mciSendCommand Lib "mmsystem" (ByVal udeviceid As
      Integer, ByVal uMessage As Integer, ByVal dwParam1 As Long, dwParam2
      As Any) As Long

   ' Enter the following Declare statement on one, single line:
   Declare Function mciGetErrorString Lib "mmsystem" (ByVal wError As
      Long, ByVal lpstrBuffer As String, ByVal uLength As Integer) As
      Integer

</PRE><P><LI>In the Command1_Click() method for the command button on Form1, enter
   this code:
<P>
<PRE>   Sub Command1_Click ()
      Const MB_OK = 0
      Const MB_ICONSTOP = 16

      Dim Retval&amp;, Buffer$
      Dim dwParam2 As MCI_OVLY_RECT_PARMS

      MMControl1.Command = "Close"
      MMControl1.Filename = "WndSurf1.avi"  ' Sample AVI file to be played.

      ' Get the MCI control to display the video in Picture1:
      MMControl1.hWndDisplay = Picture1.hWnd

      MMControl1.Command = "Open"

      ' Initialize the structure being passed with mciSendCommand, and
      ' set it in case you want to use the Notify property:
      dwParam2.dwCallback = MMControl1.hWnd
      dwParam2.rc.left = 0
      dwParam2.rc.top = 0
      dwParam2.rc.right = 0
      dwParam2.rc.bottom = 0

      ' Send the message:
      ' Enter the following two lines as one, single line of code:
      Retval&amp; = mciSendCommand(MMControl1.DeviceID, MCI_WHERE,
         MCI_OVLY_WHERE_SOURCE, dwParam2)

      If Retval&amp; &lt;&gt; 0 Then  ' An error occurred.
         Buffer$ = Space$(100)
         ' Get a description of the error:
         Retval&amp; = mciGetErrorString(Retval&amp;, Buffer$, Len(Buffer$))
         MsgBox Trim$(Buffer$), MB_OK + MB_ICONSTOP, "ERROR"
      Else
         ' Resize the picture box:
         Picture1.Width = dwParam2.rc.right - dwParam2.rc.left
         Picture1.Height = dwParam2.rc.bottom - dwParam2.rc.top

         ' Play the video:
         MMControl1.Wait = True ' Wait for the next command to complete
         MMControl1.Command = "play" 'Play the video clip
         MMControl1.Command = "close"
      End If
   End Sub

</PRE><P><LI>Test the program. Press F5 to run it, and click the command button. The
   AVI file will play back in the picture box, which will have been resized
   to fit the video clip exactly.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgWindow<BR>
Additional reference words: 3.00 MCI AVI<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
