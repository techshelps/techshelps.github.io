

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: SSCommand Click Fired with Double-Click in Common Dialog </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149277">
<META NAME="KBModify" CONTENT="1996/10/03">
<META NAME="KBCreate" CONTENT="1996/03/29">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Double-clicking a file name in a common dialog box that happens to be displayed immediately above an SSCommand button will cause the Click event for the SSCommand button to be fired.  WORKAROUND  This problem can be worked around in two ways. The e...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA01,QAH4,QBWS,QAPN,QBS0,QABA,QAFF,QA5D,QAFI,QANX,QAJD,QAUD,QATK,QAO4,QAM5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: SSCommand Click Fired with Double-Click in Common Dialog</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 3, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149277</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Double-clicking a file name in a common dialog box that happens to be
displayed immediately above an SSCommand button will cause the Click event
for the SSCommand button to be fired.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
This problem can be worked around in two ways. The easiest and quickest
route is to replace all SSCommand buttons with regular command buttons. The
regular command button does not show this behavior.
<P>
Another alternative is to set the enabled property of the SSCommand button
to false immediately before showing the common dialog box. If this route is
taken then a timer must be utilized to switch the enabled property of the
SSCommand back to True. If Enabled is set to true immediately after the
common dialog box returns (or even after a delay loop), the SSCommand will
still have its click event fired. The following is a step-by-step example
for this fix (this can be followed after the reproduction sample below):

<OL><P><LI>Add a single timer control to the form.

<P><LI>Set these properties of the timer control:
<P>
<PRE>   Enabled:    False
   Interval:      1

</PRE><P><LI>Add this code to the Timer1_Timer event:
<P>
<PRE>   Private Sub Timer1_Timer()
      SSCommand1.Enabled = True
      Timer1.Enabled = False
   End Sub

</PRE><P><LI>In code, add this line immediately before the common dialog is shown:
<P>
   SSCommand1.Enabled = False

<P><LI>Add this line of code immediately after the common dialog is shown:
<P>
   Timer1.Enabled = True
<P>
</OL>This code will turn off the SSCommand immediately before showing the common
dialog box. When the dialog box returns, the timer will be enabled, its
event will fire 1 millisecond later, re-enabling the SSCommand, and then it
will turn itself off.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be an issue in the Microsoft products
listed at the beginning of this article. Microsoft is researching this
problem and will post new information here in the Microsoft Knowledge Base
as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce</h3>
 

<OL><P><LI>Start Visual Basic 4.0. Form1 is created by default.

<P><LI>Add a single SSCommand button to the form. Size the button to be very
   large so that the reproduction is easier to accomplish.

<P><LI>Add an additional regular command button and a single common dialog box
   control.

<P><LI>Add this code to Form1:
<P>
<PRE>   Private Sub SSCommand1_Click()
      MsgBox "SSCommand clicked"
   End Sub

   Private Sub Command1_Click()
      CommonDialog1.Filter = "(*.txt)|*.txt"
      CommonDialog1.ShowOpen
   End Sub

</PRE><P><LI>Press F5 or select Start from the Run menu to run the application. Click
   on the regular command button to display the Open common dialog box.
   Ensure that the common dialog box is positioned such that a file name is
   immediately over the SSCommand. Double-click the file name, and see
   that, after the common dialog box is dismissed, a message box is
   displayed indicating that the SSCommand button has been clicked.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsCus
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 3, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
