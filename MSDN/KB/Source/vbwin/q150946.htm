

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Setup Hangs While "Updating System Files" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150946">
<META NAME="KBModify" CONTENT="1997/04/07">
<META NAME="KBCreate" CONTENT="1996/05/13">
<META NAME="Keywords" CONTENT="kbsetup Setins vb416 vb4win kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  During the installation of Visual Basic 4.0, the computer hangs at the end of the setup while the  Updating System Files  dialog is displayed. Performing a CTRL+ALT+DELETE usually frees the system and shows a General Protection Fault in REGOCX16.EX...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAA1,QAMN,QAB5,QA7O,QAOE,QDI2,QBJZ,QA5F,QAMA,QAHV,QDIZ,QA01,QAUD,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Setup Hangs While "Updating System Files"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150946</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
During the installation of Visual Basic 4.0, the computer hangs at the
end of the setup while the "Updating System Files" dialog is displayed.
Performing a CTRL+ALT+DELETE usually frees the system and shows a
General Protection Fault in REGOCX16.EXE.
<P>
The Visual Basic 4.0 setup installs all of the program files and then
attempts to register the components that need registering. OLE automation
servers and OCX Custom Controls are self-registering. This means that the
function within them that causes the control to write its registration
information to the registry must be called by some other application. The
Visual Basic 4.0 setup program uses the registration utility REGOCX16.EXE
to call the function in the control that performs the registration.
<P>
In some cases, other OCX Custom Controls have exhibited the same behavior
as described above.
<P>
<P><h2>CAUSE</h2>
 
<P>
The problem is not with the REGOCX16.EXE file, as the General Protection
Fault might indicate. Rather, the cause is with the OCX Custom Controls.
The problem appears to a timing issue caused by a combination of the OCX
registration code, the operating system and BIOS/hardware caching
algorithms.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Four of the most troublesome controls have been fixed in the maintenance
release of Visual Basic 4.0. Any customer with this problem is eligible for
the upgrade free-of-charge. Contact Visual Basic Technical Support for the
update.
<P>
The following controls have been updated:
<P>
<PRE>   COMDLG16.OCX
   PICCLP16.OCX
   MSOUTL16.OCX
   DBLIST16.OCX

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>RESOLTION</h2>
 
<P>
<P><h3>Procedure for Replacing Regocx16 During Setup</h3>
 

<OL><P><LI>Obtain the updated registration utility by using the following methods:
<P>
   a. This file ships with Microsoft Visual C/C++ version 1.52. It is named
<P><PRE>      REGSVR.EXE. Rename it to REGOCX16.EXE.
</PRE><P>
   b. Contact Visual Basic Support for the file.
<P>
</OL>NOTE: This file is not really an update. It is simply a different version.
that displays message boxes that seem to suppress the problem.

<OL><P><LI>Uninstall Visual Basic:
<P>
   a. Run the Visual Basic Setup and Remove All. This is not always
<P><PRE>      possible given the nature of the problem.
</PRE><P>
   b. Delete the directory that Visual Basic was installed into.
<P>
   c. Delete OC25.DLL from the \WINDOWS\SYSTEM directory.
<P>
   d. Delete all *.OCA and *.OCX files from the \WINDOWS\SYSTEM directory.

<P><LI>Where applicable, go into the CMOS/BIOS settings and disable all caches.

<P><LI>Start the Visual Basic 4.0 16-bit installation.

<P><LI>Replace the REGOCX16.EXE file.
<P>
   a. The first dialog has a caption that reads "Microsoft Visual Basic
<P><PRE>      4.0-16-bit Setup". At this time, go to the File Manager. From the
      View menu, go to the submenu By File Type... and select Show
      Hidden/System Files.
</PRE><P>
   b. Search your hard drives for a subdirectory (it has the hidden
<P><PRE>      attribute set) named ~mssetup.t. Change to that subdirectory. Look
      for another subdirectory named ~msstfqf.t.(you should now be in
      c:\~mssetup.t\~msstfqf.t, where c: is one of your hard drives.)
</PRE><P>
   c. From File Manager, select the file REGOCX16.EXE. Go to the
<P><PRE>      Properties submenu under the File menu. Deselect the read-only
      attribute. This allows you to replace the REGOCX16.EXE file.
</PRE><P>
   d. Copy updated REGOCX16.EXE to this location (c:\~mssetup.t\~msstfqf.t,
<P><PRE>      where c: is one of your hard drives).
</PRE><P>
   e. After replacing REGOCX16.EXE, set the attribute for the new one back
<P><PRE>      to read-only.
</PRE><P>
   f. Quit File Manager.

<P><LI>Go back to the installation screen and continue with installation.
   Ignore all registration message boxes until the installation is
   complete.
<P>
</OL>NOTE: The above procedure has proven to be ineffective on some machines. If
the procedure fails, follow the steps to make Visual Basic 4.0 function on
the machine. Some of the controls may not register and may not be usable
but the Visual Basic environment and most of the controls will be
completely functional. There are VBX versions of many of the 16-bit OCX
Custom Controls shipped with Visual Basic 3.0. These files can be used in
place of the OCX version of the controls and can be obtained from the
Visual Basic 3.0 CD-ROM or diskettes, or by calling Microsoft Visual Basic
Technical Support.
<P>
<P><h3>Registering Visual Basic Manually</h3>
 

<OL><P><LI>Run the Visual Basic setup until it stops responding.

<P><LI>Reboot the machine, and start Windows.

<P><LI>Start the File Manager, and select \SETUP directory on the Visual
   Basic CD-ROM.

<P><LI>Use the EXTRACT.EXE utility to find and decompress the Visual Basic
   registration file:
<P>
   On the File menu, in the Run dialog box, type:
<P>
   EXTRACT.EXE /A /L C:\WINDOWS\ VB4-1.CAB *.REG,
<P>
   where C:\WINDOWS\ is the windows directory of the machine, and press
   the ENTER key.

<P><LI>Use REGEDIT.EXE to register the registration files:
<P>
   On the File menu, in the Run dialog box, type:
<P>
   REGEDIT.EXE OLE2.REG and press the ENTER key.
<P>
   Then type REGEDIT.EXE VBxxx.REG, and press the ENTER key,
   where xxx is PRO or ENT depending on the version.

<P><LI>Remove the OCX Custom Control references in the AUTO16LD.VBP.
<P>
   a. Open the file AUTO16LD.VBP in Notepad in the Visual Basic directory.
<P>
   b. Delete all lines that begin with "Object=". These are references to
<P><PRE>      OCX controls that will not be registered.
</PRE><P>
   c. Save the file, and exit Notepad.

<P><LI>Launch Visual Basic. It should now run properly.

<P><LI>From the Tools menu, in Custom Controls, add any OCX that you
   choose. Do this by using the Browse button and selecting the file.
   Visual Basic registers the control and adds it to the project. All of
   the controls will be in the \WINDOWS\SYSTEM directory with the extension
   *.OCX. One or more of the controls may hang the machine when Visual
   Basic attempts to register them. These controls will not be usable, but
   Visual Basic should still provide enough functionality and have enough
   functioning controls to satisfy most programmers. Some of the supporting
   DLL, TLB, and OLB files may not be properly registered. They can be
   registered and used in the References dialog in the same manner as the
   Custom Controls.
<P>
</OL>NOTE: The OCX Custom Controls may cause similar problems with installation
disks created using the Setup Wizard or a third-party setup utility.
Register the incorrect controls manually using the REGSVR.EXE utility with
CMOS/BIOS caches disabled (wherever possible).
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbsetup Setins vb416 vb4win kbprb<BR>
Version             : 4.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
