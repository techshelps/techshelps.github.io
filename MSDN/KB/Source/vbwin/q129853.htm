

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Exceeded Limits on Array Sizes of User Defined Types </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129853">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbprg kbprb kberrmsg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When compiling code that has user-defined types containing arrays of variable-length strings you may get this error:      Fixed or static data can't be larger than 64K   CAUSE =====  You exceeded the data limitations of a user-defined type. As stat...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QBS0,QAP2,QAYY,QAR6,QABN,QAO3,QAO2,QALM,QADF,QDIZ,QBW5,QALG,QAH4,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Exceeded Limits on Array Sizes of User Defined Types</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129853</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When compiling code that has user-defined types containing arrays of
variable-length strings you may get this error:
<P>
<PRE>   "Fixed or static data can't be larger than 64K"

</PRE><h2>CAUSE</h2>
 
<P>
You exceeded the data limitations of a user-defined type. As stated in the
Programmer's Guide for Microsoft Visual Basic version 4.0:
<P>
<PRE>   No variable of a user-defined type can exceed 64K, though the sum of
   variable-length strings in a user-defined type may exceed 64K
   (variable-length strings occupy only 4 bytes in the user-defined type;
   the actual contents of a string are stored separately. User-defined
   types can be defined in terms of other user-defined types, but the total
   aggregate size of the types cannot exceed 64K.

</PRE><h2>RESOLUTION</h2>
 
<P>
Consider the following example code:
<P>
Type MyData1
<PRE>   sdata(80) As String
</PRE>End Type
<P>
Type MyData2
<PRE>   uset(300) as MyData1
</PRE>End Type
<P>
The amount of storage required is 80*4*300 or 96000 bytes, which exceeds
the 64K limit.
<P>
<P>
In Visual Basic version 4.0, the pointers to the string data are far
pointers that use both the segment and offset addresses, so the pointers to
the string data and the string data itself do not compete for space in the
same 64K data segment.
<P>
Therefore, because the string content is stored separately and the string
data can be stored in a different data segment from the pointers, you can
store large amounts of data in arrays of variable-length strings in
user-defined types. However, because the pointers to the string data are
far and each requires four bytes in the user-defined type, you must design
your data storage scheme to store more data in fewer elements.
<P>
In the above example, you need to decrease the dimension of uset(300) to
approximately uset(200), and store more data in the elements of sdata in
order to take advantage of how strings are stored internally.
<P>
In most cases, you can create an object with the data storage you require.
The exception is if you require a user-defined type to map an external data
structure in a DLL. In this case, you need to design your data storage
scheme such that you store a large amount of data in fewer elements in
arrays of variable-length strings.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbprb kberrmsg<BR>
KBSubcategory: PrgOpt PrgOptMemMgt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
