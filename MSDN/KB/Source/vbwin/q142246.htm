

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Sequential File I/O Does Not Handle Embedded Nulls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142246">
<META NAME="KBModify" CONTENT="1996/01/12">
<META NAME="KBCreate" CONTENT="1996/01/08">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Using sequential file I/O to read in file that contains embedded null characters (characters with an ANSI value of 0) can cause Visual Basic 4.0 to generate the following error message,  Run-time error '62': Input past end of file .  STATUS ====== ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB4,QAH4,QDMU,QA06,QBWS,QAYY,QAKC,QA6A,QAYL,QAVX,QAVW,QAIJ,QDKW,QAAP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Sequential File I/O Does Not Handle Embedded Nulls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142246</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using sequential file I/O to read in file that contains embedded null
characters (characters with an ANSI value of 0) can cause Visual Basic 4.0
to generate the following error message, "Run-time error '62': Input past
end of file".
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be an issue in the Microsoft products
listed at the beginning of this article. Microsoft is researching this
issue and will post new information here in the Microsoft Knowledge Base as
it becomes available.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
You can work around this behavior by opening the sequential file as a
binary file and manipulating the sequential file as a binary file using the
Get and Put statements to set and retrieve file data.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The code sample shown creates a one dimensional byte array with ten
elements and fills the array with the number 65 except for the eighth
element. This element contains the number 0--a null character. When you run
this program, an error message is displayed.
<P>
<P><h3>Steps to Reproduce</h3>
 

<OL><P><LI>Start Visual Basic 4.0, or if it is already running, click New Project
   on the File menu.

<P><LI>Add a command button to Form1.

<P><LI>Add the following code to the Form1 code window:
<P>
<P><PRE>      Private Sub Command1_Click()
<PRE></PRE>         Close
         Dim b(10) As Byte

         'Assign the following numbers to the array elements.
         b(0) = 65
         b(2) = 65
         b(4) = 65
         b(6) = 65
         b(8) = 0

         'Set the byte value to a string variable
         s$ = b

         'Send the contents of string variable to a sequential file
         Open "C:\test.dat" For Output As #1
         Print #1, s$
         Close #1

         'Open the file to receive data
         Open "C:\test.dat" For Input As #1
         t$ = Input(LOF(1), #1)
         Close #1
      End Sub

</PRE><P><LI>Press the F5 key to start the program. The error, "Run-time error'62':
   Input past end of file" displays. This error is raised when using the
   Input function to read the contents of the file.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q140354.htm">Q140354</A></B>
   TITLE     : BUG: Input Function Doesn't Ignore EOF
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all sequential file<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgOther
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
