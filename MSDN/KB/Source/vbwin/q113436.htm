

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Drag Data from a Grid to a List Box in VB 3.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113436">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/04/04">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article shows by example how to select a cell from a grid control and drag the selection to a list box control. The sample code uses data from the BIBLIO.MDB database that came with Visual Basic. The data will be used to populate the Grid cont...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9N,QBVR,QAN0,QAH4,QAMN,QAM9,QALX,QAFF,QA7O,QAOE,QAB5,QBS0,QA5V,QANF,QAIB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Drag Data from a Grid to a List Box in VB 3.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113436</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to select a cell from a grid control
and drag the selection to a list box control. The sample code uses data
from the BIBLIO.MDB database that came with Visual Basic. The data will
be used to populate the Grid control.
<P>
By using the technique demonstrated in this article, you will have the
ability to allow your users to click on any line of the grid control and
drag the data to a sorted list box control. You could use this to build
documents that contain certain fields of data from a database.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Example of Dragging and Dropping from a Grid Control to a List Box</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a List box (List1) and a Grid (Grid1) to the form.

<P><LI>Place the following code in the general declarations section of
   the form:
<P>
<PRE>   ' Dragging is a flag used for each control to determine
   ' if something is being dragged.
   Dim dragging As Integer
   Dim text_to_drag$

</PRE><P><LI>Add the following code to the Form_Load event procedure:
<P>
<PRE>   Sub Form_Load ()
      ' Initialize the grid control:
      Grid1.Cols = 3
      Grid1.Rows = 60
      Dim db As database
      Dim ds As dynaset
      Dim counter%
      grid1.ColWidth(1) = 3000      'For Author name
      grid1.ColWidth(2) = 1000      'For Author ID
      grid1.Col = 1
      grid1.Row = 0
      grid1.Text = "Author Name"    'Header for Author Name
      grid1.Col = 2
      grid1.Row = 0
      grid1.Text = "Author ID"      'Header for Author ID
      Set db = OpenDatabase("BIBLIO.MDB")
      Set ds = db.CreateDynaset("Authors")
      counter% = 1                  'Start counter at Row=1
      Do Until ds.EOF Or counter% = 60
         grid1.Col = 1
         grid1.Row = counter%
         grid1.Text = "" &amp; ds(1)       'Load the Author Name
         grid1.Col = 2
         grid1.Row = counter%
         grid1.Text = "" &amp; ds(0)       'Load the Author ID
         counter% = counter% + 1
         ds.MoveNext
      Loop
      ds.Close
      db.Close
   End Sub

</PRE><P><LI>Add the following code to the Grid1_Click event procedure:
<P>
<PRE>   Sub Grid1_Click ()
      ' Highlight entire row:
      Dim highlight%
      highlight% = grid1.Row
      grid1.SelStartRow = highlight%
      grid1.SelEndRow = highlight%
      grid1.SelStartCol = 1
      grid1.SelEndCol = 2
   End Sub

</PRE><P><LI>Add the following code to the Grid1_DragDrop event procedure:
<P>
<PRE>   Sub Grid1_DragDrop (Source As Control, X As Single, Y As Single)
      grid1.Drag 0
      dragging = False
   End Sub

</PRE><P><LI>Add the following code to the Grid1_MouseDown event procedure:
<P>
<PRE>   ' Enter the following two lines as one, single line:
   Sub Grid1_MouseDown (Button As Integer, Shift As Integer,
      X As Single, Y As Single)
      ' If the mouse goes down, set the dragging flag in case this
      ' is for a drag:
      Dim selected%
      dragging = True
      selected% = grid1.Row
      grid1.Col = 1
      text_to_drag$ = Trim$(grid1.Text)
   End Sub

</PRE><P><LI>Add the following code to the Grid1_MouseMove event procedure:
<P>
<PRE>   ' Enter the following two lines as one, single line:
   Sub Grid1_MouseMove (Button As Integer, Shift As Integer, X As
      Single, Y As Single)
      ' If the dragging flag was set, then we will enable the drag
      ' MouseDown has to set the flag first
      If dragging Then
         dragging = False  ' Cancel the flag.
         grid1.Drag 1      ' Start the drag mode.
      Else
         grid1.Drag 0      ' Cancel if flag was not set.
      End If
   End Sub

</PRE><P><LI>Add the following code to the Grid1_MouseUp event procedure:
<P>
<PRE>   ' Enter the following two lines as one, single line:
   Sub Grid1_MouseUp (Button As Integer, Shift As Integer, X As
      Single, Y As Single)
      ' Mouse released on text box, so cancel the dragging mode:
      grid1.Drag 0
      dragging = False
   End Sub

</PRE><P><LI>Add the following code to the List1_DragDrop event procedure:
<P>
<P><PRE>    Sub List1_DragDrop (Source As Control, X As Single, Y As Single)
       List1.AddItem text_to_drag$  ' This inserts the text.
    End Sub
</PRE>
<P><LI>Run the program.
<P>
</OL>Select an item from Grid1. Hold the mouse button down and drag the gray
outline toward the List box. Then drop the item in the List1 box control by
releasing the mouse button..
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataAcc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
