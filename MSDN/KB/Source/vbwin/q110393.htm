

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Remove Menu Items from a Form's Control-Menu Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110393">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1994/01/20">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Control-menu box is located in the upper-left corner of a Visual Basic form. You can remove certain menu items from the Control-menu box by using the using form's MaxButton, MinButton, and BorderStyle properties. You can also remove Control-men...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAEF,QBTM,QAPN,QA9N,QANJ,QDH6,QBW1,QAVI,QABA,QBXS,QACI,QDKD,QAA1,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Remove Menu Items from a Form's Control-Menu Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110393</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Control-menu box is located in the upper-left corner of a Visual Basic
form. You can remove certain menu items from the Control-menu box by using
the using form's MaxButton, MinButton, and BorderStyle properties. You can
also remove Control-menu items by using Windows API functions, as shown in
a sample program in the More Information section below.
<P>
To completely remove the Control-menu box, set the form's ControlBox
property to False.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The default Control-menu box in the upper left-hand corner of a Visual
Basic form contains the following nine entries, including separators:
<P>
<PRE>   Restore
   Move
   Size
   Minimize
   Maximize
   -----------------------
   Close            Alt+F4
   -----------------------
   Switch to...   Ctrl+Esc

</PRE>You can remove certain menu items from the Control-menu box by using a
form's MaxButton, MinButton, and BorderStyle properties:
<P>
MaxButton property:
<P>
Setting the MaxButton property to False at design time removes the Maximize
item in the Control-menu box and also removes the Maximize arrow in the
upper right corner of the form. Setting MaxButton to be False also prevents
a double-click on the title bar from maximizing the form.
<P>
MinButton property:
<P>
Setting the MinButton property to False at design time removes the Minimize
item in the Control-menu box and also removes the minimize arrow in the
upper right corner of the form.
<P>
BorderStyle property:
<P>
<PRE>   Setting    Description
   ----------------------------------------------------------------------
     0        No border and no related border elements.

     1        Fixed Single. Can include Control-menu box, title bar,
              Maximize button, and Minimize button. Resizable only using
              Maximize and Minimize buttons.

     2        (Default) Sizable. Resizable using any of the optional border
              elements listed for setting 1.

     3        Fixed Double. Can include Control-menu box and title bar;
              cannot include Maximize or Minimize buttons. Not resizable.

</PRE><h3>Example Uses API Functions to Remove Control-Menu Items</h3>
 
<P>
The following program invokes Windows API functions to remove all items in
the Control-menu box except for Restore and Minimize.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.
<P>
   NOTE: In this program, the following Form properties should be left with
   their design-time defaults: ControlBox = True, MaxButton = True,
   MinButton = True. The API functions will make the necessary changes to
   the form's properties.

<P><LI>Add the following to the Form Load event code:
<P>
<PRE>   Sub Form_Load ()

      Dim hSysMenu%, r%, j%, dw&amp;, rr&amp;
      Const MF_BYPOSITION = &amp;H400
      ' Me refers to the form where code is currently executing:
      hSysMenu = GetSystemMenu(Me.hWnd, 0)
      For j = 8 To 4 Step -1
         r = RemoveMenu(hSysMenu, j, MF_BYPOSITION)
      Next j
      For j = 2 To 1 Step -1
         r = RemoveMenu(hSysMenu, j, MF_BYPOSITION)
      Next j
      ' Leave the Restore and Minimize items.
      dw&amp; = GetWindowLong(Me.hWnd, -16)   'Window style
      dw&amp; = dw&amp; And &amp;HFFFEFFFF    'Turn off bits for Maximize arrow button
      rr&amp; = SetWindowLong(Me.hWnd, -16, dw&amp;)

   End Sub

   The default Control-menu items are numbered 0 through 8 from the top
   down. You may remove any or all items using Windows API functions. Be
   sure to remove items in reverse sequence, from 8 to 0, or else the
   numbering will become confused.

</PRE><P><LI>Add a command button to the form. Double-click the command button and
   add the following code to the Command1 click event:
<P>
<PRE>   Sub Command1_Click ()
      End
   End Sub

   This button lets you end the program, since Close is removed from the
   Control-menu box.

</PRE><P><LI>Add the following Declare statements to the general declarations
   section:
<P>
<PRE>   ' Enter each of the following Declare statements as one, single line:
   Declare Function RemoveMenu% Lib "User" (ByVal hMenu%, ByVal nPosition%,
      ByVal wFlags%)
   Declare Function GetSystemMenu% Lib "User" (ByVal hWnd%, ByVal revert%)
   Declare Function GetWindowLong Lib "User" (ByVal hWnd As Integer,
      ByVal nIndex As Integer) As Long
   Declare Function SetWindowLong Lib "User" (ByVal hWnd As Integer,
      ByVal nIndex As Integer, ByVal dwNewLong As Long) As Long

</PRE><P><LI>Start the program, or press the F5 key.
<P>
</OL>The form's Control menu shows Restore (grayed) and Minimize. Double-
clicking the title-bar doesn't maximize the form, as desired.
<P>
Clicking the Minimize arrow or choosing the Minimize menu item minimizes
the form to an icon. A single-click on that icon does not open a control-
menu, unlike normal Visual Basic application icons. A double-click is
required to restore the form to its full-screen state.
<P>
<P><h3>Creating a Form with No Title Bar</h3>
 
<P>
To create a Microsoft Visual Basic for Windows form with a border but
with no title bar, the Caption property of a form must be set to a
zero-length string; the BorderStyle property must be set to Fixed
Single (1), Sizable (2) or Fixed Double; and the ControlBox, MaxButton
and MinButton properties must be set to False (0).
<P>
If any text (including spaces) exists for the Caption property or if the
ControlBox, MaxButton, or MinButton property is set to True, a title bar
will appear on the form. Note that setting the BorderStyle property to None
(0) will always make a form with no title bar.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>"Microsoft Visual Basic Version 3.0: Programmer's Guide" pages 97-98.

<LI>"PC Magazine's Visual Basic Programmer's Guide to the Windows API" by
   Daniel Appleman (of Desaware), published by Ziff-Davis Press, pages 414
   and 418. This reference describes most Windows API functions that can
   be used from within Visual Basic.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
