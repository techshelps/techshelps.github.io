

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VB3 Connecting to a Network Drive by Using WNetAddConnection </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94679 ">
<META NAME="KBModify" CONTENT="1997/01/09">
<META NAME="KBCreate" CONTENT="1993/01/13">
<META NAME="Keywords" CONTENT="kbnetwork kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Windows version 3.1 provides a new API Call, WNetAddConnection, which will redirect a local device to a shared resource or network server.  WNetAddConnection requires the name of the local device, the name of the network resource, and the password ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAGX,QAVZ,QAIM,QAH4,QAB5,QAY5,QAUJ,QBQU,QDL9,QBWO,QBWN,QAB4,QAB9,QAI5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>VB3 Connecting to a Network Drive by Using WNetAddConnection</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94679 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows,
<PRE>  versions 1.0, 2.0, and 3.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows version 3.1 provides a new API Call, WNetAddConnection, which will
redirect a local device to a shared resource or network server.
<P>
WNetAddConnection requires the name of the local device, the name of the
network resource, and the password necessary to use that resource.
<P>
This article explains in detail the arguments and potential error messages
for the Windows version 3.1 WNetAddConnection function call.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To use WNetAddConnection within a Visual Basic application, declare the
WNetAddConnection function in the General Declarations Section of your code
window. (In Visual Basic version 1.0 you can also put the declaration in
the Global Module.) Declare the function as follows entering the entire
Declare statement on one, single line:
<P>
<PRE>   Declare Function WnetAddConnection% Lib "user"
      (ByVal lpszNetPath As Any,
      ByVal lpszPassword As Any,
      ByVal lpszLocalName As Any)

</PRE>Here are definitions for the formal parameters:
<P>
<PRE>   Formal Parameter   Definition
   -----------------------------------------------------------------------
   lpszNetPath        Points to a null-terminated string specifying the
                      shared device or remote server.

   lpszPassword       Points to a null-terminated string specifying the
                      network password for the given device or server.

   lpszLocalName      Points to a null-terminated string specifying the
                      local drive or device to be redirected. All
                      lpszLocalName strings (such as LPT1) are case
                      independent. Only the drive names A through Z
                      and device names LPT1 through LPT3 are used.

</PRE>Below are the possible return values as defined on page 990 of the
Microsoft Windows version 3.1 Programmer's Reference:
<P>
<PRE>   Value                  (Hex Value)  Meaning
   -----------------------------------------------------------------------
   WN_SUCCESS             (&amp;H0)        Function was successful.
   WN_NOT_SUPPORTED       (&amp;H1)        Function was not supported.
   WN_OUT_OF_MEMORY       (&amp;HB)        System was out of memory.
   WN_NET_ERROR           (&amp;H2)        An error occurred on the network.
   WN_BAD_POINTER         (&amp;H4)        Pointer was invalid.
   WN_BAD_NETNAME         (&amp;H32)       Network resource name was invalid.
   WN_BAD_LOCALNAME       (&amp;H33)       Local device name was invalid.
   WN_BAD_PASSWORD        (&amp;H6)        Password was invalid.
   WN_ACCESS_DENIED       (&amp;H7)        A security violation occurred.
   WN_ALREADY_CONNECTED   (&amp;H34)       Local device was already connected
                                       to a remote resource.

</PRE>Below is an example of how to redirect a local device to a network
resource:

<OL><P><LI>Start Visual Basic (VB.EXE). Form1 is created by default.

<P><LI>Create the following controls with the indicated properties on
   Form1:
<P>
<PRE>   Default Name   Caption             CtlName
   -------------------------------------------
   Text1          (Not applicable)    NetPath
   Text2          (Not applicable)    Password
   Command1       &amp;Connect            Connect
   Drive1         (Not applicable)    Drive1

</PRE><P><LI>Add the following code to the general declaration section of Form1.
   Enter the Declare statement as one, single line:
<P>
<PRE>   Declare Function WnetAddConnection Lib "user"
     (ByVal lpszNetPath as String,
      ByVal lpszPassword as String,
      ByVal lpszLocalName as String) as Integer
   Const WN_Success = &amp;H0
   Const WN_Not_Supported = &amp;H1
   Const WN_Net_Error = &amp;H2
   Const WN_Bad_Pointer = &amp;H4
   Const WN_Bad_NetName = &amp;H32
   Const WN_Bad_Password = &amp;H6
   Const WN_Bad_Localname = &amp;H33
   Const WN_Access_Denied = &amp;H7
   Const WN_Out_Of_Memory = &amp;HB
   Const WN_Already_Connected = &amp;H34

   If you're using Visual Basic version 1.0, add the following to the
   general declarations also:

   Const True = -1
   Const False = 0

</PRE><P><LI>Add the following code to the procedure Connect_Click:
<P>
<PRE>   Sub Connect_Click ()

      ServerText$ = UCase$(NetPath.Text) + Chr$(0) ' Network resource name
      PasswordText$ = Password.Text + Chr$(0) ' Password for the resource
      driveletter$ = "N:" + Chr$(0) ' Substitute your own drive letter

      ' Enter the following two lines as one, single line:
      Succeed% =
         WnetAddConnection(ServerText$, PasswordText$, driveletter$)

      If IsSuccess(Succeed%, msg$) = True Then ' Call Function to parse
                                               ' potential error messages.
         Drive1.Refresh
         NetPath.Text = "" ' Reset the contents following connection
      Else
         MsgBox msg$
      End If

   End Sub

</PRE><P><LI>Create a Sub within the (Declarations) section of the Code window and
   add the following code:
<P>
   Function IsSuccess% (ReturnCode%, Msg$)
<P>
   If ReturnCode% = WN_Success Then
<P><PRE>      IsSuccess% = True
</PRE>   Else
<P><PRE>      IsSuccess% = False
      Select Case ReturnCode%
</PRE><P>
<PRE>         Case WN_Success:
            Drive1.Refresh
         Case WN_Not_Supported:
            msg$ = "Function is not supported."
         Case Wn_Out_Of_Memory:
            msg$ = "Out of Memory."
         Case WN_Net_Error:
            msg$ = "An error occurred on the network."
         Case WN_Bad_Pointer:
            msg$ = "The Pointer was Invalid."
         Case WN_Bad_NetName:
            msg$ = "Invalid Network Resource Name."
         Case WN_Bad_Password:
            msg$ = "The Password was Invalid."
         Case WN_Bad_Localname:
            msg$ = "The local device name was invalid."
         Case WN_Access_Denied:
            msg$ = "A security violation occurred."
         Case WN_Already_Connected:
            msg$ = "The local device was connected to a remote resource."
         Case Else:
            msg$ = "Unrecognized Error " + Str$(ReturnCode%) + "."

      End Select
   End If

   End Function

</PRE><P><LI>Run the program. Type in the name of a network resource in the edit box
   and press the Connect button. The drive box will be updated with the
   new resource if the call was successful.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows Software Development Kit: Reference Volume 2," version
3.1 and the WIN31WH.HLP file that shipped with the Microsoft Visual Basic
version 2.0 Professional Version for Windows.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbnetwork kbprg kbcode<BR>
KBSubcategory: APrgNet<BR>
Additional reference words: 1.00 2.00<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
