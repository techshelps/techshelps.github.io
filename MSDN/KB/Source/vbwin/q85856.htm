

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: GotFocus Event Fails If MsgBox Invoked in LostFocus Event </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q85856 ">
<META NAME="KBModify" CONTENT="1996/05/16">
<META NAME="KBCreate" CONTENT="1992/06/22">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Invoking a message box from a control's LostFocus event will prevent the GotFocus event of the next selected control from executing.  CAUSE =====  This happens because the GotFocus event is not executed. Removing the message box from the control's ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QBT6,QAFF,QAPN,QBS0,QAHP,QAO4,QAH4,QA01,QA7O,QAMN,QAB5,QBXS,QAOE,QADO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: GotFocus Event Fails If MsgBox Invoked in LostFocus Event</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q85856 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Enterprise Edition of Microsoft Visual Basic, version 4.0a, for
   Windows
<LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
<LI>Microsoft Visual Basic programming system for Windows, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Invoking a message box from a control's LostFocus event will prevent
the GotFocus event of the next selected control from executing.
<P>
<P><h2>CAUSE</h2>
 
<P>
This happens because the GotFocus event is not executed. Removing the
message box from the control's LostFocus will allow the GotFocus event
to execute as expected.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around the problem, set a flag in the control's LostFocus event
procedure. Then call a generic test routine from the next control's
GotFocus event, as demonstrated in the following example:

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Create the following controls and properties for Form1:
<P>
<PRE>   Control     Name     Property Setting
   ----------------------------------
   Text Box    Text1    TabIndex = 0
   Text Box    Text2    TabIndex = 1
   Text Box    Text3    TabIndex = 2

</PRE><P><LI>Add the following code to the general Declarations section of Form1:
<P>
   Dim LastControl As Control
   Dim CurrControl As Control
<P>
<PRE>   Sub CheckLostFocus ()

     If (LastControl.Tag = "True") Then
        X%=MsgBox("Is the value OK ?", 36, LastControl + " has Lost Focus")

        If X% = 6 Then    'if YES
           LastControl.Tag = ""
           CurrControl.SetFocus
        Else
           LastControl.SetFocus
        End If
     End If

   End Sub

   Sub Form_Load ()
      Set LastControl = Text1     'set to the first editable control
   End Sub

</PRE></OL>The instructions 4 through 5 apply to EACH of the 3 Text Boxes:

<OL><P><LI>Add the following code to the LostFocus event for EACH Text control:
<P>
<PRE>   Sub Text1_LostFocus ()
      Set LastControl = Text1
   End Sub

   Sub Text2_LostFocus ()
      Set LastControl = Text2
   End Sub

   Sub Text3_LostFocus ()
      Set LastControl = Text3
   End Sub

</PRE><P><LI>Add the following code to the GotFocus event of EACH Text control:
<P>
<PRE>   Sub Text1_GotFocus ()
      Set CurrControl = Text1
      CheckLostFocus
   End Sub

   Sub Text2_GotFocus ()
      Set CurrControl = Text2
      CheckLostFocus
   End Sub

   Sub Text3_GotFocus ()
      Set CurrControl = Text3
      CheckLostFocus
   End Sub

</PRE><P><LI>Add the following code to the Change event of EACH Text control:
<P>
<PRE>   Sub Text1_Change ()
      Text1.Tag = "True"
   End Sub

   Sub Text2_Change ()
      Text2.Tag = "True"
   End Sub

   Sub Text3_Change ()
      Text3.Tag = "True"
   End Sub

</PRE><P><LI>Press F5 to run the program.
<P>
</OL>Now, both message boxes should appear as expected when the focus is
changed by using the TAB key or by clicking the next text box.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design. It is a limitation of Visual Basic's
MsgBox statement.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Create the following controls and properties for Form1:
<P>
<PRE>   Control     Name     Property Setting
   ---------------------------------------
   Text Box    Text1    TabIndex = 0
   Text Box    Text2    TabIndex = 1

</PRE><P><LI>Add the following code to the Text1_LostFocus event procedure:
<P>
<PRE>   Sub Text1_LostFocus ()
      MsgBox "Text1 has Lost the Focus"
   End Sub

</PRE><P><LI>Add the following code to the Text2_GotFocus event procedure:
<P>
<PRE>   Sub Text2_GotFocus ()
      MsgBox "Text2 has Received the Focus"
   End Sub

</PRE><P><LI>Press F5 to run the program.
<P>
</OL>Notice that when you click the second text box (Text2), the message box
specified in the GotFocus event fails to display. This also occurs if you
try to tab between text boxes or set up labels and quick keys.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 4.00a<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
