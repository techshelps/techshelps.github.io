

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Print an Embedded Word Document in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112196">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/03/02">
<META NAME="Keywords" CONTENT="kbole kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Microsoft Word for Windows version 6.0 disables the ability to use the FilePrint and FilePrintDefault methods while an object is being edited in an OLE container. While the menu options may not be enabled, it is still possible to get around this in...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAIH,QAW6,QAPN,QAOX,QBJZ,QBXS,QAH4,QBSO,QA9Q,QAGB,QBWS,QA5F,QDKW,QDO7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Print an Embedded Word Document in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112196</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, version 3.0
</PRE>- Microsoft Word for Windows, version 6.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Word for Windows version 6.0 disables the ability to use the
FilePrint and FilePrintDefault methods while an object is being edited in
an OLE container. While the menu options may not be enabled, it is
still possible to get around this in code. This article explains how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Commands that are part of the workspace are the responsibility of the top
container (the Visual Basic application). That is, the application is
responsible for the organization of windows, file level operations, and how
edits are ultimately saved. The top container must supply a single File
menu that contains file level commands such as Open, Close, Save, and
Print. If the object is an opened object server application, the commands
in its File menu are modified to show containership (Close &amp; Return to
&lt;container doc&gt;, Exit &amp; Return to &lt;container doc&gt;).
<P>
A well-behaved OLE server will not allow workspace commands to be executed.
This is why they are disabled. To work around the problem, edit the object
in the server application instead of using in-place editing. In the server
workspace, commands are enabled. Therefore, you can edit the object in the
server workspace and use OLE Automation to control the server to execute
the Workspace commands.
<P>
<P><h3>Example Program Using OLE Automation</h3>
 
<P>
The following example activates the Word object in the server, and uses
OLE Automation to execute the FilePrintDefault method.
<P>
NOTE: By default, Word sets background printing On. If Word quits before
printing is completed, the print job is aborted. There are two ways to
work around this:

<UL><LI>Define the Word Objects globally. The objects will remain in memory
   until the container application (Visual Basic) quits. This is the
   easiest way to do it.
<P>
<P><PRE>      -or-
</PRE>
<LI>Disable background printing in Word. You can do this by using OLE
   automation. The command is not available during in-place editing. The
   following example shows how to do this in code.

</UL><OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
   if Visual Basic is already running. Form1 is created by default.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add an MSOLE2.VBX control (OLE1) to Form1. When the Insert Object
   dialog comes up, choose the Create From File option button, and select a
   Word for Windows document.

<P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Sub Command_Click()
      ' Open application in separate application Window:
      ole1.Verb = -2
      ' Activate Object:
      ole1.Action = 7
      Dim WB As object
      ' Alias WordBasic Object:
      Set WB = ole1.Object.application.wordbasic
      ' Disable background printing:
      WB.ToolsOptionsPrint , , , , , , , , , , , 0
      WB.FilePrintDefault  'Print the Word Object.
      ' Hint: it may be necessary to check page layout parameters before
      ' printing. If parameters are outside of the printable region, Word
      ' will display an error message.
   End Sub

</PRE><P><LI>Run the program, and click the Command1 button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbole kbprg kbcode<BR>
KBSubcategory: IAPOLE PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
