

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Redirect Standard I/O of a Console App Using Batch File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150767">
<META NAME="KBModify" CONTENT="1997/11/10">
<META NAME="KBCreate" CONTENT="1996/05/09">
<META NAME="Keywords" CONTENT="PrgOther vb432 VB4WIN kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  A 32-bit Visual Basic application launches another Win32 process by using either the Visual Basic Shell command or the CreateProcess Win32 API. If the new process is a console application that reads its input from the standard input (STDIN) or writ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QABB,QAH4,QAMA,QAJH,QA5F,QAM5,QABA,QAUD,QAJQ,QA56,QA55,QA5A,QA4Q,QAUR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Redirect Standard I/O of a Console App Using Batch File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150767</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Professional and Enterprise Edition of Microsoft Visual Basic,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A 32-bit Visual Basic application launches another Win32 process by using
either the Visual Basic Shell command or the CreateProcess Win32 API. If
the new process is a console application that reads its input from the
standard input (STDIN) or writes its results to the standard output
(STDOUT), you can redirect its input and output from the parent Visual
Basic application. This article describes how to use a batch file (.BAT) to
redirect the standard input and output of the spawned console process. To
build the sample code in this article, you need the 32-bit edition of
Visual Basic and any development tools, such as Visual C++ version 2.0 and
above, that build Win32 console applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
After the parent Visual Basic application spawns the child console process,
the parent Visual Basic application provides input to the child's STDIN and
receives the output from the child's STDOUT. By using a batch file, the
parent Visual Basic application provides the child's STDIN through a disk
file and collects the child's STDOUT through another disk file.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a console application, CONSOL.EXE, that expects an integer as its
   STDIN and sends a text string out as its STDOUT, using the following C
   code:
<P>
<P><PRE>      #include &lt;stdio.h&gt;
</PRE><P>
<P><PRE>      void main(void)
      {
<PRE></PRE>            int i;
            scanf("%d", &amp;i);
            printf("\nSTDIn is %d!\n", i);
      }

</PRE><P><LI>Create a batch file, named REDIRECT.BAT, that contains only the
   following command line:
<P>
<P><PRE>      type stdin.txt | consol.exe &gt; stdout.txt
</PRE>
<P><LI>Create a new text file using Notepad or any text editor. Enter an
   integer and press the ENTER key. Save the file as "stdin.txt."

<P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
<P><PRE>      Private Declare Function OpenProcess Lib "kernel32.dll" (ByVal _
<PRE></PRE>         dwAccess As Long, ByVal fInherit As Integer, ByVal hObject _
         As Long) As Long

      Private Declare Function CloseHandle Lib "kernel32" (ByVal _
         hObject As Long) As Long

      Private Declare Function WaitForSingleObject Lib "kernel32" (ByVal _
       hHandle As Long, ByVal dwMilliseconds As Long) As Long

      Const SYNCHRONIZE = &amp;H100000
      Const NORMAL_PRIORITY_CLASS = &amp;H20&amp;
      Const INFINITE = -1&amp;

</PRE><P><LI>Add the following code to the Form1_Click event:
<P>
<P><PRE>      ProcessID&amp; = Shell("test.bat", vbNormalFocus)
      ProcessHandle&amp; = OpenProcess(SYNCHRONIZE, True, ProcessID&amp;)
      WaitForSingleObject ProcessHandle&amp;, -1&amp;
      CloseHandle ProcessHandle&amp;
</PRE>
<P><LI>Save Form1 and Project1 to the same directory as REDIRECT.BAT and
   CONSOL.EXE. Press the F5 key to run the program. Click Form1. A console
   window is displayed briefly and closes itself. The STDOUT.TXT file is
   then created in the same directory.
</OL> 
<PRE>Keywords          : PrgOther vb432 VB4WIN kbhowto
Version           : 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
