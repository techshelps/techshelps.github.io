

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: VB Graph Custom Control: SeeThru Paints Incorrectly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84236 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/05/05">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When you use the Graph custom control with the SeeThru property set to True, Graph fails to paint properly. The Graph custom control will not repaint itself to show a see-through background nor to show updated information. Often it will create obvi...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QAMN,QA7O,QAOE,QBS0,QAPN,QAKJ,QBXS,QBVV,QAM2,QBJZ,QABA,QBWS,QAH4,QAG9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: VB Graph Custom Control: SeeThru Paints Incorrectly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84236 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows,
<PRE>  versions 2.0 and 3.0
</PRE>- Microsoft Professional Toolkit for Microsoft Visual Basic programming
<PRE>  system for Windows, version 1.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use the Graph custom control with the SeeThru property set
to True, Graph fails to paint properly. The Graph custom control will
not repaint itself to show a see-through background nor to show updated
information. Often it will create obvious holes through its parent form.
<P>
In addition, if anything on the form is under the Graph custom control, the
overlapped region won't print when you execute PrintForm even though you
see it on top when you print. This occurs most often when you have two
overlapped Graph controls -- one with SeeThrough set to True, the other
with SeeThru set to False.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Graph custom control
supplied with the Microsoft products listed at the beginning of this
article. We are researching this problem and will post new information here
in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Graph SeeThru property is supposed to have a clear background when
it is set to True. This property allows any text or bitmaps displayed
on the parent form to show through. However, the SeeThru property
does not actually behave this way.
<P>
When the SeeThru property is first set to True and the graph is
repainted by setting DrawMode = 2, the background color does not
become clear. Also, the graph is not repainted, but rather just
painted again on top of itself. If any other properties or data were
reset before the DrawMode = 2 call is made, the changes might overlap
the old settings, or not appear at all.
<P>
If circumstances call for the Graph control to completely repaint
itself (such as when the parent form is minimized and then maximized),
Graph will not repaint at all. Because Windows is expecting Graph to
paint that region, it will not repaint the parent form behind the
control. Graph also does not paint that region, so a hole is left in
the form that shows the desktop behind the parent form. If you try to
force Graph to repaint itself by setting DrawMode = 2, the actual Graph
(without the background) will appear in the hole on top of the desktop
clutter.
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project (ALT,
   F, N) if Visual Basic is already running. Form1 is created by default.

<P><LI>From the File menu, choose Add File. In the Files box, select the
   GRAPH.VBX custom control file. The Graph tool appears in the
   Toolbox.

<P><LI>On Form1 add a graph control (Graph1), and two command buttons,
   Command1 and Command2.

<P><LI>Change the following properties for the Command buttons:
<P>
<PRE>   Control     Property    Value
   ----------------------------------------------
   Command1    Caption     SeeThru
   Command2    Caption     DrawMode

</PRE><P><LI>Add the following code to the Command1_Click event:
<P>
<PRE>   Sub Command1_Click ()
      Graph1.SeeThru = 1
   End Sub

</PRE><P><LI>Add the following code to the Command2_Click event:
<P>
<PRE>   Sub Command2_Click ()
      Graph1.DrawMode = 2
   End Sub

</PRE><P><LI>Press F5 to run the program.
<P>
   When you run the program, Graph1 appears normal. If you click the
   Command2 button to repaint Graph1, you will see the old graph being
   erased and then replaced by a new version of it. Because the random
   data generator inherent to Graph was left on, new data will be
   displayed. This is normal behavior. If you minimize and then maximize
   Form1, Graph1 will repaint itself correctly.

<P><LI>Click Command1 to turn on the SeeThru property, and then click
   on Command2 to repaint Graph1.
<P>
   This time Graph1 does not disappear before being redrawn. Instead,
   the new version of the graph is just painted on top of it and the
   background color is still there. Again, because the random data
   generator was left on, new data should be displayed. If the new
   data values are less than the old values, they won't be seen. The
   bars on Graph1 will appear to continuously rise every time the
   Command2_Click event is triggered.

<P><LI>Minimize Form1.
<P>
   Look at the area of the desktop where the graph control used to
   be. You will notice that it remains after the form is maximized.

<P><LI>Maximize Form1.
<P>
   The desktop still appears where the Graph1 control should be. If
   you click the Command2 button, the graph alone will be printed
   in the rectangle where Graph1 should be. Again, the graph will
   paint on top of itself instead of repaint itself every time you
   trigger the Command2_Click event.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist1.00 buglist2.00 buglist3.00 1.00 2.00<BR>
3.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsCus<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
