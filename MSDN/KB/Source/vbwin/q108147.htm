

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Copy Table from One Database to Another in VB Prof 3.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108147">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/12/07">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Below is an example of how to copy a table from one database to another using the Professional Edition of Visual Basic version 3.0.  MORE INFORMATION  Sample Program  The following sample code contains two functions taken almost unchanged from the ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAZV,QAY5,QATJ,QAB9,QA28,QAY2,QAPF,QANF,QBV8,QBXS,QAPN,QA5F,QAMA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Copy Table from One Database to Another in VB Prof 3.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108147</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional Edition of Microsoft Visual Basic for Windows,
   version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Below is an example of how to copy a table from one database to another
using the Professional Edition of Visual Basic version 3.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Program</h3>
 
<P>
The following sample code contains two functions taken almost unchanged
from the VISDATA sample project, from the code module VISDATA.BAS. The
Command1_Click procedure shown below invokes these two functions,
CopyStruct and CopyData. NOTE: The VISDATA.MAK project file is installed
in the Visual Basic SAMPLES\VISDATA directory.
<P>
This example assumes that the databases have Microsoft Access format.
The same techniques apply to the other supported database types.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button to Form1. Add the following code to the Command1
   Click event:
<P>
<PRE>   Sub Command1_Click ()
      Dim dbsource As database
      Dim dbdest As database
      ' The following hard-coded database names could be changed to
      ' selections from a text box, list box, or combo box to make the
      ' program more generic:
      Set dbsource = OpenDatabase("c:\vb3\biblio.mdb", True, True)
      Set dbdest = OpenDatabase("c:\vb3\test1.mdb", True, False)
      Print CopyStruct(dbsource, dbdest, "titles", "ctitles", True)
      Print CopyData(dbsource, dbdest, "titles", "ctitles")
      dbsource.Close
      dbdest.Close
   End Sub

</PRE><P><LI>Add the following code to the General Declarations section of Form1:
<P>
<PRE>   'Place the following Function statement on one, single line:
   Function CopyStruct (from_db As Database, to_db As Database,
      from_nm As String, to_nm As String, create_ind As Integer) As Integer

      On Error GoTo CSErr

      Dim i As Integer
      Dim tbl As New Tabledef    'table object
      Dim fld As Field           'field object
      Dim ind As Index           'index object

      'Search to see if the table exists:
      namesearch:
      For i = 0 To to_db.TableDefs.Count - 1
         If UCase(to_db.TableDefs(i).Name) = UCase(to_nm) Then
            If MsgBox(to_nm + " already exists, delete it?", 4) = YES
            Then
               to_db.TableDefs.Delete to_db.TableDefs(to_nm)
            Else
               to_nm = InputBox("Enter New Table Name:")
               If to_nm = "" Then
                  Exit Function
               Else
                  GoTo namesearch
               End If
            End If
            Exit For
         End If
      Next

      'Strip off owner if necessary:
      If InStr(to_nm, ".") &lt;&gt; 0 Then
         to_nm = Mid(to_nm, InStr(to_nm, ".") + 1, Len(to_nm))
      End If
      tbl.Name = to_nm

      'Create the fields:
      For i = 0 To from_db.TableDefs(from_nm).Fields.Count - 1
         Set fld = New Field
         fld.Name = from_db.TableDefs(from_nm).Fields(i).Name
         fld.Type = from_db.TableDefs(from_nm).Fields(i).Type
         fld.Size = from_db.TableDefs(from_nm).Fields(i).Size
         fld.Attributes = from_db.TableDefs(from_nm).Fields(i).Attributes
         tbl.Fields.Append fld
      Next

      'Create the indexes:
      If create_ind &lt;&gt; False Then
         For i = 0 To from_db.TableDefs(from_nm).Indexes.Count - 1
         Set ind = New Index
         ind.Name = from_db.TableDefs(from_nm).Indexes(i).Name
         ind.Fields = from_db.TableDefs(from_nm).Indexes(i).Fields
         ind.Unique = from_db.TableDefs(from_nm).Indexes(i).Unique
         If gstDataType &lt;&gt; "ODBC" Then
            ind.Primary = from_db.TableDefs(from_nm).Indexes(i).Primary
         End If
         tbl.Indexes.Append ind
         Next
      End If

      'Append the new table:
      to_db.TableDefs.Append tbl

      CopyStruct = True
      GoTo CSEnd

      CSErr:
      CopyStruct = False
      Resume CSEnd

      CSEnd:
   End Function

   'Place the following Function statement on one, single line:
   Function CopyData (from_db As Database, to_db As Database,
      from_nm As String, to_nm As String) As Integer

      On Error GoTo CopyErr
      Dim ds1 As Dynaset, ds2 As Dynaset
      Dim i As Integer
      Set ds1 = from_db.CreateDynaset(from_nm)
      Set ds2 = to_db.CreateDynaset(to_nm)
      While ds1.EOF = False
         ds2.AddNew
         For i = 0 To ds1.Fields.Count - 1
            ds2(i) = ds1(i)
         Next
         ds2.Update
         ds1.MoveNext
      Wend
      CopyData = True
      GoTo CopyEnd
      CopyErr:
      CopyData = False
      Resume CopyEnd
      CopyEnd:
   End Function

</PRE><P><LI>Start the program or press the F5 key.

<P><LI>You can check to see if the table was copied correctly to the TEST1.MDB
   database by opening TEST1.MDB with Microsoft Access or with the Data
   Manager provided with Visual Basic. You can run the Data Manager program
   from the Window menu in Visual Basic or from the Windows File Manager
   run DATAMGR.EXE in the Visual Basic directory.
<P>
</OL><h2>REFERENCE</h2>
 
<P>
The VISDATA.MAK file installed in the VB3\SAMPLES\VISDATA directory
loads extensive examples of data access. The VISDATA sample program uses
every data access function in Visual Basic. Refer to the VISDATA source
code for examples that show how to use each data access function.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
