

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Get Extended File Time Information Using the Win32 API </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154821">
<META NAME="KBModify" CONTENT="1997/07/14">
<META NAME="KBCreate" CONTENT="1996/08/15">
<META NAME="Keywords" CONTENT="APrgOther vb432 vb4win vb5all kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Windows NT and Windows 95 store additional information about a file, including the time and date that the file was last accessed. This information cannot be accessed with the FileDateTime API function but can be extracted using a combination of cal...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAML,QAU3,QAMR,QA4Q,QACE,QAFH,QAY5,QANF,QAK7,QAH4,QBT6,QBV4,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Get Extended File Time Information Using the Win32 API</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154821</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
<LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows NT and Windows 95 store additional information about a file,
including the time and date that the file was last accessed. This
information cannot be accessed with the FileDateTime API function but can
be extracted using a combination of calls to the Windows API. This article
describes how to accomplish this behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The creation time, last-written time, and the last-accessed (read) time of
a file are all stored in 32-bit Windows, but only the time and date of the
last write to the file are accessible directly from Visual Basic.
<P>
The API function used expects to be passed a system file handle rather than
a Visual Basic file number. However, due to a limitation in 32-bit Visual
Basic, the FileAttr function is incapable of returning an operating system
file handle and API calls must be used to open the file. To obtain this
data, do the following:

<OL><P><LI>Start a new Visual Basic project. Form1 is created by default.

<P><LI>Add a text box control to Form1. It is called Text1 by default.

<P><LI>Add a CommandButton to Form1. It is called Command1 by default

<P><LI>Add the following code to the General Declarations section of Form1:
<P>
   Option Explicit
<P>
   Private Const OF_READ = &amp;H0
   Private Const OF_SHARE_DENY_NONE = &amp;H40
   Private Const OFS_MAXPATHNAME = 128
<P>
   Private Type OFSTRUCTREC
<P><PRE>     cBytes As Byte
     fFixedDisk As Byte
     nErrCode As Integer
     Reserved1 As Integer
     Reserved2 As Integer
     szPathName(OFS_MAXPATHNAME) As Byte
</PRE>   End Type
<P>
   Private Type FILETIMEREC
<P><PRE>     dwLowDateTime As Long
     dwHighDateTime As Long
</PRE>   End Type
<P>
   Private Type SYSTEMTIMEREC
<P><PRE>     wYear As Integer
     wMonth As Integer
     wDayOfWeek As Integer
     wDay As Integer
     wHour As Integer
     wMinute As Integer
     wSecond As Integer
     wMilliseconds As Integer
</PRE>   End Type
<P>
<PRE>   Private Declare Function FileTimeToSystemTime Lib "kernel32" _
     (lpFileTime As FILETIMEREC, lpSystemTime As SYSTEMTIMEREC) As Long
   Private Declare Function GetFileTime Lib "kernel32" (ByVal _
     hFile As Long, lpCreationTime As FILETIMEREC, lpLastAccessTime _
     As FILETIMEREC, lpLastWriteTime As FILETIMEREC) As Long
   Private Declare Function OpenFile Lib "kernel32" (ByVal lpFileName As _
     String, lpReOpenBuff As OFSTRUCTREC, ByVal wStyle As Long) As Long
   Private Declare Function hread Lib "kernel32" Alias "_hread" _
     (ByVal hFile As Long, lpBuffer As Any, ByVal lBytes As Long) As Long
   Private Declare Function lclose Lib "kernel32" Alias "_lclose" (ByVal _
     hFile As Long) As Long

   Sub Form_Load()
     Command1.Caption = "&amp;Get file access time"
     Text1.Text = "C:\AUTOEXEC.BAT"
   End Sub

   Private Sub Command1_Click()
     Dim sInpFile As String
     Dim hFile As Integer
     Dim FileStruct As OFSTRUCTREC
     Dim iRC As Integer
     Dim CreationTime As FILETIMEREC
     Dim LastAccessTime As FILETIMEREC
     Dim LastWriteTime As FILETIMEREC
     Dim SystemTime As SYSTEMTIMEREC
     sInpFile = Trim(Text1.Text)
     ' check that the file exists
     If Len(Dir(sInpFile)) = 0 Then
       MsgBox "Can't find the file", vbExclamation
       Exit Sub
     End If

     ' Open it to get a stream handle
     hFile = OpenFile(sInpFile, FileStruct, OF_READ Or OF_SHARE_DENY_NONE)
     If hFile = 0 Then
       MsgBox "Can't open the file", vbExclamation
       Exit Sub
     End If

     If GetFileTime(hFile, CreationTime, _
         LastAccessTime, LastWriteTime) Then
           ' massage time into format that we can use
       If Not FileTimeToSystemTime(LastAccessTime, SystemTime) Then
         Print "Year of file  :" &amp; SystemTime.wYear
         Print "Month of File :" &amp; SystemTime.wMonth
         Print "Day of File   :" &amp; SystemTime.wDay
       Else
         MsgBox "FileTimeToSystemTime Failed"
       End If
     Else
       MsgBox "GetFileTime Failed"
     End If

     iRC = lclose(hFile)
   End Sub

</PRE><P><LI>Run the program by pressing the F5 key or clicking the Play button.
   Enter a filename in the text box, including path if necessary, and
   click the CommandButton.
<P>
</OL>Note that the last written time and file creation time are returned.
The code could be extended to return the Time information as well as the
Date information shown. These values are returned in the SYSTEMTIME record.
<P>
The FAT and New Technology file systems support the file creation, last
access, and last write time values. Under Windows 95, the precision of the
time for a file in a FAT file system is 2 seconds. The time precision
for files in other file systems, such as those connected through a network,
depends on the file system but may also be limited by the remote device.
<P>
<P><h2>REFERENCES</h2>
 
<P>
The Win32 SDK has additional information about the APIs used in the code
above.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : APrgOther vb432 vb4win vb5all kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
