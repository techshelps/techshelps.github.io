

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Pass User-Defined Structure Containing Strings to DLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107750">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1993/11/29">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This articles shows by example how to pass a user-defined structure that contains strings to a DLL. The example enables a DLL to read and write the strings in a user-defined structure.  MORE INFORMATION  The following step-by-step example passes a ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAD7,QAH7,QAH6,QAH4,QATX,QAIC,QA5F,QAMA,QDNN,QAP2,QBJZ,QBV4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Pass User-Defined Structure Containing Strings to DLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107750</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic for Windows, version 3.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This articles shows by example how to pass a user-defined structure that
contains strings to a DLL. The example enables a DLL to read and write the
strings in a user-defined structure.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following step-by-step example passes a user-defined structure that
contains strings to a DLL to manipulate.

<OL><P><LI>Start a new project in Visual Basic.

<P><LI>From the File menu, choose New Module (ALT F M). MODULE1.BAS will be
   created by default. Add the following code to the .BAS module:
<P>
<PRE>   ' Fixed-length string elements of a structure are packed in memory
   ' as are other values in Visual Basic. The following structure takes up
   ' 16 bytes of memory:
   '
   Type MYSTRINGSTRUCT
      str1 As String * 8
      str2 As String * 8
   End Type
   ' Enter the following Declare statement as one, single line
   Declare Sub MyStructProc Lib "Name of DLL your create"
      (lpStringStruct As MYSTRINGSTRUCT)

</PRE><P><LI>Add a command button (Command1) to Form1.

<P><LI>Add the following code to the Command1_Click event of Form1:
<P>
<PRE>   Sub Command1_Click ()
   Dim StringStruct As MYSTRINGSTRUCT
      StringStruct.str1 = "str1"
      StringStruct.str2 = "str2"
      MyStructProc StringStruct
      TEXT1.Text = StringStruct.str1
      TEXT2.Text = StringStruct.str2
   End Sub

</PRE><P><LI>Add two text controls (Text1 and Text2) to Form1.

<P><LI>Create the C code needed to make the DLL. In the .h file of the DLL a
   user-defined type will create a mirror image of the type you defined in
   the Visual Basic .BAS file. Char str[8] is equivalent to Visual Basic
   declaration of str1 as String * 8. This structure definition takes up 16
   bytes in memory as does the Visual Basic structure definition.
<P>
   typedef struct STRINGSTRUCT{
<PRE>   char str1[8] ;
   char str2[8] ;
   } FAR * LPSTRINGSTRUCT ;

   /* Declaration of the function */
   void FAR PASCAL MyStructProc(LPSTRINGSTRUCT) ;

</PRE><P><LI>Add the following code to your .c file:
<P>
<PRE>   #include "The .h file where you added the code above"

   void FAR PASCAL MyStructProc(LPSTRINGSTRUCT lpStringStruct)
   {
   /* You need to use lstrcpyn because the structure from Visual
   Basic is packed, and the strings are not Null terminated. The way
   structures are passed from Visual Basic to a DLL is fully described
   beginning on page 566 in the Visual Basic version 3.0 for Windows
   "Programmers Guide," Chapter 24, "Calling Procedures in DLLs," in
   "User-Defined Types" under "Calling DLL Procedures with Specific Data
   Types." */

      lstrcpyn(lpStringStruct-&gt;str1, "change11", 8) ;
      lstrcpyn(lpStringStruct-&gt;str2, "change22", 8) ;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
