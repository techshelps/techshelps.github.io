

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Compiled In-Process Server Used Before IDE Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149049">
<META NAME="KBModify" CONTENT="1996/04/10">
<META NAME="KBCreate" CONTENT="1996/03/26">
<META NAME="Keywords" CONTENT="kbprg kbprg">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  A request for an object provided by both a compiled OLE server dynamic-link library (DLL) and an instance of the OLE server running in the Visual Basic for Windows integrated design environment (IDE) is filled by the compiled DLL.  MORE INFORMATION...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QBJZ,QA9Q,QBWS,QAPN,QDNN,QAW6,QAVX,QAVW,QAFF,QDL9,QBWQ,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Compiled In-Process Server Used Before IDE Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 10, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149049</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A request for an object provided by both a compiled OLE server dynamic-link
library (DLL) and an instance of the OLE server running in the Visual Basic
for Windows integrated design environment (IDE) is filled by the compiled
DLL.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Generally, OLE automation clients receive objects from an instance of an
OLE server running in the Visual Basic for Windows IDE before they receive
objects from a compiled server. Visual Basic for Windows accomplishes this
functionality by temporarily adding or modifying registry keys when an IDE
server is started and then restoring the original settings when the server
is stopped. This was done to make debugging of OLE servers as easy as
possible. However, if a server has previously been compiled into an OLE
DLL, then objects are provided from that compiled DLL before they are
provided by a server running in the IDE.
<P>
The reason for this behavior is rooted in the search path OLE uses when
attempting to create an object. This search path is listed below:
<P>
- Inprocess server of same bitness
- 32-bit local server (for 16-bit clients under a Microsoft Win32 operating
<PRE>                       system)
</PRE>- Local server of same bitness
- Local server of other bitness
<P>
Servers running in the IDE are always out-of-process. When a request for an
object is made, OLE encounters the previously compiled in-process server
before it encounters the one running in the IDE, and so it creates the
object from that DLL.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
It is possible to test the execution of what will become an OLE DLL in the
IDE when you have a previously compiled DLL. To accomplish this
functionality temporarily unregister the previously compiled DLL using
Regsvr32.exe. Then reregister the DLL by using Regsvr32.exe. For example:
<P>
Do the following to unregister the previously compiled DLL:
<P>
<PRE>   regsvr32.exe -u DLLName.DLL

</PRE>Do the following to reregister the DLL:
<P>
<PRE>   regsvr32.exe DLLName.DLL

</PRE>If you make a new DLL while still working, Visual Basic for Windows
registers it when the DLL is made with the "Make OLE DLL" command.
<P>
<P><h3>Steps to reproduce problem</h3>
 

<OL><P><LI>Start an instance of the 32-bit edition of Visual Basic 4.0 for Windows.

<P><LI>Click Class Module on the Insert menu to add a class module to the
   project.

<P><LI>Change the following properties on the new class module to the
   following:
<P>
<P><PRE>      Instancing: 2 - Creatable Multiuse
<PRE></PRE>      Public:     True

</PRE><P><LI>Add the following code to the class module:
<P>
<P><PRE>      Public Sub Test()
<PRE></PRE>         MsgBox "In DLL"
      End Sub

</PRE><P><LI>Click Module on the Insert menu to insert a new code module.

<P><LI>Add the following code to the code module:
<P>
<P><PRE>      Public Sub Main()
<PRE></PRE>         'do nothing
      End Sub

</PRE><P><LI>Click Options on the Tools menu to open the Options dialog box. Switch
   to the Project tab and change the following settings:
<P>
<P><PRE>      Startup Form:  Sub Main
      Project Name:  DLLandIDE
      Startmode:  OLE Server
</PRE>
<P><LI>Click "Make OLE DLL File..." on the File menu to create a compiled OLE
   DLL.

<P><LI>Click Options on the Tools menu to again open the Options dialog box.
   Switch to the Project tab and type in the name of the DLL generated in
   step 8 in the Compatible OLE Server text box.

<P><LI>Click "Make OLE DLL File..." to recompile the DLL.

<P><LI>Change the line of code in the Test subroutine contained in the class
<P><PRE>    module from "In DLL" to "In IDE."
</PRE>
<P><LI>Press F5 or click Start on the Run menu to run the server in the IDE.

<P><LI>Start another instance of the 32-bit edition of Visual Basic for
<P><PRE>    Windows, and add the following code in the Form_Click event to the
    default form, Form1:
</PRE><P>
<P><PRE>       Private Sub Form_Click()
<PRE></PRE>          Dim MyObj As Object

          Set MyObj = CreateObject("DLLandIDE.Class1")
          MyObj.Test
       End Sub

</PRE><P><LI>Step through the code in the client program and see that the text of
<P><PRE>    the message box displayed by the Test method contains "In DLL" and not
    "In IDE."
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: IAPOLE<BR>
Additional reference words: 4.00 vb4win vb432
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 10, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
