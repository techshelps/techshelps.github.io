

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Find Methods Don't Use Indexes to Speed Up VB Data Access </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108380">
<META NAME="KBModify" CONTENT="1996/02/18">
<META NAME="KBCreate" CONTENT="1993/12/09">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The find methods take longer to find farther records than nearer records. For example, the FindFirst method takes longer to find records that are farther into the Dynaset or Snapshot. Using FindFirst, FindNext, or FindLast on indexed fields isn't a...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA5V,QAPN,QBS0,QBQB,QA1S,QACI,QDN3,QDN9,QA7O,QA5B,QAPF,QBJZ,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Find Methods Don't Use Indexes to Speed Up VB Data Access</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108380</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows, version 3.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The find methods take longer to find farther records than nearer records.
For example, the FindFirst method takes longer to find records that are
farther into the Dynaset or Snapshot. Using FindFirst, FindNext, or
FindLast on indexed fields isn't any faster than on non-indexed fields.
<P>
<P><h2>CAUSE</h2>
 
<P>
Creating a Dynaset or Snapshot is relatively fast because of indexes.
Indexes are used when you create the Dynaset or Snapshot, such as when
you specify a selection criteria or an ORDER BY clause in the
CreateDynaset method. However, after the Dynaset or Snapshot is
created, it does not use the indexes for searches.
<P>
The find and move methods always search sequentially within the current
Dynaset or Snapshot. The find and move methods don't use indexes. For
example, the FindLast and MoveLast methods require reading the entire
recordset before processing continues.
<P>
The find methods are: FindFirst, FindLast, FindNext, and FindPrevious.
The move methods are: MoveFirst, MoveLast, MoveNext, and MovePrevious.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Repositioning the record pointer to a location far into a large Dynaset
or Snapshot may be faster if you re-create the Dynaset or Snapshot
instead of searching the existing one.
<P>
For example, you could change the RecordSource property of a data
control at run time as follows:
<P>
<PRE>   txtSearchString = "target string to find"
   ' Place the following two lines on one, single line:
   data1.Recordsource = "select * from mytable where myfield = '" &amp;
      txtSearchString &amp; "' order by myotherfield"
   data1.Refresh   ' Update the data control with the new Recordset

</PRE>You can also open a Table object in addition to the Dynaset or Snapshot.
You can use the Seek method on the Table to find a specific record keyed
by an index.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>REFERENCES</h2>
 

<UL><LI>"Microsoft Visual Basic 3.0: Professional Features Book 2:
   Data Access Guide," Chapter 3. See the section "Positioning the Current
   Record in a Recordset."

<LI>Help menu in Visual Basic.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
