

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Reset the Parent of a Visual Basic Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80189 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/01/21">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic version 1.0 does not support overlapping controls. This can be a problem if you want to drag and drop a control from one parent control to another parent control. Using the Windows API SetParent() function call, you can change a contro...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBT6,QAB5,QA7O,QAMN,QBV4,QAOE,QAHP,QBJZ,QAK6,QAH4,QA9N,QA5F,QAMA,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Reset the Parent of a Visual Basic Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80189 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic version 1.0 does not support overlapping controls. This can
be a problem if you want to drag and drop a control from one parent control
to another parent control. Using the Windows API SetParent() function call,
you can change a control's parent within Visual Basic.
<P>
Visual Basic versions 2.0 and 3.0 support overlapping controls with the
z-order method. For more information on the z-order method, search for
the z-order topic in the Visual Basic Help menu.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A frame, picture box, and form can act as parent controls. Creating a
control on top of any of these parent controls creates that control as
a child of the parent. When you use the Drag operations, there may be
times when you want to move a child control from one parent control to
another parent. If you allow the movement and don't change the child's
parent, you are creating overlapping controls, which are not supported
in Visual basic.
<P>
The SetParent function changes the parent of a child control.
SetParent has the following description:
<P>
<P><h3>SetParent%(ByVal hWndChild, ByVal hWndParen%)</h3>
 
<P>
<PRE>Parameter          Type/Description
----------         ----------------
hWndChild          HWnd/Identifies the child window
hWndParent         HWnd/Identifies the parent window

</PRE>The returned value identifies the previous parent window.
<P>
<P><h3>Step-by-Step Example</h3>
 
The example below demonstrates how to drag and drop a text box between
the form and a picture box on the form. The parent controls are the
picture box and the form. The child control is the text box.

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project if Visual
   Basic is already running. Form1 is created by default.

<P><LI>Add a Text box (Text1) to Form1.

<P><LI>Add a Picture box (Picture1) to Form1.

<P><LI>Add a Command button (Command1) to Form1.

<P><LI>Add the following code to the Global module:
<P>
<PRE>   '============= GLOBAL.BAS ==================
   Declare Function SetParent% Lib "user" (ByVal h%, ByVal h%)
   Declare Function GetFocus% Lib "user" ()
   ' GetFocus will be used to obtain the handles to the
   ' controls. This is not build into every control of Visual Basic

</PRE><P><LI>Add the following code to the general declarations section of Form1:
<P>
<PRE>   '============= FORM1 =======================
   Dim hWndText As Integer
   Dim hWndPicture As Integer

</PRE><P><LI>Add the following code to the Form_Load event procedure of Form1:
<P>
<PRE>   Sub Form_Load ()
      'form has to be shown to access any of the controls
      Show

      'get the handle to the text box
      Text1.SetFocus
      hWndText = GetFocus()

      'get the handle to the picture box
      Picture1.SetFocus
      hWndPicture = GetFocus()
   End Sub

</PRE><P><LI>Add the following code to the appropriate event procures:
<P>
<PRE>   Sub Picture1_DragDrop (Source As Control, X As Single, Y As Single)
      G% = SetParent(hWndText, hWndPicture)
      Source.Move X - Source.Width / 2, Y - Source.Height / 2
      Source.DragMode = 0
   End Sub

   Sub Form_DragDrop (Source As Control, X As Single, Y As Single)
      G% = SetParent(hWndText, Form1.hwnd)
      Source.Move X - Source.Width / 2, Y - Source.Height / 2
      Source.DragMode = 0
   End Sub

   Sub Command1_Click ()
      'start the dragging process
      Text1.DragMode = 1
   End Sub

</PRE><P><LI>Run the program. The Command1 button is used to start the dragging
   operation.
<P>
</OL><h3>Demonstration Steps</h3>
 
Try the following steps when running the application:

<OL><P><LI>Press the command button.

<P><LI>Place the cursor over the text box.

<P><LI>Press the left mouse button and drag the text box either over the
   picture control or over the form.

<P><LI>Once the text box is over the control, release the mouse button.
<P>
</OL>For better control of where the text box is placed, turn off Grid
Setting from the Edit menu of Visual Basic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
