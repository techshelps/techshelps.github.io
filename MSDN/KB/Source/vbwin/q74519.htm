

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Control Overlaid by 2nd Control Won't Refresh If Moved </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74519 ">
<META NAME="KBModify" CONTENT="1997/10/30">
<META NAME="KBCreate" CONTENT="1991/07/22">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic version 1.0 for Windows does not support overlapping controls. Having overlapping controls can result in portions of a control not refreshing correctly. If controls are moved over each other, then one or both of the controls may not co...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMN,QAOE,QA7O,QAB5,QAXB,QBVV,QAEF,QAPN,QAH4,QAHV,QA9N,QA5F,QANJ,QAMA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Control Overlaid by 2nd Control Won't Refresh If Moved</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74519 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS
kbenv kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic programming system for Windows, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Visual Basic version 1.0 for Windows does not support overlapping controls.
Having overlapping controls can result in portions of a control not
refreshing correctly. If controls are moved over each other, then one
or both of the controls may not correctly refresh even when the
controls are moved apart. This is known to happen when controls are
resized at run time using the Move method or by changing the Height
and Width properties as a result of a Form_Resize event. Because
controls must be resized one at a time, it is possible that one
control will briefly overlap another control during the resize
process at run time. The control that was briefly overlapped may not
refresh properly. An example of this behavior is given in the More
Information section below.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
This behavior can be improved by performing the Refresh method
(CtrlName.Refresh) on every overlapping control at run time, after an
overlapped control has been moved or after a form that contains
overlapping controls has been resized.
<P>
<P><h2>STATUS</h2>
 
<P>
This is not a problem with Visual Basic. It is the nature of overlapping
controls in Visual Basic version 1.0. This behavior occurs at run time in
the Visual Basic development environment or as an .EXE program.
<P>
This problem does not occur in Visual Basic version 2.0 or 3.0 for
Windows where overlapping controls are supported.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For more information about Visual Basic and overlapping controls,
query in this knowledge base on the following words:
<P>
<PRE>   overlapping and controls and Visual and Basic

</PRE><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>From the File menu, choose New Project (ALT, F, P).

<P><LI>Add a picture control (Picture1) to the default form (Form1).

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add a vertical scroll bar (VScroll1) to Form1.

<P><LI>Using the mouse, double-click Form1 to bring up the code
   window.

<P><LI>Within the Resize event procedure of Form1, add the following code:
<P>
<P><PRE>     Sub Form_Resize ()
<PRE></PRE>         Picture1.Move 0, 0, ScaleWidth - VScroll1.Width, _
                       ScaleHeight - Command1.Height
         VScroll1.Move ScaleWidth - VScroll1.Width, 0, _
                       VScroll1.Width, ScaleHeight - Command1.Height
         Command1.Move 0, ScaleHeight - Command1.Height, _
                       ScaleWidth, Command1.Height
     End Sub

</PRE></OL>Note: The underscores (_) in the above code example indicate that
the line should be concatenated with the next line in the Visual Basic
environment (VB.EXE).

<OL><P><LI>Run the program.

<P><LI>Using the mouse, resize the form by extending the bottom or right
   sides. When the bottom edge of the form is extended, the command
   button (Command1) will not refresh. When the right edge of Form1
   is extended, the scroll bar will not refresh. The refresh problems
   are caused because Picture1 is expanded and temporarily overlaps
   the control. When the control (VScroll1 or Command1) is moved out
   of the way, it is not refreshed.
<P>
</OL>To work around this behavior, use the Refresh method for Picture1,
VScroll1, and Command1 after the controls have be moved. Add the
following statements to Sub Form_Resize (after the Command1.Move
statement) above to overcome the behavior:
<P>
<PRE>   Picture1.Refresh
   VScroll1.Refresh
   Command1.Refresh
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: fixlist2.00 fixlist3.00 1.00 2.00 3.00<BR>
KBCategory: kbenv kbbuglist<BR>
KBSubcategory: EnvtDes<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
