

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Setting Form to Nothing Does Not Unload Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129903">
<META NAME="KBModify" CONTENT="1995/10/30">
<META NAME="KBCreate" CONTENT="1995/05/08">
<META NAME="Keywords" CONTENT="kbprg kbprb kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  If you use the following code to set a Form variable to nothing, the form does not unload:     Set Form1 = Nothing  CAUSE =====  Setting a form to nothing releases the handle or reference that Visual Basic has to the form, but it does not cause the...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXS,QAPN,QBS0,QAI2,QBVV,QAO4,QAFF,QAH4,QAYL,QBWT,QAB5,QA7O,QAOE,QAMN,QAIJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Setting Form to Nothing Does Not Unload Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 30, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129903</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you use the following code to set a Form variable to nothing, the form
does not unload:
<P>
<PRE>   Set Form1 = Nothing

</PRE><h2>CAUSE</h2>
 
<P>
Setting a form to nothing releases the handle or reference that Visual
Basic has to the form, but it does not cause the underlying form to be
unloaded. In fact, if you set a form to nothing, this invalidates the form
variable as a reference to the form so that later calls such as this fail:
<P>
<PRE>   Unload Form1

</PRE>Then you have to reference the form via the Forms collection.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use the Unload statement to explicitly unload your forms.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following syntax is perfectly valid for OLE Automation servers and
objects that are created in Visual Basic:
<P>
<PRE>   Dim Obj As Object
   Set Obj = Nothing

</PRE>OLE Automation servers automatically clean up and unload when their last
instance is set to Nothing. This is not true for forms.
<P>
<P><h3>Rules for Instantiating, Loading, Unloading, and Uninstantiating Forms</h3>
 
<P>
The rules for instantiating, loading, unloading, and uninstantiating are as
follows:
<P>
A form is instantiated when one of the following occurs:

<UL><LI>It is used in a Set New statement such as Set x = New Form1. However,
   note that Dim As New does not cause instantiation.

<LI>Any member of the form is referenced.

<LI>It is passed as an argument.
<P>
</UL>A form is loaded when one of the following occurs:

<UL><LI>The Load statement is used on it.

<LI>One of the built-in (not user-defined) properties or methods is
   referenced.

<LI>A property or method of a control or a control array on the form is
   referenced.

<LI>A control that is a member of a control array is referenced.

<LI>It is the MDI form, and a child form is loaded (this causes a show of
   the MDI form too).
<P>
</UL>A form is unloaded when:

<UL><LI>The Unload statement is used on it.
<P>
</UL>A form is uninstantiated when:

<UL><LI>All references to it or any controls or control arrays on it are
   released, AND it is unloaded.
<P>
</UL>The Forms collection contains all loaded forms, but not forms that are
instantiated yet unloaded.
<P>
The Initialize event occurs when a form is instantiated. The Load event
occurs when it is loaded. The Unload event occurs when it is unloaded, and
the Terminate event occurs when it is uninstantiated.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a Module (Module1.BAS) to your Project.

<P><LI>Add the following code to the General Declarations section of
   Module1.Bas:
<P>
   Global FormVar As Form
<P>
<PRE>   Sub Main()
      Set FormVar = New Form1
      Form1.Show
      Load FormVar
   End Sub

</PRE><P><LI>Choose Options from the Tools menu. Choose the Project tab on the dialog
   and change the Startup Form to Sub Main.

<P><LI>Add three Command buttons (Command1, Command2, and Command3) to Form1.

<P><LI>Add the following code to the appropriate procedures:
<P>
<PRE>   Private Sub Command1_Click()
      Set Form1 = Nothing
      Set FormVar = Nothing
      Unload Form1
      ' Unload FormVar
      ' The above line generates an Error if executed.
         ' Error 91 is now:
         ' "Object variable or With block variable not set."
      Msgbox Forms.Count &amp; " forms are still loaded!"
   End Sub

   Sub Command2_Click ()
      For I = Forms.Count-1 to 0 Step -1
         Unload Forms(I)
      Next
   End Sub

   Sub Command3_Click ()
      Unload Form1
      Set Form1 = Nothing
      Unload FormVar
      Set FormVar = Nothing
      Msgbox Forms.Count &amp; " forms are still loaded!"
   End Sub

</PRE><P><LI>Start the program by choosing Start from the Run menu or by pressing
   the F5 key.

<P><LI>Click the Command1 button. Note that although Form1 has been set to
   Nothing and explicitly unloaded on the next line, the form does not
   unload.

<P><LI>Click the Command2 button to unload Form1 via the Forms collection.
<P>
</OL>The Command3_Click procedure shows the correct sequence to use to avoid
this problem. Stop the program and re-run it. Then click only the Command3
button. Both forms unload properly.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb4all<BR>
KBCategory: kbprg kbprb kbcode<BR>
KBSubcategory: IAPVBA<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 30, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
