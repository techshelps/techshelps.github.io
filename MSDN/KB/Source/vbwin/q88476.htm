

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Hide a Non-Visual Basic Window or Icon </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q88476 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1992/08/26">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Occasionally, it is desirable to hide a window from a Visual Basic application that is not owned by the Visual Basic application. For example, when using the GRAPH.VBX custom control provided with the Microsoft Professional Toolkit for Visual Basic...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMA,QA5F,QA5B,QDL9,QBWQ,QBWO,QBWN,QAH4,QBJZ,QBWS,QA4Q,QAMN,QAIJ,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Hide a Non-Visual Basic Window or Icon</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q88476 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The following information applies to:

<UL><LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, versions 2.0 and 3.0
<LI>Microsoft Professional Toolkit for Visual Basic 1.0 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Occasionally, it is desirable to hide a window from a Visual Basic
application that is not owned by the Visual Basic application. For example,
when using the GRAPH.VBX custom control provided with the Microsoft
Professional Toolkit for Visual Basic version 1.0 for Windows and with the
Professional Edition of Visual Basic version 2.0 for Windows, an icon
appears at the bottom of the screen for the graphics server. This icon
represents a program that is a support module for the graph control and so
serves no direct purpose for the user. You can hide the icon by issuing two
Windows API calls.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The FindWindow and ShowWindow Windows APIs can be used to hide a
window. FindWindow uses the title on the top of the window to get a
handle that can then be used by ShowWindow. ShowWindow can perform
several different operations. In this case it makes a window invisible.
<P>
The following example hides the Graphics Server icon started by the Graph
control. You can use this same technique to hide any window currently
active in Windows.
<P>
<P><h3>Step-by-Step Example</h3>
 
1. Start Visual Basic or from the File menu, choose New Project (ALT, F, N)
<PRE>   if Visual Basic is already running. Form1 is created by default.

</PRE><P><LI>From the File menu, choose Add File. In the Files box, select the
   GRAPH.VBX custom control file. The GRAPH tool appears in the Toolbox.
   This starts the Graphics Server at the bottom of your screen.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Enter the following code into the global module taking care to enter
   each Declare statement entirely on one, single line:
<P>
  Declare Function FindWindow Lib "User" (ByVal lpClassName As Any,
<P><PRE>      ByVal lpWindowName As Any) As Integer
<PRE></PRE>   Declare Function ShowWindow Lib "User" (ByVal hWnd As Integer,
      ByVal nCmdShow As Integer) As Integer

</PRE><P><LI>Enter the following code into the Command1 click event procedure:
<P>
<PRE>   Sub Command1_Click()
      Dim Handle As Integer
      Dim WindowName As String

      WindowName = "Graphics Server"
      Const SW_Hide = 0

      Handle = FindWindow(0&amp;, WindowName)
      X% = ShowWindow(Handle, SW_Hide)
   End Sub

</PRE><P><LI>Press F5 to run the application.
<P>
</OL>When you choose the Command1 button, the Graphics Server icon becomes
invisible.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
