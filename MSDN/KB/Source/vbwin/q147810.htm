

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use Windows BitBlt Function in Visual Basic Application </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147810">
<META NAME="KBModify" CONTENT="1997/10/07">
<META NAME="KBCreate" CONTENT="1996/02/29">
<META NAME="Keywords" CONTENT="APrgGrap vb416 VB4WIN kbgraphic kbfasttip">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Windows GDI.EXE has a function called BitBlt that will move the source device given by the hSrcDC parameter to the destination device given by the hDestDC parameter. This article explains in detail the arguments of the Windows BitBlt function call....">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QANY,QAK6,QAY5,QDL9,QBWO,QBWN,QAH4,QAU4,QBE7,QBE6,QAYS,QAKM,QBWQ,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use Windows BitBlt Function in Visual Basic Application</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147810</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic for Windows, version 4.0
<P>
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows GDI.EXE has a function called BitBlt that will move the source
device given by the hSrcDC parameter to the destination device given by the
hDestDC parameter. This article explains in detail the arguments of the
Windows BitBlt function call.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To use BitBlt within a Visual Basic application:
<P>
Use the following Declare statement to declare the Function in 16-bit
Visual Basic. (If the declaration is placed in the General Declarations
section of a Form, the keyword Private must be placed at the beginning of
the declaration.)
<P>
<PRE>Declare Function BitBlt Lib "GDI" (ByVal hDestDC%, ByVal X%, ByVal Y%, _
</PRE>ByVal nWidth%, ByVal nHeight%, ByVal hSrcDC%, ByVal XSrc%, ByVal _
YSrc%, ByVal dwRop&amp;) As Integer
<P>
If you are using the 32-bit version of Visual Basic use the following
Declare statement. (If the declaration is placed in the General
Declarations section of a Form, the keyword Private must be placed at the
beginning of the declaration.)
<P>
<PRE>Declare Function BitBlt Lib "gdi32" (ByVal hDestDC As Long, ByVal x As _
</PRE>Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As Long, _
ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As Long, ByVal _
dwRop As Long) As Long
<P>
The following defines each of the formal parameters used in the Declare:
<P>
<PRE>Parameter   Definition
</PRE> 
<P>
<PRE>hDestDC     Specifies the device context that is to receive the bitmap.
X,Y         Specifies the logical x-coordinate and y-coordinate of the
            upper-left corner of the destination rectangle.

nWidth   Specifies the width (in logical units) of the destination
         rectangle and the source bitmap.

</PRE>nHeight  Specifies the height (in logical units) of the destination
<PRE>         rectangle and the source bitmap.

hSrcDC   Identifies the device context from which the bitmap will be
         copied. It must be NULL(zero) if the dwRop&amp; parameter specifies a
         raster operation that does not include a source.

</PRE>XSrc  Specifies the logical x-coordinate and the y-coordinate of the upper-
<PRE>      left corner of the source bitmap.

</PRE>dwRop Specifies the raster operation to be performed as defined below.
<P>
The following Raster operations are defined using the predefined constants
found in the WINDOWS.H file supplied with the Microsoft Windows Software
Development Kit (SDK). The value in the parentheses () is the value to
assign to the dwRop&amp; variable.
<P>
<PRE>Code/Value (hex)     Description
</PRE> 
<P>
<PRE>BLACKNESS (42)       Turn output black.
DSINVERT(550009)     Inverts the destination bitmap.
MERGECOPY(C000CA)    Combines the pattern and the source bitmap using the
                     Boolean AND operation.
MERGEPAINT(BB0226)   Combines the inverted source bitmap with the
                     destination bitmap using the Boolean OR operator.
NOTSRCCOPY(330008)   Copies the inverted source bitmap to the destination.
</PRE>NOTSRCERASE(1100A6)  Inverts the result of combining the destination and
<PRE>                     source bitmap using the Boolean OR operator.
PATCOPY(F00021)      Copies the pattern to the destination bitmap.
PATINVERT(5A0049)    Combines the destination bitmap with the pattern using
                     the Boolean XOR operator.
PATPAINT(FB0A09)     Combines the inverted source bitmap with the pattern
                     using the Boolean OR operator. Combines the result of
                     this operation with the destination bitmap using the
                     Boolean OR operator.
SRCAND(8800C6)       Combines pixels of the destination and source bitmap
                     using the Boolean AND operator.
SRCCOPY(CC0020)      Copies the source bitmap to destination bitmap.
SRCERASE(4400328)    Inverts the destination bitmap and combines the
                     results with the source bitmap using the Boolean AND
                     operator.
SRCINVERT(660046)    Combines pixels of the destination and source bitmap
                     using the Boolean XOR operator.
SRCPAINT(EE0086)     Combines pixels of the destination and source bitmap
                     using the Boolean OR operator.
WHITENESS(FF0062)    Turns all output white.

</PRE><h3>Step-by-Step Example</h3>
 
<P>
Here is an example showing how to copy the contents of a picture control to
the contents of another picture control.

<OL><P><LI>Define a form (Form1) and place two picture controls (Picture1 and
   Picture2) on Form1.

<P><LI>Select the Visual Basic Insert menu to add a new code module to your
   project with the default name of module1.bas.

<P><LI>In the General Declarations section of the module place the following
   code to declare the BitBlt API.
<P>
<P><PRE>      #If Win32 Then
      Declare Function BitBlt Lib "gdi32" (ByVal hDestDC As Long, ByVal x _
      As Long, ByVal y As Long, ByVal nWidth As Long, ByVal nHeight As _
      Long, ByVal hSrcDC As Long, ByVal xSrc As Long, ByVal ySrc As _
      Long, ByVal dwRop As Long) As Long
      #Else
      Declare Function BitBlt Lib "GDI" (ByVal hDestDC%, ByVal X%, ByVal _
      Y%, ByVal nWidth%, ByVal nHeight%, ByVal hSrcDC%, ByVal XSrc%, _
      ByVal YSrc%, ByVal dwRop&amp;) As Integer
      #End If
</PRE>
<P><LI>Display some graphics on Picture1 by loading from a picture file or by
   pasting from the clipboard at design time. You can load a picture from a
   file as follows:
<P>
   - Select Picture from the Properties list box and click the button with
<P><PRE>     three dots to the right of the Settings box.
</PRE><P>
   - Then select the desired picture file such as a .BMP or .ICO file
<P><PRE>     supplied with Microsoft Windows from the dialog box.
</PRE>
<P><LI>Add the following code to the Form_Click procedure:
<P>
<P><PRE>      Private Sub Form_Click ()
      #If Win32 Then
      Const PIXEL = 3
      Picture1.ScaleMode = PIXEL
      Picture2.ScaleMode = PIXEL
      hDestDC&amp; = Picture2.hDC
      x&amp; = 0: y&amp; = 0
      nWidth&amp; = Picture2.ScaleWidth
      nHeight&amp; = Picture2.ScaleHeight
      ' Assign information of the source bitmap.
      hSrcDC&amp; = Picture1.hDC
      xSrc&amp; = 0: ySrc&amp; = 0
      ' Assign the SRCCOPY constant to the Raster operation.
      dwRop&amp; = &amp;HCC0020
      Suc&amp; = BitBlt(hDestDC&amp;, x&amp;, y&amp;, nWidth&amp;, nHeight&amp;, hSrcDC&amp;, _
      xSrc&amp;, ySrc&amp;, dwRop&amp;)
      #Else
      ' Assign information of the destination bitmap. Note that Bitblt
      ' requires coordinates in pixels.
      Const PIXEL = 3
      Picture1.ScaleMode = PIXEL
      Picture2.ScaleMode = PIXEL
      hDestDC% = Picture2.hDC
      x% = 0: y% = 0
      nWidth% = Picture2.ScaleWidth
      nHeight% = Picture2.ScaleHeight
      ' Assign information of the source bitmap.
      hSrcDC% = Picture1.hDC
      xSrc% = 0: ySrc% = 0
      ' Assign the SRCCOPY constant to the Raster operation.
      dwRop&amp; = &amp;HCC0020
      Suc% = BitBlt(hDestDC%, x%, y%, nWidth%, nHeight%, hSrcDC%, _
      xSrc%, ySrc%, dwRop&amp;)
      #End If
      End Sub
</PRE>
<P><LI>Run the program. Click the form. The contents of the first picture will
   be displayed on the se cond picture.
</OL> 
<PRE>Keywords          : APrgGrap vb416 VB4WIN kbgraphic kbfasttip
Version           : 4.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
