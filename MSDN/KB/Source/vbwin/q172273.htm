

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO:Constants in OpenProcess API dsDesiredAccess Parameter </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q172273">
<META NAME="KBModify" CONTENT="1997/11/10">
<META NAME="KBCreate" CONTENT="1997/07/31">
<META NAME="Keywords" CONTENT="APrgOther kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The API text viewer included with Visual Basic 4.0 does not define the constants used in the OpenProcess API. The OpenProcess API is used to get a handle to a running process from a process ID. The existing samples in the Microsoft Knowledge Base d...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAY5,QBV8,QAB9,QDIT,QAKJ,QDL9,QBW7,QBWQ,QBWO,QBWN,QA5B,QAY2,QAI5,QAHE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO:Constants in OpenProcess API dsDesiredAccess Parameter</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q172273</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Learning, Professional, and Enterprise Editions
   for Windows, version 5.0
<LI>Microsoft Visual Basic Standard, Professional, and Enterprise Editions,
   32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The API text viewer included with Visual Basic 4.0 does not define the
constants used in the OpenProcess API. The OpenProcess API is used to get a
handle to a running process from a process ID. The existing samples in the
Microsoft Knowledge Base define one of the possible constants, SYNCHRONIZE,
but the other values may be of use in special situations.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The constants are:
<P>
<PRE>PROCESS_ALL_ACCESS   =&amp;H1F0FFF Specifies all possible access flags for
            the process object.

PROCESS_CREATE_THREAD   =&amp;H2  Enables using the process handle in the
            CreateRemoteThread function to create a thread in the process.

PROCESS_DUP_HANDLE   =&amp;H40 Enables using the process handle as either
            the source or target process in the DuplicateHandle function to
            duplicate a handle.

</PRE>PROCESS_QUERY_INFORMATION =&amp;H400 Enables using the process handle in the
<PRE>            GetExitCodeProcess and GetPriorityClass functions to read
            information from the process object.

PROCESS_SET_INFORMATION =&amp;H200   Enables using the process handle in the
            SetPriorityClass function to set the priority class of the
            process.

</PRE>PROCESS_TERMINATE =&amp;H1  Enables using the process handle in the
<PRE>            TerminateProcess function to terminate the process.

</PRE>PROCESS_VM_OPERATION =&amp;H8  Enables using the process handle in the
<PRE>            VirtualProtectEx and WriteProcessMemory functions to modify the
            virtual memory of the process.

PROCESS_VM_READ      =&amp;H10 Enables using the process handle in the
            ReadProcessMemory function to read from the virtual memory of
            the process.

</PRE>PROCESS_VM_WRITE  =&amp;H20 Enables using the process handle in the
<PRE>            WriteProcessMemory function to write to the virtual memory of
            the process.

SYNCHRONIZE    =&amp;H100000 Enables using the process handle in any of the
            wait functions to wait for the process to terminate.

</PRE>If you need to create a handle that is to be used for more than one type of
access, you should add the desired access type parameters together. For
example, to get a handle to use with WaitForSingleObject and
GetExitCodeProcess, you would use:
<P>
<PRE>   hProcess = OpenProcess(PROCESS_QUERY_INFORMATION+SYNCHRONIZE,FALSE,pid)

</PRE><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VBWIN/Q129797.htm">Q129797</A></B>
   TITLE     : HOWTO: Launch a Win32 Application from Visual Basic

   ARTICLE-ID: <B><A HREF="../VBWIN/Q150767.htm">Q150767</A></B>
   TITLE     : HOWTO: Redirect Standard I/O of a Console Application
</PRE> 
<PRE>Keywords          : APrgOther kbhowto
Version           : WINDOWS:4.0, 5.0
Platform          : WINDOWS
Hardware          : x86
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
