

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: "Too many local, nonstatic variables" Error Message </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179140">
<META NAME="KBModify" CONTENT="1998/01/12">
<META NAME="KBCreate" CONTENT="1998/01/09">
<META NAME="Keywords" CONTENT="vb5all">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When compiling an application that calls functions or subroutines in a DLL and that passes large User Defined Types to the DLL, you may receive the following error:      Too many local, nonstatic variables   CAUSE =====  The above error is the resu...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAD7,QAGI,QAH7,QAH6,QAFF,QALG,QAB4,QBJC,QA9N,QAY5,QAIF,QACJ,QAKP,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: "Too many local, nonstatic variables" Error Message</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 12, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179140</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When compiling an application that calls functions or subroutines in a DLL
and that passes large User Defined Types to the DLL, you may receive the
following error:
<P>
<PRE>   "Too many local, nonstatic variables"

</PRE><h2>CAUSE</h2>
 
<P>
The above error is the result of a bug in the Visual Basic compiler when
allocating memory for passing User Defined Types (UDTs) to functions or
subroutines in DLLs. The error may occur when this amount exceeds
approximately 64KB.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
You can work around this problem by changing the way that such UDTs are
passed to the DLL. When you pass a UDT to a DLL, you are actually passing a
pointer to the first memory location of the UDT. Another way to pass this
pointer is by copying the UDT to a Byte array and passing the first element
of the Byte array by reference.
<P>
NOTE: You will need to calculate the size of this Byte array manually,
taking into consideration the issues relating to byte-alignment.
<P>
For more information regarding byte-alignment, refer to Section 6 of the
VB5DLL.DOC document located in the Tools\Docs folder of the Visual Basic
5.0 CD-ROM.
<P>
Because the Visual Basic run-time library converts the strings from UNICODE
to ANSI when using the CopyMemory function below, you should only allocate
1 byte for each character in your fixed-length strings.
<P>
Assuming you have the following UDT and Declare statement for your DLL:
<P>
<PRE>   Type LargeUDT
      nAge as Integer
      sName As String * 4000
      lMiles as Long
   End Type

   Dim aLargeUDT As LargeUDT

   Declare Sub MySub Lib "MYDLL.DLL" (x As LargeUDT)

</PRE>Follow these steps to implement a workaround to the problem:

<OL><P><LI>Manually calculate the size necessary for the UDT:
<P>
<P><PRE>      Const UDT_SIZE = 4008
</PRE>
<P><LI>Create the following Declare within your application (a Windows A
   function to copy memory from one location to another):
<P>
<P><PRE>      Declare Sub CopyMemory Lib "KERNEL32" Alias "RtlMoveMemory" ( _
<PRE></PRE>         lpvDest as Any, lpvSource as Any, ByVal cbCopy as Long)

</PRE><P><LI>Change the declaration of the subroutine within the DLL to accept 1 byte
   by reference in place of the UDT argument:
<P>
<P><PRE>      Declare Sub MySub Lib "MYDLL.DLL" (x As Byte)
</PRE>
<P><LI>Create a Byte Array to store the User Defined Type. Re-dimension the UDT
   using the manually-calculated constant UDT_SIZE in step 1:
<P>
<P><PRE>      Dim ab() as byte
</PRE><P>
<P><PRE>      Redim ab(UDT_SIZE)
</PRE>
<P><LI>When calling the subroutine in the DLL, you must first call CopyMemory
   to copy the UDT into the Byte array. Next, call the subroutine, passing
   it the first element of the Byte array. Finally, call CopyMemory again
   to copy the Byte array back into the UDT:
<P>
<P><PRE>      CopyMemory ab(0), aLargeUDT, UDT_SIZE
      MySub ab(0)
      CopyMemory aLargeUDT, ab(0), UDT_SIZE
</PRE><P>
</OL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
bug and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new Standard EXE project. Form1 is created by default.

<P><LI>Paste the following code into the code window of the form. Note
   that there are nine calls to MySub and the ninth one is commented out:
<P>
<P><PRE>      Option Explicit
      Private Type LargeUDT
<PRE></PRE>         a As String * 4000
      End Type

      Dim aLargeUDT As LargeUDT

      Private Declare Sub MySub Lib "MYDLL.DLL" (x As LargeUDT)

      Private Sub Form_Load()
         MySub aLargeUDT
         MySub aLargeUDT
         MySub aLargeUDT
         MySub aLargeUDT
         MySub aLargeUDT

         MySub aLargeUDT
         MySub aLargeUDT
         MySub aLargeUDT
         'MySub aLargeUDT
      End Sub

</PRE><P><LI>Compile the application by selecting "Make Project1.exe" from the File
   Menu. It should compile as expected, and create the Project1.exe file.

<P><LI>Uncomment the last call to MySub by removing the apostrophe at the
   start of the line.

<P><LI>Compile the application again and note that it now fails with the error,
   "Too many local, nonstatic variables."
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information on calling subroutines and functions in DLLs,
please see the following document:
<P>
VB5DLL.DOC, Visual Basic 5 CD-ROM (Professional and Enterprise Editions
Only), in the following folder ...\TOOLS\DOCS\.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: UDT<BR>
Keywords          : vb5all<BR>
Version           : WINDOWS:5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 12, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
