

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a Private Data Collection for an MDI Child Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154666">
<META NAME="KBModify" CONTENT="1997/01/10">
<META NAME="KBCreate" CONTENT="1996/08/12">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  A form can contain public and private properties similar to the properties found in the Properties window of a form or component. You can associate data with individual forms by creating a property procedure. Property procedures allow individual fo...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAFF,QBJZ,QAH4,QBWS,QBT6,QAI2,QBV4,QAK7,QBS0,QAHP,QBWC,QAML,QAIJ,QDIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create a Private Data Collection for an MDI Child Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154666</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft Visual
   Basic, 16-bit and 32-bit, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A form can contain public and private properties similar to the properties
found in the Properties window of a form or component. You can associate
data with individual forms by creating a property procedure. Property
procedures allow individual forms to hold unique data sets.
<P>
This article demonstrates how to create property procedures with an MDI
application containing a child form template. As a result of using this
technique, each instance of the child form can then contain a unique data
set.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Create Sample Program</h3>
 

<OL><P><LI>Start the 16-bit or 32-bit edition of Visual Basic 4.0, or if it is
   already running, click New Project on the File menu.

<P><LI>Add an MDI form to the project by completing the following steps:
<P>
   a. From the Insert menu, click MDI Form.
<P>
   b. Add a PictureBox control to the MDIForm1 form.
<P>
   c. Add a Command button to the PictureBox control.
<P>
   d. Copy the following code to the Code window of the MDIForm1 form:
<P>
<PRE>         Private Sub MDIForm_Load()
            Command1.Caption = "New Child Form"
         End Sub

         Private Sub Command1_Click()
            Dim F As New Form1
            F.Caption = "Child " &amp; Forms.Count
            F.Show
         End Sub

   e. Make the MDIForm1 form the startup form by completing the following
      steps:

      1. From the Tools menu, click Options.

      2. Click the Project Tab.

      3. In the Startup Form combo box, click MDIForm1.

      4. Click OK to close the Options dialog box.

</PRE><P><LI>Add another form to the project by completing the following steps:
<P>
   a. On the Insert menu, click Form to insert another form into the
<P><PRE>      project.
</PRE><P>
   b. Add two command buttons and two text box controls to the Form2 form.
<P>
   c. Copy the following code to the Code window of the Form2 form:
<P>
<PRE>         Private Sub Form_Load()
            Text1.Text = ""
            Text2.Text = ""
            Command1.Caption = "Set Property"
            Command2.Caption = "Get Property"
         End Sub

         Private Sub Command1_Click()
            With MDIForm1.ActiveForm
               .FirstName = Text1.Text
               .LastName = Text2.Text
            End With
         End Sub

         Private Sub Command2_Click()
            With MDIForm1.ActiveForm
               Text1.Text = .FirstName
               Text2.Text = .LastName
            End With
         End Sub

</PRE><P><LI>Make the following changes to the Form1 form.
<P>
   a. Change the MDIChild property to True.
<P>
   b. Add a command button.
<P>
   c. Copy the following code to the Code window of the Form1 form:
<P>
<PRE>         Private TempFirstName As String
         Private TempLastName As String

         Private Sub Form_Load()
            Command1.Caption = "Show Dialog Box"
         End Sub

         Private Sub Command1_Click()
            Form2.Show
         End Sub

         Public Property Get FirstName()
            FirstName = TempFirstName
         End Property

         Public Property Let FirstName(vNewValue)
            TempFirstName = vNewValue
         End Property

         Public Property Get LastName()
            LastName = TempLastName
         End Property

         Public Property Let LastName(vNewValue)
            TempLastName = vNewValue
         End Property

</PRE><P><LI>Save the project.

<P><LI>Run the sample program by completing the following steps:
<P>
   a. On the Run menu, click Start or press the F5 key to start the
<P><PRE>      program.
</PRE><P>
   b. Create two child forms by clicking the New Child Form button twice.
<P>
   c. For each child form, click the Show Dialog button to display a Form2
<P><PRE>      form.
</PRE><P>
   d. For each Form2 form, enter a different first and last name in the
<P><PRE>      text boxes and click the Set Property button.
</PRE><P>
   e. From each child form, click the Show Dialog button again to display
<P><PRE>      the Form2 form created from the child form. Click the Get Property
      button. Each Form2 form should contain its own first and last name
      data items in the text boxes.
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbHowTo<BR>
KBSubcategory: PrgOther<BR>
Additional reference words: 4.00 kbdsd vb4win vb4all
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
