

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use the New MS Access 2.0 DDL Additions in VB 3.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115833">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/06/05">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT=" NOTE: To run the sample code in this article you must own the Microsoft Access 2.0/Visual Basic 3.0 Compatibility Layer and Microsoft Access version 2.0 in addition to Visual Basic.   This article contains a sample application that demonstrates how ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QBS0,QA1S,QAHT,QA9N,QARR,QDKY,QBVR,QDN9,QAMB,QAMA,QAZV,QAY2,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use the New MS Access 2.0 DDL Additions in VB 3.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115833</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Visual Basic programming system for Windows, version 3.0
- Microsoft Access 2.0/Visual Basic 3.0 Compatibility Layer
- Microsoft Access, version 2.0
 
<P>
NOTE: To run the sample code in this article you must own the Microsoft
Access 2.0/Visual Basic 3.0 Compatibility Layer and Microsoft Access
version 2.0 in addition to Visual Basic.
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains a sample application that demonstrates how to use
the new Data Definition Language (DDL) features added to Microsoft Access
version 2.0 and made available to Visual Basic version 3.0 by way of the
Compatibility Layer. This article addresses the following DDL features:
<P>
<PRE>   CREATE TABLE
   DROP TABLE
   DROP INDEX
   ALTER TABLE
   CREATE INDEX

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The following sections contain descriptions and syntax statements that
came from the Microsoft Access version 2.0 Help file. Please see the
Help file for more detailed information. Each syntax for each DDL function
should appear on one, single line. To use the DDL functions in Visual
Basic, use the Execute method, for example:
<P>
<PRE>   db.Execute "DROP TABLE [Another Table];"

</PRE><h3>CREATE TABLE</h3>
 
<P>
Use CREATE TABLE to create a new table in an existing database in a
single step by using the Execute method in Visual Basic. Syntax:
<P>
<PRE>   CREATE TABLE table (field1 type [(size)] [index1] [, field2 type
      [(size)] [index2] [, ...]] [, multifieldindex [, ...]])

</PRE><h3>DROP TABLE &amp; DROP INDEX</h3>
 
<P>
Use DROP TABLE to delete an existing table from a database or DROP INDEX
to delete an existing index from a table in a single step by using the
Execute method in Visual Basic. Syntax:
<P>
<PRE>   DROP {TABLE table | INDEX index ON table}

</PRE><h3>ALTER TABLE</h3>
 
<P>
Use ALTER TABLE to modify the design of a table after using the CREATE
TABLE statement to create it. Syntax:
<P>
<PRE>   ALTER TABLE table {ADD {[COLUMN] field type[(size)] [CONSTRAINT index]
      | CONSTRAINT multifieldindex}
      | DROP {[COLUMN] field I CONSTRAINT indexname} }

</PRE><h3>CREATE INDEX</h3>
 
<P>
Use the CREATE INDEX statement to create a new index on an existing
table. Syntax:
<P>
<PRE>   CREATE [ UNIQUE ] INDEX index
      ON table (field[, ...])
      [WITH { PRIMARY | DISALLOW NULL | IGNORE NULL }]

</PRE><h3>Step-by-Step Example for Using New DDL Functions in Visual Basic</h3>
 
<P>
The following sample code demonstrates how to use the Execute method with
each of the new DDL functions. The new DDL functions operate identically
on both Microsoft Access version 1.x and 2.0 databases.
<P>
WARNING: Use caution when running these routines. You don't want to
accidentally delete a table or index that you really wanted to keep.
You should test these routines on sample databases first.
<P>
The sample code in this example goes through each of the new DDL routines,
one by one. Certain command buttons are invisible at the start, so it is
important to follow the instructions exactly.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>The contents of the FORM1.FRM file follows. Copy this code into a text
   editor. Then change the command lines that are shown below as two lines
   into a single line, and save the file. Then remove the default Form1
   form from the Visual Basic project and add the newly saved FORM1.FRM
   file to the project.
<P>
   VERSION 2.00
   Begin Form Form1
<PRE>      Caption         =   "Form1"
      ClientHeight    =   4965
      ClientLeft      =   1095
      ClientTop       =   1485
      ClientWidth     =   8460
      Height          =   5370
      Left            =   1035
      LinkTopic       =   "Form1"
      ScaleHeight     =   4965
      ScaleWidth      =   8460
      Top             =   1140
      Width           =   8580
      Begin ListBox List1
         Height          =   2175
         Left            =   120
         Sorted          =   -1  'True
         TabIndex        =   5
         Top             =   600
         Visible         =   0   'False
         Width           =   2775
      End
      Begin CommandButton Command2
         Caption         =   "Create a new Index for BIBLIO.MDB"
         Height          =   495
         Left            =   3240
         TabIndex        =   4
         Top             =   600
         Visible         =   0   'False
         Width           =   4335
      End
      Begin CommandButton Command4
         Caption         =   "Drop the new Index from BIBLIO.MDB"
         Height          =   495
         Left            =   3240
         TabIndex        =   3
         Top             =   2040
         Visible         =   0   'False
         Width           =   4335
      End
      Begin CommandButton Command3
         Caption         =   "Alter the new Table in BIBLIO.MDB"
         Height          =   495
         Left            =   3240
         TabIndex        =   2
         Top             =   1320
         Visible         =   0   'False
         Width           =   4335
      End
      Begin CommandButton Command5
         Caption         =   "Drop the new Table from BIBLIO.MDB"
         Height          =   495
         Left            =   3240
         TabIndex        =   1
         Top             =   2760
         Visible         =   0   'False
         Width           =   4335
      End
      Begin CommandButton Command1
         Caption         =   "Create a new Table for BIBLIO.MDB"
         Height          =   495
         Left            =   3240
         TabIndex        =   0
         Top             =   0
         Width           =   4335
      End
      Begin Label Label1
         Caption         =   "List of Table Names:"
         Height          =   375
         Left            =   480
         TabIndex        =   6
         Top             =   120
         Visible         =   0   'False
         Width           =   2175
      End
   End

   Sub Command1_Click ()
      Dim db As database
      ' Change the following two lines into one single line:
      MySQL = "CREATE TABLE [Another Table] ([First Name] TEXT,
         [Last Name] TEXT);"
      Set db = OpenDatabase("C:\VB\BIBLIO.MDB")
      db.Execute MySQL
      command2.Visible = True
      For i% = 0 To db.TableDefs.Count - 1
         list1.AddItem db.TableDefs(i%).Name
      Next i%
      label1.Visible = True
      list1.Visible = True
      db.Close
      command2.setfocus
   End Sub

   Sub Command2_Click ()
      Dim db As database
      ' Change the following two lines into one single line:
      MySQL = "CREATE UNIQUE INDEX MyIndex ON [Another Table] ([Last Name])
         WITH PRIMARY;"
      Set db = OpenDatabase("C:\VB\BIBLIO.MDB")
      db.Execute MySQL
      command3.Visible = True
      list1.Clear
      For i% = 0 To db.TableDefs("Another Table").Indexes.Count - 1
         list1.AddItem db.TableDefs("Another Table").Indexes(i%).Name
      Next i%
      label1.Caption = "List of Index Names for 'Another Table'"
      db.Close
      command3.setfocus
   End Sub

   Sub Command3_Click ()
      Dim db As database
      MySQL = "ALTER TABLE [Another Table] ADD COLUMN Salary CURRENCY;"
      Set db = OpenDatabase("C:\VB\BIBLIO.MDB")
      db.Execute MySQL
      command4.Visible = True
      list1.Clear
      For i% = 0 To db.TableDefs("Another Table").Fields.Count - 1
         list1.AddItem db.TableDefs("Another Table").Fields(i%).Name
      Next i%
      label1.Caption = "List of Field Names for 'Another Table'"
      db.Close
      command4.setfocus
   End Sub

   Sub Command4_Click ()
      Dim db As database
      MySQL = "DROP INDEX MyIndex ON [Another Table];"
      Set db = OpenDatabase("C:\VB\BIBLIO.MDB")
      db.Execute MySQL
      command5.Visible = True
      list1.Clear
      For i% = 0 To db.TableDefs("Another Table").Indexes.Count - 1
         list1.AddItem db.TableDefs("Another Table").Indexes(i%).Name
      Next i%
      label1.Caption = "List of Index Names for 'Another Table'"
      db.Close
      command5.setfocus
   End Sub

   Sub Command5_Click ()
      Dim db As database
      MySQL = "DROP TABLE [Another Table];"
      Set db = OpenDatabase("C:\VB\BIBLIO.MDB")
      db.Execute MySQL
      list1.Clear
      For i% = 0 To db.TableDefs.Count - 1
         list1.AddItem db.TableDefs(i%).Name
      Next i%
      label1.Caption = "List of Table Names"
      db.Close
   End Sub

</PRE><P><LI>From the Run menu, choose Start (ALT, R, S), or press the F5 key
   to run the program.

<P><LI>Click the Command1 or 'Create a new Table for BIBLIO.MDB' button to
   create a new table (Another Table). You will see it added to the list
   box.

<P><LI>Click the Command2 or 'Create a new Index for BIBLIO.MDB' button to
   create a new index (MyIndex). You will see it added to the list box.

<P><LI>Click the Command3 or 'Alter the new Table in BIBLIO.MDB' button to
   add a new field (Salary) to the new table (Another Table). You will
   see it and the two original fields listed in the list box.

<P><LI>Click the Command4 or 'Drop the new Index from BIBLIO.MDB' button to
   delete the new index (MyIndex). You will see an empty list box.

<P><LI>Click the Command5 or 'Drop the new Table from BIBLIO.MDB' button to
   delete the new table (Another Table) from the BIBLIO.MDB database. You
   will see that this table is no longer listed in the list box.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: APrgDataAcc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
