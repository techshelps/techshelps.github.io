

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Sync the StatusBar Text with the ToolTip Text </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152259">
<META NAME="KBModify" CONTENT="1997/05/21">
<META NAME="KBCreate" CONTENT="1996/06/09">
<META NAME="Keywords" CONTENT="PrgCtrlsCus PrgCtrlsStd vb432 VB4WIN kbusage kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The Microsoft Windows Common Controls ocx (comctl32.ocx) contains, among others, controls for Toolbar and StatusBar. With this ocx, the Toolbar and StatusBar can easily be added to a Visual Basic 4.0 application. However, there is no easy way for t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QA5D,QAMB,QBS0,QAPN,QAB5,QANS,QANF,QA7O,QATK,QAOE,QAMN,QAF0,QDL9,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Sync the StatusBar Text with the ToolTip Text</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 21, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152259</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Standard, Professional, and Enterprise Editions of Microsoft
   Visual Basic, 32-bit only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Windows Common Controls ocx (comctl32.ocx) contains, among
others, controls for Toolbar and StatusBar. With this ocx, the Toolbar and
StatusBar can easily be added to a Visual Basic 4.0 application. However,
there is no easy way for the text of the StatusBar to be in sync with the
text of the ToolTip from the Toolbar.
<P>
This article describes how to implement this behavior in Visual Basic 4.0
with a few APIs and the Timer control.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Some of the more popular software, such as Word, Excel, PowerPoint, etc.,
will not only display the ToolTip, but will also display text in the
StatusBar to give users a more detailed description of what the Toolbar
button will do.
<P>
Although this feature is not built into the Toolbar and StatusBar controls,
there are ways to mimic its effect in a Visual Basic 4.0 application.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Add the StatusBar, Toolbar, and Timer control to a form.

<P><LI>On the Toolbar, insert two Buttons.

<P><LI>On the first Button, set the ToolTipText property to "New," and the
   Tag property to "Creates a new xxx."

<P><LI>On the second Button, set the ToolTipText property to "Open," and the
   Tag property to "Opens an existing xxx."

<P><LI>On the StatusBar, set the AutoSize property of the first Panel to 1.
   This will widen the Panel to the width of the StatusBar.

<P><LI>On the Timer, set the Interval property to 100. This will trigger the
   Timer event every 100 milliseconds.

<P><LI>Add the following code to the Declarations section of this Form:
<P>
<P><PRE>    'API Declarations
    Private Declare Function FindWindow Lib "user32" Alias "FindWindowA" _
       (ByVal pClassName As String, ByVal lpWindowName As String) As Long
    Private Declare Function GetWindowText Lib "user32" Alias _
       "GetWindowTextA" (ByVal hwnd As Long, ByVal lpString As String, _
       ByVal cch As Long) As Long
</PRE>
<P><LI>Add the following code to the Timer event of the Timer control:
<P>
<PRE>   Private Sub Timer1_Timer()

   Dim class_name As String
   Dim window_handle As Long
   Dim window_text As String * 100
   Dim window_text_len As Long

   Dim tooltip_text As String
   Dim button_index As Integer
   Dim statusbar_text As String

       'Define the class name.
       class_name = "tooltips_class32"
       'Find and get the window handle.
       window_handle = FindWindow(class_name, vbNullString)

        If window_handle &lt;&gt; 0 Then

           'Get the window text
           window_text_len = GetWindowText(window_handle, window_text, 100)
           tooltip_text = Left$(window_text, window_text_len)

           If tooltip_text = "" Then
               'Mouse not over a Toolbar Button.
               statusbar_text = ""
           Else
               'Iterate through the Buttons collection and find the Button.
               'When found, retrieve text (Button.Tag) for the Statusbar.
               For button_index = 1 To Toolbar1.Buttons.Count
                      If Toolbar1.Buttons(button_index).ToolTipText = _
                       tooltip_text Then

                       statusbar_text = Toolbar1.Buttons(button_index).Tag
                       Exit For
                   End If
               Next
           End If

           'Check whether Statusbar already contains this text
           '(without this, the Statusbar will flicker from frequent and
           'unnecessary updates). If it doesn't, update the Statusbar
           'with new text.
           If StatusBar1.Panels(1).Text &lt;&gt; statusbar_text Then
               StatusBar1.Panels(1).Text = statusbar_text
           End If

       End If

   End Sub

</PRE><P><LI>Finally, run this application and place the pointer over each of
   the two Toolbar Buttons. The text of the StatusBar will reflect the
   purpose of the Button that is currently under the pointer.
</OL> 
<PRE>Keywords          : PrgCtrlsCus PrgCtrlsStd vb432 VB4WIN kbusage kbhowto
Version           : 4.0
Platform          : NT WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 21, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
