

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changing WIN.INI Printer Settings from VB using Windows API </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142388">
<META NAME="KBModify" CONTENT="1996/01/12">
<META NAME="KBCreate" CONTENT="1996/01/10">
<META NAME="Keywords" CONTENT="kbprint kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  From Visual Basic, you can call Windows API routines to change the default printer settings stored in the Windows WIN.INI file. You can also broadcast a message to all applications currently loaded in Windows to try to force them to use this WIN.IN...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QDL9,QBWO,QBWN,QBWQ,QAOX,QACT,QABA,QATX,QA0B,QACJ,QAJH,QANF,QAH4,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Changing WIN.INI Printer Settings from VB using Windows API</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142388</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional and Enterprise Editions of Microsoft Visual Basic,
<PRE>  16-bit only, for Windows, version 4.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
From Visual Basic, you can call Windows API routines to change the default
printer settings stored in the Windows WIN.INI file. You can also broadcast
a message to all applications currently loaded in Windows to try to force
them to use this WIN.INI change. However, most Windows version 3.0 and 3.1
applications are not designed to act on this broadcast message.
<P>
Applications that are started after you change WIN.INI will reflect your
WIN.INI changes, as will applications that are currently loaded, if the
user did not change Printer Setup in the application. But if the user
changed Printer Setup in a currently loaded application, the application
will ignore any changes to WIN.INI during that application's session.
<P>
There are only two ways to ensure that an application will take the changes
made to the printer settings stored in WIN.INI. Either method will work:

<UL><LI>Exit and restart the application, or restart Windows.
<LI>Choose options in the application Printer-Setup dialog box.
<P>
</UL>This article also describes how to add a Printer Setup dialog box to a
Visual Basic application that optionally changes WIN.INI, and it gives
example code showing how to change the default printer in Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following steps change the printer settings in the WIN.INI file, and
then broadcast a message to all programs currently loaded in Windows to
make the change take effect:

<OL><P><LI>Call the Windows API functions GetProfileString and WriteProfileString
   to change the printer setting device= in the [windows] section of the
   WIN.INI file to one of the printers listed in the [devices] section.
<P>
   For example, a WIN.INI file would contain the following settings to make
   an HP LaserJet the default printer:
<P>
<P><PRE>      [windows]
      device=HP LaserJet IIISi PostScript,pscript,LPT1:
</PRE><P>
<P><PRE>      [devices]
      Generic / Text Only=TTY,FILE:
      HP LaserJet IIISi PostScript=pscript,LPT1:
</PRE><P>
   For a detailed article that discusses how to change WIN.INI, please see
   the following article(s) in the Microsoft Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../VBWIN/Q75639.htm">Q75639</A></B>
<PRE>   TITLE     :How to Access Windows Initialization Files Within Visual
              Basic

</PRE><P><LI>Call the Windows API WriteProfileString function using all NULL
   pointer parameters to force Windows to reload the WIN.INI file into
   memory. (WIN.INI is normally cached in memory and not reloaded until
   you restart Windows.) Pass all parameters By Value as type Long with
   value 0.

<P><LI>Call the SendMessage API function with hWnd% parameter set to
   HWND_BROADCAST (&amp;hffff) to broadcast a message to all pop-up windows
   currently loaded in the system. Setting the wMsg% parameter to
   WM_WININICHANGE notifies all top-level windows of a WIN.INI change,
   and WM_DEVMODECHANGE notifies them of a device-mode change.
<P>
</OL>However, if you changed settings in the Printer-Setup dialog box of a
loaded application earlier in this session of Windows, most applications
ignore the SendMessage broadcast. By design, most Windows-based
applications ignore this message, as explained in the Notepad example
given below.
<P>
<P><h3>Example of How Notepad Uses WIN.INI Printer Settings</h3>
 
<P>
Under Windows, you can change default printer settings in the Printers
section of the Control Panel program. This writes changes to the WIN.INI
file on disk and in memory. Many other applications, such as Microsoft
Word, also write changes to the WIN.INI file.
<P>
When Notepad starts, a global variable of type PRINTDLG provides the
structure to initialize the Print dialog box. One of the members of that
structure is hDevNames. It contains three strings that specify the driver
name, printer name, and output port name. When Notepad starts, these three
strings start with a NULL value. This tells Notepad to get its printer
device context (DC) from the WIN.INI file.
<P>
If you choose Print Setup from within NotePad and make changes, NotePad
will continue using those changes for the remaining NotePad session, and
the three strings in hDevNames will no longer all be NULL. That session of
NotePad will no longer look in the WIN.INI file, so it will ignore any
WM_WININICHANGE and WM_DEVMODECHANGE messages. Many Windows-based
applications work in this manner. Internally, they process only certain
messages, and they pass all unrecognized messages to the default API
DefWindowProc function, which does nothing.
<P>
Because you cannot rely on an application processing WM_WININICHANGE and
WM_DEVMODECHANGE messages, an application such as Visual Basic cannot
force the updated WIN.INI modifications onto another loaded application
by sending Windows messages. To change printer parameters to those changed
in the WIN.INI file, you must use one of these two techniques:

<UL><LI>Exit and restart the application, or restart Windows.
<LI>Use the application's Printer-Setup dialog box to set the parameters.
<P>
</UL><h3>Adding Printer Setup to a Visual Basic Application</h3>
 
<P>
To add a Printer-Setup dialog to a Visual Basic application, use the Common
Dialog printer control provided with the following products:

<UL><LI>Visual Basic version 1.0 Professional Toolkit for Windows
<LI>Professional Edition of Visual Basic version 2.0 for Windows
<LI>Standard or Professional Edition of Visual Basic version 3.0 for Windows
<LI>Standard, Professional and Enterprise Editions of Microsoft Visual
   Basic for Windows, version 4.0
<P>
</UL>Setting the PrinterDefault property to True writes any Printer Setup
changes to the WIN.INI file:
<P>
<PRE>   CMDialog1.PrinterDefault = True

</PRE></OL>You can use the Flags property of the Common Dialog printer control to
specify various options, as described on page 208 of "Visual Basic 3.0:
Language Reference." For example, you can have a print dialog with a button
for Printer Setup. Or, you can give the Printer Setup its own dialog box by
setting the Flags property to PD_PRINTSETUP as follows:
<P>
<PRE>   CMDialog1.Flags = PD_PRINTSETUP  ' PD_PRINTSETUP = &amp;H40&amp;
   CMDialog1.Action = 5     ' Displays Printer Dialog for Printer Setup

</PRE>To change printer settings from a Visual Basic application without user
interaction, call a DLL written in C that calls the Windows API
ExtDeviceMode function. Because Visual Basic does not support function
pointers, you cannot call the ExtDeviceMode function directly from Visual
Basic. A Windows-compatible C compiler is required to create a Windows DLL.
<P>
<P><h3>Code Example to Change Windows Default Printer in WIN.INI</h3>
 
<P>
The following program demonstrates how to change the default printer in the
WIN.INI file by using Visual Basic code:

<OL><P><LI>In Visual Basic, place a list box (List1) and a command button
   (Command1) on Form1.

<P><LI>Set the Caption property of Command1 to Set Default Printer.

<P><LI>Add the following code and three subprograms to the General
   Declarations section of Form1:
<P>
   Option Explicit
<PRE>   ' Enter each Declare statement on one, single line:
   Private Declare Function GetProfileString Lib "Kernel"
      (ByVal lpAppName As String, ByVal lpKeyName As Any,
      ByVal lpDefault As String, ByVal lpReturnedString As String,
      ByVal nSize As Integer) As Integer
   Private Declare Function WriteProfileString Lib "Kernel"
      (ByVal lpApplicationName As String, ByVal lpKeyName As Any,
      ByVal lpString As Any) As Integer
   Private Declare Function SendMessage Lib "User" (ByVal hWnd As Integer,
      ByVal wMsg As Integer, ByVal wParam As Integer,
      lParam As Any) As Long
   Private Const WM_WININICHANGE = &amp;H1A
   Private Const HWND_BROADCAST = &amp;HFFFF

   ' Enter the following two lines as one, single line:
   Sub GetDriverAndPort (ByVal Buffer As String, DriverName As String,
      PrinterPort As String)
      Dim r As Integer
      Dim iDriver As Integer
      Dim iPort As Integer
      DriverName = ""
      PrinterPort = ""

      'The driver name is first in the string terminated by a comma
      iDriver = InStr(Buffer, ",")
      If iDriver &gt; 0 Then

         'Strip out the driver name
         DriverName = Left(Buffer, iDriver - 1)

         'The port name is the second entry after the driver name
         'separated by commas.
         iPort = InStr(iDriver + 1, Buffer, ",")

         If iPort &gt; 0 Then
            'Strip out the port name
            PrinterPort = Mid(Buffer, iDriver + 1, iPort - iDriver - 1)
         End If
      End If
   End Sub

   Sub ParseList (lstCtl As Control, ByVal Buffer As String)
      Dim i As Integer
      Do
         i = InStr(Buffer, Chr(0))
         If i &gt; 0 Then
            lstCtl.AddItem Left(Buffer, i - 1)
            Buffer = Mid(Buffer, i + 1)
         Else
            lstCtl.AddItem Buffer
            Buffer = ""
         End If
      Loop While i &gt; 0
   End Sub

   ' Enter the following two lines as one, single line:
   Sub SetDefaultPrinter (ByVal PrinterName As String,
      ByVal DriverName As String, ByVal PrinterPort As String)
      Dim DeviceLine As String
      Dim r As Integer
      Dim l As Long
      DeviceLine = PrinterName &amp; "," &amp; DriverName &amp; "," &amp; PrinterPort
      ' Store the new printer information in the [WINDOWS] section of
      ' the WIN.INI file for the DEVICE= item
      r = WriteProfileString("windows", "Device", DeviceLine)
      ' Cause all applications to reload the INI file:
      l = SendMessage(HWND_BROADCAST, WM_WININICHANGE, 0, ByVal "windows")
   End Sub

</PRE><P><LI>Add the following code to the Command1_Click event procedure:
<P>
   Dim r As Integer
   Dim Buffer As String
   Dim DeviceName As String
   Dim DriverName As String
   Dim PrinterPort As String
   Dim PrinterName As String
   If List1.ListIndex &gt; -1 Then
<P><PRE>      'Get the printer information for the currently selected printer
      'in the list. The information is taken from the WIN.INI file.
      Buffer = Space(1024)
      PrinterName = List1.Text
      r=GetProfileString("PrinterPorts",PrinterName,"",Buffer,Len(Buffer))
</PRE><P>
<P><PRE>      'Parse the driver name and port name out of the buffer
      GetDriverAndPort Buffer, DriverName, PrinterPort
</PRE><P>
<P><PRE>      If DriverName &lt;&gt; "" And PrinterPort &lt;&gt; "" Then
<PRE></PRE>         SetDefaultPrinter List1.Text, DriverName, PrinterPort
      End If
   End If

</PRE><P><LI>Add the following code to Form_Load event procedure:
<P>
   Dim r As Integer
   Dim Buffer As String
<P>
<PRE>   'Get the list of available printers from WIN.INI
   Buffer = Space(8192)
   r = GetProfileString("PrinterPorts",ByVal 0&amp;,"",Buffer,Len(Buffer))

   'Display the list of printer in the list box List1
   ParseList List1, Buffer

</PRE><P><LI>Run the program. The list box will display the printer choices from the
   WIN.INI file. By clicking the command button, you will set the default
   printer in the WIN.INI file.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Microsoft Windows Programmer's Reference," Chapters 4 and 6, Microsoft
Press, 1990.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00 4.00 vb4win vb416<BR>
KBCategory: kbprint kbprg kbcode<BR>
KBSubcategory: APrgPrint<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
