

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Display Text on a Dithered Background in a TextBox </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174301">
<META NAME="KBModify" CONTENT="1997/09/25">
<META NAME="KBCreate" CONTENT="1997/09/24">
<META NAME="Keywords" CONTENT="VBKBCtrl VBKBInt VBKBStd VBKBTextBox VBKBWinAPI">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When a dithered color is selected as the background of a TextBox, the background around the text is displayed as a different, solid color when the display is set for 256 colors or less. To work around this limitation, you must hook the WM_CTLCOLORE...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAG9,QAH4,QBV4,QAMB,QATX,QAPW,QAFF,QA7O,QAMN,QAB5,QAHP,QAY5,QAOE,QAGB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Display Text on a Dithered Background in a TextBox</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174301</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning, Professional, and
   Enterprise Editions for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When a dithered color is selected as the background of a TextBox, the
background around the text is displayed as a different, solid color when
the display is set for 256 colors or less. To work around this limitation,
you must hook the WM_CTLCOLOREDIT message and set the text background color
to TRANSPARENT. This is not a trivial alternative, and using a solid
background color is recommended if at all possible.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
WARNING: ANY USE BY YOU OF THE SAMPLE CODE PROVIDED IN THIS ARTICLE IS AT
YOUR OWN RISK. Microsoft provides this sample code "as is" without warranty
of any kind, either express or implied, including but not limited to the
implied warranties of merchantability and/or fitness for a particular
purpose.
<P>
WARNING: Failure to unhook a window before its imminent destruction will
result in application errors, Invalid Page Faults, and data loss. This is
due to the fact that the new WindowProc function being pointed to no longer
exists, but the window has not been notified of the change. Always unhook
the sub-classed window upon unloading the sub-classed form or exiting the
application. This is especially important while debugging an application
that uses this technique within the Microsoft Visual Basic 5.0 Development
Environment. Pressing the END button or selecting End from the Run menu
without unhooking will cause an Invalid Page Fault and close Microsoft
Visual Basic.
<P>
A TextBox control cannot draw text with a dithered background color, but it
can draw text with a transparent background color. If the background of the
control is dithered, this achieves the same visual effect. (Note the
distinction between the background of the text and the background of the
control. It is simple to get the control's background dithered; the problem
is getting the text background dithered as well.)
<P>
From the SDK perspective, the answer is simple; handle the WM_CTLCOLOREDIT
message in the parent and call SetBkMode() to set the background mode to
TRANSPARENT. This is less simple in Visual Basic.
<P>
The following application consists of a form with a single Textbox control
and a code module:

<OL><P><LI>Create a new Visual Basic "Standard EXE" project.

<P><LI>Add a Textbox to Form1.

<P><LI>Paste the following code into Form1's code module:
<P>
<P><PRE>      Private Sub Form_Load()
<PRE></PRE>         gHW = Me.hwnd
         Text1.BackColor = &amp;HC0E0FF
         Hook
      End Sub

      Private Sub Form_Unload(Cancel As Integer)
         Unhook
      End Sub

</PRE><P><LI>Add a module.

<P><LI>Paste the following code into this module:
<P>
<P><PRE>      Declare Function CallWindowProc Lib "user32" Alias _
<PRE></PRE>         "CallWindowProcA" (ByVal lpPrevWndFunc As Long, ByVal hwnd As _
         Long, ByVal Msg As Long, ByVal wParam As Long, ByVal lParam As _
         Long) As Long

      Declare Function SetWindowLong Lib "user32" Alias "SetWindowLongA" _
         (ByVal hwnd As Long, ByVal nIndex As Long, _
         ByVal dwNewLong As Long) As Long

      Declare Function SetBkMode Lib "gdi32" _
         (ByVal hdc As Long, ByVal nBkMode As Long) As Long

      Public Const WM_CTLCOLOREDIT = &amp;H133
      Public Const TRANSPARENT = 1
      Public Const GWL_WNDPROC = -4

      Global lpPrevWndProc As Long
      Global gHW As Long

      Public Sub Hook()
         lpPrevWndProc = SetWindowLong(gHW, GWL_WNDPROC, _
         AddressOf WindowProc)
      End Sub

      Public Sub Unhook()
         Dim temp As Long
         temp = SetWindowLong(gHW, GWL_WNDPROC, lpPrevWndProc)
      End Sub

      Function WindowProc(ByVal hw As Long, ByVal uMsg As _
         Long, ByVal wParam As Long, ByVal lParam As Long) As Long
         If uMsg = WM_CTLCOLOREDIT Then
            i = SetBkMode(wParam, TRANSPARENT)
         End If
         WindowProc = CallWindowProc(lpPrevWndProc, hw, uMsg, wParam, _
            lParam)
      End Function

</PRE><P><LI>Save the project, and then run it.
<P>
   RESULT: When the form is displayed, you will see a TextBox with a
   dithered background. Type into the TextBox and the dithered background
   is maintained.

<P><LI>To terminate the application, use Alt-F4, the control box menu, or click
   the close button on the form. If you click the stop button in the Visual
   Basic Design environment, the Unload event is not triggered to unhook
   the window and an IPF will occur.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../URJump.htm">Q16879</A></B>
   TITLE     : HOWTO: Hook Into a Window's Messages Using AddressOf
</PRE></OL> 
<PRE>Keywords          : VBKBCtrl VBKBInt VBKBStd VBKBTextBox VBKBWinAPI
Version           : WINDOWS:5.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
