

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Make a Push Button with a Bitmap in Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140884">
<META NAME="KBModify" CONTENT="1995/12/08">
<META NAME="KBCreate" CONTENT="1995/12/07">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Command buttons in Visual Basic for Windows are limited to a single line of text and one background color (gray). The 3D command button shipped in the Professional Editions of Visual Basic version 2.0, 3.0 and 4.0 for Windows does have the capabili...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAMN,QAH4,QAPN,QAUD,QAYS,QAFF,QA4Q,QAIB,QAB9,QDL9,QBWQ,QBWO,QBWN,QAO4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Make a Push Button with a Bitmap in Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 8, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140884</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional and Enterprise Editions of Microsoft Visual Basic,
<PRE>  16-bit only, for Windows, version 4.0
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Command buttons in Visual Basic for Windows are limited to a single
line of text and one background color (gray). The 3D command button
shipped in the Professional Editions of Visual Basic version 2.0, 3.0
and 4.0 for Windows does have the capability of displaying bitmaps within
a command button in Visual Basic for Windows. However, there is no
way to alter the background or border colors to change its appearance.
You can create the look and feel of a command button by using a picture
control and manipulating the DrawMode in conjunction with the Line
method. Using a picture control also allows you to display the
"command button" in any color with multiple lines of caption text.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The technique (demonstrated further below) simulates the effect of
pressing a command button by using the Line method with the BF option
(Box Fill) in invert mode each time a MouseUp or MouseDown event
occurs for the picture control. To add multiline text to the "button,"
either print to the picture box or add the text permanently to the
bitmap.
<P>
The steps to create a customized "command button" are as follows:

<OL><P><LI>Start Visual Basic for Windows, or choose New Project from the
    File menu (press ALT, F, N) if Visual Basic for Windows is already
    running. Form1 will be created by default.

<P><LI>Put a picture control (Picture1) on Form1.

<P><LI>Set the properties for Picture1 as given in the chart below:
<P>
<PRE>    Property         Value
    --------         -----
    AutoRedraw       True
    AutoSize         True
    BorderStyle      0-None
    DrawMode         6-Invert

</PRE><P><LI>Assign the Picture property of Picture1 to the bitmap of your
    choice. For example, choose ARW01DN.ICO from the ARROWS
    subdirectory of the ICONS directory shipped with Visual Basic for
    Windows. This is a good example of a bitmap with a three dimensional
    appearance.

<P><LI>Enter the following code in the Picture1_DblClick event procedure
    of Picture1:
<P>
    Private Sub Picture1_DblClick ()
<PRE>        Picture1.Line (0, 0)-(Picture1.width, Picture1.height), , BF
    End Sub

    NOTE: This code is necessary to avoid getting the bitmap stuck in
    an inverted state because of Mouse messages being processed out of
    order or from piling up due to fast clicking.

</PRE><P><LI>Enter the following code in the Picture1_MouseDown event procedure
    of Picture1:
<P>
    Private Sub Picture1_MouseDown (Button As Integer, Shift As Integer,
<PRE>                          X As Single, Y As Single)  ' Append to above line
        Picture1.Line (0, 0)-(Picture1.width, Picture1.height), , BF
    End Sub

</PRE><P><LI>Enter the following code in the Picture1_MouseUp event procedure of
    Picture1:
<P>
    Private Sub Picture1_MouseUp (Button As Integer, Shift As Integer,
<PRE>                          X As Single, Y As Single) ' Append to above line.
        Picture1.Line (0, 0)-(Picture1.width, Picture1.height), , BF
    End Sub

</PRE><P><LI>Add the following code to the Picture1_KeyUp event procedure for
    Picture1:
<P>
    Private Sub Picture1_KeyUp (KeyCode As Integer, Shift As Integer)
<PRE>        '* Check to see if the ENTER key was pressed.  If so, restore
        '* the picture image.
        If KeyCode = 13 Then
          Picture1.Line (0, 0)-(Picture1.width, Picture1.height), , BF
        End If
    End Sub

</PRE><P><LI>Add the following code to the Picture1_KeyDown event procedure for
    Picture1:
<P>
    Private Sub Picture1_KeyDown (KeyCode As Integer, Shift As Integer)
<PRE>        '* Check to see if the ENTER key was pressed.  If so, invert
        '* the picture image.
        If KeyCode = 13 Then
          Picture1.Line (0, 0)-(Picture1.width, Picture1.height), , BF
        End If
    End Sub

</PRE><P><LI>From the Run menu, choose Start. Click the picture box. The
    image of the picture should be inverted while the mouse button is
    down, giving the visual effect of a button press.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 2.00 3.00 4.00 vb4win vb416<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 8, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
