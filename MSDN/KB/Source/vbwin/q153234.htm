

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Call System-Stored Procedures on SQL Server from RDO </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153234">
<META NAME="KBModify" CONTENT="1996/07/03">
<META NAME="KBCreate" CONTENT="1996/07/02">
<META NAME="Keywords" CONTENT="kbprg kbusage kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  This article describes how to call system-stored procedures on SQL Server from RDO.  SQL Server has a number of prewritten, stored procedures that are used to configure and administer the SQL server. All of these procedures have the prefix  sp_  th...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAPN,QBS0,QAW6,QAB9,QAMA,QABM,QAZV,QANF,QAIF,QBXS,QAY2,QAOE,QBGT,QANE V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Call System-Stored Procedures on SQL Server from RDO</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 3, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153234</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Enterprise Edition of Microsoft Visual Basic, 32-bit only,
   for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to call system-stored procedures on SQL Server
from RDO.
<P>
SQL Server has a number of prewritten, stored procedures that are used to
configure and administer the SQL server. All of these procedures have the
prefix "sp_" that distinguishes them from user- or application-written
stored procedures.
<P>
In order to call these stored procedures from RDO, you must specify the
correct database is which they reside, the master database. There are
several ways to do this, but the most effective way is to explicitly
reference the stored procedure in your call syntax. For example:
<P>
<PRE>   { ? = call master.dbo.sp_addlogin(?,?) }

</PRE>Another method to accomplish this behavior is to set the default database
before creating and executing your stored procedure. The following example
uses a prepared statement and assumes that "Pubs" is your default database:
<P>
<PRE>   &lt;Object&gt;.Execute "Use Master"  'rdoConnection object
   Set &lt;Object&gt; = &lt;Object&gt;.CreatePreparedStatement("", strSQL)
   &lt;Object&gt;.Execute               'rdoPreparedStatement object
   &lt;Object&gt;.Execute "Use Pubs"    'rdoConnection object

</PRE><h2>MORE INFORMATION</h2>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a Command button, Command1, to Form1.

<P><LI>Paste the following code into the General Declarations section of Form1:
<P>
<PRE>   Private Sub Command1_Click()
     Dim en As rdoEnvironment
     Dim cn As rdoConnection
     Dim rs As rdoResultset

     Dim strConnect As String
     Dim strSQL As String

     Set en = rdoEnvironments(0)
     en.CursorDriver = rdUseOdbc

     strConnect = "Driver={SQL Server}; Server=MyServer; " &amp; _
       "Database=pubs; Uid=sa; Pwd="
     Set cn = en.OpenConnection(dsName:="", Prompt:=rdDriverNoPrompt, _
       ReadOnly:=False, Connect:=strConnect)

     Dim ps As rdoPreparedStatement

     'Note: If you don't specify master, you will get this following error:
     '"An invalid parameter was passed."

     strSQL = "{ ? = call master.dbo.sp_addlogin(?,?) }"
     Set ps = cn.CreatePreparedStatement("", strSQL)
     ps.BindThreshold = 1024 'largest column that will be bound under ODBC.
     Debug.Print ps.rdoParameters.Count
     ps.rdoParameters(0).Direction = rdParamOutput
     ps.rdoParameters(1).Direction = rdParamInput
     ps.rdoParameters(2).Direction = rdParamInput

     \* Note to KB editor: don't change this to "John Doe"
     ps.rdoParameters(1) = "Edward"
     ps.rdoParameters(2) = "Scissorhands"

     ps.Execute
     Debug.Print ps.rdoParameters(0).Value
   End Sub

</PRE><P><LI>Note that you need to change your DATABASE, UID, and PWD parameters in
   the OpenConnection method.

<P><LI>Start the program or press the F5 key.

<P><LI>Click the Command1 button to execute the stored procedure and display
   the parameter count and the output parameter in the debug window.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Hitchhiker's Guide to Visual Basic and SQL Server, Microsoft Press.
ISBN: 1-55615-906-4.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 vb4win vb432<BR>
KBCategory: kbusage kbprg kbhowto<BR>
KBSubcategory: APrgData
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 3, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
