

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use the ODBC API Function SQLExecDirect with RDO </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154046">
<META NAME="KBModify" CONTENT="1997/06/24">
<META NAME="KBCreate" CONTENT="1996/07/25">
<META NAME="Keywords" CONTENT="kbusage vb432 VB4WIN vb5all vb5howto VBCCE VBKBProgramming VBKBVBA kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Because RDO exposes the hEnv, hDbc, and hStmt properties of the ODBC API to the programmer, you are able to utilize ODBC API calls in conjunction with RDO. This can be helpful if RDO does not implement a feature of the ODBC API that you would like ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QA9E,QDIT,QABM,QAY5,QAUD,QAH4,QBE7,QBE6,QAPN,QBV8,QATX,QAGX,QAB9,QA7M V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use the ODBC API Function SQLExecDirect with RDO</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154046</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Control Creation, Learning Professional and
   Enterprise Editions for Windows, version 5.0
<LI>Enterprise Edition of Microsoft Visual Basic, 32-bit only,
   for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Because RDO exposes the hEnv, hDbc, and hStmt properties of the ODBC API to
the programmer, you are able to utilize ODBC API calls in conjunction with
RDO. This can be helpful if RDO does not implement a feature of the ODBC
API that you would like to use.
<P>
This article gives an example of how to use the ODBC API SQLExecDirect
function in combination with the RDO rdoConnection.hDbc property to execute
SQL without the use of the rdoConnection.Execute method.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Programming directly to the ODBC API gives you an alternative to using RDO
and DAO code to access your ODBC database. This direct method allows the
programmer to have low-level control over the ODBC datasource, but
introduces the Visual Basic 4.0 programmer to a complex programming model
that requires in-depth knowledge of the ODBC 2.0 specification.
<P>
If you feel that you can benefit from this direct approach, before you
proceed you should obtain a copy of the ODBC 2.0 Programmer's Reference and
SDK Guide that fully documents the ODBC API.
<P>
<P><h3>Sample Program</h3>
 
<P>
This example uses the ODBC API SQLExecDirect function in combination with
the rdoConnection.hDbc property to execute SQL without the use of the RDO
Execute method. It uses SQL Server and the Pubs database, but you can
change the DSN and SQL to match your ODBC database.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a Command button, Command1, to Form1.

<P><LI>Paste the following code into the General Declarations section of Form1:
<P>
<P><PRE>      Option Explicit
      Private Declare Function SQLAllocStmt Lib "odbc32.dll" _
<PRE></PRE>        (ByVal hdbc&amp;, phstmt&amp;) As Integer
      Private Declare Function SQLExecDirect Lib "odbc32.dll" _
        (ByVal hstmt&amp;, ByVal szSqlStr$, ByVal cbSqlStr&amp;) As Integer

      Private Sub Command1_Click()
        Dim cn As rdoConnection
        Set cn = rdoEnvironments(0).OpenConnection( _
          dsName:="MyServer", _
          Prompt:=rdDriverNoPrompt, _
          ReadOnly:=False)                            'get hDbc

        Dim rv As Integer                             'return value
        Dim lhStmt As Long                            'hStmt
        Dim szSql As String                           'SQL string

        szSql = "Select * into newtable from titles"  'create table SQL
        rv = SQLAllocStmt(cn.hdbc, lhStmt)            'allocate a statement
        Debug.Print GetRetCodeText(rv)                'print return value
                                                      'text
        rv = SQLExecDirect(lhStmt, szSql, Len(szSql)) 'execute the SQL
        Debug.Print GetRetCodeText(rv)                'print return value
                                                      'text
      End Sub

      Private Function GetRetCodeText(retcode As Integer)
        'get the return value text using ODBC32.TXT constants
        Dim x As String
        Select Case retcode
          Case -1: x = "SQL_ERROR"
          Case -2: x = "SQL_INVALID_HANDLE"
          Case 100: x = "SQL_NO_DATA_FOUND"
          Case 0: x = "SQL_SUCCESS"
          Case 1: x = "SQL_SUCCESS_WITH_INFO"
        End Select
        GetRetCodeText = x
      End Function

   NOTE: You will need to change the DSN to match yours before continuing.

</PRE><P><LI>Start the program or press the F5 key.

<P><LI>Click the Command1 button to execute the RDO and ODBC API code. If it
   executes successfully, SQL_SUCCESS will be output twice to the debug
   window and you will have a new table named newtable.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Building Client/Server applications with Visual Basic Manual, Chapter 10,
"Using the ODBC API."
<P>
ODBC 2.0 Programmer's Reference and SDK Guide, MS Press.
<P>
Hitchhiker's Guide to Visual Basic and SQL Server, Microsoft Press,
ISBN: 1-55615-906-4.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: rdoConnection Execute<BR>
Keywords            : kbusage vb432 VB4WIN vb5all vb5howto VBCCE VBKBProgramming VBKBVBA kbhowto<BR>
Version             : 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
