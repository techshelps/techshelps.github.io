

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Oracle Cursor Limit Exceeded with Create Methods </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125227">
<META NAME="KBModify" CONTENT="1997/12/09">
<META NAME="KBCreate" CONTENT="1995/01/23">
<META NAME="Keywords" CONTENT="APrgDataODBC kb3rdparty">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  When a Microsoft Visual Basic program uses the CreateDynaset or CreateSnapshot methods repeatedly, Oracle eventually runs out of cursors, and returns this error:     ODBC--call failed. [PageAhead][ODBC Oracle Driver][Oracle OCI]         ORA-01000: ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QA94,QAO2,QA1S,QABM,QAZV,QA5F,QAMA,QBWS,QAEF,QBVV,QAR4,QALH,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Oracle Cursor Limit Exceeded with Create Methods</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125227</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows,
<PRE>  version 3.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When a Microsoft Visual Basic program uses the CreateDynaset or
CreateSnapshot methods repeatedly, Oracle eventually runs out of
cursors, and returns this error:
<P>
<PRE>   ODBC--call failed. [PageAhead][ODBC Oracle Driver][Oracle OCI]
        ORA-01000: maximum open cursors exceeded. (#1000)

</PRE><h2>CAUSE</h2>
 
<P>
Each SQL statement issued to an ODBC Data Source has an associated
statement handle (hstmt) used to identify the statement. In Oracle, each
hstmt uses a cursor. Cursors are a limited resource in Oracle and if the
cursors are not dropped, the database will eventually run out.
<P>
Visual Basic and the Microsoft Jet version 1.1 database engine allocate a
new hstmt for each action SQL statement (INSERT, DELETE, UPDATE) executed
by using the CreateDynaset and CreateSnapshot methods. However, neither
Visual Basic nor the Jet database engine free the statement handle when
closing the Dynaset or Snapshot. Instead, both rely on the freeing of the
connection to perform these tasks.
<P>
The Jet version 2.0 database engine is more aggressive about allocating and
dropping statement handles. Each hstmt allocated is dropped when the
Dynaset or Snapshot is closed. As a result, Oracle cursors are dropped
along with the hstmt.
<P>
The problem is evident when using the CreateDynaset or CreateSnapshot
methods with the DB_SQLPassthrough flag (DB_SQLPassThrough=64) to issue
action SQL statements to an Oracle database. Most developers use this
method to avoid creating the additional connection to the server that the
ExecuteSQL statement creates. The problem does not arise when using the
CreateDynaset or CreateSnapshot methods to execute row returning queries,
with or without the Passthrough option.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The CreateDynaset and CreateSnapshot methods were not designed to run
action queries. The Execute and ExecuteSQL methods are provided for those
tasks. If a developer uses Execute or ExecuteSQL, VB uses the same hstmt
for each action query and Oracle will not run out of cursors.
<P>
To avoid exceeding the maximum number of cursors:

<OL><P><LI>With Visual Basic and Jet version 1.1, increase the Oracle server option
   that increases the number of available cursors per connection.

<P><LI>With Visual Basic and Jet version 1.1, use the Execute or ExecuteSQL
   methods to issue SQL action queries (INSERT, DELETE, UPDATE). Visual
   Basic will reuse the same hstmt repeatedly and cursors will not be
   depleted in Oracle.

<P><LI>Purchase Microsoft Access version 2.0 to get the Jet version 2.0
   database engine. You can then install the Compatibility Layer
   (Comlyr.exe), which enables Visual Basic to use the Jet version 2.0
   database engine.
<P>
</OL>The following file is available for download from the Microsoft Software
Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/comlyr.exe">comlyr.exe</A> <I>(size: 741798 bytes)</I> 

</PRE></OL>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from
               Online Services

   Comlyr.exe is a self-extracting compressed file. Place the file in an
   empty directory and execute it. The file will expand and will produce
   the readme file (ACC2COMP.TXT) and SETUP.EXE. Run SETUP.EXE from File
   Manager to install the Compatibility Layer.

</PRE><h2>STATUS</h2>
 
<P>
This problem has been fixed in Visual Basic 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new project in Visual Basic (Alt, F, N). Form1 is created by
   default.

<P><LI>Add a CommandButton (Command1) and a label (Label1) to Form1.

<P><LI>Add the following code to the click event of Command1:
<P>
<PRE>   Sub Command1_Click ()
      Dim db  As Database 'database object
      Dim ds  As Dynaset  'dynaset object
      Dim I   As Integer  'counter
      Dim sql As String   'string to store sql stmt

      Set db = OpenDatabase("", False, False, "ODBC;")
      For I = 1 To 100
         sql$ = " INSERT INTO table (field1) "
         sql$ = sql$ &amp; " VALUES ('" &amp; CStr(I) &amp; "')"
         Set ds = db.CreateDynaset(sql$, 64)
         ds.Close
         Label1.Caption = CStr(I)
         Label1.Refresh
      Next I
      db.Close
   End Sub

</PRE><P><LI>Save the project and press the F5 key to run it. The code will generate
   an error on the 51st iteration.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: ODBC Oracle Cursor<BR>
Keywords          : APrgDataODBC kb3rdparty<BR>
Technology        : ODBC<BR>
Version           : 3.00<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbfix kbsample<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
