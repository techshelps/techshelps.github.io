

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Find VB32.EXE Without Searching the Hard Drive </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176876">
<META NAME="KBModify" CONTENT="1997/11/19">
<META NAME="KBCreate" CONTENT="1997/11/17">
<META NAME="Keywords" CONTENT="APrgOther vb432 VB4WIN">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The sample code below demonstrates how to find the location of VB32.EXE by checking the registry rather than searching the entire hard drive.  MORE INFORMATION  Because customers occasionally install Visual Basic with a pathname other than the defa...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAA1,QDI2,QAX3,QANF,QBWS,QABE,QABA,QBV8,QA01,QA5F,QAMA,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Find VB32.EXE Without Searching the Hard Drive</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176876</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions, 32-bit
   only, for Windows, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample code below demonstrates how to find the location of VB32.EXE by
checking the registry rather than searching the entire hard drive.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Because customers occasionally install Visual Basic with a pathname other
than the default suggested by SETUP, it may be necessary to search for the
directory in which VB32.EXE has been installed. While simply searching the
local hard drive with an equivalent to DIR/S serves in most circumstances,
the presence of multiple large volumes makes a brute-force search of all
the directories on each volume impractical.
<P>
Because Visual Basic Setup stores the fully-qualified path name to VB32.EXE
under the key
"HKEY_LOCAL_MACHINE\Software\Classes\VisualBasic\Shell\Open\command," it is
a fairly simple task to obtain that pathname with the RegQueryValueEx()
API.
<P>
<P><h3>Step-By-Step Instructions</h3>
 

<OL><P><LI>Open a new project. Form1 is created by default.

<P><LI>Add a Code Module and, in the General Declarations section, place the
   following code:
<P>
<PRE>   Declare Function RegOpenKeyEx Lib "advapi32.dll" Alias "RegOpenKeyExA" _
   (ByVal hKey As Long,  ByVal lpSubKey As String, ByVal ulOptions As _
   Long, ByVal samDesired As Long, phkResult As  Long) As Long

   Declare Function RegQueryValueEx Lib "advapi32.dll" Alias _
   "RegQueryValueExA" (ByVal hKey As Long, ByVal lpValueName As _
   String, ByVal lpReserved As Long, lpType As Long, lpData As Any, _
   lpcbData As Long) As Long

   Option Explicit

   Global Const HKEY_LOCAL_MACHINE = &amp;H80000002
   Global Const KEY_ALL_ACCESS = &amp;H3F
   Global Const ERROR_SUCCESS = 0&amp;

</PRE><P><LI>Add a CommandButton to the default form.

<P><LI>In the Click Event of the CommandButton, place the following code:
<P>
   Dim RegKeyHandle As Long
   Dim RetVal As Long
   Dim KeyType As Long
   Dim Data As String * 255
   Dim DataLen As Long
<P>
   RetVal = RegOpenKeyEx(HKEY_LOCAL_MACHINE, _
   "Software\Classes\VisualBasic\Shell\Open\command", _
   0, KEY_ALL_ACCESS, RegKeyHandle)
<P>
   If RetVal &lt;&gt; ERROR_SUCCESS Then
<P><PRE>       MsgBox "Can't Open Key"
</PRE>   Else
<P><PRE>       MsgBox "Opened It!" &amp; vbCrLf &amp; "Getting Default Value"
       DataLen = 512
       RetVal = RegQueryValueEx(RegKeyHandle _
<PRE></PRE>                               , vbNullString _
                               , 0 _
                               , KEY_ALL_ACCESS _
                               , ByVal Data _
                               , DataLen)

       If RetVal &lt;&gt; ERROR_SUCCESS Then
           MsgBox "Missed It!"
       Else
           MsgBox Left(Data, DataLen)
       End If
   End If

</PRE><P><LI>Run the program. If Visual Basic is installed, the fully-qualified
   pathname to VB32.EXE appears in the message box.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Visual Basic Programmer's Guide to the Win32 API", Daniel Appleman, PC
Magazine Press; c1996.
 
<PRE>Keywords          : APrgOther vb432 VB4WIN
Version           : WINDOWS:4.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
