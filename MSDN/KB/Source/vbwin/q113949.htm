

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: GetChunk &amp; AppendChunk Not Allowed on Non-Memo Fields </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113949">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1994/04/20">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  The GetChunk and AppendChunk methods allow a Visual Basic program to move information in and out of Memo or Long Binary fields in a RecordSet. Using these methods with other fields types may cause a general protection (GP) fault. However, the more ...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAN0,QA7O,QBKN,QA7N,QBS0,QAPN,QAH4,QAP2,QAIJ,QAFF,QBVV,QAB4,QAAP,QBXS,QANF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: GetChunk &amp; AppendChunk Not Allowed on Non-Memo Fields</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113949</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Professional Edition of Microsoft Visual Basic for Windows,
<PRE>  versions 3.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The GetChunk and AppendChunk methods allow a Visual Basic program to move
information in and out of Memo or Long Binary fields in a RecordSet. Using
these methods with other fields types may cause a general protection (GP)
fault. However, the more likely result is trappable error 3259 "Invalid
field data type."
<P>
<P><h2>CAUSE</h2>
 
<P>
The GetChunk, AppendChunk, and FieldSize methods are only applicable to
Memo or Long Binary type fields. If the field type is not checked before
using one of these methods, the inappropriate use of these methods may
cause a GP fault or a trappable error message.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To avoid this problem, check the field's Type property before using any of
these methods. These methods should only be used as they are intended to be
used on Memo or Long Binary type fields.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A GP fault is not consistent due to memory mapping, so it is possible (but
highly unlikely) that an .EXE may be produced with this problem without the
programmer knowing that the .EXE is not working correctly.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a command button (Command1) to the form.

<P><LI>Add the following code to the Command1_Click procedure.
<P>
<PRE>   Sub Command1_Click ()
      Dim DB As Database
      Dim DS As Dynaset
      Set DB=OpenDatabase("C:\VB\BIBLIO.MDB")
      Set DS=DB.CreateDynaset("Authors")
      Debug.Print DS("Author").GetChunk(0,50)  ' fieldname's type &lt;&gt; memo
   End Sub

</PRE><P><LI>Start the program (or press the F5 key). Click the Command1 button. This
   may produce a GP Fault. However, the more likely result is trappable
   error 3259 "Invalid field data type," as expected.
<P>
</OL><h3>Steps to Solve the Problem</h3>
 

<OL><P><LI>Replace the code in the above example with the following if you are
   using database objects:
<P>
<PRE>   Sub Command1_Click ()
      Const DB_MEMO = 12
      Dim DB As Database
      Dim DS As Dynaset
      Set DB=OpenDatabase("C:\VB\BIBLIO.MDB")
      Set DS=DB.CreateDynaset("Authors")
      If DB.TableDefs("Authors").Fields("Author").Type = DB_MEMO Then
         Debug.Print DS("Author").GetChunk(0,50)
      Else
         Form1.Print "Wrong Field Type"
      End If
   End Sub

   Or replace it with the following if you are using a Data control:

   Sub Command1_Click ()
      Const DB_MEMO = 12
      Data1.Databasename = "C:\VB\BIBLIO.MDB"
      Data1.RecordSource = "Authors"
      Data1.Refresh
      ' Enter the following two lines as one, single line:
      If Data1.Database.TableDefs("Authors").Fields("Author").Type =
         DB_MEMO Then
         Debug.Print Data1.RecordSet("Author").GetChunk(0,50)
      Else
        Form1.Print "Wrong Field Type"
      End If
   End Sub

   This code will avoid using the inappropriate GetChunk method on the
   Author field because its type is DB_TEXT (value 10).

</PRE><P><LI>Start the program (or press the F5 key). Click the Command1 button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 GPF<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: APrgDataOther<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
