

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Determine If a File Exists by Using DIR$ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q112674">
<META NAME="KBModify" CONTENT="1997/03/20">
<META NAME="KBCreate" CONTENT="1994/03/16">
<META NAME="Keywords" CONTENT="kbprg PrgOther vb4all vb4win vb5all vb5howto kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Visual Basic does not have any built-in functions that tell if a file exists or not. This article demonstrates how to find out if a file exists or not by using a Visual Basic program.  MORE INFORMATION  There are two different methods you can use t...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAHD,QAH4,QAAP,QAG8,QAFI,QA5F,QAMA,QAPN,QBWS,QAPF,QBVV,QAB4,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Determine If a File Exists by Using DIR$</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q112674</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic Professional and Enterprise Editions for Windows,
   version 5.0
<LI>Microsoft Visual Basic Enterprise Edition, 16-bit and 32-bit, for
   Windows, version 4.0
<LI>Standard and Professional Editions of Microsoft Visual Basic for
   Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic does not have any built-in functions that tell if a file
exists or not. This article demonstrates how to find out if a file exists
or not by using a Visual Basic program.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are two different methods you can use to determine if a file exists:

<UL><LI>Use the DIR/DIR$ command to determine if a file exists. This
   method is shown in the example below. The example performs a DIR
   on the filename and checks the return value. If the return value
   is "" (nothing), then the file doesn't exist.

<LI>Use the OPEN statement to open a file for input and an error trap.
   This method can run into problems when dealing with SHARE in Windows.
   If the file does not exist, a trappable error occurs. The only
   problem with this method is if the file that is being opened with
   the OPEN statement is in use, you will generate a sharing violation,
   which is a system level error that is not trappable from Visual Basic.
<P>
</UL><h3>Step-by-Step Example</h3>
 
<P>
This example show how to check for the existence of a file by using the
DIR$ function.

<OL><P><LI>Start a new project in Visual Basic. Form1 is created by default.

<P><LI>Add a CommandButton (Command1) to Form1.

<P><LI>Place the following code in the Command1_Click Event:
<P>
<PRE>      Sub Command1_Click()
         Dim TheFile as String
         Dim Results as String
   
         TheFile = "C:\AUTOEXEC.BAT"
         Results = Dir$(TheFile)
   
         If Results  = "" Then
            MsgBox "File Doesn't Exist!"
         Else
            MsgBox "File does Exist!"
         End If
      End Sub

</PRE><P><LI>Run the program, and click the Command1 button.

<P><LI>Stop the program and make the TheFile variable point to a file that
   doesn't exist.

<P><LI>Run the program again, and click the Command1 button.
<P>
</OL><h3>Error in Visual Basic Help File Code</h3>
 
<P>
Please note that there is an error in the sample that is provided with
the Visual Basic 3.0 Help file (NOTE: This only applies to Visual Basic
3.0, the samples provided with Visual Basic 4.0 and 5.0 are correct).
The first line of the following If block is incorrect:
<P>
<PRE>      If GetAttr(Path + DirName) And ATTR_DIRECTORY = ATTR_DIRECTORY Then
         If (Count Mod 10) = 0 Then
            ReDim Preserve D(Count + 10)  ' Resize the array.
         End If
         Count = Count + 1  ' Increment counter.
         D(Count) = DirName
      End If

</PRE></OL>Here's the correct version (only difference is the first line):
<P>
<PRE>      If GetAttr(path + DirName) = ATTR_DIRECTORY Then
         If (Count Mod 10) = 0 Then
            ReDim Preserve D(Count + 10) ' Resize the array.
         End If
         Count = Count + 1 ' Increment counter.
         D(Count) = DirName
      End If

</PRE><h2>REFERENCES</h2>
 
<P>
For more information, see the Programmer's Reference, File
Manipulation and the DIR/DIR$ commands.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: existence<BR>
Keywords            : kbprg PrgOther vb4all vb4win vb5all vb5howto kbhowto<BR>
Version             : 3.0 4.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
