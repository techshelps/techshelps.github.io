

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Resetting ListIndex Property Generates Click Event </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q79241 ">
<META NAME="KBModify" CONTENT="1995/06/21">
<META NAME="KBCreate" CONTENT="1991/12/16">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; vbwin">
<META NAME="Description" CONTENT="  Resetting the ListIndex property of a list box, combo box, directory list box, or a file list box at run time generates a Click event for the control. For a drive list box, resetting the ListIndex property generates a Change event.  CAUSE =====  Th...">
<META NAME="Product" CONTENT="Visual Basic for Windows">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QAPN,QBS0,QAO4,QAH4,QDL9,QBWO,QBWN,QBWS,QBXS,QBT6,QBV4,QAFF,QBWQ,QAHP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Resetting ListIndex Property Generates Click Event</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 21, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q79241 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Standard and Professional Editions of Microsoft Visual Basic for
<PRE>  Windows, versions 2.0 and 3.0
</PRE>- Microsoft Visual Basic programming system for Windows, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Resetting the ListIndex property of a list box, combo box, directory
list box, or a file list box at run time generates a Click event for
the control. For a drive list box, resetting the ListIndex property
generates a Change event.
<P>
<P><h2>CAUSE</h2>
 
<P>
This is a result of the Windows subclass definition for these
controls. When an item in one of these list boxes is selected, a Click
event (or Change event for drive list box) occurs and the ListIndex
property is updated. Conversely, when the ListIndex property is
changed, a message occurs, generating the corresponding event.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use the KeyUp procedure instead of click, and then call KeyUp when
a key is pressed.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. Microsoft is researching this problem and
will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This behavior is not documented in the Visual Basic documentation or
online Help. This behavior can cause some unexpected results. For example,
if code in a Click (or Change) event procedure is assigning the selected
items in the list box to an array (or directly to the Text property of
another control), resetting the ListIndex property causes another such
assignment, but with the new item.
<P>
If the ListIndex is reset to -1, a null item is assigned by the code
because that setting indicates no item is selected.
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Start Visual Basic or from the File menu, choose New Project if
   Visual Basic is already running. Form1 is created by default.

<P><LI>Add a combo box (Combo1) to Form1.

<P><LI>Add a text box (Text1) to Form1.

<P><LI>Add a command button (Command1) to Form1.

<P><LI>Add the following code to the Click event for the list box chosen:
<P>
<PRE>   Sub Combo1_Click ()
      text1.text = combo1.text
   End Sub

   Note that for drive and directory list boxes, change the assignment to:

      text1.text=drive1.list(drive1.ListIndex)

         -or-

      text1.text=dir1.list(dir1.ListIndex)

</PRE><P><LI>Add the following code to the Click event procedure for Command1:
<P>
<PRE>   Sub Command1_Click ()
      combo1.ListIndex = -1
   End Sub

</PRE><P><LI>Add the following code to the Form_Load event procedure of Form1:
<P>
<PRE>   Sub Form_Load ()
      For n = 1 To 10
         combo1.AddItem Format$(n, "0")
      Next
   End Sub

</PRE><P><LI>Run the program. Notice that when you click the Command1 button, the
   list box is updated as expected, the code in the Click event procedure
   for the list box is executed, and the Text property of the text box is
   changed.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
"Programming Windows: the Microsoft Guide to Writing Applications for
Windows 3," by Charles Petzold, Microsoft Press, 1990
<P>
"Microsoft Windows Software Development Kit: Reference Volume 1,"
version 3.0
<P>
WINSDK.HLP file shipped with Microsoft Windows 3.0 Software
Development Kit
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: buglist1.00 buglist2.00 buglist3.00 1.00 2.00<BR>
3.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: PrgCtrlsStd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 21, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
