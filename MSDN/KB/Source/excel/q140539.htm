

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MSQuery: Returning a Long SQL Statement from Query with DDE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140539">
<META NAME="KBModify" CONTENT="1996/09/13">
<META NAME="KBCreate" CONTENT="1995/12/03">
<META NAME="Keywords" CONTENT="kbtool kbole kbhowto xlquery">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  The Microsoft Query  User's Guide  shows how to return an SQL statement recorded manually in Query, but if the SQL statement is longer than 255 characters that code does not work. This article shows how you can return an SQL statement of any length...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBI0,QABM,QAUD,QAPN,QAB9,QDIV,QAY2,QAYV,QBVV,QBS0,QALW,QACF,QAJH,QA1S,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>MSQuery: Returning a Long SQL Statement from Query with DDE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 13, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140539</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Query for Windows, version 1.0
<LI>Microsoft Query for Windows 95, version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Microsoft Query "User's Guide" shows how to return an SQL statement
recorded manually in Query, but if the SQL statement is longer than 255
characters that code does not work. This article shows how you can return
an SQL statement of any length recorded manually in Query.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Page 142 of the Microsoft Query User's Guide shows how to program a DDE
conversation between Query and any other application, so that you can
launch Query from the other application, perform a query manually, and
return the data, SQL connection string, and other information to the first
application. However, the example will not return an SQL statement that is
longer than 255 characters. Another problem with the example is that it
will return renamed column names, which will not work if you try to use the
SQL statement later with the SQL functions.
<P>
This procedure uses the "ODBCSQLStatement" and "ODBCSQLStatement/n" Request
Items from page 138 of the Microsoft Query 1.0 "User's Guide" to bring back
an SQL statement of any length. The "ODBCSQLStatement" and
"ODBCSQLStatement/n" request items are used instead of "QueryDefinition"
and "QueryDefinition/n" because "ODBCSQLStatement" and "ODBCSQLStatement/n"
do not return renamed column names; therefore, these statements can be used
with the SQL functions. Microsoft Query automatically renames column
headers when column totals (such as Count, Sum, and so on) are used.
<P>
Note that the SQL statement returned from Query cannot be used with DAO
(Data Access Objects), because DAO statements use a different SQL syntax
than Microsoft Query functions. DAO uses the same SQL syntax as Microsoft
Access. To manually record a DAO SQL statement, you must use Microsoft
Access.
<P>
To determine whether "ODBCSQLStatement/n" or "ODBCSQLStatement" should be
used, Query tests for the number of elements in the array created from
"ODBCSQLStatement/n". If only one element is found, then
"ODBCSQLStatement/n" cannot be used and "ODBCSQLStatement" is used instead.
If more than one element is found, then "ODBCSQLStatement" cannot be used
and "ODBCSQLStatement/n" is used instead.
<P>
Entering the SQL statement into worksheet cells will cause Wrap Text to be
turned on between SQL clauses. This procedure will return each cell's Wrap
Text status to its original state.
<P>
Microsoft provides examples of Visual Basic for applications procedures for
illustration only, without warranty either expressed or implied, including
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. This Visual Basic procedure is provided 'as is'
and Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose.
<P>
<PRE>Sub Return_Any_Length_SQL()
</PRE>Dim SQL_Long As Variant
Dim SQL_Short As Variant
Dim WT_Flag As Boolean
<PRE>'Open a DDE channel with Query:
</PRE>chan = Application.DDEInitiate("MSQuery", "System")
<PRE>'Launch Query and pass control to the user:
</PRE>Application.DDEExecute chan, "[UserControl('&amp;Return to Excel ',3,True)]"
<PRE>'Get the SQL Statement from Query as a String, if &lt;256 characters:
</PRE>SQL_Short = Application.DDERequest(chan, "ODBCSQLStatement")
<PRE>'Get the SQL Statement from Query, if &gt;255 characters, as an array
'where each element of the array is no longer than 127 characters:
</PRE>SQL_Long = Application.DDERequest(chan, "ODBCSQLStatement/127")
<PRE>'Close the DDE channel:
</PRE>Application.DDETerminate chan
<PRE>    'If SQL is &lt;256 characters:
    If UBound(SQL_Long) = 1 Then
    'Set a flag to the cell's WrapText status, because entering the
    'SQL onto a worksheet will turn on Wrap Text between SQL clauses:
    WT_Flag = Sheets("sheet1").Range("A1").WrapText
    'Enter SQL_Short into Sheet1 at Cell A1:
    Sheets("Sheet1").Range("A1") = SQL_Short
    'Reset the cell's WrapText status to it's original state:
    Sheets("sheet1").Range("A1").WrapText = WT_Flag
    'If SQL is &gt;255 characters:
    Else
        'Loop through the elements in the SQL_Long array, entering each one
        'into a cell on Sheet1 in column A, starting at cell A1:
        For i = 1 To UBound(SQL_Long)
        'Set a flag to the cell's WrapText status, because entering the
        'SQL onto a worksheet will turn on Wrap Text between SQL clauses:
        WT_Flag = Sheets("sheet1").Cells(i, 1).WrapText
        'Enter one element of the SQL_Long array into one cell:
        Sheets("Sheet1").Cells(i, 1) = SQL_Long(i, 1)
        'Reset the cell's WrapText status to it's original state:
        Sheets("Sheet1").Cells(i, 1).WrapText = WT_Flag
        'End of loop:
        Next i
    'End of IF Statement:
    End If
End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Query User's Guide", version 1.0, Chapter 9, "Using Microsoft
Query with Other Applications"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool kbole<BR>
KBSubcategory: xlquery DDE kbhowto
<P>

Additional reference words: 1.00 2.00 5.00 5.00c 7.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 13, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
