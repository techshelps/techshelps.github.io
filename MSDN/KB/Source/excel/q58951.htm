

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using ON.KEY() in Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q58951 ">
<META NAME="KBModify" CONTENT="1994/11/02">
<META NAME="KBCreate" CONTENT="1990/02/22">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  ON.KEY() must be used in the following format:     ON.KEY(            ,              !       )  For example:     ON.KEY( %1 , MACRO1.XLM!Restart )  The second argument must be an external reference to a defined name, not a cell reference. In the Wi...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QAUD,QAPF,QAMN,QAKJ,QAB9,QA2B,QAUR,QA50,QBWS,QBXS,QAH6,QAGU,QDNZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using ON.KEY() in Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q58951 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 2.x, 3.0, 4.0, 5.0
<LI>Microsoft Excel for OS/2, versions 2.2, 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
ON.KEY() must be used in the following format:
<P>
<PRE>   ON.KEY("&lt;key_text&gt;","&lt;macro_sheet&gt;!&lt;Name&gt;")

</PRE>For example:
<P>
<PRE>   ON.KEY("%1","MACRO1.XLM!Restart")

</PRE>The second argument must be an external reference to a defined name, not a
cell reference. In the Windows versions of Microsoft Excel, the second
argument must also be in quotation marks (the OS/2 version does not require
the quotation marks).
<P>
Using a cell reference instead of a name (for example, "MYMACROS.XLM!$B$32"
instead of "MYMACROS.XLM!Return") or omitting the quotation marks in
Windows versions will cause an error to be generated when the key sequence
represented by "key text" is pressed. An error will also be generated if
the filename contains any special characters, such as dollar signs.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A working example is as follows:
<P>
<PRE>   A1: AutoSaver
   A2: =IF(ISERROR(Count&gt;1),SET.NAME("Count",0))
   A3: =ON.KEY("%1","MACRO1.XLM!Restart")
   A4: =RETURN()
   A5: Restart
   A6: =SAVE.AS("WORK"&amp;SaveCount&amp;".XLS")
   A7: =SET.NAME("SaveCount",SaveCount+1)
   A8: =RETURN()

</PRE>This macro, once executed, defines ALT+1 to automatically save the active
document with the name WORK and a count number (for example, WORK27.XLS).
Each time ALT+1 is pressed, the number increments itself, so a running set
of work files is generated. This macro assumes that Restart has been
defined on the macro sheet as a command macro at $A$5. If this macro is to
be used over multiple work sessions, then the macro sheet should be saved
at the end of each work session, which will save SaveCount so it won't need
to be reset. Each time a new work session is begun, the macro must be
reexecuted, or it should be defined as an AutoOpen macro.
<P>
One interesting use of ON.KEY() in conjunction with SEND.KEYS() allows a
macro to send keystrokes to Microsoft Excel itself, just as if the user had
typed in this information. For example:
<P>
<PRE>   .
   .
   .
   A14: =ON.KEY("{F13}","MACRO1.XLM!Continue")
   A15: =SEND.KEYS("{F2}^{RIGHT}{F9}~{F13}")
   A16: =RETURN()
   A17: Continue
   A18: =ON.KEY("{F13}")
   .
   .
   .

</PRE>Cell A14 sets F13 [a useful designator for this purpose, since many
keyboards don't have F13 keys, although Microsoft Excel will still
recognize it when sent with SEND.KEYS()] to run the Continue macro on sheet
MACRO1.XLM. For this to work properly, Continue should be defined as a
command macro at cell A17. Cell A15 sends the following key sequence to the
keyboard buffer:
<P>
<PRE>   "F2 CTRL+RIGHT ARROW F9 ENTER F13"

</PRE>Cell A16 "ends" the macro, returning control to the user.
<P>
As soon as control returns to the user, Microsoft Excel checks the keyboard
buffer. Since a key sequence is already present, Microsoft Excel begins
interpreting the keys. In this example, F2 activates the formula bar.
CTRL+RIGHT ARROW selects the entire formula in the formula bar. F9 converts
the selected formula to a value. ENTER stores the value in the current
cell. Then, F13 causes the Continue macro to begin execution, which is the
continuation of our macro (cell A17) -- all as if the user had entered
these keys from the keyboard.
<P>
The command in cell A18 is important. Without a second argument, the ON.KEY
command "undefines" the key indicated, restoring it to its previous
function. If this is not done, any time the user presses F13 (and a macro
isn't running), the macro Continue will begin execution -- a jump to A17.
<P>
Note: the information above also applies to version 5.0 only when using
version 4.0 macro language.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on specifying "key text":
<P>
"Microsoft Excel Functions and Macros," version 2.0 for Windows,
pages 373-375 (Appendix)
<P>
"Microsoft Excel Functions and Macros," version 2.2 for OS/2,
pages 323-327 (ON.KEY)
<P>
Note: When using ALT+&lt;key&gt;, CTRL+&lt;key&gt;, and SHIFT+&lt;key&gt; combinations
(for example, CTRL+3), do not use parenthesis to indicate the primary
key.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage<BR>
KBSubcategory:
<P>

Additional reference words: 2.0 2.00 2.01 2.1 2.10 2.2 2.20 2.21 3.0 3.00<BR>
4.0 4.00 4.0a 4.00a 5.0 5.00<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
