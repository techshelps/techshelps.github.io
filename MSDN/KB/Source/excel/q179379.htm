

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: ERROR.TYPE Help Example Returns Incorrect Result </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179379">
<META NAME="KBModify" CONTENT="1998/02/05">
<META NAME="KBCreate" CONTENT="1998/01/15">
<META NAME="Keywords" CONTENT="xlformula">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  When you use the ERROR.TYPE function, the value you expect is not returned according to the example in Help. If the cell that is being compared has an error value, the example works properly; however, if this cell contains a value (a number or text...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QBVP,QAUD,QAKD,QAPF,QAB9,QAKP,QAY5,QBVV,QALW,QBV8,QAKC,QDNZ,QA59 P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: ERROR.TYPE Help Example Returns Incorrect Result</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179379</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 98 Macintosh Edition
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0a, 5.0c
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you use the ERROR.TYPE function, the value you expect is not returned
according to the example in Help. If the cell that is being compared has an
error value, the example works properly; however, if this cell contains a
value (a number or text), the example in Help returns #N/A error rather
than the value of the cell you are testing.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs when you evaluate a cell that does not match one of the
expected error types as in the following example:
<P>
<PRE>   A1: 5
   A2: 10
   A3: =IF(ERROR.TYPE(A1)=7, "Value is not available", A2)

</PRE>Because A1 contains a value and not an error, the ERROR.TYPE function
returns a #N/A error instead of the condition specified in the IF argument,
which is the contents of cell A2.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, use the ISERROR function to determine if the
ERROR.TYPE function is returning an error. If the function returns an
error, return a value instead. For example, replace the formula in the
"Cause" section with the following formula:
<P>
<PRE>   =IF(ISERROR(ERROR.TYPE(A1)),A2,IF(ERROR.TYPE(A1)=7,
    "Value is not available",""))

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Example in Microsoft Excel Help is as follows:
<P>
<PRE>   The following formula checks cell E50 to see whether it contains a #N/A
   error value. If it does, the text "Value is not available" is displayed.
   Otherwise, the value in E50 is returned.

   IF(ERROR.TYPE(E50)=7, "Value is not available", E50)

</PRE>As the syntax shows, the ERROR.TYPE function returns a #N/A error if it
refers to a cell that contains a proper value. This error also causes the
IF statement to return such a value. You cannot use this function this way
without first trapping the error returned by ERROR.TYPE.
<P>
This function was first included in Microsoft Excel 5.0. In this version of
Excel, the function is a macro function that can also be used on a
worksheet. The example given in Excel versions 5.0 and 7.0 is as follows:
<P>
<PRE>   The following macro formula checks the cell named Ratio to see if it
   contains a #DIV/0! error value. If it does, a subroutine named
   DivisionByZero is run.

   IF(ERROR.TYPE(Ratio)=2,DivisionByZero())

</PRE>However, this example does not work because a subroutine cannot be run from
a worksheet statement. This formula works if there is an error in the cell
and DivisionByZero is a user-defined function; however, the formula fails
if there is a value in the cell.
<P>
If you are using this example, use the following formula to replace the
example in Help:
<P>
<PRE>   =IF(ISERROR(ERROR.TYPE(Ratio)),Ratio,IF(ERROR.TYPE(Ratio)=2,
   DivisionByZero(),""))
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97 XL5 XL7<BR>
Keywords          : xlformula<BR>
Version           : MACINTOSH:5.0,5.0a,98; WINDOWS:5.0,5.0a,5.0c,7.0,7.0a,97<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbdocerr<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
