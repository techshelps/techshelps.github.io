

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Returning Multiple Values from an Excel Function Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q71946 ">
<META NAME="KBModify" CONTENT="1995/07/14">
<META NAME="KBCreate" CONTENT="1991/05/09">
<META NAME="Keywords" CONTENT="kbmacro">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  There are two different methods of returning multiple values from an Excel function macro. One works for returning a variable-sized array and the other works for returning a fixed-size array.  Method 1: Variable Size Result Array  This first method...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBVP,QAY5,QAH4,QAL3,QAB9,QAPN,QAKD,QBV8,QALW,QAKC,QAMN,QAHE,QACE,QDMR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Returning Multiple Values from an Excel Function Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 14, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q71946 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 2.x, 3.0, 4.0, 4.0a, 5.0
<LI>Microsoft Excel for OS/2, versions 2.2, 2.21, 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are two different methods of returning multiple values from an
Excel function macro. One works for returning a variable-sized array
and the other works for returning a fixed-size array.
<P>
<P><h3>Method 1: Variable Size Result Array</h3>
 
<P>
This first method returns an array of values based on an argument
range. The resulting array will fluctuate in size depending on the
number of elements in the argument array. For example, assume that you
want to create a function macro that will multiply each value in a
range by 100. The following function macro will accept an array (a
range of values) as its argument:
<P>
<PRE>   A1:     Multiply_Function
   A2:     =RESULT(64)
   A3:     =ARGUMENT("range",64)
   A4:     {=SET.NAME("result",range*100)}
   A5:     =RETURN(result)

</PRE>To return a variable length array from a function macro, the array
must be given a name. The SET.NAME function names the resulting array
"result" (be sure to enter the SET.NAME function with
CTRL+SHIFT+ENTER.) The Result command establishes that the function
macro will return an array (type 64). The name of the result array,
"result," is used in the RETURN function.
<P>
To use the function macro, assume you have the following values on a
worksheet in column A and that you want to place the formula for your
new function macro in column B. Highlight cells B1:B4 and enter the
following formula (be sure to enter the formula with CTRL+SHIFT+ENTER
and do not include the {}s):
<P>
<PRE>   A1:     5       B1:     {=MACRO1.XLS!Multiply_Function(A1:A4)}
   A2:     3       B2:     {=MACRO1.XLS!Multiply_Function(A1:A4)}
   A3:     1       B3:     {=MACRO1.XLS!Multiply_Function(A1:A4)}
   A4:     2       B4:     {=MACRO1.XLS!Multiply_Function(A1:A4)}

</PRE>The result will be:
<P>
<PRE>   A1:     5       B1:     500
   A2:     3       B2:     300
   A3:     1       B3:     100
   A4:     2       B4:     200

</PRE><h3>Method 2: Fixed Size Result Array</h3>
 
<P>
The second method for returning multiple values from a function macro
assumes a fixed number of elements in the resulting array.
<P>
The following macro will accept a starting time and an ending time and
return the number of hours, minutes, and seconds between them in a 1
by 3 array.
<P>
<PRE>   A1:     Time_Function
   A2:     =RESULT(64)
   A3:     =ARGUMENT("start",1)
   A4:     =ARGUMENT("finish",1)
   A5:     =HOUR(finish-start)
   A6:     =MINUTE(finish-start)
   A7:     =SECOND(finish-start)
   A8:     =RETURN(A5:A7)

</PRE>Once again, the RESULT function instructs the function macro to return
an array of values. However, the difference here is that the result
will always have three values, so the RETURN function refers to these
three cells as the return value. It is not necessary to name the array
in this case.
<P>
To use this macro, enter a starting time and a finish time in two
cells. Then, highlight three cells in a column and enter the following
array formula (remember to not include the {}s and enter the formula
with CTRL+SHIFT+ENTER):
<P>
<PRE>   A1:     1:00:00
   A2:     6:49:34
   A3:     {=MACRO1.XLS!Time_Function(A1,A2)}
   A4:     {=MACRO1.XLS!Time_Function(A1,A2)}
   A5:     {=MACRO1.XLS!Time_Function(A1,A2)}

</PRE>The result will appear as follows:
<P>
<PRE>   A1:     1:00:00
   A2:     6:49:34
   A3:     5
   A4:     49
   A5:     34

</PRE><h2>REFERENCES</h2>
 
<P>
"Microsoft Excel User's Guide, Book 2." Version 4.0, pages 207-208.
<P>
"Microsoft Excel User's Guide." Version 3.0, pages 571-572.
<P>
"Microsoft Excel Functions and Macros." Version 2.1x, pages 179-180.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbmacro<BR>
KBSubcategory:
<P>

Additional reference words: 2.0 2.00 2.01 2.1 2.10 2.2 2.20 2.21 3.0<BR>
3.00 4.0 4.00 5.00<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 14, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
