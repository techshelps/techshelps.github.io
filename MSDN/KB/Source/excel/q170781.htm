

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: RGB Function May Map to Incorrect Color </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170781">
<META NAME="KBModify" CONTENT="1998/01/09">
<META NAME="KBCreate" CONTENT="1997/06/30">
<META NAME="Keywords" CONTENT="kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  When you use the RGB function in a Visual Basic for Applications, the color value of the RGB color of the index may be mapped to a color other than the color you expected.  For example, RGB(65,0,0) is mapped to Dark Red, but RGB(64,0,0) is mapped t...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAG9,QAPG,QBS0,QBWS,QBVP,QBJZ,QAH4,QAKD,QBQU,QAPN,QA28,QATJ,QABX P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: RGB Function May Map to Incorrect Color</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170781</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you use the RGB function in a Visual Basic for Applications, the
color value of the RGB color of the index may be mapped to a color other
than the color you expected.
<P>
For example, RGB(65,0,0) is mapped to Dark Red, but RGB(64,0,0) is mapped
to Black.
<P>
The color property accepts an RGB triple and maps it to the nearest color
index. When the property retrieves the color value, it returns the RGB
color of the index, which may be different from the value you typed. In the
example, RGB(65,0,0) is mapped to Dark Red (RGB(128,0,0)), but RGB(64,0,0)
is mapped to Black (RGB(0,0,0)).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
When you use an application method or property that accepts a color
specification value, use a number that represents an RGB color value. An
RGB color value specifies the relative intensity of the red, green, and
blue colors that cause a specific color to be displayed.
<P>
The following steps assume that you created a Visual Basic module that
contains the following code
<P>
<PRE>   Sub ChangeRGB()

       ActiveSheet.Rectangles(1).Select
       With Selection.Interior
           .Pattern = xlSolid
           .Color = RGB([B1].Value, [B2].Value, [B3].Value)
       End With

   End Sub

</PRE>and that you created a worksheet that contains the following values:
<P>
<PRE>   A1: Red     B1:       C1:       D1:
   A2: Green   B2:       C2:       D2:
   A3: Blue    B3:       C3:       D3:
   A4:         B4:       C4:       D4:
   A5:         B5:       C5:       D5:

</PRE>To use the sample macro, follow these steps:

<OL><P><LI>On the View menu, point to Toolbars, and then click Drawing.

<P><LI>Click the Rectangle tool on the Drawing toolbar. Click cell C1 and drag
    the pointer from cell C1 to cell D5 to draw a rectangle.

<P><LI>On the Tools menu, click Options. Then, click the Color tab.

<P><LI>In the Standard colors group, click the first color in the second
    row (the red color).

<P><LI>Click Modify. Then, click the Custom tab. In the Red box, change the
    value to 65. Click OK.
<P>
    Notice that the color is dark red.

<P><LI>Click Modify. Then, click the Custom tab. Change the value of the
    Red box to 64. Click OK.
<P>
    Notice that the color is a little darker or duller than before.

<P><LI>Click Reset. Then, close the Options dialog box by clicking OK.

<P><LI>On Sheet1, enter the value 65 in cell B1.

<P><LI>On the Tools menu, point to Macro, and then click Macros. Click
    ChangeRGB, and then click Run.
<P>
    Note that the color of the rectangle is dark red.

<P><LI>Change the value in cell B1 to 64.

<P><LI>On the Tools menu, point to Macro, and then click Macros. Click
    ChangeRGB, and then click Run.
<P>
    Note that the color of the rectangle is black.
<P>
</OL>NOTE: You can work around this problem in Microsoft Excel 97 for Windows.
The ShapeRange objects collection allows greater flexibility when you
change colors in code. Instead of using Selection.Interior.Color =
RGB(x,y,z), you can use Selection.ShapeRange.Fill.ForeColor.RGB =
RGB(x,y,z).
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the ShapeRange Object collection, click the
Index tab in Microsoft Visual Basic Help, type the following text
<P>
<PRE>  ShapeRange

</PRE></OL>and then double-click the selected text to go to the "ShapeRange Object
Collection" topic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbprg<BR>
Version           : WINDOWS:5.0,5.0c,7.0,97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
