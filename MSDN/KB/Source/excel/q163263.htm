

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: New UsedRange Property Behavior </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163263">
<META NAME="KBModify" CONTENT="1998/02/12">
<META NAME="KBCreate" CONTENT="1997/02/06">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In earlier versions of Microsoft Excel, when you create a Visual Basic for Applications macro that performs multiple deletions or clears cells multiple times, you must save the workbook to release the random access memory that is no longer being us...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAML,QBS0,QBJZ,QAH4,QDNZ,QBWS,QAPN,QDMR,QBQU,QAKE,QBVV,QA6A,QAEF,QA5F P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: New UsedRange Property Behavior</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 12, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163263</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In earlier versions of Microsoft Excel, when you create a Visual Basic for
Applications macro that performs multiple deletions or clears cells
multiple times, you must save the workbook to release the random access
memory that is no longer being used. In Microsoft Excel 97, you can free
this memory by using the UsedRange Property in a macro.
<P>
Additionally, the UsedRange property in Microsoft Excel 97 refers to only
the occupied range of cells. In earlier versions of Microsoft Excel, the
UsedRange property includes cells that are referred to (by formulas) but
not occupied with data.
<P>
NOTE: The UsedRange Property does exist in earlier versions of Microsoft
Excel. This particular functionality is new in Microsoft Excel 97.
<P>
This article contains a sample macro that resets the used range of cells on
the active worksheet.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The UsedRange property in Microsoft Excel 97
Microsoft provides examples of Visual Basic for Applications procedures
for illustration only, without warranty either expressed or implied,
including, but not limited to the implied warranties of merchantability
and/or fitness for a particular purpose. The Visual Basic procedures in
this article are provided 'as is' and Microsoft does not guarantee that
they can be used in all situations. While Microsoft support engineers can
help explain the functionality of a particular macro, they will not modify
these examples to provide added functionality, nor will they help you
construct macros to meet your specific needs. If you have limited
programming experience, you may want to consult one of the Microsoft
Solution Providers. Solution Providers offer a wide range of fee-based
services, including creating custom macros. For more information about
Microsoft Solution Providers, call Microsoft Customer Information Service
at (800) 426-9400.
<P>
<P><h3>Macro That Resets the Used Range of Cells</h3>
 
<P>
To reset the used range of cells on the active worksheet, use the following
steps:

<OL><P><LI>On the Tools menu, point to Macro, and then click Visual Basic Editor.

<P><LI>On the Insert menu, click Module.

<P><LI>In the module sheet, type the following code:
<P>
<PRE>      Sub Reset_Range()
          ActiveSheet.UsedRange
      End Sub

</PRE><P><LI>On the File menu, click "Close and Return to Microsoft Excel."

<P><LI>On the Tools menu, point to Macro, and then click Macros.

<P><LI>Click the Reset_Range macro and click Run.
<P>
</OL><h3>Locating the Last Used Cell</h3>
 
<P>
You can locate the last used cell on the worksheet to determine the used
range of cells on the active sheet. The used range of cells is cell A1
through the last cell that is found. To find the last cell, use the
following steps:

<OL><P><LI>On the Edit menu, click Go To.

<P><LI>Click Special.

<P><LI>Click Last Cell and click OK.
<P>
</OL>These steps select the cell that Microsoft Excel recognizes as the last
used cell on the worksheet. The last used range includes cells A1 to the
selected cell.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the UsedRange Property, click the Office
Assistant in the Visual Basic Editor, type the following text
<P>
<PRE>   usedrange

</PRE></OL>and then click Search. Click "UsedRange Property" to view the help topic.
topic.
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Visual Basic Help is not installed on your
computer, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 XL97 RAM run out free up<BR>
Keywords          : kbprg<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 12, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
