

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: SQLRetrieve/SQLRequest Converts Text Values to Numeric </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118941">
<META NAME="KBModify" CONTENT="1996/09/12">
<META NAME="KBCreate" CONTENT="1994/08/02">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Excel for Windows, when you use the SQLRetrieve function or the SQLRequest function in a Visual Basic procedure, some of the values that are represented as text in your table may be returned to your worksheet as numbers.  For example, ...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBS0,QBBI,QAKD,QATX,QAMB,QBVP,QAB9,QAKC,QALW,QBG2,QAVX,QAVW,QAI5,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: SQLRetrieve/SQLRequest Converts Text Values to Numeric</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118941</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Excel for Windows, version 5.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel for Windows, when you use the SQLRetrieve function or
the SQLRequest function in a Visual Basic procedure, some of the values
that are represented as text in your table may be returned to your
worksheet as numbers.
<P>
For example, you may have a column of data in a table with the following
values:
<P>
<PRE>   000123
     0567
    00001

</PRE>When you use SQLRetrieve or SQLRequest to return this data to a worksheet,
the values may be returned as the following:
<P>
<PRE>      123
      567
        1

</PRE>That is, the leading zeros are dropped. SQLRetrieve and SQLRequest convert
these text values to their numeric equivalents. Likewise, text values such
as "1e1" and "1/2" will be converted to their numeric equivalents
"1.00E+01" and "Jan-2" respectively.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To have the SQLRetrieve function or the SQLRequest function return text
values as text, you must modify the SQL statement so that the field is
returned to the worksheet as a formula.
<P>
Below is an example using the SQLRetrieve function that will return the
text values in the Itemnum field as numbers.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Sample Visual Basic Procedure</h3>
 
<P>
<PRE>Sub GetData()
</PRE>Dim Chan As Variant
Dim NumRows, NumCols as Integer
<P>
<PRE>  'Make connection and assign channel number to that connection
  Chan = SQLOpen("DSN=NWind")

  'Execute SQL Query on specified channel
  NumCols = SQLExecQuery (Chan, _
     "Select Itemnum from c:\excel5\test.dbf")

  'Return the data from the specified channel to the worksheet
  NumRows = SQLRetrieve (Chan, ActiveCell)

  'Close the connection to the specified channel
  SQLClose (Chan)
End Sub

</PRE>To have SQLRetrieve return these text values in Itemnum as text, modify the
SQLExecQuery statement as follows:
<P>
<PRE>   NumCols = SQLExecQuery (Chan, _
     "Select '=""' + ItemNum + '""' from c:\excel5\test.dbf")

</PRE>Once the data has been returned to the worksheet, you can take an
additional step to remove the formulas in the cells but leave the values in
the cells. The modified procedure would look like the following:
<P>
<PRE>Sub GetData()
</PRE>Dim Chan As Variant
Dim NumRows, NumCols as Integer
<P>
<PRE>  'Make connection and assign channel number to that connection
  Chan = SQLOpen("DSN=NWind")

  'Execute SQL Query on specified channel
  NumCols = SQLExecQuery (Chan, _
     "Select '=""' + ItemNum + '""' from c:\excel5\test.dbf")

  'Return the data from the specified channel to the worksheet
  NumRows = SQLRetrieve (Chan, ActiveCell)

  'Close the connection to the specified channel
  SQLClose (Chan)

  'Remove formulas but retain values of returned data
  Activecell.Resize(NumRows, NumCols).Copy
  Activecell.Resize(NumRows,NumCols).PasteSpecial xlValues
  Application.CutCopyMode = False

End Sub

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. This problem was corrected in
Microsoft Excel for Windows version 5.0c.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode<BR>
KBSubcategory: xlquery
<P>

Additional reference words: 1.00 5.00 scientific notation exponent
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
