

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: "Invalid Data Format" with .XLA in Visual Basic Module </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111726">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1994/02/16">
<META NAME="Keywords" CONTENT="kbcode kberrmsg">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you attempt to add a reference to an add-in  (.XLA), you may receive the following error message:     Invalid Data Format  In Microsoft Excel for the Macintosh, you may see the following error  message:     Error in Loading...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QBJZ,QAB9,QAY5,QAB4,QBV8,QBWS,QA5F,QAH0,QBXS,QAPN,QAB3,QAVZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: "Invalid Data Format" with .XLA in Visual Basic Module</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111726</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Excel for the Macintosh, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, when you attempt to add a reference to an add-in 
(.XLA), you may receive the following error message:
<P>
<PRE>   Invalid Data Format

</PRE>In Microsoft Excel for the Macintosh, you may see the following error 
message:
<P>
<PRE>   Error in Loading DLL

</PRE><h2>CAUSE</h2>
 
<P>
You receive this error message if you attempt to add a reference to an add-
in file that does not contain a Visual Basic module. If an add-in contains
only a Microsoft Excel 4.0 macro (such as ANALYSIS.XLA or Analysis 
Functions on the Macintosh),  it cannot be added as a reference.
<P>
<P><h2>WORKAROUNDS</h2>
 
<P>
If you want to use a Microsoft Excel version 4.0 macro function that is
contained in a version 4.0 add-in (such as the Analysis ToolPak) in a
Visual Basic procedure, do either of the following:

<UL><LI>Use the Application.ExecuteExcel4Macro("string") method. The arguments
   for this method are the name and arguments of an Excel 4.0 macro
   function (without the equal sign).
<P>
<P><PRE>    -or-
</PRE>
<LI>If the function you want to use is included in a version 5.0 add-in
   (such as the Analysis ToolPak - VBA), either choose the References
   command from the Tools menu while you are in the Visual Basic module or
   add the add-in that contains the functions.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The following examples show you how to use the two methods described above.
These examples demonstrate how to create a macro that displays the ANOVA
dialog box (an Analysis ToolPak macro).
<P>
<P><h3>Application.ExecuteExcel4Macro("string") Method</h3>
 
<P>
In order to run this macro, the version 4.0 add-in must be installed. To
install an add-in, choose Add-Ins from the Tools menu.
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web: 
<P>
<B><A HREF="http://www.microsoft.com/supportnet/refguide/">http://www.microsoft.com/supportnet/refguide/</A></B>

<UL><LI>To use the function in the add-in, enter the following commands in a new
   module:
<P>
<PRE>      Sub AnovaMacro1()
         Application.ExecuteExcel4Macro("ANOVA1?()")
      End Sub

</PRE></UL><h3>Choosing the References Command from the Tools Menu</h3>
 
<P>
In order to run this macro, the Visual Basic version of the Analysis
ToolPak must be among the add-ins available (to do this click Add-Ins on 
the Tools menu).

<OL><P><LI>In a new module, click References on the Tools menu.

<P><LI>Click the Browse button. Click the file ATPVBAEN.XLA, which is
   located in the EXCEL\LIBRARY\ANALYSIS directory, and then click 
   OK.
<P>
   -or-
<P>
   In Microsoft Excel for the Macintosh, click the file Analysis 
   ToolPak - VBA, which is located in the 
   Microsoft Excel:Macro Library:Analysis Tools folder, and then 
   click OK.

<P><LI>ATPVBAEN.XLA (or Analysis ToolPak - VBA) will now be displayed in 
   the Available References list and its check box will be selected.
<P>
   Before you run the AnovaMacro2 macro, verify that the check box next to
   ATPVBAEN.XLA (or Analysis ToolPak - VBA) is selected

<P><LI>Enter the following code in the module:
<P>
<P><PRE>     Sub AnovaMacro2()
<PRE></PRE>        Anova1Q
     End Sub

</PRE></OL>NOTE: When you use the second method, you use the same syntax as you would
in a Microsoft Excel 4.0-style macro, with one exception: instead of a
question mark, add a Q to the end of the name of the macro function.
<P>
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about working with Microsoft Excel 4.0 macro functions
in Microsoft Excel 5.0 or 7.0, choose Reference Information in the Help
Contents window, and then choose Microsoft Excel Macro Functions Contents.
In the Microsoft Excel Macro Functions Contents window, choose Visual Basic
Equivalents for Functions and Commands and then choose More About
Converting Microsoft Excel Version 4.0 Macros To Visual Basic procedures.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 5.00 5.00a 5.00c 7.00 add in Addins libraries
<P>

<BR>
----------------------------------------------------------------------<BR>
The information in this article applies to:
<P>

 - Microsoft Excel for Windows, versions 5.0, 5.0c<BR>
 - Microsoft Excel for Windows 95, versions 7.0, 7.0a<BR>
 - Microsoft Excel for the Macintosh, versions 5.0, 5.0a<BR>
----------------------------------------------------------------------
<P>

SYMPTOMS
<P>

In Microsoft Excel, when you attempt to add a reference to an add-in <BR>
(.XLA),<BR>
 you may receive the following error message:
<P>

   Invalid Data Format
<P>

In Microsoft Excel for the Macintosh, you may see the following error <BR>
message:
<P>

   Error in Loading DLL
<P>

CAUSE
<P>

You receive this error message if you attempt to add a reference to an add-<BR>
in<BR>
file that does not contain a Visual Basic module. If an add-in contains<BR>
only a Microsoft Excel 4.0 macro (such as ANALYSIS.XLA or Analysis <BR>
Functions on the Macintosh),  it cannot be added as a reference.
<P>

WORKAROUNDS
<P>

If you want to use a Microsoft Excel version 4.0 macro function that is<BR>
contained in a version 4.0 add-in (such as the Analysis ToolPak) in a<BR>
Visual Basic procedure, do either of the following:
<P>

 - Use the Application.ExecuteExcel4Macro("string") method. The arguments<BR>
   for this method are the name and arguments of an Excel 4.0 macro<BR>
   function (without the equal sign).
<P>

    -or-
<P>

 - If the function you want to use is included in a version 5.0 add-in<BR>
   (such as the Analysis ToolPak - VBA), either choose the References<BR>
   command from the Tools menu while you are in the Visual Basic module or<BR>
   add the add-in that contains the functions.
<P>

MORE INFORMATION
<P>

The following examples show you how to use the two methods described above.<BR>
These examples demonstrate how to create a macro that displays the ANOVA<BR>
dialog box (an Analysis ToolPak macro).
<P>

Application.ExecuteExcel4Macro("string") Method<BR>
-----------------------------------------------
<P>

In order to run this macro, the version 4.0 add-in must be installed. To<BR>
install an add-in, choose Add-Ins from the Tools menu.
<P>

Microsoft provides programming examples for illustration only, without <BR>
warranty either expressed or implied, including, but not limited to, the <BR>
implied warranties of merchantability and/or fitness for a particular <BR>
purpose. This article assumes that you are familiar with the programming <BR>
language being demonstrated and the tools used to create and debug <BR>
procedures. Microsoft support engineers can help explain the functionality <BR>
of a particular procedure, but they will not modify these examples to <BR>
provide added functionality or construct procedures to meet your specific <BR>
needs. If you have limited programming experience, you may want to contact <BR>
the Microsoft fee-based consulting line at (800) 936-5200. For more <BR>
information about the support options available from Microsoft, please see <BR>
the following page on the World Wide Web: 
<P>

http://www.microsoft.com/supportnet/refguide/
<P>

 - To use the function in the add-in, enter the following commands in a new<BR>
   module:
<P>

      Sub AnovaMacro1()<BR>
         Application.ExecuteExcel4Macro("ANOVA1?()")<BR>
      End Sub
<P>

Choosing the References Command from the Tools Menu<BR>
---------------------------------------------------
<P>

In order to run this macro, the Visual Basic version of the Analysis<BR>
ToolPak must be among the add-ins available (to do this choose<BR>
Add-Ins from the Tools menu).
<P>

1. In a new module, click References from the Tools menu.
<P>

2. Click the Browse button. Click the file ATPVBAEN.XLA, which is<BR>
   located in the EXCEL\LIBRARY\ANALYSIS directory, and then click <BR>
   OK.
<P>

   -or-
<P>

   In Microsoft Excel for the Macintosh, click the file Analysis <BR>
   ToolPak - VBA, which is located in the <BR>
   Microsoft Excel:Macro Library:Analysis Tools folder, and then <BR>
   click OK.
<P>

3. ATPVBAEN.XLA (or Analysis ToolPak - VBA) will now be displayed in <BR>
   the Available References list and its check box will be selected.
<P>

   Before you run the AnovaMacro2 macro, verify that the check box next to<BR>
   ATPVBAEN.XLA (or Analysis ToolPak - VBA) is selected
<P>

4. Enter the following code in the module:
<P>

     Sub AnovaMacro2()<BR>
        Anova1Q<BR>
     End Sub
<P>

NOTE: When you use the second method, you use the same syntax as you would<BR>
in a Microsoft Excel 4.0-style macro, with one exception: instead of a<BR>
question mark, add a Q to the end of the name of the macro function.
<P>

<BR>
REFERENCES
<P>

For more information about working with Microsoft Excel 4.0 macro functions<BR>
in Microsoft Excel 5.0 or 7.0, choose Reference Information in the Help<BR>
Contents window, and then choose Microsoft Excel Macro Functions Contents.<BR>
In the Microsoft Excel Macro Functions Contents window, choose Visual Basic<BR>
Equivalents for Functions and Commands and then choose More About<BR>
Converting Microsoft Excel Version 4.0 Macros To Visual Basic procedures.
<P>

Additional query words: 5.00 5.00a 5.00c 7.00 add in Addins libraries<BR>
Keywords          : kbcode kberrmsg<BR>
Version           : MACINTOSH:5.0,5.0a; WINDOWS:5.0,5.0c,7.0,7.0a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
