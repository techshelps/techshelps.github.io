

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Setting Initial Values When Running Built-In Dialog Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110670">
<META NAME="KBModify" CONTENT="1998/02/12">
<META NAME="KBCreate" CONTENT="1994/01/26">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="   In Microsoft Excel, when you use a Visual Basic for Applications procedure to run a built-in dialog box, you must know the correct order of the arguments for the corresponding macro function if you want to set initial values in the dialog box. For...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBTI,QAHE,QBVP,QA01,QAKD,QBS0,QBBL,QAR4,QAUR,QAUJ,QBXS,QABA,QANX,QAAP P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Setting Initial Values When Running Built-In Dialog Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 12, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110670</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 5.0
<LI>Microsoft Excel for Macintosh, version 5.0
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
<LI>Microsoft Excel 98 Macintosh Edition
</UL> 
<P>
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, when you use a Visual Basic for Applications procedure
to run a built-in dialog box, you must know the correct order of the
arguments for the corresponding macro function if you want to set initial
values in the dialog box. For example, to set initial values in the
Save As dialog box, you must know the order of the arguments for the
SAVE.AS macro function.
<P>
In addition, when you set initial values in the dialog box, you must
either use arguments in their correct order, using commas as
placeholders for omitted arguments, or use the Show method named
arguments arg1, arg2, through arg30, to specify the order of the
arguments.
<P>
The named arguments arg1, arg2, through arg30, are for built-in dialog
boxes only; they provide the initial values for the dialog box.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Visual Basic, arguments names are defined for properties and
methods. Because the arguments are named, you can list them in any
order or omit arguments without leaving commas as a placeholders.
<P>
<P><h3>Using Named Arguments</h3>
 
<P>
For example, the following is the syntax for the SaveAs method
<P>
<PRE>    object.SaveAs(filename, fileFormat, password, writeResPassword,
                   readOnlyRecommended, createBackup)

</PRE>where the SaveAs method arguments are listed in the parentheses.
<P>
The following is an instruction in Visual Basic that uses this method
with only the filename and createBackup arguments:
<P>
<PRE>   ' Using Named arguments
   ActiveWorkbook.SaveAs createBackup:=True, FileName:="BUDGET.XLS"

</PRE>Note that you do not have to list the arguments in any particular
order, and you do not have to use commas as placeholders for the
omitted arguments.
<P>
<P><h3>To Display a Built-In Dialog Box with Initial Values</h3>
 
<P>
If you use the Show method to display the Save As dialog box, you
must know the order of the arguments for the corresponding Save.As
macro command to set initial values in the dialog box.
<P>
The syntax for the Save.As macro command is the following
<P>
<PRE>   SAVE.AS(document_text, type_num, prot_pwd, backup, write_res_pwd,
           read_only_rec)

</PRE>where the arguments are included in the parentheses in their correct
order. If you want display the Save As dialog box with only the
document_text and backup initial values set, you must indicate the
missing arguments with commas, or use the named arguments arg1, arg2,
through arg30 to specify the correct order.
<P>
To display the Save As dialog box with BUDGET.XLS in the File Name
box and the Always Create Backup option selected as initial values,
use either of the methods below:
<P>
<P><h3>Using Commas As Placeholders</h3>
 
<P>
<PRE>' Using arguments in correct order with commas as placeholders
</PRE>Application.Dialogs(xlDialogSaveAs).Show "BUDGET.XLS", , , True
<P>
The extra commas after the filename value are placeholders for the
missing arguments.
<P>
Note that if you use commas as placeholders for missing arguments,
trailing commas at the end of an instruction can be omitted. In the
example above, it is not necessary to add additional commas after the
final argument used (backup).
<P>
-or-
<P>
<P><h3>Using Show Method Named Arguments</h3>
 
<P>
<PRE>' Using arg1, arg2, ... arg30 to provide the position of arguments
</PRE>Application.Dialogs(xlDialogSaveAs).Show arg1:="BUDGET.XLS", arg4:=True
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Dialog Object or the Show Method,
choose the Search button in Help and type:
<P>
<PRE>    built-in dialog boxes
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage<BR>
KBSubcategory:
<P>

Additional reference words: 7.00 5.00 97<BR>
Keywords          : kbusage<BR>
Version           : 5.00 5.00c 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 12, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
