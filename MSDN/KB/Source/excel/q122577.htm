

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: Visual Basic Example Using the SQLError Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122577">
<META NAME="KBModify" CONTENT="1996/09/12">
<META NAME="KBCreate" CONTENT="1994/11/08">
<META NAME="Keywords" CONTENT="kbmacro kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article explains how to use the SQLError function in a Visual Basic, Applications Edition, macro in Microsoft Excel version 5.0.  MORE INFORMATION  In Microsoft Excel version 5.0, the XLODBC.XLA add-in file includes 7 SQL functions for accessi...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB4,QAAP,QAY5,QAUD,QAH4,QBVP,QA5V,QAB9,QA9E,QBXT,QAIB,QAYL,QAGI,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: Visual Basic Example Using the SQLError Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122577</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to use the SQLError function in a Visual Basic,
Applications Edition, macro in Microsoft Excel version 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Microsoft Excel version 5.0, the XLODBC.XLA add-in file includes 7 SQL
functions for accessing external data sources with ODBC (Open Database
Connectivity) drivers. One of these functions, SQLError, returns detailed
error information when you call it after one of the other ODBC SQL
functions fails. If SQLError itself fails, it cannot return any error
information.
<P>
If an ODBC function such as SQLExecQuery fails, the error information
is defined and stored in memory. You can then make a call to the
SQLError function and assign this information to an array variable.
The information returned by SQLError has three formats:

<OL><P><LI>If there are no errors from a previous ODBC function call, this function
   returns only the #N/A error value to a one-dimensional array with one
   element. This error value may also be shown as "Error 2042" in the Debug
   window when you debug your macro.

<P><LI>If only one error is reported, SQLError will return a one-dimensional
   array with three elements.

<P><LI>If a function call generates multiple errors, SQLError returns a two-
   dimensional array in which each row describes a single error.
<P>
</OL>In the last two cases described above, each row has three fields. The
fields are:
<P>
- A character string indicating the ODBC error class and subclass.
<P>
- A numeric value indicating the data source native error code.
<P>
- A text message describing the error.
<P>
Below is a Visual Basic macro that illustrates how to use the
SQLError function to capture SQL errors.
<P>
Microsoft provides examples of Visual Basic procedures for illustration
only, without warranty either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness for a
particular purpose. This Visual Basic procedure is provided 'as is' and
Microsoft does not guarantee that it can be used in all situations.
Microsoft does not support modifications of this procedure to suit customer
requirements for a particular purpose. Note that a line that is preceded by
an apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the procedure. Note
also that an underscore character (_) indicates that code continues from
one line to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This Manual"
section in the "Document Conventions" section of the "Visual Basic User's
Guide."
<P>
NOTE: This example requires that you reference the XLODBC.XLA file using
the References dialog box in the module that contains this procedure.
<P>
<PRE>Sub SQLError_Example()
  'This example will return an error because
  'the data source being opened doesn't exist.

  'Declare variables
   Dim Channel As Variant      'Channel number
   Dim MyErrorArray As Variant 'Variable to store SQLError array
   Dim LF As String            'Line Feed variable

   LF = Chr(10)                'Assign value for Line Feed

  'Open a channel to the Wind data source. This line will
  'produce an error because the data source 'Wind' doesn't exist.
  Channel = SQLOpen("DSN=Wind")

 'Check for possible error value in the Channel variable.
  If IsError(Channel) Then
  'Assign the elements of the SQLError array to MyErrorArray.
   MyErrorArray = SQLError()
   'Display the individual error elements of the MyErrorArray array.
   'Add Line Feed character for readability.
    MsgBox MyErrorArray(1) &amp; LF &amp; MyErrorArray(2) &amp; LF &amp; MyErrorArray(3)

   'Exit sub procedure
    Exit Sub
   End If

 'Close the channel to Wind.
  SQLClose Channel
End Sub

</PRE></OL>When you run this macro, you will receive an error message similar to the
following:
<P>
<PRE>   IM002
   0
   [Microsoft][ODBC DLL] Data source not found and no default
   driver specified

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, Chapter 9, "Using the
Built-in Error Values of Microsoft Excel"
<P>
For more information about SQLError, choose the Search button in
Programming With Visual Basic Help, and type:
<P>
<PRE>     SQLError Function
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbmacro kbinterop<BR>
KBSubcategory:
<P>

Additional reference words: 5.00 Isnumeric
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
