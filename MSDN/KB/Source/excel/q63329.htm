

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excel: Using Boolean Expression (Avoiding IF Statements) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q63329 ">
<META NAME="KBModify" CONTENT="1994/11/02">
<META NAME="KBCreate" CONTENT="1990/06/25">
<META NAME="Keywords" CONTENT="M_WorKs kbother">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QAB9,QAUD,QAPN,QABH,QANY,QAJQ,QAR4,QADK,QBVP,QAKC,QAI4,QAJR,QAAP,QALW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Excel: Using Boolean Expression (Avoiding IF Statements)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 2, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q63329 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h2>SUMMARY</h2>
 
<P>
To use Boolean expressions in Microsoft Excel, you must understand
their underlying logic. The basis of Boolean analysis is that
statements that evaluate as TRUE are evaluated as being equal to 1
(one), while statements that evaluate as FALSE are evaluated as being
equal to 0 (zero).
<P>
One of the simplest examples of a Boolean expression is as follows:
<P>
<PRE>   =A1=B1

</PRE>This statement will evaluate as TRUE (1) if the value in cell A1 is
equal to the value in cell B1, and as FALSE (0) otherwise.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following IF() statement performs an operation based on whether or
not A1=B1:
<P>
<PRE>   =IF(A1=B1,A1*5.3,0)

</PRE>This IF() statement compares the value in A1 to the value in B1, and
if the two values are equal, multiplies the value in A1 by 5.3; if the
values are not equal, the value returned is 0 (zero). The following
Boolean formula is functionally equivalent to the previous IF()
statement:
<P>
<PRE>   =(A1=B1)*A1*5.3

</PRE>This formula works in the following manner: if A1=B1, the first part
of the formula (A1=B1) evaluates to TRUE, which Excel evaluates as the
number 1 (one). If A1&lt;&gt;B1, the first part of the formula returns
FALSE, which Excel evaluates as 0 (zero). This is diagrammed as
follows:
<P>
<PRE>   (TRUE)*A1*5.3   equals   1*A1*5.3   equals   A1*5.3,   or
   (FALSE)*A1*5.3  equals   0*A1*5.3   equals   0

</PRE>Sometimes you need to check for more than one condition. Suppose we
have the following problem:
<P>
If the value in cell A1 equals the value in B1, multiply A1 by 5.3. If
the value of A1 equals the value in C1, multiply A1 by 10.6.
Otherwise, return a 0 (zero). (We will assume B1&lt;&gt;C1.)
<P>
The following IF() statement returns the correct results:
<P>
<PRE>   =IF(A1=B1,A1*5.3,IF(A1=C1,A1*10.6,0))

</PRE>The following Boolean formula also returns the correct results:
<P>
<PRE>   =((A1=B1)*A1*5.3)+((A1=C1)*A1*10.6)

</PRE>This example contains the basic pattern for emulating a nested IF()
statement, using a Boolean expression for each case. Each statement
that evaluates as "TRUE" will return the correct number; all others
will return a 0 (zero). The sum of the correct numbers and the zeros
will equal the sum of the correct number.
<P>
Boolean expressions can also be used in place of AND() and OR()
statements. For example:
<P>
<PRE>   =IF(AND(A1=B1,B1=C1),A1*5.3,0)
   =((A1=B1)*(B1=C1))*A1*5.3

   =IF(OR(A1=B1,B1=C1),A1*5.3,0)
   =((A1=B1)+(B1=C1))*A1*5.3

</PRE>Note: Boolean expressions evaluate more quickly than their standard
counterparts. This may make a difference on a large spreadsheet with
many nested calculations. Additionally, file space might be saved
because a Boolean expression is often shorter than its standard
counterpart.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbother<BR>
KBSubcategory:
<P>

Additional reference words: noupd<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 2, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
