

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL97: How To Display a Progress Bar with a UserForm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170782">
<META NAME="KBModify" CONTENT="1998/01/09">
<META NAME="KBCreate" CONTENT="1997/06/30">
<META NAME="Keywords" CONTENT="kbcode kbmacro">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT=" Article idea submitted by: John Walkenbach   If you have a Visual Basic for Applications macro that requires a long period of time to complete, you may want to give your user an indication that the macro is progressing normally. This article contain...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBS0,QAFF,QAMB,QAPN,QAMN,QAGI,QAC2,QAXB,QAMA,QBJZ,QA7O,QAOE,QAM9,QALX P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL97: How To Display a Progress Bar with a UserForm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170782</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Excel 97 for Windows
</UL> 
<P>
Article idea submitted by: John Walkenbach
<P>
<P><h2>SUMMARY</h2>
 
<P>
If you have a Visual Basic for Applications macro that requires a long
period of time to complete, you may want to give your user an indication
that the macro is progressing normally. This article contains an example
that illustrates how to create a progress bar with a UserForm.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the following example, a Visual Basic subroutine populates a large range
of cells with a random number. This task will take several seconds to
complete; the indicator gives you an indication that the macro is running
normally.
<P>
Microsoft provides examples of Visual Basic for Applications procedures for
illustration only, without warranty either expressed or implied, including,
but not limited to the implied warranties of merchantability and/or fitness
for a particular purpose. The Visual Basic procedures in this article are
provided 'as is' and Microsoft does not guarantee that they can be used in
all situations. While Microsoft support engineers can help explain the
functionality of a particular macro, they will not modify these examples to
provide added functionality, nor will they help you construct macros to
meet your specific needs. If you have limited programming experience, you
may want to consult one of the Microsoft Solution Providers. Solution
Providers offer a wide range of fee-based services, including creating
custom macros. For more information about Microsoft Solution Providers,
call Microsoft Customer Information Service at (800) 426-9400.
<P>
<P><h3>Create the UserForm</h3>
 

<OL><P><LI>Close and save any open workbooks. Then, open a new workbook.

<P><LI>Start the Visual Basic Editor, (press ALT+F11).

<P><LI>If the Properties window is not visible, click Properties on the
    View menu (or press F4).

<P><LI>On the Insert menu, click UserForm.

<P><LI>Draw a Label control on the UserForm.

<P><LI>Change the following properties of the Label control to the
    following values:
<P>
<PRE>       Property        Value
       --------------------------------------------
       Caption         Now updating. Please wait...

</PRE><P><LI>Draw a Frame control on the UserForm

<P><LI>Change the following properties of the Frame control to the
    following values:
<P>
<PRE>       Property        Value
       -----------------------------
       Name            FrameProgress

</PRE><P><LI>Draw a Label control on the Frame control.

<P><LI>Change the following properties of the Label control to the
    following values:
<P>
<PRE>       Property        Value
       -------------------------------------
       Name            LabelProgress
       BackColor       &amp;H000000FF&amp;
       SpecialEffect   fmSpecialEffectRaised

</PRE></OL><h3>Enter the Macro Code</h3>
 

<OL><P><LI>Double-click on the UserForm to open the Code window for the UserForm.

<P><LI>In the module, type the following code for the UserForm Activate event:
<P>
<P><PRE>      Private Sub UserForm_Activate()
<PRE></PRE>          ' Set the width of the progress bar to 0.
          UserForm1.LabelProgress.Width = 0

          ' Call the main subroutine.
          Call Main
      End Sub

</PRE><P><LI>On the Insert Menu, click Module.

<P><LI>In the Code window for the module, type the following code:
<P>
<PRE>      Sub ShowUserForm()
          UserForm1.Show
      End Sub

      Sub Main()
          Dim Counter As Integer
          Dim RowMax As Integer, ColMax As Integer
          Dim r As Integer, c As Integer
          Dim PctDone As Single

          Application.ScreenUpdating = False
          ' Initialize variables.
          Counter = 1
          RowMax = 100
          ColMax = 25

          ' Loop through cells.
          For r = 1 To RowMax
              For c = 1 To ColMax
                  'Put a random number in a cell
                  Cells(r, c) = Int(Rnd * 1000)
                  Counter = Counter + 1
              Next c

              ' Update the percentage completed.
              PctDone = Counter / (RowMax * ColMax)

              ' Call subroutine that updates the progress bar.
              UpdateProgressBar PctDone
          Next r
          ' The task is finished, so unload the UserForm.
          Unload UserForm1
      End Sub

      Sub UpdateProgressBar(PctDone As Single)
          With UserForm1

              ' Update the Caption property of the Frame control.
              .FrameProgress.Caption = Format(PctDone, "0%")

              ' Widen the Label control.
              .LabelProgress.Width = PctDone * _
                  (.FrameProgress.Width - 10)
          End With

          ' The DoEvents allows the UserForm to update.
          DoEvents
      End Sub

</PRE><P><LI>Activate Microsoft Excel (press ALT+F11).

<P><LI>Run the ShowUserForm subroutine.
<P>
</OL>A dialog box is displayed with a red progress bar that increases in size as
the Main subroutine populates the cells on the worksheet.
<P>
The ShowUserForm subroutine shows the UserForm. The procedure attached to
the Activate event of the UserForm calls the Main subroutine. The Main
subroutine, in addition to its main task (populating cells with random
numbers), calls the UpdateProgressBar subroutine, which updates the Label
control on the UserForm.
<P>
NOTE: Using this technique, your macro will take just a bit longer to
complete its intended task(s).
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Activate event, click the Office Assistant
in the Visual Basic Editor, type "activate event," click Search, and then
click to view "Activate, Deactivate Events."
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component

</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: XL97<BR>
Keywords          : kbcode kbmacro<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
