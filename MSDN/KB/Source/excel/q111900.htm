

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL5: List in Dialog Box Does Not Reflect Changes Made by Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111900">
<META NAME="KBModify" CONTENT="1996/09/12">
<META NAME="KBCreate" CONTENT="1994/02/23">
<META NAME="Keywords" CONTENT="kbprb">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you use a Visual Basic macro to clear (deselect) an item in a list box, if the list box has a selection type of Multi or Extend, the item may appear to remain selected.  Note that Microsoft Excel DOES recognize that the ite...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QBS0,QA01,QA2Q,QAG2,QAH4,QAM9,QALX,QBXS,QAJX,QADR,QAEF,QBWS,QAE1,QBVP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL5: List in Dialog Box Does Not Reflect Changes Made by Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111900</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
- Microsoft Excel for Windows, versions 5.0, 5.0c
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Microsoft Excel, when you use a Visual Basic macro to clear (deselect)
an item in a list box, if the list box has a selection type of Multi or
Extend, the item may appear to remain selected.
<P>
Note that Microsoft Excel DOES recognize that the item is no longer
selected; this problem has to do with the way that the dialog box is
displayed.
<P>
<P><h2>CAUSE</h2>
 
<P>
If you use a Visual Basic macro to clear an item in a list box while the
dialog box that contains that list box is active, the screen may not be
properly redrawn (to show that the item is no longer selected).
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. This problem was corrected in
Microsoft Excel for Windows 95, version 7.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In custom dialog boxes, if a list box has the Selection option set to
Multi, you can choose any number of items from the list. For example, if a
list contains Alpha, Bravo, and Charlie, you can select any, none, or all
of those items.
<P>
You can use a Visual Basic macro to select and clear items in a multiple
selection list box by changing the Selected property of a single list item.
For example, if the active dialog box contains a list box (for example,
List1) that contains three items (for example, Alpha, Bravo, Charlie), you
can select the first item by using this line of code:
<P>
<PRE>   ActiveDialog.ListBoxes("List1").Selected(1) = True

</PRE>To clear (deselect) the third item, use this code:
<P>
<PRE>   ActiveDialog.ListBoxes("List1").Selected(3) = False

</PRE><h3>Visual Basic Code Example</h3>
 
<P>
Microsoft provides examples of Visual Basic procedures for
illustration only, without warranty either expressed or implied,
including but not limited to the implied warranties of merchantability
and/or fitness for a particular purpose. This Visual Basic procedure
is provided 'as is' and Microsoft does not guarantee that it can be
used in all situations. Microsoft does not support modifications of
this procedure to suit customer requirements for a particular purpose.
Note that a line that is preceded by an apostrophe introduces a
comment in the code--comments are provided to explain what the code is
doing at a particular point in the procedure. Note also that an
underscore character (_) indicates that code continues from one line
to the next. You can type lines that contain this character as one
logical line or you can divide the lines of code and include the line-
continuation character. For more information about Visual Basic for
Applications programming style, see the "Programming Style in This
Manual" section in the "Document Conventions" section of the "Visual
Basic User's Guide."
<P>
The following example assumes you have a workbook that contains a
worksheet (Sheet1), a dialog sheet (Dialog1), and a Visual Basic
module (Module1). The worksheet contains the following values:
<P>
<PRE>   A1: Alpha
   A2: Bravo
   A3: Charlie
   A4: Delta

</PRE>The dialog sheet contains an OK button that is set to dismiss the
dialog box, another button (Button1), and a Multi Selection list box
(List1) that is linked to Sheet1!$A$1:$A$4.
<P>
To create Button1:

<OL><P><LI>On the Forms toolbar, choose Create Button to create a
   button in your dialog sheet.

<P><LI>Select the button.

<P><LI>In the name box, type "Button1" (without the quotation marks) and press
   the ENTER key.

<P><LI>From the Tools menu, choose Assign Macro.

<P><LI>In the Assign Macro dialog box, select the ClearItem subroutine
   (shown below) and choose OK.
<P>
</OL>To create a Multi Selection list box and the necessary link:

<OL><P><LI>Use the List Box button to create a list box in your dialog sheet.

<P><LI>Select the list box.

<P><LI>In the name box, type "List1" (without the quotation marks) and press
   ENTER.

<P><LI>From the Format menu, choose Object.

<P><LI>Select the Control tab.

<P><LI>In the Input Range box, type "Sheet1!$A$1:$A$4" (without the
   quotation marks).

<P><LI>Under Selection Type, select Multi.

<P><LI>Choose OK to accept the change.
<P>
</OL>The list box is now linked to Sheet1!$A$1:$A$4 and is a multiple selection
list box.
<P>
In Module1, enter the following subroutine:
<P>
<PRE>'------------------------------------------------------------------
</PRE></OL>Option Explicit
<P>
<PRE>Sub ShowDialog()

   'Dimension some variables.
   Dim CurList As Variant, LTemp As Variant, LItem As Variant
   Dim Counter As Integer

   'Show the dialog box.
   DialogSheets("Dialog1").Show

   'Set an object name for easy referencing of the list box.
   Set CurList = DialogSheets("Dialog1").ListBoxes("List1")

   'Put the Selected array into the variable LTemp.
   LTemp = CurList.Selected

   'Initialize the Counter variable.
   Counter = 1

   'Iterate through the loop once for each item in the array (which is
   'the same as iterating once for each item in the list box).
   For Each LItem In LTemp

      'If the value of the current item is True...
      If LItem = True Then

         '...show a message box indicating the item is selected.
         'CurList.List(Counter) gets us the value of the selected item
         '("Alpha", "Bravo", etc.).
         MsgBox CurList.List(Counter) &amp; " is selected."

      'Otherwise...
      Else

         '...indicate that it isn't selected.
         MsgBox CurList.List(Counter) &amp; " is NOT selected."
      End If

      'Increment the Counter so we can get the value of the next
      'selected item.
      Counter = Counter + 1
   Next                                  'repeat until all done
End Sub

Sub ClearItem()

   'Clear the second item in the list box.
   ActiveDialog.ListBoxes("List1").Selected(2) = False
End Sub
'--------------------------------------------------------------------

</PRE>To test the subroutine, position the insertion point in the line that
contains Sub ShowDialog(), and either press F5 or choose Start from the Run
menu, and do the following:

<OL><P><LI>While the dialog box is visible, select the third and second items in
   the list, in that order.

<P><LI>Choose the Button1 button. Note that items 2 and 3 both appear to be
   selected.

<P><LI>Choose the OK button.
<P>
   Note that the message boxes indicate that the second item (Bravo)
   is not selected, even though it appears to be selected in the dialog
   box.

<P><LI>Run the ShowDialog subroutine again to redisplay the dialog box.

<P><LI>Clear the third item in the list. Then, select the fourth and
   second items, in that order. Then, clear the fourth item.
<P>
   At this point, only the second item should appear to be selected.

<P><LI>Choose the Button1 button.
<P>
   The second item will appear to be cleared, and the fourth item will
   appear to be selected.

<P><LI>Choose the OK button.
<P>
</OL>You will receive message boxes indicating that all items are not
selected, even though the fourth item appears to be selected.
<P>
In each case, the message boxes show the true status of each item: the way
the list appears in the dialog box does not accurately represent the status
of the items in the list.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprb<BR>
KBSubcategory:
<P>

Additional reference words: 5.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
