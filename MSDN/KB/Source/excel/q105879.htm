

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excel: DDE Execute Fails with Some Macro Functions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105879">
<META NAME="KBModify" CONTENT="1997/06/30">
<META NAME="KBCreate" CONTENT="1993/10/27">
<META NAME="Keywords" CONTENT="IntpDde kbmacro kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  Any command sent to Microsoft Excel over a dynamic data exchange (DDE) channel must be a command-equivalent macro function.  Command-equivalent  means that the function has an equivalent choice on one of the Microsoft Excel menus, such as choosing ...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QAVX,QAVW,QBV8,QAB9,QAUD,QAZ2,QAGI,QAY5,QAY2,QBJZ,QBWS,QBXB,QATJ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Excel: DDE Execute Fails with Some Macro Functions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105879</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
<P>
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 3.0, 4.0, 4.0a
</UL> 
<P>
SUMMARY
 
<P>
Any command sent to Microsoft Excel over a dynamic data exchange (DDE)
channel must be a command-equivalent macro function. "Command-equivalent"
means that the function has an equivalent choice on one of the Microsoft
Excel menus, such as choosing the Close command from the File menu or
choosing the Delete command from the Edit menu. Command-equivalent
functions are all designed to return a value of TRUE.
<P>
Commands such as GET.OBJECT() or DIRECTORY() are designed to return
information other than TRUE. These commands are not accessible on the
Microsoft Excel menus and therefore cannot be executed across a DDE
channel. In addition, you cannot run a command in DDE if that command is
added to the a menu with an add-in macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If another application must execute a function that has no command
equivalent, the functions can be included in a Microsoft Excel macro that
can then be run by the other application.
<P>
Microsoft provides macro examples for illustration only, without
warranty either expressed or implied, including but not limited
to the implied warranties of merchantability and/or fitness for
a particular purpose. This macro is provided 'as is' and Microsoft
does not guarantee that the following code can be used in all
situations. Microsoft does not support modifications of the code
to suit customer requirements for a particular purpose.
<P>
For example, you could write the following macro in Microsoft Excel:
<P>
<PRE>   A1:    =DIRECTORY()
   A2:    =CREATE.OBJECT(2,A1,0,0,E5)
   A3:    =RETURN()

</PRE>Define this macro with the name "Testing" and save the macro sheet as
TEST.XLM. (The first line of this macro returns the name of the current
directory. The second line creates a rectangle that extends from cell A1 to
E5.)
<P>
The DDE client can then execute the RUN() command to run the Testing
macro before requesting the data from cells A1 and A2 of TEST.XLM.
The syntax for this will vary with the application being used as the
DDE client.  As an example, here is the macro code to accomplish this
from another instance of Microsoft Excel:
<P>
A1:  chan=INITIATE("Excel","Test.xlm")
A2:  =EXECUTE(chan,"[run(""Test.xlm!testing"")]")
A3:  directory=REQUEST(chan,"R1C1")
A4:  ObjectID=REQUEST(chan,"R2C1")
A5:  =TERMINATE(chan)
A6:  =RETURN()
<P>
<P><h3>Explanation of Macro Code</h3>
 
<P>
A1: The INITIATE() command opens a channel from this instance of Microsoft
Excel to the other.
<P>
A2: The EXECUTE() command runs the testing macro in the other instance.
<P>
A3: The first REQUEST() gets the information from cell A1 of the testing
macro sheet, which will have the name of the current directory. The value
is stored in the name "directory."
<P>
A4: The second request gets the object identifier returned by the
CREATE.OBJECT() function and stores it in the variable named ObjectID.
<P>
A5: TERMINATE() closes the DDE channel.
<P>
NOTE: You must use R1C1 notation in any DDE conversation with Microsoft
Excel. The double sets of quotation marks are necessary because they are
part of the execute text string.
<P>
<P>
<P><h2>REFERENCES</h2>
 
<P>
"User’s Guide 2," version 4.0, page 303
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 4.00 4.00a<BR>
Keywords            : IntpDde kbmacro kbprg kbprb<BR>
Version             : 3.00 4.00 4.00a<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
