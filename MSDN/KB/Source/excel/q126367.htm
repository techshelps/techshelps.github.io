

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XL: Using the Range Method to Convert String to a Range </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q126367">
<META NAME="KBModify" CONTENT="1996/12/18">
<META NAME="KBCreate" CONTENT="1995/02/21">
<META NAME="Keywords" CONTENT="kbprg kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Excel, when you use the GoTo method in a Visual Basic for Applications procedure, you must use a Visual Basic object style reference, such as the following:     Worksheets( Sheet1 ).Range( A1 )  However, many functions that return work...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QBVP,QAPN,QDMR,QDNZ,QAD7,QAH7,QAH6,QAB9,QA2Q,QATX,QAW6,QAA7,QAB3,QAJB P2 T2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XL: Using the Range Method to Convert String to a Range</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q126367</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
<LI>Microsoft Excel for Windows 95, version 7.0
<LI>Microsoft Excel 97 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Excel, when you use the GoTo method in a Visual Basic for
Applications procedure, you must use a Visual Basic object style
reference, such as the following:
<P>
<PRE>   Worksheets("Sheet1").Range("A1")

</PRE>However, many functions that return worksheet or chart values return the
&lt;SheetName&gt;!&lt;CellReference&gt; style reference.
<P>
Using string manipulation, it is possible to take a
&lt;SheetName&gt;!&lt;CellReference&gt; style reference result and use it as an
argument of the Range method. The Range method then converts a
&lt;SheetName&gt;!&lt;CellReference&gt; style reference to a Visual Basic object
style reference that can be used with the GoTo method. The following are
examples of using the Range method to accomplish this.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Converting Link Formula</h3>
 
<P>
To convert a simple Microsoft Excel link formula, for example
"=Sheet1!$A$1" to a Visual Basic style reference, you can strip the equal
sign (=) from the left side of the string and pass the remainder of the
formula to the Range object.
<P>
The following line of code selects the cell or range that is referenced
by the formula in the active cell:
<P>
<PRE>   Application.GoTo _
      Range(Right(ActiveCell.Formula, Len(ActiveCell.Formula - 1))

</PRE><h3>Converting Reference in Chart Series</h3>
 
<P>
To select a range that is referenced as a y value in the formula of a
chart series, the string manipulation becomes a bit more complex. The
following procedure strips the section of the series formula between the
second and third commas of the currently selected series and passes that
string to the Range object to select it.
<P>
<PRE>Sub Select_The_Y_Values()

  Dim StartString As Integer
  Dim EndString As Integer
  Dim SeriesForm As String

    ' Assign the formula property of the selected series to
    ' the variable "SeriesForm"
    SeriesForm = Selection.Formula

    ' If a point is selected rather than the entire series, you will
    ' need to modify the above line to the following
    '  Selection.Parent.Formula

    ' Find the position of the first character after the second
    ' comma in the formula
    StartString = InStr(InStr(SeriesForm, ",") + 1, SeriesForm, ",") + 1

    ' Find the position of the third comma
    EndString = InStr(StartString, SeriesForm, ",")

    ' Strip out the y values (between the second and third commas)
    ref = Mid(SeriesForm, StartString, EndString - StartString)

    ' Pass the Y values to the Range object and select it
    Application.GoTo Range(ref)

End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual Basic User's Guide," version 5.0, Chapter 3, "Creating User
Defined Functions"
<P>
"Visual Basic User's Guide," version 5.0, Chapter 5, "Working with
Objects in Visual Basic"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbcode kbhowto<BR>
KBSubcategory: xlvbahowto<BR>
Additional reference words: 5.00 5.00c 7.00 8.00 97 XL97<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
