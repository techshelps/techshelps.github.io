

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE Automation: GetObject Function with Filename Opens File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108074">
<META NAME="KBModify" CONTENT="1996/09/12">
<META NAME="KBCreate" CONTENT="1993/12/05">
<META NAME="Keywords" CONTENT="kbusage">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In a Microsoft Visual Basic application, if you use the GetObject function with a filename to activate a file in Microsoft Excel, you may receive the following error message in Microsoft Excel:     Book1.xls is already open. Reopening will cause yo...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QBS0,QAH4,QA9Q,QBWS,QAW6,QAPN,QAYL,QBXT,QA5V,QA2K,QAIB,QBMR,QDNM,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OLE Automation: GetObject Function with Filename Opens File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108074</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, versions 5.0, 5.0c
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In a Microsoft Visual Basic application, if you use the GetObject
function with a filename to activate a file in Microsoft Excel, you
may receive the following error message in Microsoft Excel:
<P>
<PRE>   Book1.xls is already open. Reopening will cause your changes to be
   discarded. Do you want to reopen?

</PRE><h2>CAUSE</h2>
 
<P>
When you use the GetObject function with a filename to activate a
workbook in Microsoft Excel, the file is opened, whether or not the
file is already open. If the file is already open, and contains
changes you have not saved, the above error message is returned.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To activate the workbook BOOK1.XLS as an object linking and embedding (OLE)
Automation object and avoid opening BOOK1.XLS if it is already open, do the
following:

<OL><P><LI>Activate the Microsoft Excel Application object.

<P><LI>Check for an open workbook called BOOK1.XLS.

<P><LI>Activate BOOK1.XLS if it is open.
<P>
   -or-
<P>
   Open BOOK1.XLS if it is not open.
<P>
</OL>The following sample code demonstrates the workaround described above. The
code scans the open workbooks in Microsoft Excel and activates BOOK1.XLS if
it is open.
<P>
Microsoft provides examples of Visual Basic procedures for
illustration only, without warranty either expressed or implied,
including but not limited to the implied warranties of
merchantability and/or fitness for a particular purpose. This Visual
Basic procedure is provided 'as is' and Microsoft does not guarantee
that it can be used in all situations. Microsoft does not support
modifications of this procedure to suit customer requirements for a
particular purpose. Note that a line that is preceded by an
apostrophe introduces a comment in the code--comments are provided to
explain what the code is doing at a particular point in the
procedure. Note also that an underscore character (_) indicates that
code continues from one line to the next. You can type lines that
contain this character as one logical line or you can divide the
lines of code and include the line continuation character. For more
information about Visual Basic for Applications programming style,
see the "Programming Style in This Manual" section in the "Document
Conventions" section of the "Visual Basic User's Guide."
<P>
<PRE>   'Dimension variable xl as object type
   Dim xl As Object
   'Activate Microsoft Excel and assign to variable xl
   Set xl = GetObject(, "Excel.application.5")
   'Set n to number of open workbooks
   n = xl.Workbooks.Count
      'Loop through each open workbook
      For c = 1 To n
         'Test to see if workbook is BOOK1.XLS
         'If true, activate BOOK1.XLS and exit loop
         'BOOK1.XLS in this line of code must be capitalized
         If xl.Workbooks(c).Name = "BOOK1.XLS" Then
            xl.Workbooks("BOOK1.XLS").Activate
            Exit For
         End If
      Next c

</PRE></OL><h2>MORE INFORMATION</h2>
 
<P>
You can use the Visual Basic GetObject function to access an OLE
automation object and assign the object to an object variable. You
can then use the object variable to reference the OLE automation
object in your Visual Basic code.
<P>
For more information about the GetObject Function or OLE Automation,
choose the Search button in Visual Basic Help and type:
<P>
<PRE>   OLE Automation
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage<BR>
KBSubcategory: xlwin
<P>

Additional reference words: 5.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
