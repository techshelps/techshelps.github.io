

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Excel: Communication Between Excel and Access Using DDE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99845 ">
<META NAME="KBModify" CONTENT="1996/09/12">
<META NAME="KBCreate" CONTENT="1993/06/09">
<META NAME="Keywords" CONTENT="kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; excel, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article contains examples that demonstrate how Microsoft Excel and Microsoft Access can communicate through dynamic data exchange (DDE). The first example discusses a macro developed for Microsoft Excel version 4.0 for Windows that starts Micr...">
<META NAME="Product" CONTENT="Excel">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QA1S,QAH4,QDN9,QBWS,QAY5,QAUJ,QAEV,QDMW,QBV8,QAY2,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Excel: Communication Between Excel and Access Using DDE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 12, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99845 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P>
 
The information in this article applies to:

<UL><LI>Microsoft Excel for Windows, version 4.0
<LI>Microsoft Access version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains examples that demonstrate how Microsoft Excel
and Microsoft Access can communicate through dynamic data exchange
(DDE). The first example discusses a macro developed for Microsoft
Excel version 4.0 for Windows that starts Microsoft Access, loads a
database, and runs a macro. The second example discusses a Microsoft
Access Basic function that loads Microsoft Excel and runs a macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Running a Microsoft Access Macro from Microsoft Excel</h3>
 
<P>
To run a Microsoft Access macro from Microsoft Excel, do the following
(note that these steps assume that a macro called MESSAGE already
exists in Microsoft Access):

<OL><P><LI>In Microsoft Excel, choose New from the File menu, select Macro
   Sheet and choose OK.

<P><LI>Enter the following macro into the macro sheet (you will need to
   alter the macro to specify the appropriate locations for files on
   your computer):
<P>
<P><PRE>      =EXEC("c:\access\msaccess.exe c:\access\db4.mdb")
      Chan=INITIATE("MSACCESS","system")
      =APP.ACTIVATE("Microsoft Access")
      =EXECUTE(Chan,"MESSAGE")
      =TERMINATE(Chan)
      =RETURN()
</PRE>
<P><LI>To run the macro, select the first cell, choose Run from the Macro
   menu and choose OK.
<P>
</OL>The EXEC() function in the macro loads Microsoft Access minimized and
loads the DB4.MDB database. The macro initiates a DDE channel and
assigns it to the variable Chan. The APP.ACTIVATE() function switches
to the Microsoft Access window to show the macro actions running.
<P>
The EXECUTE() function runs a macro named MESSAGE, as follows:
<P>
<PRE>   Name Summary
   ------------

   Application Name: "MSACCESS"
   Window Title: "Microsoft Access"
   Topic: "System"
   Item: "Message"

</PRE></OL><h3>Running a Microsoft Excel Macro from Microsoft Access</h3>
 
<P>
To run a Microsoft Excel macro from Microsoft Access, do the following
(note that these steps assume that a macro named Message already
exists in a Microsoft Excel macro sheet named MACRO1.XLM):

<OL><P><LI>In Microsoft Access, create a new function that contains the
   following text (you will need to alter the macro to specify the
   appropriate locations for files on your computer):
<P>
<P><PRE>      Function CallExcel ()
<PRE></PRE>          Dim Chan
          x = Shell("c:\excel\excel.exe c:\excel\macro1.xlm", 1)
          Chan = DDEInitiate("Excel", "System")
          DDEExecute Chan, "[Run(""macro1.xlm!Message"")]"
          DDETerminate Chan
      End Function

</PRE><P><LI>Run the macro. For more information on how to run the macro, see
   the "Running" topic under "Macros" in Microsoft Access Help.
<P>
</OL>The Shell function loads Microsoft Excel and the MACRO1.XLM macro
sheet full screen and leaves the focus on Microsoft Excel. The macro
initiates a DDE channel and assigns it to the variable Chan.
<P>
The EXECUTE() function runs a macro named Message.
<P>
<PRE>      Name Summary
      ------------

      Application Name: "Excel"
      Window Title: "Microsoft Excel"
      Topic: "System"
      Item: "[Run(""macro1.xlm!Message"")]"

</PRE></OL>The syntax for these two macros demonstrates that the correct syntax
for the "Item" depends on the target application.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Access README.TXT
Microsoft Excel "Function Reference"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbinterop<BR>
KBSubcategory:
<P>

Additional reference words: 4.00 1.00 interoperability
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 12, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
