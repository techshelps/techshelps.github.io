

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Debugging With Mono And VGA Can Cause Screen Corruption </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116460">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/20">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  When using the MS-DOS  mode mono  command to debug a graphics application on a secondary monochrome monitor (VGA being the primary monitor), screen corruption can result on both monitors.  RESOLUTION  To work around the problem, do not use the mode...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QA5V,QA5W,QAFR,QBE7,QBE6,QBV8,QATX,QANE,QAB9,QAKP,QA6E,QAXX,QAVX,QAU4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Debugging With Mono And VGA Can Cause Screen Corruption</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116460</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10
MS-DOS
kbtool kbbuglist kbhw
 
The information in this article applies to:

<UL><LI>Microsoft Codeview for MS-DOS, versions 4.0, 4.01, and 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using the MS-DOS "mode mono" command to debug a graphics
application on a secondary monochrome monitor (VGA being the primary
monitor), screen corruption can result on both monitors.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around the problem, do not use the mode mono command.
Instead, either debug on the primary VGA monitor or use the /2
command line option to display Codeview's windows on the monochrome
monitor (instead of on the VGA monitor).
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products
listed at the beginning of this article. We are researching this
problem and will post new information here in the Microsoft Knowledge
Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample program below demonstrates the problem.  Build a debug
version and enter the following commands at the DOS prompt:
<P>
msherc
mode mono
cv /b /s modes
<P>
Once you have started Codeview, enter the following commands in the
command window:
<P>
bp .49
g
g
<P>
At this point both the VGA monitor and the monochrome monitor may
display corrupt information.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compiler Options Needed:  /AL /Zi /Od
*/

#include &lt;conio.h&gt;
#include &lt;stdio.h&gt;
#include &lt;graph.h&gt;

short modes[] = { _TEXTBW40,     _TEXTC40,      _TEXTBW80,
                  _TEXTC80,      _MRES4COLOR,   _MRESNOCOLOR,
                  _HRESBW,       _TEXTMONO,     _HERCMONO,
                  _MRES16COLOR,  _HRES16COLOR,  _ERESNOCOLOR,
                  _ERESCOLOR,    _VRES2COLOR,   _VRES16COLOR,
                  _MRES256COLOR, _ORESCOLOR
                };
char *names[] = { "TEXTBW40",    "TEXTC40",     "TEXTBW80",
                  "TEXTC80",     "MRES4COLOR",  "MRESNOCOLOR",
                  "HRESBW",      "TEXTMONO",    "HERCMONO",
                  "MRES16COLOR", "HRES16COLOR", "ERESNOCOLOR",
                  "ERESCOLOR",   "VRES2COLOR",  "VRES16COLOR",
                  "MRES256COLOR","ORESCOLOR"
                };
</PRE>short rows[] = { 60, 50, 43, 30, 25 };  /* Possible number of rows */
<P>
<PRE>void main(void)
</PRE>{
<PRE> short c, i, j, x, y, row, num = sizeof(modes) / sizeof(modes[0]);
 struct _videoconfig vc;
 char b[500];              /* Buffer for string */

 _displaycursor( _GCURSOROFF );

 /* Try each mode. */
 for( i = 0; i &lt;= num; i++ )
 {
  for (j = 0; j &lt; 5; j++ )
  {
   /* Try each possible number of rows. */
   row = _setvideomoderows( modes[i], rows[j] );
   if( (!row) || (rows[j] != row) )
    continue;
   else
   {
    _getvideoconfig( &amp;vc );
    y = (vc.numtextrows - 12) / 2;
    x = (vc.numtextcols - 25) / 2;

    /* Use text window to place output in middle of screen. */
    _settextwindow( y, x, vc.numtextrows - y, vc.numtextcols - x );

    /* Write all information to a string, then output string */
    c  = sprintf( b,     "Video mode: %s\n", names[i] );
    c += sprintf( b + c, "X pixels:   %d\n", vc.numxpixels );
    c += sprintf( b + c, "Y pixels:   %d\n", vc.numypixels );
    c += sprintf( b + c, "Columns:    %d\n", vc.numtextcols );
    c += sprintf( b + c, "Rows:       %d\n", vc.numtextrows );
    c += sprintf( b + c, "Colors:     %d\n", vc.numcolors );
    c += sprintf( b + c, "Bits/pixel: %d\n", vc.bitsperpixel );
    c += sprintf( b + c, "Pages:      %d\n", vc.numvideopages );
    c += sprintf( b + c, "Mode:       %d\n", vc.mode );
    c += sprintf( b + c, "Adapter:    %d\n", vc.adapter );
    c += sprintf( b + c, "Monitor:    %d\n", vc.monitor );
    c += sprintf( b + c, "Memory:     %d",   vc.memory );
    _outtext( b );
    _getch();
   }
  }
 }
 _displaycursor( _GCURSORON );
 _setvideomode( _DEFAULTMODE );
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.01 4.10<BR>
KBCategory: kbtool kbbuglist kbhw<BR>
KBSubcategory: CvwIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
