

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cannot Use a Pointer to Call Function in a Static Overlay </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q58098 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1990/01/26">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  Microsoft LINK does not support using a function pointer to call a function in a static overlay unless the function is called from the same overlay. If an overlaid function is called from the root or from a different overlay, it cannot be called th...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAY5,QAW9,QBV8,QAB9,QBE7,QBE6,QAIF,QAO3,QAO2,QA5V,QBVV,QAHC,QADN,QAZB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Cannot Use a Pointer to Call Function in a Static Overlay</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q58098 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.x 3.x 4.x 5.0x 5.10 5.11 5.13 5.15 5.20 5.3x 5.50 5.60
MS-DOS
kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft LINK for MS-DOS, versions 2.x, 3.x, 4.x, 5.0x, 5.1, 5.11,
   5.13, 5.15, 5.2, 5.3x, 5.5, and 5.6
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft LINK does not support using a function pointer to call a
function in a static overlay unless the function is called from the
same overlay. If an overlaid function is called from the root or from
a different overlay, it cannot be called through a pointer.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Static overlays do not support calling an overlaid function indirectly
through a pointer because the loader determines the address of the
indirect function at load time.
<P>
Versions of Microsoft LINK prior to version 5.3 support only static
overlays. LINK version 5.3 introduced MOVE (Microsoft Overlaid Virtual
Environment) dynamic overlays that do support calling an overlaid
function through a pointer. Microsoft LINK versions 5.3x, 5.5, and 5.6
can still generate static overlays using the /OLD[OVERLAY] command
line switch. The same issue of lack of support for calling an overlaid
function through a function pointer still applies to these later versions.
<P>
In an application with static overlays, the linker recognizes a normal
function call (one that does not take place through a pointer) and
places an interrupt call into the executable file instead of the
function call. At run time, the interrupt gives control to the overlay
manager which determines if the correct overlay is loaded in memory,
loads the overlay if necessary, and calls the function. Because the
object module contains a fixup record for the function call, the
linker can set the interrupts as required.
<P>
On the other hand, when an application uses a function pointer, the
compiler creates a fixup record for the address to which the pointer
refers. However, the fixup record does not indicate that the record
provides the address for a function. Therefore, if the function is
linked as an overlay, the linker does not call the overlay manager but
performs a standard fixup.
<P>
Consequently, if an application calls a function located in an overlay
that is not loaded in memory, the overlay manager is not called to
load the overlay. Instead, the application passes control to the
random data located at the destination address and disaster can easily
result.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 4.06 4.07 4.10 5.01.20 5.01.21 5.02 5.03<BR>
5.05 5.10 5.11 5.13 5.15 5.20 5.30 5.31.009 5.50 5.60<BR>
KBCategory: kbtool<BR>
KBSubcategory: StaticOverlay<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
