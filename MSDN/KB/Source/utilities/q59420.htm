

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying the Order in Which NMAKE Builds Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q59420 ">
<META NAME="KBModify" CONTENT="1995/01/24">
<META NAME="KBCreate" CONTENT="1990/03/07">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  It is possible to specify the order in which NMAKE builds target files.  MORE INFORMATION  When NMAKE runs, it first checks its comment line. NMAKE builds any targets specified on the command line in order, from left to right. If the command line d...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBBI,QADX,QA4F,QAUS,QAMA,QAPF,QAIB,QBXT,QA5V,QAA5,QAG2,QAB6,QAWI,QDMW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Specifying the Order in Which NMAKE Builds Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 24, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q59420 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft NMAKE Utility for MS-DOS, versions 1.01, 1.1, 1.11,
   1.12, 1.13, 1.2, 1.3, and 1.4
<LI>Microsoft NMAKE Utility for OS/2, versions 1.01, 1.11, 1.12, 1.13,
   and 1.21
<LI>Microsoft NMAKE Utility for Windows NT, versions 1.4 and 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible to specify the order in which NMAKE builds target
files.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When NMAKE runs, it first checks its comment line. NMAKE builds any
targets specified on the command line in order, from left to right. If
the command line does not specify any targets, NMAKE builds the first
target in the description file.
<P>
NMAKE builds all the dependents in the order in which they are
specified on the first target line, from left to right. For most
description files, the first target in the file is the ALL
pseudotarget. NMAKE builds the specified files in order and builds
other files that depend on the specified files according to their
rules.
<P>
As an example, consider the following description file:
<P>
<P><h3>Sample Makefile 1</h3>
 
<P>
<PRE>   all : three.obj two.obj one.obj main.exe

   one.obj : one.c
      cl /c one.c

   two.obj : two.c
      cl /c two.c

   three.obj : three.c
      cl /c three.c

   main.exe : three.obj one.obj two.obj
      link one two three, main;

</PRE>In this example, NMAKE compiles THREE.C, TWO.C, and ONE.C, then it
links MAIN.EXE. The compiler uses this order because the first target
specifies the dependents in this order. NMAKE builds the first target
unless the command line specifies a different target to build.
<P>
Consider the following example that is somewhat different from the
example above:
<P>
<P><h3>Sample Makefile 2</h3>
 
<P>
<PRE>   all : main.exe

   one.obj : one.c
       cl /c one.c

   two.obj : two.c
       cl /c two.c

   three.obj : three.c
       cl /c three.c

   main.exe : three.obj one.obj two.obj
       link one two three, main;

</PRE>In this example, NMAKE compiles THREE.C, ONE.C, and TWO.C, then it
links MAIN.EXE. NMAKE builds the first target, MAIN.EXE, then it
builds the file MAIN.EXE depends on in the specified order.
<P>
To summarize, NMAKE looks first at its command line. If no files are
specified, it builds the first target in the description file by
building each of its dependent files in the specified order. If a file
that the first target depends on specifies another target, NMAKE
builds the dependent files of that target in the specified order. This
continues until all dependent files are built.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf kbinf 1.20 1.30 1.40 1.50<BR>
KBCategory: kbtool<BR>
KBSubcategory: NmakeIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 24, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
