

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: MASM Local Variables Unavailable in CodeView 4.0x </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100426">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/06/22">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  An attempt to display the local variables of an assembly language module created in Microsoft Macro Assembler (MASM) version 6.1 may fail. MASM displays one of the following messages when you attempt to display a local variable either in the comman...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QAAW,QBWS,QAB4,QBW6,QAYA,QAAP,QATL,QATK,QAEF,QAH4,QAKP,QDL9,QBWO,QBWN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: MASM Local Variables Unavailable in CodeView 4.0x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100426</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01
MS-DOS
kbtool kbcode kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft CodeView for MS-DOS, versions 4.0 and 4.01
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An attempt to display the local variables of an assembly language module
created in Microsoft Macro Assembler (MASM) version 6.1 may fail. MASM
displays one of the following messages when you attempt to display a local
variable either in the command window or in the locals window:
<P>
<PRE>   CAN0030: Error: expression cannot be evaluated

   -or-

   CXX0030: Error: expression cannot be evaluated

</PRE>The actual error message depends on the expression evaluator (C or C++)
CodeView is using at the time.
<P>
<P><h2>CAUSE</h2>
 
<P>
Apparently, this problem is caused by CodeView incorrectly initializing
memory. It occurs only after certain programs run, particularly those that
use extended memory. Because MASM 6.1 is a DOS-extended application, the
error occurs when CodeView runs after the assembler.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
At present, there are two methods to work around this problem.

<UL><LI>Reset memory before running CodeView. On a machine that runs
   only MS-DOS, you must reboot your computer. On a machine that
   runs an MS-DOS session in Microsoft Windows, close the MS-DOS
   window and open another to reset memory.
<P>
   -or-

<LI>Open a memory window to display the storage location of the
   local variable. There are three methods available to determine
   the address of the variable, as follows:
<P>
<P><PRE>    - Calculate an offset from the base pointer (BP+&lt;offset&gt;) as
      shown in the Locals window.
</PRE><P>
<P><PRE>    - Add a watch on the address of the variable (&amp;&lt;variable&gt;).
</PRE><P>
<P><PRE>    - Type the command "? &amp;&lt;variable&gt;" (without quotation marks) in
      the Command window to display the address.
</PRE><P>
   Enter the address in the address field of a Memory window to
   display the desired location.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in CodeView versions 4.0 and
4.01 for MS-DOS. This problem was corrected in CodeView version 4.1
distributed with Microsoft Visual C++ version 1.0 for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you have Visual C++, use LINK version 5.5 and CVPACK version 4.1
from the Visual C++ package with CodeView version 4.1 to debug
applications developed in MASM version 6.1.
<P>
You can use the Watch window to view global variables without any
difficulties. The following code example illustrates the problem with
local variables and allows you to experiment with the Memory window to
watch the local variable. If you use CodeView to debug this
application immediately after you start your computer or immediately
after opening an MS-DOS window in Windows, the error does not occur.
If you run CodeView after running MASM 6.1, it will not evaluate the
local variable.
<P>
<P><h3>Sample Code</h3>
 
<P>
; Assembly options needed: /Zi
<P>
.model small
.stack
.data
a WORD ?
<P>
.code
mainproc PROC NEAR
<PRE>        .STARTUP
        mov ax,30h
        mov a, ax
        mov ax, 0
        call myproc
        mov ax, a
        .EXIT
</PRE>mainproc ENDP
<P>
myproc PROC NEAR
LOCAL loc:WORD
<PRE>        mov ax, 60h
        mov loc, ax
        mov dx, loc
        mov a, dx
        ret
</PRE>myproc ENDP
<P>
END
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbtool kbcode kbbuglist kbfixlist<BR>
KBSubcategory: CvwIss<BR>
Keywords          : kb16bitonly<BR>
Version           : 4.00 4.01<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
