

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: LINK Erroneously Places Functions in Resident Name Table </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125800">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1995/02/06">
<META NAME="Keywords" CONTENT="kb16bitonly LinkIss kbbuglist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  The Linker erroneously places the decorated name of a function in the resident name table of a DLL if either of the following is true:   - The function is declared using the __export keyword, and there is no    corresponding entry for the function ...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA3P,QAUJ,QAY5,QACI,QARM,QBV8,QAB9,QAEY,QAJP,QAAP,QARR,QAKP,QATI,QALZ,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: LINK Erroneously Places Functions in Resident Name Table</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125800</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.50 5.60 5.60.220
MS-DOS
kbtool kbbuglist
<P>
 
The information in this article applies to:
<P>
<PRE> The Microsoft Linker (LINK.EXE), included with
  - Microsoft Visual C++ for Windows, versions 1.0, 1.5, and 1.51
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Linker erroneously places the decorated name of a function in the
resident name table of a DLL if either of the following is true:

<UL><LI>The function is declared using the __export keyword, and there is no
   corresponding entry for the function in the EXPORTS section of the
   project's module definition file (.DEF file).
<P>
   -or-

<LI>The decorated name of the function is listed in the EXPORTS section of
   the project's .DEF file without a corresponding ordinal value.
<P>
</UL>According to the documentation concerning .DEF files as well as the
documentation on the __export keyword, this is incorrect behavior. This
problem may cause the following error to be generated, when it should not
cause an error:
<P>
<PRE>   LINK Fatal Error L1041: resident names table overflow

</PRE><h2>RESOLUTION</h2>
 
<P>
The best way to control whether symbols appear in the resident name table
or the nonresident name table of a target is to ensure that user defined
functions are exported by ordinal. By using the RESIDENTNAME keyword, you
can ensure that decorated symbols are placed automatically in the resident
name table. By omitting the RESIDENTNAME keyword, you can ensure that
decorated symbols are placed automatically in the nonresident name table.
Use of the __export keyword does not contribute to placement of the symbols
in the target image at all.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
We can easily demonstrate the linker's behavior in all cases in the
following way:
<P>
If four functions are declared as such:
<P>
<PRE>     void __export DllFunc1(void);
     void __export DllFunc2(void);
     void DllFunc3(void);
     void __export DllFunc4(void);

</PRE>And the .DEF file for the project contains the following EXPORTS section:
<P>
<PRE>     EXPORTS
          _DllFunc1 @1 RESIDENTNAME
          _DllFunc2 @2
          _DllFunc3
          ; note there is no entry for _DllFunc4

</PRE>_DllFunc1 is placed in the resident name table as it should be, but
_DllFunc3 and _DllFunc4 are erroneously placed in the resident name table.
_DllFunc2 is placed in the nonresident name table as it should be.
<P>
NOTE: If controlling placement of symbols in the resident and nonresident
name tables is an issue, export the functions using the methods shown for
_DllFunc1 and _DllFunc2. This is the recommended approach.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.50 5.60 5.60.220 non-resident names<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: LinkIss<BR>
Keywords            : kb16bitonly LinkIss kbbuglist kbtool<BR>
Version             : 5.50 5.60 5.60.220<BR>
Platform            : MS-DOS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
