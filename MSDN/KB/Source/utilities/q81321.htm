

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Maintaining PWB Display While Running a Program </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q81321 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/03/03">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  This article discusses how to run a program in the background with the Programmer's WorkBench (PWB) versions 1.0 and 1.1, much like NMAKE and other utilities do. Although this method also works for version 2.0 of PWB, we recommend that you use the ...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOG,QAH4,QBV8,QAB9,QBFY,QBXS,QAY5,QAL3,QAH6,QAP2,QAMN,QAH7,QAD7,QBSO,QAI4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Maintaining PWB Display While Running a Program</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q81321 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.10 2.00 | 1.00 1.10
<PRE>MS-DOS         | OS/2
</PRE>kbtool kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Programmer's Workbench for MS-DOS, versions 1.0, 1.1, and
   2.0
<LI>Microsoft Programmer's Workbench for OS/2, versions 1.0 and 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how to run a program in the background with the
Programmer's WorkBench (PWB) versions 1.0 and 1.1, much like NMAKE and
other utilities do. Although this method also works for version 2.0 of
PWB, we recommend that you use the newer callback, DoSpawn(), instead.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The best way to do this is to use PWB's compile command. First build a
string of the form:
<P>
<PRE>   "arg arg \"progname.exe arguments for exe \" compile"

</PRE>Then pass the string to fExecute(). To demonstrate this, without
having to write an extension, do the following in PWB:

<OL><P><LI>Press ALT+A ALT+A.

<P><LI>Type in the name of the program or command you want to execute. For
   the purposes of this article, type in "set".

<P><LI>Press CTRL+F3. This is the compile command.

<P><LI>PWB will appear to be doing a build of your program. The box that
   comes up will show the command that you passed to it, in this case,
   set.

<P><LI>A dialog box will give you the options to View Results or Cancel.
   Choose View Results.

<P><LI>In the Compile Results window, you will see the environment
   variables that you have set.
<P>
</OL>Note that the PROGNAME.EXE can also be an MS-DOS or OS/2 command. The
following sample code shows how to incorporate this into a simple
program. Note that the results, if any, of your program will appear in
the compile results window. Add the following lines to the TOOLS.INI
file to make the function, funcname, accessible in PWB by using the
ALT+Z keystroke:
<P>
load:[extension].mxt
funcname:alt+z
<P>
If you are working under OS/2 rather than MS-DOS, you should use .PXT
instead of .MXT as the file extension. It is important to note that
you must force PWB to load your extension before you assign a
keystroke to your function. PWB will recognize your function only
after the extension is loaded, and since extensions are loaded after
the TOOLS.INI, you cannot rely on PWB's automatic loading of
extensions. MORE information about PWB extensions can be found in
Chapter 8 of the "Microsoft C Advanced Programming Techniques" manual,
the online help, and in Chapter 9 of the C versions 6.x "Developers
Toolkit Reference."
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile and link options needed:
   cl /c /ACw /Gs [extension].c
      To link for MS-DOS:
   link /NOI exthdr.obj [extension].obj, [extension].mxt;
      To link for OS/2:
   link /NOI exthdrp.obj [extension].obj, [extension].pxt,,, ext.def;
*/

#include "ext.h"

/* function prototype */
</PRE></OL>PWBFUNC funcname (
<PRE>    unsigned argData,
    ARG _far *pArg,
    flagType fMeta);

/* Switch description table (required for an extension) */
</PRE>struct swiDesc swiTable[] = { { NULL,NULL,0}};
<P>
<PRE>/* Command description table ( required for a PWB extension) */
</PRE>struct cmdDesc cmdTable[] ={
<PRE>    { "funcname", funcname, 0 , NOARG},
    { NULL, NULL, 0, 0}};

/* Function that PWB calls when loading the extension */
void EXTERNAL WhenLoaded(void)
</PRE>{
<PRE>    DoMessage("Loading funcname extension");
</PRE>}
<P>
PWBFUNC funcname (
<PRE>    unsigned argData,
    ARG _far *pArg,
    flagType fMeta)
</PRE>{
<PRE>    char c[] = "arg arg \"set\" compile";
    fExecute(c);
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf kbinf extension 1.00 1.10 2.00  PWBIss<BR>
KBCategory: kbtool kbcode<BR>
KBSubcategory: PWBIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
