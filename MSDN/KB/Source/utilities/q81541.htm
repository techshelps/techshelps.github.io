

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using PWB to Maintain Libraries </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q81541 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/03/10">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  This article describes how to add a template of build switches to the TOOLS.INI file, which will allow you to maintain libraries of object modules. This article also describes how to add new object modules to an existing library using the Programme...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA5,QAH4,QBV8,QBHQ,QAB9,QBFY,QAVX,QAVI,QBXS,QA36,QDMO,QANE,QAKR,QAHE,QAHD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using PWB to Maintain Libraries</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q81541 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.10 2.00 | 1.00 1.10
<PRE>MS-DOS         | OS/2
</PRE>kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Programmer's Workbench for MS-DOS, versions 1.0, 1.1, and
   2.0.
<LI>Microsoft Programmer's Workbench for OS/2, versions 1.0 and 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to add a template of build switches to the
TOOLS.INI file, which will allow you to maintain libraries of object
modules. This article also describes how to add new object modules to
an existing library using the Programmer's WorkBench. One drawback to
using these templates is that the library must exist before they can
be used.
<P>
This articles was originally written for PWB 1.X, but the process is the
same for PWB 2.0. However, some of the steps to select the build options
are different.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Add the following template to the TOOLS.INI file in the subdirectory
specified by the INIT environment variable. This template will allow
you to replace .OBJ modules in an existing library. Note that the
object module must be in the library to make use of this template.
<P>
Note: The lines that are split should be concatenated. These lines
were broken for readability.
<P>
[pwb-Build Options:Replace OBJ in Library]
<PRE>  build: macro PWBRMAKE "pwbrmake"
  build: macro NMAKEBSC1 "set"
  build: macro NMAKEBSC2 "nmake"
  build: macro CC "cl"
  build: macro CFLAGS_G "/AL /W2 /G2 /BATCH /FR$*.sbr"
  build: macro CFLAGS_D "/qc /Od /Zi /Zr"
  build: macro CFLAGS_R "/Ot /Oi /Ol /Oe /Og /Gs"
  build: macro ASM "ml"
  build: macro AFLAGS_G "/W2 /WX /FR$*.sbr"
  build: macro AFLAGS_D "/Sf /Sa /Sg /Sx /Zi /Fl"
  build: macro AFLAGS_R "/nologo"
  build: macro MAPFILE_D "$(PROJ).map"
  build: macro MAPFILE_R "NUL"
  build: macro BRFLAGS " /o $(PROJ).bsc"
  build: macro BROWSE "1"
  build: macro LIB "lib"
  build: all $(PROJ).lib
  build: target $(PROJ).bsc pwbrmake
  build: target $(PROJ).lib lib nmakebsc1 nmakebsc2
  build: inference .c.sbr cc_c_sbr
  build: inference .asm.sbr asm_asm_sbr
  build: inference .c.obj cc_c_obj lib_obj_lib
  build: inference .asm.obj asm_asm_obj lib_obj_lib
  build: inference .h.inc h2inc_h_inc
  build: command pwbrmake "$(PWBRMAKE) @&lt;&lt;\n$(BRFLAGS) $(SBRS)\n&lt;&lt;"
  build: command nmakebsc1 "$(NMAKEBSC1) MAKEFLAGS="
  build: command nmakebsc2 "$(NMAKEBSC2) $(NMFLAGS) -f $(PROJFILE)
                        $(PROJ).bsc"
  build: command lib_obj_lib "$(LIB) $(PROJ).lib -+$(@B).obj;"
  build: command lib "@echo $(OBJS) &gt;NUL"
  build: release command cc_c_sbr "$(CC) /Zs $(CFLAGS_G)
                        $(CFLAGS_R) /FR$@ $&lt;"
  build: debug command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_D)
                        /FR$@ $&lt;"
  build: release command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G)
                        $(AFLAGS_R) /FR$@ $&lt;"
  build: debug command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G)
                        $(AFLAGS_D) /FR$@ $&lt;"
  build: release command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_R)
                        /Fo$@ $&lt;"
  build: debug command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_D)
                        /Fo$@ $&lt;"
  build: release command asm_asm_obj "$(ASM) /c $(AFLAGS_G)
                        $(AFLAGS_R) /Fo$@ $&lt;"
  build: debug command asm_asm_obj "$(ASM) /c $(AFLAGS_G)
                        $(AFLAGS_D) /Fo$@ $&lt;"
  build: release command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G)
                        $(CFLAGS_R) $&lt;"
  build: debug command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G)
                        $(CFLAGS_D) $&lt;"

</PRE>This template will allow you to add new OBJ modules to an existing
library. Add the following template to the TOOLS.INI file in the
subdirectory specified by the INIT environment variable.
<P>
Note: The object module must not be in the library to make use of this
template.
<P>
[pwb-Build Options:Add OBJ to library]
<PRE>  build: macro PWBRMAKE "pwbrmake"
  build: macro NMAKEBSC1 "set"
  build: macro NMAKEBSC2 "nmake"
  build: macro CC "cl"
  build: macro CFLAGS_G "/AL /W2 /G2 /BATCH /FR$*.sbr"
  build: macro CFLAGS_D "/qc /Od /Zi /Zr"
  build: macro CFLAGS_R "/Ot /Oi /Ol /Oe /Og /Gs"
  build: macro ASM "ml"
  build: macro AFLAGS_G "/W2 /WX /FR$*.sbr"
  build: macro AFLAGS_D "/Sf /Sa /Sg /Sx /Zi /Fl"
  build: macro AFLAGS_R ""
  build: macro MAPFILE_D "$(PROJ).map"
  build: macro MAPFILE_R "NUL"
  build: macro BRFLAGS " /o $(PROJ).bsc"
  build: macro BROWSE "1"
  build: macro LIB "lib"
  build: all $(PROJ).lib
  build: target $(PROJ).bsc pwbrmake
  build: target $(PROJ).lib lib nmakebsc1 nmakebsc2
  build: inference .c.sbr cc_c_sbr
  build: inference .asm.sbr asm_asm_sbr
  build: inference .c.obj cc_c_obj lib_obj_lib
  build: inference .asm.obj asm_asm_obj lib_obj_lib
  build: inference .h.inc h2inc_h_inc
  build: command pwbrmake "$(PWBRMAKE) @&lt;&lt;\n$(BRFLAGS) $(SBRS)\n&lt;&lt;"
  build: command nmakebsc1 "$(NMAKEBSC1) MAKEFLAGS="
  build: command nmakebsc2 "$(NMAKEBSC2) $(NMFLAGS) -f $(PROJFILE)
                        $(PROJ).bsc"
  build: command lib_obj_lib "$(LIB) $(PROJ).lib +$(@B).obj;"
  build: command lib "@echo $(OBJS) &gt;NUL"
  build: release command cc_c_sbr "$(CC) /Zs $(CFLAGS_G)
                        $(CFLAGS_R) /FR$@ $&lt;"
  build: debug command cc_c_sbr "$(CC) /Zs $(CFLAGS_G) $(CFLAGS_D)
                        /FR$@ $&lt;"
  build: release command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G)
                        $(AFLAGS_R) /FR$@ $&lt;"
  build: debug command asm_asm_sbr "$(ASM) /Zs $(AFLAGS_G)
                        $(AFLAGS_D) /FR$@ $&lt;"
  build: release command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_R)
                        /Fo$@ $&lt;"
  build: debug command cc_c_obj "$(CC) /c $(CFLAGS_G) $(CFLAGS_D)
                        /Fo$@ $&lt;"
  build: release command asm_asm_obj "$(ASM) /c $(AFLAGS_G)
                        $(AFLAGS_R) /Fo$@ $&lt;"
  build: debug command asm_asm_obj "$(ASM) /c $(AFLAGS_G)
                        $(AFLAGS_D) /Fo$@ $&lt;"
  build: release command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G)
                        $(CFLAGS_R) $&lt;"
  build: debug command h2inc_h_inc "$(H2INC) /c $(CFLAGS_G)
                        $(CFLAGS_D) $&lt;"

</PRE>To demonstrate the use of these templates, do the following.

<OL><P><LI>At the command prompt, type the following:
<P>
       lib example

<P><LI>The library manager will ask you if you would like to create the
    new library. Answer "Y".

<P><LI>Press ENTER for the remaining prompts.

<P><LI>Start PWB.

<P><LI>Create a program list EXAMPLE.MAK.

<P><LI>Add a .C or .ASM file to the program list.

<P><LI>From the Options menu, choose Build Options. If you are using PWB
    version 1.1, set the main language to none. Set Initial Build
    Options to Add OBJ to library.

<P><LI>Choose Rebuild All from the Make menu.

<P><LI>In the Compile Results window, you should see the results of NMAKE
    compiling your file and adding it to the existing library.

<P><LI>Now choose Build Options from the Options menu.

<P><LI>Set Initial Build Options to Replace OBJ in Library.

<P><LI>Choose Rebuild All from the Make menu.

<P><LI>In the Compile Results window, you should see the results of NMAKE
    compiling or assembling your file and replacing it in the existing
    library.
<P>
</OL>For information on how to make libraries dependents of the current
target, query on the following words:
<P>
<PRE>   library pwb dependent

</PRE></OL>For more information about the PWB build switches and how to modify
the above switches, see the "Microsoft Programmers WorkBench"
application note, which can be obtained from Microsoft Product Support
or query on SW0330.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.10 2.00<BR>
KBCategory: kbtool<BR>
KBSubcategory: PWBIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
