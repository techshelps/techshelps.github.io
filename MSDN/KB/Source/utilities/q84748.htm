

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: LIB with /NOI Preserves Case for Object Module Names </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84748 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/05/19">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  When using the Microsoft Library Manager (LIB) to extract or delete an object module in a library, the following error is generated even though the object module is in the library:     LIB: U2155: 'module' : module not in library; ignored  Similarl...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QBHQ,QAH4,QAB4,QBVV,QAJQ,QAW6,QAUJ,QAPN,QAGX,QA3P,QBV8,QAH7,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: LIB with /NOI Preserves Case for Object Module Names</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84748 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.10 3.11 3.17 3.18 3.20 3.31 3.40 | 3.10 3.11 3.17 3.18
<PRE>MS-DOS                             | OS/2
</PRE>kbtool kberrmsg kbprb
<P>
 
The information in this article applies to:

<UL><LI>Microsoft LIB for MS-DOS, versions 3.1, 3.11, 3.17, 3.18, 3.2,
   3.20.010, 3.31, and 3.4
<LI>Microsoft LIB for OS/2, versions 3.1, 3.11, 3.17, and 3.18
</UL> 
<P>
SYMPTOMS
 
<P>
When using the Microsoft Library Manager (LIB) to extract or delete an
object module in a library, the following error is generated even though
the object module is in the library:
<P>
<PRE>   LIB: U2155: 'module' : module not in library; ignored

</PRE>Similarly, when attempting to replace an object module in a library, the
following warnings are generated even though the object module is in the
library:
<P>
<PRE>   LIB: U4155: 'module' : module not in library
   LIB: U4151: 'symbol' : symbol defined in module 'module'
                          redefinition ignored

</PRE>When attempting to add an object module to a library that already contains
it, the following warning is generated:
<P>
<PRE>   LIB: U4151: 'symbol' : symbol defined in module 'module'
                          redefinition ignored

</PRE>This warning may be followed by:
<P>
<PRE>   LIB: U4150: 'module' : module redefinition ignored

</PRE>Instead, just the U4150 warning should be generated.
<P>
<P><h2>CAUSE</h2>
 
<P>
The library may have been created using the /NOI option on the LIB command
line. This switch turns on case sensitivity when comparing symbols.
However, this also causes LIB to preserve case when comparing module names.
This can result in unexpected U2155, U4155, U4151, and U4150 messages.
<P>
For example, suppose TESTLIB.LIB does not previously exist and is created
as in the following example:  lib testlib.lib /NOI TEST.OBJ;
<P>
Executing the following command to extract TEST.OBJ
<P>
<PRE>   lib testlib.lib *test.obj;

</PRE>will result in an incorrect U2155 error because LIB will not match test.obj
with TEST.OBJ, because TESTLIB.LIB was created using the /NOI option.
<P>
Executing commands to remove TEST.OBJ from the library or to both extract
and remove TEST.OBJ, as shown below
<P>
<PRE>   lib testlib.lib -test.obj;
   lib testlib.lib -*test.obj;

</PRE>will generate the same incorrect U2155 error because test.obj will not be
considered as matching TEST.OBJ.
<P>
Similarly, the command to replace TEST.OBJ in the library
<P>
<PRE>   lib testlib.lib -+test.obj;

</PRE>generates warnings U4155 and U4151 because LIB does not consider test.obj
to be the same as TEST.OBJ. Thus the same module is added to the library a
second time causing symbol redefinitions.
<P>
Also, the command to add test.obj to the library TESTLIB.LIB, which already
contains it as TEST.OBJ
<P>
<PRE>   lib testlib.lib +test.obj;

</PRE>causes the U4151 warning to be generated, possibly followed by the U4150
warning. Again, this is because test.obj is not considered to be the same
module name as TEST.OBJ.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The following are workarounds in this situation.

<UL><LI>Do not use /NOI when first creating a library. This causes
   module names to be handled correctly.
<P>
   -or-

<LI>If a library is created with /NOI, use it to create a new
   library without the /NOI option. The module names in the new
   library will not be case sensitive. For example, if TESTLIB.LIB
   was originally created with /NOI, then
<P>
<P><PRE>      lib /IGN newlib.lib +testlib.lib;
</PRE><P>
   will create a new library, NEWLIB.LIB, that will be a copy of
   TESTLIB.LIB but that will have module names that are not case
   sensitive. The /IGN (ignore case) option is the default and is
   included here only for emphasis.
<P>
</UL><h2>STATUS</h2>
 
<P>
This feature is under review.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 3.20  LibIss<BR>
KBCategory: kbtool kberrmsg kbprb<BR>
KBSubcategory: LibIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
