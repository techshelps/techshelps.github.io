

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Step-After-Return in CodeView "Hangs" in a Large Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q116183">
<META NAME="KBModify" CONTENT="1997/07/22">
<META NAME="KBCreate" CONTENT="1994/06/13">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  Using the PR command (Stop After Return) on a large function, or on a function with long iterative loop, causes CodeView to appear to hang.  CAUSE =====  The PR command is inefficient when used on large functions because it is too slow. In the case...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB9,QBV8,QDL9,QBWQ,QBWO,QBWN,QAY5,QAUD,QA4Q,QAKP,QDJO,QBVV,QALZ,QAGB,QDKW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Step-After-Return in CodeView "Hangs" in a Large Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q116183</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10 | 4.00 4.01 4.10
<PRE>MS-DOS         | WINDOWS
</PRE>kbtool kbcode kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft CodeView for MS-DOS, versions 4.0, 4.01, and 4.1
<LI>Microsoft CodeView for Windows, versions 4.0, 4.01, and 4.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the PR command (Stop After Return) on a large function, or
on a function with long iterative loop, causes CodeView to appear to
hang.
<P>
<P><h2>CAUSE</h2>
 
<P>
The PR command is inefficient when used on large functions because it is
too slow. In the case of the example below, there is no activity. Locals
and watch expressions do not get updated, and IP tracking is inactive.
Furthermore, CTRL+BREAK, CTRL+C, AND CTRL+ALT+SYSREQ do not terminate the
PR command because CodeView is receiving single step notifications fast
enough that the system is likely not getting a chance to process them.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, refrain from using the PR command on
large functions, or those with long iterative loops.  Instead, set a
breakpoint at the location you wish CodeView to stop, or move the
cursor to that location and press F7 to Run-To-Cursor.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be problem with CodeView for MS-DOS,
versions 4.0, 4.01, and 4.1, and CodeView for Windows, versions 4.0, 4.01,
and 4.1. We are researching this problem and will post more information in
the Microsoft Knowledge Base as soon as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample code below may be used to reproduce the problem. After
starting CodeView, enter these commands in the command window:
<P>
<PRE>  g f
  p
  pr

</PRE>At this point any attempts to break into CodeView are ignored.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed:  /Zi
*/
   #ifdef _WINDOWS
   #include &lt;windows.h&gt;
   #endif

   void f(void);

   void main(void)
   {
    f();
   }

   void f(void)
   {
    int t;
    int x;

    for (t=32767; t&gt;0; --t)
    {
     x = t;
    }
   }

   #ifdef _WINDOWS
   int WINAPI WinMain (HANDLE hInstance, HANDLE hPrevInstance,
                       LPSTR lpszCmdParam, int nCmdShow)
   {
    main();
    return( TRUE );
   }
   #endif
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.01 4.10<BR>
KBCategory: kbtool kbcode kbbuglist<BR>
KBSubcategory: CvwIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
