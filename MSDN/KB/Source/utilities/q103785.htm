

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Timing Anomalies of Source Profiler </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103785">
<META NAME="KBModify" CONTENT="1997/07/18">
<META NAME="KBCreate" CONTENT="1993/08/30">
<META NAME="Keywords" CONTENT="kb16bitonly TlsMisc kbcode kbtool">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT=" The information in this article is included in the documentation starting with Visual C++ 5.0. Look there for future revisions.   Profiling applications with Microsoft Source Profiler may produce inconsistent and incorrect timing information in some...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAFH,QAK6,QACE,QDL9,QBWQ,QBWO,QBWN,QAU3,QAMR,QAJH,QAAP,QBV8,QAYY,QANY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Timing Anomalies of Source Profiler</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103785</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.20 1.30 | 1.00 1.20 | 1.00 1.20 1.30
<PRE>MS-DOS         | OS/2      | WINDOWS
</PRE>kbtool kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Source Profiler for MS-DOS, version 1.0, 1.2, and 1.3
<LI>Microsoft Source Profiler for OS/2, version 1.0 and 1.2
<LI>Microsoft Source Profiler for Windows, version 1.0, 1.2, and 1.3
</UL> 
<P>
The information in this article is included in the documentation starting
with Visual C++ 5.0. Look there for future revisions.
<P>
<P><h2>SUMMARY</h2>
 
<P>
Profiling applications with Microsoft Source Profiler may produce
inconsistent and incorrect timing information in some cases. The
information below describes such situations.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Profiling applications on systems that have built-in memory caches or
disk caches may produce erratic time reports. The number of
instructions from the application's code and the profiler's code that
gets loaded in the cache cannot be controlled, and this causes the
timing inconsistencies.
<P>
Profiling applications under Windows versions 3.0 and 3.1, when other
tasks are running, may produce incorrect timing information on the
applications being profiled. This problem is caused by the time spent
on other tasks being attributed to the application being profiled.
<P>
The profiler must compensate for Windows protected-mode and
device-driver overhead when recording timing information. This can
cause timing by line and timing of short functions or procedures to be
inaccurate. These inaccuracies can accumulate and cause the total
program execution time shown by the profiler to be greater than the
actual time taken by the program.
<P>
In general, Windows standard mode gives better timing results than 386
enhanced mode.
<P>
In the case of FORTRAN programs compiled using Microsoft FORTRAN
versions 5.0 and 5.1 with the /4Yb compiler option (or $DEBUG
metacommand), additional code is generated for expanded error
handling, and this may result in an increase in the Profiler timing
information.
<P>
<P><h3>Sample Code</h3>
 
<P>
Profiling the following FORTRAN code compiled with and without the
/4Yb option (or the $DEBUG metacommand) reports significant time
difference on the first line of the code where the function call is
made:
<P>
<PRE>   a=func(4.0)
   print*, a
   end

   function func(s)
   func=sqrt(s)
   return
   end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool kbcode<BR>
KBSubcategory: TlsMisc<BR>
Additional reference words: 1.00 1.20 1.30 3.00 3.10 5.00 5.10<BR>
Keywords            : kb16bitonly TlsMisc kbcode kbtool<BR>
Version             : 1.00 1.20 1.30 | 1.00 1.20 | 1.0<BR>
Platform            : MS-DOS OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
