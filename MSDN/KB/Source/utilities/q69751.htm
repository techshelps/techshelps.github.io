

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Make a Library File a Dependent of the Target in PWB </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q69751 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1991/02/28">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  In the Programmer's WorkBench (PWB), additional libraries may be specified in a Program List. However, these libraries are not put into the makefile as dependents of the target file. Thus, if one of these libraries is changed, this does not cause t...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBHQ,QAHE,QAKR,QBV8,QAA5,QBWC,QAJN,QACI,QBXT,QBBI,QA5V,QAUR,QAL0,QAIB,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Make a Library File a Dependent of the Target in PWB</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q69751 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.10 | 1.00 1.10
<PRE>MS-DOS    | OS/2
</PRE>kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Programmer's Workbench for MS-DOS, versions 1.0 and 1.1
<LI>Microsoft Programmer's Workbench for OS/2, versions 1.0 and 1.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In the Programmer's WorkBench (PWB), additional libraries may be
specified in a Program List. However, these libraries are not put into
the makefile as dependents of the target file. Thus, if one of these
libraries is changed, this does not cause the project to be rebuilt
unless you delete the existing target file or select Rebuild All to
rebuild the entire project.
<P>
To make a project automatically relink after an external library has
been modified, you need to modify two build switches. This can be done
permanently in the TOOLS.INI file or temporarily inside PWB in the
Editor Settings (which can be reached from the Options menu). Then you
must place the library(s) in the project's program list (as opposed to
the Additional Libraries list in the Link Options dialog box).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following information describes the two methods for making the
build-switch changes that are required to have libraries recognized as
dependents of the target file in a project. For those who would like
more extensive information on modifying and creating build switches,
an application note is available from Microsoft on this subject. For
details, query on the keyword "SW0330".
<P>
You can verify the results of either of these build-switch changes by
looking at the PWB-generated makefile and observing that external
libraries are, in fact, listed as dependents of the project target.
<P>
<P><h3>Making Permanent Build Switch Modifications in TOOLS.INI</h3>
 

<OL><P><LI>Use the Options menu items Build Options, C Compiler Options, and
   Link Options to setup the various compiler and link options the way
   you want them.

<P><LI>Select the Save Current Build Options function in the Build Options
   dialog box and save the current build options under a unique name.

<P><LI>Bring your TOOLS.INI file into the editor and locate the section
   that begins with the unique name you just specified in step 2 above.

<P><LI>Within this section, locate the line that reads
<P>
<P><PRE>      build: target $(PROJ).exe lrf_exe link_exe
</PRE><P>
   and change it to:
<P>
<P><PRE>      build: target $(PROJ).exe lrf_exe link_exe new_libs
</PRE>
<P><LI>Add a new line (anywhere in this section) that reads:
<P>
<P><PRE>      build: command new_libs "ECHO $(LIBS) &gt;NUL"
</PRE><P>
</OL>This will cause the target to be dependent upon any library(s) placed
in the program list whenever these new build options are in effect;
when you change an external library, the project will be relinked even
if no other modules have changed.
<P>
<P><h3>Making Temporary Build Switch Modifications in the Editor Settings</h3>
 

<OL><P><LI>Select the Editor Settings function from the Options menu.

<P><LI>Find the section containing the build switches.

<P><LI>Within this section, locate the line that reads
<P>
<P><PRE>      build: target $(PROJ).exe lrf_exe link_exe
</PRE><P>
   and change it to:
<P>
<P><PRE>      build: target $(PROJ).exe lrf_exe link_exe new_libs
</PRE>
<P><LI>Add a new line (somewhere in this section) that reads:
<P>
<P><PRE>      build: command new_libs "ECHO $(LIBS) &gt;NUL"
</PRE><P>
</OL>These changes will be in effect only for the current programming
session. Thus, this method is useful for testing, but the previous
method is recommended for regular use.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 1.10  PWBIss<BR>
KBCategory: kbtool<BR>
KBSubcategory: PWBIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
