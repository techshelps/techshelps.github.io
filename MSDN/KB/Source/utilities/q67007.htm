

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Executing a Function From the Command or Watch Window </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67007 ">
<META NAME="KBModify" CONTENT="1996/05/02">
<META NAME="KBCreate" CONTENT="1990/11/16">
<META NAME="Keywords" CONTENT="kbtool kbcode kbdocerr">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  According to page 201 of the Microsoft C  Advanced Programming Techniques  manual for versions 6.x,  any C function in your program (whether user-written or from the library) can be called from the Command window or the Watch window.   This stateme...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATK,QATL,QBV8,QAB9,QAY5,QAGI,QAB4,QAY2,QAAP,QBFY,QBE7,QBE6,QBVV,QAIF,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Executing a Function From the Command or Watch Window</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67007 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft CodeView for MS-DOS, versions 2.2, 3.0, 3.11, 3.14, 4.0,
   4.01, 4.05, and 4.1
<LI>Microsoft CodeView for OS/2, versions 2.2, 3.0, 3.11, 3.12, and 3.5
<LI>Microsoft CodeView for Windows, versions 3.0, 3.05, 3.06, 3.07,
   4.0, 4.01, and 4.1
<LI>Microsoft CodeView for Win32s, version 4.25
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
According to page 201 of the Microsoft C "Advanced Programming
Techniques" manual for versions 6.x, "any C function in your program
(whether user-written or from the library) can be called from the
Command window or the Watch window."
<P>
This statement is not entirely true; you can call only functions
compiled with full CodeView symbolic debugging information from the
Command and Watch windows. Therefore, you cannot call any functions in
the C run-time library because the libraries do not contain symbolic
information. The text below provides an example of calling a function
in the C run-time library.
<P>
In Microsoft C/C++ version 7.0, chapter 11 of the "Environment and
Tools" manual documents calling functions from the CodeView command
window.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An attempt to call, from the Command window, a function that does not
have any symbolic information fails and CodeView generates an error
message. In CodeView versions 4.0x, 4.1, and 4.25, the error is as
follows:
<P>
<PRE>   CXX0017: Error: symbol not found
   -or-
   CAN0017: Error: symbol not found

</PRE>In CodeView versions 3.x, the error is as follows:
<P>
<PRE>   CV1017 Error: Syntax error

</PRE>CodeView versions 2.x display an "unknown symbol" error in the Command
window.
<P>
An attempt to add to the Watch window a function that does not have
any symbolic information fails and CodeView generates an error
message. In CodeView versions 4.0x, 4.1, and 4.25, the error is as
follows:
<P>
<PRE>   CXX0030: Error: expression cannot be evaluated
   -or-
   CAN0030: Error: expression cannot be evaluated

</PRE>CodeView versions 3.x ignore the entry and sound the system bell.
CodeView versions 2.x generate an "unknown symbol" error.
<P>
The Advanced Programming Techniques manual provides an example of
calling a function in the C run-time library from the Command window
with the following command:
<P>
<PRE>   ?funcname (varlist)

</PRE>This command invokes the function and displays its return value in the
Command window. To add the function to the Watch window, use the
following command:
<P>
<PRE>   w?funcname (varlist)

</PRE>Another method to add a function to the Watch window is as follows:
choose Add Watch from the Watch menu. Type the function name, a left
parenthesis, the argument list, a right parenthesis, and choose OK.
Neither "w" or "?" is required in this situation.
<P>
If the function required any input or produces any output, the screen
flip/swap option on the Options menu must be selected.
<P>
To call a function in the C run-time library, a function in the
Windows application programming interface (API), or any other function
that does not contain CodeView symbolic information, you must write a
shell function that calls the desired function and passes along the
value it returns.
<P>
For example, to call the sqrt() function in the C run-time library
from the CodeView Command or Watch window, create a shell function
that looks like the following:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/*
 * Compile options needed: /Zi
 */

#include &lt;math.h&gt;

</PRE>double my_sqrt(double x)
{
<PRE>   return sqrt(x);
</PRE>}
<P>
Compile this function and link it into your application (be sure to
specify the /CO[DEVIEW] LINK option). Your application does not need
to call my_sqrt() for the function to be available for direct
execution. However, before calling my_sqrt() from the Command or Watch
window, you must step into the main() function to initialize the
program's stack.
<P>
To run the my_sqrt() function from the Command window, type the
following:
<P>
<PRE>   ?my_sqrt(4.0)

</PRE>CodeView displays the value returned by the function on the next line
in the Command window. In this example, CodeView displays
2.0000000000000, the square root of 4.0.
<P>
To add the my_sqrt() function to the Watch window, type the following
in the Command window:
<P>
<PRE>   w?my_sqrt(4.0)

</PRE>To add the my_sqrt() function to the Watch window using the Add Watch
command on the Watch menu, type the following at the Add Watch prompt:
<P>
<PRE>   my_sqrt(4.0)

</PRE>CodeView executes each function in the Watch window each time it
updates the Watch window.
<P>
Even though these examples use a constant value for the function
parameter, you can specify any variable that is currently in scope.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.20 3.00 3.50 4.00 4.10 docerr<BR>
KBCategory: kbtool kbcode kbdocerr<BR>
KBSubcategory: CvwIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
