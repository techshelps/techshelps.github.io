

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Communal Data Is Not Included in the LIB Listing </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q79857 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/01/08">
<META NAME="Keywords" CONTENT="kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  Communal data declarations generate no PUBLIC definitions. Therefore, although they can be placed in a library, they are not placed in the library dictionary and will not be a part of the library listing generated by the LIB utility.  MORE INFORMAT...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QBHQ,QBVV,QBE7,QBE6,QAH4,QACJ,QA4Q,QAYY,QAWM,QAKJ,QAJQ,QBFY,QALQ,QALG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Communal Data Is Not Included in the LIB Listing</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q79857 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.11 3.17 3.18 3.20 3.20.01 3.31 3.40 | 3.11 3.17 3.18
<PRE>MS-DOS                                | OS/2
</PRE>kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft LIB for MS-DOS, versions 3.11, 3.17, 3.18, 3.2,
   3.20.010, 3.31, and 3.4
<LI>Microsoft LIB for OS/2, versions 3.11, 3.17, 3.18
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Communal data declarations generate no PUBLIC definitions. Therefore,
although they can be placed in a library, they are not placed in the
library dictionary and will not be a part of the library listing
generated by the LIB utility.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Communal variables are supported only by QuickC, Microsoft C versions
5.0 and later, and MASM. They are, however, similar to common blocks
in FORTRAN. In C, communal variables are the uninitialized global data
items. In MASM, they are data items declared with the COMM qualifier.
<P>
The linker will assume the communal variables refer to an external
defining declaration elsewhere. If there is no external definition,
the linker allocates storage and initializes it to 0 (zero). If there
is more than one declaration, storage is allocated for the largest
data item declared. For example, if I is declared int I; in one module
and char I; in another module, the linker will allocate 2 bytes for I
because the int is 2 bytes but the char is only 1 byte. Because memory
for communal variables may not be assigned until load time, their use
may reduce the size of your executable file.
<P>
When a communal variable is declared in a library and defined in one
of the object modules, references to that variable will be resolved
with the defined variable. For this reason, communal variable
declarations are not recommended for any file that might be placed in
a library. If a variable defined in a .OBJ file accidentally had the
same name as a communal variable in a library that it is being linked
with, its value would unexplainably change every time you called a
library function that used that communal variable! The linker does not
issue a warning because the variable was defined only once, in the OBJ
file.
<P>
In addition, a communal data item X in a library cannot be used to
resolve an external reference to X in a module linked with that
library. For example, linking the following:
<P>
<PRE>   C File            Module in Library
   ------            -----------------

      extern int X;           int X;

      void main(void)
      {
         X = 5;
      }

</PRE>would still result in the error:
<P>
<PRE>   L2029 'X': unresolved external

</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf kbinf 3.11 3.17 3.18 3.20, 3.20.01 3.31<BR>
3.40<BR>
KBCategory: kbtool<BR>
KBSubcategory: LibIss<BR>
Keywords            : kb16bitonly<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
