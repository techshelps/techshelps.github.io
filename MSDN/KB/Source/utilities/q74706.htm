

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: NMAKE Does Not Parse Escape Character Correctly </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q74706 ">
<META NAME="KBModify" CONTENT="1995/02/17">
<META NAME="KBCreate" CONTENT="1991/07/28">
<META NAME="Keywords" CONTENT="kbtool kbprb">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  In NMAKE, the caret (^) symbol is used as an escape character for the characters #()$^\{}!@- (which NMAKE uses as control characters). If you create an NMAKE macro that contains one of these symbols, you may, due to context, need to use the caret s...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QA5A,QAEF,QAH4,QAPF,QBB2,QATO,QAWN,QBVV,QBDM,QAOX,QAKE,QDH6,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: NMAKE Does Not Parse Escape Character Correctly</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q74706 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft NMAKE for MS-DOS, versions 1.11, 1.12, 1.13, 1.2, 1.3,
   and 1.4
<LI>Microsoft NMAKE for OS/2, versions 1.11, 1.12, 1.13, and 1.21
<LI>Microsoft NMAKE Utility for Windows NT, version 1.40
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In NMAKE, the caret (^) symbol is used as an escape character for the
characters #()$^\{}!@- (which NMAKE uses as control characters). If
you create an NMAKE macro that contains one of these symbols, you may,
due to context, need to use the caret symbol to indicate that you want
the literal character in the macro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using ^^ or ^$ gives unexpected results. In some cases, the leading
caret is not removed even though it is needed to get a caret or dollar
sign. However, NMAKE might also remove both characters. According to
the Visual C/C++ for MS-DOS, version 1.0, README.WRI file, if you want
to use $ in a command, then you need to use $$ instead of ^$. The
README.WRI file also notes that if you want to use ^ as a literal
character, it is treated as a literal character when used within a
quoted string.
<P>
For example, if you create a macro containing two carets preceded by
another character, such as abc^^abc, NMAKE will not parse out the
first caret, leaving only one caret. Instead, it leaves both carets in
the macro. If, on the other hand, you create a macro containing two
carets preceded only by the equal sign for the macro assignment, such
as ^^abc, NMAKE will parse out both carets leaving only the abc.
<P>
The sample makefiles below illustrate these situations. Each makefile
contains comments showing the expected output and the actual output.
<P>
These sample makefiles all give the expected output with NMAKE 1.5 from
Visual C++ 2.0.
<P>
<P><h3>Sample Makefile #1</h3>
 
<P>
Note: This makefile does work correctly for NMAKE for MS-DOS, versions 1.3
and later.
<P>
<PRE>test=abc^!abc   # note: test=abc!abc works
ALL:
  echo $(test)

</PRE># expected output : echo abc!abc
# resulting output: echo abc^!abc
<P>
<P><h3>Sample Makefile #2</h3>
 
<P>
<PRE>test=abc^$abc   # note: test=abc$$abc works
ALL:
  echo $(test)

</PRE># expected output : echo abc$abc
# resulting output: echo abc^$abc
<P>
<P><h3>Sample Makefile #3</h3>
 
<P>
test=abc^^abc
ALL:
<PRE>  echo $(test)

</PRE># expected output : echo abc^abc
# resulting output: echo abc^^abc
<P>
Since the ^ is treated as a literal character within a quoted string,
you can place the macro definition in a string and then use macro
substitution to remove the quotes.  For example,
<P>
test="abc^abc"
ALL:
<PRE>  @echo $(test:"= )
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.20 1.30 1.40<BR>
KBCategory: kbtool kbprb<BR>
KBSubcategory: NmakeIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
