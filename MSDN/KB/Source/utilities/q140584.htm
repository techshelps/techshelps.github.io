

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Link with the Correct C Run-Time (CRT) Library </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140584">
<META NAME="KBModify" CONTENT="1997/10/07">
<META NAME="KBCreate" CONTENT="1995/12/04">
<META NAME="Keywords" CONTENT="CRTIss">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  There are six types of reusable libraries: Static Single Threaded Library (Debug/Release), Static Multithreaded Library (Debug/Release), and Dynamic Link Library (DLL)(Debug/Release). The DLL is multithread-afe and a single- thread version of the C...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAKR,QBHQ,QAVX,QAOT,QAAP,QAH4,QAH6,QAB4,QAJQ,QDNN,QAR4,QALM,QAH7,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Link with the Correct C Run-Time (CRT) Library</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140584</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>The Microsoft compiler included with:
   - Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are six types of reusable libraries: Static Single Threaded Library
(Debug/Release), Static Multithreaded Library (Debug/Release), and Dynamic
Link Library (DLL)(Debug/Release). The DLL is multithread-afe and a single-
thread version of the CRT library is not provided for DLLs. If the reusable
library or any user of the library is using multiple threads, then the
library needs to be a multithread-safe library type.
<P>
NOTE: Debug libraries and compiler switches /MLd, /MTd, and /MDd are only
available in Visual C++ versions 4.0 and above.
<P>
The following table shows which compiler switch should be used for building
each of the six types of reusable libraries (all DLL types are multithread-
safe). Any project using the reusable library should use the same compiler
switch. When using the /ML(default), /MLd, /MT, /MTd, /MD, or /MDd compiler
switches, the compiler places the default library name (listed under the
Library column) in the object file.
<P>
<PRE>Reusable Library            Switch    Library    Macro(s) Defined
</PRE> 
<PRE>Single Threaded             /ML       LIBC       (none)
Static MultiThread          /MT       LIBCMT     _MT
Dynamic Link (DLL)          /MD       MSVCRT     _MT and _DLL
Debug Single Threaded       /MLd      LIBCD      _DEBUG
Debug Static MultiThread    /MTd      LIBCMTD    _DEBUG and _MT
Debug Dynamic Link (DLL)    /MDd      MSVCRTD    _DEBUG, _MT, and _DLL

</PRE>You can view an object module to determine which switch was used when
it was built by using this command:
<P>
<PRE>   dumpbin /all &lt;object&gt;.obj

</PRE>Look in the section titled RAW DATA #1. In the right-most column, the
default libraries will be listed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A reusable library and all of its users should use the same CRT library
types and therefore the same compiler switch. The macros defined (or not
defined) for each of the compiler switches can be used in the header
file(s) of your reusable library to enforce the proper compiler switch. The
sample code in this article demonstrates how to use these macros.
<P>
If you would like users of the library to be able to choose static or DLL
CRT, you should provide both static and DLL reusable library types.
<P>
If you do choose to mix CRT libraries, remember that you have two separate
copies of the CRT, with separate and distinct states, so you must be
careful about what you try to do across a CRT-boundary. There are many ways
to get into trouble with two CRTs. Here are just a few:

<UL><LI>There are two separate heaps. You cannot allocate (explicitly with new,
   malloc, or so on -- or implicitly with strdup, strstreambuf::str, or so
   on), and then pass the pointer across a CRT-boundary to be freed.

<LI>You cannot pass a FILE* or file handle across a CRT-boundary and expect
   the studio low level io to work.

<LI>You cannot set the locale in one and expect the other's locale to be
   set.
<P>
</UL>Beginning with Visual C++ 4.0, the linker will issue a warning (LNK4098) if
a resulting module attempts to combine more than one copy of the CRT
library. For more information, search the Help file for LNK4098.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following code can be used in the reusable library's header file to
ensure the consistent use of the correct compiler switch:
<P>
<PRE>   // MyReusableStaticSingleThreadReleaseLibrary.h
   #if defined(_MT) || defined(_DEBUG)
       #error The /ML compiler switch is required.
   #endif

   // MyReusableStaticMultithreadReleaseLibrary.h
   #if !defined(_MT) || defined(_DLL) || defined(_DEBUG)
       #error The /MT compiler switch is required.
   #endif

   // MyReusableDynamicLinkReleaseLibrary.h
   #if !defined(_MT) || !defined(_DLL) || defined(_DEBUG)
       #error The /MD compiler switch is required.
   #endif

   // MyReusableStaticSingleThreadDebugLibrary.h
   #if defined(_MT) || !defined(_DEBUG)
       #error The /MLd compiler switch is required.
   #endif

   // MyReusableStaticMultithreadDebugLibrary.h
   #if !defined(_MT) || defined(_DLL) || !defined(_DEBUG)
       #error The /MTd compiler switch is required.
   #endif

   // MyReusableDynamicLinkDebugLibrary.h
   #if !defined(_MT) || !defined(_DLL) || !defined(_DEBUG)
       #error The /MDd compiler switch is required.
   #endif
</PRE> 
<PRE>Keywords          : CRTIss
Version           : WINNT:2.0,2.1,2.2,4.0,5.0;
Platform          : NT WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
