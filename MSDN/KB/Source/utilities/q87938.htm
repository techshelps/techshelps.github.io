

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Assigning Functions to Overlays Using MOVE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q87938 ">
<META NAME="KBModify" CONTENT="1997/07/17">
<META NAME="KBCreate" CONTENT="1992/08/12">
<META NAME="Keywords" CONTENT="kb16bitonly MoveOverlay kbtool">
<META NAME="KBArea" CONTENT="Support; KB; utilities">
<META NAME="Description" CONTENT="  The text below is designed to supplement section 15.2,  How to Create an Overlaid Program  in the Microsoft C/C++  Environment and Tools  manual for version 7.0. Specifically, the article provides additional details about using the FUNCTIONS statem...">
<META NAME="Product" CONTENT="Programming Utilities">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QAB9,QBV8,QBFY,QAUJ,QAH4,QA4Q,QACI,QAVX,QAVW,QBBI,QAPF,QAMA,QAEF,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Assigning Functions to Overlays Using MOVE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q87938 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.30 5.31 5.50 5.60
MS-DOS
kbtool
<P>
 
The information in this article applies to:

<UL><LI>Microsoft LINK for MS-DOS, versions 5.3, 5.31, 5.5, and 5.6
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The text below is designed to supplement section 15.2, "How to Create an
Overlaid Program" in the Microsoft C/C++ "Environment and Tools" manual for
version 7.0. Specifically, the article provides additional details about
using the FUNCTIONS statement in a module-definition (.DEF) file to create
an application that uses the Microsoft Overlaid Virtual Environment (MOVE).
It does not discuss using the SEGMENTS statement to assign code segments to
overlays. For information on the latter process, query in the Microsoft
Knowledge Base on the following words:
<P>
<PRE>   file4.c and overlaid and segments and move and resident and def

</PRE>The article is titled "Assigning Code Segments to Overlays Using
MOVE."
<P>
Consider an application that contains three source files. The functions in
the files are as follows:
<P>
<PRE>   MAIN.C:
           int main(void);

   MOD1.C:
           int __cdecl func11(int);
           int __cdecl func12(int);
           int __cdecl func13(int);

   MOD2.C:
           int __pascal func21(int);
           int __pascal func22(int);

</PRE>The __cdecl declaration indicates a function that uses the C calling and
naming conventions and the __pascal declaration indicates a function that
use the Pascal calling and naming conventions. By default, each function in
a C program is declared with __cdecl and main() must be a __cdecl function.
<P>
To use the FUNCTIONS statement, packaged functions and the medium or large
memory model are required. The following compiler command line satisfies
these requirements:
<P>
<PRE>   cl /c /AM /Gy main.c mod1.c mod2.c

</PRE>The /Gy option instructs the compiler to place all functions into the
comdat_seg1 segment. The segments that the compiler normally creates for a
medium memory model application (named &lt;modulename&gt;_TEXT) are empty, but do
appear in the map file.
<P>
The .DEF file specifies the organization of the overlays. An appropriate
LINK command line is as follows:
<P>
<PRE>   link main mod1 mod2, test.exe, test.map /MAP,, ovl.def

</PRE>If you use the Programmer's WorkBench (PWB) to build your application, add
the .DEF file to the project list.
<P>
As the first example, the following .DEF file places func11 and func21 into
an overlay. LINK puts the functions into a comdat_seg2 segment in overlay 1
(as indicated in the map file). The other functions remain in the
comdat_seg1 segment in the resident portion of the program.
<P>
<P><h3>Sample DEF File #1</h3>
 
<P>
<PRE>   NAME test.exe
   FUNCTIONS:1 _func11 FUNC21

</PRE>Note that the functions names in the .DEF file conform to the calling and
naming convention specified in the source code. The name of each __cdecl
function has an underscore prepended to its name and its case is preserved.
The name of each __fortran and __pascal function is converted to uppercase
letters. In a C++ application, the function names specified in the .DEF
file must be the fully decorated names. To determine the decorated names
the correspond to each function, specify /MAP:FULL on the LINK command
line.
<P>
As a second example, consider the following .DEF file:
<P>
<P><h3>Sample DEF File #2</h3>
 
<P>
<PRE>   NAME test.exe
   FUNCTIONS:1 _func11 FUNC22
   FUNCTIONS:2 _func12

</PRE>Linking the source code with this file creates an overlaid executable file
with the main(), func13(), and func21() functions in the comdat_seg1
segment in the resident portion of the program; func11() and func22() in
the comdat_seg2 segment in overlay one; and func12() in overlay two.
Because the functions are packaged, LINK can put functions from the same
file into different overlays. The order in which the functions appear in
the FUNCTIONS statement determines their order in the comdat segment.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf kbinf visualc 5.30 5.31.009 5.50 5.60<BR>
KBCategory: kbtool<BR>
KBSubcategory: MoveOverlay<BR>
Keywords            : kb16bitonly MoveOverlay kbtool<BR>
Version             : 5.30 5.31 5.50 5.60<BR>
Platform            : MS-DOS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
