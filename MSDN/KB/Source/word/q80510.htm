

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD: Simulating XOR Logic with Field Codes or WordBasic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80510 ">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1992/02/03">
<META NAME="Keywords" CONTENT="kbfield kbmacroexample macword ntword word6 word7 word95 wordnt kbmacro">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article describes how to simulate the XOR logic in Microsoft Word by  using either field codes or the WordBasic macro language.  NOTE: Beginning with Word 97, Visual Basic for Applications includes the XOR logical operator.  MORE INFORMATION  ...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QA7N,QAB9,QA5F,QDL9,QBWQ,QBWO,QBWN,QAY5,QAPN,QBFY,QAL3,QAPF,QAH4,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD: Simulating XOR Logic with Field Codes or WordBasic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80510 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 1.0, 1.1, 1.1a, 2.0, 2.0a,
   2.0a-CD, 2.0b, 2.0c, 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows NT, version 6.0
<LI>Microsoft Word for Windows 95, versions 7.0, 7.0a
<LI>Word for the Macintosh, versions 6.0, 6.0.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to simulate the XOR logic in Microsoft Word by 
using either field codes or the WordBasic macro language.
<P>
NOTE: Beginning with Word 97, Visual Basic for Applications includes the
XOR logical operator.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To reproduce the XOR operation in Word for Windows using a WordBasic
function, use the following formula
<P>
<PRE>   XOR=(Abs(test1 + test2 +... + testn) Mod 2) * - 1

</PRE>for example:
<P>
<PRE>   Sub MAIN
      a =(2 = 2)
      b =(2 = 3)
      c =(2 = 3)
      If XOR(a, b, c) Then
         Print "XOR is True"
      Else
         Print "XOR is False"
      End If
   End Sub

   Function XOR(a, b, c)
      XOR =  (Abs(a + b + c) Mod  2) * - 1
   End Function

</PRE>The following is an explanation of how the function works:

<OL><P><LI>The formula applies the ABS function to the sum of the variables that
   return TRUE. Note: In Word for Windows, TRUE has the numerical value
   of negative one (-1), FALSE equals zero (0).

<P><LI>The MOD statement divides this sum by two (2) and returns the
   remainder, which is one (1) if an odd number of the tests are TRUE,
   and zero (0) if an even number of the tests are TRUE.

<P><LI>The remainder is multiplied by negative one. FALSE remains zero,
   but TRUE becomes negative one (-1) to conform to WordBasic notation.
<P>
</OL>You can create this type of logical structure in Word for Windows by
using field codes. In the following example, T=TRUE and F=FALSE. Note:
To insert the braces, press CTRL+F9.
<P>
<PRE>   {IF {IF x ="T" "T" "F"} = {IF y ="T" "T" "F"} "F" "T"}

</PRE></OL>In the above example, the field on either side of the equal sign (=)
checks to see if the comparison is TRUE. If it is, the results are
TRUE; if not, the result is FALSE. The comparison of the two IF
statements yields TRUE if they are the same and FALSE if they are not.
The following table illustrates the values and the results:
<P>
<PRE>   Statement 1       Statement 2      Results
   -----------       -----------      -------

       T                  T              F
       T                  F              T
       F                  T              T
       F                  F              F

</PRE>You can also create this kind of logical structure in a Word for
Windows macro. In the following example, T=TRUE and F=FALSE. In
WordBasic, the IF statement is combined with the THEN and ELSE
statements. An example would be as follows:
<P>
<PRE>   IF X$="T" THEN Test1$="T" ELSE Test1$="F"
   IF Y$="T" THEN Test2$="T" ELSE Test2$="F"
   IF Test1$=Test2$ THEN
      Results$="F" 
   ELSE
      Results$="T"
   END IF

</PRE>For more information on the If...Endif statement, search for
"WordBasic Programming Language" and "If...ElseIf...Else...End If"
using the Help menu.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft Word for Windows User's Guide," version 2.0, pages 747-762,
774-776
<P>
"Microsoft Excel Function Reference," version 3.0, page 155
<P>
"GW-Basic Interpreter User's Guide," page 60
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: <BR>
Keywords          : kbfield kbmacroexample macword ntword word6 word7 word95 wordnt kbmacro<BR>
Version           : WINDOWS:1.0,1.1,1.1a,2.0,2.0a,2.0a- CD,2.0b,2.0c,6.0,6.0a,6.0c,7.0,7.0a; MACINTOSH:6.0,6.0.1,6.0.1a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
