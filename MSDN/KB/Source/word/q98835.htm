

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using SetProfileString Statement to Set Values in WIN.INI File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q98835 ">
<META NAME="KBModify" CONTENT="1997/07/30">
<META NAME="KBCreate" CONTENT="1993/05/13">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article describes how to use the WordBasic SetProfileString statement in Word for Windows to add to or modify information in the Windows WIN.INI file. This article also describes a limitation of the SetProfileString statement in which you cann...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBUA,QDL9,QBWO,QBWN,QBWQ,QAPN,QAH4,QBFY,QDO7,QAFF,QA0B,QAKE,QAV1,QAV0 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using SetProfileString Statement to Set Values in WIN.INI File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q98835 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 1.0, 1.1, 1.1a, 2.0, 2.0a,
   2.0a-CD, 2.0b, 2.0c, 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows 95, versions 7.0, 7.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to use the WordBasic SetProfileString
statement in Word for Windows to add to or modify information in the
Windows WIN.INI file. This article also describes a limitation of the
SetProfileString statement in which you cannot store a line break
character in the .Value argument.
<P>
Below are macros that demonstrate the use of the SetProfileString
statement to set values in your WIN.INI file.
<P>
<P><h3>Word for Windows, Versions 6.0, 7.0, 7.0a</h3>
 
<P>
In the following macro, the proof path under the [MSAPPS] heading is
changed to C:\WINDOWS\MSAPPS\PROOF.
<P>
<PRE> Sub MAIN
 SetProfileString "MSAPPS", "PROOF", "C:\WINDOWS\MSAPPS\PROOF"
 End Sub

</PRE>In Windows 95 and Windows NT, settings are stored in the registry. You can
still use SetProfileString and GetProfileString$() to set and return
settings from a text file with the name WIN.INI, but neither the system nor
Word uses these settings. To access and change values in the registry from
within WordBasic, you need to use GetPrivateProfileString$() and
SetPrivateProfileString.
<P>
<P><h3>Word for Windows, Versions 6.x</h3>
 
<P>
Word 6.0 for Windows stores most of the Word specific settings in the
WINWORD6.INI file. This file is located in your \Windows directory.
Using the SetPrivateProfileString statement, you can write to the
WINWORD6.INI file.
<P>
<PRE> Sub MAIN
 SetPrivateProfileString "Microsoft Word", "INI-path", \
  "D:\WINWORD", "C:\WINDOWS\WINWORD6.INI"
 End Sub

</PRE>If you are using Word 2.x for Windows, you can use the Microsoft
Windows WritePrivateProfileString command in a WordBasic macro to
write to an .INI file other than the WIN.INI file. For more
information, query on the following words in the Microsoft Knowledge
Base:
<P>
<PRE>   private and text and file and windows and calls

</PRE>WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT
YOUR OWN RISK. Microsoft provides this macro code "as is" without
warranty of any kind, either express or implied, including but not
limited to the implied warranties of merchantability and/or fitness
for a particular purpose.
<P>
<P><h3>SetProfileString Truncates at Line Break Character</h3>
 
<P>
You cannot store a line break character or any text that follows the
line break in the .Value argument of the SetProfileString statement.
If you assign a string to the .Value argument that contains two or
more lines, separated by a line break character, SetProfileString
stores only the portion of the string that precedes the first line
break character.
<P>
<P><h3>Word for Windows, Versions 2.x</h3>
 
<P>
In the following macro, if a DOC-path statement is present in the
[Microsoft Word 2.0] section of your WIN.INI file, the DOC-path will
be changed to C:\WINWORD:
<P>
<PRE> Sub MAIN
 SetProfileString "Microsoft Word 2.0", "DOC-path", "C:\WINWORD"
 End Sub

</PRE><h3>Word for Windows, Version 1.x</h3>
 
<P>
The macro below sets the directory for the WINWORD.INI file to
C:\WINWORD. If an INI-path statement is present in the [Microsoft
Word] section of your WIN.INI file, the INI-path will be changed to
C:\WINWORD.
<P>
<PRE> Sub MAIN
 SetProfileString "Microsoft Word", "INI-path", "C:\WINWORD"
 End Sub

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Word 97</h3>
 
<P>
For information about how to do this in Word 97, while in the Visual Basic
for Applications Editor click the Office Assistant, type
"PrivateProfileString," (without the quotation marks), click Search, and
then click to view "PrivateProfileString Property." To view examples, point
to Example.
<P>
NOTE: If the Assistant is hidden, click the Office Assistant button on the
Standard toolbar. If Microsoft Help is not installed on your computer,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OFFICE/Q120802.htm">Q120802</A></B>
   TITLE     : Office: How to Add/Remove a Single Office
               Program or Component

</PRE><h2>REFERENCES</h2>
 
<P>
"Using WordBasic," by WexTech Systems and Microsoft, page 284
<P>
Kbcategory: kbusage kbmacro
KBSubcategory:

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:  getprofilestring chopped cut off word6<BR>
winword 7.0 word95 word7 winword2 1.0 1.10 1.10a 2.0 2.0a 2.0a-cd<BR>
2.0b 2.0c winword word8 word97 8.0
<P>

Version           : 1.x 2.x 6.0 6.0a 6.0c 7.0 7.<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
