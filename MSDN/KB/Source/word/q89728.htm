

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Disable Control Menu Items Using a WordBasic Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89728 ">
<META NAME="KBModify" CONTENT="1998/02/05">
<META NAME="KBCreate" CONTENT="1992/09/29">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Word for Windows, there is no built-in functionality for disabling commands on the Control menus. This article provides a set of macros you can use to selectively disable some of these commands on the Word for Windows application and d...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVI,QA4Q,QAIH,QDL9,QBWO,QBWN,QAH4,QBXS,QAFF,QA4P,QAB5,QA7O,QAOE,QAMN,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Disable Control Menu Items Using a WordBasic Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89728 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 2.0, 2.0a, 2.0a-CD, 2.0b,
   2.0c, 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Word for Windows, there is no built-in functionality for
disabling commands on the Control menus. This article provides a set
of macros you can use to selectively disable some of these commands on
the Word for Windows application and document Control menus. These
macros give advanced WordBasic macro developers greater customization
options when using the Word for Windows program.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For information on using the Control menu for Microsoft Windows-based
application and document windows, see pages 18-23 of the "Microsoft
Windows User's Guide," version 3.1.
<P>
Word for Windows adds two commands to the application Control menu:
<P>
<PRE>   Switch To    (activates the Windows Task List)
   Run          (runs the Windows Clipboard or Control Panel)

</PRE>Word for Windows also adds two commands to the document Control menu:
<P>
<PRE>   Next Window  (switches to the next document window)
   Split        (splits the document window into 2 panes)

</PRE><h3>WordBasic Control Menu commands</h3>
 
<P>
The following commands disable or enable application or document
Control menu items:
<P>
<PRE>   SysMenu.DisableItem(x)
   SysMenu.EnableItem(x)
   SysMenu.DisableDocItem(x)
   SysMenu.EnableDocItem(x)

</PRE>The variable "x" indicates the menu item, by number. The first menu
item (Restore) is 0 (zero), the second is 1, and so forth. Menu
separator lines are also counted. In the Word for Windows application
Control menu, the Close command is number 6.
<P>
<P><h3>DisableItem(x), EnableItem(x)</h3>
 
<P>
These two commands disable and re-enable items on the Word for Windows
application (or system) Control menu. Disabled items are unavailable,
or dimmed. The following are the only Word for Windows application
Control menu items that you can manipulate using these commands:
<P>
<PRE>   Menu Item Number        Menu Item Name
   --------------------------------------
          6                Close
          8                Switch To
         10                Run

</PRE><h3>DisableDocItem(x), EnableDocItem(x)</h3>
 
<P>
These two commands disable and re-enable items on Word's document
Control menu. Disabled items are still available; in other words, they
are not dimmed. If you choose that menu item, however, no action
occurs. The following are the only document Control menu items that
you can manipulate using these commands:
<P>
<PRE>   Menu Item Number        Menu Item Name
   --------------------------------------
          0                Restore
          5                Close
          7                Next Window
          9                Split

</PRE><h3>Create a Macro Library of These Macro Commands</h3>
 
<P>
By placing these commands in a macro library, they are globally
available for use in other WordBasic macros.

<OL><P><LI>From the Tools menu, choose Macro.

<P><LI>Type "SysMenu" (without the quotation marks) in the Macro Name box
   and choose the Edit button.

<P><LI>In the macro editing window, delete the "Sub MAIN" and "End Sub"
   lines and type the following macro text:
<P>
   Word Version 7.0
   ----------------
<P>
<PRE>   Declare Function FindWindowA Lib "User32"(lpClassName$, lpWindowName As
    Long) As Integer
   Declare Function GetFocus Lib "User32"() As Integer
   Declare Function GetSystemMenu Lib "User32"(hWnd As Integer, bRevert As
    Integer) As Integer
   Declare Function ModifyMenuA Lib "User32"(hMenu As Integer, nPosition As
    Integer, wFlags As Integer, wIDNewItem As Integer, lpString$) As
    Integer
   Declare Function GetMenuItemID Lib "User32"(hMenu As Integer, nPos As
    Integer) As Integer
   Declare Function GetSystemMenu Lib "User32"(hWnd As Integer,  bRevert As
    Integer) As Integer

   Sub Main
    DisableItem("Close", 6)
   End Sub

   Sub DisableItem(item$, item)
    MF_BYPOSITION = 1024
    MF_GRAYED = 1
    hWnd = FindWindowA("OPUSAPP", 0)
    hmenu = getsystemmenu(hwnd, 0)
    hItem = getmenuitemid(hMenu, item)
    y =  ModifyMenuA(hmenu, hitem, MF_BYCOMMAND Or  MF_GRAYED, - 10, item$)
   End Sub

   Word version 6.0
   ----------------

   Declare Function FindWindow Lib "User"(lpClassName$, \
     lpWindowName As Long) As Integer
   Declare Function GetFocus Lib "User"() As Integer
   Declare Function GetSystemMenu Lib "User"(hWnd As Integer, bRevert As \
     Integer) As Integer
   Declare Function ModifyMenu Lib "User"(hMenu As Integer, nPosition As \
     Integer, wFlags As Integer, wIDNewItem As Integer, lpString$) As \
     Integer
   Declare Function GetMenuItemID Lib "User"(hMenu As Integer, nPos As \
     Integer) As Integer
   Declare Function GetSystemMenu Lib "User"(hWnd As Integer,  bRevert As \
     Integer) As Integer

   Sub Main
    DisableItem("Close", 6)
   End Sub

   Sub DisableItem(item$, item)
    MF_BYPOSITION = 1024
    MF_GRAYED = 1
    hWnd = FindWindow("OPUSAPP", 0)
    hmenu = getsystemmenu(hwnd, 0)
    hItem = getmenuitemid(hMenu, item)
    y =  ModifyMenu(hmenu, hitem, MF_BYCOMMAND Or  MF_GRAYED, - 10, item$)
   End Sub

   Word version 2.x
   ----------------

   Declare Function GetFocus Lib "User"() As Integer
   Declare Function GetParent Lib "User"(hWnd As Integer) As Integer
   Declare Function FindWindow Lib "User"(lpClassName$, \
   lpWindowName As Long) As Integer
   Declare Function EnableMenuItem Lib "User"(hMenu As Integer, \
   IDEnableItem As Integer, wEnable As Integer) As Integer
   Declare Function GetSystemMenu Lib "User"(hWnd As Integer, \
   bRevert As Integer) As Integer

   ' Disable a System Menu item
   Sub DisableItem(item)
   MF_BYPOSITION = 1024
   MF_GRAYED = 1
   hWnd = FindWindow("OPUSAPP", 0)
   hMnu = GetSystemMenu(hWnd, 0)
   y = EnableMenuItem(hMnu, item,  MF_BYPOSITION Or MF_GRAYED)
   End Sub

   ' Restore a System Menu item
   Sub EnableItem(item)
   MF_BYPOSITION = 1024
   MF_ENABLED = 0
   hWnd = FindWindow("OPUSAPP", 0)
   hMnu = GetSystemMenu(hWnd, 0)
   y = EnableMenuItem(hMnu, item,  MF_BYPOSITION Or MF_ENABLED)
   End Sub

   ' Disable a Document System Menu item
   Sub DisableDocItem(item)
   MF_BYPOSITION = 1024
   MF_DISABLED = 2
   hWnd = GetFocus
   hWnd = GetParent(hWnd)
   hMnu = GetSystemMenu(hWnd, 0)
   y = EnableMenuItem(hMnu, item,  MF_BYPOSITION Or 2)
   Bye:
   End Sub

   ' Restore a Document System Menu item
   Sub EnableDocItem(item)
   MF_BYPOSITION = 1024
   MF_ENABLED = 0
   hWnd = GetFocus
   hWnd = GetParent(hWnd)
   hMnu = GetSystemMenu(hWnd, 0)
   y = EnableMenuItem(hMnu, item,  MF_BYPOSITION Or MF_ENABLED)
   End Sub

</PRE><P><LI>Press CTRL+F4 to close the macro window. Choose Yes when prompted
   to save changes to SysMenu.
<P>
</OL><h3>Using the SysMenu Macros</h3>
 
<P>
The following macro disables items on the Word for Windows
application, or system Control menu. After you run this macro, open
the Word for Windows application Control menu and notice that the
Close, Switch To and Run commands are unavailable.
<P>
<PRE>   Sub MAIN
   SysMenu.DisableItem(6)   ' disable Close
   SysMenu.DisableItem(8)   ' disable Switch To
   SysMenu.DisableItem(10)  ' disable Run
   End Sub

</PRE></OL>The following macro enables the previously-disabled items on the Word
for Windows application Control menu. After you run this macro, open
the Word for Windows application Control menu and notice that the
commands are once again available.
<P>
<PRE>   Sub MAIN
   SysMenu.EnableItem(6)   ' enable Close
   SysMenu.EnableItem(8)   ' enable Switch To
   SysMenu.EnableItem(10)  ' enable Run
   End Sub

</PRE>The following macro disables the Restore, Close, Next Window and Split
items on the current Word for Windows document Control menu. After you
run this macro, open the document Control menu. The disabled items
appear available, but if you choose them, nothing happens.
<P>
<PRE>   Sub MAIN
   SysMenu.DisableDocItem(0)   ' disable Restore
   SysMenu.DisableDocItem(5)   ' disable Close
   SysMenu.DisableDocItem(7)   ' disable Next Window
   SysMenu.DisableDocItem(9)   ' disable Split
   End Sub

</PRE>The following macro enables the previously-disabled items on the
document Control menu. After you run this macro, open the Word for
Windows document Control menu. If you choose the re-enabled menu
items, the commands function correctly.
<P>
<PRE>   Sub MAIN
   SysMenu.EnableDocItem(0)   ' enable Restore
   SysMenu.EnableDocItem(5)   ' enable Close
   SysMenu.EnableDocItem(7)   ' enable Next Window
   SysMenu.EnableDocItem(9)   ' enable Split
   End Sub

</PRE>WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT
YOUR OWN RISK. Microsoft provides this macro code "as is" without
warranty of any kind, either express or implied, including but not
limited to the implied warranties of merchantability and/or fitness
for a particular purpose.
<P>
Reference(s):
<P>
"Microsoft Word for Windows User's Guide," version 2.0, pages 51, 56
<P>
"Microsoft Windows User's Guide," version 3.1, pages 18-23
<P>
"Microsoft Windows User's Guide," version 3.0, pages 28-29, 32, 60
<P>
"Microsoft Windows Software Development Kit (SDK)"
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage kbmacro kbhowto<BR>
KBSubcategory:<BR>
Additional query words: winword2 6.0 6.0a 6.0c 2.0 2.0a 2.0a-CD<BR>
winword 7.0 word95 word7 word6 2.0b win31 winword api winapi<BR>
Version           : 2.0 2.0a 2.0a-CD 2.0b 6.0 6<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
