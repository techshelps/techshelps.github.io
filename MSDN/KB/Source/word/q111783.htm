

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using DDE to Run a Word for Windows Macro from Access </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111783">
<META NAME="KBModify" CONTENT="1997/08/04">
<META NAME="KBCreate" CONTENT="1994/02/17">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article describes a very simple example of using dynamic data exchange (DDE) to execute a Word for Windows macro from Microsoft Access. The example in this article has very little error checking and assumes a working knowledge of both products...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QA1S,QDN9,QAH4,QDL9,QBWQ,QBWO,QBWN,QBWS,QDO7,QBV8,QATX,QAPF,QAB9,QA50 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using DDE to Run a Word for Windows Macro from Access</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111783</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.x 6.00 6.00a 6.00c 7.00
WINDOWS
kbusage kbmacro
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows versions 1.0, 1.1, 1.1a, 2.0, 2.0a,
   2.0a-CD, 2.0b, 2.0c, 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes a very simple example of using dynamic data exchange
(DDE) to execute a Word for Windows macro from Microsoft Access. The
example in this article has very little error checking and assumes a
working knowledge of both products.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The commands used--DDEInitiate, DDEExecute--are very similar between Word
and Microsoft Access, so the process should be familiar if you have worked
with DDE using Word. One of the challenges of getting this process to work
properly is that the command string for running a macro that is sent to
Word for Windows is syntactically rigid. The syntax for the macro command
in the DDE conversation must be:
<P>
<PRE>   [ToolsMacro .Name = "Macroname", Run]

</PRE>Representing this string in Microsoft Access can look visually confusing
because the quotation marks are used in the command string and also
in the assignment syntax for Microsoft Access. If this were to be written
explicitly it would look like:
<P>
<PRE>   c$="[ToolsMacro .Name="+chr$(34)+"macroname"+chr$(34)+", .Run]"

</PRE>In the example below, this string has been broken up to help explain
how the command line is built. Concatenating these yields the required
syntax for the DDEExecute argument.
<P>
<PRE>   q$ is defined as ASCII character 34, which is the quotation mark.

   mn$ is the name of the macro that is to be run.

   tm$ is the beginning of the ToolsMacro string, and tme$ is the end of
   that string.

</PRE>To create a simple example in Microsoft Access that runs a Word for Windows
macro:

<OL><P><LI>In Microsoft Access create a sample database called DDEtest.

<P><LI>In this database create a new module called DDEExample.

<P><LI>In this module create a new function called runmacro(). The code
   for runmacro is:
<P>
   Function runmacro ()
<P><PRE>    Dim chan As Variant
    On Error GoTo Cantstart:
    Macrochan = DDEInitiate("Winword", "System")
    q$ = Chr$(34)
    mn$ = "Amacro"
    tm$ = "[ToolsMacro .name ="
    tme$ = ", .Run]"
</PRE><P>
<P><PRE>    cmd$ = tm$ + q$ + mn$ + q$ + tme$
</PRE><P>
<P><PRE>    DDEExecute Macrochan, cmd$
    DDETerminate Macrochan
</PRE>   Exit Function
<P>
   Cantstart:
<P><PRE>    MsgBox "Problem with DDEInitiate"
    Resume Next
</PRE>   End Function

<P><LI>Create a Microsoft Access form with a single push button labeled Start
   that has an Onpush property of "=RunMacro()" (without the quotation
   marks).

<P><LI>Create a Word for Windows macro called "Amacro." For example:
<P>
<PRE>   Sub Main
    Filenewdefault
    Insert "This is from Amacro"
   End Sub

</PRE><P><LI>Make sure that Word for Windows is running.

<P><LI>To watch the Microsoft Access macro and Word function, tile the windows
   so that Microsoft Access and Word for Windows are on the screen,
   simultaneously.

<P><LI>Open the form in Microsoft Access and choose the Start button.
<P>
</OL>Kbcategory: kbusage kbmacro
KBSubcategory:

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: winword2 2.00 2.00a 2.00a-CD 2.00b 2.00c 6.00<BR>
word7 word6 winword 7.00 word95<BR>
Version           : 2.x 6.00 6.00a 6.00c 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
