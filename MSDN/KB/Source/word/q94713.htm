

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Macros to Create DDE Connections Between WinWord and Excel </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94713 ">
<META NAME="KBModify" CONTENT="1997/07/30">
<META NAME="KBCreate" CONTENT="1993/01/14">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  This article contains four macros that use dynamic data exchange (DDE) to interact between Microsoft Word for Windows and Microsoft Excel.  Macro 1: Running Excel from Word for Windows Macro 2: Running Word for Windows from Excel Macro 3: Running a...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBVP,QAH4,QDL9,QBWO,QBWN,QBWQ,QBWS,QDO7,QDO5,QACI,QAY2,QA9N,QAZ2,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Macros to Create DDE Connections Between WinWord and Excel</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94713 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 1.0, 1.1, 1.1a, 2.0, 2.0a,
   2.0a-CD, 2.0b, and 2.0c
<LI>Microsoft Excel for Windows, versions 3.0 and 4.0
<LI>Microsoft Windows operating system versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains four macros that use dynamic data exchange (DDE) to
interact between Microsoft Word for Windows and Microsoft Excel.
<P>
Macro 1: Running Excel from Word for Windows
Macro 2: Running Word for Windows from Excel
Macro 3: Running an Excel Macro from Word for Windows
Macro 4: Running a Word for Windows macro from Excel
<P>
Line explanations follow each macro.
<P>
Note: The line numbers at the beginning of each line of the macros are for
reference only and are not part of the macro. Your macro will not run and
error messages will occur if you retain the line numbers.
<P>
WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT YOUR OWN
RISK. Microsoft provides this macro code "as is" without warranty of any
kind, either express or implied, including but not limited to the implied
warranties of merchantability and/or fitness for a particular purpose.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Macro 1: Running Excel from Word for Windows</h3>
 
<P>
This Word macro uses DDE to start Excel, insert data in an Excel
spreadsheet, calculate the information, format the result, and insert it
into a Word document.

<OL><P><LI>Sub MAIN
 2. channel = DDEInitiate("excel", "sheet1")
 3. DDEPoke channel, "R1C1", "12"
 4. DDEPoke channel, "R2C1", "10"
 5. DDEPoke channel, "R3C1", "=A1*A2"
 6. DDEExecute channel, "[format.number(" + Chr$(34) +\
 7.    "$#,##0.0" + Chr$(34) + ")]"
 8. a$ = DDERequest$(channel, "R3C1")
 9. DDETerminate channel
</OL>10. Insert a$
11. End Sub
<P>
Line descriptions:
<P>
<PRE>   2. From Word, open a DDE channel to Sheet1 in Excel.
</PRE></OL>3, 4. Insert values into spreadsheet cells.
<PRE>   5. Insert function into spreadsheet. Excel calculates cell value.
   6. Format cell contents using the Format Number command in Excel.
   7. Assign the calculated and formatted value to a string variable
      in Word for Windows.
   8. Close the connection to Excel.
   9. Insert the string into the Word document.

</PRE><h3>Macro 2: Running Word for Windows from Excel</h3>
 
<P>
This sample Excel macro uses DDE to start Word for Windows, open and
initiate a channel to the AUTOEXEC.BAT file, insert some text and the
creation date, save the file as AUTOEXEC.BAK, and exit Word for Windows.
<P>
A1. =SEND.KEYS("~", TRUE)
A2. =EXEC("c:\winword\winword.exe c:\autoexec.bat", 3)
A3. =INITIATE("winword", "c:\autoexec.bat")
A4. =EXECUTE(A3, "[insertbookmark .name=""test""]")
A5. =EXECUTE(A3, "[insertfield .field = ""createdate \@ mm/dd/yy""]")
A6. Backup created:
A7. =POKE(A3,"test",A6)
A8. =EXECUTE(A3, "[insertpara]")
A9. =EXECUTE(A3, "[filesaveas .name=""c:\autoexec.bak""]")
A10.=EXECUTE(A3, "[fileexit]")
A11.=TERMINATE(A3)
A12.=RETURN()
<P>
Line Descriptions:
<P>
<PRE> A1. Send the ENTER keystroke to the Convert File dialog box in Word.
 A2. Start and maximize Word and open the AUTOEXEC.BAT file.
 A3. Initiate a channel to the AUTOEXEC.BAT file.
 A4. Insert a bookmark in the document.
 A5. Insert the file creation date at current location.
 A6. Text string.
 A7. Insert a text string at the bookmarked location.
 A8. Insert a paragraph mark at the current insertion point location.
 A9. Save a copy of the file as "AUTOEXEC.BAK".
</PRE>A10. Exit Word for Windows.
A11. Terminate channel to Word for Windows.
<P>
<P><h3>Macro 3: Running an Excel Macro from Word for Windows</h3>
 
<P>
This Word macro creates a DDE link from Word for Windows (the client)
to Excel (the server), runs an Excel macro called MACRO1.XLM and then
terminates the connection. Before you run this Word macro, create the
following two-line macro in cells A1 and A2 in Excel:
<P>
A1: Beep()
A2: Return()
<P>
Save this macro as MACRO1.XLM. Excel must be open and MACRO1.XLM must be
the active sheet when you run Macro 3 (if you want the macro to determine
whether Excel is running, use the GetModuleHandle command from the Windows
KERNEL library. For more information on GetModuleHandle, refer to the
Microsoft Windows Software Development Kit (SDK) or page 108 of "Using
WordBasic").

<OL><P><LI>Sub MAIN
</OL>2. channel = DDEInitiate("Excel", "c:\excel\macro1.xlm")
3. DDEExecute channel, "[run(" + Chr$(34) + "Macro1.xlm!R1C1" + \
<PRE>   Chr$(34) + ")]"
</PRE></OL>4. DDETerminate channel
5. End Sub
<P>
Line Descriptions:

<OL><P><LI>Initiate a DDE channel with Excel.
</OL>3. Send the Excel Run command to Excel to execute the macro.
4. Terminate the channel to Excel.
<P>
<P><h3>Macro 4: Running a Word for Windows Macro from Excel</h3>
 
<P>
Before you run this Excel macro, create the following three-line global
macro named "test" in Word for Windows:
<P>
<PRE>Sub MAIN
</PRE></OL>MsgBox "DDE from Excel successful!"
<PRE>End Sub

</PRE>This Excel macro creates a DDE link from Excel (the client) to Word for
Windows (the server), runs a Word for Windows Macro named "test", and then
terminates the connection.
<P>
A1. =REGISTER("KERNEL","GetModuleHandle","IC")
A2. =CALL(A1,"MSWORD")
A3. =IF(A2 = 0)
A4. =EXEC("winword.exe")
A5. =END.IF()
A6. =INITIATE("winword", "system")
A7. =EXECUTE(A6,"[toolsmacro .name=""test"", .run]")
A8. =TERMINATE(A6)
A9. =RETURN()
<P>
Line descriptions:
<P>
A1-A2. Call the GetModuleHandle function to determine if Word for
<PRE>       Windows is running.
</PRE>A3-A5. If the call to GetModuleHandle returns a zero then start Word
<PRE>       for Windows.
</PRE>A6.    Initiate a DDE channel with Word for Windows.
A7.    Run the "test" macro.
A8.    Terminate the DDE channel to Word for Windows.
<P>
Reference(s):
<P>
"Using WordBasic," by WexTech Systems and Microsoft, pages 102-115,
171-172
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbole kbmacro<BR>
KBSubcategory:<BR>
Additional query words:   winword winword2<BR>
1.0 1.10 1.10a 2.0 2.0a 2.0a-CD 2.0b 2.0c<BR>
ole object linking dynamic data exchange embedding example<BR>
Version           : 1.0 1.10 1.10a 2.0 2.0a 2.0a<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
