

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Call the ShellExecute Windows API in a WordBasic Macro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119513">
<META NAME="KBModify" CONTENT="1997/08/05">
<META NAME="KBCreate" CONTENT="1994/08/17">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  You can call the ShellExecute() Windows API function from a WordBasic macro to start another program under Microsoft Windows. Use ShellExecute() instead of Shell (a WordBasic statement) or WinExec() (a Windows API function) to work around the follo...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QBBI,QBQU,QBVP,QAY5,QBWQ,QATX,QBWS,QAUD,QAGQ,QAIJ,QAH4,QAJH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Call the ShellExecute Windows API in a WordBasic Macro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119513</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 2.0, 2.0a, 2.0a-CD, 2.0b, 2.0c,
   6.0, 6.0a, 6.0c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can call the ShellExecute() Windows API function from a WordBasic macro
to start another program under Microsoft Windows. Use ShellExecute()
instead of Shell (a WordBasic statement) or WinExec() (a Windows API
function) to work around the following limitation of the latter commands:

<UL><LI>With Shell and WinExec(), you cannot both start an application and open
   a file in that application. For example, you cannot both start Microsoft
   Excel and open a worksheet.
<P>
</UL>WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT YOUR OWN
RISK. Microsoft provides this macro code "as is" without warranty of any
kind, either express or implied, including but not limited to the implied
warranties of merchantability and/or fitness for a particular purpose.
<P>
Below is a sample WordBasic macro that calls the ShellExecute() Windows API
function. ShellExecute() determines whether Microsoft Excel is already
running; if so, it loads BOOK1.XLS into the current Microsoft Excel
session. If Microsoft Excel is not already running, ShellExecute() starts
Microsoft Excel and loads BOOK1.XLS.
<P>
<PRE>   Declare Function ShellExecute Lib "Shell"(hWnd As Integer, lpszOp
   As String, lpszFile As String, lpszParams As String, lpszDir As
   String, fsShowCmd As Integer) As Integer

   Declare Function FindWindow Lib "User"(lpClassName$, lpWindowName As
   Long) As Integer

   Sub MAIN
   Rem The FindWindow API function returns the Window handle for Word.
   hWnd = FindWindow("OPUSAPP", 0)

   X = ShellExecute(hWnd, "Open", "c:\excel\book1.XLS", "", "", 1)
   End Sub

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The ShellExecute() function opens or prints the specified file. Below is
information about ShellExecute() from pages 901-904 of the Microsoft
Windows Software Development Kit (SDK) "Programmer's Reference, Volume 2:
Functions."
<P>
<PRE>Parameter            Description
</PRE> 
<P>
<PRE>hwnd                 Identifies the parent window.

lpszOp               A string specifying the operation to perform. This
                     string can be "open" or "print".

lpszFile             Points to a string specifying the file to open.

lpszParams           Points to a string specifying parameters passed to the
                     application when the lpszFile parameter specifies an
                     executable file. If lpszFile points to a string
                     specifying a document file, this parameter is NULL.

lpszDir              Points to a string specifying the default directory.

fsShowCmd            Specifies whether the application window is to be
                     shown when the application is opened. This parameter
                     can be one of the following values:

Value          Meaning
</PRE> 
<P>
<PRE>0              Hides the window and passes activation to another window.

6              Minimizes the specified window and activates the top-level
               window in the system's list.

9              Activates and displays a window. If the window is minimized
               or maximized, Windows restores it to its original size and
               position (same as 1).

5              Activates a window and displays it in its current size and
               position.

3              Activates a window and displays it as a maximized window.

2              Activates a window and displays it as an icon.

7              Displays a window as an icon. The window that is currently
               active remains active.

8              Displays a window in its current state. The window that is
               currently active remains active.

4              Displays a window in its most recent size and position. The
               window that is currently active remains active.

1              Activates and displays a window. If the window is minimized
               or maximized, Windows restores it to its original size and
               position (same as 9).

</PRE><h3>Returns</h3>
 
<P>
The return value is the instance handle of the application that was opened
or printed, if the function is successful. (This handle could also be the
handle of a DDE server application.) A return value less than or equal to
32 specifies an error.
<P>
<P><h3>Errors</h3>
 
<P>
The ShellExecute() function returns the value 31 if there is no association
for the specified file type or if there is no association for the specified
action within the file type. The other possible error values are as
follows:
<P>
<PRE>Value          Meaning
</PRE> 
<P>
<PRE> 0             System was out of memory, executable file was corrupt, or
               relocations were invalid.

 2             File was not found.

 3             Path was not found.

 5             Attempt was made to dynamically link to a task, or there was
               a sharing or network-protection error.

 6             Library required separate data segments for each task.

 8             There was insufficient memory to start the application.

10             Windows version was incorrect.

11             Executable file was invalid. Either it was not a Windows
               application or there was an error in the .EXE image.

12             Application was designed for a different operating system.

13             Application was designed for MS-DOS 4.0.

14             Type of executable file was unknown.

15             Attempt was made to load a real-mode application (developed
               for an earlier version of Windows).

16             Attempt was made to load a second instance of an executable
               file containing multiple data segments that were not marked
               read-only.

19             Attempt was made to load a compressed executable file. The
               file must be decompressed before it can be loaded.

20             Dynamic-link library (DLL) file was invalid. One of the DLLs
               required to run this application was corrupt.

21             Application requires Microsoft Windows 32-bit extensions.

</PRE><h3>Comments</h3>
 
<P>
The file specified by the lpszFile parameter can be a document file or an
executable file. If it is a document file, this function opens or prints
it, depending on the value of the lpszOp parameter. If it is an executable
file, this function opens it, even if the string "print" is pointed to by
lpszOp.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Windows SDK "Programmer's Reference, Volume 2: Functions,"
pages 901-904
<P>
Kbcategory: kbusage kbmacro kbhowto
KBSubcategory:

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: winword2 2.0 2.0a 2.0a-CD 2.0b 2.0c 6.0<BR>
word6 6.0a 6.0c<BR>
 operating system environment winapi winword<BR>
Version           : 2.0 2.0a 2.0a-CD 2.0b 2.0c<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
