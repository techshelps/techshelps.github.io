

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiple Line Textboxes In Custom Dialog Boxes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q94264 ">
<META NAME="KBModify" CONTENT="1997/07/30">
<META NAME="KBCreate" CONTENT="1992/12/31">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  Although Word for Windows supports multiple-line edits in input boxes, such as the one produced by the WordBasic InputBox$ command, multiple-line edits are not available in WordBasic custom or user-defined dialog boxes.  The WordBasic TextBox state...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QBS0,QBV4,QAC2,QAHP,QAIH,QAGB,QAGC,QA01,QA5F,QAH4,QATX,QAPN,QAIB,QAFF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Multiple Line Textboxes In Custom Dialog Boxes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q94264 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 1.0, 1.1, 1.1a, 2.0, 2.0a,
   2.0a-CD, 2.0b, and 2.0c
<LI>Microsoft Windows operating system versions 3.0 and 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Although Word for Windows supports multiple-line edits in input boxes,
such as the one produced by the WordBasic InputBox$ command,
multiple-line edits are not available in WordBasic custom or
user-defined dialog boxes.
<P>
The WordBasic TextBox statement creates a text or edit box inside a
user-defined dialog box. You can use the TextBox statement to type
text in a dialog box; however, the TextBox statement is limited to a
single line of text.
<P>
Note: This restriction does not apply to later versions of Word for
Windows.
<P>
Note: This article assumes you have a working knowledge of Microsoft
Visual Basic and the WordBasic macro programming language supplied
with Word for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can use one of the following two methods to prompt for multiple
lines of text.
<P>
WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT
YOUR OWN RISK. Microsoft provides this macro code "as is" without
warranty of any kind, either express or implied, including but not
limited to the implied warranties of merchantability and/or fitness
for a particular purpose.
<P>
<P><h3>Method 1</h3>
 
<P>
In a custom dialog box you can simulate a multiple-line textbox by
creating multiple textboxes positioned immediately above or below one
another. The following custom dialog box definition uses three
separate TextBox statements to prompt for three lines of information:
<P>
<PRE>Sub MAIN
</PRE>Begin Dialog UserDialog 400, 168, "Microsoft Word"
<PRE>   TextBox 126, 28, 252, 18, .TextBox1
   TextBox 126, 53, 252, 18, .TextBox2
   TextBox 126, 78, 252, 18, .TextBox3
   OKButton 270, 106, 88, 21
   CancelButton 270, 133, 88, 21
   Text 43, 30, 48, 13, "Line 1"
   Text 43, 55, 48, 13, "Line 2"
   Text 43, 79, 48, 13, "Line 3"
</PRE>End Dialog
Dim dlg As UserDialog
n = Dialog(dlg)
<PRE>End Sub

</PRE>Note: The WordBasic InputBox$ command and the Word for Windows FILLIN
field accept more than a single line of text.
<P>
<P><h3>Method 2</h3>
 
<P>
Microsoft Visual Basic supports the use of multiple-line textboxes,
including scrollbars and other features. The following method
describes how to create a simple Visual Basic program that contains a
multi-line textbox, an OK button, and a Cancel button. In addition, a
WordBasic macro is provided that shows how to use this application.

<OL><P><LI>Create a new project in Visual Basic with a form that has a
   textbox, a label, and two buttons on it with the following
   properties:
<P>
   Form:
<P><PRE>      Name = multline
      LinkMode = 1 - Source
      LinkTopic = system
</PRE><P>
   Textbox:
<P><PRE>      Name = multline
      Multiline = True
      Scrollbars = 3 - Both
<PRE></PRE>      Text =   (nothing.. or any default text you want in the textbox)

   Button 1:
      Name = btnOK
      Caption = &amp;OK

   Button 2:
      Name = btnCancel
      Caption = &amp;Cancel

   Label:
      Name = status
      Caption = waiting

   Note: Position the label beyond the form borders so that it is not
   visible when you run the application. Word uses this label to
   determine if the OK button was pressed or not. To position the
   label: enlarge the size of the form, move the label into the open
   space, and decrease the size of the form to cover the label.

</PRE><P><LI>Create the following subroutines to handle the events for the form
   items:
<P>
<PRE>   Sub btnOK_Click ()
   status.Caption = "ok"
   End Sub

   Sub btnCancel_Click ()
   status.Caption = "cancel"
   End Sub

   Sub Form_LinkExecute (CmdStr As String, Cancel As Integer)
   If InStr(1, CmdStr, "end") Then
      Cancel = 0
      End
   End If
   End Sub

</PRE><P><LI>Create the executable file by choosing Make EXE File from the File
   menu. Type a name for the program in the File Name box and choose
   the OK button.
<P>
</OL>Below is a WordBasic macro that does the following:

<UL><LI>Runs the Visual Basic application using the Shell command. The Shell
   command below assumes the the Visual Basic application is found on
   your MS-DOS path. You can add a full drive and path specification
   if needed.

<LI>Uses dynamic data exchange (DDE) to obtain the contents of the
   label. The first argument of the DDEInitiate command must be the
   name of the Visual Basic program file. In the sample macro below,
   the filename is "multline".

<LI>Loops until the contents of the label is not in a "waiting" state.

<LI>If the label is set to "OK", uses DDE to request the contents of the
   multiline textbox and then displays the result in a message box.

<LI>Uses a DDEExecute command to exit the Visual Basic application.
<P>
<PRE>Sub MAIN
</PRE></OL>Shell "multline"
chan = DDEInitiate("multline", "system")
status$ = DDERequest$(chan, "status")
<PRE>While status$ = "waiting"           ' wait for a button to be pushed
   status$ = DDERequest$(chan, "status")
</PRE></UL>Wend
Select Case status$
<PRE>   Case "ok"                        ' OK button pushed
      a$ = DDERequest$(chan, "multline")
      DDEExecute chan, "end"        'shutdown multiline form
      MsgBox a$, "Multiline Textbox Contents"
   Case "cancel"                    ' Cancel button pushed
      DDEExecute chan, "end"        'shutdown multiline form
</PRE>End Select
<PRE>End Sub

</PRE><h2>REFERENCES</h2>
 
<P>
"Using WordBasic," by WexTech Systems and Microsoft, pages 236 and 303
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbmacro<BR>
KBSubcategory:<BR>
Additional query words: 1.0 1.10 1.10a  2.0 2.0a winword winword2<BR>
2.0a-CD 2.0b 2.0c TextBox multi line multiple-line user-defined vb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
