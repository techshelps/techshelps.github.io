

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WD: Different Same-Name Macro Runs in Word 6.x than Word 2.x </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111688">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1994/02/15">
<META NAME="Keywords" CONTENT="kbmacroexample macword word6 wordnt kbmacro">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Word 6.x, when you run a macro that you created in Word 2.x, errors may  occur or Call statements may run a same-name macro from the wrong template.  CAUSE =====  Word 6.x follows a different set of rules than Word 2.x does to determine  which t...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QBE7,QBE6,QAH4,QAGI,QDO7,QA36,QBWS,QAY2,QAIF,QAYV,QAUJ,QAPN,QAFF,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>WD: Different Same-Name Macro Runs in Word 6.x than Word 2.x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111688</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, version 6.0, 6.0a
<LI>Word for the Macintosh, versions 6.0, 6.0.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In Word 6.x, when you run a macro that you created in Word 2.x, errors may 
occur or Call statements may run a same-name macro from the wrong template.
<P>
<P><h2>CAUSE</h2>
 
<P>
Word 6.x follows a different set of rules than Word 2.x does to determine 
which template macro to run when two macros have the same name: Word 2.x 
runs the macro from the template attached to the document where the 
insertion point is currently located, and Word 6.x runs the macro from the 
template from which you launched the macro. This difference in resolving 
macro naming conflicts may cause errors when you run Word 2.x macros in 
Word 6.x.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the versions of Microsoft 
Word listed at the beginning of this article. This problem was corrected in 
later versions of Microsoft Word with the addition of a new WordBasic 
command, WW2CallingConvention(). In Word 6.0a and later, you can use 
WW2CallingConvention() to toggle between the Word 2.x and Word 6.x methods 
for resolving macro name conflicts. Refer to the "More Information" section 
below for details about WW2CallingConvention().
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft provides programming examples for illustration only, without 
warranty either expressed or implied, including, but not limited to, the 
implied warranties of merchantability and/or fitness for a particular 
purpose. This article assumes that you are familiar with the programming 
language being demonstrated and the tools used to create and debug 
procedures. Microsoft support engineers can help explain the functionality 
of a particular procedure, but they will not modify these examples to 
provide added functionality or construct procedures to meet your specific 
needs. If you have limited programming experience, you may want to contact 
the Microsoft fee-based consulting line at (800) 936-5200. For more 
information about the support options available from Microsoft, please see 
the following page on the World Wide Web: 
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/supportnet/refguide/">http://www.microsoft.com/supportnet/refguide/</A></B> 

</PRE>In both Word versions 2.x and 6.x, you can call one macro from another
using the ToolsMacro statement or the following Call syntax:
<P>
<PRE>   [Call] MacroName[.SubName] [ArgumentList]

</PRE>In Word 2.x, if there are two macros with the same name, Word runs the
macro from the active template (that is, the template where the insertion
point is located), whereas Word 6.x runs the macro from the template where
the calling macro resides.
<P>
<P><h3>WW2CallingConvention Statement Syntax</h3>
 
<P>
<PRE>   WW2CallingConvention [0, 1]

</PRE>The WW2CallingConvention statement toggles between the Word 6.x and Word
2.x naming-conflict resolution method.
<P>
<PRE>   Value     Explanation
   -----     -----------

     0       Word 6.x behavior (in favor of the calling template)

     1       Word 2.x behavior (in favor of the active template)

   NOTE: The default argument is 1. In other words, if you do not include
   an argument, WW2CallingConvention switches to Word 2.x behavior.

</PRE><h3>WW2CallingConvention() Function Syntax</h3>
 
<P>
<PRE>   WW2CallingConvention()

   Value     Explanation
   -----     -----------

     0       Word 6.x Mode (Word 6.x calling convention is currently
             in effect)

    -1       Word 2.x Mode (Word 2.x calling convention is currently
             in effect)

</PRE><h3>Demonstration: Difference Between Word 2.x and Word 6.x Conventions</h3>
 
<P>
Use the following procedure to demonstrate the difference between the two
WW2CallingConvention settings:

<OL><P><LI>Create the following macro in Normal.dot named "Test1":
<P>
<PRE>      Sub Main
         MsgBox "This is from Normal.dot"
      End Sub

</PRE><P><LI>Create the following macro in Template.dot named "Test1":
<P>
<PRE>      Sub Main
         MsgBox "This is from Template.dot"
      End Sub

</PRE><P><LI>Create the following macro in Normal.dot named "LikeWord2":
<P>
<PRE>      Sub Main
         WW2CallingConvention 1
         FileNew .Template = "Template.dot"
         Call Test1
      End Sub

</PRE><P><LI>Create the following macro in Normal.dot named "LikeWord6":
<P>
<PRE>      Sub Main
         WW2CallingConvention 0
         FileNew .Template = "Template.dot"
         Call Test1
      End Sub

</PRE><P><LI>Run the "LikeWord2" macro.

<P><LI>Run the "LikeWord6" macro.
<P>
</OL>To obtain Word 6.0c, call the Microsoft Order Desk at (800) 360-7561 and
request the Word 6.0c update. If you are outside the United States, contact
the Microsoft subsidiary for your area. If you are outside the United
States, contact your local subsidiary. To locate your subsidiary, see the
Microsoft World Wide Offices Web site at:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/worldwide/default.htm">http://www.microsoft.com/worldwide/default.htm</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: hierarchy wrong precedence takes first second<BR>
instead context ip custsales<BR>
Keywords          : kbmacroexample macword word6 wordnt kbmacro<BR>
Version           : WINDOWS:6.0,6.0a,6.0c; MACINTOSH:6.0,6.0.1,6.0.1a<BR>
Platform          : MACINTOSH WINDOWS<BR>
Issue type        : kbprb<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
