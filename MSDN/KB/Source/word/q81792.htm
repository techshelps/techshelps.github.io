

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Windows Calls to Write to a Private Text File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q81792 ">
<META NAME="KBModify" CONTENT="1997/07/30">
<META NAME="KBCreate" CONTENT="1992/03/17">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Microsoft Word for Windows version 2.x, you can use the Microsoft Windows WritePrivateProfileString call within a WordBasic macro to write to an .INI file other than the WIN.INI file.  The SetPrivateProfileString command was added to Word versio...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QDL9,QBWO,QBWN,QATX,QBRZ,QAH4,QBWQ,QAY5,QAMB,QBBI,QAB9,QAGI,QBV8,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using Windows Calls to Write to a Private Text File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q81792 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 2.0, 2.0a, 2.0a-CD, 2.0b,
   2.0c, 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows 95, versions 7.0, 7.0a
<LI>Microsoft Word for Windows NT, verison 6.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft Word for Windows version 2.x, you can use the Microsoft
Windows WritePrivateProfileString call within a WordBasic macro to
write to an .INI file other than the WIN.INI file.
<P>
The SetPrivateProfileString command was added to Word version 6.0.
Use SetPrivateProfileString to define or redefine a setting in a
private settings file. A settings file is a text file like WIN.INI
that your macros can use for storing and retrieving settings.
<P>
<P><h2>Word for Windows 6.0, 7.0</h2>
 
<P>
WARNING: ANY USE BY YOU OF THE MACRO CODE PROVIDED IN THIS ARTICLE IS AT
YOUR OWN RISK. Microsoft provides this macro code "as is" without warranty
of any kind, either express or implied, including but not limited to the
implied warranties of merchantability and/or fitness for a particular
purpose.
<P>
The following is an example for SetPrivateProfileString.
<P>
<PRE>Sub MAIN
 SetPrivateProfileString "Section", "Printer", "Text to Add",
 "C:\winword\text.ini"
End Sub

</PRE>The above macro writes out the following information to the TEXT.INI file
in the C:\WINWORD directory:
<P>
<PRE>   [Section]
   Printer=Text to Add

</PRE>The SetPrivateProfileString function copies a character string into
the specified section of the specified initialization file. The return
value is TRUE (1) if the function is successful or FALSE (0) if an
error occurs.
<P>
<P><h2>Word for Windows 2.x</h2>
 
<P>
Using Windows calls to read and write to a private text file is an
alternative to the following standard WordBasic file input/output
statements and functions:
<P>
<PRE>   Close          Open...For...As
   Eof()      Print
   Input      Read
   Input$()       Seek
   Lof()      Write

</PRE>According to the Microsoft Windows Software Development Kit
documentation, the WritePrivateProfileString function has the
following parameters:
<P>
<PRE>   BOOL WritePrivateProfileString(lpszSectionName, lpszKeyName,
   lpszString, lpszFileName)

   LPCSTR lpszSectionName;  section name
   LPCSTR lpszKeyName;      keyname
   LPCSTR lpszString;       string to add
   LPCSTR lpszFileName;     initialization file name

   [section name]
   keyname=string to add

</PRE>The following WordBasic macro demonstrates the use of the Windows
WritePrivateProfileString function:
<P>
<PRE>   Declare Function WritePrivateProfileString Lib \
   "kernel"(lpApplicationName$, lpKeyName$, lpString$, lpFileName$)\
   As Integer

   Sub MAIN
   a = WritePrivateProfileString("Section", "Printer", \
   "Text to Add", "C:\WINWORD\TEXT.INI")
   End Sub

</PRE>The above WordBasic macro writes out the following information to the
TEXT.INI file in the C:\WINWORD directory:
<P>
<PRE>   [Section]
   Printer=Text to Add

</PRE>The WritePrivateProfileString function copies a character string into
the specified section of the specified initialization file. The return
value is TRUE (1) if the function is successful or FALSE (0) if an
error occurs.
<P>
If the FileName parameter does not contain a fully-qualified path for
the file, this function searches the Windows directory for the file.
If the file does not exist, this function creates the file in the
WINDOWS directory. If FileName parameter contains a fully-qualified
path and the file does not exist, this function creates the file. The
specified directory must already exist.
<P>
Note: To add a string to the WIN.INI file use the WordBasic
"SetProfileString" function.
<P>
For information about how to do this in Word 97, please see the following
article(s) in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q160132.htm">Q160132</A></B>
   TITLE     : Sample VB Code to Set, Retrieve Ini, Registry Settings

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Windows Software Development Kit, Vol. 1, page 4-462 through
page 4-464
<P>
Kbcategory: kbusage kbmacro
KBSubcategory:

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: GetPrivateProfileString 2.0 2.0a winword2<BR>
word7 word6 winword 7.0 word95 ntword wordnt wordnt word95<BR>
Version           : 2.x 6.0 6.0a 6.0c 7.0 7.0a<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
