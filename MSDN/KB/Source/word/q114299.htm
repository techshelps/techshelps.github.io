

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Password-Style Macro Dialog Text Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114299">
<META NAME="KBModify" CONTENT="1997/08/04">
<META NAME="KBCreate" CONTENT="1994/04/28">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; word, convert, crossnet, odbc, winprint, setup">
<META NAME="Description" CONTENT="  In Word for Windows, there is no intrinsic setting for a password-style edit control. However, you can generate code to perform this function using the existing edit control. To create a dialog that prompts for a password, use SendMessage (Windows ...">
<META NAME="Product" CONTENT="Word">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHP,QAGX,QBV4,QAY5,QAIH,QBT6,QA01,QAWK,QA4Q,QAH4,QDL9,QBWO,QBWN,QBV8,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Creating a Password-Style Macro Dialog Text Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 4, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114299</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
6.00 6.00a 6.00c 7.00
WINDOWS
kbusage kbmacro
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Word for Windows, versions 6.0, 6.0a, 6.0c
<LI>Microsoft Word for Windows 95, version 7.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Word for Windows, there is no intrinsic setting for a password-style
edit control. However, you can generate code to perform this function using
the existing edit control. To create a dialog that prompts for a password,
use SendMessage (Windows API function call) with the constant of
EM_SETPASSWORDCHAR.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example demonstrates how to design a text box that will
accept a user's password as input. It displays an asterisk (*) for each
character entered.
<P>
Use the SendMessage API function call to create this dialog. After you set
the focus to the desired edit control, you must send a message to the
window's message queue that will reset the displayed character for the
control. The argument EM_SETPASSWORDCHAR, as the second parameter to
SendMessage, sets the desired text character to display based on the value
specified by the third argument.
<P>
The SendMessage function requires the following parameters for setting the
password Character
<P>
<PRE>   SendMessage Lib "User"(hWnd As Integer, wMsg As Integer, wParam As
   Integer, lParam As String) As Long

</PRE>where:
<P>
<PRE>   hWnd    Specifies the handle to the edit control.

   wMsg    Specifies the window's message.

   wParam  Specifies the password character to display.

   lParam  Is not used.

</PRE><h3>Example</h3>
 
<P>
WARNING: ANY USE BY YOU OF THE CODE PROVIDED IN THIS ARTICLE IS AT YOUR OWN
RISK. Microsoft provides this macro code "as is" without warranty of any
kind, either express or implied, including but not limited to the implied
warranties of merchantability and/or fitness for a particular purpose.
<P>
<P><h3>Word 7.0</h3>
 
<P>
<PRE>Declare Function SendMessageA Lib "User32"(hWnd As Long, wMsg As Integer,
</PRE>wParam As Integer, lParam As String) As Long
<PRE>Declare Function GetFocus Lib "User32"() As Long
</PRE>Dim Shared WM_USER, PasChar, EM_SETPASSWORDCHAR
<PRE>Sub MAIN
 WM_USER = 1024
 EM_SETPASSWORDCHAR = 204
 PasChar = Asc("*")
 Begin Dialog UserDialog 181, 78, "Password", .dlgfun
  OKButton 22, 6, 140, 21
  PushButton 22, 30, 140, 21, "Enter Password", .Push1
  TextBox 22, 54, 160, 18, .TextBox1
 End Dialog
 Dim dlg As UserDialog
 x = Dialog(dlg)
End Sub
</PRE>Function dlgfun(id$, action, wValue)
<PRE> Select Case action
  Case 1
   DlgVisible "TextBox1", 0
  Case 2
   If id$ = "Push1" Then
    DlgVisible "TextBox1", 1
    DlgFocus "TextBox1"
    hWnd = GetFocus
    retVal = SendMessageA(hWnd, EM_SETPASSWORDCHAR, PasChar, "")
    dlgFun = 1
   End If
   If id$ = "OK" And Len(DlgText$("TextBox1")) &gt; 0 Then
    MsgBox     "Your Password is:" + Chr$(10) + DlgText$("TextBox1")
   End If
  Case 3
  Case 4
  Case 5
  Case 6
  Case Else
 End Select
</PRE>End Function
<P>
<P><h3>Word 6.0</h3>
 
<PRE>Declare Function SendMessage Lib "User"(hWnd As Integer, wMsg As
</PRE>Integer, wParam As Integer, lParam As String) As Long
<PRE>Declare Function GetFocus Lib "User"() As Integer
</PRE>Dim Shared WM_USER, PasChar, EM_SETPASSWORDCHAR
<PRE>Sub MAIN
 WM_USER = 1024
 EM_SETPASSWORDCHAR = WM_USER + 28
 PasChar = Asc("*")
 Begin Dialog UserDialog 181, 78, "Password", .dlgfun
  OKButton 22, 6, 140, 21
  PushButton 22, 30, 140, 21, "Enter Password", .Push1
  TextBox 22, 54, 160, 18, .TextBox1
 End Dialog
 Dim dlg As UserDialog
 x = Dialog(dlg)
End Sub
</PRE>Function dlgfun(id$, action, wValue)
<PRE> Select Case action
  Case 1
   DlgVisible "TextBox1", 0
  Case 2
   If id$ = "Push1" Then
    DlgVisible "TextBox1", 1
    DlgFocus "TextBox1"
    hWnd = GetFocus
    retVal = SendMessage(hWnd, EM_SETPASSWORDCHAR, PasChar, "")
    dlgFun = 1
   End If
   If id$ = "OK" And Len(DlgText$("TextBox1")) &gt; 0 Then
    MsgBox     "Your Password is:" + Chr$(10) + DlgText$("TextBox1")
   End If
  Case 3
  Case 4
  Case 5
  Case 6
  Case Else
 End Select
</PRE>End Function
<P>
<P><h2>REFERENCES</h2>
 
<P>
"Microsoft Software Development Kit (SDK) for Microsoft Windows Operating
System Version 3.1"
<P>
Kbcategory: kbusage kbmacro
KBSubcategory:

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 6.00 6.00a winword wordbasic word6 word7<BR>
6.00c 7.00 word95 masked api macro asterisk<BR>
Version           : 6.00 6.00a 6.00c 7.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 4, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
