

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OL97: How to Update Existing Items to Use a New Custom Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170301">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1997/06/18">
<META NAME="Keywords" CONTENT="kbcode">
<META NAME="KBArea" CONTENT="Support; KB; outlook, exchange, office, officevba, vbapp, setup">
<META NAME="Description" CONTENT="  This article describes how you can update items in a Microsoft Outlook 97 folder so they use a custom form instead of the standard Outlook form.  MORE INFORMATION  There are several situations in Outlook 97 where you might want to change the form t...">
<META NAME="Product" CONTENT="Outlook">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAYC,QAEV,QBVO,QDNQ,QAFI,QBJZ,QBWS,QABO,QDMZ,QBUP,QAIF,QAUR,QABA,QA7O P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OL97: How to Update Existing Items to Use a New Custom Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170301</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Outlook 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how you can update items in a Microsoft Outlook 97
folder so they use a custom form instead of the standard Outlook form.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are several situations in Outlook 97 where you might want to change
the form that is used for all the items in a folder. For example:

<UL><LI>You use the default Outlook form to enter 10 contacts into your
   contacts folder. You then create a special custom form for contacts
   and enter 10 additional contacts. You want the first 10 contacts, when
   opened, to use the new custom form.

<LI>You create a custom form for contacts and enter 10 contacts using the
   custom form. You then import 100 contacts from a text file. The 100
   imported contacts use the default form instead of the custom form.

<LI>You have a public folder with 1000 posted items based on the default
   post form. You then create a custom form that shows the items in a way
   that is important to your work. You want to apply the new form to the
   1000 existing items.
<P>
</UL>A property of the item called "message class" determines what form the item
uses. You cannot change the message class of an item manually. However, you
can write VBScript or Automation code to change the message class for all
items in a folder.
<P>
When you create and publish a custom form, the form is assigned a message
class. This message class determines which form is associated with an item.
The format of the name is usually "IPM.&lt;FolderType&gt;.&lt;FormName&gt;", where
&lt;FolderType&gt; is the type of folder (Contact, Task, and such.) and
&lt;FormName&gt; is the name of the form. For example, if you create a new form
named Revised and publish it to your contact folder, the message class is
IPM.Contact.Revised.
<P>
The following table lists the various names used for Message Classes:
<P>
<PRE>   Item           Default folder  Default Message Class
   -------------  --------------  ---------------------
   Contact        Contacts        IPM.Contact
   Task           Tasks           IPM.Task
   Appointment    Calendar        IPM.Appointment
   Note           Notes           IPM.StickyNote
   Journal Entry  Journal         IPM.Activity
   Mail           Inbox           IPM.Note

</PRE>To see the message class for an existing item, add the message class field
as one of the columns in the current view. Follow these steps to add the
message class to your view:

<OL><P><LI>On the View menu, click Field Chooser.

<P><LI>In the Field Chooser list, click to select All Contact Fields.

<P><LI>Drag the Message Class field to the view column header to add the
   field as a column.
<P>
</OL>The message class in this view is read-only; you cannot type in a different
message class to change the form manually.
<P>
Changing the Message Class field of existing items requires that you use
Visual Basic Scripting Edition (VBScript) code within an Outlook form, or
Visual Basic for Applications code from another program to automate Outlook
and change the Message Class fields.
<P>
The following are two methods of changing Message Class fields:
<P>
<P><h3>METHOD 1</h3>
 
<P>
Download Omsgclas.exe, which contains a Word 97 document with a macro
utility that displays a dialog box with options for changing Outlook
Message Classes. The macro runs automatically when you open the document.
<P>
For more information on obtaining the Omsgclas.exe file, including a link
to the file, please see the following articlesin the Microsoft Knowledge
Base:
<P>
<PRE>   Article-ID: <B><A HREF="../OUTLOOK/Q169431.htm">Q169431</A></B>
   Title     : OL97: Word 97 Document to Change Outlook Folder Message
               Class

</PRE></OL><h3>METHOD 2</h3>
 
<P>
Microsoft provides programming examples for illustration only, without
warranty either expressed or implied, including, but not limited to, the
implied warranties of merchantability and/or fitness for a particular
purpose. This article assumes that you are familiar with the programming
language being demonstrated and the tools used to create and debug
procedures. Microsoft support engineers can help explain the functionality
of a particular procedure, but they will not modify these examples to
provide added functionality or construct procedures to meet your specific
needs. If you have limited programming experience, you may want to contact
the Microsoft fee-based consulting line at (800) 936-5200. For more
information about the support options available from Microsoft, please see
the following page on the World Wide Web:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/support/supportnet/refguide/default.asp">http://www.microsoft.com/support/supportnet/refguide/default.asp</A></B>

</PRE>Follow the steps below to create and run a VBScript routine that will
change all the items in a folder to a specified form. This example assumes
that you have published a new form called MyNewForm in the current folder.
If you use a different title for your form, modify the form title used in
the third line of code in the section "Enter the VBScript Code."

<UL><LI>Create a new item to store the VBScript code
<LI>Enter the VBScript code
<LI>Run the VBScript code
<P>
</UL><h3>Create a New Item to Store the VBScript Code</h3>
 

<OL><P><LI>Open the folder that contains the items you wish to update.

<P><LI>On the File menu, point to New and click the appropriate item for
   example, if you want to create a new item in the Contacts folder, click
   Contact. You can later move the item to a different folder if you do not
   wish to keep this item in this folder, but the item must temporarily be
   in the folder in order for the VBScript code to function correctly.

<P><LI>On the Tools menu, click Design Outlook Form to enter the form design
   mode.
<P>
</OL><h3>Enter the VBScript Code</h3>
 

<OL><P><LI>On the Form menu, click View Code.

<P><LI>In the Script Editor, type the following code. You do not
   need to enter the lines that begin with an apostrophe, since these
   lines are comments that are ignored when executed.
<P>
<PRE>   Sub Item_Open
   ' Change the following line to your new Message Class
   NewMC = "IPM.Contact.MyNewForm"
   ' Set cf to the current folder
   Set CurFolder = Application.ActiveExplorer.CurrentFolder
   ' Loop through all of the items in the folder
   For I = 1 to CurFolder.Items.Count
      Set CurItem = CurFolder.Items.Item(I)
      ' Test to see if the Message Class needs to be changed
      If CurItem.MessageClass &lt;&gt; NewMC Then
         ' Change the Message Class
         CurItem.MessageClass = NewMC
         ' Save the changed item
         CurItem.Save
      End If
   Next
   MsgBox "Done."
   End Sub

</PRE><P><LI>On the Script Editor's File menu, click Close.

<P><LI>On the Tools menu, click Design Outlook Form to exit the form
   design mode.

<P><LI>On the item's toolbar, click Save and Close to save the item in the
   current folder. If this is an item without a "Save and Close" button,
   click the X in the upper-right corner of the item's window and then
   click Yes when asked to save changes.
<P>
</OL><h3>Run the VBScript Code</h3>
 

<OL><P><LI>To run the VBScript code, re-open the item. The code will run
   automatically because it was entered into an Item_Open event
   procedure. If you receive a macro warning, click Enable Macros.

<P><LI>Wait while the code changes the Message Class for all of the items in
   this folder. Depending on the number of items, this may take several
   minutes. When the code finishes, you should receive a message that
   says, Done.
<P>
</OL>If you wish to edit the VBScript code later, hold down the SHIFT key when
you open the item. This prevents the VBScript code from executing and you
can go into design mode and make changes to the VBScript code.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about creating solutions with Microsoft Outlook 97,
please see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   Article-ID: <B><A HREF="../vbapps/Q166368.htm">Q166368</A></B>
   Title     : OL97: How to Get Help Programming with Outlook

   Article-ID: <B><A HREF="../vbapps/Q170783.htm">Q170783</A></B>
   Title     : OL97: Q&amp;A: Questions about Customizing or
               Programming Outlook
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OutSol OutSol97
<P>

Keywords          : kbcode<BR>
Version           : 97<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
