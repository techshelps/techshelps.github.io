

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Result Processing for SQL Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165951">
<META NAME="KBModify" CONTENT="1997/09/15">
<META NAME="KBCreate" CONTENT="1997/03/27">
<META NAME="Keywords" CONTENT="SSrvProg kbprg kbusage">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  When using Microsoft DB-Library, VBSQL (VBX and OCX), or ODBC to access SQL Server, it is critical that all result sets are completely processed in a timely manner. The result sets need to be processed to avoid problems with subsequent SQL Server q...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAL3,QAGX,QAGI,QBXS,QA5V,QA9E,QAB4,QAAP,QBVV,QAY2,QAFV,QAKP,QAUD,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Result Processing for SQL Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165951</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server Programmer's Toolkit, versions 4.2, 6.0, and 6.5
<LI>Microsoft Open Database Connectivity, versions 2.5 and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When using Microsoft DB-Library, VBSQL (VBX and OCX), or ODBC to access SQL
Server, it is critical that all result sets are completely processed in a
timely manner. The result sets need to be processed to avoid problems with
subsequent SQL Server queries and to avoid concurrency issues with SQL
Server resources.
<P>
In most cases the return code from dbsqlok or dbsqlexec should be ignored.
If you send the following batch:
<P>
<PRE>   insert into tblTest values(1)
   select @@VERSION

</PRE>and the insert statement fails due to a duplicate key, a Sev 14 error is
generated but the batch continues. THe dbsqlok and dbsqlexec calls only
check the success of the first command. If you do not call dbresults you
will not process the select statement results and can get result pending
errors.
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following are the most common problems your application may encounter
if result sets are not handled immediately and completely:

<UL><LI>If all result sets are not processed completely and you attempt to send
   another query to SQL Server using the same connection, you will receive
   the following DB-Library error:
<P>
<P><PRE>      10038 - Attempt to initiate a new SQL Server operation with results
      pending.
</PRE><P>
   DB-Library prevents you from sending additional queries if there are
   results from a previous query that need to be handled. For more
   information, see the following article in the Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../SQLSERVER/Q117143.htm">Q117143</A></B>
<PRE></PRE>      TITLE     : When and How to Use dbcancel() or sqlcancel()

</PRE><LI>If a query is issued to SQL Server and the results are not handled
   immediately, you may be holding locks and reducing concurrency on your
   server.
<P>
   For example, suppose you issue a query that requires rows from two pages
   to populate your result set. SQL Server will parse, compile, and run the
   query. This means that shared locks are placed on the two pages that
   contain the rows needed to satisfy your query. Further, suppose that not
   all rows fit onto one SQL Server TDS packet (the method by which the
   server communicates with the client). TDS packets are filled and sent to
   the client. If all rows from the first page fit on the TDS packet, SQL
   Server releases the shared lock on that page, but leaves a shared lock
   on the second page. SQL Server then waits for the client to request more
   data (this is done using dbnextrow/dbresults, SQLNextRow/SQLResults,
   FetchLast/FetchFirst, and so on).
<P>
   This means that the shared lock is held until the client requests the
   rest of the data. Other processes requesting data from the second page
   may be blocked. For more information, see the following article in the
   Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../SQLSERVER/Q162361.htm">Q162361</A></B>
<PRE></PRE>      TITLE     : Understanding and Resolving SQL Server Blocking Problems

</PRE></UL>Below is an example of how to correctly handle all result sets. This is a
C/C++ DB-Library code fragment. The same concept should be applied to VBSQL
and ODBC result handling.
<P>
<PRE>   BOOL bMoreResults = TRUE;
   BOOL bMoreRows = TRUE;
   RETCODE dbRC = SUCCEED;

   //
   // send query

   .
   .
   .

   //
   // process *all* results

   bMoreResults = TRUE

 while(bMoreResults)
   {
      switch(dbRC = dbresults(pdbproc))
      {
      case SUCCEED:

        bMoreRows = TRUE;

        while(bMoreRows)
        {
          switch(dbRC = dbnextrow(pdbproc))
          {
            case REG_ROW:
              // handle regular row
              break;

            case NO_MORE_ROWS:
              bMoreRows = FALSE;  // all rows in this result set handled
              break;

            case BUF_FULL:
              // handle full buffer when using row buffering
              break;

            case FAIL:
              // any error processing desired
              bMoreRows = FALSE;
              break;

            default:
              // handle compute row
              break;
          }
        }

        break;

      case NO_MORE_RESULTS:
        bMoreResults = FALSE;  // all result sets handled
        break;

      case FAIL:
        // any error processing desired
        // The current command has returned an error
        // could be a non fatal error
        bMoreResults = TRUE;
        break;

      case NO_MORE_RPC_RESULTS:
        // extract stored procedure return information
        break;

      default:
        bMoreResults = FALSE;  // unknown
        break;
      }
   } // while(bMoreResults &amp;&amp; FALSE == DBDEAD(pdbproc))
</PRE> 
<PRE>Keywords          : SSrvProg kbprg kbusage
Version           : 4.21a 6.0 6.5
Platform          : WINDOWS
Issue type        : kbhowto
Solution Type     : Info_Provided</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
