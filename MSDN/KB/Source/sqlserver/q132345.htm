

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: EXECUTE Command w/ a Local Variable Can Cause Thread AV </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132345">
<META NAME="KBModify" CONTENT="1997/04/30">
<META NAME="KBCreate" CONTENT="1995/07/06">
<META NAME="Keywords" CONTENT="kbbug6.00 kbfix6.00.sp1 kbother SSrvWinNT">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="BUG# NT: 10191 (6.00)   Invalid syntax when you build an EXECUTE statement from a local variable can cause a thread access violation (AV).  The access violation can be generated when Microsoft SQL Server version 6.0 attempts to resolve a stored proce...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAB9,QAYL,QAI5,QAR4,QBW7,QBV8,QAUQ,QAPN,QAAP,QBWG,QA2Q,QAY2,QAFY,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: EXECUTE Command w/ a Local Variable Can Cause Thread AV</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132345</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.0
</UL> 
BUG# NT: 10191 (6.00)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Invalid syntax when you build an EXECUTE statement from a local
variable can cause a thread access violation (AV).
<P>
The access violation can be generated when Microsoft SQL Server version 6.0
attempts to resolve a stored procedure name that was built in a declared
variable. SQL Server generates a thread access violation and aborts the
connection.
<P>
<P><h2>CAUSE</h2>
 
<P>
The error occurs when the EXECUTE statement treats an oversized buffer
(more then 30 characters) as a stored procedure name instead of as a
specific Transact-SQL command due to the use of invalid syntax for the
EXECUTE statement itself.
<P>
For example:
<P>
<PRE>   use pubs
   go

   declare @strCommand  char(128)

   select @strCommand = 'select * from authors'

   execute @strCommand
   go

</PRE>The behavior can be altered by changing the variable declarations.
<P>
<PRE>DECLARATION      BEHAVIOR
-----------      ---------

varchar(xxx)     Successful completion of command, or appropriate error
                 returned:
                 'Unable to find stored procedure 'select * from authors'

char(30)         Successful completion of command, or appropriate error
                 returned:
                 'Unable to find stored procedure 'select * from authors'

char(128)        Thread access violation.

</PRE>The behavior does not change if you use a valid stored procedure name, such
as sp_who; char(128)continues to cause an access violation, and char(30)
continues to execute successfully. This is because char(30) is a valid
length for an object identifier.
<P>
<P><h2>WORKAROUND</h2>
 

<UL><LI>Ensure the syntax of the EXECUTE command is correct. If the command you
   are attempting to execute is not a stored procedure, place parenthesis
   around it. See "SQL Server Books Online" for the documented syntax of
   the EXECUTE command. Other commands may include local variables larger
   than char(30).

<LI>Use char(30) when you execute a stored procedure to guarantee object
   identifier length.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server
version 6.0. This problem was corrected in Service Pack 1 for SQL Server
version 6.0. For more information, contact your primary support provider.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sql6 Windows NT<BR>
Keywords            : kbbug6.00 kbfix6.00.sp1 kbother SSrvWinNT<BR>
Version             : 6.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kberrmsg<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
