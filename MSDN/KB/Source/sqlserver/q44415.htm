

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Timestamps and Their Uses </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q44415 ">
<META NAME="KBModify" CONTENT="1997/03/12">
<META NAME="KBCreate" CONTENT="1989/05/13">
<META NAME="Keywords" CONTENT="kbnetwork SSrvGen">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  In Microsoft SQL Server, the timestamp is a unique 6-byte integer that comes from a single source per database, and is automatically incremented whenever anything is changed within that database. Most database objects have the timestamp embedded in...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAXB,QBD2,QAC1,QABM,QA5V,QAZV,QBVV,QAKD,QAA5,QAGU,QAPN,QAJQ,QDIX,QA26,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Timestamps and Their Uses</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q44415 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server for OS/2 version 4.2
  - Microsoft SQL Server version 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Microsoft SQL Server, the timestamp is a unique 6-byte integer that
comes from a single source per database, and is automatically incremented
whenever anything is changed within that database. Most database
objects have the timestamp embedded in them by default; rows in tables
do not.
<P>
Timestamps can be added to tables by including a column with
the datatype "timestamp." Timestamps in rows and during internal
manipulation are 8-byte variable-length binary fields that contain
the 6-byte timestamp value, which was current when the row was last
inserted or updated. When a row is updated, the timestamp in the row
will appear to be incremented by more than one because several other
objects are implicitly updated during the row update (page timestamp,
log timestamp, related index timestamps, and so forth).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Initial Value</h3>
 
<P>
Timestamps in a particular database start with the value that was
current in the "model" database when the new database was created,
because new databases are actually "cloned" from the "model" database.
<P>
<P><h3>Maximum Value</h3>
 
<P>
Timestamps increase until the maximum value that can be stored in 6
bytes (2**48) is reached. When this maximum is reached, the database
will not permit any more updates.
<P>
A 935 warning message is generated when there are only 1,000,000
timestamp values left in the database.
<P>
The only way to start over is to copy out all of the data with BCP
and to re-create the database; dumping and restoring will not help.
This is not a major concern because at 100 transactions per second,
2**48 will not wrap for more than 100 years.
<P>
<P><h3>Use</h3>
 
<P>
Timestamps can be used in place of locking to prevent update
collisions when multiple users browse through the same table,
performing occasional updates. Timestamps allow more concurrency than
locking because no rows are actually locked, except for uncommitted
updates.
<P>
Browse mode uses timestamps by constructing a WHERE clause on the
UPDATE statement that includes the value of the timestamp. If a second
user updates the row after the first user has read it, but before the
first user has updated it, the timestamp term in the WHERE clause will
cause the update to return "0 rows affected." If this happens, it is
up to the application to decide what to do. One option is to show a
message and the new value of the row, and allow the user to try again.
<P>
If the application wants to issue the update, regardless of the fact
that another user has changed the row, it is only necessary to
reissue the UPDATE command without the timestamp term in the WHERE
clause.
<P>
Without actually updating the row, the application can test whether
another user has updated the row by issuing a SELECT with the same
WHERE clause, as would have been used on an UPDATE. If you get the
message "not found," someone has changed the row.
<P>
The new timestamp is returned to the client as a by-product of the
update. It is available to the application via the dbtsnewval()
function. If the update is not successful, no timestamp is returned
from the server. This feature allows an application to perform
multiple updates on the same row without having to issue a redundant
read to get the new timestamp value.
<P>
Because timestamps are guaranteed to always increase within a
database, they can act as unique (although not sequential) row
identifiers. Be careful to use such nonrelational techniques only
when absolutely necessary.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.20<BR>
Keywords            : kbnetwork SSrvGen<BR>
Version             : 4.20<BR>
Platform            : Windows<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
