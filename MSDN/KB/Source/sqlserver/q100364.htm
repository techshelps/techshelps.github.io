

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Conversion of Floating Point Values to Character Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100364">
<META NAME="KBModify" CONTENT="1997/04/28">
<META NAME="KBCreate" CONTENT="1993/06/20">
<META NAME="Keywords" CONTENT="kbprg SSrvDB_Lib SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  Several methods can be used to retrieve floating point data from SQL Server and convert the results to a character representation. The primary methods for performing such a conversion are: the Transact-SQL CONVERT() and STR() functions, the DB-Libr...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKC,QBC9,QBC8,QANO,QAWN,QAII,QATX,QANY,QBC6,QABM,QAY5,QAKD,QAEQ,QAG8,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Conversion of Floating Point Values to Character Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100364</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server Programmer's Toolkit, version 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Several methods can be used to retrieve floating point data from SQL
Server and convert the results to a character representation. The
primary methods for performing such a conversion are: the Transact-SQL
CONVERT() and STR() functions, the DB-Library dbconvert(), and C
runtime library functions such as _fcvt(). The conversions performed
by each method are described below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using the Transact-SQL CONVERT() function to convert the value of a
FLOAT or REAL datatype into a character string on the server results
in a character string containing a maximum of six decimal digits.
<P>
With OS/2 SQL Server K9, CONVERT() will convert FLOAT values to an
arbitrary number of digits and will not convert FLOATS to an
exponential form. However, any decimal digits past the first 16 will
be displayed as zero. REAL values convert as noted above, with numbers
greater than or equal to 1E+006 being represented in exponential
notation.
<P>
If conversion to a specified number of decimal digits is desired, or
if precise control of the number of places after the decimal is
needed, the Transact-SQL STR() function should be used. This function
allows the optional specification of both the length of the resultant
character string, and the number of digits after the decimal place
that will be displayed.
<P>
The string returned by the DB-Library dbconvert() function can vary
between different versions of DB-Library. Under the 1.1x and 4.20.00
libraries, dbconvert() converts FLOAT datatypes to a string containing
a maximum of 16 digits unless the string has 17 or 18 digits before
the decimal place. In this case, 17 or 18 digits are displayed in the
character string, although only 16 are significant. REAL datatypes are
converted in an inconsistent manner, typically to 16 digit strings, of
which only the first 6 digits are meaningful. Note that REAL was not a
supported datatype under SQL Server 1.11.
<P>
With DB-Library 4.20.21, the dbconvert() function always displays 6
decimal digits after the decimal point, 0 (zero) padding to 6 digits
if necessary. If less than 7 decimal digits appear before the decimal
point, 4.20.21 dbconvert() will display all digits and zero pad after
the decimal point as described previously. If 7 or more decimal digits
appear before the decimal point, the number is displayed in
exponential notation, zero padded if necessary, with 13 decimal
digits.
<P>
With DB-Library 4.20.32, dbconvert() displays an arbitrary number of
digits after the decimal point, up to a maximum of 16 decimal digits
for the total character representation of the number. Although 16
digits may be displayed for a REAL, it should be remembered that only
the first 6 are significant. If greater than 16 decimal digits would
appear before the decimal, the number is displayed in exponential
notation, with 16 digits for a FLOAT and 7 digits for a REAL datatype.
<P>
Conversion of a floating point value to an arbitrary number of
character digits can be accomplished in two ways: the floating point
value can be retrieved from SQL Server as DBFLT4 or DBFLT8 datatypes
and converted by the application program using routines such as the C
runtime functions _fcvt(), _ecvt(), printf(), and sprintf(), or the
floating point value can be converted on the server using the
STR()function, and the resultant character string returned to the
front end.
<P>
The character representation does not reflect the actual precision of
the floating point value, which will be either 15 or 6 decimal digits
for FLOAT and REAL datatypes, respectively.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Transact-SQL float double conversion round<BR>
truncate dblib data type<BR>
Keywords            : kbprg SSrvDB_Lib SSrvProg<BR>
Version             : 4.2 | 4.2 | 4.2<BR>
Platform            : MS-DOS OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
