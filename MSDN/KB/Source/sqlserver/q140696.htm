

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: RAISERROR, PRINT, and the MS SQL Server ODBC Driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140696">
<META NAME="KBModify" CONTENT="1997/04/08">
<META NAME="KBCreate" CONTENT="1995/12/05">
<META NAME="Keywords" CONTENT="kbenv kbinterop SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  This article discusses how the Microsoft SQL Server ODBC Driver returns the output of Transact-SQL RAISERROR or PRINT statements to an ODBC application.  MORE INFORMATION  In Transact-SQL, the PRINT statement can be used to return a user-defined me...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QABM,QAOX,QAGI,QAPN,QAB9,QALW,QA9E,QAB4,QAAP,QAU9,QAPF,QAEV,QAIF,QA5A V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: RAISERROR, PRINT, and the MS SQL Server ODBC Driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140696</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 &amp; 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how the Microsoft SQL Server ODBC Driver returns
the output of Transact-SQL RAISERROR or PRINT statements to an ODBC
application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Transact-SQL, the PRINT statement can be used to return a user-defined
message to a DB-Library application's message handler routine. The
RAISERROR statement can be used to raise a user-defined error, which is
reported to a DB-Library application's error handler.
<P>
ODBC does not have the concept of message or error handlers like the ones
in DB-Library. The Microsoft ODBC SQL Server Driver instead returns the
output of PRINT and RAISERROR statements through the SQLError() function.
PRINT statements will cause the SQL statement execution to return
SQL_SUCCESS_WITH_INFO, and a subsequent call to SQLError() returns a
SQLState of 01000. A RAISERROR with a severity of ten or lower will behave
the same as PRINT. A RAISERROR with a severity of 11 will cause the execute
to return SQL_ERROR and a subsequent call to SQLError() returns SQLState
37000. For example:

<OL><P><LI>SQLExecDirect (hstmt, "PRINT  'Some message' ", SQL_NTS);
   Returns SQL_SUCCESS_WITH_INFO, SQLError() reports:
<P>
   szSQLState = "01000", *pfNative Error = 0,
   szErrorMsg= "[Microsoft] [ODBC SQL Server Driver][SQL Server]
<PRE>                Some message"

</PRE><P><LI>SQLExecDirect (hstmt, "RAISERROR ('Sample error 1.', 11, -1)",
<PRE>                  SQL_NTS)
   Returns SQL_ERRORm SQLError() reports:

   szSQLState = "37000", *pfNative Error = 50000,
   szErrorMsg= "[Microsoft] [ODBC SQL Server Driver][SQL Server]
                Sample error 1."

</PRE><P><LI>SQLExecDirect (hstmt, "RAISERROR ('Sample error 2.', 10, -1)",
<PRE>                  SQL_NTS)
   Returns SQL_SUCCESS_WITH_INFO, SQLError() reports:

   szSQLState = "01000", *pfNative Error = 50000,
   szErrorMsg= "[Microsoft] [ODBC SQL Server Driver][SQL Server]
                Sample error 2."

</PRE></OL>The timing of calling SQLError() is critical when output from PRINT or
RAISERROR statements may be included in a result set. The call to
SQLError() to retrieve the PRINT or RAISERROR output must be made right
after the statement that receives the SQL_SUCCESS_WITH_INFO or SQL_ERROR
return. This is straightforward when only a single SQL statement is
executed, as in the examples above. In these cases the call to
SQLExecDirect() or SQLExecute() will return SQL_ERROR or
SQL_SUCCESS_WITH_INFO, and SQLError() can then be called. It is less
straightforward in coding loops to handle the output of a batch of SQL
commands, or when executing SQL Server stored procedures.
<P>
SQL Server returns a result set for every SELECT statement executed in a
batch or stored procedure. If the batch or procedure contains PRINT or
RAISERROR statements, the output for these will be interleaved with the
SELECT statement result sets. If the first statement in the batch or
procedure is a PRINT or RAISERROR, the SQLExecute or SQLExecDirect will
return SQL_SUCCESS_WITH_INFO or SQL_ERROR and the application will need to
call SQLError() until it returns SQL_NO_DATA_FOUND to retrieve the PRINT or
RAISERROR information. If the PRINT or RAISERROR statement comes after
other SQL statements (such as a select), then the PRINT or RAISERROR
information will be returned when SQLFetch() or SQLExtendedFetch() for the
result set before the PRINT or RAISERROR returns SQL_NO_DATA_FOUND or
SQL_ERROR.
<P>
For example, when processing the following procedure:
<P>
CREATE PROCEDURE odbcproc AS
PRINT 'First PRINT Message.'
SELECT name FROM sysusers WHERE suid &lt; 2
PRINT 'Second PRINT Message.'
GO
<P>
The SQLExecute() or SQLExecDirect() call will return SQL_SUCCESS_WITH_INFO
and a call to SQLError() at that point will return the first print message.
If the ODBC application then processes through the result set using
SQLFetch(), the application can get the second print statement by calling
SQLError() when SQLFetch() returns SQL_NO_DATA_FOUND.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sql6 winnt odbc debug<BR>
Keywords            : kbenv kbinterop SSrvProg<BR>
Version             : 6.0 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
