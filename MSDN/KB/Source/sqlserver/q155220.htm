

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Cursor Fetch Within Stored Procedure Behavior Inconsistent </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155220">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1996/08/23">
<META NAME="Keywords" CONTENT="kbbug6.50 kbprg SSrvProg SSrvStProc">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  When cursor is declared and fetched within stored procedure,  Fetch Cursor  displays inconsistent behavior between DYNAMIC and SCROLLABLE cursors.  FETCH NEXT FROM cursor INTO @variables  with DYNAMIC cursor results in the  0 row(s) affected  messa...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAO2,QAL3,QAUD,QBXS,QA9E,QAC6,QBVV,QA5V,QAY2,QAB4,QAAP,QAB9,QAY5,QAVQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Cursor Fetch Within Stored Procedure Behavior Inconsistent</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155220</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When cursor is declared and fetched within stored procedure, "Fetch Cursor"
displays inconsistent behavior between DYNAMIC and SCROLLABLE cursors.
"FETCH NEXT FROM cursor INTO @variables" with DYNAMIC cursor results in the
"0 row(s) affected" message, while the SCROLLABLE cursor does not return
any message.
<P>
Because the default behavior for cursor has changed from "KEYSET DRIVEN (or
SCROLLABLE)" in SQL Server 6.0 to "DYNAMIC" in SQL Server 6.5, this appears
to users as stored procedure behavior changes from SQL Server 6.0 to SQL
Server 6.5.
<P>
NOTE: In DYNAMIC cursor, DONE_INPROC bit is not set when "FETCH" is
executed, therefore it always returns the 0 row count.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Create the cursor as "SCROLL CURSOR" or use "SET NOCOUNT ON" within the
stored procedure, so that you do not receive the "0 row(s) affected"
message.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server
version 6.5. We are researching this problem and will post new information
here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This problem may affect ODBC applications migrated from SQL Server 6.0 to
6.5. Each fetch against these dynamic cursors in stored procedures under
SQL Server 6.5 now returns a result set to an ODBC application consisting
of the message:
<P>
<PRE>   0 row(s) affected

</PRE>ODBC applications not coded to handle these new result sets can experience
different errors. The most common error is that an ODBC application's logic
will not be expecting these result sets from a procedure, and will not call
SQLMoreResults() until it gets a SQL_NO_DATA_FOUND return code. In this
case, the ODBC application will attempt a new command while there are "0
rows(s) affected" result sets still pending, and will receive the following
error:
<P>
<PRE>   szSqlState = "24000", pfNativeError = 0,
   szErrorMsg="[Microsoft][ODBC SQL Server Driver]
              Invalid cursor state"

</PRE>The above error may also occur if the ODBC application logic assumes it is
on a particular result set it expects from the procedure, but is in fact on
one of the result sets containing only the message "0 row(s) affected". In
this case SQLBindCols may return SQL_SUCCESS, but the first fetch attempt
will receive the "Invalid cursor state" error. Other errors may occur
depending on the logic in the ODBC application.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: cursor<BR>
Keywords            : kbbug6.50 kbprg SSrvProg SSrvStProc<BR>
Version             : 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
