

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Error 16934 If Sp_cursor Update on Sproc After Dump/Load </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164056">
<META NAME="KBModify" CONTENT="1997/06/27">
<META NAME="KBCreate" CONTENT="1997/02/21">
<META NAME="Keywords" CONTENT="kbbug6.50 kbusage SSrvDB_Lib SSrvGen SSrvTran_SQL">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="BUG #: 16515 (6.5)   You may receive the following error 16934 when performing an optimistic lookup:     Optimistic concurrency check failed, the row was modified outside of    this cursor.  This problem may occur if you do all of the following:   - ...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAXB,QAO2,QABI,QAAP,QAB4,QABH,QAGI,QAC1,QBD2,QAZV,QAR4,QAKP,QA9E,QDIX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Error 16934 If Sp_cursor Update on Sproc After Dump/Load</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 27, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164056</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
BUG #: 16515 (6.5)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
You may receive the following error 16934 when performing an optimistic
lookup:
<P>
<PRE>   Optimistic concurrency check failed, the row was modified outside of
   this cursor.

</PRE>This problem may occur if you do all of the following:

<UL><LI>Dump and load a database containing a stored procedure into a different
   database.

<LI>Declare an extended keyset or dynamic cursor on that stored procedure.

<LI>Do an sp_cursor positioned update using CU_OPTCC (optimistic check by
   value or timestamp) or CU_OPTCCVAL (optimistic check by value).
<P>
</UL>This problem does not occur if the database is dumped and loaded back to
the same database.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
After the dump and load to a different database, drop and re-create the
stored procedure on which the cursor is declared.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server
version 6.5. This problem has been corrected in U.S. Service Pack 3 for
Microsoft SQL Server version 6.5. For more information, contact your
primary support provider.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Error message 16934 is not intrinsically wrong. It merely indicates that
during a cursor read, browse, or update operation, the optimistic lookup
detected a changed row. However, in this particular case, error 16934 is
wrong because no update to the underlying row took place.
<P>
SQL Server supports two different server-side cursor interfaces. One is
ANSI SQL cursors, exposed through Transact-SQL statements such as DECLARE,
FETCH, and so on. There is also an extended cursor interface that is
accessed by means of the DB-Library and ODBC APIs. The sp_cursor extended
cursor statements are emitted by the DB-Library or ODBC layers in response
to certain DB-Library or ODBC API calls. Higher-level interfaces such as
Remote Data Objects (RDO) often encapsulate these API-level calls, so you
would need to run a trace utility such as SQL Trace to verify the sp_cursor
call being made.
<P>
For more information on cursors and concurrency modes, see the on-line
documentation and the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../SQLSERVER/Q156489.htm">Q156489</A></B>
   TITLE     : Overview of SQL Server, ODBC, and DB-Library Cursors
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbbug6.50 kbusage SSrvDB_Lib SSrvGen SSrvTran_SQL<BR>
Version             : 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 27, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
