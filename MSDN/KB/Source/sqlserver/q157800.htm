

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: COMPUTE and the Microsoft SQL Server ODBC driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157800">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1996/10/18">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbusage SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The COMPUTE BY clause in a SQL Server statement generates subtotals within result sets, whereas the COMPUTE clause generates a total at the end of the result set. The Microsoft SQL Server ODBC driver presents this total back to the calling applicat...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE5,QABM,QBXS,QAL3,QAEN,QA5V,QAY2,QA9E,QAM4,QAWH,QAU9,QADP,QAGF,QAE1,QAPN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: COMPUTE and the Microsoft SQL Server ODBC driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157800</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 4.2x, 6.0, and 6.5
<LI>Microsoft Open Database Connectivity, version 2.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The COMPUTE BY clause in a SQL Server statement generates subtotals within
result sets, whereas the COMPUTE clause generates a total at the end of the
result set. The Microsoft SQL Server ODBC driver presents this total back
to the calling application by generating multiple result sets for the
SELECT.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following example from the Transact-SQL Reference uses COMPUTE BY and
COMPUTE to generate subtotals and the total:
<P>
<PRE>   SELECT title = CONVERT(char(20), title), type, price, advance
   FROM titles
   WHERE ytd_sales IS NOT NULL
   ORDER BY type DESC
   COMPUTE AVG(price), SUM(advance) BY type
   COMPUTE SUM(price), SUM(advance)

</PRE>These statements cause a subtotal calculation for the average price and sum
of advances for each book type, and then produce a final total sum of both
the price and advance data. The following ODBCTest GetDataAll output shows
how the ODBC driver presents these subtotals and totals back to the calling
application as separate result sets intermixed with the 'primary' result
set:
<P>
<PRE>   "title", "type", "price", "advance"
   "Onions, Leeks, and G", "trad_cook   ", 20.9500, 7000.0000
   "Fifty Years in Bucki", "trad_cook   ", 11.9500, 4000.0000
   "Sushi, Anyone?      ", "trad_cook   ", 14.9900, 8000.0000
   3 rows fetched from 4 columns.

   "AVG", "SUM"
   15.9633, 19000.0000
   1 row fetched from 2 columns.

   "title", "type", "price", "advance"
   "Computer Phobic AND ", "psychology  ", 21.5900, 7000.0000
   "Is Anger the Enemy? ", "psychology  ", 10.9500, 2275.0000
   "Life Without Fear   ", "psychology  ", 7.0000, 6000.0000
   "Prolonged Data Depri", "psychology  ", 19.9900, 2000.0000
   "Emotional Security: ", "psychology  ", 7.9900, 4000.0000
   5 rows fetched from 4 columns.

   "AVG", "SUM"
   13.5040, 21275.0000
   1 row fetched from 2 columns.

   "title", "type", "price", "advance"
   "But Is It User Frien", "popular_comp", 22.9500, 7000.0000
   "Secrets of Silicon V", "popular_comp", 20.0000, 8000.0000
   2 rows fetched from 4 columns.

   "AVG", "SUM"
   21.4750, 15000.0000
   1 row fetched from 2 columns.

   "title", "type", "price", "advance"
   "Silicon Valley Gastr", "mod_cook    ", 19.9900, .0000
   "The Gourmet Microwav", "mod_cook    ", 2.9900, 15000.0000
   2 rows fetched from 4 columns.

   "AVG", "SUM"
   11.4900, 15000.0000
   1 row fetched from 2 columns2 .

   "title", "type", "price", "advance"
   "The Busy Executive's", "business    ", 19.9900, 5000.0000
   "Cooking with Compute", "business    ", 11.9500, 5000.0000
   "You Can Combat Compu", "business    ", 2.9900, 10125.0000
   "Straight Talk About ", "business    ", 19.9900, 5000.0000
   4 rows fetched from 4 columns.

   "AVG", "SUM"
   13.7300, 25125.0000
   1 row fetched from 2 columns.

   "SUM", "SUM"
   236.2600, 95400.0000
   1 row fetched from 2 columns.

</PRE>You can see from the output above that the driver presents the first result
set for the rows from books having the first book type. It then produces a
second result set with the two COMPUTE BY columns for the AVG(price) and
SUM(advance) for this first set of books. Then it produces a third result
set for the next group of books, and a fourth result set with the COMPUTE
BY subtotals for that group. The driver keeps interleaving these result
sets until the end, when it produces the final result set with the total
for the COMPUTE SUM(price), SUB(advance) clause.
<P>
Applications running SQL Server commands with COMPUTE BY and COMPUTE
clauses must be coded to handle the multiple result sets returned by the
driver.
<P>
Note that the Microsoft SQL Server ODBC driver only supports COMPUTE BY or
COMPUTE with the default forward_only, read_only cursors with a rowset size
of one. The driver implements all other cursor types (dynamic, static, or
keyset) by using server cursors. SQL Server's server cursors do not support
commands that generate multiple result sets.
<P>
If an application uses the ODBC Cursor Library with the Microsoft SQL
Server ODBC driver, it can open a static cursor on selects with COMPUTE BY
or COMPUTE. However, the application cannot scroll around the complete
result set, because the query's data has been broken into multiple result
sets by the COMPUTE and COMPUTE BY clauses. For example, if an application
sets the option for static cursors, runs the above statements, and then
does a SQLExtendedFetch(hstmt, SQL_FETCH_LAST), the following row will be
returned:
<P>
<PRE>   "Sushi, Anyone?      ", "trad_cook   ", 14.9900, 8000.0000

</PRE>That row is returned because it is the last row in the first result
returned by the select, which is the following:
<P>
<PRE>   "Onions, Leeks, and G", "trad_cook   ", 20.9500, 7000.0000
   "Fifty Years in Bucki", "trad_cook   ", 11.9500, 4000.0000
   "Sushi, Anyone?      ", "trad_cook   ", 14.9900, 8000.0000

</PRE>ODBC applications must deal with the output of selects containing COMPUTE
BY and COMPUTE as a series of discrete result sets, not as a single
continuous result set.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbinterop kbprg kbusage SSrvProg<BR>
Version             : 2.5 2.65 4.2x 6.0 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
