

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Views Containing a UNION Resolve with Materializing Model </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163082">
<META NAME="KBModify" CONTENT="1997/10/22">
<META NAME="KBCreate" CONTENT="1997/02/03">
<META NAME="Keywords" CONTENT="SSrvTran_SQL kbusage kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT=" BUG#: 16522 (6.5)   When you SELECT from a view that contains one or more UNION clauses, the view is resolved using a materializing model. In other words, the view is resolved into a worktable first, and then the SELECT statement's conditional claus...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA2Q,QAY2,QADK,QAG2,QAS1,QBWS,QABM,QAPN,QBFY,QBWT,QBXS,QA5V,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Views Containing a UNION Resolve with Materializing Model</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163082</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
<P>
BUG#: 16522 (6.5)
<P>
SYMPTOMS
 
<P>
When you SELECT from a view that contains one or more UNION clauses, the
view is resolved using a materializing model. In other words, the view is
resolved into a worktable first, and then the SELECT statement's
conditional clauses are applied to the intermediate table. This procedure
may have a significant impact on the performance of a query against a view.
<P>
WORKAROUND
 
<P>
Avoid using UNIONs inside of views and avoid requiring the use of views for
queries which must span partitioned tables. 
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server 6.5.
We are researching this problem and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If the view does not contain any UNION clauses, a reformulating model is
used. This means that the conditional expressions in the SELECT statement
outside the view are effectively merged with any conditional expressions
within the view, and applied directly to the underlying table(s) for the
purposes of the query plan. If there are any suitable indexes on the
underlying table, this procedure may result in far fewer pages being
fetched.
<P>
For example, consider the following statements:
<P>
<PRE>   Create view reformulating_view as
      Select * from table_1

   Create view materializing_view as
      Select * from table_1
      Union
      Select * from table_2

</PRE>Assume the following:

<UL><LI>Each table has 10,000 rows.

<LI>You write a SELECT statement containing a WHERE clause that restricts
   the number of rows returned to 1.

<LI>There is a suitable index on the column(s) specified in the WHERE
   clause.
<P>
</UL>In the case of the reformulating_view, the query plan uses your conditional
clause to ensure that the index is used. Therefore, a few index pages and
one data page are fetched from the disk or cache, and a single row is
returned.
<P>
In the case of the materializing_view, 10,000 rows from TABLE_1 are
inserted into an intermediate worktable; another 10,000 rows from TABLE_2
are appended to the worktable; and the worktable is scanned to restrict the
result set to the single row desired. No indexes are used because table
scans are required.
<P>
To observe the "showplan" and "statistics I/O" output that results from the
behavior described above, use the following script:
<P>
create table t1 (col1 int, col2 char(255), col3 char(255), col4 char(255))
go
create table t2 (col1 int, col2 char(255), col3 char(255), col4 char(255))
go
create table t3 (col1 int, col2 char(255), col3 char(255), col4 char(255))
<P>
set nocount on
go
<P>
-- populate the tables with some data
declare @c int
select @c = 1
while (@c &lt;= 500)
begin
<PRE>  insert t1 values (@c, 'a', 'b', 'c')
  insert t2 values (@c, 'a', 'b', 'c')
  insert t3 values (@c, 'a', 'b', 'c')
  select @c = @c + 1
</PRE>end
go
<P>
update t3 set col2 = 'abb' where col1 between 100 and 150
<P>
create index idx1 on t1 (col1,col2)
create  index idx2 on t2 (col1,col2)
create  index idx3 on t3 (col1,col2)
go
<P>
<P>
create view union_view
as
select * from t1
union all
select * from t2
union all
select * from t3
go
<P>
create view union_view_ind
as
select * from t1(index=idx1)
union all
select * from t2(index=idx2)
union all
select * from t3(index=idx3)
go
<P>
set statistics io on
set showplan on
go
<P>
print 'No view -- Indexes used'
go
select * from t1 where col1 = 125 and col2 = 'abb'
union all
select * from t2 where col1 = 125 and col2 = 'abb'
union all
select * from t3 where col1 = 125 and col2 = 'abb'
go
<P>
print 'Using a view -- Indexes NOT used optimiser chooses table scan'
go
<P>
select * from union_view where col1 = 125 and col2 = 'abb'
go
<P>
print 'using a view created with indexes'
go
select * from union_view_ind where col1 =125 and col2='abb'
go
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: optimizer<BR>
Keywords          : SSrvTran_SQL kbusage kbbuglist<BR>
Version           : 6.5<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
