

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Reducing Lock Contention in SQL Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q75722 ">
<META NAME="KBModify" CONTENT="1997/04/03">
<META NAME="KBCreate" CONTENT="1991/08/29">
<META NAME="Keywords" CONTENT="kbprg SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  Locking in SQL Server helps ensure consistency when reading and writing to the database. While this is desirable, it does affect performance.  MORE INFORMATION  The following methods can be used to reduce lock contention and increase overall throug...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAXB,QAC1,QABT,QBD2,QAA8,QAJQ,QAA5,QA28,QATJ,QAGU,QA26,QALQ,QBXJ,QAK7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Reducing Lock Contention in SQL Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q75722 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server version 4.2 for OS/2
<LI>Microsoft SQL Server, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Locking in SQL Server helps ensure consistency when reading and
writing to the database. While this is desirable, it does affect
performance.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following methods can be used to reduce lock contention and
increase overall throughput:

<UL><LI>Avoid situations in which many processes are attempting to perform
   updates or inserts on the same data page. For example, this can
   occur in a non-indexed table, because all additions are applied to
   the last page in the chain. Creating separate history tables that
   are accessed by various groups can minimize the delay in this
   situation. In addition, creating a clustered index to distribute
   data will also help.

<LI>Avoid transactions that include user interaction. Because locks are
   held for the duration of the transaction, a single user can degrade
   the entire systems performance.

<LI>Keep transactions that modify data as short as possible. The longer
   the transaction, the longer the exclusive or update locks are held.
   This blocks other activity and can lead to an increased number of
   deadlock situations.

<LI>Keep transactions in one batch. Unanticipated network problems may
   delay transactions from completing and thus releasing locks.

<LI>Use HOLDLOCK only when necessary, because updates can be delayed by
   waiting for shared locks to be released.

<LI>Reduce the fillfactor when creating an index to help diminish
   the chance of random updates requiring the same page. This is
   especially useful for small tables that are frequently accessed.

<LI>Using the SQL Server 4.2 cursor extensions to DB-Library (DB-Lib),
   optimistic concurrency control can be specified, using the
   CCUR_OPTCC setting in dbcursoropen(). This is ideal for applications
   that require a high degree of user interaction combined with high
   concurrency. This option ensures that update locks are obtained only
   when a user wants to commit a transaction.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 4.20 dblib Windows NT<BR>
Keywords            : kbprg SSrvProg<BR>
Version             : 4.2<BR>
Platform            : OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
