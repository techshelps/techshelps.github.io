

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Create Table with Double Precision May Be Inconsistent </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169072">
<META NAME="KBModify" CONTENT="1997/05/28">
<META NAME="KBCreate" CONTENT="1997/05/27">
<META NAME="Keywords" CONTENT="kbbug6.00 kbbug6.50 SSrvTran_SQL kbusage">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="BUG #: 16932 (6.50)   Creating a table with double precision for the same data field column but in different order may result in an inconsistent table definition.  The following scripts demonstrate this problem:     CREATE TABLE floatTable    (      ...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHH,QABM,QAGN,QAS1,QAFO,QAJQ,QDKW,QDNQ,QAKP,QBXR,QARR,QAMC,QALZ,QALG,QDIX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Create Table with Double Precision May Be Inconsistent</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169072</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 and 6.5
</UL> 
BUG #: 16932 (6.50)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Creating a table with double precision for the same data field column but
in different order may result in an inconsistent table definition.
<P>
The following scripts demonstrate this problem:
<P>
<PRE>   CREATE TABLE floatTable
   (
     GuessWhatCol double precision,
     charCol char
   )
   GO

   SP_HELP floatTable
   GO

   CREATE TABLE realTable
   (
     charCol char,
     GuessWhatCol double precision
   )
   GO

   SP_HELP realTable
   GO

</PRE>The GuessWhatCol in floatTable becomes float, which is 8 bytes in size,
while the same GuessWhatCol in realTable is real, and 4 bytes in length.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, you can specify the binary precision for SQL
Server 6.5, or decimal precision for SQL Server 6.0. The following sample
scripts demonstrate the workaround for both SQL Server 6.0 and 6.5:
<P>
<PRE>   /* Using binary precision in SQL Server 6.50 */
   CREATE TABLE floatTable
   (
     GuessWhatCol double precision(25), /* float datatype */
     charCol char
   )
   GO

   SP_HELP floatTable
   GO

   CREATE TABLE realTable
   (
     charCol char,
     GuessWhatCol double precision(24) /* real datatype */
   )
   GO

   SP_HELP realTable
   GO

   /* Using decimal precision in SQL Server 6.0 */
   CREATE TABLE floatTable
   (
     GuessWhatCol double precision(8), /* float datatype */
     charCol char
   )
   GO

   SP_HELP floatTable
   GO

   CREATE TABLE realTable
   (
     charCol char,
     GuessWhatCol double precision(7) /* real datatype */
   )
   GO

   SP_HELP realTable
   GO

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server
versions 6.0 and 6.5. We are researching this problem and will post new
information here in the Microsoft Knowledge Base as it becomes available.
 
<PRE>Keywords          : kbbug6.00 kbbug6.50 SSrvTran_SQL kbusage
Version           : 6.0 6.5
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbworkaround</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
