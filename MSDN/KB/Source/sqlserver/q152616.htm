

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: SQL Server 6.0 Service Pack 3 Fixlist </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q152616">
<META NAME="KBModify" CONTENT="1997/11/07">
<META NAME="KBCreate" CONTENT="1996/08/27">
<META NAME="Keywords" CONTENT="SSrvGen kbfixlist6.00.sp3">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT=" The following is a list of fixes and various other improvements that have been made in the Microsoft SQL Server version 6.0 Service Pack 3. Service Pack 3 is now available from your primary support provider. For more information, contact your primar...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QAM1,QDIX,QABM,QAB4,QAAP,QA28,QATJ,QAKP,QA2Q,QAPN,QBWS,QAXB,QAG2,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: SQL Server 6.0 Service Pack 3 Fixlist</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q152616</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.0 Service Pack 3
</UL> 
<P>
The following is a list of fixes and various other improvements that have
been made in the Microsoft SQL Server version 6.0 Service Pack 3. Service
Pack 3 is now available from your primary support provider. For more
information, contact your primary support provider.
<P>
Service Pack 3 includes all fixes previously released in Service Packs 1
and 2 for version 6.0. The list of fixes for Service Packs 1 and 2 are
appended at the end of this article.
<P>
Please note that workarounds described have been provided for your
information only. It is not necessary to implement these workarounds if
you have the updated software.
<P>
 
<P><h2>LIST OF PROBLEMS CORRECTED IN SERVICE PACK 3</h2>
 
<P>
<P><h3>DB-Library Components</h3>
 
<P>
<B><A HREF="../SQLSERVER/Q151301.htm">Q151301</A></B>: FIX: dbcursorfetchex() Can Cause Blocking in DB-Library
<B><A HREF="../SQLSERVER/Q152063.htm">Q152063</A></B>: FIX: DB-Lib Unable to Handle Burst of TDS Packets Under TCP/IP
<P>
<P><h3>Replication Components</h3>
 
<P>
<B><A HREF="../SQLSERVER/Q150258.htm">Q150258</A></B> FIX: Long Database Names Can Cause AV in the Distribution Task
<P>
<P><h3>Server Components</h3>
 
<P>
<B><A HREF="../SQLSERVER/Q136531.htm">Q136531</A></B>: FIX: SELECT INTO From a ALTERed TABLE Cannot be Performed
<B><A HREF="../SQLSERVER/Q139620.htm">Q139620</A></B>: FIX: @@IDENTITY in Nested Stored Procedure Returns NULL
<B><A HREF="../SQLSERVER/Q140265.htm">Q140265</A></B>: FIX: CREATE INDEX Aborts with Error 1509 or 632
<B><A HREF="../SQLSERVER/Q140332.htm">Q140332</A></B>: FIX: Remote Backups and xp_loginconfig Fail With Access Denied
<B><A HREF="../SQLSERVER/Q148324.htm">Q148324</A></B>: FIX: DECLARE CURSOR on View with DISTINCT Causes AV
<B><A HREF="../SQLSERVER/Q146637.htm">Q146637</A></B>: FIX: DATALENGTH Function Returns 0 on 256 Byte Text Parameter
<B><A HREF="../SQLSERVER/Q147177.htm">Q147177</A></B>: FIX: Complex T-SQL Batch May Hang During Query Plan Generation
<B><A HREF="../SQLSERVER/Q147414.htm">Q147414</A></B>: FIX: Unhandled Exception When Running DBCC Checkdb
<B><A HREF="../SQLSERVER/Q149934.htm">Q149934</A></B>: FIX: AV on FETCH From Updatable CURSOR Using VIEW
<B><A HREF="../SQLSERVER/Q152627.htm">Q152627</A></B>: FIX: SELECT from Multiple Unjoined Tables Can Cause AV
<B><A HREF="../SQLSERVER/Q148219.htm">Q148219</A></B>: FIX: Inconsistent Behavior with Global Temporary Tables
<B><A HREF="../SQLSERVER/Q148267.htm">Q148267</A></B>: FIX: Correlated Subquery Nested 3+ Levels May Give Error 403
<B><A HREF="../SQLSERVER/Q150955.htm">Q150955</A></B>: FIX: Client Terminated on Repeated Unsuccessful Obj Resolution
<B><A HREF="../SQLSERVER/Q150988.htm">Q150988</A></B>: FIX: Extraneous Locks During UPDATE on Table w/ &gt; 15 Indexes
<B><A HREF="../SQLSERVER/Q152046.htm">Q152046</A></B>: FIX: DBCC Traceon(3604,4031) Causes Unhandled Access Violation
<B><A HREF="../SQLSERVER/Q149174.htm">Q149174</A></B>: FIX: Correlated Subquery on Datetime Col May Cause Client AV
<B><A HREF="../SQLSERVER/Q149917.htm">Q149917</A></B>: FIX: 16933 Error on View Updated Through Server Cursor
<B><A HREF="../VISUALC/Q150936.htm">Q150936</A></B>: FIX: Stored Proc Can Fail w/ Msg 1203 Using READ UNCOMMITTED
<B><A HREF="../SQLSERVER/Q151590.htm">Q151590</A></B>: FIX: Error 4409 Generated When Using Multiple Database Views
<B><A HREF="../SQLSERVER/Q152414.htm">Q152414</A></B>: FIX: Compatible Tape Drives May Not Read SQL Server Dumps
<B><A HREF="../SQLSERVER/Q152415.htm">Q152415</A></B>: FIX: sp_processmail Gets Ambiguous Recipient Error
<B><A HREF="../SQLSERVER/Q149243.htm">Q149243</A></B>: FIX: Insert/Select/(NOLOCK) w/ Rollback May Cause Error 3307
<B><A HREF="../SQLSERVER/Q149711.htm">Q149711</A></B>: FIX: Insert View with DEFAULT VALUES Causes AV
<B><A HREF="../SQLSERVER/Q149932.htm">Q149932</A></B>: FIX: 3307 Lock Error on INSERT SELECT UNION Abort w/ Dup Key
<B><A HREF="../SQLSERVER/Q149938.htm">Q149938</A></B>: FIX: AV on INSERT of UNIONed SELECTs to Table With DEFAULTs
<B><A HREF="../SQLSERVER/Q150882.htm">Q150882</A></B>: FIX: Possible Handled AV w/ Sub-query Using NOT IN and '&gt;'
<B><A HREF="../SQLSERVER/Q151408.htm">Q151408</A></B>: FIX: Query w/ Group by All Can Take Too Long to Complete
<B><A HREF="../SQLSERVER/Q151605.htm">Q151605</A></B>: FIX: Grant or Revoke Statements Fail When Used in an SP
<B><A HREF="../SQLSERVER/Q152214.htm">Q152214</A></B>: FIX: UPDATE Using Aggregate and Arithmetic Operator Causes AV
<B><A HREF="../SQLSERVER/Q152264.htm">Q152264</A></B>: FIX: Five-way Table Join w/OR May Cause Handled Exception
<B><A HREF="../SQLSERVER/Q152615.htm">Q152615</A></B>: FIX: Syntax Error in SELECT List May Cause Handled AV
<B><A HREF="../SQLSERVER/Q151583.htm">Q151583</A></B>: FIX: Select Using 'or' From View Defined w/ '&gt;=' Can Cause AV
<B><A HREF="../SQLSERVER/Q151681.htm">Q151681</A></B>: FIX: SELECT with CASE Can Cause Parser Error 403
<B><A HREF="../SQLSERVER/Q152263.htm">Q152263</A></B>: FIX: Query with Join in Subselect May Cause Handled Exception
<B><A HREF="../SQLSERVER/Q152800.htm">Q152800</A></B>: FIX: GROUP BY Clause without Index Executes More Slowly
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151301.htm">Q151301</A></B>: dbcursorfetchex() Can Cause Blocking in DB-Library</h2>
 
BUG#: 15039
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a DB-library application calls dbcursorfetch() or dbcursorfetchex()
successfully in one thread, subsequent calls to dbcursoropen() or dbclose()
from other threads using the same DBPROCESS would be blocked. Sp_who and
sp_lock show no blockage on the server side, and the DB-library application
would appear to hang.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use a separate DBPROCESS for each thread.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152063.htm">Q152063</A></B>: BUG: DB-Lib Unable to Handle Burst of TDS Packets Under TCP/IP</h2>
 
BUG# NT: 15078
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under TCP/IP socket Net-Library, a DB-Library (DB-Lib) application may not
be able to handle a large number of TDS packets that are sent back to the
client very quickly. As a result, the following error occurs, which also
breaks the connection:
<P>
<PRE>   DB-Library: Possible network error: Read from SQL Server failed.
   Net-Library error 0: (null)

</PRE><h2>WORKAROUND</h2>
 
<P>
This problem only occurs under TCP/IP; therefore, you may want to use other
IPCs (such as named pipes, IPX/SPX, or RPC) instead.
<P>
Also, reducing the window size on the client side TCP/IP can make the
problem less likely to occur.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q150258.htm">Q150258</A></B>: BUG: Long Database Names Can Cause AV in the Distribution Task</h2>
 
BUG#: 13530
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Long published and subscribed database names can cause an access violation
(AV) failure of the distribution task with the following error reported in
the Event Log:
<P>
<PRE>   Event ID 212; Source: SQLExecutive; Category: Task Engine
   Event &lt;task id&gt; - &lt;dist task name&gt; caused an exception violation in the
   Distribution subsystem, and has been terminated.

</PRE>The Task History for the distribution task will report "Failure" with no
message explanation and the task will no longer be Active.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Avoid using long names for published and subscribed databases. To avoid
this particular problem, a database name of no longer than 10 characters is
recommended for both the published and subscribed database.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q136531.htm">Q136531</A></B>: FIX: SELECT INTO From a ALTERed TABLE Cannot be Performed</h2>
 
BUG# NT: 10972
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
On Microsoft SQL Server version 6.0, you can not perform a SELECT INTO from
a table that has been ALTERed to add an IDENTITY column.
<P>
A SELECT INTO will fail with the following error message:
<P>
<PRE>   Msg 511, Level 16, State 2
   Updated or inserted row is bigger than maximum size (10 bytes)
   allowed for this table.

</PRE><h2>WORKAROUND</h2>
 
<P>
Instead of performing an ALTER TABLE to add the IDENTITY column, CREATE a
TABLE with the identity column and then transfer the data to the new table
with an INSERT operation.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q139620.htm">Q139620</A></B>: FIX: @@IDENTITY in Nested Stored Procedure Returns NULL</h2>
 
BUG# NT: 11897
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The @@identity global variable will be NULL under the following conditions:

<OL><P><LI>If it is queried in a stored procedure after a nested stored procedure
   call and insert.

<P><LI>The nested stored procedure performs an insert and queries the
   @@identity global variable as well.
<P>
</OL><h2>WORKAROUND</h2>
 
<P>
Do not query the @@identity global variable from more than one stored
procedure nesting level.
<P>
For example, modify the "add_test1" stored procedure (from example in the
following MORE INFORMATION section) to the following code and it works
properly:
<P>
<PRE>   CREATE PROCEDURE add_test1 AS
   EXECUTE add_test2
   EXECUTE add_test2
   RETURN
   GO


</PRE></OL> 
<P><h2><B><A HREF="../SQLSERVER/Q140265.htm">Q140265</A></B>: FIX: CREATE INDEX Aborts with Error 1509 or 632</h2>
 
BUG# NT: 12183
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you attempt to create an index on a table, the command may abort
with one of the following two possible errors:
<P>
<PRE>   Msg 1509, Level 20, State 3:
   Row compare failure

   Error: 632, Severity: 20, State: 1
   Memmove() was called with a length of %d - maximum allowed length is
   2048.

</PRE>NOTE: This problem only occurs under rare conditions, appears to be
extremely data and hardware sensitive, and is not likely to occur with
most CREATE INDEX statements.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Increase the "sort pages" configuration parameter from the default of
64 to a higher number using the sp_configure system stored procedure. In
most cases, increasing this parameter from the default of 64 to 128 will
allow the index to be created; however, it can be increased to a maximum of
511 if necessary.
<P>
NOTE: Before modifying the number of sort pages, you need to issue the
command:
<P>
<PRE>   sp_configure 'allow updates', 1

</PRE>along with a corresponding:
<P>
<PRE>   sp_configure 'allow updates', 0

</PRE>at the end of the process.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q140332.htm">Q140332</A></B>: FIX: Remote Backups and xp_loginconfig Fail With Access Denied</h2>
 
BUG# NT: 12222
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Database dumps to remote devices and the xp_loginconfig extended
stored procedure can fail with access denied errors if Microsoft SQL
Server is using Per Seat licensing mode.
<P>
For database dumps, the client will get a 3201 error and the Windows NT
Application log of the computer SQL Server is running on will contain
the following event:
<P>
<PRE>   Event ID: 17055
   Type: Error
   Source: MSSQLServer
   Category: Kernel
   User: could be any user connected to SQL Server
   Description: Mesg 18204: dbswritecheck: Backup device '&lt;device path
   and file&gt;' failed to open, operating system error=5(Access is
   denied.)

</PRE>When running xp_loginconfig, the query will return the message:
<P>
<PRE>   Unable to query SQL Server security information.

</PRE><h2>WORKAROUND</h2>
 
<P>
Switch the SQL Server security mode to mixed or integrated security.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q148324.htm">Q148324</A></B>: FIX: DECLARE CURSOR on View with DISTINCT Causes AV</h2>
 
BUG# NT: 11550
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you declare a cursor on a view with DISTINCT, the operation will cause
a handled access violation (AV) resulting in the client process being
terminated. The same behavior can occur in both Transact-SQL and in
applications written to use server cursors. The behavior only occurs if the
table has a unique index.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Rewrite the query so that you are using DISTINCT in the cursor declaration
rather than in the view declaration. Another possibility is to drop the
unique index on the table if it is not being used for integrity
constraints. DB-Library and ODBC applications can also use their respective
cursor libraries.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q146637.htm">Q146637</A></B>: FIX: DATALENGTH Function Returns 0 on 256 Byte Text Parameter</h2>
 
BUG# NT: 13179
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a text value of length 256 bytes is passed to a stored procedure as a
parameter and in the stored procedure the DATALENGTH function is used to
check the length of the parameter, it will return 0 instead of 256. If the
text parameter's length is either greater than 256 or less than 256, the
DATALENGTH function will return the correct length.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q147177.htm">Q147177</A></B>: FIX: Complex T-SQL Batch May Hang During Query Plan Generation</h2>
 
BUG# NT: 13132
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The complex transact-SQL batch hangs when executed in SET NOEXEC ON mode.
The transact-SQL query batch has two inserts with a co-related update
statement. Execution with SET NOEXEC ON causes the connection to be
stranded with CPU utilization at 100 percent. Execution with SET NOEXEC OFF
causes the connection and locks to be stranded with CPU utilization at 100
percent.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Break the transact-SQL batch into smaller components. You can do this by
adding "Go" between the transact-SQL statements.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q147414.htm">Q147414</A></B>: FIX: Unhandled Exception When Running DBCC Checkdb</h2>
 
BUG# NT: 13125
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When running DBCC CHECKDB or CHECKTABLE, SQL Server may encounter an
unhandled exception.
<P>
The last message in the errorlog prior to the exception will be the
following:
<P>
<PRE>   96/01/25 15:34:31.63 kernel
   upinit: warning, unable to raise priority of dbcc-worker thread

</PRE>If you are running Service Pack 2, the above message will be followed by:
<P>
<PRE>   96/01/25 15:34:31.72 kernel
   upinit(dbcc-worker) failed:  error code: 0x5
   (5(Access is denied.))

</PRE><h2>MORE INFORMATION</h2>
 
<P>
This problem will only occur if SQL Server is running in Per Seat licensing
mode and is configured to use standard security, and even under these
conditions, it is rare.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
You can work around this problem by doing one of the following:

<UL><LI>Switch the SQL Server security mode to mixed or integrated security.

<LI>Use SQL Server trace flag 2508 to disable parallel non-clustered index
   checking for DBCC CHECKTABLE. This has little performance impact on most
   servers, because to benefit from parallel checktable you must have
   buffer cache larger than the size of the table being checked.
<P>
<P>
</UL> 
<P><h2><B><A HREF="../SQLSERVER/Q149934.htm">Q149934</A></B>: FIX: AV on FETCH From Updatable CURSOR Using VIEW</h2>
 
BUG#: 12627
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Fetching from multiple updatable cursors using VIEWs of the same underlying
table can get a handled exception.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use cursors against the direct tables instead of views.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152627.htm">Q152627</A></B>: FIX: SELECT from Multiple Unjoined Tables Can Cause AV</h2>
 
BUG#: 13087
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A SELECT from multiple base tables with no join clauses may cause a handled
Access Violation in Microsoft SQL Server 6.0
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Simplifying the SELECT statement or restricting the number of rows or
tables in the query will avoid the Access Violation.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q148219.htm">Q148219</A></B>: FIX: Inconsistent Behavior with Global Temporary Tables</h2>
 
BUG# NT: 13490
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Global temporary tables exhibit inconsistent IF EXISTS behavior from
multiple connections. The conditional check for table (with IF EXISTS) may
return FALSE even if the global temp table exists. Create table statements
executed after this will return the following error message:
<P>
<PRE>   Msg 2714, Level 16, State 1
   There is already an object named '##tablename' in the database.


</PRE> 
<P><h2><B><A HREF="../SQLSERVER/Q148267.htm">Q148267</A></B>: FIX: Correlated Subquery Nested 3+ Levels May Give Error 403</h2>
 
BUG# NT: 13721
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A correlated subquery nested to three levels or more may give the following
error message:
<P>
<PRE>   Msg 403, Level 16, State 1
   Invalid operator for datatype op: UNKNOWN TOKEN type: char

</PRE><h2>WORKAROUND</h2>
 
<P>
Split the query so that the nesting level is less than three.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q150955.htm">Q150955</A></B>: FIX: Client Terminated on Repeated Unsuccessful Obj Resolution</h2>
 
BUG#: 13393
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
During object resolution, the server terminates the client process if the
object resolution is not successful for five consecutive attempts.
<P>
This applies only to version 6.0 Service Pack 2. The problem
characteristics are completely different on SQL Server version 6.0 without
any Service Packs installed. Please see the following Knowledge Base
article for details:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../SQLSERVER/Q134659.htm">Q134659</A></B>
   TITLE: FIX: Unexpected Behavior During Object Resolution

</PRE><h2>WORKAROUND</h2>
 
<P>
Ensure that all the views have proper base tables. Alternately, drop and
recreate the views whenever the base tables are dropped.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q150988.htm">Q150988</A></B>: FIX: Extraneous Locks During UPDATE on Table w/ &gt; 15 Indexes</h2>
 
BUG#: 13626
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Running an UPDATE on a table results in more EX_PAGE locks when the table
contains more than 15 indexes, even when the column being updated is not a
part of any index. The same set of statements uses a smaller number of
locks if there are 15 or fewer indexes on the updated table.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152046.htm">Q152046</A></B>: FIX: DBCC Traceon(3604,4031) Causes Unhandled Access Violation</h2>
 
BUG#: 13262
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the combination of trace flags 3604 (Sends trace output to the
client) and 4031 (Prints both a byte and ASCII representation of the send
buffers) can crash the server with an unhandled access violation.
<P>
For example:
<P>
dbcc traceon(3604)
go
dbcc traceon(4031)
go
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use send trace output to the Errorlog file:
<P>
dbcc traceon(3605)
go
dbcc traceon(4031)
go
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149174.htm">Q149174</A></B>: FIX: Correlated Subquery on Datetime Col May Cause Client AV</h2>
 
BUG#: 14267
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The client thread may access violate if it has the datetime column in
correlation, and multiple conditions in the WHERE clause of the correlated
subquery and the main outer query.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Split the query into multiple queries by using intermediate temporary
tables.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149917.htm">Q149917</A></B>: FIX: 16933 Error on View Updated Through Server Cursor</h2>
 
BUG#: 13762
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Applications attempting to update a view through SQL Server server cursors
will receive the following error even if the operation observes the SQL
Server requirement that updates through views only update a single base
table:
<P>
<PRE>   Msg 16933, Level 16, State 2
   The cursor does not include the table being modified.

</PRE><h2>WORKAROUND</h2>
 
<P>
Open the cursor with a select against the base tables instead of the view.
Alternatively, open a second connection and issue an SQL update command
based on key values through the second connection.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q150396.htm">Q150396</A></B>: FIX: Stored Proc Can Fail w/ Msg 1203 Using READ UNCOMMITTED</h2>
 
BUG#: 14238
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a stored procedure is executed after setting the TRANSACTION ISOLATION
LEVEL to READ UNCOMMITTED, the procedure can fail with the following error:
<P>
<PRE>   Error : 1203, Severity: 20, State: 2
   Caller of lock manager is incorrectly trying to unlock an unlocked
   object.
   spid=&lt;n&gt; locktype=4 dbid=&lt;n&gt;  lockid=&lt;n&gt;

</PRE><h2>MORE INFORMATION</h2>
 
<P>
This problem occurs if a stored procedure plan is reused in cache that was
compiled when the user was not using READ UNCOMMITTED. If a new plan is
used to execute the procedure with READ UNCOMMITTED, the problem does not
occur.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use the locking hint keyword NOLOCK in the SELECT statement instead of SET
TRANSACTION ISOLATION LEVEL READ UNCOMMITTED.
<P>
- OR -
<P>
Recompile the stored procedure so it does not use the existing plan in
cache that was not executed with READ UNCOMMITTED. This can be accomplished
in several different ways, including EXEC WITH RECOMPILE, drop/recreate the
stored procedure, or restarting SQL Server.
<P>
Just retrying the operation will not avoid the problem unless the existing
plan is flushed from cache. This can be determined by using DBCC MEMUSAGE.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151590.htm">Q151590</A></B>: FIX: Error 4409 Generated When Using Multiple Database Views</h2>
 
BUG#: 14645
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under certain conditions, you may receive 4409 errors.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The problem arises when the first view in the chain of views can be
executed but subsequent views are unavailable for use. For example:
<P>
If you have viewA and viewC in the master database and viewB in the pubs
database, where viewA selects * from viewB and viewB selects * from viewC
and viewC selects * from sysdatabases. And, SQL Server has been stopped
while a client continues to try to execute a select * from viewA. When SQL
Server is restarted, the master database is always recovered first and then
the subsequent databases. As soon as master is recovered, the client
attempts to execute the select and receives the 4409 error because pubs has
not yet been recovered.
<P>
The same behavior can occur when you take a database on and offline, or you
try to drop and create viewC in the above scenario while someone is trying
to access it.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Drop and add the views when you are sure no one is accessing them.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152414.htm">Q152414</A></B>: FIX: Compatible Tape Drives May Not Read SQL Server Dumps</h2>
 
BUG#: 13749 | 13753
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A SQL Server tape dump may not be usable on a similar tape drive if the two
tape drives do not support the same tape marking mechanisms.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
By default, SQL Server checks for tape marks using the following algorithm:

<OL><P><LI>Does the tape drive support Setmarks? If so, use Setmarks.

<P><LI>Else does the tape drive support Filemarks? If so, use Filemarks.
<P>
</OL>If you dump to a tape drive that does not support Setmarks and then attempt
to load the dump on a drive that does support Setmarks, SQL Server will not
be able to load the dump. The same is true for the reverse scenario.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Starting with Service Pack 3, SQL Server now contains the trace flag 3206
that will reverse the SQL Server tape mark algorithm to the following:

<OL><P><LI>Does the tape drive support Filemarks? If so, use Filemarks.

<P><LI>Else does the tape drive support Setmarks? If so, use Setmarks.
<P>
<P>
</OL> 
<B><A HREF="../SQLSERVER/Q152415.htm">Q152415</A></B>: FIX: sp_processmail Gets Ambiguous Recipient Error
 
BUG#: 13309
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The system stored procedure sp_processmail can fail to reply to a message
sent to the server if the sender uses an ambiguous e-mail address.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Make sure that there are no ambiguous e-mail addresses.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Here is an example of this problem:
<P>
Suppose there are the following two email addresses, "SQL" and "SQLSERVER."
<P>
If e-mail user "SQL" sends a message to a SQL Server that has
sp_processmail running, SQL Server will receive the message, but SQL Server
fails in sending a reply because the intended recipient's address is
ambiguous. The address is ambiguous because e-mail address resolution says
that both "SQL" and "SQLSERVER" are possibilities for the address "SQL."
<P>
Here is the updated documentation of xp_readmail from the SQL Server 6.5
documentation:
<P>
<PRE>   Syntax
   xp_readmail ([@msg_id = msg_id] [, @type = type [OUTPUT]] [, @peek =
   {'true' | 'false'}]
   [, @suppress_attach = {'true' | 'false'}]
   [, @originator = @sender OUTPUT]
   [, @subject = @subject_line OUTPUT]
   [, @message = @body_of_message OUTPUT]
   [, @recipients = @recipient_list OUTPUT]
   [, @cc_list = @cc_list OUTPUT]
   [, @bcc_list = @bcc_list OUTPUT]
   [, @date_received = @date OUTPUT]
   [, @unread = {'true' | 'false'} OUTPUT]
   [, @attachments = @temp_file_paths OUTPUT])
   [, @skip_bytes = @bytes_to_skip OUTPUT]
   [, @msg_length = @length_in_bytes OUTPUT]
   [, @originator_address = @originator_address OUTPUT])
   where
   @originator_address
   Specifies the resolved mail address of the originator of the mail
   message. The @originator_address variable must be varchar(255).

</PRE></OL>If the sp_processmail stored procedure is modified to perform the
xp_sendmail back to the value of the @originator_address instead of the
@originator, sp_processmail will not fail because of an ambiguous
recipient.
<P>
For additional syntax information for xp_readmail see the Microsoft SQL
Server Transact-SQL Reference.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149711.htm">Q149711</A></B>: FIX: Insert View with DEFAULT VALUES Causes AV</h2>
 
BUG#: 12923
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An insert performed on a view with the option DEFAULT VALUES can result in
a thread level Access Violation. The following provides an example where
the Access Violation would occur:
<P>
<PRE>   CREATE TABLE ta (col1 CHAR(1) NULL DEFAULT 'a')
   GO
   CREATE VIEW vi AS SELECT * FROM ta
   GO
   INSERT INTO vi DEFAULT VALUES
   GO

</PRE><h2>WORKAROUND</h2>
 
<P>
Perform the insert with the option DEFAULT VALUES on the base table rather
than through the view.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149932.htm">Q149932</A></B>: FIX: 3307 Lock Error on INSERT SELECT UNION Abort w/ Dup Key</h2>
 
BUG#: 14745
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An INSERT into a table with a UNIQUE CLUSTERED INDEX can fail with fatal
error 3307:
<P>
<PRE>   Process X was expected to hold logical lock on page Y. Error while
   undoing log row in database 'pubs'. Rid pageid is 0xZ and row num is
   0xZZ. The SQL Server is terminating this process.

</PRE><h2>MORE INFORMATION</h2>
 
<P>
If the insert is from UNIONed SELECT statements and there are duplicate
keys (but not rows) generated such that the INSERT should fail, the 3307
error can be raised if the level of data reaches a certain threshold,
somewhere around 1000 rows depending on row size.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
The INSERT would otherwise fail with a non-fatal 2601 "Attempt to insert
duplicate keys" error. The INDEX can be changed to use the IGNORE_DUP_KEY
option so that the 2601 error is not raised.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149938.htm">Q149938</A></B>: FIX: AV on INSERT of UNIONed SELECTs to Table With DEFAULTs</h2>
 
BUG#: 14833
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
INSERTing to a table from a UNION of two or more SELECT statements can
result in a handled Access Violation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
At a certain threshold of data, a work table needs to be created to resolve
the UNION correctly. If the target table has DEFAULTs, these are not
applied to intermediate work tables but other attributes of the target
table, such as NOT NULL, are applied, and this would cause the query to
fail with a different error if there was not the AV.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Implement the INSERT as distinct INSERT SELECTs for each table in the
UNION. If there is a UNIQUE INDEX on the target table, use the
IGNORE_DUP_KEY option on that INDEX to filter out duplicate rows that would
previously have been filtered out by the UNION. In many cases, this method
can be much faster anyway because it can eliminate one or more intermedate
work tables.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q150882.htm">Q150882</A></B>: FIX: Possible Handled AV w/ Sub-query Using NOT IN and '&gt;'</h2>
 
BUG#: 12628
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
It is possible to experience a handled access violation (AV) when using an
IN condition with a sub-query.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
There are two possible means to workaround this problem. The first is to
drop the current index and create either a unique clustered or non-
clustered index. Or you can use the convert() function to step-up the
column referenced in the sub-query to the same size as the column
referenced on the left of the IN condition. An example of this 'step-up'
would be to change the query to the following:
<P>
select a from test1 where a not in (select convert(char(2),c) from test2
where b = '1') and a &lt;= '1'
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151408.htm">Q151408</A></B>: FIX: Query w/ Group by All Can Take Too Long to Complete</h2>
 
BUG# 12809
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The time a query takes to produce output can be too long when using join(s)
between two or more tables and a GROUP BY ALL. The scan count and
physical IO count are extremely high. The tables involved in the join have
lots of duplicate data in the column involved and does not have any
indexes.
<P>
Testing has shown that the situation under which this problem has
been encountered is narrow in scope, and the problem can be reproduced only
with the provided replication data.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Reduce the duplicates and create appropriate index(s) to reduce the amount
of time to produce the output.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151605.htm">Q151605</A></B>: FIX: Grant or Revoke Statements Fail When Used in an SP</h2>
 
BUG#: 13040
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A GRANT or REVOKE statement can report the following error when used within
the context of a stored procedure. The error is encountered when you
attempt to create an object and then grant permission within the same
procedure.
<P>
<PRE>   Msg 267, Level 16, State 1
   Object 'xxx' cannot be found.

</PRE><h2>WORKAROUND</h2>
 
<P>
Use the EXECUTE statement to complete the operation.
<P>
For example:
<P>
create procedure dbo.spTest @strNewName varchar(8)
as
<PRE>   select * into pubs.dbo.tblTest from master..sysusers
   grant select on pubs.dbo.tblTest to PUBLIC
</PRE>go
<P>
can be changed to:
<P>
create procedure dbo.spTest @strNewName varchar(8)
as
<PRE>   select * into pubs.dbo.tblTest from master..sysusers
   execute('grant select on pubs.dbo.tblTest to PUBLIC')
</PRE>go
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152214.htm">Q152214</A></B>: FIX: UPDATE Using Aggregate and Arithmetic Operator Causes AV</h2>
 
BUG#: 15062
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In an UPDATE statement within a stored procedure, if a subquery is used to
set the value of a column and includes one or more aggregate functions with
arithmetic operations, and the arithmetic operation references a column,
then a handled thread level access violation may occur.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
One workaround is to run the UPDATE statement outside of a stored
procedure. Otherwise, break up the query and assign the result of the
subselect to a variable, and then use the variable in the UPDATE statement.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152264.htm">Q152264</A></B>: FIX: Five-way Table Join w/OR May Cause Handled Exception</h2>
 
BUG#: 15089
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A five-way (or more) table join with a search clause introduced by an OR
clause may cause handled exception which terminates the client thread.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Rewrite the query such that the rows not in the join qualify for the query
because of the OR clause.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152615.htm">Q152615</A></B>: FIX: Syntax Error in SELECT List May Cause Handled AV</h2>
 
BUG#: 15027
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The absence of a comma between columns in the SELECT list may cause a
handled AV under some narrow circumstances.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Add the comma to the SELECT clause.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q149243.htm">Q149243</A></B>: FIX: Insert/Select/(NOLOCK) w/ Rollback May Cause Error 3307</h2>
 
BUG#: 13733
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If 'Insert table select * from table (NOLOCK) is called within a
transaction, and this transaction is rolled back afterwards, error 3307
might be seen on both the client side and the SQL Server errorlog:
<P>
<PRE>   Process %d was expected to hold logical lock on page %d. Error while
   undoing log row in database '%s'.  Rid pageid is %d and row number is
   %d. The SQL Server is terminating this process'

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Limited testing has shown that the situation under which this problem has
been encountered is narrow in scope, and the following conditions must be
met:

<OL><P><LI>Select statement has to use (NOLOCK) option.
</OL>2. Table has to have nonclustered index.
3. Transaction has to be rolled back.
<P>
The page number contained in error 3307 is always the leaf level page of
the nonclustered index.
<P>
<P><h2>WORKAROUND</h2>
 

<OL><P><LI>Do not use (NOLOCK) in the select statement.
</OL>2. Use clustered instead of nonclustered index.
3. Do not put this insert statement in transaction.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151583.htm">Q151583</A></B>: FIX: Select Using 'or' From View Defined w/ '&gt;=' Can Cause AV</h2>
 
BUG#: 13873
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A select using 'or' in the where clause on a view that is defined using a
<PRE>'&gt;=' (greater than or equal to) comparison operator in the where clause can
</PRE></OL>result in an a Thread Level Handled AV (Access Violation). The AV occurs
during the process of determining the cost of a particular access plan that
might be used to fulfill the requested select statement.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Changing the information available prior to SQL Server's evaluation of the
query cost can be used to workaround this problem. Removing 'or' from the
where clause as defined in the view, changing the type of comparison
operator used in the view where clause, changing the index on the base
table to 'clustered not unique', changing the columns being referenced by
select on the view, and/or removing the 'or' found in the select where
clause can all affect the occurrence of this problem.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q151681.htm">Q151681</A></B>: FIX: SELECT with CASE Can Cause Parser Error 403</h2>
 
BUG#: 13817
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A SELECT statement against multiple tables that includes a CASE expression
can result in parser error 403:
<P>
<PRE>   Invalid operator for datatype op: UNKNOWN TOKEN type: char

</PRE>To reproduce this problem, the tables should have at least two columns of
datatype CHAR, and three tables must be involved in the SELECT statement.
Also, a join must be specified between two of these tables.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Avoid using the CASE expression by rewriting the query using the IF..ELSE
conditional Transact-SQL statement.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152263.htm">Q152263</A></B>: FIX: Query with Join in Subselect May Cause Handled Exception</h2>
 
BUG#: 13120
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A query with a subselect that contains a join may cause a handled exception
that terminates the client connection.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Rewrite the query, possibly using a normal join instead of the subselect.
<P>
<P>
 
<P><h2><B><A HREF="../SQLSERVER/Q152800.htm">Q152800</A></B>: FIX: GROUP BY Clause without Index Executes More Slowly</h2>
 
BUG#: 14825
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a Transact-SQL query contains a GROUP BY clause and an index is not
defined on the column involved in GROUP BY, the query exhibits better
performance when executed on the SQL server with no service packs or
service pack 1, as opposed to SQL Servers with service pack 2 installed.
This performance anomaly is exhibited only on the Alpha platform.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Sort the columns in the GROUP BY clause. Alternately, define an index
encompassing the columns involved in the GROUP BY clause and make sure the
index is used when grouping the columns in the query.
<P>
<P>
 
<P><h2>ADDENDUM: LIST OF PROBLEMS CORRECTED IN SERVICE PACK 1</h2>
 
<P>
For the complete description of these bugs, please see the Microsoft
Knowledge Base article <B><A HREF="../SQLSERVER/Q136575.htm">Q136575</A></B>.

<UL><LI>FIX: Memory Leak in NTWDBLIB.DLL on Failed dbopen()
<LI>FIX: ODBC 6.0 Driver Sometimes Cannot Get Results w/ dbmsspx3
<LI>FIX: Updating a Text Column Results in a Table Scan
<LI>FIX: Cannot Insert BLOB Data Larger Than 128k w/ SQLSetParam
<LI>FIX: Repl Synch Fails with Table Names That Have Ext Chars
<LI>FIX: EXECUTE Command w/ a Local Variable Can Cause Thread AV
<LI>FIX: DUMP DATABASE w/ Variable Device Name in SP May Cause AV
<LI>FIX: IN Condition with More Than 15 Values May Fail
<LI>FIX: Unexpected Behavior During Object Resolution
<LI>FIX: DBCC NEWALLOC Enhanced to use RA for Performance
<LI>FIX: Query Plan Inconsistent If Search Value &gt; Last Step
<LI>FIX: Optimizer Hint for Index Name Fails in View
<LI>FIX: Open Cursor Statement in SP Sets Variables to NULL
<LI>FIX: Lvl 16 Error on Temp Tbl From SP w/ &gt; 64 Pgs May Cause AV
<LI>FIX: SELECT INTO w/ Correlated Subqueries May Cause AV
<LI>FIX: DUMPs May Halt Queries With Triggers
<LI>FIX: Create Worktable for Oversized Table Can Stop the Server
<LI>FIX: ALTER TABLE Allows Nulls in PRIMARY KEY
<LI>FIX: AV When Creating Reformat Plan of SP Containing Join
<LI>FIX: Updating a Record w/ NULL Text Field Can Cause 2574 Error
<LI>FIX: Add Constraint Causes Identity-Column Inserts to Fail
<LI>FIX: Cannot Create a Qualified Table With a Check Constraint
<LI>FIX: SET ARITHABORT ON Inadvertently Causes an Insert to Fail
<LI>FIX: Cursor Declaration In a Stored Procedure Causes Client AV
<P>
<P>
</UL> 
<P><h2>ADDENDUM: LIST OF PROBLEMS CORRECTED IN SERVICE PACK 2</h2>
 
<P>
For the complete description of these bugs, please see the Microsoft
Knowledge Base article <B><A HREF="../SQLSERVER/Q138399.htm">Q138399</A></B>.

<UL><LI>FIX: SELECT During UPDATE STATISTICS Can Terminate w/ Msg 814
<LI>FIX: DBCC NEWALLOC May Not Detect TEXT Extent Inconsistencies
<LI>FIX: INSERT Into w/ IDENTITY Col Inside Trigger Causes AV
<LI>FIX: SELECT INTO From Table w/ IDENTITY Col Causes Handled AV
<LI>FIX: Update of Primary Key Causes Repl Custom St. Proc to Fail
<LI>FIX: Multiple ORDER BY DESC May Cause 614 Errors
<LI>FIX: DBCC SQLPERF(THREADS) Fails w/ AV on 6.0 SP 1
<LI>FIX: SELECT w/ IN Clause Causes AV w/ Subquery SELECT NULL
<LI>FIX: Procedure for Repl. Can Fail When Referencing NCI
<LI>FIX: Repl w/ Ext Chars on Non-ANSI Char Sets May Fail
<LI>FIX: RPC w/ Text/Image Parameters May Cause Handled AV
<LI>FIX: Syntax Error Reporting Disabled w/ St Proc &gt;68 Pages
<LI>FIX: Drop Procedure Gives 3702 Error if Cursor Not Deallocated
<LI>FIX: Users Blocking With No Locks Displayed in sp_lock
<LI>FIX: Invalid Column in Subquery May Result in Handled AV
<LI>FIX: Milliseconds Are Not Replicated w/ DATETIME Fields
<LI>FIX: Cursor w/ Union May Cause Errors if Not First in Batch
<LI>FIX: Handled AV If Many Users Dropping/Creating Tables
<LI>FIX: BEGIN TRAN After OPEN CURSOR May Not Commit
<LI>FIX: Explicit Insert of Identity Value in SP Can Cause AV
<LI>FIX: Error 3307 Running Update Stats After 1105 Error
<LI>FIX: LogReader Can Fail On sp_repldone After Unsubscribing
<LI>FIX: LogReader Can Fail On sp_repldone Using Partitioning
<LI>FIX: Timestamp Col of Temp Table Set to 0 When Inserting Row in SP
<LI>FIX: AV or Error 632 on Update w/ Select Count(distinct) Subqu
<LI>FIX: Cursor Using Stored Proc After LOAD DB May Get 225 Error
<LI>FIX: Inserts on SMP Computer Can Cause Error Message 1203
<LI>FIX: Stored Procedures Can Corrupt Themselves in Small Caches
<LI>FIX: A Cursor in a St. Procedure Can Cause an Access Violation
<LI>FIX: A View With an Outer Join Can Cause An Access Violation
<LI>FIX: SELECT TEXT Columns with FOR BROWSE Holds sh_page Locks
<LI>FIX: dbopen Memory Leak of 32K On Failed Login Attempt
<LI>FIX: SELECT From View w/ Data Length &gt; 1962 Bytes May Hang Svr
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sp3 database patch service pack<BR>
Keywords          : SSrvGen kbfixlist6.00.sp3<BR>
Version           : 6.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbref<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
