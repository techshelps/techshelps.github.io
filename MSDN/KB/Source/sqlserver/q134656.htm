

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Details and Strategies for Using DBCCs </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q134656">
<META NAME="KBModify" CONTENT="1997/04/30">
<META NAME="KBCreate" CONTENT="1995/08/08">
<META NAME="Keywords" CONTENT="kbusage SSrvAdmin SSrvTran_SQL SSrvWinNT">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT=" Summary:  Microsoft SQL Server's Database Consistency Check (DBCC) operations serve multiple purposes:  1. Detection of almost all forms of data and index inconsistencies, or    corruption at the database or table level.  2. Correction of some of th...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QABI,QABH,QAZV,QBWS,QAML,QDIU,QA3W,QAUR,QAAP,QAYY,QBXS,QAOC,QAL2,QAGU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Details and Strategies for Using DBCCs</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q134656</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 4.2x and 6.0
</UL> 
<P>
<P><h2>Summary:</h2>
 
<P>
Microsoft SQL Server's Database Consistency Check (DBCC) operations serve
multiple purposes:

<OL><P><LI>Detection of almost all forms of data and index inconsistencies, or
   corruption at the database or table level.

<P><LI>Correction of some of these problems.

<P><LI>Reporting on usage of various internal system resources.

<P><LI>Detailed contents of internal system structures which can be useful for
   debugging purposes.
<P>
</OL>This article provides additional information and explanation of using the
DBCC statement and its options.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
All of the first set (from the above list) of DBCC commands are documented
in the SQL Server documentation set (both printed and Books Online in
version 6.0). Some of the second and third groups are also documented
except where their ungoverned use might lead to damaged data or user
confusion. The fourth set frequently changes from version to version and is
not documented. In the rare circumstances where they are used, this last
set cannot be counted on to stay consistent or even to continue to exist
between versions of Microsoft SQL Server.
<P>
DBCCs should be used as part of your backup and recovery strategy. SQL
Server's DUMP process does no consistency or corruption checking other than
making sure the page numbers are correct when dumped. Most forms of
corruption will simply be dumped with the data pages, possibly making the
database or log dumps useless. Regular use of DBCC NEWALLOC and DBCC
CHECKDB should be in conjunction with database and log dumps to verify the
state of the database. A database dump is only as good as the last clean
DBCC check.
<P>
<P>
DBCCs can be run while users are on the system since they use shared
locks on the tables as they scan them. For complete accuracy, the
database should be in single user mode while DBCC CHECKALLOC or DBCC
NEWALLOC is being run, or transient errors may show up in the reports. If,
however, a DBCC runs with no errors, single mode or not, it should mean
there are no problems. For large production systems, the length of time
required for a full DBCC to run can be critical, so testing and planning
before system rollout should always include DBCC checks to determine how
long they are going to take, and what effect they might have on the users
as they are run. The balancing factors of data integrity versus system
performance and downtime can help system administrators determine how often
they need to run DBCCs.
<P>
The SQL Executive service can make scheduling and running the DBCCs easy
once the schedule is determined, and the new SQL Server version 6.0 options
for DBCC commands allow informational messages to be screened so that only
severe errors are output. For 24 hour a day production systems, it can be
difficult to schedule time slots for DBCC checks. In these cases, there
most often is some type of "hot backup" server involved. The DBCC checks
can be run against this backup server instead of the main server if
DUMP/LOAD is being used to maintain the backup. If errors show up on the
backup server, then DBCCs should be run on the production server to confirm
that the corruption is on both machines, as it is possible that the method
used to DUMP/LOAD the database and transaction logs actually caused the
corruption (for instance, the act of copying files over the network might
cause the file itself to become corrupt.)
<P>
You should note that SQL Server version 6.0 replication uses a totally
different method of data transfer, and clean DBCCs against a backup server
replicated in this manner are meaningless as a measure of the primary
server's data consistency.
<P>
Other DBCC commands such as FIX_AL and DBREPAIR should only be used
as instructed either in the SQL Server documentation or by your primary SQL
Server support provider. If used in the wrong context, your data could be
damaged or even destroyed.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sql6 fragmentation<BR>
Keywords            : kbusage SSrvAdmin SSrvTran_SQL SSrvWinNT<BR>
Version             : 4.2x 4.21a 6.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
