

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: How to Change the Sleep Value Used by Dbdataready </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159234">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1996/11/11">
<META NAME="Keywords" CONTENT="kbusage SSrbDB_Lib">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  Normal DB-Library asynchronous query processing is handled by calling first dbsqlsend and then dbdataready in a loop until dbdataready returns TRUE. By default, the dbdataready function will sleep for 250 ms.  In situations where you have written a...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QABA,QAY5,QAGI,QAJQ,QBXS,QABM,QBVV,QBAO,QAU3,QAMR,QAB5,QBE7,QBE6,QBWS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: How to Change the Sleep Value Used by Dbdataready</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159234</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 and 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Normal DB-Library asynchronous query processing is handled by calling first
dbsqlsend and then dbdataready in a loop until dbdataready returns TRUE. By
default, the dbdataready function will sleep for 250 ms.
<P>
In situations where you have written asynchronous query processing you may
not want the dbdataready call to sleep for 250 ms. For example, if you have
several queries that generally run in 50 ms, you could theoretically run
five of the same queries in the 250 ms time frame. There is a registry
setting to control the sleep duration for the client computer.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
WARNING: Using the Registry Editor incorrectly can cause serious, system
wide problems that may require you to reinstall Windows NT to correct them.
Microsoft cannot guarantee that any problems resulting from the use of the
Registry Editor can be solved. Use this tool at your own risk.
<P>
<PRE>   Registry branch: HKEY_LOCAL_MACHINE on LOCAL_MACHINE
   Key path:        Software\Microsoft\MSSQLServer\Client\DB-Lib
   Key value:       DataReadySleep
                    REG_DWORD

</PRE>The default value is 250 ms; the range of allowed values is 0 ms to
1,000 ms. To ignore the sleep operation, set the value to 0xFFFFFFFF.
<P>
Be careful when modifying this setting, because setting the value to 0 is
not the same as 0xFFFFFFFF. The 0xFFFFFFFF value is checked in the
dbdataready function, and the sleep function is not called, whereas 0 is
passed to the Win32 sleep function. The following is an excerpt from the
Win32 documentation on the sleep call:
<P>
<PRE>   A value of zero causes the thread to relinquish the remainder of its
   time slice to any other thread of equal priority that is ready to run.

</PRE>You must take into account that NOT sleeping may actually flood the network
layers with calls to check the status of the connection. The best setting
is generally two to four microseconds longer than the actual runtime of the
query. Because you cannot control outside factors (such as the network load
or server load) on any given day, it may be advantageous to set the value
to 0xFFFFFFFF for those applications for which performance is critical, and
implement your own sleep strategy. Some applications are designed to allow
this parameter to be configurable, while others use an elaborate scheme to
dynamically adjust the wait factor, based on the query or a prior history.
In either case, you are introducing an arbitrary delay that can effect
performance. Finally, in certain cases it is acceptable to thread the query
out and run it with dbsqlexec.
<P>
A simple workaround other than (or in conjunction with) setting the
DataReadySleep is to switch to a network library such as TCP/IP. TCP/IP
does not use the same mechanism to determine when data has been returned
from the server, and the reduced overhead may improve performance.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbusage SSrbDB_Lib<BR>
Version             : 6.0 6.5<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
