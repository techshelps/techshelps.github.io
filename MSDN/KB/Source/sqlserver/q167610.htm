

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Assessing Query Performance Degradation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q167610">
<META NAME="KBModify" CONTENT="1997/09/02">
<META NAME="KBCreate" CONTENT="1997/04/28">
<META NAME="Keywords" CONTENT="SSrvGen kbusage">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  Microsoft SQL Server's cost-based optimizer evaluates the cost of each query based on various parameters available to it at compile and execution time. The goal of the optimizer is to minimize logical and physical page reads and formulate the most ...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAU3,QAMR,QDMG,QAJQ,QAFH,QADK,QACF,QAG7,QACE,QBWS,QAYV,QATJ,QASR,QDO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Assessing Query Performance Degradation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q167610</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 4.2, 6.0, and 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft SQL Server's cost-based optimizer evaluates the cost of each
query based on various parameters available to it at compile and execution
time. The goal of the optimizer is to minimize logical and physical page
reads and formulate the most efficient plan. Often times it becomes
necessary to compare query performance between different service packs or
versions of Microsoft SQL Server.
<P>
The steps below outline the basic steps to follow in such comparisons.
It is assumed that these manipulations are done in a test environment, and
the databases are assumed to be structurally consistent (that is, DBCC
CHECKDB, DBCC NEWALLOC and DBCC TEXTALL show no errors).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step 1</h3>
 
<P>
Isolate the query in question from your application. Apart from the
SHOWPLAN, you must enable STATISTICS IO and STATISTICS TIME before
running the query (refer to the Books Online for more information about
setting these three set statements on). You must run UPDATE STATISTICS on
all objects involved in the query. If the query is in the form of a stored
procedure or view, it must be re-created and rerun.
<P>
Statistical significance is important in this instance, because metrics are
at the heart of the problem being analyzed. Consequently, you need to run
the query in question several times, as the required data in the cache
may affect query performance.
<P>
For a valid comparison, the queries must be the same, and must be running
against the same data set.
<P>
There must be no change in the type and number of indexes or the number of
data pages. If you need to move the database to another server to run
additional tests, you can retain the indexes and number of data pages by
backing up and restoring the database.
<P>
<P><h3>Step 2</h3>
 
<P>
Compare the query on the same hardware, firmware, operating system version,
and identical SQL Server configuration. The amount of memory allocated for
SQL Server, the number of processors, and other hardware configurations may
affect the running time of the query.
<P>
If you are comparing performance between SQL Server service packs, it may
be necessary to install one service pack, run the query (as in step 1
above), collect the output, and then repeat the tests with the original
service pack.
<P>
If you are comparing performance between versions, ideally, both versions
should be loaded on the same computer and run one at a time. To do this,
you can load the different versions into different directories. You can use
the RegistryRebuild option of setup to install registry entries for the
particular version being loaded.
<P>
For example, if you are comparing SQL Server 6.0 performance against SQL
Server 6.5 for a particular query, do the following:

<OL><P><LI>Install SQL Server 6.0 on the computer, and assuming the original
   database is from SQL Server 6.0, run the query (as in step 1 above).

<P><LI>Collect the output.

<P><LI>Stop the server and remove registry entries for SQL Server 6.0.

<P><LI>Install SQL Server 6.5 in a different directory and run the query again,
   as in step 1 above.
<P>
</OL><h3>Step 3</h3>
 
<P>
Review the output collected and compare the showplans. If the showplans are
identical and the logical and physical reads seem reasonably the same but
the query takes longer, look at and compare the parse and compile times
(the SQL Server parse and compile time is: cpu time = xx ms).
<P>
Also determine the execution time (the SQL Server execution time is: cpu
time = xx ms; elapsed time = xx ms).
<P>
Save all your findings. If there is a considerable amount of degradation in
the compile time or execution time of a query when using identical plans,
the optimizer may have incorrect estimates. This may warrant further study,
and a technician may be able to further assist you.
<P>
You can use trace flags 302 and 310 in analyzing the query. You can set
these flags by doing the following before running query:
<P>
<PRE>   DBCC TRACEON(3604,302,310)

</PRE></OL>Oftentimes such comparisons reveal that the showplans are different. This
in itself does not mean the optimizer is not doing its job properly. All
this means is that the optimizer chose a plan whose cost was higher. If the
plans are different, you can still attempt to tune the query so that the
optimizer attempts to use (or is forced to use) the plan you want.
Sometimes you will have to accept the plan chosen by the optimizer. You can
attempt to tune the query by reading the good query plan, identifying the
changes between the plans, and making the necessary changes to the query
generating the bad plan. You can achieve this by forcing the indexes that
were used in the good plan or by forcing query plans. Please review the
section Analyzing queries in Books Online for further information.
 
<PRE>Keywords          : SSrvGen kbusage
Version           : 4.2 6.0 6.5
Platform          : WINDOWS
Issue type        : kbhowto
Solution Type     : Info_Provided</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
