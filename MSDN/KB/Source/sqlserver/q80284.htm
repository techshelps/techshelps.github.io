

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Mix of Aggregate Functions &amp; Column Names w/out GROUP BY </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80284 ">
<META NAME="KBModify" CONTENT="1997/04/28">
<META NAME="KBCreate" CONTENT="1992/01/23">
<META NAME="Keywords" CONTENT="kbprg SSrvDB_Lib SSrvGen SSrvTrans SSrvWinNT">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  When both aggregate functions and table columns are included in the select list of a query without the GROUP BY clause, the WHERE clause applies only to the rows included in the calculation of the aggregate function, but does not restrict the rows ...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAUD,QAY5,QAPN,QAL3,QABO,QBV8,QAB9,QA5V,QA2Q,QAK9,QAE1,QALW,QBVV,QATQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Mix of Aggregate Functions &amp; Column Names w/out GROUP BY</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80284 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server version 4.2 for OS/2
  - Microsoft SQL Server version 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When both aggregate functions and table columns are included in the
select list of a query without the GROUP BY clause, the WHERE clause
applies only to the rows included in the calculation of the aggregate
function, but does not restrict the rows returned by the query.
Similarly, if a HAVING clause is used without a GROUP BY clause (which
is proper in SQL Server), a HAVING clause restricts the rows returned
by the query but does not affect the calculation of the aggregate
function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Consider the following query
<P>
<PRE>   select count (stor_id), stor_id from stores WHERE stor_id="7066"

</PRE>which returns the following results:
<P>
<PRE>          stor_id
   ------ -------
       1  7066
       1  7067
       1  7131
       1  8042
       1  6380
       1  7896

</PRE>Note that the condition in the WHERE clause does not restrict the rows
returned.
<P>
Similarly, the following query
<P>
<PRE>   select count (stor_id), stor_id from stores HAVING stor_id="7066"

</PRE>returns the following results:
<P>
<PRE>          stor_id
   ------ -------
       6  7066

</PRE>Note also that the condition in the HAVING clause does not affect the
calculation of the aggregate function.
<P>
If both WHERE and HAVING are used, then both the returned rows and the
calculation of the aggregate function are restricted. The following
query shows this clearly:
<P>
<PRE>   select count (stor_id), stor_id from stores WHERE stor_id="7066"
                                               HAVING stor_id="7066"

</PRE>This query returns:
<P>
<PRE>          stor_id
   ------ -------
       1  7066

</PRE>The above properties of the WHERE and HAVING clauses also apply to all
other types of aggregate functions.
<P>
Although it is generally considered meaningless to mix column names
with aggregate functions in the select list without GROUP BY, it is
used in practice anyway. Therefore, special caution should be taken
when using these types of queries because users can easily
misinterpret their meaning and get "unexpected" query results.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Windows NT dblib<BR>
Keywords            : kbprg SSrvDB_Lib SSrvGen SSrvTrans SSrvWinNT<BR>
Version             : 4.2 | 4.2<BR>
Platform            : OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
