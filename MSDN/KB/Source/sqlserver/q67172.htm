

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Using a Stored Procedure in a Cursor Definition </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67172 ">
<META NAME="KBModify" CONTENT="1997/05/05">
<META NAME="KBCreate" CONTENT="1990/11/22">
<META NAME="Keywords" CONTENT="kbprg SSrvCobol SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The code listed below demonstrates an extra feature of Microsoft Embedded SQL for COBOL and Microsoft SQL Server--the ability to use a stored procedure in a cursor definition.  This sample program uses sp_who in the cursor definition to determine w...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAO2,QBE7,QBE6,QAH2,QBVV,QA5C,QA5V,QAB9,QDKS,QAOI,QAGI,QAC6,QAFR,QAX6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Using a Stored Procedure in a Cursor Definition</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67172 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
<PRE>  - Microsoft Embedded SQL version 4.2 for COBOL
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code listed below demonstrates an extra feature of Microsoft
Embedded SQL for COBOL and Microsoft SQL Server--the ability to use a
stored procedure in a cursor definition.
<P>
This sample program uses sp_who in the cursor definition to determine
who is currently logged onto the SQL server. The basic idea is to
declare the cursor, prepare the cursor statement as a call to a stored
procedure, open the cursor, and fetch each row until an error is
encountered or all rows have been returned.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For more information on this topic, please refer to the "Microsoft
Embedded SQL for COBOL Programmer's Reference" manual.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>    WORKING-STORAGE SECTION.

    EXEC SQL INCLUDE SQLCA END-EXEC

    EXEC SQL BEGIN DECLARE SECTION END-EXEC
    01  spid        pic x(6).                 *&gt; sp_who.spid
    01  id-status   pic x(10).                *&gt; sp_who.status
    01  loginame    pic x(12).                *&gt; sp_who.loginame
    01  hostname    pic x(10).                *&gt; sp_who.hostname
    01  blk         pic x(3).                 *&gt; sp_who.blk
    01  dbname      pic x(10).                *&gt; sp_who.dbname
    01  cmd         pic x(16).                *&gt; sp_who.cmd
    01  prep        pic x(80).                *&gt; prepared statements
    EXEC SQL END DECLARE SECTION END-EXEC

    PROCEDURE DIVISION.

   * Declare cursor, prepare stored procedure call, open cursor, *
   * fetch rows, close cursor. *
    EXEC SQL
      declare cur cursor for who
    END-EXEC
    if sqlcode not = 0
      perform sql-error
    else
      move "sp_who" to prep
      EXEC SQL
        prepare who from :prep
      END-EXEC
      if sqlcode not = 0
        perform sql-error
      else
        EXEC SQL
          open cur
        END-EXEC
   * Ignore warnings about truncated character strings. *
        if sqlcode not = 0 and sqlcode not = 1
          perform sql-error
        end-if
        display spaces
        display "spid  status    loginame    hostname  blk db
   -            "name    cmd"
        display "----  --------- ----------- --------- --- --
   -            "------- ----------------"
   * When no more rows are returned, sqlcode = 100. *
        perform fetch-rows until sqlcode &lt; 0 or sqlcode = 100
        EXEC SQL
          close cur
        END-EXEC
        if sqlcode not = 0
          perform sql-error
        end-if
      end-if
    end-if
    stop run.

    fetch-rows.
   * Fetch each row and display it. *
    EXEC SQL
      fetch cur into :spid, :id-status, :loginame,
                          :hostname, :blk, :dbname, :cmd
    END-EXEC
    if sqlcode = 0
      display spid id-status loginame hostname blk " " dbname cmd
    else
      if sqlcode not = 100
        perform sql-error
      end-if
    end-if.

    sql-error.
    display "SQL error SQLCODE=" sqlcode.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbprg SSrvCobol SSrvProg<BR>
Version             : 4.2 | 4.2<BR>
Platform            : MS-DOS OS/2<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
