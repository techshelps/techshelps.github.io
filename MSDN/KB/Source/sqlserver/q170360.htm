

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Information on CPU and Physical_io Columns of Sysprocesses </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q170360">
<META NAME="KBModify" CONTENT="1997/10/01">
<META NAME="KBCreate" CONTENT="1997/06/18">
<META NAME="Keywords" CONTENT="SSrvGen kbusage">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The CPU and physical_io columns of the sysprocesses system table are often queried to inspect the status of running processes. SQL Enterprise Manager queries these columns when you click Current Activity on the Server menu, and then click the Detai...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QBVV,QAY5,QAXB,QBJC,QBD2,QAY2,QAM9,QALX,QAE1,QDIR,QAYY,QASR,QAGI,QAC1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Information on CPU and Physical_io Columns of Sysprocesses</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q170360</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 and 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The CPU and physical_io columns of the sysprocesses system table are often
queried to inspect the status of running processes. SQL Enterprise Manager
queries these columns when you click Current Activity on the Server menu,
and then click the Detail Activity tab. If an operation is taking a long
time to complete, some questions may arise about the meaning of these
columns and how the information is calculated. This article is intended to
provide answers to these questions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Each database connection forms a row in sysprocesses, sometimes called a
Server Process ID, or spid. In SQL Server terminology, each connection is
also called a "process," but this does not imply a separate process context
in the usual sense. In SQL Server 6.0 and 6.5, each process is roughly
analogous to and serviced by a separate operating system thread. Each
database connection also consists of server data structures that keep track
of process status, transaction state, locks held, and so on. One of these
structures is called the Process Slot Structure (PSS), of which there is
one per connection. The server scans the list of PSSs to materialize the
sysprocesses virtual table. The CPU and physical_io columns from
sysprocesses are derived from the equivalent values in each PSS.
<P>
Sysprocesses.cpu indicates the CPU milliseconds of user-mode time the
process has consumed. It is derived from the Win32 API GetThreadTimes().
See the Win32 documentation for more details. Sysprocesses.cpu is updated
at the start of each language or remote procedure call (RPC) event, when
doing cursor asynchronous keyset generation, or when sending a data buffer
or done token to the client. See the SQL Server documentation under "Open
Data Services" for details on language and RPC events.
<P>
Therefore, sysprocesses.cpu is accurate but only updated at certain points.
For lengthy operations that do not return any data to the client, it may
not be updated for long intervals of time. Some of these operations may
include DBCC CHECKDB, CREATE INDEX, database recovery, long-running joins,
and so on. From a practical standpoint, it may often appear to be updated
only at the end of each command.
<P>
If you need to determine if a spid is consuming CPU resources under
conditions where sysprocesses.cpu is not incrementing, you can do this by
correlating the spid to a particular operating system thread and inspecting
it with Windows NT Performance Monitor. For more information, see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../SQLSERVER/Q117559.htm">Q117559</A></B>
   TITLE     : How to Correlate Spid, Kpid, and Thread Instance

</PRE>Sysprocesses.physical_io indicates synchronous reads and writes done by a
specific spid. However, after SQL Server was enhanced with read-ahead,
lazywriting and asynchronous checkpointing (which use separate threads), it
was no longer easy to decide which user spid should be charged for IO done
by these common service threads.
<P>
I/O done by read-ahead, lazywrite, checkpoint, and some other operations
are not counted in the per-spid physical_io counter. Almost all non-read-
ahead physical reads are counted because each user spid does its own
physical read, but almost no physical writes are counted because user spids
rarely do synchronous writes.
<P>
During normal processing, synchronous writes are only done to flush the new
page after a split. Logwrites are not included in the per-spid counters
because a logwrite may contain data from many spids. All IO reported by
the per-spid counters is 2-KB IO.
<P>
From a practical standpoint, sysprocesses.physical_io will usually be
updated more frequently than sysprocesses.cpu. This is because each
synchronous read or write updates it. However for operations where the bulk
of the spid's I/O is serviced by lazywriter, read ahead, or checkpoint
threads, the I/O counter will not appear to increment.
<P>
Also, if the read/write operations are serviced out of SQL Server's cache
and no physical I/O is done, sysprocesses.physical_io will not increment.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: column<BR>
Keywords          : SSrvGen kbusage<BR>
Version           : WINNT:6.5 6.0<BR>
Platform          : winnt<BR>
Issue type        : kbinfo<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
