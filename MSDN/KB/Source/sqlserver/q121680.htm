

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Asynchronous Query Execution Using VBSQL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121680">
<META NAME="KBModify" CONTENT="1997/04/30">
<META NAME="KBCreate" CONTENT="1994/10/16">
<META NAME="Keywords" CONTENT="kbinterop SSrvVisB">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  This article provides the basic information necessary to execute a query asynchronously in a SQL Server front-end using the Microsoft Visual Basic Library for SQL Server (VBSQL).  MORE INFORMATION  Queries sent from a Visual Basic front-end to SQL ...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAUD,QAGI,QBS0,QDL9,QBWO,QBWN,QACF,QARL,QAL3,QAIF,QAH4,QALW,QAB9,QA59 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Asynchronous Query Execution Using VBSQL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121680</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides the basic information necessary to execute a query
asynchronously in a SQL Server front-end using the Microsoft Visual Basic
Library for SQL Server (VBSQL).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Queries sent from a Visual Basic front-end to SQL Server can be sent either
synchronously or asynchronously. Synchronous query execution is done by
calling SqlExec% to execute the query. The client program will pause
execution on the SqlExec% line until the query has been completely
processed by the server, and the results returned to the client program.
<P>
Because Microsoft Windows is a cooperative multitasking environment, it
may be desirable to allow the user to perform other tasks while a long-
running query is executing at the SQL Server. This can be accomplished by
using asynchronous query execution.
<P>
Asynchronous query execution involves using SQLSend% to send the query to
SQL Server, looping until SQLDataReady% returns SUCCEED (1), and then
calling SqlOk% to verify the correctness of the command batch. Inside of
the SqlDataReady% loop, it is necessary to call the Visual Basic function
DoEvents() so that other Windows events can be processed.
<P>
Below is an example code fragment that illustrates the function calls:
<P>
<PRE>   Result% = SqlCmd%(SQLConn%, Query$)
   Result% = SqlSend%(SQLConn%)
   While SQLDataReady%(SQLConn%) = 0
       dummy% = DoEvents()
   Wend
   Result% = SqlOk%(SQLConn%)

</PRE>The SqlDataReady% function will return SUCCEED as soon as there is data
available for processing. Under certain circumstances, some data may be
available for processing at the client, but SqlOk% will still take some
time to return. This is because SqlOk% verifies correctness of the entire
command batch and can only return SUCCEED when an entire result set is
available for processing with SqlResults%.
<P>
Therefore, it is possible to get into a situation where the SQL Server
begins to send data packets back to the client which causes SqlDataReady%
to correctly return SUCCEED but more processing must be done at the server,
and more data must be sent back to the client before SqlOk% can complete
its work and return SUCCEED.
<P>
If the above situation occurs, any queries or stored procedures involved
would need to be restructured and sent in pieces to avoid a long delay on
the call to SqlOk%.
<P>
NOTE: The same technique for asynchronous query execution could be used in
a Windows application using DB-Library (DB-Lib) for C. The VBSQL function
calls would need to be changed to their DB-Library for C equivalents. Also,
the call to DoEvents() would need to be replaced with appropriate Windows
message-handling code.
<P>
For more information on DB-Library programming techniques, see the article
"Developing Microsoft Windows-Based Applications for Microsoft SQL Server"
in the SQL Server Resource Kit, which is available on the Microsoft Technet
CD.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: VB<BR>
Keywords            : kbinterop SSrvVisB<BR>
Version             : 4.2 4.21<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
