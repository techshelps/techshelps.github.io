

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Use of DBCC GAMINIT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q150748">
<META NAME="KBModify" CONTENT="1997/04/08">
<META NAME="KBCreate" CONTENT="1996/05/08">
<META NAME="Keywords" CONTENT="kbprg kbusage SSrvTran_SQL">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  SQL Server space allocation is accelerated by an internal structure called the Global Allocation Map (GAM). The command DBCC GAMINIT can proactively populate the GAM, which in a few cases on large databases can give better allocation performance. I...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW5,QAZV,QABM,QBWA,QBVV,QBBI,QABH,QAGX,QBV8,QAKC,QAB9,QBXV,QDMW,QBWS,QBC6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Use of DBCC GAMINIT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q150748</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 &amp; 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
SQL Server space allocation is accelerated by an internal structure called
the Global Allocation Map (GAM). The command DBCC GAMINIT can proactively
populate the GAM, which in a few cases on large databases can give better
allocation performance. It is generally not necessary to use this command.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When SQL Server needs to allocate a new page, this takes place in a
sequence designed to keep similar data together. This process involves
scanning allocation pages and examining them for free space on the 255 page
allocation unit for which they control allocation. Allocation pages occur
at regular 256-page intervals throughout the database. A large database may
have so many allocation pages that scanning them for free space could take
too long. Therefore, SQL Server maintains a per-database memory-resident
structure called the Global Allocation Map (GAM), which is a bitmap
indicating which allocation pages have already been examined and found to
have no free space. By examining the GAM, SQL Server can avoid needlessly
scanning allocation pages that have no free space. The GAM is reconstructed
on-the-fly as allocation pages are examined and found to be full.
<P>
In some cases, if a large database contains long runs of fully allocated
space separated by a few free pages, and if the GAM has not been previously
initialized for large regions of the database, then transactional
throughput can be punctuated by periods when the server is searching for
free space. This will not usually be noticed in a typical production
environment.
<P>
However, it may be beneficial in some cases to proactively populate the GAM
using the command DBCC GAMINIT. This will cause SQL Server to scan all
allocation pages in the specified database and fully populate the GAM for
that database. The command would typically be run once for a particular
database after SQL startup to populate the GAM. Once populated, the GAM
will stay in effect until the database server is restarted.
<P>
Following is the correct syntax:
<P>
<PRE>   DBCC GAMINIT [(dbid)]

</PRE>Where dbid is the dbid number of the database. If not specified, the
current database is used. Usage example that populates the GAM for dbid 4:
<P>
<PRE>   DBCC GAMINIT(4)

</PRE>Usage example which omits the dbid number, using the current database:
<P>
<PRE>   USE PUBS
   GO
   DBCC GAMINIT
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: DBCC GAMINIT<BR>
Keywords            : kbprg kbusage SSrvTran_SQL<BR>
Version             : 6.0 6.5<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
