

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Canceled Transaction in a Temp Table Causes X and U Locks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159747">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1996/11/20">
<META NAME="Keywords" CONTENT="kbusage SSrvGen SSrvLock">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  If you create a local temporary table in a stored procedure, enter a user- defined transaction, and then cancel the query, exclusive and update locks appear on the tempdb system catalog. These locks persist until the transaction is ended with a COM...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGB,QAGC,QABT,QAA8,QBXJ,QBF0,QABM,QAJ6,QBF4,QALQ,QAK7,QACF,QAB9,QBVV,QAZV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Canceled Transaction in a Temp Table Causes X and U Locks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159747</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
<P>
SUMMARY
 
<P>
If you create a local temporary table in a stored procedure, enter a user-
defined transaction, and then cancel the query, exclusive and update locks
appear on the tempdb system catalog. These locks persist until the
transaction is ended with a COMMIT or a ROLLBACK, or the client
disconnects. The locks blocks other data definition language (DDL) within
tempdb. This is expected design behavior.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The scope of temporary tables created within a stored procedure is the
boundary of that stored procedure. After exiting the stored procedure, the
temporary tables are automatically dropped. Canceling a query running in a
user-defined transaction cancels the query and the batch, but does not
abort the transaction. For more information, see the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../SQLSERVER/Q117143.htm">Q117143</A></B>
   TITLE     : When and How to Use dbcancel() or sqlcancel()

</PRE>This behavior may cause the non-intuitive situation of locks that
materialize in tempdb only after a query is canceled, and that persist
until the end of the transaction. Because canceling the query means that
the temporary tables must be dropped, system catalog modifications are
required. Yet if the cancellation is within a user-defined transaction, all
exclusive and update locks acquired (such as those to modify the catalog
when the server drops the temporary tables) must be retained until the end
of the transaction. This typically includes locks on sysobjects,
sysindexes, syscolumns, syscomments, sysprotects, and syskeys in tempdb.
<P>
This scenario may occur if you run a stored procedure that creates a
temporary table, enters a user-defined transaction, and then gets blocked
on a lock or times out (or the user cancels the query). Before the
cancellation, you do not see locks on the tempdb system catalog. After the
cancellation, locks suddenly appear. This can be reproduced by using the
following statements:
<P>
<PRE>   create procedure p1 as
   create table #t1 (a int)
   begin transaction
   waitfor delay "00:55:55"

   /* EXEC p1, then run sp_lock and note that no locks are acquired. */
   /* Cancel the query with the red button in ISQL/w or CTRL+C in ISQL. */
   /* After cancellation, run sp_lock from another connection, and note
   /* the locks. Issuing ROLLBACK TRANSACTION then drops the locks. */

</PRE>It is important for applications to carefully manage transactional
boundaries with respect to query cancellation. As discussed in article
<B><A HREF="../SQLSERVER/Q117143.htm">Q117143</A></B> (noted above), canceling a query does not cause the transaction to
be aborted. This is by design. In the case of a large multi-statement
transaction, the programmer may want to cancel a single query within the
transaction without aborting the entire transaction. This allows
flexibility in application design. However if queries are canceled without
exercising proper transactional care, locking and concurrency problems may
arise. This problem may occur in a variety of scenarios, not just the one
described in this article.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbusage SSrvGen SSrvLock<BR>
Version             : 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
