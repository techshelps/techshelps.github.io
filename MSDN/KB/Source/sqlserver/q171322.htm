

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: "SET TRANSACTION ISOLATION LEVEL" Ignored in Stored Proc </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171322">
<META NAME="KBModify" CONTENT="1997/07/16">
<META NAME="KBCreate" CONTENT="1997/07/14">
<META NAME="Keywords" CONTENT="kbbug6.50 kbusage SSrvStProc SSrvTran_SQL">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="BUG #: 17076   If you code  SET TRANSACTION ISOLATION LEVEL           within a stored procedure, the statement is ignored during the execution of that stored procedure. The isolation level in effect for the connection that first executes the stored p...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB9,QBXS,QAA3,QAPN,QAH4,QABM,QAS1,QBG2,QAI5,QAGI,QDMG,QBXJ,QBV8,QAKP,QA9N V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: "SET TRANSACTION ISOLATION LEVEL" Ignored in Stored Proc</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171322</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
BUG #: 17076
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you code "SET TRANSACTION ISOLATION LEVEL &lt;option&gt;" within a stored
procedure, the statement is ignored during the execution of that stored
procedure. The isolation level in effect for the connection that first
executes the stored procedure will be used during all subsequent executions
of that procedure plan, even if a subsequent connection is using a
different isolation level when it calls the relevant stored procedure.
<P>
Also, the connection that issues the CREATE PROCEDURE statement will have
its transaction isolation level set to whatever &lt;option&gt; is coded for the
"SET TRANSACTION ISOLATION LEVEL &lt;option&gt;" statement within the procedure.
<P>
<P><h2>CAUSE</h2>
 
<P>
The SET TRANSACTION ISOLATION LEVEL &lt;option&gt; that is contained in the
CREATE PROCEDURE statement is executed as if it were coded outside of the
procedure. However, the CREATE PROCEDURE statement executes without
indicating any problem, (unless the SET statement is the only statement in
the procedure, in which case you get error 124: "CREATE PROCEDURE contains
no statement").
<P>
Furthermore, the transaction isolation level associated with the connection
that first executes the relevant stored procedure is set during all
subsequent executions of that procedures execution plan.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
To work around this problem, do one of the following:

<UL><LI>If the requirement is to set the transaction isolation level to READ
   UNCOMMITTED within your stored procedure, use the optimizer hint NOLOCK
   in your SELECT statements within the stored procedure.

<LI>Do not set the transaction isolation level anywhere in your code. The
   default transaction isolation level, READ COMMITTED, will then be
   used consistently within all stored procedures.

<LI>Use the WITH RECOMPILE option on the CREATE PROCEDURE statement. Then
   execute the SET TRANSACTION ISOLATION LEVEL &lt;option&gt; statement before
   calling the stored procedure.

<LI>Execute the SET TRANSACTION ISOLATION LEVEL &lt;option&gt; statement before
   calling the stored procedure. Then use the WITH RECOMPILE option when
   invoking the stored procedure. Be aware that this causes multiple copies
   of the stored procedure plan to be kept in the procedure cache.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SQL Server
version 6.5. We are researching this problem and will post new information
here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
As a result of this issue, users will experience unpredictable locking
behavior when using stored procedures, unless the SET TRANSACTION ISOLATION
LEVEL statement is never used on connections that call stored procedures.
Calling the same stored procedure twice in a row may result in different
locking behavior if you pick up different plans from the procedure cache.
<P>
To demonstrate this issue, execute the following code within ISQL/w:
<P>
<PRE>   use pubs
   go

   CREATE TABLE testing (f1 int NOT NULL , f2 varchar (24) NOT NULL )
   GO

   create procedure testproc as
   set transaction isolation level serializable
   select * from testing
   go

   BEGIN TRANSACTION
   insert into testing values (123456, '123456')
   go

</PRE>On a separate connection, execute the following statements:
<P>
<PRE>   use pubs
   go

   set transaction isolation level read uncommitted
   go

   exec testproc
   go

</PRE>Note that the stored procedure returns uncommitted rows, despite the fact
that the isolation level was set to serializable within the stored
procedure code.
<P>
To tidy up after this demonstration, issue the following code from the
first connection:
<P>
<PRE>   use pubs
   go

   rollback tran
   go

   drop table testing
   go

   drop proc testproc
   go
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Transact-SQL trans-sql t-sql sp proc<BR>
Keywords            : kbbug6.50 kbusage SSrvStProc SSrvTran_SQL<BR>
Version             : 6.5<BR>
Platform            : winnt<BR>
Issue type          : kbbug<BR>
Resolution Type     : kbworkaround<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
