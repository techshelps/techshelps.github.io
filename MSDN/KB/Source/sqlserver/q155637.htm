

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: SQL Server Issues Related to SMS </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155637">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1996/09/04">
<META NAME="Keywords" CONTENT="kbinterop SSrvGen">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The System Management Server (SMS) provides a method for centrally managing software and hardware for corporate networks. It is a very useful product that provides an integrated system to maintain inventory of hardware, software, and configurations...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAZV,QBVX,QAJP,QAA1,QDI2,QDIZ,QAB5,QAMA,QBSO,QBPM,QBWP,QA4H,QAM7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: SQL Server Issues Related to SMS</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155637</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 and 6.5
<LI>Microsoft Systems Management Server versions 1.0, 1.1 and 1.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The System Management Server (SMS) provides a method for centrally managing
software and hardware for corporate networks. It is a very useful product
that provides an integrated system to maintain inventory of hardware,
software, and configurations of computers in a network, distribute and
install software, manage network applications and monitor network data
flow. SMS incorporates Microsoft SQL Server as a back-end database
server. It uses SQL Server to store its inventory database.
<P>
SMS collects and maintains hardware and software inventory for an entire
enterprise. This inventory information is stored in a SQL Server database.
There will be one such inventory database per site. In what follows, a few
SMS terms are explained.
<P>
The central site is the topmost site or is the root of the site hierarchy.
An SMS system is composed of a central site, which stores system-wide
information and can have any number of sub-sites beneath it. The Central
site requires a SQL Server database.
<P>
In addition, any site can possess its own site database. Any site that has
its own site database is called a primary site. A site without a database
is called a secondary site. A secondary site cannot store its inventory
information and hence it forwards all its inventory and status information
to a primary site above it in the site hierarchy. Note that a secondary
site can have no sites beneath it. On the other hand, a primary site can
have one or more primary sites beneath it as well as one or more secondary
sites beneath it.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Having given a brief introduction about the use of SQL Server in SMS sites,
we can now enumerate the following configurations in SQL Server that affect
the working of SMS in any primary or central site:
<P>
<P><h3>Sort Order</h3>
 
SMS will use the same sort order and character set as the SQL Server to
execute queries and sort data.
<P>
<P><h3>SQL Login ID</h3>
 
You need to have an SMS SQL Login ID to set up a site as a primary or a
central site. This login ID is used during the SMS setup program as
well as to access the site database on the SQL Server once SMS is set up
and is in operation. In many cases the login ID will be 'SA,' because, in
general, the SMS administrator will also be the SQL Server administrator,
though this is not necessary.
<P>
<P><h3>Site Database Devices</h3>
 
SMS requires that each site have its own database and also the
transaction log must be on its own device. The site database devices and
the database itself can be created in two ways:

<OL><P><LI>The SMS Setup program can create the database and transaction log
   devices and also create the database, if the site server also has SQL
   Server installed on it. In order to do this, the SMS login ID must have
   system administrator privileges on SQL Server.

<P><LI>If the SQL Server is on a remote computer, you will have to create
   the database devices, before running SMS setup program, which will
   create the site database on these already existing devices. In this
   case, the SMS login ID must have Create Database, Dump Database, and
   Dump Transaction permissions on the Master database. This enables the
   SMS setup program to create and maintain the site database. SMS will
   however, delete all objects if any database exists on these devices. SMS
   requires a database and corresponding transaction log for its own usage
   and there is no compromise on this. Any existing data will be deleted
   prior to creating a site database on the specified devices on SQL
   Server.
<P>
</OL><h3>Tempdb Usage</h3>
 
Tempdb size is dependent on the number of computers in a particular site
and all its sub-sites, from which inventory will be collected and stored in
SQL Server. A larger tempdb improves performance for queries that contain
sorts. In general, if there are 1,000 computers in a site, a size of 5 to
10 MB is recommended. Default size of tempdb is 2 MB and it resides on the
master device. It is better to alter the size of tempdb on other devices
rather than increasing its size on the master device itself. If a site uses
SMSVIEWS rather heavily, then tempdb size should be increased to facilitate
query or view processing appropriately.
<P>
<P><h3>User Connections</h3>
 
SQL Server should have at least five user connections configured separately
for use by SMS. In practice, it is better however to have at least 10 to 15
user connections set aside for SMS alone.
<P>
<P><h3>Memory</h3>
 
The optimum setting depends on how much RAM is installed on SQL Server
and what other applications are running on the SQL Server machine. On a
dedicated SQL Server, with 32 MB of physical RAM, you can configure 16 MB
for SQL Server, for instance. This would enable Windows NT to have enough
memory to run its processes and would prevent page thrashing.
<P>
<P><h3>Open Objects</h3>
 
For SMS, open objects on SQL Server should be configured for 5,000-10,000.
<P>
<P><h3>Locks</h3>
 
For SMS alone, the default configuration of 5,000 locks on SQL Server
should suffice. However, if the server has other active databases on it,
then this configurations should be appropriately adjusted.
<P>
Synchronize time
=---------------
If SQL server is on a remote machine, the SMS site server and SQL Server
should be synchronized with the current time on the site server. On Windows
NT, you could use the NET TIME command to do it.
<P>
<P><h3>Upgrading</h3>
 
<P>
There are some nuances to consider when upgrading SMS and SQL Server to
their respective new versions. These can be summarized as follows::

<OL><P><LI>SMS 1.0 is compatible with SQL Server 4.21a servers.
</OL>2. SMS 1.1 is compatible with SQL Server 6.0 and 4.21a servers.
3. SMS 1.1 is also compatible with SQL Server 6.5 and 6.0.
<P>
When upgrading, the order is important; it makes a difference whether SMS
or SQL Server is upgraded first. In the case of SMS 1.0 and SQL Server
4.21a, the SMS sites should be first upgraded to SMS 1.1 and thereafter SQL
Server must be upgraded to 6.0. This is because the SQL Server 6.0 version
is incompatible with SMS 1.0. SQL Server 6.0 can be upgraded to 6.5 as long
as the site servers are all running SMS 1.1.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:  sms<BR>
Keywords            : kbinterop SSrvGen<BR>
Version             : 1.0 1.1 1.2 6.0 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
