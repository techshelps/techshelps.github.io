

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Global Variable @@error Checks for Successful Completion </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q64842 ">
<META NAME="KBModify" CONTENT="1997/04/25">
<META NAME="KBCreate" CONTENT="1990/08/13">
<META NAME="Keywords" CONTENT="kbprg SSrvProg SSrvTran_SQL SSrvWinNT">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  This article discusses how to check to see if a Transact-SQL command completed successfully when executed within a command file.  The global variable @@error can be tested to check for the successful completion of a Transact-SQL command within a co...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QA2Q,QAYL,QAG2,QABM,QA5V,QAY2,QANE,QABI,QABH,QBV8,QAB9,QBWS,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Global Variable @@error Checks for Successful Completion</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q64842 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server version 4.2 for OS/2
  - Microsoft SQL Server version 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how to check to see if a Transact-SQL command
completed successfully when executed within a command file.
<P>
The global variable @@error can be tested to check for the successful
completion of a Transact-SQL command within a command file using the
control-of-flow language.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The two examples included below illustrate the use of the global
variable @@error. The first example, ERR1.CMD, will execute the
Transact-SQL "select *" command  on the table names supplied from the
command line. For example, to execute this command file, type the
following at the command prompt:
<P>
<PRE>   err1 titles roysched

   (Format: &lt;batch_file_name&gt; &lt;table_name&gt; &lt;table_name&gt;)

</PRE>The resulting set contains all rows returned from the "titles" table
and all rows returned from the "roysched" table. Both tables are
located in the sample pubs database.
<P>
The second example, ERR2.CMD, will attempt to execute the first
SELECT * command on the table provided by the first table_name
parameter, but the global variable @@error will have been set to 1,
indicating that an error has been encountered. Processing of the
control-of-flow language will stop, and no records will be retrieved
for either table. The error is encountered because there is a syntax
error in the word SELECT. Instead of using the proper spelling of
SELECT, it is misspelled as "seleect". To execute this batch file,
type the following at the command prompt:
<P>
<PRE>   err2 titles roysched

</PRE>As indicated above, the resulting set will be empty because an error
was encountered.
<P>
<P><h3>Example 1: ERR1.CMD</h3>
 
<P>
The global variable @@error will have the value of "0" (zero),
indicating that the first SELECT command completed successfully;
thus, all records will be retrieved from both tables.
<P>
@echo off
<P>
set tb1=%1
set tb2=%2
<P>
echo /* Selecting records for tables: %tb1% and %tb2% */
<PRE>echo use pubs                &gt;isql.in
echo go                      &gt;&gt;isql.in
echo begin                   &gt;&gt;isql.in
echo select *                &gt;&gt;isql.in
echo from  %tb1%             &gt;&gt;isql.in
echo end                     &gt;&gt;isql.in
echo go                      &gt;&gt;isql.in
echo begin                   &gt;&gt;isql.in
echo If @@error !=0          &gt;&gt;isql.in
echo print "error"           &gt;&gt;isql.in
echo else                    &gt;&gt;isql.in
echo if @@error = 0          &gt;&gt;isql.in
echo select * from %tb2%     &gt;&gt;isql.in
echo end                     &gt;&gt;isql.in
echo go                      &gt;&gt;isql.in

</PRE>isql /Usa /P /n /i isql.in
<P>
<P>
<P><h3>Example 2: ERR2.CMD</h3>
 
<P>
The global variable @@error will have the value of "1", indicating
that an error was encountered in the first SELECT command (there is
a syntax error in the word SELECT in the first SELECT command);
therefore, the second SELECT will not be executed.
<P>
@echo off
<P>
set tb1=%1
set tb2=%2
<P>
echo /* Selecting records for tables: %tb1% and %tb2% */
<PRE>echo use pubs                &gt;isql.in
echo go                      &gt;&gt;isql.in
echo begin                   &gt;&gt;isql.in
echo seleect *               &gt;&gt;isql.in
echo from  %tb1%             &gt;&gt;isql.in
echo end                     &gt;&gt;isql.in
echo go                      &gt;&gt;isql.in
echo begin                   &gt;&gt;isql.in
echo If @@error !=0          &gt;&gt;isql.in
echo print "error"           &gt;&gt;isql.in
echo else                    &gt;&gt;isql.in
echo if @@error = 0          &gt;&gt;isql.in
echo select * from %tb2%     &gt;&gt;isql.in
echo end                     &gt;&gt;isql.in
echo go                      &gt;&gt;isql.in

</PRE>isql /Usa /P /n /i isql.in
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Transact-SQL Windows NT<BR>
Keywords            : kbprg SSrvProg SSrvTran_SQL SSrvWinNT<BR>
Version             : 4.2 | 4.2<BR>
Platform            : OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
