

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: DIFFERENCE() and SOUNDEX() Functions in Transact-SQL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100365">
<META NAME="KBModify" CONTENT="1997/04/28">
<META NAME="KBCreate" CONTENT="1993/06/20">
<META NAME="Keywords" CONTENT="kbother SSrvServer SSrvTran_SQL">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The DIFFERENCE() and SOUNDEX() functions in Transact-SQL allow searches on character strings that  sound similar.  SOUNDEX() converts each string into a 4-digit code. DIFFERENCE() can then be used to evaluate the level of similarity between the sou...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHH,QAIJ,QBXN,QABM,QAA3,QAHG,QAYZ,QAJQ,QDIV,QAYS,QAKD,QAHR,QAX0,QAUD,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: DIFFERENCE() and SOUNDEX() Functions in Transact-SQL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100365</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server version 4.2 for OS/2
  - Microsoft SQL Server version 4.2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The DIFFERENCE() and SOUNDEX() functions in Transact-SQL allow
searches on character strings that "sound similar." SOUNDEX() converts
each string into a 4-digit code. DIFFERENCE() can then be used to
evaluate the level of similarity between the soundexes for two strings
as returned by SOUNDEX(). For example, these functions could be used
in a case where you wanted to look at all rows that sound like
"Erickson," so it should find those with "Erickson," "Erikson,"
"Ericson," "Ericksen," "Ericsen," and so on.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The algorithm for determining the level of similarity between two
character strings is outlined below:
<P>
given:  level = difference(a1, a2)
<PRE>        then
                sx1 = soundex(a1)
                sx2 = soundex(a2)
                where soundex returns:
                &lt;alpha&gt;&lt;numeric&gt;&lt;numeric&gt;&lt;numeric&gt;

</PRE>The algorithm first generates the soundex of a1 (sx1) and a2 (sx2)
then:

<UL><LI>if all characters in sx2 match all characters in sx1 (position
   respective) then level = 4.
<P>
</UL>Otherwise:

<UL><LI>if &lt;alpha&gt; of sx1 is same as &lt;alpha&gt; of sx2, then starting level is
   1; otherwise starting level is 0. Now, looping through sx1 and sx2,
   the level starts to "grow" by comparing one character in sx2 to all
   characters in sx1. If there is a match, then we increment the level
   and the next scan on sx1 will start from the location of the match. If
   no match exists, we compare the next character in sx2 to the entire 4
   character list of sx1. Thus, our pointer in sx2 moves along one
   character at a time for every iteration and the pointer to sx1 always
   starts at the beginning of sx1 except in the case of a match and the
   location of the match becomes the starting point in sx1 for the next
   iteration. Whenever there is a match the level is increased. A 4 means
   all of the soundex characters are the same in both strings (location
   and value). A value of 0 means that there was no value match.
<P>
</UL>The following example illustrates this process:
<P>
<PRE>sx1     sx2
</PRE> 
<PRE>A120    A102 &lt;-- soundex values
....    ....
0123    0123 &lt;-- character position

</PRE>iteration 1:
level starts at 1 because sx2[0] == sx1[0]
<P>
iteration 2:
start compare with sx2[1] and sx1[1] because of match
sx2[1] == sx1[1] so level is now 2
<P>
iteration 3:
start compare with sx2[2] and sx1[2] because of match
sx2[2] == sx1[3] so level is now 3
<P>
We have now run out of characters in sx1 as a match was on the last
character of sx1 so difference returns a value of 3.
<P>
Some more examples (remember we are always comparing sx2 to sx1):
<P>
<PRE>sx1     sx2     difference
</PRE> 
<PRE>A123    A123    4
A123    B123    3
A321    A123    2
^  ^    ^^
|--+----||
</PRE>(1)|-----|
<PRE>   (2)

</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Windows NT<BR>
Keywords            : kbother SSrvServer SSrvTran_SQL<BR>
Version             : 4.2 | 4.2<BR>
Platform            : OS/2 Windows<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
