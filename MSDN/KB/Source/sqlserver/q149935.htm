

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Resolving Deadlocks With Distributed Transactions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149935">
<META NAME="KBModify" CONTENT="1997/12/15">
<META NAME="KBCreate" CONTENT="1996/04/16">
<META NAME="Keywords" CONTENT="SSrvLock kbusage">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  In distributed transactions, deadlocks can occur and application developers planning to implement distributed transactions with SQL Server 6.5 need to understand their options.  MORE INFORMATION  SQL Server 6.5 includes the Microsoft Distributed Tr...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAH6,QAB5,QBXJ,QAKD,QAJH,QBXS,QANN,QAJQ,QAHE,QAGI,QDIR,QBW7,QAI5,QDMG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Resolving Deadlocks With Distributed Transactions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 15, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149935</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In distributed transactions, deadlocks can occur and application developers
planning to implement distributed transactions with SQL Server 6.5 need to
understand their options.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
SQL Server 6.5 includes the Microsoft Distributed Transaction Coordinator
(MS DTC), which provides a robust, high-performance, scalable, easy-to-use
distributed transaction facility for the Microsoft Windows NT and Windows
95 operating systems. MS DTC addresses the challenges of processing
transactions over a distributed set of software components that exist on a
single computer or on a system of networked computers. MS DTC is fully
integrated with Microsoft SQL Server. Through MS DTC, remote stored
procedure calls can now participate in distributed transactions, so that
changes on multiple servers can be committed as a single unit of work.
<P>
MS DTC includes no facilities for deadlock avoidance or detection.
Application developers who plan on implementing distributed transactions
with MS DTC and SQL Server have two options:
<P>
- Implement deadlock avoidance in the application by serializing their
<PRE>  access to common tables among different servers.

</PRE>- Implement timeouts either within the application or via a SQL Server
<PRE>  server-wide trace flag.

</PRE>If the application has tight control over what distributed transactions are
being performed, it can serialize access to common resources such that any
deadlocks that might occur would be contained within a single SQL Server
where they could be detected and dealt with as normal deadlocks are
handled. For instance, if the intention is to maintain transactional
integrity between three tables on three different SQL Servers (T1 on
SERVER1, T2 on SERVER2, and T3 on SERVER3), you should always issue the
table modification queries in the same table order for any distributed
transaction that affects these tables. This might, for example, always be
T1 first, T2 second, and T3 third.
<P>
Another option that you can use when there is little control over the types
of distributed transactions that might be issued is timeouts. For DB-
Library and ODBC applications, this can be implemented in the calling
program. For ad-hoc Transact-SQL usage, SQL Server 6.5 has implemented
trace flag -T8503, which allows a system administrator to define a server-
wide DTC transaction timeout value for server to server DTC transactions
started with either BEGIN DISTRIBUTED TRAN or through the implicit
transaction mechanism, ("remote proc trans", or SET REMOTE_PROCEDURE_TRANS
ON). When the trace flag is set, the value from the sp_configure "remote
query timeout" value is used as the transaction timeout value, in seconds.
If the transaction is still active after the time has elapsed, the DTC
initiates transaction abort. A value of 0 represents an infinite timeout.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: sql65 dtc distributed deadlock<BR>
Keywords          : SSrvLock kbusage<BR>
Version           : 6.5<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 15, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
