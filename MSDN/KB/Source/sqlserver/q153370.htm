

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF:Foreign Key Constraint Behavior of Nullable Composite Keys </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153370">
<META NAME="KBModify" CONTENT="1997/04/08">
<META NAME="KBCreate" CONTENT="1996/07/08">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  A foreign key constraint may be satisfied under some conditions which may seem unexpected or unusual.  Specifically, if a composite foreign key has been defined on columns that allow nulls, and at least one of the columns, upon the insert or update...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBEJ,QBEK,QAHH,QABM,QABN,QA5V,QBBI,QASU,QADX,QABA,QABB,QAQT,QAHG,QABG,QDKS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF:Foreign Key Constraint Behavior of Nullable Composite Keys</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153370</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server versions 6.0 and 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A foreign key constraint may be satisfied under some conditions which may
seem unexpected or unusual.  Specifically, if a composite foreign key has
been defined on columns that allow nulls, and at least one of the columns,
upon the insert or update of a row, is set to null, then the foreign key
constraint will be satisfied.  This is true even if there is not a row in
the related table to which any of the corresponding columns are matched.
<P>
Consider the following example involving tables t1 and t2, defined as
follows:
<P>
<PRE>   t1:   (col1, col2)
      primary key (col1,col2)

   t2:   (col1 null, col2 null)
      foreign key (col1,col2) references t1

   If t1 contains one row:

      col1  col2
      ----  ----
      A  2

</PRE>The foreign key constraint on t2 can be met by the statement "insert into
t2 values('B',null)."
<P>
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The ANSI standard, as explained in "A Guide to the SQL Standard," 3rd
edition, by C.J. Date and Hugh Darwen, defines foreign key constraints as
follows:
<P>
<PRE>   check (fk MATCH [PARTIAL | FULL] (select ck from T))

</PRE>where (a) fk is a row constructor corresponding to the column-commalist
that represents the foreign key, (b) ck is a select-item-commalist
corresponding to the column-commalist that represents the referenced
candidate key, (c) T is the base table that contains that candidate key,
and (d) PARTIAL is specified if and only if PARTIAL appears in the foreign
key definition (and likewise for FULL).  In other words, SQL's definition
of "matching" for a foreign-key/candidate key pair is identical to its
definition of "matching" in the context of the match condition.
<P>
In cases such as SQL Server in which neither PARTIAL nor FULL are or can be
specified, Date and Darwen go on to say:
<P>
<PRE>   The referential constraint is satisfied if and only if, for each
   row r2 of the referencing table, either (a) at least one component
   of r2.fk is null, or (b) T contains exactly one row, r1 say, such
   that the comparison condition "r2.fk = r1.ck" evaluates to true.

</PRE>Date and Darwen add a footnote that states, in effect, that the MATCH
option can be ignored if either the foreign key is not composite or if
every component of the foreign key dis-allows nulls.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Version             : 6.0 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
