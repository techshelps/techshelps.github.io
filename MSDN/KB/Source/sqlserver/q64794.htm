

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Differentiating Between Timestamp and Varbinary Types </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q64794 ">
<META NAME="KBModify" CONTENT="1997/04/25">
<META NAME="KBCreate" CONTENT="1990/08/10">
<META NAME="Keywords" CONTENT="kbprg SSrvDB_Lib SSrvDoc_Err SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  Using the DB-Library (DB-Lib) calls dbcoltype() and dbprtype(), you cannot differentiate between the varbinary and timestamp column types. Dbcoltype() returns 45 for both types, and dbprtype() translates these both as being  binary.   There are sev...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAYV,QAE1,QAGI,QDMN,QAUJ,QAP2,QBVV,QA4S,QA4R,QAYY,QA7Y,QALQ,QAJ9,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Differentiating Between Timestamp and Varbinary Types</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q64794 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server Programmer's Toolkit, version 4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using the DB-Library (DB-Lib) calls dbcoltype() and dbprtype(), you
cannot differentiate between the varbinary and timestamp column types.
Dbcoltype() returns 45 for both types, and dbprtype() translates these
both as being "binary."
<P>
There are several methods you can use to differentiate between these
two column types, but they each have problems associated with them.
<P>
You can use the dbcolname() call to determine if the name of the
column in question is "timestamp"; however, although this seems like a
logical solution, there is a potential problem. It has been verified
that browse mode can be used to update a table with a timestamp column
that was not named "timestamp"; therefore, the timestamp column may
not always have this unique name.
<P>
A timestamp column is designated as a varbinary coltype. Only the
usertype (which is basically unused by DB-Lib except for special
columns such as timestamp) contains the timestamp data type value
(80). Db-lib does not provide a mechanism for getting to this
information as an exposed API. This information can be found in the
SQL Server internal tables described in Appendix B of the "Microsoft
SQL Server System Administrator's Guide."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Consider the situation where you want to determine whether
column 10 of the table "alltypes" is actually type timestamp or
varbinary. The only reliable way to make this differentiation is to
execute a query such as the following:
<P>
<PRE>      select usertype from syscolumns
      where colid = 10
        and
      id in
      (select id from sysobjects
       where name = 'alltypes')

</PRE><h3>Results</h3>
 
<P>
80 = timestamp
<PRE> 4 = varbinary

</PRE>While this query will provide you with this information, it is based
on internal information that may be subject to change in future versions
of Microsoft SQL Server.
<P>
Of the two workarounds given above, Microsoft recommends using the
first choice for the following reasons:

<OL><P><LI>It is easy to implement.

<P><LI>It is based on a DB-Lib call.

<P><LI>It does not rely on internal information that is subject to change.
<P>
</OL>The only requirement is that you follow the nonenforced rule of naming
timestamp columns as "timestamp."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: dblib<BR>
Keywords            : kbprg SSrvDB_Lib SSrvDoc_Err SSrvProg<BR>
Version             : 4.2 | 4.2  | 4.2<BR>
Platform            : MS-DOS OS/2 WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
