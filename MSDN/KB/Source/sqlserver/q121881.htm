

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: How and Where to Place VBSQL.VBX </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121881">
<META NAME="KBModify" CONTENT="1997/04/30">
<META NAME="KBCreate" CONTENT="1994/10/20">
<META NAME="Keywords" CONTENT="kbinterop SSrvVisB SSrvWinNT">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  This article explains the function VBSQL.VBX, where to place it, when to load it, and when to unload it from memory.  MORE INFORMATION  There are a few basic rules you need to know when using the VBSQL.VBX to create a Visual Basic Program for SQL S...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QABM,QAY2,QAMA,QAGI,QA5F,QBVV,QAY5,QAX6,QADX,QACI,QBKN,QBFY,QAPF,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: How and Where to Place VBSQL.VBX</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121881</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 4.2 and 4.21
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains the function VBSQL.VBX, where to place it, when to
load it, and when to unload it from memory.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are a few basic rules you need to know when using the VBSQL.VBX to
create a Visual Basic Program for SQL Server (VBSQL). The VBSQL.VBX does
several things. It provides a simple way to trap SQL Server errors and
messages coming back from the SQL Server to the VB SQL Server front-end.
With out the VBSQL.VBX in an application on a form you could not trap any
SQL Server errors or messages. The error and message handlers in DB-Library
(DB-Lib) are call back functions, and they are implemented in the VBSQL.VBX
as events VBSQL1_Error and VBSQL1_Message.
<P>
The placement of the VBSQL.VBX instance in an application is very
important. The rules for placement are as follows:

<UL><LI>The VBSQL.VBX must be on the first form in memory.

<LI>The VBSQL.VBX should be on the last form to be unloaded.

<LI>Always use the form with the VBSQL.VBX on it as the startup form.

<LI>Do not use a separate .BAS module for startup or shutdown.

<LI>Never use more that once instance of the VBSQL.VBX in any one project.
<P>
</UL>If any of these rules are violated, it may case a general protect fault (GP
fault) in your Visual Basic application.
<P>
NOTE: Even though there should never be more that once instance of the
VBSQL.VBX in any one project, it is OK to have more that one application
running at a time on the same workstation using the VBSQL.VBX; as long as
there is one VBSQL.VBX per project. It is not possible to share Database
Processes (DBPROCs) between separate executables.
<P>
The VBSQL.VBX maps a very large percentage of DB-Lib calls directly to VB
from W3DBLIB.DLL. The VBSQL.VBX takes care of that fact that VB does not
support C declared (CDECL) functions.
<P>
Visual Basic for Windows only supports Pascal calls and DB-Library
(W3DBLIB.DLL) exports its functions in C. The VBSQL.VBX make that
transition from Pascal to C. It also automatically handles the allocation
of memory in Visual Basic for results coming back from the SQL Server. In
addition to memory allocation, the VBSQL.VBX also automatically coverts all
data coming back from the SQL Server to the front-end from char, int,
money, etc. to a standard Visual Basic string.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: usage golden how to GPF error message Windows NT<BR>
Keywords            : kbinterop SSrvVisB SSrvWinNT<BR>
Version             : 4.2 4.21<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
