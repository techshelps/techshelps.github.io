

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: SQL Server 4.21a Service Pack 4 Fixlist </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q132495">
<META NAME="KBModify" CONTENT="1997/12/19">
<META NAME="KBCreate" CONTENT="1995/07/12">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT=" The following is a list of fixes and other various improvements that have been made in SQL Server Service Pack 4. SQL Server Service Pack 4 is now available from your primary support provider. For more information, contact your primary support provi...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAR4,QABM,QAM1,QAAP,QAKP,QAB4,QAGB,QDO3,QDIX,QBWP,QBVV,QAY2,QBWS,QARL,QA2Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: SQL Server 4.21a Service Pack 4 Fixlist</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q132495</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.21a
WINDOWS
kbref kbfixlist4.21a.sp4
<P>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, version 4.21a Service Pack 4
</UL> 
<P>
The following is a list of fixes and other various improvements that
have been made in SQL Server Service Pack 4. SQL Server Service Pack
4 is now available from your primary support provider. For more
information, contact your primary support provider.
<P>
Please note that workarounds have been provided for your information
only. It is not necessary to implement these workarounds if you have
the updated software.
<P>
 
<P><h2>LIST OF PROBLEMS CORRECTED IN SERVICE PACK 4</h2>
 

<UL><LI>FIX: RPC from Sybase SQL Server to Microsoft SQL Server Fails
<LI>FIX: OPENDSNT.DLL Makes Thread AV Server-Wide
<LI>FIX: Fixed Length Dates Cause Syntax Errors in srv_convert()
<LI>FIX: Alpha: SELECT INTO with Kills Can Cause Process Hangs
<P>
</UL> 
<P><h3>FIX: RPC from Sybase SQL Server to Microsoft SQL Server Fails</h3>
 
<P>
ARTICLE-ID: <B><A HREF="../SQLSERVER/Q123755.htm">Q123755</A></B>
BUG# NT: 10665 (4.21a)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Remote Stored Procedure calls (RPC) from Sybase SQL Server versions 4.8 and
4.92 on UNIX platforms to Microsoft SQL Server via TCP/IP may fail with the
following error message:
<P>
<PRE>   Message 7223: Can not read from site '%.*s'

</PRE>This failure may occur when remotely executing any stored procedures, such
as sp_who.
<P>
<P><h2>CAUSE</h2>
 
<P>
The server-side network library for TCP/IP (SSMSOCN.DLL) incorrectly
handles the RPC requests from certain versions of Sybase SQL Server on the
UNIX platforms.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Replace the server-side network library SSMSSOCN.DLL with version 4.21
(dated 1/26/94). If you experience any out-of-band data problems (such as
invalid buffer errors on the client)after switching to the older version,
you may avoid them by adding the following entry to the NT 3.5 registry:
<P>
<PRE>   System\CurrentControlSet\Services\Tcpip\Parameters\TcpUseRFC1122Urgent
   Pointer = 0x1

</PRE>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WINNT/Q120642.htm">Q120642</A></B>
   TITLE     :TCP/IP &amp; NBT Configuration Parameters for Windows NT 3.5

</PRE> 
<P><h3>FIX: OPENDSNT.DLL Makes Thread AV Server-Wide</h3>
 
<P>
ARTICLE-ID: <B><A HREF="../SQLSERVER/Q132423.htm">Q132423</A></B>
BUG# NT: 9175 (4.21a)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The retail x86 4.21a Service Pack 2 and Service Pack 3 OPENDSNT.DLL may
cause access violations that were previously limited in scope to a single
thread to instead be server-wide.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Use the 4.21a OPENDSNT.DLL with SQLSERVR.EXE Service Pack 2 or Service
Pack 3, or use SQL Server Service Pack 4, which does not experience this
problem.
<P>
 
<P><h3>FIX: Fixed Length Dates Cause Syntax Errors in srv_convert()</h3>
 
<P>
ARTICLE-ID: <B><A HREF="../SQLSERVER/Q132498.htm">Q132498</A></B>
BUG# NT: 9658 (4.21a)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under some conditions, the Open Data Services (ODS) function srv_convert()
can generate a syntax error in source field message, when the data
being passed to srv_convert() is the correct format.
<P>
NOTE: This only happens on fixed length date conversions. For example,
"19000101" (dates without dashes or slashes) versus "1900-01-01".
<P>
<P><h2>CAUSE</h2>
 
<P>
Fixeddate(), a function internal to Open Data Services, experiences a
problem with an uninitialized work string that is then converted with
atoi(). The first half of this value is user provided; the other half in
the failing condition is invalid data left in the string, which should be
initialized to 0. This can cause the date value calculated to be invalid
and create a syntax error.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
The only workaround for this problem is to parse the date values and
insert dashes prior to conversion.
<P>
 
<P><h3>FIX: Alpha: SELECT INTO with Kills Can Cause Process Hangs</h3>
 
<P>
ARTICLE-ID: <B><A HREF="../SQLSERVER/Q132503.htm">Q132503</A></B>
BUG# NT: 9871 (4.21a - NTAlpha)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you issue a kill on a spid, it will not kill the specified process
and subsequent kills issued against the spid will not work.
<P>
When you perform a SELECT * from sysprocesses on the server, it will show
spid 3 stuck in a command of DUMP TRAN in dbid 2 (tempdb), and one or more
user processes stuck in a command of INSERT. These user processes will not
respond to the kill command.
<P>
This problem is usually only encountered when you perform a stress test
that includes SELECT INTO a temp table and repeated kills of all processes.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Once the problem occurs, the only solution is to shut down SQL Server with
nowait. To avoid or minimize the problem, do not perform excessive KILL
commands on processes doing SELECT INTO commands into tempdb.
<P>
 
<P><h2>LIST OF PROBLEMS CORRECTED IN SERVICE PACK 3</h2>
 

<UL><LI>FIX: Floating-point Exception Generating Query Plan on Alpha
<LI>FIX: Thread Deadlock Causes Checkpoint to Hang in tempdb
<P>
</UL> 
<P><h3>FIX: Floating-point Exception Generating Query Plan on Alpha</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q130981.htm">Q130981</A></B>
BUG# NT: 1781 (4.21a - NTAlpha)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Upon executing a query including a join, with or without NOEXEC set, the
following dialog box appears:
<P>
<PRE>   SQLSERVR.EXE: The exception Floating-point invalid operation
   (0xc0000090) occurred in the application at location 0x00567938.
   Click on OK to terminate the application Click on CANCEL to debug
   the application.

</PRE>If OK is chosen, the entire SQL Server process is terminated. This happens
only on Alpha processors.
<P>
<P><h2>CAUSE</h2>
 
<P>
A floating-point underflow has occurred while the optimizer was evaluating
possible join orders.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
It may be possible to avoid this problem by changing the number or type of
indexes available to the optimizer. The problem may disappear when there is
a change in the distribution of data in the tables and UPDATE STATISTICS is
run.
<P>
 
<P><h3>FIX: Thread Deadlock Causes Checkpoint to Hang in tempdb</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q131662.htm">Q131662</A></B>
BUG# NT: 9992 (4.21a)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you execute tempdb-intensive queries involving sorting, under very
narrow conditions, a thread deadlock can occur during sort cleanup. This is
often difficult to identify because the visible symptoms are ambiguous.
However the observed characteristics include a general slowdown, increased
blocking, and the checkpoint process hanging in tempdb. It is often
possible to login to SQL Server with ISQL.EXE, do SELECTs from user
databases, but not possible to run data modification statements in tempdb.
<P>
<P><h2>CAUSE</h2>
 
<P>
Worker threads become deadlocked when deallocating extents during sort
cleanup.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
The problem is exceedingly narrow in scope and very rare. Because of this
and the ambiguous symptoms, this problem should not be suspected until
close study has ruled out all other problems. This would include verifying
dbcc newalloc and dbcc checkdb are error free on all databases, no errors
exist in the SQL errorlog, and any observed blocking or slowdown is not
caused by conventional concurrency issues. Slightly changing the
application, queries, platform, or SQL configuration may avoid the problem.
<P>
 
<P><h2>LIST OF PROBLEMS CORRECTED IN SERVICE PACK 2</h2>
 

<UL><LI>FIX: Broken Connection Does Not Terminate Blocked SPID
<LI>FIX: Dropped Net Session Not Detected During Long Query
<LI>FIX: Conversion Errors to VAX Floating Point
<P>
</UL> 
<P><h3>FIX: Broken Connection Does Not Terminate Blocked SPID</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q122486.htm">Q122486</A></B>
BUG# NT: 932 (4.2)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An unexpectedly large number of client connections to SQL Server may be
observed using the sp_who command or performance monitor. Many of the
clients shown by sp_who have rebooted or otherwise terminated their client
applications. sp_who will show these clients to be blocked on one or more
other client processes.
<P>
<P><h2>CAUSE</h2>
 
<P>
If a client connection is blocked by a lock held by another process and the
client's connection to SQL server is abnormally broken (for example,
network problems, client GP fault, or client reboot), the spid used by that
client will not be freed until the blocking process releases its locks.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Clients should be sure to terminate their connection to SQL Server.
Applications should cancel long running queries and, if necessary,
explicitly close connections to SQL Server. This will tend to discourage
users from rebooting or terminating applications taking an extended period
of time to process SQL commands.
<P>
 
<P><h3>FIX: Dropped Net Session Not Detected During Long Query</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q124949.htm">Q124949</A></B>
BUG# NT: 966 (4.21)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A query can continue to run on SQL Server even after the client reboots and
the network session has dropped. The query will acquire whatever type of
locks are appropriate for the query type, which in some cases can block
other users. Unless it becomes blocked on another connection's lock, the
query will terminate when it has run to completion or when it needs to send
results back to the nonexistent client. The query can usually be terminated
with the Transact-SQL KILL command.
<P>
<P><h2>CAUSE</h2>
 
<P>
If a client is running a long query that does not return results for a
while, then the net session is dropped because the client reboots, the
query can continue to run. An example of this type of query would be:
<P>
<PRE>   SELECT COUNT(*) FROM LARGETABLE

</PRE>If the query became blocked on another connection's lock, this could also
prevent it from returning results. If in this state, the client running the
query reboots, the query will continue to run even though its network
session is terminated. This is caused by SQL Server not noticing the
network session termination. Whenever the query begins to send results back
to the nonexistent client, SQL Server will notice the network session is
gone and terminate the query.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
This problem only happens infrequently, as two fairly rare simultaneous
events must occur to reproduce it.

<OL><P><LI>A long-running query that does not return results.

<P><LI>The same client running the query must abruptly terminate in an
    uncontrolled fashion, rather than logging out or canceling the
    query with dbcancel().
<P>
</OL>In cases where this happens, the workaround is to use the Transact-SQL KILL
command to terminate the query. A well-designed application should always
allow users to cancel a query at any point during execution. These
applications will generally not see this problem.
<P>
 
<P><h3>FIX: Conversion Errors to VAX Floating Point</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q125636.htm">Q125636</A></B>
BUG# NT: 959 (4.2)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
VAX clients may experience conversion errors when selecting very
large float values from Microsoft SQL Server.
<P>
 
<P><h2>LIST OF PROBLEMS CORRECTED IN SERVICE PACK 1</h2>
 

<UL><LI>FIX: Complex Query May Cause 1521 Error
<LI>FIX: Runtime Error in Trigger from RPC Causes Server to Hang
<LI>FIX: SELECT MAX from INT Column May Cause Access Violation
<LI>FIX: False Error 512 on Subqueries with Version 4.21.006
<LI>FIX: Access Violation if Fully Qualified View Name Is Large
<P>
</UL> 
<P><h3>FIX: Complex Query May Cause 1521 Error</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q109187.htm">Q109187</A></B>
BUG# NT: 597 (4.2)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Under certain conditions SQL Server may return error 1521:
<P>
<PRE>   Sort failed because a table in tempdb used for the processing
   of the query had a bad data page count.

</PRE></OL>This generally occurs when processing very complex queries that may involve
any of the following: multiple tables, the use of dynamic indexes, internal
sorting, or heavy use of tempdb.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
In some cases this problem can be resolved by executing one or more
of the following:

<OL><P><LI>Run UPDATE STATISTICS on all the tables involved.

<P><LI>Modify the query so the optimizer can produce a different query plan.
   - Make sure your indexes have been designed correctly and efficiently.
   - Purge or archive any unnecessary data from any tables involved.
   - Change BETWEEN clauses to the corresponding &lt;= and &gt;= expressions.
<P>
</OL>NOTE: You may review your query plan by running SET SHOWPLAN ON before
executing the query. For more information on interpreting SHOWPLAN output
refer to "Appendix B: Understanding SHOWPLAN Output" in the "Microsoft SQL
Server for NT Troubleshooting Guide."
<P>
 
<P><h3>FIX: Runtime Error in Trigger from RPC Causes Server to Hang</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q111680.htm">Q111680</A></B>
BUG# NT: 681 (4.2)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When issuing a RPC to a remote SQL Server for Windows NT, the client
application hangs. The remote server will refuse to accept further
connections and any currently connected clients that attempt to issue
queries will hang. The remote server cannot be shut down with the service
control manager. The SQLSERVR process must either be killed or the NT
server cycled.
<P>
<P><h2>CAUSE</h2>
 
<P>
If execution of RPC causes a trigger to be fired which in turn encounters a
non-fatal runtime error, such as a unique key or rule violation, and if
that trigger contains any statements after the point where the error
occurred, the symptoms noted above may occur.
<P>
Execution of the stored procedure locally will work properly, even if the
runtime error is encountered.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Care must be taken to ensure that triggers will not cause non-fatal runtime
errors. Logic should either be added to the trigger to guard against this,
or any statements that might generate these errors should be placed in the
stored procedure instead of the trigger.
<P>
 
<P><h3>FIX: SELECT MAX from INT Column May Cause Access Violation</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q116075.htm">Q116075</A></B>
BUG# NT: 814 (4.2)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Selecting the MAX value from a column that is defined as INT NOT NULL
and is the fourth column in a table may result in an access violation
on SQL Server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The table may be wider than 4 columns, but MAX should be selected
from the fourth column and columns 1-3 should be 4 bytes wide.
<P>
Here is a brief script to demonstrate the problem:
<P>
<PRE>   use pubs
   go
   drop table t1
   go
   create table t1(c1 int, c2 int, c3 int, c4 int)
   go
   declare @counter int
   select @counter = 0
   while @counter &lt; 400
   begin
     insert t1 values(@counter,@counter,@counter,@counter)
     select @counter = @counter + 1
   end
   go
   select max(c4) from t1
   go

</PRE></OL> 
<P><h3>FIX: False Error 512 on Subqueries with Version 4.21.006</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q124059.htm">Q124059</A></B>
BUG# NT: 929 (4.21.006)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Some subqueries in a query select list that are correctly returning one row
may falsely return a 512 error in server versions 4.21.006 or later.
<P>
A subquery in a select list must operate as an expression, which means it
is not legal for such queries to return more than one row. Prior to version
4.21.006, SQL Server would not detect this condition as an error and would
instead return the last row of the subquery result set.
<P>
This was filed as bug 550, and a bugfix was supplied in 4.21.006. However,
starting with this version some queries that are correctly returning one
row are incorrectly generating the 512 error:
<P>
<PRE>   Subquery returned more than 1 value. This is illegal when
   the subquery follows =, !=, &lt;, &lt;=, &gt;, &gt;=, or when the subquery is
   used as an expression.

</PRE>For example, if there are two tables:
<P>
<PRE>   Emp
   empid    name
   1        Jane Doe

   Prod
   plantid   process  empid
   1         1        1
   1         2        1

</PRE>The following query generates a false 512 error:
<P>
<PRE>   select (select name
           from emp
           where emp.empid = prod.empid)
   from prod

</PRE><h2>WORKAROUND</h2>
 
<P>
If possible, recode the query as a join:
<P>
<PRE>   select name
   from emp, prod
   where emp.empid = prod.empid

</PRE> 
<P><h3>FIX: Access Violation if Fully Qualified View Name Is Large</h3>
 
<P>
ARTICLE ID: <B><A HREF="../SQLSERVER/Q124238.htm">Q124238</A></B>
BUG# NT: 935 (4.21a)
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
SQL Server version 4.21a will suffer an access violation if the fully
qualified name of a view becomes very large. This occurs if the fully
qualified name exceeds 30 bytes on the Alpha versions of SQL Server, but
may occur with larger names on the MIPS or Intel versions. The problem is
specific to view names. It does no occur for other objects, such as tables
or stored procedures.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
If possible, shorten the name of the view.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.21a Windows NT<BR>
KBCategory: kbref kbfixlist 4.21a.sp4<BR>
KBSubCategory: SSrvWinNT<BR>
Version           : 4.21a<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
