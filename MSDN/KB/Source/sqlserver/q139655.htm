

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Tracing SQL Generated by MS SQL Server ODBC Driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139655">
<META NAME="KBModify" CONTENT="1997/04/08">
<META NAME="KBCreate" CONTENT="1995/11/14">
<META NAME="Keywords" CONTENT="kbinterop kbprg SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  This article discusses how to trace the SQL generated by the Microsoft ODBC SQL Server Driver.  MORE INFORMATION  Being able to trace the SQL commands generated by a two-tier ODBC driver can sometimes help you determine if a problem lies in the ODB...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QA9E,QAGI,QAU9,QAB9,QBV8,QAU5,QAIF,QDIV,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Tracing SQL Generated by MS SQL Server ODBC Driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139655</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SQL Server, versions 6.0 &amp; 6.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article discusses how to trace the SQL generated by the Microsoft
ODBC SQL Server Driver.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Being able to trace the SQL commands generated by a two-tier ODBC driver
can sometimes help you determine if a problem lies in the ODBC SQL commands
generated by the ODBC application or in the native SQL generated by the
driver to implement the application's ODBC SQL commands.
<P>
The ODBC SDK itself provides two tools for monitoring the ODBC commands
coming in from applications. The first tool is the trace facility of the
ODBC Driver Manager, which is started from the ODBC Administrator. You can
click the Options button in the main ODBC Administrator window, then select
the trace options to start tracing all calls made to any ODBC data source
on the client. This Driver Manager trace traces ODBC calls right after they
come into the Driver Manager, and is helpful in debugging problems that the
Driver Manager may have when connecting to a driver. This is a fairly
minimal trace, however, and the second tool, ODBCSpy, is the one most
commonly used to troubleshoot ODBC calls.
<P>
The ODBCSpy utility ships with the ODBC SDK and can be used to get a very
informative trace of all the ODBC calls made to a specific ODBC data
source. ODBCSpy traces calls as they are passed from the Driver Manger to
the ODBC driver. It shows all of the parameters passed for each call to the
driver, and the information returned from the driver. If an error is
encountered, ODBCSpy calls SQLError for all error messages returned, and
logs the full information about the errors in the trace.
<P>
There are also third-party ODBC packages that provide ODBC tracing tools.
<P>
ODBCSpy can tell you what commands are going into an ODBC driver, but they
must rely on the native tracing functions of the backend data source to
determine what SQL commands are generated by two-tier ODBC drivers, such as
the Microsoft SQL Server ODBC Driver. All versions of Microsoft SQL Server
provide trace flags to trace all the SQL commands coming into the server.
The trace flags are documented in either Appendix A of the SQL Server 4.2
"Troubleshooting Guide" or Chapter 24 of the SQL Server 6.0
"Administrator's Companion." In addition to the server traces, SQL Server
6.5 also introduces a SQL Trace utility that can be used to trace the SQL
commands as they arrive at the server. The SQL Trace utility is documented
in the "What's New in SQL Server 6.5," Part 3, What's New for
Administrators, SQL Trace. The following paragraphs will first discuss the
trace flags, and then SQL Trace.
<P>
The 4032 trace flag traces the SQL commands coming in from the client.
This trace can be returned to the client by also using the 3604 trace, or
the SQL can be logged in SQL Server's error log by using the 3605 trace.
The -1 trace flag will make the trace cover all clients connecting to the
server, otherwise the trace is specific to the connection issuing the trace
command. The command to turn on the traces is:
<P>
<PRE>   DBCC TRACEON(flag1,flag2,...,flagn)

</PRE>For example:
<P>
Log all SQL commands from all clients to the errorlog:
<P>
<PRE>   DBCC TRACEON(4032,3605,-1)

</PRE>Echo all SQL commands from this connection back to the client:
<P>
<PRE>  DBCC TRACEON(4032,3604)

</PRE>The traces remain on until turned off with DBCC TRACEOFF, or until
the SQL Server is stopped and restarted. The trace flags can also be
turned on if SQL Server is started from the command line (see the SQL
Server manuals for more information).
<P>
The SQL Server 4.2 errorlog is in C:\SQL\LOG if the SQL Server was
installed using the setup defaults. For SQL Server 6.0, it is in
C:\SQL60\LOG, and for SQL Server 6.5, it is in C:\MSSQL\LOG.
<P>
For ODBC clients it is usually best to log the SQL commands to the
errorlog using the 3605 trace. If the troubleshooting is being done
through ODBCTest, then it is fairly easy to issue:
<P>
<PRE>   SQLExecDirect(hstmt,"dbcc traceon(3605,4032)",SQL_NTS);

</PRE>This can also be added to a program which calls the ODBC API directly
and which is being interactively debugged. If the ODBC application
opens multiple connections, or does not offer the ability to call the
ODBC API directly, it is best to isolate the application so that it is
the only application running against a SQL Server, then issue:
<P>
<PRE>  dbcc traceon (4032,3605, -1)

</PRE>from either ODBCTest, the SQL Server ISQL/w utility, or any other
utility that will allow the entry of ad hoc commands.
<P>
If the 4032 trace is sent to the SQL Server errorlog, it is best to read
the errorlog with the Write application rather than Notepad because Write
formats the output more clearly.
<P>
The SQL commands generated by the Microsoft SQL Server ODBC Driver are sent
to the server in one of two ways, either as standard SQL commands or as SQL
Server Remote Procedure Calls (RPCs). (Review the section on Remote
Procedure Calls in the SQL Server 6.0 ODBC Driver help file DRVSSRVR.HLP if
you want more information). The SQL Server 4.21a driver does not make as
much use of RPCs as the SQL Server 6.0 driver. These will show up in two
different formats in a 4032 trace. For example, the command:
<P>
<PRE>   SQLExecDirect(hstmt,
                 "exec parmproc @cntr=1, @string='abcde'",
                 SQL_NTS);

</PRE>will be executed as a standard SQL command and will generate a 4032 trace
of:
<P>
<PRE>   95/10/28 13:51:02.85 11 LangExec: 'parmproc @cntr=1, @string='abcde'

</PRE>Executing the same procedure using the ODBC call syntax with the SQL Server
6.0 driver:
<P>
<PRE>   SQLExecDirect(hstmt,
                 "{ call parmproc (1,'abcde') }",
                 SQL_NTS);

</PRE>will be executed as a SQL Server RPC and will generate a 4032 trace of:
<P>
<PRE>   execrpc: parmproc
     parm 0: numeric, len 2(17), value: 1
     parm 1: varchar, len 5(255), value: abcde

</PRE>The SQL Server 6.5 "What's New in SQL Server 6.5" documentation section on
SQL Trace discusses how to turn on filters to capture SQL commands coming
into a SQL Server 6.5. Once a filter has been applied to an ODBC client,
the SQL commands being sent to the server by the driver will be visible.
The two sample executions of parmproc given above show up in the following
format in SQL Trace:
<P>
<PRE>   -- 4/16/96 20:24:17.783 SQL (ID=7, SPID=13, User=sa(REDMOND\alanbr),
      App='Microsoft ODBC SDK v2.0', Host='ALANBR3'(bf) )
   exec parmproc @cntr = 1, @string = 'abcde'
   go

   -- 4/16/96 20:24:41.116 RPC (ID=7, SPID=13, User=sa(REDMOND\alanbr),
      App='Microsoft ODBC SDK v2.0', Host='ALANBR3'(bf) )
   parmproc 1, "abcde", 1, "abcde"
   go
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 2.50 sql65 sql6 4.21 odbc utility<BR>
Keywords            : kbinterop kbprg SSrvProg<BR>
Version             : 6.0 6.5<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
