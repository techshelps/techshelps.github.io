

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Using Cursors to Return Results in Embedded SQL for COBOL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q66749 ">
<META NAME="KBModify" CONTENT="1997/04/25">
<META NAME="KBCreate" CONTENT="1990/11/07">
<META NAME="Keywords" CONTENT="kbprg SSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  The code listed below demonstrates how to use a cursor to return multiple row results from Microsoft's SQL Server in an Embedded SQL for COBOL program. The code selects all author names from the author's table in pubs.  For more information on this...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABM,QAN0,QAO2,QAUD,QA5V,QAH4,QA5C,QBVV,QAY2,QAX6,QAL3,QAGB,QAC6,QBWS,QBM2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Using Cursors to Return Results in Embedded SQL for COBOL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q66749 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft Embedded SQL version 4.2 for COBOL
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code listed below demonstrates how to use a cursor to return
multiple row results from Microsoft's SQL Server in an Embedded SQL
for COBOL program. The code selects all author names from the author's
table in pubs.
<P>
For more information on this topic, see the "Microsoft Embedded SQL
for COBOL Programmer's Reference."
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The basic structure is as follows:

<OL><P><LI>Declare the cursor with the SQL SELECT statement.

<P><LI>Open the cursor.

<P><LI>Fetch and display each row until you receive an error (sqlcode &lt; 0),
   or all rows have been returned (sqlcode = 100).

<P><LI>Close the cursor.
<P>
</OL><h3>Sample Code</h3>
 
<P>
<PRE>       WORKING-STORAGE SECTION.

       EXEC SQL INCLUDE SQLCA END-EXEC

       EXEC SQL BEGIN DECLARE SECTION END-EXEC
       01  first-name  pic x(40).                *&gt; authors.au_fname
       01  last-name   pic x(20).                *&gt; authors.au_lname
       01  prep        pic x(38).
       EXEC SQL END DECLARE SECTION END-EXEC

       PROCEDURE DIVISION.

      * Declare the cursor, open the cursor, fetch results, and *
      * close the cursor. *
       EXEC SQL
         declare cursor-select cursor for
           select au_fname, au_lname from authors
       END-EXEC
       if sqlcode not = 0
         perform sql-error
       else
         EXEC SQL
           open cursor-select
         END-EXEC
         if sqlcode not = 0
           perform sql-error
         else
           display "The authors in the pubs..authors table are:"
      * When no more rows are returned, sqlcode = 100. *
           perform fetch-rows until sqlcode &lt; 0 or sqlcode = 100
           EXEC SQL
             close cursor-select
           END-EXEC
           if sqlcode not = 0
             perform sql-error
           end-if
         end-if
       end-if
       stop run.

       fetch-rows.
      * Fetch the next row from the table and display it. *
       EXEC SQL
         fetch cursor-select into :first-name, :last-name
       END-EXEC
       if sqlcode = 0
         display first-name last-name
       else
         if sqlcode not = 100           *&gt; 100 when no more rows
           perform sql-error
         end-if
       end-if.

       sql-error.
         display "SQL error SQLCODE=" sqlcode.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbprg SSrvProg<BR>
Version             : 4.2 | 4.2<BR>
Platform            : MS-DOS OS/2<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
