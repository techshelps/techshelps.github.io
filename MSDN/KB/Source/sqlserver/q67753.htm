

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INF: Using the "*=" and "=*" (Outer Join) Operators </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67753 ">
<META NAME="KBModify" CONTENT="1997/04/25">
<META NAME="KBCreate" CONTENT="1990/12/13">
<META NAME="Keywords" CONTENT="kbusage SSrvServer">
<META NAME="KBArea" CONTENT="Support; KB; sqlserver">
<META NAME="Description" CONTENT="  An outer join is defined as:     A join that includes all rows from the outer table, regardless of    whether there is a matching row in the inner table. If there is    no matching row in the inner table, or if the join condition is not    met, the...">
<META NAME="Product" CONTENT="SQL Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBPJ,QDNB,QAL3,QABM,QAI4,QBXS,QAK9,QAY2,QAWM,QABN,QA5V,QAJ9,QAA8,QARR,QAHT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INF: Using the "*=" and "=*" (Outer Join) Operators</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67753 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:
<P>
<PRE>  - Microsoft SQL Server version 4.2 for OS/2
</PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An outer join is defined as:
<P>
<PRE>   A join that includes all rows from the outer table, regardless of
   whether there is a matching row in the inner table. If there is
   no matching row in the inner table, or if the join condition is not
   met, the second table generates a "NULL" result as a match for that
   row.

</PRE>The outer join operators are "*=" and "=*". The "*=" operator
indicates that the first table is the outer table, and the second
table is the inner table. The "=*" operator indicates the reverse: the
first table is the inner table, and the second table is the outer
table. In any join, restrictions other than the join condition can be
placed on the outer table, but no restrictions beyond the join
condition can be placed on the inner table.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Example</h3>
 
<P>
Consider the following operations on these two simple tables:
<P>
<PRE>          Table1                       Table2
   ----------------------      --------------------------
   | Col1   |    Col2   |      |    Col3 |  Col4        |
   ----------------------      --------------------------
      1     |     1                  1   |    11
      2     |     2                  3   |    13
      3     |     3
      4     |     4

</PRE>A simple outer join that tests from equality between Table1.Col1 and
Table2.Col3, designating Table1 as the outer table, and Table2 as the
inner table, would look like the following:
<P>
<PRE>   SELECT * FROM TABLE1, TABLE2
    WHERE COL1 *= COL3

</PRE>The result set from this operation will be:
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    1     |     1   |   1    |   11
    2     |     2   |   NULL |   NULL
    3     |     3   |   3    |   13
    4     |     4   |   NULL |   NULL

</PRE>Note that rows 2 and 4 from Table1 are "joined" with NULL, due to the
fact that there where no matching rows in Table2.
<P>
Reversing the direction of the join produces a different result set,
and no rows joined with "NULL":
<P>
<PRE>   SELECT * FROM TABLE1, TABLE1
    WHERE COL1 =* COL3

</PRE>The following result set is produced:
<P>
<PRE>      Col1       Col2     Col3     Col4
   ---------------------------------
    1     |     1   |   1    |   11
    3     |     3   |   3    |   13

</PRE>The behavior of outer joins is fairly straightforward, as long as no
restrictions beyond the outer join restriction is placed on the inner
table. When restrictions are placed on the inner table of an outer
join, the results may appear unpredictable. Actually, they are not
unpredictable (within the context of a single implementation of SQL),
and conform exactly to the rules governing outer joins. Consider the
first example, with an additional restriction:
<P>
<PRE>   SELECT * FROM TABLE1, TABLE2
    WHERE COL1 *= COL3
    AND COL4 = NULL

</PRE>Considering that the result set without the additional restriction is
as follows
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    1     |     1   |   1    |   11
    2     |     2   |   NULL |   NULL
    3     |     3   |   3    |   13
    4     |     4   |   NULL |   NULL

</PRE>it seems logical that the restricted result set would be the following
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    2     |     2   |   NULL |   NULL
    4     |     4   |   NULL |   NULL

</PRE>(and it is, in some implementations of SQL; see "Further Explanation,"
below).
<P>
However, the definition of an outer join specifies that ALL rows from
the outer table will appear in the result set, so the result set is
actually:
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    1     |     1   |   1    |   NULL
    2     |     2   |   NULL |   NULL
    3     |     3   |   3    |   NULL
    4     |     4   |   NULL |   NULL

</PRE><h3>Further Explanation</h3>
 
<P>
Using additional restrictions on the inner table of an outer join is
considered "undefined" behavior. All SQL engines will handle this
syntax in a slightly different manner, and the behavior is only
predictable with respect to a particular implementation. In the case
of Microsoft SQL Server, the additional restrictions are actually
incorporated into the base select statement generating the result set.
Therefore, if you impose an additional restriction that creates a
condition that is met, it will be displayed in the result set. For
example, if you change the last example to test for the value "13" in
column 4, rather than NULL, the result set will be:
<P>
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    1     |     1   |   1    |   NULL
    2     |     2   |   NULL |   NULL
    3     |     3   |   3    |    13
    4     |     4   |   NULL |   NULL

</PRE>The other popular implementation is to take a "temp result table" from
the join condition, and then apply the further restriction to it. This
result set violates the definition of an outer join, because not all
rows from the outer table will be displayed. However, since this is
undefined behavior according to the ANSI standard, both positions can
be defended. The result set that you get from the following test query
<P>
<PRE>     SELECT * FROM TABLE1, TABLE2
       WHERE COL1 *= COL3
       AND COL4 = NULL

</PRE>is the following "intuitive" result set:
<P>
<PRE>   Col1       Col2     Col3     Col4
   ---------------------------------
    2     |     2   |   NULL |   NULL
    4     |     4   |   NULL |   NULL
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords            : kbusage SSrvServer<BR>
Version             : 4.2<BR>
Platform            : OS/2<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
