

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LAN Manager 2.1 Server Autotuning (Part 1) </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80077 ">
<META NAME="KBModify" CONTENT="1994/09/30">
<META NAME="KBCreate" CONTENT="1992/01/16">
<META NAME="Keywords" CONTENT="kbnetwork">
<META NAME="KBArea" CONTENT="Support; KB; lanman">
<META NAME="Description" CONTENT="  All versions of LAN Manager earlier than version 2.1 provide user configurable server tuning. Tuning requires knowledge of the structure of the LANMAN.INI file so the system administrator can edit the file. Furthermore, knowledge of the OS/2 operat...">
<META NAME="Product" CONTENT="Lan Manager">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QAGU,QABA,QAY5,QAVZ,QDIV,QBXS,QAKD,QAH5,QABY,QBVX,QBWE,QBVV,QA0B,QBF0 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>LAN Manager 2.1 Server Autotuning (Part 1)</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 30, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80077 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft LAN Manager versions 2.1, 2.1a and 2.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
All versions of LAN Manager earlier than version 2.1 provide user
configurable server tuning. Tuning requires knowledge of the structure
of the LANMAN.INI file so the system administrator can edit the file.
Furthermore, knowledge of the OS/2 operating system is required in
order to optimize performance. Finally, resource requirements must be
understood and taken into account for effective operation. If these
steps are not taken, a LAN Manager server may operate poorly and may
not provide users with adequate resources.
<P>
This article contains part 1 of this discussion. For part 2 of this
discussion, query on the following words in the Microsoft Knowledge
Base:
<P>
<PRE>   autotuning and part 2

</PRE><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Server Tuning Defined</h3>
 
<P>
There are four categories of server tuning required of a network
server:
<P>
<PRE>   Category             Description
   --------             -----------

   Resource tuning      Server variables are set to satisfy clients.
   Performance tuning   Server variables are set for optimum server speed.
   Static tuning        Server variables are set upon startup.
   Dynamic tuning       Server variables are modified during server
                        operation.

</PRE><h3>Purpose</h3>
 
<P>
Autotuning has been incorporated into LAN Manager to assure that LAN
Manager servers can be easily installed, configured, and operated
effectively. Performance autotuning allows the server to adjust its
variables and server startup parameters to be as fast as possible.
Resource autotuning means that the server tries to adjust its global
variables and server startup values to satisfy client request.
However, the server does not take more resources than it needs.
<P>
By hiding parameters and removing those parameters that can be
autotuned, the LANMAN.INI file has been made much shorter to simplify
configuration and tuning.
<P>
<P><h3>How Autotuning Is Done</h3>
 
<P>
Virtually all of the server autotuning performed is resource tuning,
and most of the tuning is performed statically, as listed below. In
other words, changes are made to server parameters during server
startup. If a parameter value is exceeded during ordinary server
operation, the server notes this fact statistically in server memory
and increments a counter. In the same manner, the counter is
decremented if the parameter is not used. Upon server shutdown, the
tuning configuration file is updated. The file is also updated every
hour after the server has been in operation for 48 hours. These
statistics are implemented dynamically or statically, depending on the
"lanman" parameter.
<P>
In the \LANMAN\SERVICES\SERVER.CFG file, "Old server settings"
contains the settings used during server startup. "New server
settings" contains server best values for the next startup.
<P>
Note: This file can be viewed by running \LANMAN\SERVICES\READCFG. Do
not attempt to change the file using an editor--it is formatted and
contains a CRC parity check. If for any reason the file is modified or
damaged, CRC will fail server startup. As a result, if the file is
modified, damaged, or lost, it will be re-created. LANMAN.INI and
PROTOCOL.INI are text files that can be edited using a text editor
such as the OS/2 editor E. Before editing any file, always make a
backup copy of the original. Also, customized parameter changes may be
overwritten by Setup with default settings if Setup is run sometime in
the future.
<P>
Upon server startup, parameters will be set using the following
methods, in order of precedence:

<OL><P><LI>NET [ADMIN] command setting is performed only during system
   operation.

<P><LI>Settings are specified in LANMAN.INI.

<P><LI>SERVER.CFG saves the "best settings" from the last system shutdown.

<P><LI>LANMAN.INI defaults are used as a reference if no other
   specifications are available.
<P>
</OL><h3>Dynamic Resource Autotuning</h3>
 
<P>
The server automatically modifies these hidden parameters during
server operation. When the server statistics note that one of these
parameters has been exceeded, the server implements the newly
incremented value for the parameter. To conserve memory used by the
server, these parameters are decremented when they are not used.
Current parameter values are saved to the SERVER.CFG file upon server
shutdown as well as once every hour after the server has operated for
48 hours.
<P>
Note: Do not attempt to set these parameters in the LANMAN.INI file or
the server will not start. As of version 2.1, these parameters have
been removed from LANMAN.INI because no user modification is
necessary.
<P>
LANMAN.INI:
<P>
maxchdevq = 2
maxchdevs = 2
<PRE>maxconnections = 128    (maxusers, 2000)
maxlocks = 64           (1-8000)
maxopens = 64           (1-8000)
maxsearches = 50        (0-1927)


</PRE></OL><h3>Static Resource Autotuning</h3>
 
<P>
This group of parameters consists of hidden tuned parameters. The
server will monitor statistics regarding the usage of these parameters
and will save suggested startup values for these parameters. They are
set only during server startup. Based on the collected statistics, the
server will save suggested best values in SERVER.CFG. Users can
specify these parameters in LANMAN.INI and on the command line to
override current server settings.
<P>
<PRE>   LANMAN.INI:

   Maxshares = 64  (2-500)
   Maxusers = 10   (1,1000) ; default = 200 for unlimited server
   Numreqbuf = 150 (5-300) ;


</PRE><h3>Static Performance Autotuning</h3>
 
<P>
These parameters are automatically set by the server for optimum
performance because they are stored during ordinary operation in the
\LANMAN\SERVICES\SERVER.CFG file. However, the only time they are set
is during the server startup. Based on the collected statistics, the
server will save suggested best values. Cache hit rates should remain
high during optimal server operation. Use CACHE /STATS to verify this.
If the cache hit rate decreases, server system RAM may need to be
increased so that more cache memory can be reserved.

<OL><P><LI>HPFS386 Cache
<P>
   OS/2 version 1.3.1 has been included with LAN Manager 2.1 for
   server installation. Cache memory is assigned automatically by the
   HPFS386 IFS. This is the most notable example of server performance
   autotuning. When HPFS386 is initialized upon startup, an OEM$ IOCTL
   is used to ascertain the "best value" for system caching. Once this
   cache memory has been designated, it has been reserved for cache
   and is not available to other OS/2 processes. However, HPFS386 can
   obtain memory from the cache pool if OS/2 is unable to allocate
   other system memory for HPFS386 operations. This parameter can be
   overridden manually, as explained in the section below titled
   "Cache too Large, Slow Operation."
<P>
   Example: Upon installation of a 12 MB system, 6144 is assigned for
   HPFS386 caching.
<P>
   Note: The above applies to HPFS386 volumes only. All FAT partitions
   use DiskCache = 64 (64..512..1024....). This memory is reserved for
   FAT caching.

<P><LI>NumBigBuf
<P>
   LAN Manager 2.1 uses NumBigBuf to denote the maximum number of 64K
   locked buffers to be used for raw reads and writes. This is
   different from previous LAN Manager implementations! This parameter
   can be overridden manually by specifying the parameter explicitly
   in LANMAN.INI. Otherwise, the server startup values for SERVER.CFG
   will be used.
<P>
   LANMAN.INI
   ----------
<P>
<PRE>   Numbigbuf = 3        (0-80) ; Used only for FAT. IF HPFS386, set to 0.

</PRE></OL><h3>Displayed Untuned Parameters</h3>
 
<P>
These parameters are present in LANMAN.INI as a result of the
installation process:
<P>
alertnames =
<PRE>auditing = no         (yes,no)
</PRE>security = user
srvservices = alerter
srvcomment =
<P>
<P><h3>Hidden Untuned Parameters</h3>
 
<P>
Under LAN Manager 2.1, these parameters are not listed in LANMAN.INI.
As a result, LANMAN.INI for LAN Manager 2.1 has been simplified. They
are not tuned in any way by the server; however, NET ADMIN can be used
to set them. They also can be set by editing LANMAN.INI using a text
editor.
<P>
<PRE>   LANMAN.INI:

   Maxchdevjob = 6 (0-65535)
   MaxSessReqs = 50 (1-65535)
   MaxSessOpens = 50 (1, MaxOpens)  Used with Fat, not HPFS386.
   Sizreqbuf = 4096 (1024-32768); Match Workstation SizeWrkbuf 2048, 4096.
 *   Note: Sizereqbuf listed by ReadCfg as 4356, due to system padding.
     The actual value is 4096.
   NumFileTasks = 1      (1-8) Hpfs386 sets to 1 automatically
   NumAdmin = 64   (0-65535)
   Noauditing = string

   Srvheuristics = 11110151111211001331

   ;Note: A template can be used in place of default digits, x is used
   ;for masking. For example, set srvheuristic 3 to 0; all remaining
   ;digits will be default settings.
   ;Srvheuristics = xx0

   srvnets = net1,..netx (corresponds to wrknets)
   userpath = \accounts\userdirs
   autopath = srvauto.pro
   autoprofile = both
   guestacct = GUEST
   accessalert = 5
   alertsched = 5
   diskalert = 300
   erroralert = 5
   logonalert = 5
   maxauditlog = 100
   netioalert = 5
   srvanndelta = 3000
   srvannounce = 60
   srvhidden = no
   autodisconnect = -1 (Can be modified only for unlimited user pak;
                        e.g., 120)
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.10 2.10a 2.20<BR>
KBCategory: kbnetwork<BR>
KBSubcategory: ntfilesys<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 30, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
