

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OEMSETUP.INF Modifications for Automated Windows NT Setup </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q143134">
<META NAME="KBModify" CONTENT="1997/04/11">
<META NAME="KBCreate" CONTENT="1996/01/28">
<META NAME="Keywords" CONTENT="kbsetup ntreskit ntsetup">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  If you install an Original Equipment Manufacturer (OEM) network adapter in an unattended setup or a Computer Profile Setup (CPS) of Windows NT, the following error message appears:     A network card of this type is already installed in the system....">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QDI2,QDIZ,QAB4,QBWP,QAH4,QABI,QBXS,QAAP,QA7R,QAVZ,QAMB,QAEF,QAJQ,QDKW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OEMSETUP.INF Modifications for Automated Windows NT Setup</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q143134</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.5 and 3.51
<LI>Microsoft Windows NT Server versions 3.5 and 3.51
<LI>Microsoft Windows NT Resource Kit versions 3.5 and 3.51
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you install an Original Equipment Manufacturer (OEM) network adapter in
an unattended setup or a Computer Profile Setup (CPS) of Windows NT, the
following error message appears:
<P>
<PRE>   A network card of this type is already installed in the system.
   Do you want to continue?"

</PRE>If you click OK, you may make changes or accept the network adapter
configuration. If you click Continue, the following error message appears:
<P>
<PRE>   The dependency service or group failed to start.
   This error prevented the network from starting.

</PRE>If you click OK, the following error message appears:
<P>
<PRE>   The network software failed to start successfully. Choose YES
   to return to the Network dialog to reconfigure the software.
   If you choose NO to continue with the installation you will be
   unable to join a domain at the present time.

</PRE><h2>CAUSE</h2>
 
<P>
The OEMSETUP.INF file for many OEM network adapters do not support
unattended setup or CPS.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
A few tips for customizing OEMSETUP.INF files are included below. For more
information, refer to the Programmer's Guide included in the Windows NT
DDK, contact Microsoft Consulting Services or contact a Solution Provider.
<P>
The Enterprise Customer Unit does not support the modification of
OEMSETUP.INF files.
<P>
WARNING: Modification of Setup files can cause serious, system-wide
problems before and after Setup and may require you to reinstall Windows NT
to correct them. Microsoft cannot guarantee that any problems resulting
from the modification of the Setup files can be solved. Make Setup file
modifications at your own risk.
<P>
To prevent user interaction during Setup, either skip the code fragments
using the GOTO function or comment out code fragments by adding a semicolon
(;) to the beginning of a line.
<P>
You can skip code using the GOTO function. Many Network INF files in
Windows NT are designed by using this method. This can be considered a
solution suitable for CPS or Unattended Setup, as well as manual or
interactive Setup. Make sure you understand the implications of skipping
code - results in the symptoms mentioned above.
<P>
<P><h3>Example</h3>
 
<P>
<PRE>   installadapter = +
   Debug-Output "At installadapter"
   ;
   ;  First, check whether the same version of the software exists
   ;
   ;; As a workaround for CPS and Unattended Setup, the below lines have
   ;  been added:
   ifstr(i) $(!STF_GUI_UNATTENDED) == "YES"
     goto skipoptions
   endif

   NOTE: In many cases, the skipoptions section may be called nextstep.
   Look at your OEMSETUP.INF file to verify the appropriate section name.

</PRE>Commenting Out Code:
<P>
Commenting out code fragments should only be considered a workaround for
CPS and Unattended Setup. Subsequent manual installation or configuration
of the Network adapter software may result in symptoms mentioned above.
Make sure you understand the implications of commenting out code. When
possible, skip code using the method described above.
<P>
<P><h3>Example 1</h3>
 
<P>
<PRE>   installadapter = +
   Debug-Output "At installadapter"
   ;
   ;  First, check whether the same version of the software exists
   ;
   ;; As a workaround for CPS and Unattended Setup, the below lines are
   ;  commented out by prepending a semicolon.
   ;    OpenRegKey $(!REG_H_LOCAL) "" $(ProductKeyName) $(MAXIMUM_ALLOWED)
   KeyProduct
   ;    Ifstr $(KeyProduct) != $(KeyNull)
   ;
   ; Same version already existed in the local machine
   ; Popup the dialog and ask the user whether he wants to continue
   ;
   ;   CloseRegKey $(KeyProduct)
   ; ifstr(i) !(NTN_RegBase) == $(ProductKeyName)
   ;
   ; Cannot Install the same software again
   ;
   ;   Shell $(UtilityInf), VerExistedDlg, $(ProductSoftwareTitle),+
   ;   $(ProductVersion)
   ;   ifint $($ShellCode) != $(!SHELL_CODE_OK)
   ;     Debug-Output "ShellCode error: cannot get an error string."
   ;     goto ShellCodeError
   ;   endif
   ;   goto end
   ; else
   ;
   ; Add a new adapter card?
   ;
   ;   Shell $(UtilityInf), CardExistedDlg
   ;   ifint $($ShellCode) != $(!SHELL_CODE_OK)
   ;     Debug-Output "ShellCode error: cannot get an error string."
   ;     goto ShellCodeError
   ;   endif
   ;     ifstr(i) $($R1) != "OK"
   ;       goto end
   ;     endif
   ;     set OldVersionExisted = $(TRUE)
   ;   endif
   ; endif

</PRE><h3>Example 2</h3>
 
<P>
<PRE>   ;===================================================
   ;  Netcard Detection logic
   ;
   ;   Check that this card's parameters can be
   ;   fully detected.
   ;
   ;; As a workaround for CPS and Unattended Setup, the below line is
   ;  commented out by prepending a semicolon.
   ; Shell $(ParamInf) Param_ParameterConfidence
     Ifstr(i) $($R0) != STATUS_SUCCESSFUL
     Debug-Output "OEMNADIN.INF: parameter confidence too low to bypass
     configuration"

</PRE><h3>Example 3</h3>
 
<P>
<PRE>   ;; As a workaround for CPS and Unattended Setup, the below lines are
   ;  commented out by prepending a semicolon.
   ;===================================================
   ;Display configuration dialog if confidence is too low. This is to
   ;provide
   ;the user the opportunity to verify or modify the settings manually.
   ;
   ; ui start "InputDlg"
   ;    ifstr(i) $(DLGEVENT) == "CONTINUE"
   ;     Set IRQValue = $(Combo1Out)
   ;        Set IOAddrValue = $(Combo2Out)
   ;   Set IOReadyValue = ~($(IOReadyListExt),$(Combo3Out))
   ;        Set IOReadyValue = ~($(IOReadyList),$(Combo3Out))
   ;   Set TransceiverValue = ~($(TransceiverList),$(Combo4Out))
   ;   ui pop 1
   ;    else-ifstr(i) $(DLGEVENT) == "BACK"
   ;   set CommonStatus = STATUS_USERCANCEL
   ;   Debug-Output "Action: exit. Bye."
   ;   ui pop 1
   ;   goto end
   ;    else
   ;   Debug-Output "Action: unknown. Bye."
   ;   ui pop 1
   ;   goto end
   ;    endif

</PRE><h3>Example 4</h3>
 
<P>
<PRE>   ;   Verify parameter values selected. Give the user a chance to retry
   ;   or force the options given.
   ;
   Set from = adapteroptions
   Set to = skipoptions
   ;; As a workaround for CPS and Unattended Setup, the below lines are
   ;  commented out by prepending a semicolon.
   ;  Shell $(UtilityInf),RegistryErrorString,VERIFY_WARNING
   ;  ifint $($ShellCode) != $(!SHELL_CODE_OK)
   ;    Debug-Output "ShellCode error: cannot get an error string."
   ;    goto ShellCodeError
   ;  endif
   ;  set Error = $($R0)
   ;  Goto Warning

</PRE>To retrieve adapter parameters from an answer file, you must modify the
OEMSETUP.INF file. The Unattended Setup answer file is called UNATTEND.TXT.
The CPS answer file is located in %SystemRoot%\SYSTEM32\DEFAULTS.INF on the
distribution share.
<P>
<P><h3>Example</h3>
 
<P>
<PRE>   writeparameters = +
   Debug-Output "At writeparameters"
   ;
   ;   Add the rest of the parameters to the Services area
   ;
   Ifstr(i) $(MachineType) == "MCA"
      set NewValueList =
   {{BusType,$(NoTitle),$(!REG_VT_DWORD),$(BusTypeNum)},+
      {McaPosId,$(NoTitle),$(!REG_VT_DWORD),$(NETCARD_ID)},+
      {SlotNumber,$(NoTitle),$(!REG_VT_DWORD),$(SlotNum)},+
      {MediaType,$(NoTitle),$(!REG_VT_DWORD),1}}
   else
      Set IOAddrValue = *($(IOAddrValues),
      ~($(IOAddrList),$(IOAddrValue)))

      Shell "" DebugConfiguration "Before Writing Parameters"
      set NewValueList =
   {{INTERRUPT,$(NoTitle),$(!REG_VT_DWORD),$(IRQValue)},+
      {BusType,$(NoTitle),$(!REG_VT_DWORD),$(BusInterfaceType)},+
      {BusNumber,$(NoTitle),$(!REG_VT_DWORD),$(BusNumber)},+
      {MediaType,$(NoTitle),$(!REG_VT_DWORD),1},+
      {IoChannelReady,$(NoTitle),$(!REG_VT_DWORD),$(IOReadyValue)},+
      {Transceiver,$(NoTitle),$(!REG_VT_DWORD),$(TransceiverValue)},+
      {IOADDRESS,$(NoTitle),$(!REG_VT_DWORD),$(IOAddrValue)}}
   endif

   Shell  $(UtilityInf), AddValueList, $(KeyParameters), $(NewValueList)
   ;;  Following lines added for CPS or Unattended Setup
   ifstr(i) $(!STF_GUI_UNATTENDED) == "YES"
     Shell $(UtilityInf),AddDefaultNetCardParameters,$(KeyParameters)
   endif
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: automate<BR>
Keywords            : kbsetup ntreskit ntsetup<BR>
Version             : 3.5 3.51<BR>
Platform            : WinNT<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
