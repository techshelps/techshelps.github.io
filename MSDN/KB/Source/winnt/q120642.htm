

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TCP/IP &amp; NBT Configuration Parameters for Windows NT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120642">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1994/09/15">
<META NAME="Keywords" CONTENT="NTSrvWkst nttcp kbenv kbnetwork">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  The TCP/IP protocol suite implementation for Windows NT 3.5x and 4.0 reads all of its configuration data from the registry. This information is written to the registry by the Network Control Panel Applet (NCPA) as part of the setup process. Some of...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHE,QBWD,QAKD,QABA,QBFM,QAUJ,QAWI,QAKC,QDMR,QAP2,QDNT,QBWP,QAI4,QBXS,QAU3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>TCP/IP &amp; NBT Configuration Parameters for Windows NT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120642</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.5, 3.51 and 4.0
<LI>Microsoft Windows NT Server versions 3.5, 3.51 and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The TCP/IP protocol suite implementation for Windows NT 3.5x and 4.0 reads
all of its configuration data from the registry. This information is
written to the registry by the Network Control Panel Applet (NCPA) as part
of the setup process. Some of this information is also supplied by the
Dynamic Host Configuration Protocol (DHCP) client service if it is
enabled.
This reference defines all of the registry parameters used to configure
the
protocol driver, TCPIP.SYS, which implements the standard TCP/IP network
protocols.
<P>
The implementation of the protocol suite should perform properly and
efficiently in most environments using only the configuration information
gathered by the NCPA and DHCP. Optimal default values for all other
configurable aspects of the protocols have been encoded into the drivers.
<P>
There may be some unusual circumstances in customer installations where
changes to certain default values are appropriate. To handle these cases,
optional registry parameters can be created to modify the default behavior
of some parts of the protocol drivers.
<P>
CAUTION: The Windows NT TCP/IP implementation is largely self tuning.
Adjusting registry parameters without careful study may adversely affect
system performance.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
WARNING: Using Registry Editor incorrectly can cause serious, system-wide
problems that may require you to reinstall Windows NT to correct them.
Microsoft cannot guarantee that any problems resulting from the use of
Registry Editor can be solved. Use this tool at your own risk.
<P>
To change these parameters, use the following procedure:
1. Run Registry Editor (REGEDT32.EXE).

<OL><P><LI>From the HKEY_LOCAL_MACHINE subtree, go to the following key:
<P>
<P><PRE>      \SYSTEM\CurrentControlSet\Services.
</PRE>
<P><LI>Add a value to the key described in the appropriate entry below, by
   selecting "Edit -&gt; Add Value", typing in the value, and using the
   "Data Type" checkbox to set the value type.

<P><LI>Select OK.

<P><LI>Exit the Registry Editor.

<P><LI>Reboot the system to make the change take effect.
<P>
</OL>All of the TCP/IP parameters are registry values located under one of two
different subkeys of HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services:
<P>
<PRE>   Tcpip\Parameters
   &lt;Adapter Name&gt;\Parameters\Tcpip

</PRE></OL>where &lt;Adapter Name&gt; refers to the subkey for a network adapter that
TCP/IP
is bound to, such as Lance01. Values under the latter key(s) are specific
to each adapter. Parameters for which there may be both a DHCP and
statically configured value may or may not exist depending on whether the
system/adapter is DHCP configured and/or static override values have been
specified. A reboot of the system is required for a change in any of these
parameters to take effect.
<P>
IMPORTANT NOTE: The Windows NT 3.5 Resource Kit documentation was not
updated properly from version 3.1, and lists a number of incorrect TCP/IP
registry parameters. The parameters listed in this document should be used
in their place. The Windows NT 3.5 TCP/IP stack was a complete re-write,
so
many of the old parameters are no longer valid.
<P>
<P>
<P><h3>Standard Parameters Configurable using the Registry Editor</h3>
 
<P>
The following parameters are installed with default values by the NCPA
during the installation of the TCP/IP components. They may be modified
using the Registry Editor (regedt32.exe).
<P>
DatabasePath
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_EXPAND_SZ - Character string
     Valid Range: A valid Windows NT file path
     Default: %SystemRoot%\system32\drivers\etc
     Description: This parameter specifies the
     path to the standard internet database files
     (HOSTS, LMHOSTS, NETWORKS, PROTOCOLS). It is
     used by the Windows Sockets interface.

</PRE>ForwardBroadcasts
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: Forwarding of broadcasts is not
     supported. This parameter is ignored.

</PRE>UseZeroBroadcast
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: If this parameter is set to 1
     (True), then IP will use zeros- broadcasts
     (0.0.0.0) instead of ones-broadcasts
     (255.255.255.255). Most systems use ones-
     broadcasts, but some systems derived from BSD
     implementations use zeros-broadcasts. Systems
     that use different broadcasts will not
     interoperate well on the same network.


</PRE><h3>Optional Parameters Configurable using the Registry Editor</h3>
 
<P>
These parameters normally do not exist in the registry. They may be
created
to modify the default behavior of the TCP/IP protocol driver.
<P>
<PRE>ArpAlwaysSourceRoute     (new in NT 3.51)
     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False or True)
     Default: 0 (False)
     Description: Setting this parameter to 1 will
     force TCP/IP to transmit ARP queries with
     source routing enabled on Token Ring
     networks. By default, the stack transmits ARP
     queries without source routing first and
     retries with source routing enabled if no
     reply was received.

</PRE>ArpUseEtherSNAP
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False or True)
     Default: 0 (False)
     Description: Setting this parameter to 1 will
     force TCP/IP to transmit Ethernet packets
     using 802.3 SNAP encoding. By default, the
     stack transmits packets in DIX Ethernet
     format. It will always receive both formats.

</PRE>DefaultTOS
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 0 - 255
     Default: 0
     Description: Specifies the default Type Of
     Service (TOS) value set in the header of
     outgoing IP packets. See RFC 791 for a
     definition of the values.

</PRE>DefaultTTL
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number of
     seconds/hops
     Valid Range: 1-255
     Default: 32 for Windows NT version 3.51
     Default: 128 for Windows NT version 4.0
     Description: Specifies the default Time To
     Live (TTL) value set in the header of
     outgoing IP packets. The TTL determines the
     maximum amount of time an IP packet may live
     in the network without reaching its
     destination. It is effectively a limit on the
     number of routers an IP packet may pass
     through before being discarded.

</PRE>EnableDeadGWDetect
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False, True)
     Default: 1 (True)
     Description: Setting this parameter to 1
     causes TCP to perform Dead Gateway Detection.
     With this feature enabled, TCP will ask IP to
     change to a backup gateway if it retransmits
     a segment several times without receiving a
     response. Backup gateways may be defined in
     the Advanced section of the TCP/IP
     configuration dialog in the Network Control
     Panel.

</PRE>EnablePMTUBHDetect
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False, True)
     Default: 0 (False)
     Description: Setting this parameter to 1
     (True) causes TCP to try to detect "Black
     Hole" routers while doing Path MTU Discovery.
     A "Black Hole" router does not return ICMP
     Destination Unreachable messages when it
     needs to fragment an IP datagram with the
     Don't Fragment bit set. TCP depends on
     receiving these messages to perform Path MTU
     Discovery. With this feature enabled, TCP
     will try to send segments without the Don't
     Fragment bit set if several retransmissions
     of a segment go unacknowledged. If the
     segment is acknowledged as a result, the MSS
     will be decreased and the Don't Fragment bit
     will be set in future packets on the
     connection. Enabling black hole detection
     increases the maximum number of
     retransmissions performed for a given
     segment.

</PRE>EnablePMTUDiscovery
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False, True)
     Default: 1 (True)
     Description: Setting this parameter to 1
     (True) causes TCP to attempt to discover the
     Maximum Transmission Unit (MTU or largest
     packet size) over the path to a remote host.
     By discovering the Path MTU and limiting TCP
     segments to this size, TCP can eliminate
     fragmentation at routers along the path that
     connect networks with different MTUs.
     Fragmentation adversely affects TCP
     throughput and network congestion.  Setting
     this parameter to 0 causes an MTU of 576
     bytes to be used for all connections that are
     not to machines on the local subnet.

</PRE>ForwardBufferMemory
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number of bytes
     Valid Range: &lt;network MTU&gt; - &lt;some reasonable
     value smaller than 0xFFFFFFFF &gt;
     Default: 74240 (enough for fifty 1480-byte
     packets, rounded to a multiple of 256)
     Description: This parameter determines how
     much memory IP allocates to store packet data
     in the router packet queue. When this buffer
     space is filled, the router begins discarding
     packets at random from its queue. Packet
     queue data buffers are 256 bytes in length,
     so the value of this parameter should be a
     multiple of 256. Multiple buffers are chained
     together for larger packets. The IP header
     for a packet is stored separately. This
     parameter is ignored and no buffers are
     allocated if the IP router is not enabled.

</PRE>IGMPLevel
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 0,1,2
     Default: 2
     Description: This parameter determines to
     what extent the system supports IP
     multicasting and participates in the Internet
     Group Management Protocol. At level 0, the
     system provides no multicast support. At
     level 1, the system may only send IP
     multicast packets. At level 2, the system may
     send IP multicast packets and fully
     participate in IGMP to receive multicast
     packets.

</PRE>KeepAliveInterval
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 1 - 0xFFFFFFFF
     Default: 1000 (one second)
     Description: This parameter determines the
     interval separating keep alive
     retransmissions until a response is received.
     Once a response is receive, the delay until
     the next keep alive transmission is again
     controlled by the value of KeepAliveTime. The
     connection will be aborted after the number
     of retransmissions specified by
     TcpMaxDataRetransmissions have gone
     unanswered.

</PRE>KeepAliveTime
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 1 - 0xFFFFFFFF
     Default: 7,200,000 (two hours)
     Description: The parameter controls how often
     TCP attempts to verify that an idle
     connection is still intact by sending a keep
     alive packet. If the remote system is still
     reachable and functioning, it will
     acknowledge the keep alive transmission. Keep
     alive packets are not sent by default. This
     feature may be enabled on a connection by an
     application.

</PRE>MTU
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD Number
     Valid Range: 68 - &lt;the MTU of the underlying
     network&gt;
     Default: 0xFFFFFFFF
     Description: This parameter overrides the
     default Maximum Transmission Unit (MTU) for a
     network interface. The MTU is the maximum
     packet size in bytes that the transport will
     transmit over the underlying network. The
     size includes the transport header. Note that
     an IP datagram may span multiple packets.
     Values larger than the default for the
     underlying network will result in the
     transport using the network default MTU.
     Values smaller than 68 will result in the
     tranport using an MTU of 68.

</PRE>NumForwardPackets
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD Number
     Valid Range: 1 - &lt;some reasonable value
     smaller than 0xFFFFFFFF&gt;
     Default: 50
     Description: This parameter determines the
     number of IP packet headers allocated for the
     router packet queue. When all headers are in
     use, the router will begin to discard packets
     at random from the queue. This value should
     be at least as large as the
     ForwardBufferMemory value divided by the
     maximum IP data size of the networks
     connected to the router. It should be no
     larger than the ForwardBufferMemory value
     divided by 256, since at least 256 bytes of
     forward buffer memory are used for each
     packet. The optimal number of forward packets
     for a given ForwardBufferMemory size depends
     on the type of traffic carried on the network
     and will be somewhere in between these two
     values. This parameter is ignored and no
     headers are allocated if the router is not
     enabled.

</PRE>TcpMaxConnectRetransmissions
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 0 - 0xFFFFFFFF
     Default: 3
     Description: This parameter determines the
     number of times TCP will retransmit a connect
     request (SYN) before aborting the attempt.
     The retransmission timeout is doubled with
     each successive retransmission in a given
     connect attempt. The initial timeout value is
     three seconds.

</PRE>TcpMaxDataRetransmissions
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 0 - 0xFFFFFFFF
     Default: 5
     Description: This parameter controls the
     number of times TCP will retransmit an
     individual data segment (non connect segment)
     before aborting the connection. The
     retransmission timeout is doubled with each
     successive retransmission on a connection. It
     is reset when responses resume. The base
     timeout value is dynamically determined by
     the measured round-trip time on the
     connection.

</PRE>TcpNumConnections
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 0 - 0xfffffe
     Default: 0xfffffe
     Description: This parameter limits the
     maximum number of connections that TCP may
     have open simultaneously.

</PRE>TcpTimedWaitDelay (new in Windows NT versions 3.51 SP5 and later)
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Time in seconds
     Valid Range: 30-300 (decimal)
     Default: 0xF0 (240 decimal)
     Description: This parameter determines the length of time that a
     connection will stay in the TIME_WAIT state when being closed. While a
     connection is in the TIME_WAIT state, the socket pair cannot be re-
     used. This is also known as the "2MSL"  state, as by RFC the value
     should be twice the maximum segment lifetime on the network. See
     RFC793 for further details.

</PRE>TcpUseRFC1122UrgentPointer
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0,1 (False, True)
     Default: 0 (False)
     Description: This parameter determines
     whether TCP uses the RFC 1122 specification
     for urgent data or the mode used by BSD-
     derived systems. The two mechanisms interpret
     the urgent pointer in the TCP header and the
     length of the urgent data differently. They
     are not interoperable. Windows NT defaults to
     BSD mode.

</PRE>TcpWindowSize
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Number of bytes
     Valid Range: 0 - 0xFFFF
     Default: The smaller of 0xFFFF
     OR
     (The larger of four times the maximum TCP
     data size on the network
     OR
     8192 rounded up to an even multiple of the
     network TCP data size.)
     The default is 8760 for Ethernet.
     Description: This parameter determines the
     maximum TCP receive window size offered by
     the system. The receive window specifies the
     number of bytes a sender may transmit without
     receiving an acknowledgment. In general,
     larger receive windows will improve
     performance over high (delay * bandwidth )
     networks. For highest efficiency, the receive
     window should be an even multiple of the TCP
     Maximum Segment Size (MSS).


</PRE><h3>Parameters Configurable from the NCPA</h3>
 
<P>
The following parameters are created and modified automatically by the
NCPA
as a result of user-supplied information. There should be no need to
configure them directly in the registry.
<P>
DefaultGateway
<PRE>     Key: &lt;AdapterName&gt;\\Parameters\Tcpip
     Value Type: REG_MULTI_SZ - List of dotted
     decimal IP addresses
     Valid Range: Any set of valid IP addresses
     Default: None
     Description: This parameter specifies the
     list of gateways to be used to route packets
     not destined for a subnet that the computer
     is directly connected to, and for which a
     more specific route does not exist. This
     parameter, if it has a valid value, overrides
     the DhcpDefaultGateway parameter.

</PRE>Domain
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: Any valid DNS domain name
     Default: None
     Description: This parameter specifies the DNS
     domain name of the system. It is used by the
     Windows Sockets interface.

</PRE>EnableDhcp
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: If this parameter is set to 1
     (True), then the DHCP client service will
     attempt to configure the first IP interface
     on the adapter using DHCP.

</PRE>Hostname
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: Any valid DNS hostname
     Default: The computername of the system
     Description: This parameter specifies the DNS
     hostname of the system, that will be returned
     by the "hostname" command.

</PRE>IPAddress
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_MULTI_SZ - List of dotted-
     decimal IP addresses
     Valid Range: Any set of valid IP addresses
     Default: None
     Description: This parameter specifies the IP
     addresses of the IP interfaces to be bound to
     the adapter. If the first address in the list
     is 0.0.0.0, then the primary interface on the
     adapter will be configured from DHCP. A
     system with more than one IP interface for an
     adapter is called "logically multihomed."
     There must be a valid subnet mask value in
     the SubnetMask parameter for each IP address
     specified in this parameter.

</PRE>IPEnableRouter
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: Setting this parameter to 1
     (True) causes the system to route IP packets
     between the networks that it is connected to.

</PRE>NameServer
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_SZ - A space delimited list
     of dotted decimal IP addresses
     Valid Range: Any set of valid IP address
     Default: None (Blank)
     Description: This parameter specifies the DNS
     name servers to be queried by Windows Sockets
     to resolve names.

</PRE>SearchList
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_SZ - Space delimited list of
     DNS domain name suffixes
     Valid Range: Any set of valid DNS domain name
     suffixes
     Default: None
     Description: This parameter specifies a list
     of domain name suffixes to append to a name
     to be resolved via the DNS if resolution of
     the unadorned name fails. By default, the
     value of the Domain parameter is appended
     only. This parameter is used by the Windows
     Sockets interface.

</PRE>SubnetMask
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_MULTI_SZ - List of dotted
     decimal IP addresses
     Valid Range: Any set of valid IP addresses.
     Default: None
     Description: This parameter specifies the
     subnet masks to be used with the IP
     interfaces bound to the adapter. If the first
     mask in the list is 0.0.0.0, then the primary
     interface on the adapter will be configured
     via DHCP. There must be a valid subnet mask
     value in the this parameter for each IP
     address specified in the IPAddress parameter.


</PRE><h3>Parameters Configurable via the Route.exe Command in Windows NT 3.51</h3>
 
<P>
In Windows NT 3.51, the route.exe command stores persistent IP routes as
values under the Tcpip\Parameters\PersistentRoutes key. Each route
is stored in the value name string as a comma-delimited list of the form:
<P>
<PRE>     destination,subnet mask,gateway

</PRE>For example, the value representing a host route to destination
45.100.23.10 through gateway 131.110.0.1 would be named:
<P>
<PRE>     45.100.23.10,255.255.255.255,131.110.0.1

</PRE>The value type is a REG_SZ. There is no value data (empty string).
Addition
and deletion of these values can be accomplished entirely using the
route command. There should be no need to configure them directly.
<P>
<P>
<P><h3>Non-Configurable Parameters</h3>
 
<P>
The following parameters are created and used internally by the TCP/IP
components. They should never be modified using the Registry Editor. They
are listed here for reference only.
<P>
DhcpDefaultGateway
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\ Tcpip
     Value Type: REG_MULTI_SZ - List of dotted
     decimal IP addresses
     Valid Range: Any set of valid IP addresses
     Default: None
     Description: This parameter specifies the
     list of default gateways to be used to route
     packets not destined for a subnet that the
     computer is directly connected to, and for
     which a more specific route does not exist.
     This parameter is written by the DHCP client
     service, if enabled. This parameter is
     overridden by a valid DefaultGateway
     parameter value.

</PRE>DhcpIPAddress
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_SZ - Dotted decimal IP
     address
     Valid Range: Any valid IP address
     Default: None
     Description: This parameter specifies the
     DHCP-configured IP address for the interface.
     If the IPAddress parameter contains a first
     value other than 0.0.0.0, then that value
     will override this parameter.

</PRE>DhcpNameServer
<PRE>     Key: Tcpip\Parameters
     Value Type: REG_SZ - A space delimited list
     of dotted decimal IP addresses
     Valid Range: Any set of valid IP address
     Default: None
     Description: This parameter specifies the DNS
     name servers to be queried by Windows Sockets
     to resolve names. It is written by the DHCP
     client service, if enabled. If the NameServer
     parameter has a valid value, then it will
     override this parameter.

</PRE>DhcpServer
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_SZ - Dotted decimal IP
     address
     Valid Range: Any valid IP address
     Default: None
     Description: This parameter specifies the IP
     address of the DHCP server that granted the
     lease on the IP address in the DhcpIPAddress
     parameter.

</PRE>DhcpSubnetMask
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_SZ - Dotted decimal IP subnet
     mask
     Valid Range: Any subnet mask that is valid
     for the configured IP address
     Default: None
     Description: This parameter specifies the
     DHCP-configured subnet mask for the address
     specified in the DhcpIPAddress parameter.

</PRE>IPInterfaceContext
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD
     Valid Range: 0 - 0xFFFFFFFF
     Default: None
     Description: This parameter is written by the
     TCP/IP driver for use by the DHCP client
     service.

</PRE>Lease
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Time in seconds
     Valid Range: 1 - 0xFFFFFFFF
     Default: None
     Description: This parameter is used by the
     DHCP client service to store the time in
     seconds that the lease on the IP address for
     this adapter is valid for.

</PRE>LeaseObtainedTime
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Absolute time in
     seconds since midnight of 1/1/70
     Valid Range: 1 - 0xFFFFFFFF
     Default: None
     Description: This parameter is used by the
     DHCP client service to store the time at
     which the lease on the IP address for this
     adapter was obtained.

</PRE>LeaseTerminatesTime
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Absolute time in
     seconds since midnight of 1/1/70
     Valid Range: 1 - 0xFFFFFFFF
     Default: None
     Description: This parameter is used by the
     DHCP client service to store the time at
     which the lease on the IP address for this
     adapter will expire.

</PRE>LLInterface
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_SZ - NT device name
     Valid Range: A legal NT device name
     Default: Empty string (Blank)
     Description: This parameter is used to direct
     IP to bind to a different link-layer protocol
     than the built-in ARP module. The value of
     the parameter is the name of the Windows NT
     device that IP should bind to. This parameter
     is in conjunction with the RAS component, for
     example.

</PRE>T1
<PRE>     Key: &lt;Adapter Name&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Absolute time in
     seconds since midnight of 1/1/70
     Valid Range: 1 - 0xFFFFFFFF
     Default: None
     Description: This parameter is used by the
     DHCP client service to store the time at
     which the service will first try to renew the
     lease on the IP address for the adapter by
     contacting the server that granted the lease.

</PRE>T2
<PRE>     Key: &lt;AdapterName&gt;\Parameters\Tcpip
     Value Type: REG_DWORD - Absolute time in
     seconds since midnight of 1/1/70
     Valid Range: 1 - 0xFFFFFFFF
     Default: None
     Description: This parameter is used by the
     DHCP client service to store the time at
     which the service will try to renew the lease
     on the IP address for the adapter by
     broadcasting a renewal request. Time T2
     should only be reached if the service has
     been unable to renew the lease with the
     original server for some reason.

</PRE><h2>NBT</h2>
 
<P>
All of the NBT parameters are registry values located under one of two
different subkeys of HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Servic
es:
<P>
<PRE>   Netbt\Parameters
   Netbt\Adapters\&lt;Adapter Name&gt;

</PRE>where &lt;Adapter Name&gt; refers the subkey for a network adapter that NBT is
bound to, such as Lance01. Values under the latter key(s) are
specific to each adapter. If the system is configured via DHCP, then a
change in parameters will take effect if the command ipconfig /renew is
issued in a command shell. Otherwise, a reboot of the system is required
for a change in any of these parameters to take effect.
<P>
<P>
<P><h3>Standard Parameters Configurable from the Registry Editor</h3>
 
<P>
The following parameters are installed with default values by the NCPA
during the installation of the TCP/IP components. They may be modified
using the Registry Editor (regedt32.exe).
<P>
BcastNameQueryCount
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Count
     Valid Range: 1 to 0xFFFF
     Default: 3
     Description: This value determines the number
     of times NetBT broadcasts a query for a given
     name without receiving a response.

</PRE>BcastQueryTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 100 to 0xFFFFFFFF
     Default: 0x2ee ( 750 decimal)
     Description: This value determines the time
     interval between successive broadcast name
     queries for the same name.

</PRE>CacheTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 60000 to 0xFFFFFFFF
     Default: 0x927c0 ( 600000 milliseconds = 10
     minutes)
     Description: This value determines the time
     interval that names are cached in the remote
     name table.

</PRE>NameServerPort
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - UDP port number
     Valid Range: 0 - 0xFFFF
     Default: 0x89
     Description: This parameter determines the
     destination port number to which NetBT will
     send name service related packets such as
     name queries and name registrations to WINS.
     The Microsoft WINS listens on port 0x89.
     NetBIOS name servers from other vendors may
     listen on different ports.

</PRE>NameSrvQueryCount
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Count
     Valid Range: 0 - 0xFFFF
     Default: 3
     Description: This value determines the number
     of times NetBT sends a query to a WINS server
     for a given name without receiving a
     response.

</PRE>NameSrvQueryTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 100 - 0xFFFFFFFF
     Default: 1500 (1.5 seconds)
     Description: This value determines the time
     interval between successive name queries to
     WINS for a given name.

</PRE>SessionKeepAlive
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 60,000 - 0xFFFFFFFF
     Default: 3,600,000 (1 hour)
     Description: This value determines the time
     interval between keepalive transmissions on a
     session. Setting the value to 0xFFFFFFF
     disables keepalives.

</PRE>Size/Small/Medium/Large
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD
     Valid Range: 1, 2, 3 (Small, Medium, Large)
     Default: 1 (Small)
     Description: This value determines the size
     of the name tables used to store local and
     remote names. In general, Small is adequate.
     If the system is acting as a proxy
     nameserver, then the value is automatically
     set to Large to increase the size of the name
     cache hash table. Hash table buckets are
     sized as follows:
          Large: 256     Medium: 128    Small: 16


</PRE><h3>Optional Parameters Configurable from the RegistryEditor</h3>
 
<P>
These parameters normally do not exist in the registry. They may be
created
to modify the default behavior of the NetBT protocol driver.
<P>
BroadcastAddress
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Four byte, little-
     endian encoded IP address
     Valid Range: 0 - 0xFFFFFFFF
     Default: The ones-broadcast address for each
     network.
     Description: This parameter can be used to
     force NetBT to use a specific address for all
     broadcast name related packets. By default,
     NetBT uses the ones-broadcast address
     appropriate for each net (i.e., for a network
     of 11.101.0.0 with a subnet mask of
     255.255.0.0, the subnet broadcast address
     would be 11.101.255.255). This parameter
     would be set, for example, if the network
     uses the zeros-broadcast address (set using
     the UseZeroBroadcast TCP/IP parameter). The
     appropriate subnet broadcast address would
     then be 11.101.0.0 in the example above. This
     parameter would then be set to 0x0b650000.
     Note that this parameter is global and will
     be used on all subnets that NetBT is bound
     to.

</PRE>EnableProxyRegCheck
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: If this parameter is set to 1
     (True), then the proxy name server will send
     a negative response to a broadcast name
     registration if the name is already
     registered with WINS or is in the proxy's
     local name cache with a different IP address.
     The hazard of enabling this feature is that
     it prevents a system from changing its IP
     address as long as WINS has a mapping for the
     name. For this reason, it is disabled by
     default.

</PRE>InitialRefreshTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 960000 - 0xFFFFFFF
     Default: 960000 (16 minutes)
     Description: This parameter specifies the
     initial refresh timeout used by NBT during
     name registration. NBT tries to contact the
     WINS servers at 1/8th of this time interval
     when it is first registering names. When it
     receives a successful registration response,
     that response will contain the new refresh
     interval to use.

</PRE>LmhostsTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 1000 - 0xFFFFFFFF
     Default: 6000 (6 seconds)
     Description: This parameter specifies the
     timeout value for Lmhosts and DNS name
     queries. The timer has a granularity of the
     timeout value, so the actual timeout could be
     as much as twice the value.

</PRE>MaxDgramBuffering
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Count of bytes
     Valid Range: 0 - 0xFFFFFFFF
     Default: 0x20000 (128 Kb)
     Description: This parameter specifies the
     maximum amount of memory that NetBT will
     dynamically allocate for all outstanding
     datagram sends. Once this limit is reached,
     further sends will fail due to insufficient
     resources.

</PRE>NodeType
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 1,2,4,8 (B-node, P-node, M-node,
     H-node)
     Default: 1 or 8 based on the WINS server
     configuration
     Description: This parameter determines what
     methods NetBT will use to register and
     resolve names. A B-node system uses
     broadcasts. A P-node system uses only point-
     to-point name queries to a name server
     (WINS). An M-node system broadcasts first,
     then queries the name server. An H-node
     system queries the name server first, then
     broadcasts. Resolution via LMHOSTS and/or
     DNS, if enabled, will follow the these
     methods. If this key is present it will
     override the DhcpNodeType key. If neither key
     is present, the system defaults to Bnode if
     there are no WINS servers configured for the
     network. The system defaults to Hnode if
     there is at least one WINS server configured.

</PRE>RandomAdapter
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: This parameter applies to a
     multihomed host only. If it is set to 1
     (True), then NetBT will randomly choose the
     IP address to put in a name query response
     from all of its bound interfaces. Usually,
     the response contains the address of the
     interface that the query arrived on. This
     feature would be used by a server with two
     interfaces on the same network for load
     balancing.

</PRE>RefreshOpCode
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 8, 9
     Default: 8
     Description: This parameter forces NetBT to
     use a specific opcode in name refresh
     packets. The specification for the NetBT
     protocol is somewhat ambiguous in this area.
     Although the default of 8 used by Microsoft
     implementations appears to be the intended
     value, some other implementations, such as
     those by Ungermann-Bass, use the value 9. Two
     implementations must use the same opcode to
     interoperate.

</PRE>SingleResponse
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: This parameter applies to a
     multihomed host only. If this parameter is
     set to 1 (True), then NBT will only supply an
     IP address from one of its bound interfaces
     in name query responses. By default, the
     addresses of all bound interfaces are
     included.

</PRE>WinsDownTimeout
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Time in milliseconds
     Valid Range: 1000 - 0xFFFFFFFF
     Default: 15,000 ( 15 seconds)
     Description: This parameter determines the
     amount of time NBT will wait before again
     trying to use WINS after it fails to contact
     any WINS server. This feature primarily
     allows computers that are temporarily
     disconnected from the network, such as
     laptops, to proceed through boot processing
     without waiting to timeout out each WINS name
     registration or query individually.


</PRE><h3>Parameters Configurable from the NCPA</h3>
 
<P>
The following parameters can be set via the NCPA. There should be no need
to configure them directly.
<P>
EnableDns
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: If this value is set to 1
     (True), then NBT will query the DNS for names
     that cannot be resolved by WINS, broadcast,
     or the LMHOSTS file.

</PRE>EnableLmhosts
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 1 (True)
     Description: If this value is set to 1
     (True), then NBT will search the LMHOSTS
     file, if it exists, for names that cannot be
     resolved by WINS or broadcast. By default
     there is no Lmhosts file database directory
     (specified by Tcpip\Parameters\DatabasePath),
     so no action will be taken. This value is
     written by the Advanced TCP/IP configuration
     dialog of the NCPA.

</PRE>EnableProxy
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Boolean
     Valid Range: 0 or 1 (False or True)
     Default: 0 (False)
     Description: If this value is set to 1
     (True), then the system will act as a proxy
     name server for the networks that NBT is
     bound to. A proxy name server answers
     broadcast queries for names that it has
     resolved through WINS. A proxy nameserver
     allows a network of Bnode implementations to
     connect to servers on other subnets that are
     registered with WINS.
</PRE>NameServer
<PRE>     Key: Netbt\Adapters\&lt;Adapter Name&gt;
     Value Type: REG_SZ - Dotted decimal IP
     address (i.e. 11.101.1.200)
     Valid Range: Any valid IP address
     Default: blank ( no address )
     Description: This parameter specifies the IP
     address of the primary WINS server. If this
     parameter contains a valid value, it
     overrides the DHCP parameter of the same
     name.

</PRE>NameServerBackup
<PRE>     Key: Netbt\Adapters\&lt;Adapter Name&gt;
     Value Type: REG_SZ - Dotted decimal IP
     address (i.e. 11.101.1.200)
     Valid Range: Any valid IP address.
     Default: blank ( no address )
     Description: This parameter specifies the IP
     address of the backup WINS server. If this
     parameter contains a valid value, it
     overrides the DHCP parameter of the same
     name.

</PRE>ScopeId
<PRE>     Key: Netbt\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: Any valid DNS domain name
     consisting of two dot-separated parts, or a
     "*".
     Default: None
     Description: This parameter specifies the
     NetBIOS name scope for the node. This value
     must not begin with a period. If this
     parameter contains a valid value, it will
     override the DHCP parameter of the same name.
     A blank value (empty string) will be ignored.
     Setting this parameter to the value "*"
     indicates a null scope and will override the
     DHCP parameter.


</PRE><h3>Non-Configurable Parameters</h3>
 
<P>
The following parameters are created and used internally by the NetBT
components. They should never be modified using the Registry Editor. They
are listed here for reference only.
<P>
DhcpNameServer
<PRE>     Key: Netbt\Adapters\&lt;Adapter Name&gt;
     Value Type: REG_SZ - Dotted decimal IP
     address (i.e. 11.101.1.200)
     Valid Range: Any valid IP address
     Default: None
     Description: This parameter specifies the IP
     address of the primary WINS server. It is
     written by the DHCP client service, if
     enabled. A valid NameServer value will
     override this parameter.

</PRE>DhcpNameServerBackup
<PRE>     Key: Netbt\Adapters\&lt;Adapter Name&gt;
     Value Type: REG_SZ - Dotted decimal IP
     address (i.e. 11.101.1.200)
     Valid Range: Any valid IP address
     Default: None
     Description: This parameter specifies the IP
     address of the backup WINS server. It is
     written by the DHCP client service, if
     enabled. A valid BackupNameServer value will
     override this parameter.

</PRE>DhcpNodeType
<PRE>     Key: Netbt\Parameters
     Value Type: REG_DWORD - Number
     Valid Range: 1 - 8
     Default: 1
     Description: This parameter specifies the NBT
     node type. It is written by the DHCP client
     service, if enabled. A valid NodeType value
     will override this parameter. See the entry
     for NodeType for a complete description.

</PRE>DhcpScopeId
<PRE>     Key: Netbt\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: a dot separated name string such
     as "microsoft.com"
     Default: None
     Description: This parameter specifies the
     NetBIOS name scope for the node. It is
     written by the DHCP client service, if
     enabled. This value must not begin with a
     period. See the entry for ScopeId for more
     information.

</PRE>NbProvider
<PRE>     Key: Netbt\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: _tcp
     Default: _tcp
     Description: This parameter is used
     internally by the RPC component. The default
     value should not be changed.

</PRE>TransportBindName
<PRE>     Key: Netbt\Parameters
     Value Type: REG_SZ - Character string
     Valid Range: N/A
     Default: \Device\
     Description: This parameter is used
     internally during product development. The
     default value should not be changed.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodnt tcp ip<BR>
Keywords          : NTSrvWkst nttcp kbenv kbnetwork<BR>
Version           : 3.5 3.51 4.0<BR>
Platform          : winnt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
