

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REG: Network Adapter Cards Entries, PART 1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102999">
<META NAME="KBModify" CONTENT="1997/05/08">
<META NAME="KBCreate" CONTENT="1993/08/12">
<META NAME="Keywords" CONTENT="kbother ntregistry">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT=" Network Adapter Cards Entries  This section describes specific Registry entries related to network adapter cards and the drivers for network adapters. Windows NT supports network adapter drivers under the NDIS 3.0 specification (Network Device Inter...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVZ,QAKD,QBWP,QAJG,QAUJ,QACK,QAU9,QABO,QBTX,QA05,QAHT,QAQW,QAKC,QAPF,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>REG: Network Adapter Cards Entries, PART 1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102999</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Windows NT operating system version 3.1
<LI>Windows NT Advanced Server version 3.1
<P>
</UL>The article contains REGISTRY entries for the Network Adapter Cards, Part
1. These subgroups are included:

<UL><LI>NetRules Subkey
<LI>Linkage Subkey Entries for Network Components
<P>
</UL>For the Parameters Subkey entries, see the article Network Adapter Cards
Entries, Part 2.
 
<P>
<P><h2>Network Adapter Cards Entries</h2>
 
<P>
This section describes specific Registry entries related to network adapter
cards and the drivers for network adapters. Windows NT supports network
adapter drivers under the NDIS 3.0 specification (Network Device Interface
Specification). The CurrentControlSet\Services subkey for a network driver
or adapter card includes the standard entries found in the Services
subkeys, with the following default values:
<P>
<PRE>Entry Value     Value

Error Control   0x1 (normal)
Start           0x3 (load on demand)
Type            0x1 or 0x4 (driver or adapter)

</PRE>The following sections describe entries in the other areas of the Registry
that contain configuration information for network adapter cards and their
drivers, including:

<UL><LI>NetRules subkeys under HKEY_LOCAL_MACHINE\SOFTWARE for
   drivers and adapters.

<LI>Linkage subkey entries under HKEY_LOCAL_MACHINE\SYSTEM
   for drivers and adapters, defining information about
   bindings for the component.

<LI>Parameter subkey entries under
   HKEY_LOCAL_MACHINE\SYSTEM for network card adapters,
   defining specific information such as the IRQ number, I/O
   base address, and other details. (In "Network Adapter
   Cards Entries, PART 2".)
<P>
</UL>The information provided here is chiefly to be used for informational and
troubleshooting purposes. The settings for either the NDIS driver or the
network adapter card should be changed using the Network icon in Control
Panel.
<P>
For information about Registry values for other network services, see the
appropriate article in the "Network Services Entries" article series. For
TCP/IP entries that are specific to network adapter cards, see the articles
"TCP/IP Transport Entries" Part 1 and Part 2.
<P>
<P><h3>NetRules Subkey Entries</h3>
 
<P>
During network reconfiguration (that is, when you use the Network icon in
Control Panel to make changes), the system reads the values stored in the
NetRules subkeys for information used to bind the network components. The
Registry path for these value entries is the following:

<UL><LI>For adapter card drivers and network services, where
   the driverName subkey is the name of the network card’s
   driver, as defined by the system:
<P>
</UL>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft
<PRE>     \driverName\CurrentVersion\NetRules

</PRE><LI>For network adapter cards, where the netcard# subkey
   is a number, beginning with 01 for the first network
   adapter:
<P>
</UL>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT
<PRE>     \CurrentVersion\NetworkCards\netcard#\NetRules

Bindable     REG_MULTI_SZ    fromClass toClass  Yes|No Yes|No  value
</PRE>Defines a possible binding and its constraints. For example:
bindable = ndisDriver ndisAdapter non exclusive 100
<P>
This example specifies that components of class "ndisDriver" can be bound
to those of class "ndisAdapter." For the other fields in this example:

<UL><LI>Non indicates that the component of class ndisDriver
   can accept other bindings.

<LI>Exclusive indicates that the component of class
   ndisAdapter cannot accept other bindings.

<LI>100 indicates the relative importance (weight) of this
   binding; that is, in cases of competition, it will be
   discarded in favor of other bindings whose weight is
   greater.
<P>
</UL>Because this value entry is a REG_MULTI_SZ, as many criteria for binding as
necessary can be defined by a single component.
<P>
This value entry is optional, because there are a few predefined binding
rules, and binding rules defined anywhere in the system apply to all
network component classes.
<P>
<PRE>Bindform     REG_SZ   ObjectName  Yes|No Yes|No [container|simple|streams]

</PRE>The ObjectName field contains the name (or name prefix) by which the
component is identified by the system. This value must be the same as the
name in the related CurrentControlSet\Services subkey. Names for adapters
are created by the system and override the Bindform setting. The first
Yes|No pair indicates whether the component is to receive binding
information directly in its Linkage subkey. The second Yes|No pair
indicates whether the device name is supposed to appear in generated
binding strings.
<P>
The final optional value in this entry indicates how binding device names
are constructed. This value is required for software components.
<P>
<PRE>Class    REG_MULTI_SZ    NewClassName  OldClassName|basic [Yes|No]
</PRE>Allows a component to define a new class. As many new classes as necessary
can be defined by any component.
<P>
NOTE: These classes are not related to the OLE and DDE classes defined
under HKEY_LOCAL_MACHINE\SOFTWARE\Classes.
<P>
Class names do not need to be defined within any particular component. The
system adds the new definition to its database without regard to origin.
The order of Class entries is irrelevant. However, results are
indeterminate if classes are referred to that are not defined anywhere in
the system.
<P>
This entry is optional, because there are a few predefined classes, and
class definitions made anywhere in the system apply to all network
components. Because any network component can define new classes, be
careful that the names used are unique within all possible installable
network components. The following shows the predefined class names in the
first release of Windows NT. This list, of course, cannot be exhaustive.
<P>
<PRE>Predefined Class     Adapter Card Type

ee16Driver           Intel EtherExpress 16 LAN
ee16Adapter          adapter

elnkiiAdapter;       3Com Etherlink II adapter
</PRE>elinkiiDriver
<P>
<PRE>ibmtokDriver;        IBM Token Ring adapter
</PRE>ibmtokAdapter
<P>
<PRE>lanceDriver;         DEC Lance adapter
</PRE>dec101Adapter
<P>
<PRE>lt200Driver;         Daystar Digital LocalTalk
lt200Adapter         adapter

ne2000Driver;        Novell NE2000 adapter
</PRE>ne2000Adapter
<P>
<PRE>proteonDriver;       Proteon adapter
</PRE>p1390Adapter
<P>
ubDriver; ubAdapter  Ungermann-Bass Ethernet
<PRE>                     NIUpc adapter

wdlanDriver;         SMC (WD) adapter
</PRE>smcisaAdapter
<P>
The final optional value indicates whether this class is a "logical end-
point" for the bindings protocol; the default value is No.
<P>
<PRE>Hidden     REG_DWORD     0 or 1
</PRE>Suppresses the display of the component (adapter or network software) in
the Network dialog box in Control Panel.
<P>
Usually, all networking components discovered in the Registry are displayed
in the two list boxes in the Network dialog box in Control Panel. Setting
this value to 1 prevents the item from being displayed, which means it
cannot be configured or removed by the user.
<P>
<PRE>Interface    REG_MULTI_SZ
</PRE>Allows a single component to make available more than one type of
capability to other components in the system. The format for this value is:
<P>
Interface = interfaceName upperClass "objectName" namingMethod
<P>
<PRE>Value               Meaning

interfaceName       The tokenized name of the secondary
                    interface.

upperClass          The class to which the interface
                    belongs. (LowerClass is the same as
                    the primary interface.)

objectName          The Windows NT device name to be
</PRE>created.
<P>
<PRE>namingMethod        Determines how the bindings appear.


Review      REG_DWORD     0 or 1
</PRE>Indicates whether a component requests bindings review. If set to 1 (or
nonzero), the system reinvokes this component’s .INF file after bindings
have been changed. This allows network components to modify the binding
information or request additional information from administrators about the
new or altered connections.
<P>
<PRE>Type     REG_SZ     component className  [lowerClass]
</PRE>Defines the type of the component in terms of abstract network component
classes. If the optional lower class name is absent, the first (or upper
level) class type name is used for both its upper and lower classes.
<P>
This value is required for network software and network adapter cards.
<P>
<PRE>Component          Meaning
Type

Adapter            A piece of hardware

Driver             A software component associated
                   directly with a piece of hardware.

Transport          A software component used by services.

Service            A software component providing capability
                   directly to user applications.

Basic              A token used to represent a fundamental
                   class name (that is, a class with
                   no parent).


Use     REG_SZ     service|driver|transport|adapter [Yes|No]  [Yes|No]
</PRE>Defines the role played by the component. If this entry is absent, the
value of Service is assumed. This value entry only appears for software
items.
<P>
A hardware device is automatically assumed to be an adapter. Each network
component may identify itself as a driver, transport, or service to clarify
its role. This distinction is as follows (note the lowercase for the
values):
<P>
<PRE>Value     Meaning

driver    Exists only to support one or more
          adapters. If no bindings are generated
          (or permitted by the user) that include
          a particular driver, that driver is not
          loaded. However, no error is generated,
          since no "denial of service" has occurred.

service   Provides end-user functionality, and every
          attempt is made to support its operation.
          An EventLog entry is generated if a service
          is present in the system for which there is
          no available transport (the number of
          possible bindings is zero).

</PRE>transport Exists only to support services. Like a
<PRE>          driver, it is not loaded unless necessary.

</PRE>The final two Yes|No values in this entry are optional; if present, each
must be either Yes or No. The first value indicates whether driver group
names are used instead of specific driver dependencies. The second value
indicates whether transport group names are used instead of specific
transport dependencies. These values cause the system to generate
references to dependencies based upon their group names, not by their
specific service names.
<P>
For example, the LanmanServer is marked as Yes Yes; this means that its
transport and driver dependencies are at the group level; so LanmanServer
will be loaded if any one of its transport dependencies and any one of its
driver dependencies successfully load.
<P>
The RawRules entry appears under the following Registry path:
<P>
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\NCPA\CurrentVersion
<P>
<PRE>RawRules      REG_MULTI_SZ     (rule 1 data) (rule 2 data) ...
</PRE>Contains the rules for the binding algorithm, and consequently allows
direct interaction with the bindings inference engine through unrestricted
rule addition. The system simply combines all RawRules with the generated
configuration rule set before running the inference engine.
<P>
IMPORTANT: The RawRules value entry is not directly supported, and should
be avoided unless absolutely necessary.
<P>
Under this same Registry path for NCPA, a volatile subkey appears named
ConfigChanged whenever the network configuration is changed. This allows
the system to change the Cancel button to Close in the Network dialog box
under Control Panel. It also causes the system to prompt the user to
restart the system each time the Network icon is chosen before a system
restart has occurred.
<P>
<P><h3>Linkage Subkey Entries for Network Components</h3>
 
<P>
Each network component that the system determines to be required can be
given bindings, which establish the relationships between network software
components, as described in "Bindings for Network Components" in the
"Windows NT Resource Kit," Chapter 11, "Overview of the Windows NT
Registry." All bindings are created by the system and should not be changed
by the user, except by choosing the Bindings button in the Network dialog
box in Control Panel.
<P>
Whether the bindings actually appear in the Registry
depends upon the Bindform value for the component in its
NetRules subkey.
<P>
The binding information is stored in three value entries in the Linkage
subkey for a component under the Services subkey. The Registry path for
each Linkage subkey is the following:
<P>
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services
<PRE>     \ServiceName\Linkage

</PRE>If a binding is disabled, the settings are stored under a Disabled subkey
under the Linkage subkey. These values are in exactly the same format as
for active bindings.
<P>
For a network component, there might be more than one subkey under its
Services key: one for the driver and one for the network adapter card, plus
additional subkeys for services that might be installed with the network
adapter. Also, entries for adapter cards for AppleTalk, DLC, NWLink, and
TCP/IP are described in their respective articles in the "Network Services
Entries" article series. See Part 1 for a complete listing.
<P>
<PRE>Bind     REG_MULTI_SZ     ObjectName ObjectName ...
</PRE>Each string in this value entry is the name of a Windows NT object created
by the underlying software. The names are based on the object names
declared in the Bindform entry under the NetRules subkey.
<P>
<PRE>Export     REG_MULTI_SZ     ObjectName ObjectName ...
</PRE>Each string in this value entry indicates the name that should be added in
the system to allow access to the corresponding bound object. The names are
based on the object names declared in the Bindform entry under the NetRules
subkey.
<P>
<PRE>Route     REG_MULTI_SZ     "Name of service" "Name of service"...
</PRE>Each string in this value entry indicates the exact path through the
binding protocol represented by the binding. The names of services are
used, surrounded by quotation marks.
<P>
Each element of these multistring values has a one-to-one correspondence
with the others; that is, Bind[1] is to Export[1] and Route[1] as Bind[2]
is to Export[2] and Route[2].
<P>
In addition to generating binding information, the system determines each
network component’s complete set of dependencies, and stores them in the
related subkey in the CurrentControlSet\Services key. For examples using
these value entries, see "Bindings for Network Components" in the "Windows
NT Resource Kit," Chapter 11, "Overview of the Windows NT Registry."
<P>
Reference: "The Windows NT Resource Kit for Operating System Version 3.1".
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodnt<BR>
Keywords            : kbother ntregistry<BR>
Version             : 3.1<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
