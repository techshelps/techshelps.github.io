

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Use the Kernel Debugger to Debug Driver Initialization </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141470">
<META NAME="KBModify" CONTENT="1996/01/23">
<META NAME="KBCreate" CONTENT="1995/12/18">
<META NAME="Keywords" CONTENT="kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  When you debug problems with Windows NT, it is sometimes necessary to identify variables or data structures created when Kernel-mode drivers are initialized. This is a problem, because the Kernel Debugger (I386KD, ALPHAKD, MIPSKD and PPCKD) only al...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAU9,QABI,QAR5,QBWP,QDJF,QAKJ,QBC9,QBC8,QANO,QBXS,QAYZ,QAFV,QDK2,QAY4,QBSO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Use the Kernel Debugger to Debug Driver Initialization</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 23, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141470</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.5 and 3.51
<LI>Microsoft Windows NT Server versions 3.5 and 3.51
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you debug problems with Windows NT, it is sometimes necessary to
identify variables or data structures created when Kernel-mode drivers are
initialized. This is a problem, because the Kernel Debugger (I386KD,
ALPHAKD, MIPSKD and PPCKD) only allow break points to be set when the
symbols are loaded, and symbols can only be loaded when their respective
driver is loaded. The following procedure explains how to get around this
situation and how to trace DriverEntry(), which is the first function
called for each driver by the Windows NT I/O manager at boot up.
<P>
NOTE: The GUI version of the debugger (WINDBG) allows for breakpoints to be
kept during a remote reboot of Windows NT, but other problems with that
version of the debugger usually require that the console debuggers
(mentioned above) be used.
<P>
<P><h2>MORE INFORMATION</h2>
 

<OL><P><LI>Make sure that the connection between your local debugger and the remote
   machine is established and configured properly. To do this, you may want
   to break into the target and unassemble some kernel functions (such as
   NtUnlockFile()). Also make sure the modem at the target machine is set
   to stay enabled on loss of DTR, so your connection is not cut off when
   the target machine reboots

<P><LI>Issue the "!drivers" command to obtain the list of loaded drivers. Note
   the sequence in which they appear, as this is the sequence in which they
   are loaded after rebooting. Make a note of the driver that precedes the
   one you need to debug.

<P><LI>Reboot the target computer (.reboot). The symbols are unloaded.

<P><LI>As soon as you see the symbols for NTOSKRNL.EXE loading (this is echoed
   to your screen only if you have started the debugger with the "-v"
   switch), Press CTRL+C to break into the target.

<P><LI>Set a break point on IopLoadDriver. This breaks into the system each
   time a driver is about to be loaded.

<P><LI>Let the target continue ("g") until you hit this break point after the
   preceding driver (see step 1) is loaded. Your driver is now about to be
   loaded.

<P><LI>Set a break point on MmLoadSystemImage.

<P><LI>The debugger now breaks every time information is loaded from the disk
   into memory (which can happen several times for a single driver).

<P><LI>Let the target run to the return address of MmLoadSystemImage, by using
   the "g" command with the RetAddr for MmLoadSystemImage (For example:
   g 8015b677). This return address should take you back into
   IopLoadUnloadDriver or IopLoadDriver. You may need to repeat this step
   several times until you see the symbols for your driver being loaded.
<P>
</OL>This takes you to a break point where the symbols for the driver are
loaded, but DriverEntry() has not been called yet. You can now set any BP
you need for this driver, including on DriverEntry().
<P>
NOTE: An alternative procedure is as follows:

<OL><P><LI>Make sure that the connection between your local debugger and the remote
   machine is established and configured properly. To do this, you may want
   to break into the target and unassemble some kernel functions (such as
   NtUnlockFile()). Also make sure the modem at the target machine is set
   to stay enabled on loss of DTR, so your connection is not cut off when
   the target machine reboots

<P><LI>Issue the "!drivers" command to obtain the list of loaded drivers. Note
   the sequence in which they appear, as this is the sequence in which they
   are loaded after rebooting. Make a note of the driver that precedes the
   one you need to debug.

<P><LI>Reboot the target computer (.reboot). The symbols are unloaded.

<P><LI>As soon as you see the symbols for NTOSKRNL.EXE loading (this is echoed
   to your screen only if you have started the debugger with the "-v"
   switch), Press CTRL+C to break into the target.

<P><LI>Issue "g MmLoadSystemImage", do "t" once and get the stack frame:
<P>
<P><PRE>      kd&gt; t
<PRE></PRE>      8016651e 55               push    ebp

      kd&gt; k
      ChildEBP RetAddr
      ff67ab90 8015b677 ntoskrnl!_MmLoadSystemImage+0x6
      ff67ac14 801aece1 ntoskrnl!_IopLoadDriver+0x293
      ff67ac38 801ac56e ntoskrnl!_IopInitializeSystemDrivers+0x7f
      ff67ad6c 801ab879 ntoskrnl!_IoInitSystem+0x3af
      ff67af4c 80132910 ntoskrnl!_Phase1Initialization+0x475
      ff67af7c 8013cf4e ntoskrnl!_PspSystemThreadStartup+0x40
      00000000 00000000 ntoskrnl!_KiThreadStartup+0x16

</PRE><P><LI>Set a breakpoint at the return address of MmLoadSystemImage:
<P>
<P><PRE>      kd&gt; bp 8015b677
</PRE>
<P><LI>Issue "g". The debugger will now break after loading a driver image.
   When you see the symbols loaded of the driver you want to debug, set a
   breakpoint on its DriverEntry function.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbhowto<BR>
KBSubcategory: nthowto<BR>
Additional reference words: prodnt 3.50 3.51<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 23, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
