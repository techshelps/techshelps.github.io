

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Load Windows NT MEMORY.DMP File Using I386KD.EXE </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148658">
<META NAME="KBModify" CONTENT="1998/02/02">
<META NAME="KBCreate" CONTENT="1996/03/18">
<META NAME="Keywords" CONTENT="kbtshoot">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  The I386KD.EXE utility is used to load a MEMORY.DMP file created by a computer running Windows NT. This article explains the basics required to load a MEMORY.DMP file using the I386KD.EXE debugging utility.  The article contents are organized into ...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAA1,QBW6,QDI2,QAVX,QANN,QAFI,QBFY,QBWS,QBXB,QATJ,QBKX,QBCU,QABI,QAYL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Load Windows NT MEMORY.DMP File Using I386KD.EXE</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148658</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.50 3.51
WINDOWS
kbtshoot
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.5 and 3.51
<LI>Microsoft Windows NT Server versions 3.5 and 3.51
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The I386KD.EXE utility is used to load a MEMORY.DMP file created by a
computer running Windows NT. This article explains the basics required to
load a MEMORY.DMP file using the I386KD.EXE debugging utility.
<P>
The article contents are organized into the following subsections:

<UL><LI>What is a MEMORY.DMP File?
<LI>Checking the Integrity of a MEMORY.DMP File
<LI>What is I386KD.EXE?
<LI>Setting Up for Debugging
<LI>Setting Up and Running I386KD.EXE
<LI>Using I386KD.EXE with REMOTE.EXE
<LI>Common Errors Loading a MEMORY.DMP File
<LI>KD Environment variables
<LI>KD Options
<LI>Additional Information Resources
<P>
</UL>The utilities described in this article are from the Windows NT 3.51
Server compact disc. These utilities will work on a MEMORY.DMP from a
computer running Windows NT 3.5. The utilities located on the Windows NT
3.5 Server compact disc will not load a MEMORY.DMP file and are used only
for remote sessions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>What is a MEMORY.DMP File?</h3>
 
<P>
When the recovery option is set in the System option dialog box to
write debugging information, the physical disk a program called
SAVEDUMP.EXE is invoked during a fatal system error which writes the
entire contents of memory to the system paging file. When the system
is rebooted Windows NT copies the paging file to a file called
MEMORY.DMP.
<P>
Windows NT writes the entire contents of RAM into the paging file.
The paging file must be at least as large as the amount of physical
memory installed in the system for a MEMORY.DMP file to be created.
Also, the paging file must reside on the system partition of the
physical disk.
<P>
The advantage of a MEMORY.DMP file is that it is possible to determine
why the system failed without removing the system from service.
<P>
The disadvantage is that the MEMORY.DMP is an image of memory at the
exact time of the failure. Many failures are caused by events that
happened prior to the system failure and to identify these problems it
may be necessary to use a real time remote debugging session.
<P>
<P><h3>Checking the Integrity of a MEMORY.DMP File</h3>
 
<P>
The debugging tools rely on the information stored in the MEMORY.DMP
file which makes it important to verify the integrity of the file.
Windows NT Server ships with the DUMPCHK.EXE utility located in the
\SUPPORT\DEBUG\[Machine Type]\Directory. The DUMPCHK.EXE utility will
display the stop screen information, processor information, and
checks the MEMORY.DMP file for errors. Run the DUMPCHK.EXE file on the
MEMORY.DMP as follows:

<OL><P><LI>Copy the MEMORY.DMP file to the C:\DUMP directory.

<P><LI>Run the DUMPCHK utility:
<P>
<P><PRE>      [CD Drive]:\SUPPORT\DEBUG\DUMPCHK.EXE C:\DUMP\MEMORY.DMP
</PRE><P>
</OL>If any errors are reported, the MEMORY.DMP file is unreliable. A
system that consistently produces a corrupt MEMORY.DMP file usually
indicates that there are problems with the disk controller or the
physical disk.
<P>
<P><h3>What is I386KD.EXE?</h3>
 
<P>
The I386KD.EXE is a command line utility for debugging kernel mode
memory dump files. The kernel debugger parses the MEMORY.DMP file and
displays various information about the MEMORY.DMP file. It gives you a
glimpse into what was loaded on the system and what was happening at
the time of the system failure. I386KD is capable of displaying memory
usage, a trace of the functions running and queued to run, and lots of
valuable clues to the state of the system at the time of the failure.
I386KD.EXE is located in the \Support\Debug\I386\ directory of the
Windows NT Server compact disc.
<P>
Located in the same directory are ALPHAKD.EXE, MIPSKD.EXE and
PCKD.EXE. These command line utilities are used for kernel debugging
the Alpha, MIPS and the PowerPC platforms from an I386 based machine.
If you are debugging from a platform other than the I386 then you must
use the utilities in the directory specific to the platform you are
using to run the debugger from.
<P>
NOTE: This article discusses the I386KD, but the methods are
interchangeable with the methods you should use with the other kernel
debuggers.
<P>
<P><h3>Setting Up for Debugging</h3>
 
<P>
The recommended way to run I386KD is to copy all of the files located
in the \Support\Debug\I386\ directory to a directory on the hard
drive, change to that directory and set up the environment variables
for the debugging session.
<P>
The I386KD relies on environment variables for information necessary
to run successfully. I386KD uses many environment variables, the
minimal needed to load the MEMORY.DMP file is the _NT_SYMBOL_PATH
variable. This variable points to the path of the symbols file that
the debugger will use for the debug session. After setting the path,
the kernel debugger can be started.
<P>
I386KD has several command line parameters. The -z parameter
specifies the path to the MEMORY.DMP file that will be used for the
debugging session. At the command prompt, type:
<P>
<PRE>   I386KD -z &lt;path_to_MEMORY.DMP&gt;.

</PRE></OL>This will invoke I386KD and load the MEMORY.DMP file into the kernel
debugger.
<P>
<P><h3>Setting Up and Running I386KD.EXE</h3>
 

<OL><P><LI>Set up the Windows NT symbols in C:\SYMBOLS. To properly set up
   symbols, please see the following article in the Microsoft Knowledge
   Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../WINNT/Q148660.htm">Q148660</A></B>
<PRE></PRE>      TITLE     : How to Verify Windows NT Debug Symbols

</PRE><P><LI>From the command prompt make a directory on the C drive named DEBUG:
<P>
<P><PRE>      mkdir c:\debug
</PRE>
<P><LI>Copy all of the files in the \Support\Debug\I386\ directory to the
   C:\DEBUG directory:
<P>
<PRE>      xcopy [cd drive]:\support\debug\i386   c:\debug

</PRE><P><LI>Set up the symbols path environment variable:
<P>
<P><PRE>      set _nt_symbol_path=d:\symbols
</PRE>
<P><LI>Copy the MEMORY.DMP to the C:\DUMP directory.

<P><LI>Run the kernel debugger.
<P>
<P><PRE>      i386kd -z c:\dump\memory.dmp
</PRE>
<P><LI>Verify the symbols and start debugging by referencing the article
   mentioned in step 1 above.
<P>
</OL><h3>Using I386KD with REMOTE.EXE</h3>
 
<P>
The REMOTE.EXE is a command line utility which allows you to run
command-line programs on remote computers. REMOTE.EXE uses two parts,
the server component and the client component. To use Remote, you must
first start the server end on the computer where you are debugging from.
This allows other users to connect to your debugging session using the
client portion of Remote. This is very useful to Product Support Services
Engineers who commonly use the client end of Remote over a Remote Access
link to debug a customer's system. The REMOTE.EXE comes with the Resource
Kit. For more details and the command syntax of this utility, refer to the
Resource Kit online help.
<P>
Running I386KD with REMOTE

<OL><P><LI>Copy the REMOTE.EXE command from the Resource Kit directory to the
   C:\DEBUG directory.

<P><LI>Start the remote debugging session:
<P>
<P><PRE>      remote /s "i386kd -z c:\dump\memory.dmp" debug1
</PRE><P>
</OL><h3>Common Errors Loading a MEMORY.DMP File</h3>
 
<P>
There are many pitfalls on the road to a successful debug session.
There are many reasons why a MEMORY.DMP file will not load. Here are a
couple common errors and solutions:
<P>
<PRE>   Error:

      [ syntax ]
      Symbol search path is: *** Invalid *** : Verify _NT_SYMBOL_PATH
        setting
      kd: crash dump initialized [C:\Dump\MEMORY.DMP]
      KD: Unable to load debug information for ntoskrnl.exe
      could not get the KiProcessorBlock address

   Solution:

      This error can be generated because of an improper symbols
      path. To solve this, check your symbols path and reset your
      environment. Possibly the MEMORY.DMP file is corrupted; run
      DUMPCHK.EXE on this file to verify its integrity.

   Error:

      [ syntax ]
      Microsoft(R) Windows NT Kernel Debugger
      Version 3.51
      (C) 1991-1995 Microsoft Corp.
      Symbol search path is: C:\SYMBOLS
      Remote:Parent exiting. Child(i386kd -z C:\Dump\MEMOR.DMP) dead..

   Solution:

      This can be due to an improper path to the MEMORY.DMP file.
      Check your path and reload the file.

</PRE></OL><h3>KD Environment Variables</h3>
 
<P>
<PRE>_NT_DEBUG_PORT          Serial port used by the debugger
_NT_DEBUG_BAUD_RATE     Baud rate used by the debugger
_NT_SYMBOL_PATH         Location of the symbols files
_NT_ALT_SYMBOL_PATH     Additional symbol path which is searched first
_NT_DEBUG_CACHE_SIZE    Debugger cache size
_NT_DEBUG_LOG_FILE_OPEN       Specifies a file for logging the debug session
_NT_DEBUG_LOG_FILE_APPEND     Appends to a debug log file if one exists

</PRE><h3>KD Options</h3>
 
-b    - Causes a running kernel to stop as soon as possible.
-c    - Causes a resync of a modem connection
-n    - Symbols load as soon as the module is loaded
-v    - Verbose mode
-m    - Causes the debugger enter the terminal mode
-x    - The debugger will break on first chance exceptions
-y    - Path to the symbols
-z    - Path to the crash dump file
<P>
<P><h3>Additional Information Resources</h3>
 

<UL><LI>Windows NT Resource Kit

<LI>The Driver Development Kit Online help

<LI>The Kernel-Debug How-To series of articles can be found by searching on
   the keyword "debugref" here in the Microsoft Knowledge Base.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtshoot<BR>
KBSubcategory: ntblue<BR>
Additional reference words: 3.50 3.51 prodnt debugref<BR>
Keywords          : kbtshoot<BR>
Version           : 3.50 3.51<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
