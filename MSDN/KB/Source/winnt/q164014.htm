

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Slow Exchange Client Logons Due to Deadlock in LSASS </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164014">
<META NAME="KBModify" CONTENT="1997/05/19">
<META NAME="KBCreate" CONTENT="1997/02/20">
<META NAME="Keywords" CONTENT="kbfix4.00.sp3 NTSrvWkst kbbug3.51 kbbug4.00 kbbuglist kbfix3.51 kbfix4.00 kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  Microsoft Exchange clients experience slow logon response times or the inability to log on during peak logon hours because of a deadlock in LSASS. The following errors occur in the event log:     Event ID 7200 - MSExchangeIS Private     Background ...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA9A,QBW3,QAGI,QAI5,QBWS,QBG2,QATQ,QBWP,QAK7,QAMR,QAIM,QAGU,QAUQ,QAH4,QBW7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Slow Exchange Client Logons Due to Deadlock in LSASS</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164014</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Workstation versions 3.51 and 4.0
<LI>Microsoft Windows NT Server versions 3.51 and 4.0
<LI>Microsoft Exchange Server, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Microsoft Exchange clients experience slow logon response times or the
inability to log on during peak logon hours because of a deadlock in LSASS.
The following errors occur in the event log:
<P>
<PRE>   Event ID 7200 - MSExchangeIS Private

   Background thread FDoMaintenance halted due to error code 4012.

   -or-

   Background thread FDoQuotaCheck halted due to error code 4012.

</PRE>Additionally, the thread counts increase rapidly for Dsamain.exe on the
computer running Microsoft Exchange Server and Lsass.exe on the resource
domain controllers. If the computers running Microsoft Exchange Server are
domain controllers, thread counts for both DSAMAIN and LSASS increase on
the computer running Microsoft Exchange Server. Normally, the thread counts
for DSAMAIN and LSASS are under 30 for most servers. Thread counts for
LSASS and DSAMAIN rapidly climb to over 70 threads during the time when
clients are experiencing the slow logon response time associated with this
problem.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem only occurs when computers running Microsoft Exchange Server
are located in a resource domain with the Windows NT user accounts existing
in a trusted domain.
<P>
Every Microsoft Exchange Client logon request causes Microsoft Exchange
Server to look up the account security identifier (SID) in the user
accounts domain. When a computer running Microsoft Exchange Client logs on,
it sends an NspiBind request to the computer running Microsoft Exchange
Server. This results in a LookupAccountSid() call within LSASS on the
domain controller in the resource domain being sent to one of the trusted
domain controllers in the user accounts domain. When this occurs, one
thread enters a critical section giving it exclusive access to the code
that allows it to acquire a lock to a protected resource. The resource in
this case is a particular work queue of LookupAccountSid() operations to be
performed.
<P>
After acquiring the lock, a calculation is performed to determine if more
LookupWorker threads need to be spawned. If more threads are needed, more
calculations are done, the lock released, threads created, and lookups
performed. If not, LookupAccountSid is done within this thread itself. The
only problem is that the lock continued to be held unnecessarily. The
deadlock occurs because the other threads are waiting to acquire the lock
to access the work queue. The fix was to release the lock after the initial
calculation, when it was determined additional LookupWorker threads were
not needed.
<P>
The fix has to be applied to all resource domain controllers when the user
accounts exist in a trusted domain.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Windows NT version 3.51 and
4.0.
This problem was corrected in the latest Microsoft Windows NT 4.0 U.S. Service
Pack. For information on obtaining the service pack, query on the following word
in the Microsoft Knowledge Base (without the spaces):
<P>
<PRE>   S E R V P A C K

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Windows NT only runs into the problem when the user accounts for Microsoft
Exchange exist in a trusted domain. In this case, there is a call to look
up the SID in a trusted domain, which is the only code path to the problem
that caused the deadlock situation. The search premise is based on pass-
through authentication. To understand it better, follow this simplified
version of what happens with respect to a computer running Microsoft
Exchange Server being in a resource domain. There are two possible
scenarios. Both are similar. The first scenario is if the computer running
Microsoft Exchange Server is not a domain controller. The second scenario
is if the computer running Microsoft Exchange Server is a domain
controller.
<P>
Scenario 1 (the computer running Microsoft Exchange Server is not a domain
controller):
<P>
The computer running Microsoft Exchange Server first attempts to look up
the account SID in its local accounts database. If it does not find the
SID, it then sends the request to a domain controller in its primary domain
(the domain it is a member of). The domain controller in the primary domain
attempts to locate the SID in its SAM by calling a routine to look up the
SID in the local domain. If it still cannot find the SID, which will be the
case when the user accounts are in a trusted domain, it sends the request
to a trusted domain controller in the user accounts domain. The domain
controller calls a routine to look up the SID in a trusted domain, which
leads to the problem. The congestion is on the resource domain controller.
<P>
Scenario 2 (the computer running Microsoft Exchange Server is a domain
controller):
<P>
The computer running Microsoft Exchange Server is a domain controller so it
attempts to find the SID in its copy of the SAM by calling a routine lookup
for the SID in the local domain. If it still cannot find the SID, which
will be the case when the user accounts are in a trusted domain, it sends
the request to a trusted domain controller in the user accounts domain. The
resource domain controller/computer running Microsoft Exchange Server calls
a routine to look up the SID in a trusted domain, which leads us to the
problem. The congestion is at the computer running Microsoft Exchange
Server because it is a domain controller.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:3.51 4.00 prodnt DS directory<BR>
Keywords          : kbfix4.00.sp3 NTSrvWkst kbbug3.51 kbbug4.00 kbbuglist kbfix3.51 kbfix4.00 kbfixlist<BR>
Version           : 3.51 4.0<BR>
Platform          : winnt<BR>
Issue type        : kbbug<BR>
Solution Type     : kbservicepack<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
