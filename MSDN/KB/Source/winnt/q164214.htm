

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Distance Vector Routing Basics </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q164214">
<META NAME="KBModify" CONTENT="1997/10/24">
<META NAME="KBCreate" CONTENT="1997/02/25">
<META NAME="Keywords" CONTENT="NTSrv nttcp kbnetwork">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  There are two types of distributed routing technologies. They are Distance Vector and Link State. This article discusses Distance Vector routing.  MORE INFORMATION  The Distance Vector routing algorithm is sometimes referred to as Bellman- Ford. In...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAM5,QAEN,QADF,QDMP,QA4O,QAY2,QAVZ,QAJQ,QAE5,QBWP,QAWH,QAYV,QAMI,QAMA,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Distance Vector Routing Basics</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q164214</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Server versions 3.51 and 4.0
<LI>Microsoft Routing and Remote Access Service Update for Windows NT
   Server 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are two types of distributed routing technologies. They are Distance
Vector and Link State. This article discusses Distance Vector routing.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Distance Vector routing algorithm is sometimes referred to as Bellman-
Ford. In Distance Vector routing, each entity keeps a routing database
with one entry for every possible destination in the system.
<P>
The Distance Vector routing protocol specifies that each router advertises
to its adjacent neighbors its routing table. For each network destination,
the receiving routers pick the neighbor advertising the lowest cost, and
then add this entry to its routing table. HELLO and RIP are common
Distance Vector routing protocols.
<P>
The problem with Distance Vector routing is slow convergence. In Distance
Vector routing, when a change is made, the changes must be propagated to
each router. This propagation causes all routing tables affected by this
change to be recalculated. Distance Vector routing can be very slow
converging after a topical change.
<P>
A detailed explanation of the algorithm itself can be found in RFC 1058.
The following is an excerpt from RFC 1058:
<P>
<PRE>   In simple networks, it is common to use a metric that simply counts how
   many gateways a message must go through. In more complex networks, a
   metric is chosen to represent the total amount of delay that the
   message suffers, the cost of sending it, or some other quantity which
   may be minimized. The main requirement is that it must be possible to
   represent the metric as a sum of "costs" for individual hops.

   Formally, if it is possible to get from entity i to entity j directly
   (i.e., without passing through another gateway between), then a cost,
   d(i,j), is associated with the hop between i and j. In the normal case
   where all entities on a given network are considered to be the same,
   d(i,j) is the same for all destinations on a given network, and
   represents the cost of using that network. To get the metric of a
   complete route, one just adds up the costs of the individual hops that
   make up the route. For the purposes of this memo, we assume that the
   costs are positive integers.

   Let D(i,j) represent the metric of the best route from entity i to
   entity j. It should be defined for every pair of entities. d(i,j)
   represents the costs of the individual steps. Formally, let d(i,j)
   represent the cost of going directly from entity i to entity j. It is
   infinite if i and j are not immediate neighbors. (Note that d(i,i) is
   infinite. That is, we don't consider there to be a direct connection
   from a node to itself.) Since costs are additive, it is easy to show
   that the best metric must be described by

      D(i,i) = 0,                      all i
      D(i,j) = min [d(i,k) + D(k,j)],  otherwise k

   and that the best routes start by going from i to those neighbors k for
   which d(i,k) + D(k,j) has the minimum value. (These things can be shown
   by induction on the number of steps in the routes.) Note that we can
   limit the second equation to k's that are immediate neighbors of i. For
   the others, d(i,k) is infinite, so the term involving them can never be
   the minimum.

</PRE>Additional Reference Words: prodnt 4.00 rras steelhead
 
<PRE>Keywords          : NTSrv nttcp kbnetwork
Version           : 3.51 4.0
Platform          : winnt</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
