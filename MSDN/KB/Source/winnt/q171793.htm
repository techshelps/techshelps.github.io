

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Information on Application Use of 4GT RAM Tuning </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171793">
<META NAME="KBModify" CONTENT="1997/12/19">
<META NAME="KBCreate" CONTENT="1997/07/23">
<META NAME="Keywords" CONTENT="kbhowto ntsetup NTSrv">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  This article describes the 4GT RAM Tuning feature of Windows NT Server Enterprise Edition (Windows NT Server/E) version 4.0. With standard Windows NT Server, the per-process address limit is 2 gigabytes (GB) of random access memory (RAM). The 4GT f...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QDIK,QAJH,QDL9,QBW6,QBWQ,QBWO,QBWN,QAC2,QABA,QABN,QAH4,QBW5,QBJQ,QAR5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Information on Application Use of 4GT RAM Tuning</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171793</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT Server, Enterprise Edition version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes the 4GT RAM Tuning feature of Windows NT Server
Enterprise Edition (Windows NT Server/E) version 4.0. With standard Windows
NT Server, the per-process address limit is 2 gigabytes (GB) of random
access memory (RAM). The 4GT feature of Windows NT Server/E increases this
limit to 3 GB without introducing new APIs. 4GT does this by reducing the
potential RAM allocated to the Windows NT kernel from 2 GB to 1 GB.
<P>
Much of the information in this article was extracted from the Release
Notes for the product.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Applications developed for the Windows NT Server platform continue to grow,
both in terms of size and performance demands. For applications that are
I/O intensive, such as database management systems (DBMS), the use of a
larger process space can provide considerable performance benefits as time-
intensive I/O access to media is reduced. With the current Windows NT
Server product, the per-process address limit is 2 GB. 4GT increases this
limit to 3 GB without introducing new APIs. 4GT does this by reducing the
potential RAM allocated to the Windows NT kernel from 2 GB to 1 GB.
<P>
This feature benefits applications that run on powerful computers with more
than 2 GB of physical RAM and that can take advantage of a larger address
space. The impact on developers and applications are summarized below.
<P>
Windows NT Server/E supports 4GT on Intel architecture servers only.
<P>
NOTE: The 4GT works only on 32-bit processors, so it does not increase the
addressable memory of Windows NT Server beyond its current limit of 4 GB.
<P>
<P><h3>Writing Applications for 4GT</h3>
 
<P>
User-mode Address Selection:
<P>
When 4GT is enabled, the highest bit of a virtual address cannot be used to
differentiate user-mode addresses from kernel-mode addresses.
<P>
Memory Allocation Issues:
<P>
Some dynamic link library (DLL) files load near the 2 GB boundary;
therefore, there is a region of the 2 GB space in which contiguous memory
cannot be allocated using VirtualAlloc.
<P>
Effects Visible in Kernel Mode:
<P>
Kernel-mode code can no longer assume the user/kernel boundary is at
0x80000000 or at any other number. Code that uses ProbeForRead or
ProbeForWrite macros must be rebuilt using new headers that no longer
contain assumptions about kernel space starting at 0x80000000.
<P>
<P><h3>Enabling 4GT Support in Your Applications</h3>
 
<P>
The changes to support 4GT are done at both the system and application
levels.
<P>
System Changes:
<P>
After you have installed Windows NT Server/E Beta 2, you must modify the
Boot.ini file to enable 4GT. To enable 4GT, simply add the /3GB parameter
to the startup line.
<P>
NOTE: This change is only effective if you are using Windows NT Server/E.
On standard Windows NT, this flag will relocate the kernel, but
applications will be unable to access more than 2 GB.
<P>
For example:
<P>
[boot loader]
timeout=30
default=multi(0)disk(0)rdisk(0)partition(2)\WINNT
[operating systems]
multi(0)disk(0)rdisk(0)partition(2)\WINNT="Windows NT Server Version 4.00"
/3GB
multi(0)disk(0)rdisk(0)partition(2)\WINNT="Windows NT Server Version 4.00
[VGA mode]" /basevideo /sos
<P>
NOTE: Some of the lines above have been wrapped for readability.
<P>
Application Changes:
<P>
No new APIs are required for 4GT support. Instead, memory allocations
remain the same, with the exceptions that are noted below in "Tips for
Effective 4GT Support." However, it would be ineffective for every
application to automatically be provided with a 3-GB address space. To
provide a selective use of 4GT, the following mechanism has been
implemented:

<UL><LI>Executables that must see the 3-GB address space are required to have
   the bit IMAGE_FILE_LARGE_ADDRESS_AWARE set in their image header. This
   can be done using the Imagecfg tool that is included in the Support
   folder on the Windows NT Server/E compact disc. For example, to modify
   the target file DBMSApp.exe, type the following at a command prompt:
<P>
<P><PRE>      Imagecfg -l DBMSApp.exe
</PRE><P>
</UL>NOTE: The linker also has a new switch (/ LARGEADDRESSAWARE) to link
executables with the IMAGE_FILE_LARGE_ADDRESS_AWARE bit. Setting this bit
and then running the application on a system that does not have 4GT support
should not affect the application.
<P>
<P><h3>Tips for Effective 4GT Support</h3>
 
<P>
The following guidelines are intended as a summary of changes that
developers will want to review when they consider enabling 4GT support
within their applications:

<UL><LI>Use GlobalMemoryStatus to get the amount of total user virtual space.
   Avoid using hard-wired constant definitions such as "#define
   HIGHEST_USER_ADDRESS 0xC0000000". Try to detect the real value at
   runtime.

<LI>Avoid signed comparisons with pointers. Some applications might crash on
   a 4GT-enabled system for just this reason. A condition such as "if
   (pointer &gt; 40000000)" will be false for a pointer that is above 2 GB.

<LI>Code using the highest bit to tag items (data value versus an address
   value) will fail. For example, a 32-bit word might be considered a user-
   mode address if below 0x80000000 and an error code if above. This does
   not work anymore.
<P>
</UL><h3>Setting a Paging File Size</h3>
 
<P>
If you are using the 4GT option and have a system with greater than 3 GB of
physical memory, you may want to consider changing the default size of your
page file. Note that this is changed by using the System tool in Control
Panel. In Windows NT 3.51, the default pagefile size is generally 11 MB
larger than physical memory. In Windows NT 4.0, the default pagefile size
is equal to the amount of physical memory on the system. On a 4-GB
computer, this would result in a 4.01-GB paging file. Under such
circumstances, the effectiveness of this paging file could be minimal,
based on the total size, which is 4 GB. Accordingly, a 256-MB page file
could be a more effective use of disk space. However, having a smaller
paging size will affect the total memory commit size for applications. You
should review these settings with the Independent Software Vendor (ISV) for
your applications that are being run with the 4GT option.
 
<PRE>Keywords          : kbhowto ntsetup NTSrv
Version           : WinNT:4.0
Platform          : winnt
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
