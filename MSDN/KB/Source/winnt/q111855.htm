

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Maximum Number of Sockets an Application Can Use </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111855">
<META NAME="KBModify" CONTENT="1997/05/14">
<META NAME="KBCreate" CONTENT="1994/02/22">
<META NAME="Keywords" CONTENT="kbnetwork ntnetserv">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  The maximum number of sockets supported by a particular Windows Sockets supplier is implementation-specific. An application should make no assumptions about the availability of a certain number of sockets.  MORE INFORMATION  Details of the Windows ...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKC,QBC6,QDL9,QBWQ,QBWO,QBWN,QAG8,QAJH,QDKF,QBWP,QAWN,QBSO,QBJQ,QANY,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Maximum Number of Sockets an Application Can Use</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111855</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Windows NT operating system version 3.1
<LI>Microsoft Windows NT Advanced Server version 3.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The maximum number of sockets supported by a particular Windows Sockets
supplier is implementation-specific. An application should make no
assumptions about the availability of a certain number of sockets.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Details of the Windows Sockets implementation are described in the WSAData
structure returned by WSAStartup() and defined as follows:
<P>
struct WSAData {
<PRE>     WORD          wVersion;
     WORD          wHighVersion;
     char           szDescription[WSADESCRIPTION_LEN+1];
     char          szSystemStatus[WSASYSSTATUS_LEN+1];
     unsigned short     iMaxSockets;
     unsigned short     iMaxUdpDg;
     char FAR *     lpVendorInfo
};

</PRE>On return from WSAStart() on Windows NT
<P>
<PRE>   iMaxSockets = 0x7fff (32767)

</PRE>where iMaxSockets is the maximum number of sockets that a single process
can potentially open. A Windows Sockets implementation can provide a global
pool of sockets for allocation to any process, or it can allocate per-
process resources for sockets. The number can reflect the way in which the
Windows Sockets DLL or the networking software was configured. The number
can also be used when writing an application as an indication of whether
the Windows Sockets implementation can be used by the application.
<P>
For example, an X Windows server might check iMaxSockets when it starts. If
the number of sockets is less than 8, the application displays an error
message instructing the user to reconfigure the networking software. (This
is a situation in which the szSystemStatus text might be used.) There is no
guarantee that a particular application can actually allocate iMaxSockets
sockets, because there may be other Windows Sockets applications in use.
<P>
However, independent of the number of sockets supported by a particular
implementation is the issue of the maximum number of sockets that an
application can actually use.
<P>
The maximum number of sockets that a Windows Sockets application can use is
determined at compile time by the manifest constant FD_SETSIZE. To do this,
from the Win32 SDK WINSOCK.H file:
<P>
<PRE>/*
 * Select uses arrays of SOCKETs. These macros manipulate such
 * arrays. FD_SETSIZE may be defined by the user before including
 * this file, but the default here should be &gt;= 64.
 *
 * CAVEAT IMPLEMENTOR and USER: THESE MACROS AND TYPES MUST BE
 * INCLUDED IN WINSOCK.H EXACTLY AS SHOWN HERE.
 */
</PRE>#ifndef FD_SETSIZE
<PRE>#define FD_SETSIZE      64
</PRE>#endif /* FD_SETSIZE */
<P>
This value is used in constructing the fd_set structures used in select().
The default value in WINSOCK.H is 64. If an application is designed to be
capable of working with more than 64 sockets, define the manifest
FD_SETSIZE in every source file before including WINSOCK.H. One way of
doing this is to include the definition within the compiler options in the
makefile, such as adding -DFD_SETSIZE=128 as an option to the compiler
command line for Microsoft C.
<P>
NOTE: Defining FD_SETSIZE as a particular value has no effect on the actual
number of sockets provided by a Windows Sockets implementation.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodnt tcpip<BR>
Keywords            : kbnetwork ntnetserv<BR>
Version             : 3.1<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
