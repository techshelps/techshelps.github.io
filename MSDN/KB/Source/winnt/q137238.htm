

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Advantages of Windows NT Versus LAN Manager Debugging Features </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137238">
<META NAME="KBModify" CONTENT="1995/09/27">
<META NAME="KBCreate" CONTENT="1995/09/24">
<META NAME="Keywords" CONTENT="kbother">
<META NAME="KBArea" CONTENT="Support; KB; winnt, crossnet, iis">
<META NAME="Description" CONTENT="  Windows NT debugging capabilities save your business from long server-down times and give you quicker turn-around times for bug fixes. This article discusses the advantages Windows NT provides for debugging support and compares them with the debugg...">
<META NAME="Product" CONTENT="Windows NT">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAVX,QAGU,QAR4,QDL9,QBWQ,QBWO,QBWN,QBWE,QAVZ,QAH5,QAA1,QAKR,QA5W,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Advantages of Windows NT Versus LAN Manager Debugging Features</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 27, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137238</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows NT operating system version 3.1
<LI>Microsoft Windows NT Advanced Server version 3.1
<LI>Microsoft Windows NT Workstation versions 3.5 and 3.51
<LI>Microsoft Windows NT Server versions 3.5 and 3.51
<LI>Microsoft LAN Manager versions 2.2b and 2.2c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows NT debugging capabilities save your business from long server-down
times and give you quicker turn-around times for bug fixes. This article
discusses the advantages Windows NT provides for debugging support and
compares them with the debugging capabilities of LAN Manager for OS/2.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Windows NT offers the following advantages over LAN Manager in regards
to kernel mode and user mode debugging:

<OL><P><LI>Pre-Problem (STOP Error or System Hanging,
   Etc.) Preparation and Effects on Performance
</OL> 
<P>
Windows NT pre-problem preparation for the problem (target) computer:

<UL><LI>Windows NT requires little or no pre-problem setup on the target
   computer for debugging depending on which version of Windows NT you are
   running and what type of problem you are debugging or want to prepare
   for.
<P>
   There are different types of debugging options that can be configured
   with Windows NT startup switches. You may set these startup options in
   the BOOT.INI file on I386 computers, through the Setup menu on MIPS
   RISC-based computers, or through the Supplementary Menu on Digital Alpha
   AXP RISC-based computers. More information about debug switches is
   provided below.

<LI>Windows NT does not require that you install a debug kernel (the startup
   switches enable the debug kernel)

<LI>Windows NT does not require that you install the symbols on the target
   server. (The symbols provide the debugger with function names and global
   variable names, and enable the debugger to locate those functions and
   variables in the executable image.) The symbols can be located on the
   host computer which may be the computer of a consultant or support
   engineer. (The host is the computer that you use to debug and initiate
   requests to the target computer being debugged.)

<LI>In Windows NT 3.5 and 3.51, if you enable the /CrashDebug switch to
   debug STOP messages (in Windows NT 3.1 it is enabled by default), there
   is no performance degradation. If you enable the /Debug switch to debug
   system hanging problems, for example, there is no performance
   degradation, unless a debug event such as a breakpoint occurs on the
   target computer or unless you break in from the host computer and
   execute commands.
<P>
</UL>For additional information on how to set certain startup switches on your
MIPS or I386 computer, see the Windows NT 3.5 Resource Kit, Volume 3, pages
36 - 40.
<P>
LAN Manager pre-problem preparation on target computer:

<UL><LI>You must install the debug kernel on the target server before the
   problem occurs.

<LI>You must install the symbols on the target server before a problem
   occurs.

<LI>The debug kernel slows down the server performance noticeably.
   Because of performance degradation, you must replace the debug kernel
   with the regular kernel after the problem has been debugged.

</UL><OL><P><LI>Dynamic Versus Non-Dynamic Loading of Symbols
</OL> 
<P>
In Windows NT, you can dynamically load and unload symbols during a debug
session.
<P>
In LAN Manager, you cannot dynamically load symbols because they must be
loaded at boot time. Therefore, if you fail to install the correct symbols,
or if you fail to install any symbols, very little or no debugging can be
done until you install the correct symbols, reboot the computer, and
reproduce the problem.

<OL><P><LI>Location of Symbol Files
</OL> 
<P>
In Windows NT debugging sessions, you may copy the symbol files to any
location accessible by the host debugger.
<P>
NOTE: You may create symbol trees for various configurations on a symbol
server, to which the host debuggers can connect during debug sessions.
Maintaining symbol trees for various configurations may be useful if you
maintain multiple standard configurations. For example, if you have any
Windows NT Service Pack fixes, hot fixes, or Compaq Support Software
Diskette (SSD) fixes installed, you must load a combination of the base
build symbols and the symbols for the fixes.
<P>
In LAN Manager debugging sessions, the symbol files may reside only on the
target server. This may cause disk space problems and may require you to
delete the files after the debug is done.

<OL><P><LI>Supported Debugger Programs (Debuggers)
</OL> 
<P>
Windows NT supports multiple smart debuggers on the host debugger, some of
which are graphical debuggers. The primary debuggers that you may use to
debug kernel mode or user mode exceptions are the following:

<UL><LI>Microsoft Windows NT Kernel Debugger (The executable file names indicate
   the computer processor for which they are used: I386KD.EXE, MIPSKD.EXE,
   ALPHAKD.EXE, PPCKD.EXE)
<LI>Microsoft Windows NT WinDbg (WINDBG.EXE)
<LI>Microsoft Windows NT Symbolic Debugger (NTSD.EXE)
<LI>Microsoft Windows NT Console Debugger (CDB.EXE)
<P>
</UL>For additional information on the Windows NT debuggers, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WINNT/Q121652.htm">Q121652</A></B>
   TITLE     : List of Debuggers Supported with Windows NT

</PRE></OL>LAN Manager supports only an unsophisticated dumb terminal debugger.

<OL><P><LI>Post-Mortem Debugger for Unhandled User-Mode Exceptions
</OL> 
<P>
Windows NT allows you to specify a post-mortem debugger for unhandled user-
mode exceptions. The primary debuggers used to debug user-mode exceptions
are the following:

<UL><LI>Microsoft Dr. Watson for Windows NT
<LI>Microsoft Windows NT Kernel Debugger
<LI>Microsoft Visual C++ interface
<P>
</UL>For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../WINNT/Q121434.htm">Q121434</A></B>
   TITLE     : Specifying the Debugger for Unhandled User Mode Exceptions

</PRE></OL>LAN Manager does not allow you to specify a post-mortem debugger for
unhandled user-mode exceptions.

<OL><P><LI>Automatic STOP-Recovery and Off-Line Debugging
</OL> 
<P>
The following STOP-recovery options in Windows NT version 3.5 and 3.51
allow for minimal server-down time and off-line debugging in most
situations:

<UL><LI>Send an administrative alert.
<LI>Write a message to the system log.
<LI>Create a kernel mode dump file.
<LI>Create a user mode dump file (available since Windows NT version 3.51).
<LI>Automatically reboot.
<P>
</UL>The new Dr. Watson for Windows NT can be configured to dump the virtual
address space for the program that generated the fault to a dump file,
which can be read with the modified Windows NT WinDbg program.
<P>
Windows NT 3.51 also introduces three new utilities that assist customers
in handling kernel mode crash dump files:

<UL><LI>DUMPEXAM.EXE performs basic debugging analysis of a kernel mode crash
   dump file. It generates a text file with the output of the analysis.

<LI>DUMPCHK.EXE performs a validity check on a kernel mode crash dump. This
   utility verifies that the file was written correctly and is readable by
   a debugger.

<LI>DUMPFLOP.EXE copies a dump file to floppy diskettes and reassembles a
   dump file from floppy diskettes.
<P>
</UL>LAN Manager does not provide any capability for automatic recovery or off-
line debugging. You may not reboot the server as long as the engineer is
working on debugging the problem.

<OL><P><LI>Source-Level Debugging
</OL> 
<P>
Windows NT provides source-level debugging with some debuggers. This allows
you to debug directly using the source code in a higher level language such
as C, rather than using disassembled computer code.
<P>
The LAN Manager debugger displays code in symbolic assembly language. This
provides function names, however, the remaining code is in assembly
language.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbother<BR>
KBSubcategory: ntconfig ntgeneral<BR>
Additional reference words: prodnt prodlm 2.20b 2.20c 3.10 3.50 3.51 dbg<BR>
crash crashes crashed<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 27, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
