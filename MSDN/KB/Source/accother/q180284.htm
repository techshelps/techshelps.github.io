

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODE97: Avoiding Common Mistakes with Distributable Run-time Apps </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q180284">
<META NAME="KBModify" CONTENT="1998/02/04">
<META NAME="KBCreate" CONTENT="1998/01/30">
<META NAME="Keywords" CONTENT="OdeGen">
<META NAME="KBArea" CONTENT="Support; KB; accother, access, office, officevba, vbapp">
<META NAME="Description" CONTENT="  The process of creating a distributed run-time application is explained step-by-step in the  Developing a Run-Time Application  Help topic (click the Contents tab in Microsoft Office 97 Developer Edition Tools Help, and then click to expand the  Mi...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QAB4,QAJH,QAAP,QAH4,QBS0,QDI2,QA1S,QA6A,QAMB,QDIZ,QAH6,QDN9,QAF0,QAKP P1 P2 P3 P4 P5 P6 T2 P7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ODE97: Avoiding Common Mistakes with Distributable Run-time Apps</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 4, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q180284</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Office 97 Developer Edition Tools
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The process of creating a distributed run-time application is explained
step-by-step in the "Developing a Run-Time Application" Help topic (click
the Contents tab in Microsoft Office 97 Developer Edition Tools Help, and
then click to expand the "Microsoft Office 97, Developer Edition Tools"
topic). This article lists available resources and troubleshooting steps
that you should use to avoid making common mistakes when you create a
custom application.
<P>
<P><h3>Things to Consider When You Create and Distribute a Run-Time Application</h3>
 
<P>
When you create and distribute the run-time application, consider the
following questions:

<UL><LI>How was the application created?

<LI>Was the application tested and debugged?

<LI>Were Help files and topic files created?

<LI>Was the application tested in the run-time environment?

<LI>Were disk images created by using the Setup Wizard?

<LI>Was the application packaged and distributed?
<P>
</UL>The following sections contain more information about these questions.
<P>
<P><h3>How Was the Application Created?</h3>
 
<P>
Before you can consider the application finished, answer the following
questions:

<UL><LI>Did you develop a plan?

<LI>Did you build the application around forms?

<LI>Did you include error handling?

<LI>Did you create custom menu bars and toolbars?

<LI>Did you add startup options?

<LI>If security is required, did you properly secure the application?
<P>
</UL><h3>Did you develop a plan?</h3>
 
<P>
The first step in the process is to develop a design for the application.
Make sure you have answered to the following questions:

<UL><LI>Was the application secured? If so, how?

<LI>Was the database split? If so, how?

<LI>Will the application be run from a network? If so, how?

<LI>What is the best way to update the application after it is distributed?
<P>
</UL>For more information about the things to consider when you create a custom
application, please see the following articles in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q162584.htm">Q162584</A></B>
   TITLE     : ADT/ODE: Developing a Plan to Deploy Run-Time Applications

   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q162522.htm">Q162522</A></B>
   TITLE     : ADT/ODE: Distributing a Split Database Application with
               ODE/ADT

   ARTICLE-ID: <B><A HREF="../OFFICE/Q169813.htm">Q169813</A></B>
   TITLE     : OFF97: Not All Files Can Be Distributed Using Setup Wizard

   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q163535.htm">Q163535</A></B>
   TITLE     : ODE97: List of Files You Can Redistribute with ODE Run-Time
               App

   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q179318.htm">Q179318</A></B>
   TITLE     : ACC97: How to Simulate Office Features in an ODE Application

</PRE><h3>Did you build the application around forms?</h3>
 
<P>
In general, it's a good idea to build your application around forms. Users
should interact with the application through the forms that you create
instead of the underlying queries or tables. By building your application
around forms, you can control the following:

<UL><LI>The commands that are available to users

<LI>The flow of the application

<LI>The appearance and behavior of the application

<LI>The way that users access data

<LI>The way that data is displayed
<P>
</UL>For more information about using forms in the application, click the
Contents tab in Microsoft Office 97 Developer Edition Tools Help, click to
expand the "Microsoft Office 97, Developer Edition Tools" topic, click to
expand the "Developing a Run-Time Application" topic, and then click to
view the "The Importance of Using Forms in Your Run-Time Application"
topic.
<P>
For more information about form features that you cannot include in your
custom application, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>  ARTICLE-ID: <B><A HREF="../ACCOTHER/Q172090.htm">Q172090</A></B>
  TITLE     : ODE97: Filter-By-Form Not Available in Run-Time Applications

</PRE><h3>Did you include error handling?</h3>
 
<P>
It's important to include error-handling code in the application's Visual
Basic for Applications procedures. When Microsoft Access encounters Visual
Basic run-time errors that are not handled, it closes the application
without displaying any error messages.
<P>
Microsoft Access also closes the application without displaying any error
messages if it encounters any run-time errors in the application's macros.
However, you cannot trap errors in macros. If you want to ensure that your
application traps run-time errors, use Visual Basic procedures instead of
macros.
<P>
NOTE: Avoid using the End statement in the run-time application. The End
statement closes the application without producing a trappable run-time
error.
<P>
For more information about implementing error handling and handling run-
time errors in the application, see Chapter 8, "Handling Run-Time Errors,"
in "Building Applications with Microsoft Access 97."
<P>
<P><h3>Did you create custom menu bars and toolbars?</h3>
 
<P>
To prevent users from making changes to the application, the run-time
environment removes several menus and commands from the menu bar. For
example, the View, Tools, and Format menus are removed from all windows.
Commands on the Edit, Insert, and Records menus are also removed from the
menu bars in the datasheet view of Tables and Queries, the form view, and
print preview.
<P>
You must control the menus and commands that are available to users of the
application by building the application around forms that have custom
menus. The run-time environment disables all built-in Microsoft Access
toolbars. However, even though the run-time environment does not support
built-in toolbars, you can add your own custom toolbars to the application.
When you create a custom toolbar, it is stored in the current database. It
is automatically available to the application.
<P>
For more information about creating custom menu bars and toolbars, please
see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../vbapps/Q159692.htm">Q159692</A></B>
   TITLE     : ACC97: How to Create Command Bars Using Visual Basic Code

</PRE><h3>Did you add startup options?</h3>
 
<P>
You can set the following startup options for the custom application:

<UL><LI>Application title

<LI>Application icon

<LI>Name of Custom menu bar

<LI>Name of startup form
<P>
</UL><h3>If security is required, did you properly secure the application?</h3>
 
<P>
When you distribute the run-time application to users who have Microsoft
Access 97 on their computers, you should take several precautions to
protect the database. To prevent users from making modifications to the
objects and code, or from inadvertently causing problems with the
application, follow these recommendations:

<UL><LI>Specify the /runtime option on all command lines that you use to start
   the application.

<LI>Use the Security Wizard that is provided with Microsoft Access to
   secure all the objects in the database.

<LI>Use customized menus and toolbars in the application.

<LI>Set the AllowBypassKey property to False to disable the SHIFT key.

<LI>Set any database startup properties that could potentially give users
   access to the Database window or any Design view.

<LI>If the database contains Visual Basic code, distribute it as an MDE
   file.
<P>
</UL>For more information about securing the application, please see "Building
Applications with Microsoft Access 97", in Chapter 14, "Securing and
Delivering Your Application."
<P>
<P><h3>Was the Application Tested and Debugged?</h3>
 
<P>
When you program an application, you must consider what happens when an
error occurs. An error can occur in an application for either of two
reasons. The first reason is that some condition at the time the
application is run causes the otherwise valid code to fail. For example, if
the code attempts to open a table that the user has deleted, an error
occurs. The second reason is that the code may contain improper logic that
prevents it from doing what you intended. For example, an error occurs if
the code attempts to divide a value by zero.
<P>
If you have not implemented error handling, Visual Basic halts execution
and displays an error message when an error occurs in the code. The user of
the application is likely to be confused and frustrated when this happens.
You can forestall many problems by including thorough error-handling
routines in the code to handle any errors that may occur.
<P>
When you add error handling to a procedure, you should consider how the
procedure routes execution when an error occurs. The first step in routing
execution to an error handler is to enable an error handler by including
some form of the On Error statement in the procedure. The On Error
statement directs execution in event of an error. If there's no On Error
statement, Visual Basic simply halts execution and displays an error
message when an error occurs.
<P>
When an error occurs in a procedure that contains an enabled error handler,
Visual Basic does not display the normal error message. Instead, it routes
execution to an error handler if one exists. When execution passes to an
enabled error handler, that error handler becomes active. Within the active
error handler, you can determine the type of error that has occurred and
address it in a manner of your choosing. Microsoft Access provides two
objects that contain information about errors that have occurred, the
Visual Basic Err object and the DAO Error object.
<P>
For more information about implementing error handling and handling run-
time errors in the application, see Chapter 8, "Handling Run-Time Errors,"
in "Building Applications with Microsoft Access 97."
<P>
For more information about "Routing Execution When an Error Occurs,"
"The On Error Statement," "The On Error Resume Next statement," and "The
Resume Statement," search the Help Contents for "The Importance of Error
Handling in Your Run-Time Application," and then view the topic "Elements
of Run-Time Error Handling."
<P>
<P><h3>Were Help Files and Topic Files Created?</h3>
 
<P>
Your application should use its own Help file rather than the full
Microsoft Access Help file (Acmain80.hlp). If you want to provide Help for
your run-time application, you must create your own Help file, and then set
the AppHelpFile key in the Windows Registry. You can also provide topic IDs
for your help file so that you can create context-sensitive help for your
topics. Microsoft Office 97 Developer Edition includes a Help Workshop to
assist you in creating custom Help files, and the Setup Wizard to assist
you in setting the AppHelpFile registry key when you create your Setup
files.
<P>
For more information about creating your own Help files, please see the
following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q171958.htm">Q171958</A></B>
   TITLE     :  ODE97: Tips for Creating and Compiling Your Windows Help
                File

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q175491.htm">Q175491</A></B>
   TITLE     :  ODE97: Step-by-Step Example of Creating/Compiling a Help
                File

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q163939.htm">Q163939</A></B>
   TITLE     :  ODE97: Help Workshop Help Topics Contents

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q177107.htm">Q177107</A></B>
   TITLE     :  ACC97: Displaying Context-Sensitive Help for What's This
                Button

</PRE><h3>Was the Application Tested in the Run-Time Environment?</h3>
 
<P>
You should always test and debug your application on a clean computer. This
will ensure that when you package your application you are including all
the files that you need to successfully run your application. To test your
application on a clean computer follow these steps:

<OL><P><LI>Run your setup program on a clean computer. This should be a computer
   that does not have any of the components that you are including with
   your custom application.

<P><LI>Back up your Windows and Windows/System folders.

<P><LI>Test your application.

<P><LI>Delete the application.

<P><LI>Delete everything in the Windows and Windows/System folders.

<P><LI>Restore Windows and Windows/System folders from the backup.
<P>
</OL>For more information about testing your application, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q162584.htm">Q162584</A></B>
   TITLE     : ADT/ODE: Developing a Plan to Deploy Run-Time Applications

</PRE></OL>For more information about errors that you may encounter when testing your
application, please see the following article in the Microsoft Knowledge
Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCOTHER/Q119754.htm">Q119754</A></B>
   TITLE     : ADT/ODE: Compile Error When Running ADT or ODE Application

</PRE><h3>Were Disk Images Created by Using the Setup Wizard?</h3>
 
<P>
When your custom application is complete and ready to distribute to users,
you need a way for users to install it. Microsoft Office 97, Developer
Edition provides the Setup Wizard, which helps you create a custom Setup
program for your application.
<P>
When you run the Setup Wizard, you answer questions about the files that
you want to copy to users' hard disks, the Microsoft Access features that
your application requires, and how the Setup program should customize the
installation of your application. Then the Setup Wizard compresses your
application files and groups them so you can copy them to floppy disks or
to a network drive. If your users do not already have Microsoft Access
installed on their computers, the Setup Wizard can create an installation
that includes the run-time version of Microsoft Access.
<P>
The Setup Wizard compresses and groups files based on your choices and
creates a custom template that the Setup program will use to install your
application.
<P>
NOTE: If you choose Network installation when you create your disk images,
remember that the user must connect to the folder or directory in which the
files are stored to run the Setup.exe file. This means that the folder must
be shared. In a Windows NT or a Netware environment, the user must also
have the necessary permissions to run the setup program and copy files.
<P>
For more information about Network permissions, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../ACCESS/Q136140.htm">Q136140</A></B>
   TITLE     : ACC: Privileges Needed for Workdir Folder

</PRE>For more information about using the Setup wizard, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q162884.htm">Q162884</A></B>
   TITLE     :  ODE97: Troubleshooting ODE Setup Wizard Problems

</PRE><h3>Was the Application Packaged and Distributed?</h3>
 
<P>
After your Setup program is complete, you're ready to distribute your
application. To install your application, users can simply run the Setup
program file included on your floppy disk or in your network installation
folder.
<P>
For more information about installing your custom application, please see
the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q170695.htm">Q170695</A></B>
   TITLE     :  ODE97: How to Resolve Path/File Access Error in Setup
                Wizard

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q177590.htm">Q177590</A></B>
   TITLE     :  ODE97: Setup Not Completed Successfully Installing Custom
                App

   ARTICLE-ID:  <B><A HREF="../ACCESS/Q176018.htm">Q176018</A></B>
   TITLE     :  ODE97: ODE Setup Wizard Error "Setup Error 825"

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q161403.htm">Q161403</A></B>
   TITLE     :  ADT/ODE: Err Running Setup If More Than 40 Registry Keys
                Define

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q135382.htm">Q135382</A></B>
   TITLE     :  ADT/ODE: File Compression Ratio Less Than Other Programs

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q121959.htm">Q121959</A></B>
   TITLE     :  ADT/ODE: ADT/ODE Application Setup Always Defaults to
                Drive C

   ARTICLE-ID:  <B><A HREF="../ACCOTHER/Q165630.htm">Q165630</A></B>
   TITLE     :  ODE97: Files Added to the Disk Images by the ODE Setup
                Wizard

</PRE>NOTE: If you want to modify your custom Setup program after running the
Setup Wizard, or if you need to update files included in your application,
run the Setup Wizard again. On the first page, choose the option to use
previously saved setup options, and then specify the template file you
saved in a previous Setup Wizard session.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: inf<BR>
Keywords          : OdeGen<BR>
Version           : WINDOWS:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 4, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
