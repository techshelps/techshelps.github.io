

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADT: How to Direct DDE to a Specific Instance of a Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105659">
<META NAME="KBModify" CONTENT="1997/04/07">
<META NAME="KBCreate" CONTENT="1993/10/22">
<META NAME="Keywords" CONTENT="IntpDde kbinterop">
<META NAME="KBArea" CONTENT="Support; KB; accother, access, office, officevba, vbapp">
<META NAME="Description" CONTENT="  Advanced: Requires expert coding, interoperability, and multiuser skills.  You can run multiple instances of the same application under Microsoft Windows. When you communicate with an application using DDE, it may be important to be able to identif...">
<META NAME="Product" CONTENT="Access">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA1S,QDN9,QBVP,QAMA,QA5F,QA4H,QAJH,QAY5,QAB9,QBV8,QAZ2,QDL9,QBWO,QBWN,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>ADT: How to Direct DDE to a Specific Instance of a Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 7, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105659</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Access versions 1.0, 1.1, 2.0
<LI>Microsoft Access Distribution Kit version 1.1
<LI>Microsoft Access Developer's Toolkit version 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Advanced: Requires expert coding, interoperability, and multiuser skills.
<P>
You can run multiple instances of the same application under Microsoft
Windows. When you communicate with an application using DDE, it may be
important to be able to identify which instance of an application should
respond to your DDE commands.
<P>
You can initiate a DDE conversation with a specific instance of an
application by appending the application's Task ID number to the
application name argument in the DDE initiate command.
<P>
This article assumes that you are familiar with Access Basic and with
creating Microsoft Access applications using the programming tools provided
with Microsoft Access. For more information about Access Basic, please
refer to the "Introduction to Programming" manual in Microsoft Access
version 1.x, or the "Building Applications" manual, Chapter 3, "Introducing
Access Basic" in version 2.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Each instance of each application started in Windows is assigned a unique
number called a Task ID. This number can be used to distinguish among
multiple instances of an application.
<P>
To initiate a DDE conversation using the System topic with an instance of
Microsoft Excel that has a Task ID of 34567, you could use the following
sample command:
<P>
<PRE>   Chan = DDEInitiate("excel34567", "System")

</PRE>If you do not specify a Task ID number, you will initiate a conversation
with the first instance of the application that Windows finds. Note that
the order in which Windows finds instances of an application does not
always correspond to the order in which the applications were started.
<P>
<P><h3>How to Get the Task ID of an Application</h3>
 
<P>
You can get the Task ID of an application by doing one of the following:

<UL><LI>Use the Access Basic shell command to launch the application. The shell
   command will return the application's Task ID if the application is
   launched successfully.
<P>
   -or-

<LI>Use an Access Basic function to find the Task ID. The following sample
   function can be used to find an application's Task ID:
<P>
</UL><h3>Notes</h3>
 

<UL><LI>In the following sample code, an underscore (_) is used as a line-
   continuation character. Remove the underscore from the end of the line
   when re-creating this code in Access Basic.

<LI>You may have some Microsoft Windows API functions defined in an existing
   Microsoft Access library; therefore, your declarations may be
   duplicates. If you receive a duplicate procedure name error message,
   remove or comment out the declarations statement in your code.
<P>
<P><PRE>      Option Explicit
</PRE><P>
<P><PRE>      Declare Function GetActiveWindow Lib "User" () As Integer
      Declare Function GetWindowWORD Lib "User" (ByVal hWnd As Integer, _
<PRE></PRE>         ByVal nIndex As Integer) As Integer
      Const GWW_HINSTANCE = (-6)

      Function GetActiveTaskID ()
         GetActiveTaskID = GetWindowWORD(GetActiveWindow(), _
            GWW_HINSTANCE)
      End Function

</PRE></UL>The following Access Basic code demonstrates the use of both of these
techniques in getting the Task ID:
<P>
<PRE>   Function TestTaskID()
      Dim TaskID
      TaskID = Shell("excel", 1)
      MsgBox TaskID &amp; " and " &amp; GetActiveTaskID()
   End Function

</PRE><h3>How to Use an Application's Task ID in a DDE Conversation</h3>
 
<P>
The following example demonstrates how to use Task IDs to indicate which
instance of an application should be used in a DDE conversation. This
sample code will launch two instances of Microsoft Excel, start a DDE
conversation with each instance, and poke data to Sheet1 of each instance:
<P>
<PRE>   Function DDEWithTwoInstances ()
      Dim TaskID1, TaskID2
      Dim Chan1, Chan2

      ' Start 2 instances of Microsoft Excel and record Task ID numbers.
      TaskID1 = Shell("excel.exe", 1)
      TaskID2 = Shell("excel.exe", 1)

      ' Initiate DDE conversations with both instances using
      ' the Task ID numbers. Trap an error that may happen
      ' if we try to initiate a conversation and the copy of
      ' Microsoft Excel is still trying to start from the shell command.

      On Error GoTo ExcelNotYetReady
      Chan1 = DDEInitiate("excel" &amp; TaskID1, "Sheet1")
      On Error GoTo 0

      On Error GoTo ExcelNotYetReady
      Chan2 = DDEInitiate("excel" &amp; TaskID2, "Sheet1")
      On Error GoTo 0

      ' Poke information into each instance of Microsoft Excel.

      DDEPoke Chan1, "R1C1", "This is Task1!"
      DDEPoke Chan2, "R1C1", "This is Task2!"

      DDETerminateAll

      Exit Function

   ExcelNotYetReady:
      DoEvents
      Resume

   End Function

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft Access "Introduction to Programming," version 1.1, pages 139-147
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: dynamic data exchange adk<BR>
Keywords            : IntpDde kbinterop<BR>
Version             : 1.0 1.1 2.0<BR>
Platform            : WINDOWS<BR>
Hardware            : X86<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 7, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
