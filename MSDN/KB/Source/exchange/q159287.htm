

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XCLN: MAPIFindNext Fails to Retrieve Message Identifiers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159287">
<META NAME="KBModify" CONTENT="1997/04/09">
<META NAME="KBCreate" CONTENT="1997/01/15">
<META NAME="Keywords" CONTENT="kbbug4.00 kbfix4.00.sp4 kbusage XCLN">
<META NAME="KBArea" CONTENT="Support; KB; exchange">
<META NAME="Description" CONTENT="  Using the simple MAPI function MAPIFindNext in MAPI version 1.0 may fail to retrieve the next (or first) message identifier of a specified type of incoming message. The following is the resulting return code of the MAPIFindNext call:     MAPI_E_NO_...">
<META NAME="Product" CONTENT="Exchange">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEV,QAYC,QBBI,QAUD,QAGI,QAP2,QAL7,QBWP,QAY5,QALW,QAHE,QARL,QAKD,QAH4,QDO3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XCLN: MAPIFindNext Fails to Retrieve Message Identifiers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159287</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Exchange Windows 95 client, version 4.0
<LI>Microsoft Exchange Windows 3.x client, version 4.0
<LI>Microsoft Exchange Windows NT client, version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the simple MAPI function MAPIFindNext in MAPI version 1.0 may fail to
retrieve the next (or first) message identifier of a specified type of
incoming message. The following is the resulting return code of the
MAPIFindNext call:
<P>
<PRE>   MAPI_E_NO_MESSAGES

</PRE><h2>CAUSE</h2>
 
<P>
When you use MAPI version 1.0, choosing the value "IPM." for parameter
lpszMessageType in the MAPIFindNext function call does not retrieve the
next message identifier of the specified type (IPM) of incoming message.
This value has been used successfully in previous versions of simple MAPI
to enumerate all messages of a given message type.
<P>
<P><h2>WORKAROUND</h2>
 
<P>
Instead of using "IPM." as value to enumerate messages of an IPM message
type, specify "NULL" (without the quotation marks) in the lpszMessageType
parameter of the MAPIFindNext function call.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft Exchange version
4.0.
This problem was corrected in the latest Microsoft Exchange 4.0 U.S. Service Pack. For information on obtaining the service pack, query on the following word in the Microsoft Knowledge Base (without the spaces):
<P>
<PRE>   S E R V P A C K

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The MAPI SDK online documentation states the following regarding the
lpszMessageType parameter of the MAPIFindNext function:
<P>
<PRE>   When the lpszSeedMessageID parameter is NULL or points to an empty
   string, MAPIFindNext returns the message identifier for the first
   message of the type specified by the lpszMessageType parameter. When
   lpszSeedMessageID contains a valid identifier, the function returns the
   next matching message of the type specified by lpszMessageType. Repeated
   calls to MAPIFindNext ultimately result in a return of the
   MAPI_E_NO_MESSAGES value, which means the enumeration is complete.
   Message type matching is done against message class strings. All message
   types whose names match (up to the length specified in lpszMessageType)
   are returned.

</PRE>The last sentence implies that a message type string portion such as "IPM."
or "IPC." can be used with wildcard functionality to enumerate all messages
of the given message type. As a result, there are two methods for
successfully enumerating IPM type messages using simple MAPI:

<UL><LI>ulResult = (*lpfnMAPIFindNext)(hMAPISession, hWnd, "IPM.",
   lpszSeedMessageID, flFlag, 0L, lpszMessageID);

<LI>ulResult = (*lpfnMAPIFindNext)(hMAPISession, hWnd, NULL,
   lpszSeedMessageID, flFlag, 0L, lpszMessageID);
<P>
</UL>Using MAPI version 1.0, only the second method successfully retrieves the
next (or first) message identifier of a specified type of incoming message.
This behavior would require changing the source codes for all applications
using the first method to enumerate IPM type messages, and recompiling
them.
<P>
<P><h3>Installation</h3>
 
<P>
This description uses the Microsoft Exchange Windows NT client, version 4.0
as an example.

<OL><P><LI>Close all applications that use Mapi32.dll

<P><LI>Back up Mapi32.dll from the &lt;Winntroot&gt;\System32 directory.

<P><LI>Copy the extracted version of Mapi32.dll to the &lt;Winntroot&gt;\System32
   directory.

<P><LI>Restart any applications that were stopped in step 1.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: WIN32 SDK Simple Win32 Messaging 5.00<BR>
Keywords            : kbbug4.00 kbfix4.00.sp4 kbusage XCLN<BR>
Version             : 4.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kbbug<BR>
Resolution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
