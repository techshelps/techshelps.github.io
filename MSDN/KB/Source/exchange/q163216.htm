

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XCLN: Updated Mapivb32.bas for Simple MAPI on 32-Bit Platforms </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163216">
<META NAME="KBModify" CONTENT="1998/01/06">
<META NAME="KBCreate" CONTENT="1997/02/05">
<META NAME="Keywords" CONTENT="XCLN kbcode kbusage">
<META NAME="KBArea" CONTENT="Support; KB; exchange">
<META NAME="Description" CONTENT="  This updated module for 32-bit Visual Basic 4.0, allows a programmer to use simple MAPI calls in a 32-bit environment. The simple MAPI functions are defined in respect to the Mapi32.dll found on 32-bit systems.  To use the information below, save a...">
<META NAME="Product" CONTENT="Exchange">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANG,QA7H,QAHE,QAY5,QAB9,QATX,QBV8,QAR2,QBS0,QAMB,QAEV,QAH7,QAC2,QACJ,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>XCLN: Updated Mapivb32.bas for Simple MAPI on 32-Bit Platforms</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 6, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163216</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Exchange Windows 95 client, version 4.0
<LI>Microsoft Exchange Windows NT client, version 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This updated module for 32-bit Visual Basic 4.0, allows a programmer to use
simple MAPI calls in a 32-bit environment. The simple MAPI functions are
defined in respect to the Mapi32.dll found on 32-bit systems.
<P>
To use the information below, save all of the text as a text file with a
.bas extension, and then add the .bas file to the Visual Basic 4.0 project.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<PRE>'**************************************************************************
'
'
'
' Visual Basic declaration for the MAPI functions.
'
' This file can be loaded into the global module.
'
'
'
'
'**************************************************************************
'

'***************************************************
'   MAPI Message holds information about a message
'***************************************************

</PRE>Type MAPIMessage
<PRE>    Reserved As Long
    Subject As String
    NoteText As String
    MessageType As String
    DateReceived As String
    ConversationID As String
    Flags As Long
    RecipCount As Long
    FileCount As Long
</PRE>End Type
<P>
<P>
<PRE>'************************************************
'   MAPIRecip holds information about a message
'   originator or recipient
'************************************************

</PRE>Type MapiRecip
<PRE>    Reserved As Long
    RecipClass As Long
    Name As String
    Address As String
    EIDSize As Long
    EntryID As String
</PRE>End Type
<P>
<P>
<PRE>'******************************************************
'   MapiFile holds information about file attachments
'******************************************************

</PRE>Type MapiFile
<PRE>    Reserved As Long
    Flags As Long
    Position As Long
    PathName As String
    FileName As String
    FileType As String
</PRE>End Type
<P>
<P>
<PRE>'***************************
'   FUNCTION Declarations
'***************************

Declare Function MAPILogon Lib "MAPI32.DLL" (ByVal UIParam&amp;, ByVal User$,
</PRE>ByVal Password$, ByVal Flags&amp;, ByVal Reserved&amp;, Session&amp;) As Long
<PRE>Declare Function MAPILogoff Lib "MAPI32.DLL" (ByVal Session&amp;, ByVal
</PRE>UIParam&amp;, ByVal Flags&amp;, ByVal Reserved&amp;) As Long
<PRE>Declare Function BMAPIReadMail Lib "MAPI32.DLL" (lMsg&amp;, nRecipients&amp;,
</PRE>nFiles&amp;, ByVal Session&amp;, ByVal UIParam&amp;, MessageID$, ByVal Flag&amp;, ByVal
Reserved&amp;) As Long
<PRE>Declare Function BMAPIGetReadMail Lib "MAPI32.DLL" (ByVal lMsg&amp;, Message As
</PRE>MAPIMessage, Recip() As MapiRecip, File() As MapiFile, Originator As
MapiRecip) As Long
<PRE>Declare Function MAPIFindNext Lib "MAPI32.DLL" Alias "BMAPIFindNext" (ByVal
</PRE>Session&amp;, ByVal UIParam&amp;, MsgType$, SeedMsgID$, ByVal Flag&amp;, ByVal
Reserved&amp;, MsgID$) As Long
<PRE>Declare Function MAPISendDocuments Lib "MAPI32.DLL" (ByVal UIParam&amp;, ByVal
</PRE>DelimStr$, ByVal FilePaths$, ByVal FileNames$, ByVal Reserved&amp;) As Long
<PRE>Declare Function MAPIDeleteMail Lib "MAPI32.DLL" (ByVal Session&amp;, ByVal
</PRE>UIParam&amp;, ByVal MsgID$, ByVal Flags&amp;, ByVal Reserved&amp;) As Long
<PRE>Declare Function MAPISendMail Lib "MAPI32.DLL" Alias "BMAPISendMail" (ByVal
</PRE>Session&amp;, ByVal UIParam&amp;, Message As MAPIMessage, Recipient() As MapiRecip,
File As MapiFile, ByVal Flags&amp;, ByVal Reserved&amp;) As Long
<PRE>Declare Function MAPISaveMail Lib "MAPI32.DLL" Alias "BMAPISaveMail" (ByVal
</PRE>Session&amp;, ByVal UIParam&amp;, Message As MAPIMessage, Recipient() As MapiRecip,
File() As MapiFile, ByVal Flags&amp;, ByVal Reserved&amp;, MsgID$) As Long
<PRE>Declare Function BMAPIAddress Lib "MAPI32.DLL" (lInfo&amp;, ByVal Session&amp;,
</PRE>ByVal UIParam&amp;, Caption$, ByVal nEditFields&amp;, Label$, nRecipients&amp;, Recip()
As MapiRecip, ByVal Flags&amp;, ByVal Reserved&amp;) As Long
<PRE>Declare Function BMAPIGetAddress Lib "MAPI32.DLL" (ByVal lInfo&amp;, ByVal
</PRE>nRecipients&amp;, Recipients() As MapiRecip) As Long
<PRE>Declare Function MAPIDetails Lib "MAPI32.DLL" Alias "BMAPIDetails" (ByVal
</PRE>Session&amp;, ByVal UIParam&amp;, Recipient As MapiRecip, ByVal Flags&amp;, ByVal
Reserved&amp;) As Long
<PRE>Declare Function MAPIResolveName Lib "MAPI32.DLL" Alias "BMAPIResolveName"
</PRE>(ByVal Session&amp;, ByVal UIParam&amp;, ByVal UserName$, ByVal Flags&amp;, ByVal
Reserved&amp;, Recipient As MapiRecip) As Long
<P>
<P>
<P>
<PRE>'**************************
'   CONSTANT Declarations
'**************************
'

</PRE>Global Const SUCCESS_SUCCESS = 0
Global Const MAPI_USER_ABORT = 1
Global Const MAPI_E_USER_ABORT = MAPI_USER_ABORT
Global Const MAPI_E_FAILURE = 2
Global Const MAPI_E_LOGIN_FAILURE = 3
Global Const MAPI_E_LOGON_FAILURE = MAPI_E_LOGIN_FAILURE
Global Const MAPI_E_DISK_FULL = 4
Global Const MAPI_E_INSUFFICIENT_MEMORY = 5
Global Const MAPI_E_BLK_TOO_SMALL = 6
Global Const MAPI_E_TOO_MANY_SESSIONS = 8
Global Const MAPI_E_TOO_MANY_FILES = 9
Global Const MAPI_E_TOO_MANY_RECIPIENTS = 10
Global Const MAPI_E_ATTACHMENT_NOT_FOUND = 11
Global Const MAPI_E_ATTACHMENT_OPEN_FAILURE = 12
Global Const MAPI_E_ATTACHMENT_WRITE_FAILURE = 13
Global Const MAPI_E_UNKNOWN_RECIPIENT = 14
Global Const MAPI_E_BAD_RECIPTYPE = 15
Global Const MAPI_E_NO_MESSAGES = 16
Global Const MAPI_E_INVALID_MESSAGE = 17
Global Const MAPI_E_TEXT_TOO_LARGE = 18
Global Const MAPI_E_INVALID_SESSION = 19
Global Const MAPI_E_TYPE_NOT_SUPPORTED = 20
Global Const MAPI_E_AMBIGUOUS_RECIPIENT = 21
Global Const MAPI_E_AMBIG_RECIP = MAPI_E_AMBIGUOUS_RECIPIENT
Global Const MAPI_E_MESSAGE_IN_USE = 22
Global Const MAPI_E_NETWORK_FAILURE = 23
Global Const MAPI_E_INVALID_EDITFIELDS = 24
Global Const MAPI_E_INVALID_RECIPS = 25
Global Const MAPI_E_NOT_SUPPORTED = 26
<P>
Global Const MAPI_ORIG = 0
Global Const MAPI_TO = 1
Global Const MAPI_CC = 2
Global Const MAPI_BCC = 3
<P>
<P>
<PRE>'***********************
'   FLAG Declarations
'***********************

'* MAPILogon() flags *

</PRE>Global Const MAPI_LOGON_UI = &amp;H1
Global Const MAPI_NEW_SESSION = &amp;H2
Global Const MAPI_FORCE_DOWNLOAD = &amp;H1000
<P>
<PRE>'* MAPILogoff() flags *

</PRE>Global Const MAPI_LOGOFF_SHARED = &amp;H1
Global Const MAPI_LOGOFF_UI = &amp;H2
<P>
<PRE>'* MAPISendMail() flags *

</PRE>Global Const MAPI_DIALOG = &amp;H8
<P>
<PRE>'* MAPIFindNext() flags *

</PRE>Global Const MAPI_UNREAD_ONLY = &amp;H20
Global Const MAPI_GUARANTEE_FIFO = &amp;H100
<P>
<PRE>'* MAPIReadMail() flags *

</PRE>Global Const MAPI_ENVELOPE_ONLY = &amp;H40
Global Const MAPI_PEEK = &amp;H80
Global Const MAPI_BODY_AS_FILE = &amp;H200
Global Const MAPI_SUPPRESS_ATTACH = &amp;H800
<P>
<PRE>'* MAPIDetails() flags *

</PRE>Global Const MAPI_AB_NOMODIFY = &amp;H400
<P>
<PRE>'* Attachment flags *

</PRE>Global Const MAPI_OLE = &amp;H1
Global Const MAPI_OLE_STATIC = &amp;H2
<P>
<PRE>'* MapiMessage flags *

</PRE>Global Const MAPI_UNREAD = &amp;H1
Global Const MAPI_RECEIPT_REQUESTED = &amp;H2
Global Const MAPI_SENT = &amp;H4
<P>
Function CopyFiles(MfIn As MapiFile, MfOut As MapiFile) As Long
<P>
<PRE>    MfOut.FileName = MfIn.FileName
    MfOut.PathName = MfIn.PathName
    MfOut.Reserved = MfIn.Reserved
    MfOut.Flags = MfIn.Flags
    MfOut.Position = MfIn.Position
    MfOut.FileType = MfIn.FileType
    CopyFiles = 1&amp;

</PRE>End Function
<P>
Function CopyRecipient(MrIn As MapiRecip, MrOut As MapiRecip) As Long
<P>
<PRE>    MrOut.Name = MrIn.Name
    MrOut.Address = MrIn.Address
    MrOut.EIDSize = MrIn.EIDSize
    MrOut.EntryID = MrIn.EntryID
    MrOut.Reserved = MrIn.Reserved
    MrOut.RecipClass = MrIn.RecipClass

    CopyRecipient = 1&amp;

</PRE>End Function
<P>
Function MAPIAddress(Session As Long, UIParam As Long, Caption As String,
nEditFields As Long, Label As String, nRecipients As Long, Recips() As
MapiRecip, Flags As Long, Reserved As Long) As Long
<P>
<P>
<PRE>    Dim Info&amp;
    Dim rc&amp;
    Dim nRecips As Long

    ReDim Rec(0 To nRecipients) As MapiRecip
    ' Use local variable since BMAPIAddress changes the passed value
    nRecips = nRecipients

    '*****************************************************
    ' Copy input recipient structure into local
    ' recipient structure used as input to BMAPIAddress
    '*****************************************************

    For i = 0 To nRecipients - 1
        ignore&amp; = CopyRecipient(Recips(i), Rec(i))
    Next i

    rc&amp; = BMAPIAddress(Info&amp;, Session&amp;, UIParam&amp;, Caption$, nEditFields&amp;,
</PRE>Label$, nRecips&amp;, Rec(), Flags, 0&amp;)
<P>
<PRE>    If (rc&amp; = SUCCESS_SUCCESS) Then

        '**************************************************
        ' New recipients are now in the memory referenced
        ' by Info (HANDLE). nRecipients is the number of
        ' new recipients.
        '**************************************************
        nRecipients = nRecips     ' Copy back to parameter

        If (nRecipients &gt; 0) Then
            ReDim Rec(0 To nRecipients - 1) As MapiRecip
            rc&amp; = BMAPIGetAddress(Info&amp;, nRecipients&amp;, Rec())

            '*********************************************
            ' Copy local recipient structure to
            ' recipient structure passed as procedure
            ' parameter. This is necessary because
            ' VB doesn't seem to work properly when
            ' the procedure parameter gets passed
            ' directory to the BMAPI.DLL Address routine
            '*********************************************

            ReDim Recips(0 To nRecipients - 1) As MapiRecip

            For i = 0 To nRecipients - 1
                ignore&amp; = CopyRecipient(Rec(i), Recips(i))
            Next i

        End If

    End If

    MAPIAddress = rc&amp;

</PRE>End Function
<P>
Function MAPIReadMail(Session As Long, UIParam As Long, MessageID As
String, Flags As Long, Reserved As Long, Message As MAPIMessage, Orig As
MapiRecip, RecipsOut() As MapiRecip, FilesOut() As MapiFile) As Long
<P>
<PRE>    Dim Info&amp;
    Dim nFiles&amp;, nRecips&amp;

    rc&amp; = BMAPIReadMail(Info&amp;, nRecips, nFiles, Session, 0, MessageID,
</PRE>Flags, Reserved)
<P>
<PRE>    If (rc&amp; = SUCCESS_SUCCESS) Then

        'Message is now read into the handles array. We have to redim the
        'arrays and read the information in.

        If (nRecips = 0) Then nRecips = 1
        If (nFiles = 0) Then nFiles = 1

        ReDim Recips(0 To nRecips - 1) As MapiRecip
        ReDim Files(0 To nFiles - 1) As MapiFile

        rc&amp; = BMAPIGetReadMail(Info&amp;, Message, Recips(), Files(), Orig)

        '*******************************************
        ' Copy Recipient and File structures from
        ' Local structures to those passed as
        ' parameters
        '*******************************************

        ReDim FilesOut(0 To nFiles - 1) As MapiFile
        ReDim RecipsOut(0 To nRecips - 1) As MapiRecip

        For i = 0 To nRecips - 1
            ignore&amp; = CopyRecipient(Recips(i), RecipsOut(i))
        Next i

        For i = 0 To nFiles - 1
            ignore&amp; = CopyFiles(Files(i), FilesOut(i))
        Next i

    End If

    MAPIReadMail = rc&amp;

</PRE>End Function
<P>
 
<PRE>Keywords          : XCLN kbcode kbusage
Version           : 4.0
Platform          : winnt
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 6, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
