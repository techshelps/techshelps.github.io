

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Guidelines for Creating Unique and Sequential Keys </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136921">
<META NAME="KBModify" CONTENT="1995/09/20">
<META NAME="KBCreate" CONTENT="1995/09/19">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  You can create unique and sequential keys in Visual FoxPro by using two of Visual FoxPro's new features: Stored Procedures and Default Values.  MORE INFORMATION  To see an example showing how to create unique and sequential keys, please look at the...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAA1,QDI2,QDIZ,QAKD,QAB9,QAPF,QAUD,QAKH,QBWS,QDMU,QA5V,QA06,QAZV,QASR,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Guidelines for Creating Unique and Sequential Keys</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136921</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can create unique and sequential keys in Visual FoxPro by using two
of Visual FoxPro's new features: Stored Procedures and Default Values.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To see an example showing how to create unique and sequential keys, please
look at the TasTrade sample application located in the Vfp\Samples\Mainsamp
directory. In this sample, the NewID() stored procedure has been written
and stored in the TasTrade database. The following text is taken from the
"Behind the Scenes" feature of the Tastrade sample:
<P>
The NewID() stored procedure creates unique IDs in the system. It returns
the default value for the primary keys for the Supplier, Products,
Employee, Category, Shippers, and Orders tables.
<P>
Code in NewID() opens Setup.dbf, looks for table alias in the Key_name
field, reads the current value of the Value field, increments it by 1, and
then writes it back to Setup.dbf. The value that was read from the Value
field before incrementing is then returned as the primary key value for a
record.
<P>
Note that the NewID() stored procedure is also designed to accept an alias
as a parameter. The same technique could then be used to maintain
incrementing values that were not being used as primary keys. An example of
this is the order_number record, which is used to generate order numbers
for the Orders table.
<P>
You can modify stored procedures by first opening the database with the
OPEN DATABASE command, and then using the MODIFY PROCEDURES command to
bring up an editing window. Alternatively, you can use the MODIFY DATABASE
command, and then click the Stored Procedures button on the toolbar.
<P>
The code for NewID() is as follows:
<P>
<PRE>   FUNCTION NewID(tcAlias)
     LOCAL lcAlias, ;
           lcID, ;
           lcOldReprocess, ;
           lnOldArea

     lnOldArea = SELECT()

     IF PARAMETERS() &lt; 1
       lcAlias = UPPER(ALIAS())
     ELSE
       lcAlias = UPPER(tcAlias)
     ENDIF

     lcID = ""
     lcOldReprocess = SET('REPROCESS')

     *-- Lock until user presses Esc
     SET REPROCESS TO AUTOMATIC

     IF !USED("SETUP")
       USE tastrade!setup IN 0
     ENDIF
     SELECT setup

     IF SEEK(lcAlias, "setup", "key_name")
       IF RLOCK()
         lcID = setup.value
         REPLACE setup.value WITH ;
                 STR(VAL(ALLT(lcID)) + 1, LEN(setup.value))
         UNLOCK
       ENDIF
     ENDIF

     SELECT (lnOldArea)
     SET REPROCESS TO lcOldReprocess

     RETURN lcID
   ENDFUNC
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgTable<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
