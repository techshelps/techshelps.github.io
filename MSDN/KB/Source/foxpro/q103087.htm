

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Send Macro Commands to MS Excel Using DDEEXECUTE() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q103087">
<META NAME="KBModify" CONTENT="1996/04/29">
<META NAME="KBCreate" CONTENT="1993/08/18">
<META NAME="Keywords" CONTENT="kbinterop kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The DDEEXECUTE() command cannot be used to directly send Microsoft Excel macro commands to Microsoft Excel through dynamic data exchange (DDE) if these macro commands are designed to return a value other than TRUE.  See below for a sample program t...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVP,QAH4,QAB9,QBV8,QA2Q,QBWS,QAG2,QAZ2,QAUD,QAVI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Send Macro Commands to MS Excel Using DDEEXECUTE()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q103087</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5 and 2.5a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The DDEEXECUTE() command cannot be used to directly send Microsoft
Excel macro commands to Microsoft Excel through dynamic data exchange
(DDE) if these macro commands are designed to return a value other
than TRUE.
<P>
See below for a sample program that illustrates how to send this type
of Microsoft Excel macro command from Microsoft FoxPro for Windows to
Microsoft Excel through DDE.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
FoxPro includes several commands for sending DDE commands to other
applications that are written to be DDE aware. The DDEEXECUTE()
command is one of these commands. It can be used to send Microsoft
Excel macro commands to the Microsoft Excel spreadsheet program.
<P>
Many Microsoft Excel macro commands return the logical value TRUE if
they run successfully in a Microsoft Excel macro. Some Microsoft Excel
macro commands, including CREATE.OBJECT(), GET.OBJECT(), GET.NAME(),
GET.NOTE(), and most other GET.&lt;command&gt; macro commands, return
something other than TRUE. These type of Microsoft Excel macro
commands cannot be directly sent to Microsoft Excel through DDE from
FoxPro. These commands will not generate error messages; they will
just not work. To use these commands, you must run them in a Microsoft
Excel macro, which can be done from FoxPro through DDE. (See the
sample program below.)
<P>
The following sample program illustrates the problem of using these
commands through DDE. It also shows a way to execute these commands
successfully through DDE. This program returns the name of the chart
created with the CREATE.OBJECT() command in Microsoft Excel.
<P>
NOTE: This sample program illustrates many FoxPro DDE commands and
some Microsoft Excel macro commands. The use of these Microsoft Excel
commands is beyond the scope of Microsoft FoxPro Product Support. The
use of the FoxPro DDE commands is outside the scope of Microsoft Excel
Product Support.
<P>
<P><h3>Sample Program</h3>
 
<P>
<PRE>   CLEAR

   RUN /N3 e:\xl4\excel.exe     &amp;&amp; The path should be modified
   *                  to reflect the actual path to the Excel program.

   =DDESETOPTION("timeout",10000)  &amp;&amp; Sets time-outs higher so
   *                                  Excel has time to load.
   chan=DDEINITIATE('Excel','System')
   =DDESETOPTION("timeout",2000)   &amp;&amp; Sets time-outs back down.

   =DDEEXECUTE(chan,'[error(false)]')  &amp;&amp; Turns off error checking
   *                                      in Excel.

   * These commands place some numbers in an Excel spreadsheet.
   =DDEEXECUTE(chan,'[select("r1c1")]')
   =DDEEXECUTE(chan,'[formula(10)]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula(15)]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula(20)]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula(25)]')
   =DDEEXECUTE(chan,'[select("r1c1:r4c1")]')
   =DDEEXECUTE(chan,'[copy()]')
   =DDEEXECUTE(chan,'[create.object(5,""r5c3"",0.75, ;
                 12,""r10c8"",47.25,11.25,1,true)]')
   * The last command didn't work! It has to be run from
   * an Excel macro that will be created and run next.

   * Creating a macro in Excel!!
   =DDEEXECUTE(chan,'[new(3)]')
   =DDEEXECUTE(chan,'[select("r1c1")]')
   =DDEEXECUTE(chan,'[formula("CreateChart")]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula("=activate(""sheet1"")")]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula("=copy()")]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula("=create.object(5,""r5c3"",0.75, ;
              12,""r10c8"",47.25,11.25,1,true)")]')
   =DDEEXECUTE(chan,'[select("r[1]c")]')
   =DDEEXECUTE(chan,'[formula("=return()")]')

   * Go to the beginning of the macro and run it.
   =DDEEXECUTE(chan,'[select("r1c1")]')
   =DDEEXECUTE(chan,'[run()]')

   * An invalid attempt to get the name of the embedded
   * chart that was created with the Excel macro.
   STORE "BLANK" TO zz    &amp;&amp; Initializing variable zz to "BLANK"
   ? zz                   &amp;&amp; Display contents of variable zz
   zz=DDEEXECUTE(chan,'[get.object(5)]')
   ? "zz is equal to"
   ? zz          &amp;&amp; The name of the object will not be
   *                in this variable.
   *                DDEEXECUTE() will not work with a GET.&lt;command&gt;.

   * Selecting the macro sheet cell that contains the name
   * of the chart that was created with the CREATE.OBJECT()
   * Excel macro command.
   =DDEEXECUTE(chan,'[activate("Macro1")]')
   =DDEEXECUTE(chan,'[select("r4c1")]')


   * Initiating another channel to Excel
   =DDESETOPTION("timeout",10000)
   channel=DDEINITIATE('Excel','Macro1')
   =DDESETOPTION("timeout",2000)

   * Here the name of the chart is copied and specially pasted
   * into another cell in the macro sheet.
   =DDEEXECUTE(channel,'[copy()]')
   =DDEEXECUTE(channel,'[select("rc[1]")]')
   =DDEEXECUTE(channel,'[paste.special(3,1,false,false)]')

   * Here is where the name of the chart has been requested by
   * FoxPro from the macro sheet cell that it was specially
   * pasted into.
   xx=DDEREQUEST(channel,"r4c2")
   ? "xx is equal to"
   ? xx          &amp;&amp; The name of the object will be in this variable.
   =DDEEXECUTE(channel,'[cancel.copy()]')

   * Terminating channels and quitting Excel
   =DDETERMINATE(channel)
   =DDEEXECUTE(chan,'[quit()]')    &amp;&amp; It may be desirable to
   *                                  remark this out to examine
   *                                  the worksheets in Excel more
   *                                  closely.
   =DDETERMINATE(chan)

</PRE><h3>Notes</h3>
 

<UL><LI>To request something contained in the cell of a Microsoft Excel
   spreadsheet, a channel with a topic of that spreadsheet must be
   initiated.

<LI>Make sure that the Microsoft Excel Ignore Remote Requests option is
   not in effect. To turn this option off, choose Workspace from the
   Options menu, and clear the Ignore Remote Requests check box.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
Microsoft Excel "User's Guide 2," version 4.0, Chapters 6 and 7
Microsoft Excel "Function Reference," version 4.0
Microsoft FoxPro for Windows "Language Reference," version 2.5, pages
L3-371 to L3-374, L3-363 to L3-367, and L3-382
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00  FoxWin 2.50 2.5a 2.50a<BR>
KBCategory: kbinterop kbprg kbcode<BR>
KBSubcategory: FxinteropDde<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
