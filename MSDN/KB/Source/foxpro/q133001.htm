

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: SQL SELECT Statement UDF Executes Twice On First Record </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133001">
<META NAME="KBModify" CONTENT="1995/07/31">
<META NAME="KBCreate" CONTENT="1995/07/23">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  A user-defined function (UDF) called as a select item in an SQL SELECT statement executes twice for the first record of the source table.  CAUSE =====  The first iteration of the SQL SELECT statement creates and sizes the columns in the output. The...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QBWS,QAX0,QAWH,QA2Q,QAH4,QAKC,QADP,QAGI,QAG2,QBC6,QAM9,QALX,QAZB,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: SQL SELECT Statement UDF Executes Twice On First Record</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 31, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133001</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, version 2.6a
<LI>Microsoft FoxPro for MS-DOS, version 2.6a
<LI>Microsoft FoxPro for Macintosh, version 2.6a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A user-defined function (UDF) called as a select item in an SQL SELECT
statement executes twice for the first record of the source table.
<P>
<P><h2>CAUSE</h2>
 
<P>
The first iteration of the SQL SELECT statement creates and sizes the
columns in the output. The first iteration therefore executes once to do
this and once to determine what data to return from the first record.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Insert code in the UDF to suppress its execution on the first iteration.
Please see the examples in the More Information section.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a table called SQLUDF.DBF, and add a single numeric field called
   nField1.

<P><LI>Place the values 1, 2, 3, 4, and 5 in the first five records.

<P><LI>Run the following code:
<P>
   * start of SQLUDF.PRG
   *
   * This program selects records from the input table and calculates a
   * running total in the output table by using a UDF.
<P>
<PRE>   nRunningTot = 0        &amp;&amp; initialize running total to 0
   nIterations = 0        &amp;&amp; initialize iteration counter to 0

   SELECT *, Add_Em(nField1) as nRunTotal FROM SQLUDF INTO CURSOR temp
   BROWSE NOWAIT

   PROCEDURE Add_Em
        PARAMETERS tnFld1
           nIterations = nIterations + 1  &amp;&amp; Increment iteration counter

           WAIT WINDOW "Record Number:        "+ALLTRIM(STR(RECNO())) + ;
              CHR(13)+ "Number of Iterations: "+ALLTRIM(STR(nIterations)) ;

              TIMEOUT 1
           nRunningTot=nRunningTot + tnFld1     &amp;&amp; Calculate running total
       RETURN nRunningTot
   ENDPROCEDURE

   *End of SQLUDF.PRG

</PRE></OL><h3>SQLUDF.PRG Notes</h3>
 

<UL><LI>The Record Number displays 1 twice, then it displays 2 through 5.

<LI>The Number of Iterations displays 1 through 6.

<LI>The values placed in the RunTotal field are 2, 4, 7, 11, and 16 for
   records 1 through 5. The values should be 1, 3, 6, 10, and 15.
<P>
</UL><h3>Example Workaround</h3>
 
<P>
The following program is a modification of the above code. It suppresses
the extra calculation for the first iteration of the UDF:
<P>
<PRE>   * start of SQLUDF2.PRG
   *
   * This program sets a logical flag to test for the first iteration of
   * the UDF to suppress getting a sum from the first record twice.
   *

   nRunningTot = 0                   &amp;&amp; initialize running total to 0
   nIterations = 0                   &amp;&amp; initialize iteration counter to 0
   lFirst_Time = .T.         &amp;&amp; initialize 1st time through variable
   SELECT *, Add_Em(nField1) as nRunTotal FROM SQLUDF INTO CURSOR temp
   BROWSE NOWAIT

   PROCEDURE Add_Em
      PARAMETERS tnFld1
      IF lFirst_Time != .T.     &amp;&amp; Only run if not 1st time through
         nIterations=nIterations + 1    &amp;&amp; Increment iteration counter
         WAIT WINDOW "Record Number:        " + ;
            ALLTRIM(STR(RECNO())) + ;

            CHR(13) +"Number of Iterations: " + ALLTRIM(STR(nIterations));
            TIMEOUT 1

            nRunningTot = nRunningTot + tnFld1   &amp;&amp; Calculate running total
       ENDIF
       lFirst_Time=.F.        &amp;&amp; Togggle to .F. on 1st call to UDF
       RETURN nRunningTot

   ENDPROCEDURE

   *End of SQLUDF.PRG

</PRE><h3>Workaround Notes</h3>
 

<UL><LI>The lFirst_Time variable causes the UDF to not create a running total
   when called the first time.

<LI>The Record Number displays 1 through 5.

<LI>The Number of Iterations displays 1 through 5.

<LI>The values placed in the RunTotal field are correct: 1, 3, 6, 10,
   and 15.
<P>
</UL><h3>General Notes</h3>
 

<UL><LI>If record 1 of the source table does not satisfy a WHERE condition, the
   UDF is called once for the first record in spite of the workaround code.

<LI>The overriding emphasis remains that the behavior of UDFs called from
   SQL SELECT statements is unpredictable. Extensive testing should be done
   to ensure that results are as expected. Please see the subheading
   &lt;select_item&gt; under SELECT - SQL in the FoxPro Language Reference for
   more information.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information about a similar behavior of a UDF, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q124402.htm">Q124402</A></B>
   TITLE     : Calling a User-Defined Function (UDF) from SQL SELECT
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 2.60a VFoxWin FoxMac FoxDos FoxWin<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: FxprgSql<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 31, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
