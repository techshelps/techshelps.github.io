

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: GETPEM Function Doesn't Work on Object Contained in Class </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141632">
<META NAME="KBModify" CONTENT="1996/01/24">
<META NAME="KBCreate" CONTENT="1995/12/20">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Using the GETPEM() function to return any property, event, or method from any object contained within a class doesn't work unless that object is a class (other than the object's base class) unto itself.  CAUSE =====  When the GETPEM() function rece...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QBV8,QAO4,QAB9,QBJZ,QAY5,QAW6,QBWS,QABO,QAVX,QAUD,QAHE,QAUR,QA5D V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: GETPEM Function Doesn't Work on Object Contained in Class</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 24, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141632</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0b
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the GETPEM() function to return any property, event, or method from
any object contained within a class doesn't work unless that object is a
class (other than the object's base class) unto itself.
<P>
<P><h2>CAUSE</h2>
 
<P>
When the GETPEM() function receives a class name as its first parameter, it
only retrieves the event and method code associated with this class. It
does not return the program code of any contained object.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To examine the properties, events, or methods of any contained object of a
parent class, use the Class Designer or Class Browser.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The GETPEM() function is new to Microsoft Visual FoxPro version 3.0b.
GETPEM() requires two arguments. The first argument should refer to either
the object or class that contains the property, event, or method. The
second argument should refer to the property, event, or method.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create a new form and place a command button on it. In the Init event of
   the form, add this code:
<P>
   This.Command1.SetFocus

<P><LI>In the Click event of the command button, add this code:
<P>
   ThisForm.Release

<P><LI>On the File menu, click Save as Class. In the Name field, enter pemclass
   and in the File field, enter Test.

<P><LI>Exit the Form Designer. On the Tools menu, click Options, and then click
   the Forms tab. Under Template Classes, select the Form check box and
   locate the Test.vcx file. Highlight it, and click OK. Click the OK
   button on the Options page to save the change.

<P><LI>Create a new form, and note that the pemclass is now the template.
   Without making any changes, save the form as pemform. Then close it, and
   use the DO FORM command to run the form.

<P><LI>On the Tools menu, click Debug Window. Resize it so that there is
   sufficient area on both sides.

<P><LI>In the left side of the Debug window, type:
<P>
   GETPEM("pemclass","init")
<P>
   On the right side of the Debug window, the following should be
   displayed:
<P>
   This.Command1.SetFocus
<P>
</OL>NOTE: When trying to see the code under the Click event of the command
button, you must realize that the Click event belongs to the command
button. Therefore, you are not able to use pemclass as the left side of the
argument in the GETPEM() function. The only way to get to the command
button is to use object referencing from the top down. In the left side of
the Debug window, type:
<P>
<PRE>   GETPEM(_Screen.ActiveForm.Command1,"Click")

</PRE></OL>On the right side of the Debug window, you will see "", but you know there
is a ThisForm.Release command. Because the command was put in at the class
level, the only thing that is returned with the GETPEM() function is the
code that was inserted at the object (or form) level, which is a null
string.
<P>
There is no syntax that can be used with the GETPEM() function that can
return the ThisForm.Release code from the Click event of the command button
in the above example. However, if a class were created based on the command
button (for example, mybutton) and the Click event at that class level
contained code, then it would be possible to use this:
<P>
<PRE>   GETPEM("mybutton","click")
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00b VFoxWin<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 24, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
