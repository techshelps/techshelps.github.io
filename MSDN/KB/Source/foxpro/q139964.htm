

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: How to List Directories on Entire Drive </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139964">
<META NAME="KBModify" CONTENT="1996/01/20">
<META NAME="KBCreate" CONTENT="1995/11/20">
<META NAME="Keywords" CONTENT="kbprg kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article provides a sample program that builds a directory listing by using the outline control. It displays directory names and directory sizes in hierarchical order.  MORE INFORMATION  This program creates a form that contains an outline cont...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFI,QBXB,QATJ,QBCF,QAPN,QAIB,QBCE,QAM3,QA7O,QAOE,QAMN,QAGB,QAB5,QAB9,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: How to List Directories on Entire Drive</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 20, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139964</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides a sample program that builds a directory listing by
using the outline control. It displays directory names and directory sizes
in hierarchical order.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This program creates a form that contains an outline control. You can copy
and paste the following code into a program (.prg file) to run it. The
following methods are essential to the program.
<P>
<P><h3>The Fillit Method</h3>
 
<P>
This method of the form builds the root of the directory tree. It also
calls the Fill method.
<P>
<P><h3>The Fill Method</h3>
 
<P>
This method fills the directory tree with directory names and sizes. It
accepts the directory name as a parameter and uses the ADIR() function to
place directory information into an array. This method is first executed
for the root. A recursive call to the Fill method is then executed for each
level of subdirectory. The tree is complete when all of the elements of the
array have been processed.
<P>
<P><h3>The Recalc Method</h3>
 
<P>
The directory listing displays the name and the size of each directory.
When an item is expanded and its subordinates become visible, the Recalc
method subtracts the size of each sub-directory from the size of the parent
directory.
<P>
<P><h3>Sample Program</h3>
 
<P>
*:*************************************************************************
*:
*: Procedure File C:\VFP\TESTOLE.PRG
*:
*: Documented using Visual FoxPro Formatting wizard version  .03
*:*************************************************************************
*:   TESTOLE
CLEAR
PUBLIC ocDir
ocDir = CREATEOBJECT("CDir")
ocDir.Show
ocDir.Fillit("c:\")
<P>
DEFINE CLASS CDir AS FORM
<PRE>   Caption = "Directories"
   Height = 2* SYSMETRIC(2) / 3
   nLevel = 0
   ADD OBJECT cmdQuit AS COMMANDBUTTON WITH ;
      CAPTION = "Quit",;
      CANCEL = .T.
   ADD OBJECT ole1 AS COutline
   PROCEDURE INIT
      THIS.ole1.Width = THIS.Width
      * Dimensions the outline to the size of the form
      THIS.ole1.Height = THIS.Height - THIS.ole1.Top

   PROCEDURE Fillit(cRoot)    &amp;&amp; Builds the start of the directory tree
      LOCAL Totsize
      IF RIGHT(cRoot,1) # '\'
        cRoot = cRoot + '\'
      ENDIF
      THIS.ole1.Visible = .F.
      THIS.ole1.AddItem(cRoot)    &amp;&amp; Adds the root to the outline control
      THIS.ole1.Indent[0] = 0
      * Defines the root to the outline control
      TotSize = THIS.Fill(cRoot)  &amp;&amp; Method that fills the tree
      THIS.ole1.List[0] = THIS.ole1.LIST[0] + ' : ' +  ;
         LTRIM(TRANSFORM(Totsize,"999,999,999"))
      THIS.ole1.Itemdata[0] = TotSize
      THIS.ole1.Visible = .T. &amp;&amp; Displays the control

   PROCEDURE FILL(cRoot) &amp;&amp; Fills the directory tree
      LOCAL nNumbofFiles,I, acDirAll[1,1],nCumSize,nSize,nCount,Here
      nCumSize = 0
      nSize = 0
      THIS.nLevel = THIS.nLevel + 1
      * Places information into an array
      nNumbofFiles = ADIR(acDirAll,cRoot + "*.*","D")
      =ASORT(acDirAll)
      FOR I = 1 TO nNumbofFiles
         IF "D" $ acDirAll[i,5]   &amp;&amp; Finds all the directories
            IF LEFT(acDirAll[i,1],1) != '.'
               THIS.ole1.ADDITEM(LOWER(acDirAll[i,1]))
               Here = THIS.ole1.LISTCOUNT - 1
               THIS.ole1.Indent[Here] = THIS.nLevel &amp;&amp;Indents the directory
               nSize = THIS.FILL(cRoot + acDirAll[i,1] + '\')
               * Fills the directory
               THIS.ole1.LIST[Here] = THIS.ole1.LIST[Here] + ' : ' +;
                  LTRIM(TRANSFORM(nSize,"999,999,999"))
               THIS.ole1.ITEMDATA[Here] = nSize
               nCumSize = nCumSize + nSize
            ENDIF
         ENDIF
         IF THIS.nLevel = 1
            THIS.ole1.nRootSize = THIS.ole1.nRootSize + acDirAll[i,2]
         ENDIF
         nCumSize = nCumSize + acDirAll[i,2]
      ENDFOR
      THIS.nLevel = THIS.nLevel - 1
      RETURN nCumSize

   PROCEDURE cmdQuit.CLICK &amp;&amp;Quit method for the Command Button
      THISFORM.RELEASE
      RELEASE WINDOW TRACE
      RELEASE WINDOW DEBUG
</PRE>ENDDEFINE
<P>
DEFINE CLASS COutline AS OLECONTROL
<PRE>   OleClass = "MSOutl.Outline"
   Top = 20
   nRootSize = 0

   PROCEDURE ReCalc(nList) &amp;&amp; Adjusts the size of the directory
      LOCAL N,MyLevel,nSize,j,cDirName,nStart,nstartlev
      nStart = nList
      nStartlev = THIS.Indent[nList]
      MyLevel = THIS.Indent[nList]
      nSize = THIS.ITEMDATA[nlist]
      j = nList + 1
      DO WHILE j &lt; THIS.LISTCOUNT AND THIS.Indent[j] &gt; MyLevel
         IF THIS.IsItemVisible[j]
            nSize = nSize - THIS.ITEMDATA[j]
         ENDIF
         j = j + 1
      ENDDO
      cDirName = THIS.LIST[nlist]
      IF  VAL(STRTRAN(SUBSTR(cDirName,AT(':',cDirName)+2),",")) # nSize
         THIS.LIST[nList] = ;
            LEFT(THIS.LIST[nList],AT(':',THIS.LIST[nList])) + ' ' +;
            LTRIM(TRANSFORM(nSize,"999,999,999"))
      ENDIF
      nList = nStart
      DO WHILE .T.
         nList = nList + 1
         IF nList = THIS.ListCount OR THIS.Indent[nList] &lt;= nStartlev
            EXIT
         ELSE
            THIS.Recalc(nList)
         ENDIF
      ENDDO

   PROCEDURE Expand(nList)
      THIS.Object.MousePointer = 11
      THIS.PictureType[nList] = 1
      THIS.Recalc(nList)
      * Recalculates the size of each directory when the item is clicked
      THIS.Object.MousePointer = 0

   PROCEDURE Collapse(nList) &amp;&amp; Collapses an element
      LOCAL nSize
      THIS.Object.MousePointer = 11
      THIS.PictureType[nList] = 0
      cDirName = THIS.List[nlist]
      nSize = THIS.ItemData[nList]
      IF  VAL(STRTRAN(SUBSTR(cDirName,AT(':',cDirName)+2),",")) # nSize
         THIS.List[nList] =  ;
         LEFT(THIS.LIST[nList],AT(':',THIS.LIST[nList])) + ' ' +;
            LTRIM(TRANSFORM(nSize,"999,999,999"))
      ENDIF
      ni=nList+1
      DO WHILE THIS.Indent(ni)&gt;THIS.Indent(nList)
      * Closes the folder when it is collapsed
         IF THIS.PictureType(ni)=1
           THIS.PictureType(ni)=0  &amp;&amp;Folder looks closed
         ENDIF
         ni=ni+1
      ENDDO
      THIS.OBJECT.MOUSEPOINTER = 0
</PRE>ENDDEFINE
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the outline control, search for "Outline
Control" in the Visual FoxPro Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin ocx<BR>
KBCategory: kbprg kbcode kbhowto<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 20, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
