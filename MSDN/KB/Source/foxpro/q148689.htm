

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Parse Config.fpw Programmatically </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148689">
<META NAME="KBModify" CONTENT="1996/03/27">
<META NAME="KBCreate" CONTENT="1996/03/19">
<META NAME="Keywords" CONTENT="kbenv kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article shows by example how to parse through a text file programmatically. This example uses Config.fpw. The code searches for a specific entry, and then it modifies the entry if it is found or adds it if not found.  You might want to use thi...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA6A,QABC,QAK9,QDKI,QAHD,QBVV,QBWA,QAPF,QAI4,QAH4,QBXR,QAPN,QAGX,QADX,QBRZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Parse Config.fpw Programmatically</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 27, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148689</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0 and 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to parse through a text file
programmatically. This example uses Config.fpw. The code searches for a
specific entry, and then it modifies the entry if it is found or adds it if
not found.
<P>
You might want to use this technique in distributed applications, for
example, to control the operating environment.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This code example checks to determine if the Visual FoxPro system variable
MVCOUNT is less than 2000. If follows this process:

<OL><P><LI>Open or Create the Config.fpw file as applicable,

<P><LI>Search through the Config.fpw file for the MVCOUNT= entry.
<P>
   a. If it finds an entry, it modifies it to read MVCOUNT=2000.
<P>
   b. If it doesn't find an entry, it creates one.

<P><LI>Write the modified file contents back to disk, and close the file.
<P>
</OL><h3>Code Sample</h3>
 
<P>
* Parsefpw.prg
* ------------
* To make this backward compatible to FoxPro 2.x, replace the MESSAGEBOX()
* functions with WAIT WINDOWs
*
<PRE>cNewLine   = "MVCOUNT=2000"+CHR(13)      &amp;&amp; This is the line to change/add
nUpdateStat = 0                          &amp;&amp; Use to determine which message
</PRE></OL>cVFPConfigLoc = SYS(2019)
<PRE>nFileHand   = FOPEN(cVFPConfigLoc, 2)    &amp;&amp; open with read/write privileges
IF nFileHand == -1                       &amp;&amp; Can't find Config.fpw
  nFileHand = FCREATE(cVFPConfigLoc, 0)  &amp;&amp; Create an Config.fpw
  IF nFileHand == -1                     &amp;&amp; Can't create Config.fpw
    = FCLOSE(nFileHand)
    nUpdateStat = 1                      &amp;&amp; Not existing, Cannot Create
  ELSE
    = FWRITE(nFileHand, cNewLine)
    = FCLOSE(nFileHand)
    nUpdateStat = 2                      &amp;&amp; Not existing, Did Create
  ENDIF
</PRE>ELSE
<PRE>  filesize = FSEEK(nFileHand, 0, 2)
  = FSEEK(nFileHand, 0, 0)               &amp;&amp; position file pointer to BOF
  contents = FREAD(nFileHand, filesize)
  spos = RAT("MVCOUNT", UPPER(contents)) &amp;&amp; from right to find last
</PRE>MVCOUNT
<P>
<PRE>  IF spos &lt;&gt; 0                           &amp;&amp; Contains "MVCOUNT" entry
    * len = length (for example, len=20+1=21 for "MVCOUNT = 30 ")
    * len = AT(CHR(13)+CHR(10), SUBSTR(contents, spos)) - 1 &amp;&amp; w/o CR &amp; LF
    len = AT(CHR(13)+CHR(10), SUBSTR(contents, spos)) + 1 &amp;&amp; with CR &amp; LF
    IF LEN = 0
      LEN = LEN(SUBSTR(contents, spos))
    ENDIF
  ELSE                                   &amp;&amp; "MVCOUNT" Not there, append it
    LEN = AT(CHR(26), contents)          &amp;&amp; CHR(26) = Escape = EOF marker
    IF LEN &lt;&gt; 0
      contents = LEFT(contents, LEN - 1)
      LEN = 0
    ENDIF
    spos = RAT(CHR(13)+CHR(10), contents, ;
    IIF(RIGHT(contents, 2) &lt;&gt; CHR(13)+CHR(10), 1, 2))
    spos = spos + IIF(spos = 0, 1, 2)
  ENDIF
  contents = STUFF(contents, spos, LEN, cNewLine)
  = FSEEK(nFileHand, 0, 0)
  = FWRITE(nFileHand, contents)
  = FCHSIZE(nFileHand, LEN(contents))
  = FCLOSE(nFileHand)
  nUpdateStat = 3                           &amp;&amp; Did exist, Modified
</PRE>ENDIF
?? CHR(7)
cMsg1 = "A file named Config.fpw must exist in &lt;YourApp&gt;"+CHR(13);
<PRE>       +"startup directory. This file must contain an
</PRE>MVCOUNT=2000"+CHR(13);
<PRE>       +"statement in order for the &lt;YourApp&gt; application to
</PRE>operate"+CHR(13);
<PRE>       +"correctly."+CHR(13)+CHR(13)
</PRE>DO CASE
CASE nUpdateStat = 1 &amp;&amp; Not existing, Cannot Create
<PRE>  =MESSAGEBOX(cMsg1+;
    +"The computer system could not find this file nor could it"+CHR(13);
    +"create one. Until one exists, &lt;YourApp&gt; cannot be used.",0)
</PRE>CASE nUpdateStat = 2 &amp;&amp; Not existing, Did Create
<PRE>  =MESSAGEBOX(cMsg1+;
    +"The &lt;YourApp&gt; startup directory did not include this"+CHR(13);
    +"file so one was created for you. The new Config.fpw file"+CHR(13);
    +"contains all the required settings for the &lt;YourApp&gt;"+CHR(13);
    +"application to run."+CHR(13)+CHR(13);
    +"In order to activate this statement you need to RESTART the"+CHR(13);
    +"&lt;YourApp&gt; application.",0)
</PRE>CASE nUpdateStat = 3 &amp;&amp; Did exist, Modified
<PRE>  =MESSAGEBOX(cMsg1+;
    +"Your existing Config.fpw file has now been modified to
</PRE>contain"+CHR(13);
<PRE>    +"an MVCOUNT=2000 statement. To activate this statement you
</PRE>need"+CHR(13);
<PRE>    +"to RESTART the &lt;YourApp&gt; application.",0)
</PRE>ENDCASE
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.00b VFoxWin<BR>
KBCategory: kbenv kbhowto kbcode<BR>
KBSubcategory: FxenvAutoexec
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 27, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
