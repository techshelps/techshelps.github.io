

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appending from a Delimited ASCII File Using Low-Level I/O </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115418">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/05/25">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When you are importing data from other applications into FoxPro, a delimited ASCII file is often used. However, if any of the data columns from the original database extend beyond 255 characters, any text beyond this point will be cut off. Text lon...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBRZ,QA7N,QA7O,QAGX,QAY2,QAVK,QAYY,QAMB,QAUD,QA3P,QAY4,QAEF,QALW,QAI4,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Appending from a Delimited ASCII File Using Low-Level I/O</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115418</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Macintosh, versions 2.5b, 2.5c
<LI>Microsoft FoxPro for MS-DOS, versions 2.5, 2.5a, 2.5b, 2.6
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, 2.6
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you are importing data from other applications into FoxPro, a
delimited ASCII file is often used. However, if any of the data columns
from the original database extend beyond 255 characters, any text beyond
this point will be cut off. Text longer than 255 characters should be
stored in a FoxPro memo field. However, the APPEND FROM command does not
move data into memo fields.
<P>
To work around this behavior, you can use the low-level file I/O functions
in FoxPro to programmatically move the data from the text file into the
database including the memo field. A sample program for doing this is
provided below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The program below is provided as an example of a FoxPro program that
employs low-level file I/O to append data from a delimited text file into
character and memo fields. For purposes of this article, the input text
file contains three character fields. The third field is to be placed in a
memo field and might contain embedded carriage returns.
<P>
A sample delimited text file might be constructed as follows:
<P>
<PRE>   "FRED","FLINTSTONE","A movie about Barney and Betty"
   "RENO","RAINES","The Renegade"

</PRE>The following program will add this data to the database:
<P>
<PRE>   *MYMEMO.PRG
   m.numchars=0
   m.end=.F.
   m.bytestoend=0
   IF USED("mymemo")
      SELECT mymemo
   ELSE
      IF FILE("mymemo.dbf")
         USE mymemo IN 0
         SELECT mymemo
      ELSE
         CREATE TABLE mymemo (first C(10), LAST C(15), details m(10))
      ENDIF
   ENDIF
   H=FOPEN("mymemo.txt",10)
   IF ! H&lt;0
      m.totalchars=FSEEK(H,0,2)  &amp;&amp; how many characters in file?
      =FSEEK(H,0,0)              &amp;&amp; go back to start

      DO WHILE (! EOF(H) ) AND (! m.end)
         m.first=""
         m.last=""
         m.details=""
         FOR m.numfields = 1 TO 3
            DO CASE
               CASE m.numfields=1
                  m.field="m.first"
               CASE m.numfields=2
                  m.field="m.last"
               CASE m.numfields=3
                  m.field="m.details"
            ENDCASE
            m.numquotes=0
            DO WHILE m.numquotes &lt; 2 AND (! m.end)
               in_char=FREAD(H,1)
               DO CASE
                  CASE in_char=["]
                     m.numquotes=m.numquotes+1
                  CASE m.numquotes=1 AND ;
                   (ASC(in_char)=32 OR (ASC(UPPER(in_char))&gt;64 ;
                   AND ASC(UPPER(in_char))&lt;91))
                     STORE EVALUATE(m.field)+m.in_char TO (m.field)
               ENDCASE
               m.numchars=m.numchars+1
               IF m.numchars = m.totalchars   &amp;&amp; are we at the end?
                  m.end=.T.                   &amp;&amp; set our own EOF marker
               ENDIF
            ENDDO
         ENDFOR
         APPEND BLANK
         GATHER MEMVAR MEMO
      ENDDO
      =FCLOSE(H)
   ENDIF

</PRE>For information about using low-level file commands to export data to a
delimited ASCII file, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q95722.htm">Q95722</A></B>
   TITLE     : How to Export Memo Fields to an ASCII File
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00  FoxMac FoxDos FoxWin 2.50 2.50a<BR>
2.50b 2.60<BR>
2.50c<BR>
import<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
