

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error with FILTER or WHERE Including This or Thisform </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163185">
<META NAME="KBModify" CONTENT="1997/02/05">
<META NAME="KBCreate" CONTENT="1997/02/05">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Upon browsing or skipping through a table with a filter condition set, or through a cursor created with SQL SELECT and a WHERE condition, you may see one of several errors:     Object is not contained in a FORM.     -or-     Object is not contained...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QA5V,QAW6,QAMB,QAH4,QBXS,QAAP,QAB4,QAO2,QAKJ,QA2Q,QAPF,QAEF,QAEB,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error with FILTER or WHERE Including This or Thisform</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163185</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Upon browsing or skipping through a table with a filter condition set, or
through a cursor created with SQL SELECT and a WHERE condition, you may see
one of several errors:
<P>
<PRE>   Object is not contained in a FORM.

   -or-

   Object is not contained in a FORMSET.

   -or-

   THIS can only be used within a method.

   -or-

   THISFORM can only be used within a method.

   -or-

   Property &lt;form or formset property holding filter value&gt; is not found.

</PRE><h2>CAUSE</h2>
 
<P>
These errors are caused by the record pointer being moved or the table
being browsed outside of the object where the FILTER or WHERE condition has
been stored in a form or object property. Regardless of where the FILTER
condition is set, or how the record pointer is being moved, the FILTER
condition is reevaluated each time the record pointer is moved. If the
table or cursor is being accessed outside the form or other object where
THISFORM.&lt;property&gt; or THIS.&lt;property&gt; is a valid reference, one of these
errors occurs.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To prevent these errors, use macro substitution, or store or reference the
FILTER or WHERE condition in a manner where it is always a valid reference.
<P>
You can do this in several ways:

<UL><LI>Set the FILTER condition with macro substitution, for example:
<P>
<P><PRE>      THISFORM.cfilterstring = "cust_id = 'A'"
      lcFilterstring = THISFORM.cfilterstring
      SET FILTER TO &amp;lcFilterstring
</PRE>
<LI>Store the FILTER condition to a public variable, for example:
<P>
<P><PRE>      PUBLIC gcFilterString
      gcFilterString = "cust_id = 'A'"
      SET FILTER TO (gcFilterString)
</PRE>
<LI>Store the FILTER condition in a property of an object with a reference
   in a public variable. There is an example of this below in MORE
   INFORMATION.

<LI>If the error is caused by a WHERE condition in a cursor created with
   SELECT - SQL, the NOFILTER keyword may be used in Visual FoxPro 5.0 to
   force a temporary table to be used, rather than a filtered subset of the
   full table. Here, the WHERE is never reevaluated after the SELECT is
   executed, for example:
<P>
<P><PRE>      SELECT * FROM customer WHERE cust_id = "A" ;
<PRE></PRE>        INTO CURSOR custcursor NOFILTER

   In Visual FoxPro 3.0, this can be forced by adding a calculated field to
   the SELECT, such as the following:

      SELECT *, SPACE(1) FROM customer WHERE cust_id = "A" ;
         INTO CURSOR custcursor

</PRE></UL><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Within a particular object or form references can be made, within that
object's code, to the object itself or the form or formset containing it,
with THIS, THISFORM, or THISFORMSET. These references are valid only within
code that is contained within these objects or their members. Because of
the nature of SET FILTER or a SELECT - SQL WHERE condition (when the
returned records are a filtered set of records), when either of these is
the case the FILTER or WHERE condition must contain references that are
always valid.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Run the following code from a program (.prg) file:
<P>
<P><PRE>      * Beginning of code example
      *
      PUBLIC oNavClass, oform
      oNavClass=CREATEOBJECT('navclass')
      oform=CREATEOBJECT("form1")
      oform.SHOW
</PRE><P>
<P><PRE>      DEFINE CLASS navclass AS CUSTOM
<PRE></PRE>         * This class does skipping and browsing in currently
         *  selected table
         cfilterstring = ""

         PROCEDURE DoBrowse
            BROWSE NOWAIT
         ENDPROC

         PROCEDURE DoSkip
            LPARAMETER ndirection
            SKIP (ndirection)
            IF EOF()
               GO BOTTOM
            ENDIF
            IF BOF()
               GO TOP
            ENDIF
         ENDPROC
      ENDDEFINE

      DEFINE CLASS form1 AS FORM
         cfilterstring = ""
         AUTOCENTER = .T.
         HEIGHT = 200
         WIDTH = 300
         CAPTION = "Form1"
         NAME = "FORM1"

         ADD OBJECT combo1 AS COMBOBOX WITH ;
            HEIGHT = 24, ;
            LEFT = 12, ;
            STYLE = 2, ;
            TOP = 72, ;
            WIDTH = 100, ;
            NAME = "Combo1", ;
            ROWSOURCE = "SELECT DISTINCT SUBSTR(cust_id,1,1) ;
               FROM customer ORDER BY 1 INTO CURSOR curTemp", ;
            ROWSOURCETYPE = 3

         ADD OBJECT command1 AS COMMANDBUTTON WITH ;
            TOP = 120, ;
            LEFT = 60, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Skip", ;
            NAME = "Command1"

         ADD OBJECT text1 AS TEXTBOX WITH ;
            CONTROLSOURCE = "customer.cust_id", ;
            HEIGHT = 23, ;
            LEFT = 180, ;
            TOP = 72, ;
            WIDTH = 100, ;
            NAME = "Text1"

         ADD OBJECT command2 AS COMMANDBUTTON WITH ;
            TOP = 120, ;
            LEFT = 168, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Skip -1", ;
            NAME = "Command2"

         ADD OBJECT command3 AS COMMANDBUTTON WITH ;
            TOP = 170, ;
            LEFT = 110, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Browse", ;
            NAME = "Command3"

         PROCEDURE LOAD
            USE HOME()+'samples\data\customer'
         ENDPROC

         PROCEDURE UNLOAD
            SET FILTER TO
            USE IN customer
            RELEASE oNavClass
         ENDPROC

         PROCEDURE combo1.INIT
            THIS.VALUE = THIS.LIST(1)
         ENDPROC

         PROCEDURE combo1.VALID
            THISFORM.cfilterstring = "cust_id = '"+THIS.VALUE+"'"
            SET FILTER TO EVAL(THISFORM.cfilterstring)

            * Comment out above 2 lines and remove comments from lines
            *   below to demonstrate workaround. ONavClass is public
            *   and its properties will always be in scope

            * oNavClass.cfilterstring = 'cust_id = "'+THIS.VALUE+'"'
            * SET FILTER TO EVAL(oNavClass.cfilterstring)
            GO BOTTOM
            GO TOP
            THISFORM.REFRESH
         ENDPROC

         PROCEDURE command1.CLICK
            oNavClass.DoSkip(1)
            THISFORM.REFRESH
         ENDPROC

         PROCEDURE command2.CLICK
            oNavClass.DoSkip(-1)
            THISFORM.REFRESH
         ENDPROC

         PROCEDURE command3.CLICK
            oNavClass.DoBrowse
         ENDPROC

      ENDDEFINE
      *
      * End of code example

</PRE><P><LI>A form appears. Make a selection from the drop-down list. The first
   record matching the condition is displayed in the text box.

<P><LI>Press any of the three command buttons to navigate through the records
   or browse the filtered list. The following error occurs:
<P>
<P><PRE>      Object is not contained in a FORM.
</PRE>
<P><LI>Ignore the error, close the form, and edit the .prg file. As noted in
   the comments within the combo1.VALID procedure, comment out the lines
   storing the filter condition as a property of the form, and uncomment
   the lines storing the filter condition into a property of oNavClass.

<P><LI>Rerun the form, repeat steps 2 and 3 above, and no error will occur.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Visual FoxPro 5.0 Help File
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: FxprgBrowse FxprgClassoop FxprgTable FxprgSet FxprgToolbar<BR>
FxprgSql FxtoolFormdes vfoxwin<BR>
Additional reference words: 3.00 3.00b 5.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
