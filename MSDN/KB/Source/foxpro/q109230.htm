

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a List or Popup of Available Volume Names </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109230">
<META NAME="KBModify" CONTENT="1996/06/04">
<META NAME="KBCreate" CONTENT="1993/12/28">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  In an application distributed to many users, who each have their own schemes for partitioning their hard disks and connecting to various network servers, you may find it useful to produce a list or popup of the available volumes. Below are several ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA7T,QAE1,QAB9,QAPN,QA59,QAAF,QACI,QDO9,QAW6,QAUJ,QBXS,QBXR,QAX6,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create a List or Popup of Available Volume Names</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 4, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109230</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Macintosh, version 3.0b
<LI>Microsoft FoxPro for Macintosh, version 2.5b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In an application distributed to many users, who each have their own
schemes for partitioning their hard disks and connecting to various network
servers, you may find it useful to produce a list or popup of the available
volumes. Below are several code samples showing how to create such an
object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
You can manually create a popup (the kind controlled by a READ command) by
incorporating the following code into a program:
<P>
<PRE>   * Load FoxTools
   IF !'FOXTOOLS'$SET('LIBRARY')
     SET LIBRARY TO FOXTOOLS ADDITIVE
   ENDIF

   * Get the name of the boot volume
   sysDrive = JustDrive(FXSystem(0))

   * Remove the trailing colon
   sysDrive = LEFT(sysDrive, LEN(sysDrive) -1)

   * Create a popup containing all the volumes to which the Mac is
   * currently connected. The boot volume, the one containing the active
   * System Folder, is the default choice. Note the space after the caret
   * in the PICTURE clause.
   @1,1 GET m.volPop PICTURE '@^ ' + FXVolume() DEFAULT sysDrive
   READ  &amp;&amp; Activate the list object

</PRE>NOTE: Replace the row and column coordinates of the popup with ones that
reflect the desired position of the object. For more information about the
@ ... GET LIST command, see the FoxPro "Language Reference."
<P>
To create the same kind of popup or list using the Screen Builder, use the
following code, which builds an array of volume names that can be used as
the basis for a popup or list. You can place this procedure in the Cleanup
and Procedures code snippet of a screen.
<P>
<PRE>   PROCEDURE AVol
   * Procedure to create an array of available volumes.
   * The parameter must be passed by reference. When the procedure is
   * finished, the parameter will contain an array of the available
   * volumes.
   PARAMETER a_Volume

   IF PARAMETERS() &lt; 1
     WAIT WINDOW 'Usage: =AVOL(@&lt;expC&gt;)' NOWAIT
     RETURN 0
   ENDIF

   *Open FoxTools if necessary
   IF !'FOXTOOLS'$SET('LIBRARY')
     SET LIBRARY TO FOXTOOLS ADDITIVE
   ENDIF

   * Get a semicolon-delimited list of available volumes
   volList=FXVolume()

   * Get the number of volumes in the list
   numVols = Words(volList,';')

   * Dimension the array to hold the volume names
   DIMENSION a_Volume(numVols)

   * Parse the list of volumes and stuff each value into its own array
   * element
   FOR i = 1 TO numVols
     a_Volume[i] = WordNum(volList, i, ';')
   ENDFOR

   RETURN numVols

   * END OF PROCEDURE AVol

</PRE>To create the array for use by a popup or list object created in the
FoxPro for Macintosh Screen Builder, initialize a variable and call
procedure AVol in the Setup code snippet of the screen. For example:
<P>
<PRE>   * Place the following in the SETUP code snippet of a screen
   theVols = ''
   volCount = AVol(@theVols)

</PRE>In the Popup or List dialog box, specify theVols as the array that supplies
the popup or list with data. For more information about creating popups and
lists in the Screen Builder from an array, see the FoxPro "Developer's
Guide." You can use a similar procedure in Visual FoxPro for Macintosh
version 3.0b, by using properties specific to the listbox object in the
Form Designer.
<P>
For more information about the FoxTools functions used in this example, see
the FoxTools README file located in the FOXPRO:GOODIES:MISC folder. This
file contains a complete listing of all the functions in the FoxTools
function library.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: vFoxMac 3.00b FoxMac 2.50b FXVOLUME listbox pop-<BR>
up list box<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 4, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
