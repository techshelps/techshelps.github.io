

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Updated Readme.txt file for FoxIsapi Sample for Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158839">
<META NAME="KBModify" CONTENT="1996/11/07">
<META NAME="KBCreate" CONTENT="1996/11/06">
<META NAME="Keywords" CONTENT="kbusage kbinterop kbole kbreadme kbsetup kbtool kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The FoxIsapi sample demonstrates how you can take Visual FoxPro forms and deploy them over the Internet or an intranet.  NOTE: This sample code is provided to show the capabilities and flexibility of Visual FoxPro as an OLE Automation Server. Any m...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAH4,QBWA,QAA1,QAFI,QAPF,QDNQ,QAY2,QBWS,QA56,QA55,QA9Q,QAUD,QAGU,QDL9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Updated Readme.txt file for FoxIsapi Sample for Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 7, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158839</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The FoxIsapi sample demonstrates how you can take Visual FoxPro forms and
deploy them over the Internet or an intranet.
<P>
NOTE: This sample code is provided to show the capabilities and flexibility
of Visual FoxPro as an OLE Automation Server. Any modification made to this
code will not be supported.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In the FoxIsapi sample the main class library is named Isapi.vcx. In this
library the Employee class inherits the ability to generate HTML code from
the base class ISFORM. The ability to generate the HTML code gives you a
way to display data or forms in a Web page on the Internet. It also gives
you a way to deploy an easy-to-maintain application on four different
platforms:

<OL><P><LI>Use the following code to run the application from within Visual FoxPro:
<P>
<P><PRE>      SET CLASSLIB TO isapi
      ox = CreateObject("employee")
      ox.show
</PRE>
<P><LI>Use the following code to run the application as an independent
   executable:
<P>
<P><PRE>      BUILD EXE foxis FROM foxis
</PRE><P>
   This creates a Foxis.exe file, which is a Windows program that can be
   added to the Start menu, started from the Explorer, and so forth.

<P><LI>Use the following code to run the application as an OLE Server from any
   OLE client (Excel, Word, Visual Basic, Visual FoxPro 3.0, and so forth):
<P>
<P><PRE>      ox = CreateObject("foxis.employee")
      ox.show
</PRE>
<P><LI>Use the following code to run the application an Internet Browser, which
   could be on another machine, such as a 286 running MS-DOS, a UNIX
   machine, a Macintosh, or a Personal Digital Assistant.
<P>
</OL><h3>Requirements</h3>
 
<P>
This sample is supported only on Windows NT 3.51 Server with Service Pack 4
or Windows NT 4.0 Server release 1.0 or higher running Microsoft's Internet
Information Server (IIS). IIS is included with Windows NT 4.0 Server, and
may be added to Windows NT 3.51 Server. During the fourth quarter of 1996,
and possibly longer, you can download, free, Microsoft's IIS version 1.0 at
<B><A HREF="http://www.microsoft.com/windows/common/IISArchive.htm">http://www.microsoft.com/windows/common/IISArchive.htm.</A></B>
<P>
The Windows NT Server and IIS should be configured and working properly
before running this sample.
<P>
If you are using a machine that's running Windows NT 4.0, you have to
configure the DCOMCNFG utility to grant rights to the Web service to
instantiate an OLE object. For example, if your machine name is Mymach, you
have to add \Mymach\Iusr_mymach as a user with full rights for "Default
Access Permissions," "Default Launch Permissions."
<P>
NOTE: If you are using Windows NT 4.0 you must follow the steps in the
following article in the Microsoft Knowledge Base before proceeding to the
next step:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q158838.htm">Q158838</A></B>
   TITLE     : How To Setup the FoxIsapi Sample on Windows NT 4.0

</PRE></OL><h3>Setup of FoxIsapi</h3>
 
<P>
The steps below assume that you have not installed Visual FoxPro on your
Windows NT IIS server. These steps get the OLE server working on a
development machine and then use the Setup Wizard to distribute the files
to your server.
<P>
To get things started, you need to follow all of the steps below:

<OL><P><LI>Copy Testdata.dbc, Testdata.dct, and Testdata,dcx and all of the
   associated files (Customer.*, Employee.*, Orders.*, Orditems.*, and
   Products.*) from the Vfp\Samples\Data directory into the
   Vfp\Samples\Servers\Foxisapi directory.

<P><LI>From the \Vfp\Samples\Servers\Foxisapi folder, open the Foxis project
   and change the user-defined property "cScriptDir" of the EMPLOYEE form
   in the class library, Isapi.vcx, to point to the
   &lt;driveletter&gt;:\Vfp\Samples\Servers\Foxisapi directory.
<P>
   This is a temporary setting for testing purposes. Later on, you
   will change it to the Inetsrv\Scripts folder when you have the final
   build.

<P><LI>Build the .exe file with the name Foxis. Once the initial build is
   complete, change the server option to be "Multi Use" by selecting from
   the menu "Project/Project Info." Click the Servers tab and change
   Instancing to Multi Use. Once this is done, build the .exe file again.

<P><LI>Test if the OLE Automation Server works by issuing the following
   commands from the Command window:
<P>
<P><PRE>      ox= CreateObject("foxis.employee")
<PRE></PRE>      ox.show           &amp;&amp; see if it works as a custom server
      ?ox.startup()     &amp;&amp; see if it returns HTML

   It is much easier to debug OLE Automation servers from an OLE client
   (like Visual FoxPro) before instantiating it in Foxisapi.

   If the Server worked, you are ready to make the distribution build.

</PRE><P><LI>Edit the EMPLOYEE form class in Isapi.vcx again and change the
   cScriptDir property to be the Inetsrv\Scripts directory on the Windows
   NT server. Be sure to include the drive letter of the actual physical
   hard drive, not a drive mapping from the workstation.
<P>
   (If your Internet Server is running on Windows NT 4.0, the path is
   to &lt;drive&gt;:\Windows\System32\Inetsrv\Scripts, or wherever the \Scripts
   folder is located.)

<P><LI>Create a folder under FoxIsapi called "Final." Rebuild the project one
   last time, this time pointing the Foxis.exe to the Final folder. You
   should see three files in this folder:
<P>
<P><PRE>      Foxis.exe
      Foxis.tlb
      Foxis.vbr
</PRE>
<P><LI>From the FoxIsapi folder copy the following files into the Final folder:
<P>
<P><PRE>      Testdata.dbc
      Testdata.dct
      Testdata.dcx
      Customer.dbf
      Customer.cdx
      Employee.dbf
      Employee.fpt
      Employee.cdx
      Orders.dbf
      Orders.cdx
      Orditems.dbf
      Orditems.cdx
      Products.dbf
      Products.cdx
      Html.dbf
      Html.cdx
      Html.fpt
      Foxisapi.dll
      *.gif  -  (These are .gif files containing photos for each employee.)
</PRE>
<P><LI>Run the Setup Wizard and point it to the Final folder. Make sure you
</OL>check the OLE Server check box in Setup Wizard step 2 and select the
Foxis.exe in the Final folder. All files should be installed to the Appdir
in Setup Wizard step 6.

<OL><P><LI>On the Windows NT Server, you need an HTML page that contains a
   reference to a URL. For example, take the following code and put it in
   the Wwwroot\default.htm file:
<P>
<P><PRE>      &lt;A HREF="/scripts/foxisapi.dll/FoxIS.employee.startup"&gt;
      &lt;I&gt;VFP OLE CUSTOM SERVER DEMO PAGE&lt;/I&gt; &lt;/A&gt;
</PRE>
<P><LI>In the same HTML file cut and paste the following HTML code:
<P>
<P><PRE>      &lt;FORM ACTION= "/scripts/foxisapi.dll/foxis.employee.cmd"&gt;
      &lt;INPUT NAME="Cmd" value = "Reset"&gt;
      &lt;input type="submit" value="Dos Command"&gt;
      &lt;/FORM&gt;
</PRE><P>
   This code creates a button on the page that tells the server to execute
   any MS-DOS command, such as DIR, and it returns a page with the results
   of the command. If the command is "Reset" (default), then it makes the
   OLE Automation server release the first instance of the server as well
   as its own, thus releasing the OLE Automation server completely.
<P>
   Also add the following HTML code:
<P>
<P><PRE>      &lt;FORM ACTION = "/scripts/foxisapi.dll/foxis.employee.cmd?FOXCMD"&gt;
      &lt;INPUT NAME="Cmd"&gt;&lt;input type="submit"
      value="Fox Expression"&gt; For example try: "today is "+ cdow(date()) or
      45 * 3 or SYS(2004)
      &lt;/FORM&gt;
</PRE><P>
   This code creates a button on the page that tells the server to execute
   any FoxPro command and return a page with the results of the command.
<P>
</OL>WARNING: A Windows NT Service has no Desktop, so results of any commands or
functions that produce user interface objects (UI) such as a MessageBox do
not appear on the server machine and the commands hang the server machine
if you attempt to execute them. This means you should debug your server
applications before deploying them. The sample shows that if an error
occurs, you can generate an HTML page to return to the client's browser.

<OL><P><LI>Now run the setup program created in step 8 on the Windows NT Server.
<P><PRE>    Install all files to the Inetsvr\Scripts folder. Once setup has
    completed move the .gif files into the Wwwroot folder.
</PRE>
<P><LI>You are now ready to run FoxIS.employee.startup from a browser. From
<P><PRE>    the server machine connect to your NT server's machine name. Your
    default.htm page should display and if you click the URL jump
    (hypertext), it should return a page that shows you the data from the
    Employee table plus a grid-like HTML table on the server.
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
For information on debugging Foxisapi.dll and for comments on the design of
that program, see the Online Documentation for Visual FoxPro 5.0 by
clicking Documentation on the Visual FoxPro Help menu. The Visual FoxPro
Online Documentation form normally opens with the Find panel at the left.
If not, click Find on the View menu. In the Find combo box enter the string
"ISAIP OLE Server Sample" and press Enter.
<P>
Scroll down to the subject "Debugging the Server." (This is about half way
down the scrollbar.) Here you will see a collection of information about
the server's design, and tracing the server in Microsoft Visual C++.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage kbinterop kbole kbreadme kbsetup kbtool kbhowto<BR>
KBSubcategory: FxnetworkWinnt<BR>
Additional reference words: 5.00 kbdse vfoxwin kbdse
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 7, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
