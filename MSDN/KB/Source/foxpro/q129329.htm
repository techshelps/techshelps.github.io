

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Populate a Form's ListBox Object from an Array </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129329">
<META NAME="KBModify" CONTENT="1996/10/18">
<META NAME="KBCreate" CONTENT="1995/04/24">
<META NAME="Keywords" CONTENT="kbtool kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article shows how to populate a ListBox object from an array.  MORE INFORMATION  In Visual FoxPro, in addition to the usual single-column list, you can now have multiple-column lists. Additionally, the ListBox object also supports the multiple...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBVR,QAHP,QAW6,QBWS,QAY2,QAUD,QAE1,QA2Q,QAG2,QBXS,QAKC,QAYY,QBJZ,QBWC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Populate a Form's ListBox Object from an Array</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129329</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows how to populate a ListBox object from an array.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In Visual FoxPro, in addition to the usual single-column list, you can now
have multiple-column lists. Additionally, the ListBox object also supports
the multiple-select and mover capabilities.
<P>
The ListBox object has several properties that control the displayed
output. Some of these properties are covered in this article. For more
information, please see Chapter 11 of the Developer's Guide or the "ListBox
Control" topic in the Help menu.
<P>
ListBox Control Properties &amp; Display Attributes
 
<P>
The following two tables describes several of the data properties and
display attributes of the ListBox control:
<P>
<PRE>Data Property    Description
</PRE> 
<PRE>ColumnCount      Number of columns contained in the ListBox object.

RowSource        Source of the values displayed in the ListBox object.

RowSourceType    Data type of the values. For example, fields, array, list,
                 files, and list of fields are all valid data types.

ControlSource    Where the value chosen by the user is stored. For example,
                 the value may be stored in a variable.

BoundColumn      The column of a multiple-column array to return when the
                 user selects an object from the ListBox object.

</PRE>Display
<PRE>Attribute        Description
</PRE> 
<PRE>Moverbars        Allows the rearrangement of values displayed in the
                 ListBox object.

Multiselect      Allows users to choose multiple items from the
                 ListBox object.

FontName         The font used in displaying the ListBox control's data.

FontItalic       Turns on italic mode for the font specified in the
                 FontName property.

</PRE><h3>Step-by-Step Example</h3>
 
<P>
The following steps show how to create and add an array-driven ListBox to a
form.

<OL><P><LI>In the Command window, type:
<P>
   CREATE FORM LISTTEST.

<P><LI>Adjust the form size so you have some working room. Click the form to
   select it. Then right-click to bring up the Form sub-menu.

<P><LI>Select the Data Environment menu pad. Right-click the Data Environment
   window, and choose Add. In the Add Table or View dialog, choose Other.
   From the SAMPLES\DATA directory, choose Customer, and click OK in
   the Open dialog. The Customer table should now be in the data
   environment for the form. You can close the Data Environment for this
   form.

<P><LI>From the Form menu, choose New Property. Type in the array name as
   MYARRAY(1). The array will now become a new property of the form. For
   more information on adding properties scoped to a form or form set,
   please see the topic "properties, scoped to form sets" in the Help menu.

<P><LI>If the Form Properties sheet is not already on the screen, click the
   form to select it. Then right-click to bring up the property sheet.
<P>
   a. Choose the Methods tab for the Form Properties sheet.
<P>
   b. Place the following SQL statement in the Form Load event:
<P>
<PRE>         SELECT cust_id, contact, phone FROM customer
            INTO ARRAY Thisform.myarray

      NOTE: The prefix "Thisform" in front of the array name is a critical
      and subtle point to remember about the scoping of member arrays and
      variables within a form. If the SELECT statement is simply done INTO
      ARRAY myarray, the array created by the SQL statement will not have
      scope within the form itself. By prefacing the array name with the
      "Thisform" clause, the results of the SQL statement are directed into
      the array named myarray, which is part of the form definition.

   c. Close the FORM1.LOAD screen.

</PRE><P><LI>From the Form Controls toolbar, click the ListBox object and drag the
   ListBox object onto the new form. Size the ListBox to occupy most of
   the screen.

<P><LI>With the ListBox selected, right-click the ListBox object, and choose
   Properties.

<P><LI>Select the Data tab, and set the following properties:
<P>
<P><PRE>    - BoundColumn = 1
</PRE><P>
<P><PRE>      This property governs which column of a multiple-element array is
      returned to the List1.Value data element when a user selects a record
      in the ListBox. In this example, you are creating a three-column
      array, so you can use a value of 1, although 2 or 3 are also valid
      entries for this property.
</PRE><P>
<P><PRE>    - NumberOfElements=ALEN(THISFORM.MYARRAY,1)
</PRE><P>
<P><PRE>      This property governs the total number of elements that will be
      displayed in the ListBox. It is valid only for a RowSourceType of 5.
      By using the =ALEN(THISFORM.MYARRAY,1) expression, you are telling
      FoxPro to display all the values in the array as opposed to limiting
      how many elements are displayed. Note that you must type the leading
      equals sign.
</PRE><P>
<P><PRE>      The following information from the Visual FoxPro Help menu explains
      the seconnd, optional parameter used by the ALEN() function:
</PRE><P>
<P><PRE>      The second property of the ALEN() determines if ALEN() returns the
      number of elements, rows or columns in the array. nArrayAttribute can
      be 0, 1, or 2:
</PRE><P>
<P><PRE>      a. 0 specifies to return the number of elements in the array.
<PRE></PRE>         Omitting nArrayAttribute is identical to specifying 0.

      b. 1 specifies to return the number of rows in the array.

      c. 2 specifies to return the number of columns in the array. If the
         array is a one-dimensional array, ALEN() returns 0 (no columns).

    - RowSource = THISFORM.MYARRAY

      This RowSource property tells Visual FoxPro that the data will be
      coming from an object called MYARRAY.

    - RowSourceType = 5 - Array

      This RowSourceType property tells Visual FoxPro that the type of
      object that contains the data is an array.

</PRE><P><LI>From the ListBox Properties sheet, select the Layout tab, and set the
   following properties:
<P>
<P><PRE>    - ColumnCount=3
</PRE><P>
<P><PRE>      This property governs how many elements of the array will be
      displayed. Because the array that will drive this ListBox contains
      three columns, the value of 3 is used. Array elements are displayed
      in the order they appear in the array. For example, say you issue an
      SQL SELECT statement such as this:
</PRE><P>
<P><PRE>      SELECT cust_id, contact, phone FROM CUSTOMER
</PRE><P>
<P><PRE>      Then the data in the ListBox will be displayed in that order
      (cust_id, contact, phone).
</PRE><P>
<P><PRE>    - ColumnLines = .T.
</PRE><P>
<P><PRE>      This property determines whether or not to display bars between the
      columns displayed in the array.
</PRE><P>
<P><PRE>      NOTE: Column lines are represented on the form during design time as
      vertical bars. Because this is both a run-time and design-time
      property, if this value is set to false, there will be NO visual
      indicator of the number of columns defined for the ListBox object.
</PRE><P>
<P><PRE>    - ColumnWidths = 60,220,90
</PRE><P>
<P><PRE>      By default, the pixel is the unit of measurement on a Form.
</PRE>
<P><LI>From the ListBox Properties sheet, select the Methods tab. Double-click
<P><PRE>    the word [Default] next to the words DblClick Event. This should open
    up an editing window for the DblClick event.
</PRE><P>
<P><PRE>    In the editing window, type this command:
</PRE><P>
<P><PRE>    =MESSAGEBOX(THISFORM.LIST1.VALUE,64)
</PRE><P>
<P><PRE>    When you double-click an item in the list, your selection will be shown
    in a message box with an OK button.
</PRE>
<P><LI>Place a CommandButton control on the form. Place the following command
<P><PRE>    in the CLICK event:
</PRE><P>
<P><PRE>    RELEASE THISFORM
</PRE><P>
<P><PRE>    Change the caption to Quit.
</PRE>
<P><LI>Save and run your form.
<P>
</OL>To get a feel for changing some of the properties on an active form, you
may want to try some of the following commands in the Command window:
<P>
<PRE>LISTTEST.LIST1.MultiSelect=.T.           &amp;&amp; Turn on multiselect property
</PRE></OL>LISTTEST.LIST1.FontName="MS Sans Serif"  &amp;&amp; Change font for ListBox
<PRE>LISTTEST.LIST1.FontItalic=.T.            &amp;&amp; Make the text italic
LISTTEST.List1.BoundColumn=3             &amp;&amp; Alter what column's data is
                                         &amp;&amp; returned to List1.Value.
                                         &amp;&amp; When you change this and then
                                         &amp;&amp; double-click a record, the
                                         &amp;&amp; data from the third column will
                                         &amp;&amp; be returned to LIST1.VALUE.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 3.00b VFoxWin Multiselect multicolumn<BR>
multi-select multi-column<BR>
KBCategory: kbtool kbprg kbhowto<BR>
KBSubcategory: FxtoolFormdes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
