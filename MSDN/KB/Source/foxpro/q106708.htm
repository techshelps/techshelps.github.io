

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Generate Unique Key Field Values </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106708">
<META NAME="KBModify" CONTENT="1996/04/29">
<META NAME="KBCreate" CONTENT="1993/11/14">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  There are several ways to generate a unique string for a key field value. One method of doing this is described below.  MORE INFORMATION  The following code is adapted from the  FoxPro 2.5 Advanced Developer's Handbook  by Adams and Powell, Chapter...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QANY,QAUD,QBE7,QBE6,QAPN,QA7O,QA7N,QA5V,QAHE,QAM4,QAKH,QA2Q,QAZV,QAY5,QAY2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Generate Unique Key Field Values</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106708</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
<LI>Microsoft FoxPro for MS-DOS, versions 1.02, 2.0, 2.5x, 2.6x
<LI>Microsoft FoxPro for Macintosh, version 2.5x, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are several ways to generate a unique string for a key field value.
One method of doing this is described below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code is adapted from the "FoxPro 2.5 Advanced Developer's
Handbook" by Adams and Powell, Chapter 18, page 644.
<P>
The following function accepts a numeric parameter to specify the length of
the key desired. If no parameter is passed, the function will generate a
unique key that is 8 characters long. The maximum key length that can be
generated is 18 characters.
<P>
<PRE>   FUNCTION ukey
   PARAMETER lenkey
   IF PARAMETERS()=0
        lenkey=8
   ENDIF
   IF lenkey=1
        RETURN RIGHT(SYS(3),1)
   ENDIF
   len1=FLOOR(lenkey/2)
   len2=lenkey-len1
   key1= RIGHT(SYS(3),len1)
   key2= RIGHT(SYS(2015),len2)

   RETURN key1+key2

</PRE>Theoretically, this method allows more possible keys than FoxPro can store
records, without a duplicate; however, there is the possibility of
duplication because of the cyclic nature of the algorithm (which is based
on the system time and date).
<P>
The default 8-character return from UKEY() will be sufficient for most
systems and the chance of a duplicate is significantly less than 1:10**18.
(The actual figure is estimated here: 36**8*10**10). To ensure uniqueness,
a SELECT SQL statement can be used. For example, if you were using a
database alias of MYDATA, and a key field of KEYFIELD C(8), you would use
the following SELECT SQL statement:
<P>
<PRE>   goodkey=.F.
   DO WHILE !goodkey
      newkey= UKEY()
      SELECT KEYFIELD from MYDATA WHERE KEYFIELD=newkey
      goodkey=IIF(_TALLY=0,.T.,.F.)
   ENDDO

</PRE>This method will slow down as the data grows, but should be sufficient for
databases with less than 16 million records. For larger databases, use a
key length greater than 8.
<P>
<P><h2>REFERENCES</h2>
 
<P>
"FoxPro 2.5 Advanced Developer s Handbook," Pat Adams and Jordan Powell,
Brady Publishing, New York, NY., 1993, Chapter 18, page 644
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxMac FoxDos FoxWin 1.02 2.00<BR>
2.50 2.50a 2.50b 2.50c 2.60 2.60a unique key avoid duplicate record<BR>
KBCategory: kbprg kbcode kbhowto<BR>
KBSubcategory: FxprgSql<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
