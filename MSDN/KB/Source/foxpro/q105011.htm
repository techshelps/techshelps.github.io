

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use WriteComm() and CloseComm() with FOXTOOLS.FLL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q105011">
<META NAME="KBModify" CONTENT="1996/10/18">
<META NAME="KBCreate" CONTENT="1993/10/05">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  WriteComm() is a function that can be called using FOXTOOLS.FLL in order to write to the COM or LPT ports. CloseComm() is another function that can be called using FOXTOOLS.FLL in order to close the COM or LPT ports. Below are complete descriptions...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAY5,QDJ9,QBV8,QAB9,QBBI,QAKD,QANY,QDJP,QALG,QAGB,QAB5,QAKC,QALW,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use WriteComm() and CloseComm() with FOXTOOLS.FLL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q105011</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
WriteComm() is a function that can be called using FOXTOOLS.FLL in
order to write to the COM or LPT ports. CloseComm() is another
function that can be called using FOXTOOLS.FLL in order to close the
COM or LPT ports. Below are complete descriptions of WriteComm() and
CloseComm().
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For information about using the serial port using Visual FoxPro, please see
the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q139526.htm">Q139526</A></B>
   TITLE     : How to Send to the Serial Port by Using Mscomm32.ocx

</PRE><h3>WRITECOMM()</h3>
 
<P>
<P><h3>Purpose</h3>
 
<P>
The WriteComm() function writes to the specified communications
device.
<P>
<P><h3>Function Syntax</h3>
 
<P>
<PRE>   WriteComm(&lt;comm_id&gt;, &lt;str&gt;, &lt;str_len&gt;)

   Argument       Description
   ----------------------------------------------------------------

   &lt;comm_id&gt;      Specifies the device to receive the bytes. The
                  OpenComm() function returns this value.

   &lt;str&gt;          Points to the buffer that contains the bytes to be
                  written. This is the variable s in the example
                  below.

   &lt;str_len&gt;      Specifies the number of bytes to be written.

</PRE><h3>Returns</h3>
 
<P>
The return value specifies the number of bytes written, if the
function is successful. The return value is less than zero if an error
occurs, making the absolute value of the return value the number of
bytes written.
<P>
<P><h3>Comments</h3>
 
<P>
For serial ports, the WriteComm() function deletes data in the
transmission queue if there is not enough room in the queue for the
additional bytes. Applications should use the OpenComm() function to
set the size of the transmission queue to an amount no smaller than
the size of the largest expected output string.
<P>
<P><h3>CLOSECOMM()</h3>
 
<P>
<P><h3>Purpose</h3>
 
<P>
The CloseComm() function closes the specified communications device
and frees any memory allocated for the device's transmission and
receiving queues. All characters in the output queue are sent before
the communications device is closed.
<P>
<P><h3>Function Syntax</h3>
 
<P>
<PRE>   CloseComm(&lt;comm_id&gt;)

   Argument       Description
   -------------------------------------------------------------------

   &lt;comm_id&gt;      Specifies the device to be closed. The OpenComm()
                  function returns this value. In the example below
                  this is the variable com1.

</PRE><h3>Returns</h3>
 
<P>
The return value is zero if the function is successful. Otherwise, it
is less than zero.
<P>
<P><h3>Code Example</h3>
 
<P>
The following code example uses the WriteComm() and CloseComm()
functions and FOXTOOLS.FLL to write to and close COM1. (This example
can be found in FOXPROW\GOODIES\FOXTOOLS\DIALER.PRG.)
<P>
<PRE>   *-------------------- dialer.prg ------------------------
   * Sample program to output to comm port
   * Uses FoxTools library for generic DLL access

   SET LIBRARY TO SYS(2004)+"foxtools.fll" ADDITIVE

   opencomm = REGFN("OpenComm", "CII", "I")
   writecomm = REGFN("WriteComm", "ICI", "I")
   closecomm = REGFN("CloseComm", "I", "I")

   com1 = CALLFN(opencomm, "COM1:", 100, 100)
   s = "ATDT 5551212" + chr(13)
   =CALLFN(writecomm, com1, s, len(s))

   WAIT WINDOW "Press any key to hang up"
   s = "ATH0" + chr(13)
   =CALLFN(writecomm, com1, s, len(s))

   =CALLFN(closecomm, com1)

   RELEASE LIBRARY SYS(2004)+"foxtools.fll"

</PRE><h2>REFERENCES</h2>
 
<P>
The above information can also be found in the Microsoft Windows
Software Development Kit (SDK) "Programmer's Reference Volume 2:
Functions" (describes the functions) and the "Programmer's Reference
Volume 3: Messages, Structures, and Macros" (describes the returned
values). The online Help file for the Professional Version of Visual
C++ also contains this information.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxWin 2.50 2.50a 2.50b 2.60 2.60a fll dll<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: FxprgFoxtools<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
