

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Implement a Customized Scrolling GET List Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121437">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/10/05">
<META NAME="Keywords" CONTENT="kbprg kbui kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  FoxPro does not provide any built-in means of creating a specialized scrolling control like the one used in the Modify Structure dialog box or the one used in the RQBE tool.  It is possible, however, to simulate such a control by using a series of ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAW6,QAUD,QAOE,QAMN,QAGQ,QAXC,QBFM,QAH4,QAI4,QBXQ,QBFY,QAB9,QADF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Implement a Customized Scrolling GET List Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121437</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5x, 2.6, 2.6a
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
FoxPro does not provide any built-in means of creating a specialized
scrolling control like the one used in the Modify Structure dialog box or
the one used in the RQBE tool.
<P>
It is possible, however, to simulate such a control by using a series of
nested windows. The sample code below illustrates this process.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: Save this code as SCROLLER.PRG. To execute the code, type "DO
scroller.prg" in the Command window.
<P>
<P><h3>Sample Code</h3>
 
<P>
*-------------------------------------------------------------------------
*
* SCROLLER.PRG - Sample code for implementing a simple specialized list
<PRE>*                control
*
</PRE>* Various environmental initializations...
<PRE>     scrnfont="FoxFont"
     scrnfontsize=9
     num_items=15
     CLEAR
     IF _WINDOWS
       MODIFY WINDOW SCREEN FONT scrnfont,scrnfontsize
     ENDIF

</PRE>* Define container window.
<PRE>     DEFINE WINDOW container ;
          FROM 1,1 TO 12,30 ;
          TITLE "Scrolling Gets" ;
          HALFHEIGHT FLOAT ;
          FONT scrnfont,scrnfontsize
     ACTIVATE WINDOW container

</PRE>* Define the container for the scrolled region. Window B will
* limit the visibility of the scrolling chunk of screen, and
* window C will actually be relocated on the screen as the
* scrolling buttons are pressed.
<PRE>     DEFINE WINDOW B ;
          FROM 1,2 TO 9,12 ;
          IN WINDOW container ;
          FONT scrnfont,scrnfontsize
     DEFINE WINDOW C ;
          FROM 0,0 TO 100,20 ;
          IN WINDOW B ;
          FONT scrnfont,scrnfontsize ;
          NONE
     ACTIVATE WINDOW B
     ACTIVATE WINDOW C

</PRE>* Define the container for the control buttons and other
* GET objects on the screen. In order to be able to access
* controls in both the container and the scrollable region,
* the controls must be at the same level of window-nesting.
<PRE>     DEFINE WINDOW a1 ;
          FROM 1,13 TO 9,30 ;
          IN WINDOW container ;
          FONT scrnfont,scrnfontsize ;
          NONE
     DEFINE WINDOW a2 ;
          FROM 0,0 TO 8,17 ;
          IN WINDOW a1 ;
          FONT scrnfont,scrnfontsize ;
          NONE
     ACTIVATE WINDOW a1
     ACTIVATE WINDOW a2

</PRE>* Initialize button variables.
<PRE>     scrup=1
     scrdn=1
     exitbtn=0
</PRE>* Draw the buttons.
<PRE>     @0,0 GET scrup ;
          FUNCTION "* ^" ;
          VALID scrollit('up') ;
          SIZE 2,3
     @6,0 GET scrdn ;
          FUNCTION "* v" ;
          VALID scrollit('dn') ;
          SIZE 2,3
     @6,5 GET exitbtn ;
          FUNCTION "* \?Quit" ;
          SIZE 2,5

</PRE>* Define the controls on the scrolling region.
* Create &lt;num_items&gt; buttons and GETs.
* (This is also an example of a control array.)
<PRE>     ACTIVATE WINDOW C
     DECLARE btn(num_items)
     DECLARE txt(num_items)
     FOR i = 1 TO num_items
          btn(i) = 1
          txt(i) = chr(i+48) + chr(i+49) + chr(i+50)
          @i-1,0 GET btn(i) ;
               FUNCTION "* " + STR(i) ;
               SIZE 1,3 ;
               VALID scrbtn(OBJVAR())
          @i-1,4 GET txt(i) ;
               SIZE 1,5 ;
               WHEN scrtxt(OBJVAR(),"When") ;
               VALID scrtxt(OBJVAR(),"Valid")
     NEXT
     READ WHEN enablescroll() VALID exitbtn=1
     RELEASE WINDOW container
     return

</PRE>*-------------------------------------------------------------------------
PROCEDURE scrollit
* Use the Move Window command to position the scroll area
<PRE>     PARAMETER direction
     DO CASE
          CASE LOWER(direction) = 'dn'
               MOVE WINDOW C BY -1,0
          CASE LOWER(direction) = 'up'
               MOVE WINDOW C BY 1,0
     ENDCASE
     =enablescroll()
     RETURN .T.

</PRE>*-------------------------------------------------------------------------
PROCEDURE enablescroll
* Disable or enable the scroll buttons as appropriate.
<PRE>     ACTIVATE WINDOW a2
     curpos = ROUND(WLROW('b')-WLROW('c'),0)
     visible_items = ROUND(WROWS('b'),0)
     enableup = curpos &gt; 0
     enabledn = curpos &lt; num_items-visible_items
     IF enableup
          SHOW GET scrup enabled
     ELSE
          SHOW GET scrup disabled
     ENDIF
     IF enabledn
          SHOW GET scrdn enabled
     ELSE
          SHOW GET scrdn disabled
     ENDIF
     RETURN .T.

</PRE>*-------------------------------------------------------------------------
PROCEDURE scrbtn
<PRE>     PARAMETER btnname
     bindex=STR(VAL(RIGHT(btnname,  LEN(btnname) - AT("(",btnname) ) ) )
     WAIT WINDOW "Button " + ALLTRIM(bindex) ;
          + " Valid." ;
          NOWAIT TIMEOUT 5
     RETURN .T.

</PRE>*-------------------------------------------------------------------------
PROCEDURE scrtxt
<PRE>     PARAMETER fname,clause
     findex=VAL(RIGHT(fname,LEN(fname) - AT("(",fname)))
     WAIT WINDOW "Field " + fname + " " ;
          + clause + ":" + CHR(13) + txt(findex) ;
          NOWAIT TIMEOUT 5
     RETURN .T.
</PRE>*
*
* End of program SCROLLER.PRG
*-------------------------------------------------------------------------
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxDos FoxWin 2.00 2.5x 2.50 2.5 2.5a 2.50a<BR>
2.5b 2.50b 2.60 2.60a control array get list getlist scroll bar scrollbar<BR>
KBCategory: kbprg kbui kbcode<BR>
KBSubcategory: FxtoolRqbe<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
