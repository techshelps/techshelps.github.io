

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tools Available with Visual FoxPro 3.0 Professional </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130825">
<META NAME="KBModify" CONTENT="1997/02/12">
<META NAME="KBCreate" CONTENT="1995/05/28">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article describes the following tools available only in the Professional Edition of Visual FoxPro:   - Running BUILDAPP.PRG with the BuildEXE parameter.  - Using the Class Browser Window.  - Using the Image Editor.  - Using the OLE Controls Sa...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABO,QAPN,QA7O,QAB5,QA5B,QA56,QA55,QAOE,QAMN,QABA,QAPF,QAH4,QBXF,QBXS,QA2Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Tools Available with Visual FoxPro 3.0 Professional</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 12, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130825</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, Professional Edition, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes the following tools available only in the
Professional Edition of Visual FoxPro:

<UL><LI>Running BUILDAPP.PRG with the BuildEXE parameter.
<LI>Using the Class Browser Window.
<LI>Using the Image Editor.
<LI>Using the OLE Controls Sample.
<P>
</UL>NOTE: The information in this article is also available in various help
topics in the Visual FoxPro Help file, under Contents, Professional
Reference, Tools, and Samples.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Running BUILDAPP.PRG with the BuildEXE Parameter</h3>
 
<P>
BUILDAPP.PRG strips the method and event code of .SCX and .VCX files from
.APP and .EXE files for distribution purposes. BUILDAPP.PRG is located in
the Visual FoxPro TOOLS\BUILDAPP directory.
<P>
In Visual FoxPro, source code is usually stored in the Methods field of
all .SCX and .VCX tables. When you build an application, these fields are
included in the build and the code is included in the .APP file. BUILDAPP
strips the code from the methods field before the final application build
and restores files to their original state following the build. By building
files without source code, your .APP files are smaller and more secure.
<P>
The syntax for BUILDAPP.PRG is:
<P>
DO BUILDAPP [WITH ProjectName [, AppFileName [, DebugMode [, BuildEXE]]]]

<UL><LI>ProjectName specifies the name of the project. If it is not included, a
   Locate File dialog box is displayed.

<LI>AppFileName, if specified, instructs BUILDAPP to build the application
   with this name and an .APP extension. If you do not specify AppFileName,
   the application is built with the ProjectName and an .APP extension. If
   you specify an AppFileName with an .EXE extension, an .EXE is built;
   this feature is available only in the Professional Edition of Visual
   FoxPro.

<LI>DebugMode sets debug mode on. Debug mode is off by default. To set debug
   mode on, set DebugMode to true (.T.).

<LI>BuildEXE builds a compact .EXE file instead of an .APP file. BuildEXE is
   off by default. To build an .EXE file, set BuildEXE to true (.T.).
   BUILDEXE is available only in the Professional Edition of Visual FoxPro.
<P>
</UL>If you run BUILDAPP without specifying any arguments, a form is displayed
prompting you for the required information. BUILDAPP performs the following
operations:

<UL><LI>Locates files.

<LI>Opens the project.

<LI>Sets debug mode.

<LI>Builds the application from original project files. This ensures that
   the source code in the Methods fields in all .VCX and .SCX tables is
   compiled and the P-code is stored in the corresponding ObjCode field in
   each table. During the application build, if an error is found, the
   error is displayed, and you can choose Ignore, Suspend, or Cancel.
   Builds must be error-free for BUILDAPP to execute completely.

<LI>Creates and populates an array with file names corresponding to
   every .VCX and .SCX file in the project.

<LI>Packs .VCX files to remove any orphan records.

<LI>Copies Methods fields from all .VCX and .SCX tables to temporary
   tables in the array.

<LI>Replaces all Methods fields with ' ' (blank string), copies the
   tables to a temporary location, removes records from the original
   table, appends the temporary tables (with empty Method fields) back
   to the original tables, and deletes the temporary files.

<LI>Rebuilds the application.

<LI>Restores all Methods fields in the original tables, deletes all
   temporary files, and restores the project to its original state.
<P>
</UL>No permanent changes are made to the project when you run BUILDAPP.
<P>
<P><h3>Using the Class Browser Window</h3>
 
<P>
The Class Browser available in the Professional Edition of Visual FoxPro
displays the classes in a class library or a form. You can use the Class
Browser to view, use, and manage classes and their user-defined members.
<P>
To use the Class Browser, choose Class Browser from the Tools menu and
specify a file, or type DO (_BROWSER) in the Command window.
<P>
The Class Browser consists of these tools:

<UL><LI>Class Browser buttons, which perform various Class Browser commands.

<LI>Pushpin button, which controls the state of the Class Browser window.
   When the button is in the down position, the window remains on top, even
   when other windows are active. When the button is in the up position,
   the Class Browser window does not remain on top.

<LI>Type box, which allows selection or entry of a class type or character
   string to filter the class list. The drop-down list shows the base
   classes. The list also keeps a history of class types and filters you
   have selected or entered for the current instance of the Class Browser.

<LI>Hierarchical option, which displays the classes in a hierarchy so that
   class trees can be expanded or collapsed.

<LI>Alphabetical option, which displays the classes alphabetically.

<LI>Protected check box button, which displays protected members in the
   member tabs. Protected members are indicated by an asterisk (*).

<LI>Empty check box button, which displays empty methods in the member tabs.
   Empty methods are indicated by a tilde (~).

<LI>Class icon, which displays an icon representing the selected class. The
   icon can be dragged to a form to add an object of that class to the
   form. A user-defined bitmap can be assigned to the class icon.

<LI>Class list, which lists the classes and subclasses contained in a class
   library (.VCX) or form (.SCX) in an outline-like view. Folder icons
   appear next to each class and subclass. A chevron (&lt;&lt;) next to a class
   indicates that the parent class is in a file that is not displayed in
   the current Class list. To see the parent class, double-click the
   folder. To modify any class in the Class Designer, double-click the
   class name.

<LI>Member tabs, which display user-defined members for the selected class
   by member type. Members inherited from base and parent classes do not
   appear in the tabs. The first column indicates the member type with a
   lowercase letter. For example, "o" indicates an object member. Choose a
   tab to look for a specific member type.

<LI>All, which displays user-defined object members, properties, methods,
   and instances for the selected class.

<LI>Object members, which displays object members for the selected container
   class. Protected members are indicated by an asterisk (*) and are only
   included if the Protected button is clicked.

<LI>Methods, which displays method members for the selected class.

<LI>Properties, which displays property members that define attributes for
   the selected class.

<LI>Instances, which displays current objects based on the selected class.

<LI>Class Description box, which displays a description for the selected
   class. This box is located at the bottom-left of the Class Browser
   window. You can edit the description in this box.

<LI>Member Description box, which displays information about the selected
   member of a class. This box is located at the bottom-right of the Class
   Browser window. For object members, the box is a read-only display of
   class library, class, and base class. For property or method members,
   the box displays a description you can edit. For instances, the box
   displays a read-only description that includes the variable scope
   (public or hidden), member names, and property values.
<P>
</UL><h3>Using the Image Editor</h3>
 
<P>
To view and edit bitmaps, cursors, and icons, use the Image Editor
(IMAGEDIT.EXE). To use the Image Editor, choose the Image Editor icon in
your Visual FoxPro group, or Run IMAGEDIT.EXE.
<P>
The Image Editor is available only in the Professional Edition of Visual
FoxPro if you choose either the Complete installation or choose Utilities
from the Professional Tools section of the Custom installation. For more
information on viewing and editing images, please see the Image Editor help
file (IMAGEDIT.HLP).
<P>
<P><h3>Using the OLE Controls Sample</h3>
 
<P>
OLE controls, such as the Outline and MAPI controls in your Window SYSTEM
directory, are prepackaged objects.
<P>
You cannot create OLE controls with Visual FoxPro. However, you can get
them from independent software vendors or create them using the Microsoft
OLE Custom Control Developer's Kit (CDK) provided with Microsoft Visual C++
version 2.0.
<P>
OLE controls are versatile because you can subclass them to create other
controls, and you can control them by using their associated events,
methods, and properties.
<P>
The following OLE control samples are provided with Visual FoxPro:

<UL><LI>Outline control sample, located in the Visual FoxPro SAMPLES\OLE
   directory. The OUTLINE1.SCX form demonstrates how to use the Outline
   custom control. It contains sample code that allows the user to select
   a database and populate the outline with the tables and views contained
   in the database. You can view the fields and indexes in each table by
   expanding the outline.

<LI>MAPI controls sample form, located in the Visual FoxPro SAMPLES\OLE
   directory. The SENDMAIL.SCX form demonstrates how to use the MAPI
   Message and MAPI Session controls to start a mail session, gather data
   from the current record, and create and send a mail message that
   contains that data.

<LI>MAPI controls sample class, located in the Visual FoxPro SAMPLES\OLE
   directory. The MAPIBTN.VCX visual class library contains a sample
   container class. This class, mailbtn, contains a command button, a MAPI
   Message control, and a MAPI Session control. This class has the same
   functionality demonstrated in the MAPI controls sample form and can be
   added to any form.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbtool<BR>
KBSubcategory: FxtoolGeneral<BR>
Additional reference words: 3.00<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 12, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
