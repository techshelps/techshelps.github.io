

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Contents of the FPM 2.6a "FoxTools Readme" File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120372">
<META NAME="KBModify" CONTENT="1996/05/16">
<META NAME="KBCreate" CONTENT="1994/09/08">
<META NAME="Keywords" CONTENT="kbreadme kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Below is the complete FoxPro 2.6a for Macintosh  FoxTools Readme  file found in the Goodies:Misc folder in the main FoxPro folder (usually  Microsoft FoxPro 2.6 ).  MORE INFORMATION  *****************************************************************...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBBI,QAY5,QA2S,QALW,QBV8,QAB9,QAFI,QATX,QAB4,QDO9,QAKC,QAG2,QAOG,QAEO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Contents of the FPM 2.6a "FoxTools Readme" File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120372</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Macintosh, version 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Below is the complete FoxPro 2.6a for Macintosh "FoxTools Readme" file
found in the Goodies:Misc folder in the main FoxPro folder (usually
"Microsoft FoxPro 2.6").
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
******************************************************************
<PRE>                FoxPro for Macintosh FoxTools ReadMe

 Microsoft(R) FoxPro(R) for Macintosh(R) and Power Macintosh (TM)
                         Version 2.6a

          (C)1994 Microsoft Corporation. All rights reserved.
</PRE>******************************************************************
<P>
FOXTOOLS is a FoxPro library that exposes Macintosh system functions
for use in FoxPro for Macintosh. Functions in the FOXTOOLS library
allow you to set and retrieve file information, manipulate paths and
filenames, use Macintosh system alerts, and perform many other
functions.
<P>
When you install FoxPro for Macintosh, FOXTOOLS.MLB is installed in
the System Folder:Extensions folder. To use the FOXTOOLS functions,
use the command SET LIBRARY TO FOXTOOLS.
<P>
 
<PRE>                        FOXTOOLS Functions
</PRE> 
<P>
AddBS( )
<P>
Syntax: AddBS(&lt;expC&gt;)
<P>
The AddBS( ) function returns the path specified by the parameter
&lt;expC&gt;, with a trailing colon. The function doesn't add the trailing
colon if &lt;expC&gt; already has one or is a null string.
<P>
&lt;expC&gt;
<PRE>   Specifies the path.

</PRE> 
CleanPath( )
<P>
Syntax: CleanPath(&lt;expC&gt;)
<P>
On the Macintosh, the function CleanPath( ) returns the string passed
to it. This function is included for cross-platform compatibility with
FoxPro for Windows.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE> 
DefaultExt( )
<P>
Syntax: DefaultExt(&lt;expC1&gt;, &lt;expC2&gt;)
<P>
If &lt;expC1&gt; does not contain an extension, the DefaultExt( ) function
returns the parameter &lt;expC1&gt; with the extension specified by &lt;expC2&gt;
added to the path:filename. If &lt;expC1&gt; contains an extension, then
&lt;expC1&gt; is returned unchanged.
<P>
&lt;expC1&gt;
<PRE>   Specifies the path:filename to be returned.

</PRE>&lt;expC2&gt;
<PRE>   Specifies the default extension.

</PRE> 
ForceExt( )
<P>
Syntax: ForceExt(&lt;expC1&gt;, &lt;expC2&gt;)
<P>
The ForceExt( ) function returns &lt;expC1&gt; with the extension changed to
the extension specified by the parameter &lt;expC2&gt;. If &lt;expC1&gt; does not
have an extension, the new extension is added.
<P>
&lt;expC1&gt;
<PRE>   Specifies the path:filename that will get a new extension.

</PRE>&lt;expC2&gt;
<PRE>   Specifies the new extension for &lt;expC1&gt;.

</PRE> 
ForcePath( )
<P>
Syntax: ForcePath(&lt;expC1&gt;, &lt;expC2&gt;)
<P>
The ForcePath( ) function returns the parameter &lt;expC1&gt; with the path
portion changed to the path specified by the parameter &lt;expC2&gt;.
<P>
&lt;expC1&gt;
<PRE>   Specifies the path:filename that will get a new path.

</PRE>&lt;expC2&gt;
<PRE>   Specifies the new path for &lt;expC1&gt;.

</PRE> 
FxAlert( )
<P>
Syntax:  FxAlert(&lt;expN1&gt;, &lt;expN2&gt;, &lt;expN3&gt;, &lt;expN4&gt;[, &lt;expC1&gt;]
[, &lt;expC2&gt;][, &lt;expC3&gt;][, &lt;expC4&gt;])
<P>
The FxAlert( ) function displays an alert and waits for a user
response. One of three icons will be displayed on the alert, based on
the type of alert that you specify in &lt;expN1&gt;. FxAlert( ) returns a
value representing the user exit action.
<P>
&lt;expN1&gt;
<PRE>   Specifies a number that indicates the icon to be displayed on the
</PRE>alert. 0=CAUTION; 1=STOP; 2=NOTE.
<P>
&lt;expN2&gt;
<PRE>   Specifies the resource number. FOXTOOLS contains the same twelve
</PRE>alerts provided in the FOXUSER file of FoxBASE+ for Macintosh. In
FOXTOOLS, the resource numbers are 257 through 268 instead of 1
through 12 as in FoxBASE+ for Macintosh. An alert contains different
possible push button combinations that you can choose. For example,
resource number 259 contains the push buttons "Yes" and "No" with the
focus initially on the "Yes" push button.
<P>
&lt;expN3&gt;, &lt;expN4&gt;
<PRE>   Specify the coordinates, measured in pixels from the top left of
</PRE>the screen, at which the alert will be placed. Use a value of -1 for
&lt;expN3&gt; and/or &lt;expN4&gt; to accept the default position. The default
position is centered.
<P>
[, &lt;expC1&gt;][, &lt;expC2&gt;][, &lt;expC3&gt;][, &lt;expC4&gt;]
<PRE>   Specify text that will appear on the alert.

</PRE>The following table shows the push buttons displayed on each of the
twelve alerts with the default focus push button shown in parentheses.
<P>
<PRE>Res#   Button 1     Button 2    Button 3   Note
</PRE> 
257    (Continue)
258    (OK)
<PRE>259    (Yes)         No
260     Yes         (No)
261    (Yes)         No         Cancel
262     Yes         (No)        Cancel
263    (Continue)                          Bigger alert than 257
264    (OK)                                Bigger alert than 258
265    (Yes)         No                    Bigger alert than 259
266     Yes         (No)                   Bigger alert than 260
267    (Yes)         No         Cancel     Bigger alert than 261
268     Yes         (No)        Cancel     Bigger alert than 262

</PRE> 
FxFileType( )
<P>
Syntax: FxFileType(&lt;expC1&gt;, @&lt;expC2&gt;, @&lt;expC3&gt;)
<P>
The FxFileType( ) function stores the type of a file to the variable
&lt;expC2&gt; and stores the creator of the file to the variable &lt;expC3&gt;.
FxFileType( ) returns 0 for no error or returns a Macintosh Operating
System error number.
<P>
&lt;expC1&gt;
<PRE>   Specifies the path:filename for which you want to obtain the file
</PRE>type and file creator. The path:filename should be a Macintosh
path:filename. If you want to use MS-DOS conventions for paths and
filenames, you need to convert the path and filename for Macintosh use
by using SYS(2027,"&lt;path&gt;&lt;filename&gt;").
<PRE>   Example: SYS(2027,"MacHD:\FoxPro\FoxTools") will return
</PRE>"MacHD:FoxPro:FoxTools"
<P>
@&lt;expC2&gt;
<PRE>   Specifies the pre-created variable, passed by reference, to which
</PRE>the function will store the file type.
<P>
@&lt;expC3&gt;
<PRE>   Specifies the pre-created variable, passed by reference, to which
</PRE>the function will store the file creator.
<P>
 
FxGDepth( )
<P>
Syntax: FxGDepth( )
<P>
The FxGDepth( ) function returns the number of colors available with
the current graphics device.
<P>
 
FxGVolume( )
<P>
Syntax: FxGVolume( )
<P>
The FxGVolume( ) function returns a list of volume names created by
the SET VOLUME command. For example, the following will return "E
MacHD:\FoxPro" and any other volume names created by SET VOLUME:
<P>
SET VOLUME e TO "MacHD:FoxPro"
?FxGVolume( )
<P>
 
FxKeyboard( )
<P>
Syntax: FxKeyboard( )
<P>
The FxKeyboard( ) function returns an integer value that indicates the
type of keyboard that is currently attached to the system. If the
Apple Desktop Bus (ADB) is being used and multiple keyboards are
attached, the value returned indicates which keyboard registered the
last keystroke.
<P>
<PRE>      0 =  unable to determine
      1 =  MacKbd
      2 =  MacAndPad
      3 =  MacPlusKbd
      4 =  ExtADBKbd
      5 =  StdADBKbd
      6 =  PrtblADBKbd
      7 =  PrtblISOKbd
      8 =  StdISOADBKbd
      9 =  ExtISOADBKbd
      10 = ADBKbdII
      11 = ADBISOKbdII
      12 = PwrBookADBKbd
      13 = PwrBookISOADBKbd

</PRE> 
FxNewFolder( )
<P>
Syntax: FxNewFolder(&lt;expC&gt;)
<P>
The FxNewFolder( ) function creates a new folder with the
path:foldername specified by the parameter &lt;expC&gt;. FxNewFolder( )
returns 0 for no error or returns a Macintosh Operating System error
number.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:foldername of the new folder.

</PRE> 
FxSetType( )
<P>
Syntax: FxSetType(&lt;expC1&gt;, &lt;expC2&gt;, &lt;expC3&gt;)
<P>
The FxSetType( ) function sets the type and creator of a file.
FxSetType( ) returns 0 for no error or returns a Macintosh Operating
System error number.
<P>
&lt;expC1&gt;
<PRE>   Specifies the path:filename for which you want to set the file type
</PRE>and file creator.
<P>
&lt;expC2&gt;
<PRE>   Specifies the pre-created variable that contains a value to set the
</PRE>file type. Since the file type is four bytes long, &lt;expC2&gt; should be
four characters. Strings longer than four characters are truncated.
Strings shorter than four characters are padded with '0'.
<P>
&lt;expC3&gt;
<PRE>   Specifies the pre-created variable that contains a value to set the
</PRE>file creator. Since the file creator is four bytes long, &lt;expC3&gt;
should be four characters. Strings longer than four characters are
truncated. Strings shorter than four characters are padded with '0'.
<P>
 
FxStripLF( )
<P>
Syntax: FxStripLF(&lt;expC&gt;)
<P>
The FxStripLF( ) function opens a file specified by the parameter
&lt;expC&gt;, removes all the line feed characters (CHR(10)), and saves the
file using its original path:filename. FxStripLF( ) always returns
.T., but generates a standard "File Read Error" (#1104) if it cannot
read or find the file passed to it by &lt;expC&gt;, or generates a "File
Write Error" (#1105) if it cannot save the file.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename for which you want to remove all the
</PRE>line feed characters.
<P>
 
FxSystem( )
<P>
Syntax: FxSystem(&lt;expN&gt;)
<P>
The FxSystem( ) function returns the path of the System, Extensions,
or Preferences folder on the boot disk, depending on the value of the
parameter &lt;expN&gt;.
<P>
&lt;expN&gt;
<PRE>   Specifies the folder for which the path is returned: 0=System;
</PRE>1=Extensions; 2=Preferences. If you do not specify 1 or 2, the default
value is 0, so the System Folder path will be returned.
<P>
 
FxVolume( )
<P>
Syntax: FxVolume( )
<P>
The FxVolume( ) function returns either a semicolon-delimited list of
mounted volume names (hard drives, floppy disks, network connected
volumes) or a Macintosh Operating System error number.
<P>
 
JustDrive( )
<P>
Syntax: JustDrive(&lt;expC&gt;)
<P>
The JustDrive( ) function returns the drive designation of a
path:filename passed to the function with &lt;expC&gt;.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE> 
JustExt( )
<P>
Syntax: JustExt(&lt;expC&gt;)
<P>
The JustExt( ) function returns the extension of a path:filename
passed to the function with &lt;expC&gt;.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE>For example, the following will return "txt":
<P>
JustExt("MacHD:FoxPro:foxtools.txt")
<P>
 
JustFName( )
<P>
Syntax: JustFName(&lt;expC&gt;)
<P>
The JustFName( ) function returns the filename portion of a
path:filename passed to the function with &lt;expC&gt;.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE>For example, the following will return "foxtools.txt":
<P>
JustFName("MacHD:FoxPro:foxtools.txt")
<P>
 
JustPath( )
<P>
Syntax: JustPath(&lt;expC&gt;)
<P>
The JustPath( ) function returns the path portion of a path:filename
passed to the function with &lt;expC&gt;.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE> 
JustStem( )
<P>
Syntax: JustStem(&lt;expC&gt;)
<P>
The JustStem( ) function returns the stem portion of a path:filename
passed to the function through the parameter &lt;expC&gt;.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE>For example, the following will return "foxtools":
<P>
JustStem("MacHD:FoxPro:foxtools.txt")
<P>
 
NextWord( )
<P>
Syntax: NextWord(&lt;expC1&gt;, &lt;expN&gt;[, &lt;expC2&gt;])
<P>
The NextWord( ) function returns the characters between the character
index specified by &lt;expN&gt; and the following word delimiter (or the end
of the string).
<P>
&lt;expC1&gt;
<PRE>   Specifies the string.

</PRE>&lt;expN&gt;
<PRE>   Specifies the numeric position of the character in the string that
</PRE>will be the initial character returned by NextWord( ).
<P>
[, &lt;expC2&gt;]
<PRE>   Specifies the string of word delimiters. If &lt;expC2&gt; is not used,
</PRE>then the default delimiters are assumed to be spaces and tabs.
<P>
 
Pict2File( )
<P>
Syntax: Pict2File(&lt;expC1&gt;, &lt;expC2&gt;, &lt;expN&gt;, &lt;expC3&gt;)
<P>
The Pict2File( ) function takes a PICT, ICON, or ICN# resource and
creates a separate file containing the image. The new file is a PICT
type file. Pict2File( ) returns: 0 for no error; -2 for not enough
memory to complete the operation; -3 for resource not found; or a
Macintosh Operating System error.
<P>
&lt;expC1&gt;
<PRE>   The path:filename of the file containing the resource.

</PRE>&lt;expC2&gt;
<PRE>   The type of resource to move: "PICT", "ICON" or "ICN#".

</PRE>&lt;expN&gt;
<PRE>   The number of the resource to move.

</PRE>&lt;expC3&gt;
<PRE>   The path:filename where the new image will be saved.

</PRE> 
Reduce( )
<P>
Syntax: Reduce(&lt;expC1&gt;[, &lt;expC2&gt;[, &lt;expN&gt;]])
<P>
The Reduce( ) function reduces multiple white space characters to a
single space and trims all leading and trailing white space. If the
optional parameter &lt;expN&gt; is non-zero, strings in quotation marks will
be unaffected. &lt;expN&gt; can only be used with the optional parameter
&lt;expC2&gt;, which specifies the string of word delimiters. Reduce( )
returns the modified string.
<P>
&lt;expC1&gt;
<PRE>   Specifies the string to be reduced.

</PRE>[, &lt;expC2&gt;[, &lt;expN&gt;]]
<PRE>   &lt;expC2&gt; specifies the string of word delimiters. If &lt;expC2&gt; is not
</PRE>used, then the default delimiters are assumed to be spaces and tabs.
When &lt;expN&gt; is 0, Reduce( ) will process strings inside quotation
marks. The use of &lt;expN&gt; requires the use of &lt;expC2&gt;.
<P>
 
StrFilter( )
<P>
Syntax: StrFilter(&lt;expC1&gt;, &lt;expC2&gt;)
<P>
StrFilter( ) removes all the characters from &lt;expC1&gt; that are not in
&lt;expC2&gt;. StrFilter( ) returns all the characters in &lt;expC1&gt; that are
also included in &lt;expC2&gt;.
<P>
&lt;expC1&gt;
<PRE>   Specifies the string to be filtered.

</PRE>&lt;expC2&gt;
<PRE>   Specifies the characters that are valid for &lt;expC1&gt;. Characters
</PRE>included in &lt;expC2&gt; are not filtered from &lt;expC1&gt;.
<P>
 
ValidPath( )
<P>
Syntax: ValidPath(&lt;expC&gt;)
<P>
On the Macintosh, the ValidPath( ) function always returns .T.
regardless of the path passed to it. This function is included in
FoxTools for cross-platform compatibility with FoxPro for Windows.
<P>
&lt;expC&gt;
<PRE>   Specifies the path:filename.

</PRE> 
WordNum( )
<P>
Syntax: WordNum(&lt;expC1&gt;, &lt;expN&gt;[, &lt;expC2&gt;])
<P>
The WordNum( ) function returns the specified word in the string
&lt;expC1&gt;. The words are delimited by the optional parameter &lt;expC2&gt;. If
&lt;expC2&gt; is not included, WordNum( ) assumes that words are delimited
by spaces and tabs.
<P>
&lt;expC1&gt;
<PRE>   Specifies the string of words.

</PRE>&lt;expN&gt;
<PRE>   Specifies the numeric position of the word to be returned. &lt;expN&gt; =
</PRE>3 would return the third word in &lt;expC1&gt; or a null string if &lt;expC1&gt;
contains fewer than three words.
<P>
[, &lt;expC2&gt;]
<PRE>   Specifies the string of word delimiters. If &lt;expC2&gt; is not used,
</PRE>then the default delimiters are assumed to be spaces and tabs.
<P>
 
Words( )
<P>
Syntax: Words(&lt;expC1&gt;[, &lt;expC2&gt;])
<P>
The Words( ) function counts the number of words in a string. Words
are delimited by the optional parameter &lt;expC2&gt;. If &lt;expC2&gt; is not
supplied, then words are delimited by spaces and tabs. Words( )
returns the number of words in &lt;expC1&gt;.
<P>
&lt;expC1&gt;
<PRE>   Specifies the string of words to be counted.

</PRE>[, &lt;expC2&gt;]
<PRE>   Specifies the word delimiters. You can include more than one
</PRE>delimiter in &lt;expC2&gt;.
<P>
 
<PRE>                       **End of Readme**
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxMac 2.60a<BR>
KBCategory: kbreadme kbprg<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
