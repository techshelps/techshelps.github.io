

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Play an AVI File w/ an API Call to 16-bit Mmsystem.dll </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136763">
<META NAME="KBModify" CONTENT="1996/10/18">
<META NAME="KBCreate" CONTENT="1995/09/13">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  There are several ways to play AVI (audio-visual interleave) files from Visual FoxPro. These include:   - Placing the AVI file in a General field and then activating it.   - Using a Custom control designed to play MCI (media control interface)    d...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYA,QAB5,QACI,QAB9,QA7O,QBV8,QAOE,QAMN,QBWS,QAIB,QAH4,QARM,QBXT,QBBI,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Play an AVI File w/ an API Call to 16-bit Mmsystem.dll</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136763</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are several ways to play AVI (audio-visual interleave) files from
Visual FoxPro. These include:

<UL><LI>Placing the AVI file in a General field and then activating it.

<LI>Using a Custom control designed to play MCI (media control interface)
   devices.

<LI>Calling a Windows API function directly that will play the file for you.
<P>
</UL>The last technique, although more involved, gives the developer much more
control over how the AVI file will appear during playback. This article
explains how to play an AVI file using API functions contained in the
Windows 16-bit Mmsystem.dll file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The API function MCIEXECUTE can be used to access a variety of MCI devices
including those required to play AVI files. MCIEXECUTE is located in the
Windows file MMSYSTEM.DLL (typically located in the Windows System
directory). Since MMSYSTEM is a 16 bit Dynamic Link Library, you must use
the REGFN and CALLFN statements in FOXTOOLS.FLL to register this function
(the DECLARE statement in Visual FoxPro can only be used with 32 bit
DLL's).
<P>
Once the MCIEXECUTE function has been registered, you can use it to send a
variety of MCI commands to open, play and close an AVI file. The syntax of
the MCI command string allows you to control many attributes of the AVI
playback window such as it's size, position, speed and direction (forward
or reverse).
<P>
The following procedure describes how to create a Form that can be used to
play an AVI file.

<OL><P><LI>Open or switch to Visual FoxPro and open a new Form.

<P><LI>Place the following code in the INIT event of the form:
<P>
<P><PRE>     PUBLIC MCIEXE
     SET LIBRARY TO FOXTOOLS.FLL
     MCIEXE = REGFN("MCIExecute" ,"C","I", "MMSYSTEM.DLL") &amp;&amp; Registers ;
     the MCIEXECUTE API function using FOXTOOLS.FLL
</PRE>
<P><LI>Create a Command Button on the Form and place the following code in the
   click event of the button (you can make the Caption of the Button read
   something like "Play AVI File"):
<P>
<P><PRE>     cAVIFile = SYS(2004) + "TEST.AVI" &amp;&amp; Specifies the path to, and ;
     the name of the AVI file to be played
     nRESULT = CALLFN(MCIEXE, "open " + cAVIFile + " TYPE AVIVIDEO alias ;
     wind style popup") &amp;&amp; Opens an instance of the MCI device type;
     AVIVIDEO and gives it the alias name 'wind'
     nRESULT = CALLFN(MCIEXE, "play wind wait") &amp;&amp; Plays the AVI file ;
     suspending further MCI command strings until this one is complete
     nRESULT = CALLFN(MCIEXE,"close wind") &amp;&amp; Closes the instance of the ;
     MCI device driver specified by the alias 'wind'
</PRE><P>
</OL>NOTE: The above code assumes that the AVI file to be played is called
TEST.AVI and is located in the Visual FoxPro directory. You should modify
this line appropriately so that the variable AVIFILE will contain a string
that contains the complete path and file name of the AVI file to be played.
If the MCIEXECUTE is executed successfully, nRESULT will be 1.

<OL><P><LI>Save and run the Form. Note that the AVI file will play when you click
   the Command Button created in step 3 above.
<P>
</OL>Now that you have successfully played an AVI file from Visual FoxPro, there
<PRE> are a number of things you can do to control how the playback window
</PRE></OL>appears. For example adding the line:
<P>
<PRE>     nRESULT = CALLFN(MCIEXE, "put wind window at 300 200 164 147")

</PRE>just prior to the line:
<P>
<PRE>     nRESULT = CALLFN(MCIEXE, "play wind wait")

</PRE>in the click event of the Command Button allows you to control where the
playback window will appear, and what it's dimensions will be. In this
example the upper left hand corner of the window will be at pixel position
300, 200 (where the upper left hand corner of the screen is the origin of
0,0) and will have a width of 164 pixels and a height of 147 pixels.
<P>
Another example that demonstrates modifying the play back window is:
<P>
<PRE>     nRESULT = CALLFN(MCIEXE, "SET WIND SPEED 500")

</PRE>Adding this line immediately prior to the line:
<P>
<PRE>     nRESULT = CALLFN(MCIEXE, "play wind wait")

</PRE>in the click event of the Command Button allows you to control the speed at
which the AVI file will play. In this example it will play a one half of
its original speed (1 second to 500 milliseconds).
<P>
You can also control the direction in which the AVI file will play. Replace
the code in the Click event of the Command Button with the following to
demonstrate this ability:
<P>
<PRE>     cAVIFile = SYS(2004) + "TEST.AVI" &amp;&amp; Specifies the path to, and ;
     the name of the AVI file to be played
     nRESULT = CALLFN(MCIEXE, "open " + cAVIFile + " TYPE AVIVIDEO alias ;
     wind style popup") &amp;&amp; Opens an instance of the MCI device type;
     AVIVIDEO and gives it the alias name 'wind'
     nRESULT = CALLFN(MCIEXE, "SET wind TIME FORMAT MILLISECONDS") &amp;&amp; Sets;
     the playback format to milliseconds (as opposed to frames)
     nRESULT = CALLFN(MCIEXE, "PLAY wind WINDOW FROM 5000 TO 0 WAIT") ;
     &amp;&amp; Note that the above line specifies to play the AVI file from time ;
     position 5000 (milliseconds) to time position 0 (Beginning of the ;
     file). If your AVI file is less than 5000 milliseconds in length, ;
     adjust this line accordingly
     nRESULT = CALLFN(MCIEXE,"close wind") &amp;&amp; Closes the instance of the ;
     MCI device driver specified by the alias 'wind'

</PRE>There are many other things you can do to control the playback of AVI files
using MCI Command Strings. For more information on these see Appendix F of
the Microsoft Video for Windows User's Guide.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgFoxtools<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
