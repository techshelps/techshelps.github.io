

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use the Caption Fields of a Table in a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130997">
<META NAME="KBModify" CONTENT="1996/04/04">
<META NAME="KBCreate" CONTENT="1995/05/31">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visual FoxPro's database offers some nice enhancements for developers. One such enhancement is the ability to use a table's caption property to hold the name of a field. Then you can reference the field caption property by using DBGETPROP to displa...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMB,QA7O,QA7N,QAH4,QAC2,QAGB,QAPN,QAUJ,QBV4,QAEF,QBT6,QA4H,QAHP,QAEB,QARM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use the Caption Fields of a Table in a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 4, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130997</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual FoxPro's database offers some nice enhancements for developers. One
such enhancement is the ability to use a table's caption property to hold
the name of a field. Then you can reference the field caption property by
using DBGETPROP to display the field description or name in a label on a
form instead of having to enter this information manually in the caption
property of the label.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The premise behind this concept is this: Each field in a table has an
associated caption property. This caption property can hold whatever text
you would like to put in it, including the English text describing or
naming the field.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following code demonstrates the behavior outlined in this article. The
code has been documented so you can follow along when it executes.
<P>
**========================================================**
<PRE>** Program name: CAPTEST                                  **
** Purpose     : This program demonstrates how to pro-    **
**               gramatically use the caption property of **
**               a field in a table                       **
</PRE>**========================================================**
SET SAFETY OFF
CLOSE ALL
CLEAR
CREATE DATABASE captest
CREATE TABLE cust (Cust_ID C(5), Cust_Name C(20))
INSERT INTO cust (Cust_ID, Cust_Name) Values ("00001","Acme Inc")
CLOSE ALL
OPEN DATABASE captest
USE cust
<P>
**--------------------------------------------------------**
<PRE>** This code is setting the caption property for the 2    **
** fields in the cust table.                              **
</PRE>**--------------------------------------------------------**
=DBSETPROP("Cust.Cust_ID","FIELD","CAPTION","Customer ID")
=DBSETPROP("Cust.Cust_Name","FIELD","CAPTION","Customer Name")
<P>
**--------------------------------------------------------**
<PRE>** This block of code creates the form for the display.   **
</PRE>**--------------------------------------------------------**
frmMyForm = CREATEOBJECT('Form')
<PRE>frmMyForm.Width      = 450
frmMyForm.Height     = 100
frmMyForm.Caption    = "Caption Test"
</PRE>frmMyForm.AutoCenter =.T.
<P>
**-------------------------------------------------------**
** This code adds the label and text box objects for the **
<PRE>** customer id information.                              **
</PRE>**-------------------------------------------------------**
frmMyForm.AddObject('lblCustID','lblCust_ID')
frmMyForm.AddObject('fldCustID','fldCust_ID')
<P>
**-------------------------------------------------------**
** This code adds the label and text box objects for the **
<PRE>** customer name information.                            **
</PRE>**-------------------------------------------------------**
frmMyForm.AddObject('lblCustName','lblCust_Name')
frmMyForm.AddObject('fldCustName','fldCust_Name')
<P>
**-------------------------------------------------------**
<PRE>** Add a quit button                                     **
</PRE>**-------------------------------------------------------**
frmMyForm.AddObject('cmdQuit','cmdQuitButton')
<P>
<PRE>frmMyForm.SHOW                   &amp;&amp; Display the form
READ EVENTS                      &amp;&amp; Start event processing
</PRE>CLOSE ALL
ERASE Cust.dbf
ERASE Captest.dbc
ERASE Captest.dbt
SET SAFETY ON
<P>
**-------------------------------------------------------**
** This is the class definition for the customer ID in-  **
<PRE>** formation. The caption for the label should be de-    **
</PRE>** rived from the table itself. This is the example re-  **
<PRE>** ferred to in the article. The name of the field and   **
</PRE>** its definition are stored together in the table. This **
** way, if you decide to change the name of the field in **
** the table, you can also just change the caption while **
** you're there and that change will be reflected on your**
<PRE>** form.                                                 **
</PRE>**-------------------------------------------------------**
DEFINE CLASS lblCust_ID as label
<PRE>  Width   = 80
  Left    = 10
  Top     = 22
  Visible = .T.
  Caption = DBGETPROP("Cust.Cust_id","FIELD","CAPTION")
</PRE>ENDDEFINE
<P>
DEFINE CLASS fldCust_ID as textbox
<PRE>  Visible = .T.
  Left    = 100
  Top     = 20
  Width   = 20
  ControlSource=Cust.Cust_ID
</PRE>ENDDEFINE
<P>
**-------------------------------------------------------**
<PRE>** Class definition for the customer name information.   **
</PRE>**-------------------------------------------------------**
DEFINE CLASS lblCust_Name as label
<PRE>  Width   = 100
  Left    = 140
  Top     = 22
  Visible = .T.
  Caption = DBGETPROP("Cust.Cust_Name","FIELD","CAPTION")
</PRE>ENDDEFINE
<P>
DEFINE CLASS fldCust_Name as textbox
<PRE>  Visible = .T.
  Left    = 260
  Top     = 20
  Width   = 140
  ControlSource=Cust.Cust_Name
</PRE>ENDDEFINE
<P>
DEFINE CLASS cmdQuitButton AS CommandButton  &amp;&amp; Create command button
<PRE>    Caption = '\&lt;Quit'       &amp;&amp; Caption on the command button
    Cancel  = .T.            &amp;&amp; Default Cancel command button (Esc)
    Left    = 175            &amp;&amp; Command button column
    Top     = 60             &amp;&amp; Command button row
    Height  = 25             &amp;&amp; Command button height
    Visible = .T.

    PROCEDURE Click
      CLEAR EVENTS           &amp;&amp; Stop event processing, close Form
</PRE>ENDDEFINE
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin Caption DBC<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: FxtoolFormdes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 4, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
