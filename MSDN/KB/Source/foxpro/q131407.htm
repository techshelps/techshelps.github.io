

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Check for Long File Names in Windows 3.x w/ Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131407">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/06/11">
<META NAME="Keywords" CONTENT="kbnetwork kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When you connect to a Windows NT server and try to access a file that has a long file name, Windows version 3.x uses the PC-NFS standards to truncate the name of the file to eight characters placing tilde (~) in the seventh position followed by a n...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAFI,QAUD,QABI,QAH4,QABH,QDL9,QBWQ,QBWO,QBWN,QBE7,QBE6,QAUJ,QAHD,QALW,QBWP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Check for Long File Names in Windows 3.x w/ Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131407</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you connect to a Windows NT server and try to access a file that has a
long file name, Windows version 3.x uses the PC-NFS standards to truncate
the name of the file to eight characters placing tilde (~) in the seventh
position followed by a number.
<P>
Developers can use the generic code listed in this article to make sure no
long file names exist on the server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: The following code returns TRUE (.T.) if no long file names exist on
the default directory. Otherwise, it returns FALSE (.F.).
<P>
<PRE>   SET DEFAULT TO &lt;NET DRIVE&gt;:&lt;PATH&gt;
   X=CREATEOBJECT("CustTrackLongName")
   Do While (X.FINDLONG())
     .
     .
   &lt;REST OF CODE TO MODIFY FILES&gt;
     .
     .
   ENDDO

   *********************************************
   *   This is a class that will track         *
   *   any long file name  in the default      *
   *   directory.                            *
   *   The class define is a property that is  *
   *   set to true if no long file names       *
   *   exist and false if a long file name     *
   *   does exist. In addition, the class      *
   *   defines a member(method) called         *
   *   FindLong that will check to see         *
   *   if a long filename was returned by the  *
   *   ADIR function.                        *
   *                                           *
   * Algorithm:                                *
   *      Input/Parameters:    NONE            *
   *      Output/Return Value: .T. No LFN      *
   *                           .F. LFN         *
   *LFN=Long File Name                         *
   *********************************************
   DEFINE CLASS CustTrackLongName AS Custom
     Flag=.T. &amp;&amp;New property
     PROCEDURE FindLong
        iDirLength=ADIR(aMyarray)
        DIMENSION aiNewarray(iDirLength)
        FOR i=1 TO iDirLength
           aiNewarray(i)=aMyarray(i,1)
           Temp=aiNewarray(i)
           TempLen=LEN(ALLTRIM(TEMP))
           cOneChar=SUBSTR(Temp,7,1)  &amp;&amp; read the 7th position
                                      &amp;&amp; for ~
                   IF cOneChar="~"
                         This.Flag=.F.
                         EXIT
                   ENDIF
        NEXT I
        IF This.Flag=.F.
          RETURN .F.
        Else
          Return .T.
        ENDIF
     ENDPROC
   ENDDEFINE
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbnetwork kbcode<BR>
KBSubcategory: FxnetworkWinnt<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
