

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Add Items to a Multiple-Column Combo Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q137183">
<META NAME="KBModify" CONTENT="1995/09/29">
<META NAME="KBCreate" CONTENT="1995/09/21">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Combo boxes are designed so that new items can be added to the list or existing items can be selected from the list. You can do the same thing with multiple-column combo boxes. This article shows you how.  MORE INFORMATION  Step-by-Step Procedure  ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE1,QBV3,QAPN,QAH4,QACI,QAHP,QBVV,QBXS,QA5V,QAKD,QAI4,QAGB,QADX,QBWS,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Add Items to a Multiple-Column Combo Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 29, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q137183</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Combo boxes are designed so that new items can be added to the list or
existing items can be selected from the list. You can do the same thing
with multiple-column combo boxes. This article shows you how.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Procedure</h3>
 

<OL><P><LI>Create a new form and place a combo box on it.

<P><LI>Add the Orders table from the Testdata database to the data environment.

<P><LI>Set the following properties for the combo box:
<P>
<PRE>   Property        Value
   -------------------------------------
   Style           0 - Dropdown Combo
   RowSourceType   0 - None
   RowSource       (should be empty)
   ColumnCount     2
   ColumnWidth     50,120
   BoundColumn     1 (this is the default)

   RowSourceType must be set to 0 and RowSource must be empty when items
   are added to the combo box programmatically.

</PRE><P><LI>Place the following code in the Init event of the combo box:
<P>
<PRE>   SET EXACT ON   &amp;&amp; Comparison done in Valid may be comparing blanks
   SELECT orders
   DO WHILE recno()&lt;10   &amp;&amp; Fill the combo box with the first 10 records

      ThisForm.Combo1.AddItem(order_id,This.ListCount+1,1)
      ThisForm.Combo1.AddListItem(to_country,This.ListCount,2)
      SKIP

   ENDDO
   This.Value=This.List(1)  &amp;&amp; Initialize the value of the combo box

   ListCount is initially 0 because no items are contained in the list. The
   AddItem method places Order_id in column one. ListCount+1 indicates the
   first row added. After the AddItem method is called, ListCount is 1. The
   AddListItem method adds To_country to column two of row one.

</PRE><P><LI>Place the following code in the Valid event of the combo box to add new
   entries to the list when the form is running:
<P>
   in_list=.F.
   IF AT(",",This.DisplayValue)&gt;0
<P><PRE>      first=ALLTRIM(LEFT(This.DisplayValue,at(",",This.DisplayValue)-1))
      second=ALLTRIM(RIGHT(This.DisplayValue,LEN(This.DisplayValue);
<PRE></PRE>         -AT(",",This.DisplayValue)))
   ELSE
      first=ALLTRIM(This.DisplayValue)
   ENDIF

   FOR I= 1 to This.ListCount
     IF ALLTRIM(first)=ALLTRIM(This.List(I))
       in_list=.T.
       =MESSAGEBOX("Item number is already in list,"+chr(13)+ ;
          "         item not entered","STOP")
     ENDIF
   ENDFOR

   IF !in_list
     IF AT(",",This.DisplayValue)=0
       =MESSAGEBOX("Comma followed by description needed,"+chr(13)+ ;
          "        item not entered","STOP")
     ELSE
       This.AddItem(first,This.ListCount+1,1)
       This.AddListItem(second,This.ListCount,2)
       This.Value=""
     ENDIF
   ENDIF

   In the For loop, This.DisplayValue contains the current entry in the
   combo box. This.Value has not yet been assigned. If This.DisplayValue is
   equal to some value already in the combo box list, In_list is set to
   True and the next section of code is not run. If it is not found in
   the list, then the entry in the combo box is parsed based on a comma
   placed between what would be the columns one and two. The parsed items
   are then added to the list by calling the AddItem and AddListitem
   methods. This.List(I) contains only the values in column one because
   the BoundColumn is 1.

</PRE><P><LI>Run the form. Select items in the list, and add new items to the list
   by entering the Order_id followed by a comma and the to_country.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 listbox VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 29, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
