

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How OptionGroup Buttons Behave </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131838">
<META NAME="KBModify" CONTENT="1995/07/28">
<META NAME="KBCreate" CONTENT="1995/06/21">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article describes how OptionGroup buttons function.  MORE INFORMATION  Determining Which Option Button Is Clicked in an Option Group ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAPN,QBWS,QAHP,QAW6,QA5D,QBUN,QAJD,QAGX,QAG9,QAGI,QANS,QABG,QACI,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How OptionGroup Buttons Behave</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 28, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131838</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how OptionGroup buttons function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Determining Which Option Button Is Clicked in an Option Group</h3>
 
<P>
With FoxPro version 2.x, you could determine which radio button was clicked
by setting up a case structure to return the number of the clicked radio
button.
<P>
In Visual FoxPro, radio buttons are called OptionGroup buttons, and in most
cases, you no longer need a case structure to determine which option was
clicked. Each OptionGroup button in the group can respond to a click event
independently.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a new form in Visual FoxPro. Using the OptionGroup tool, place a
   set (two is the default) of OptionGroup buttons on the form.

<P><LI>Double-click the OptionGroup object to bring up the code editor, and
   click Option1 so that you can edit the code for the events associated
   with the option button. Select the Click procedure. In the code editing
   window, type:
<P>
   Wait window "option button 1"

<P><LI>On the Object menu, click Option2. Then select the Click procedure. In
   the code editing window, type:
<P>
   Wait window "option button 2"

<P><LI>Run the form, and click the different option buttons. You should see the
   different wait windows activate with the appropriate text for each
   button.
<P>
</OL><h3>Calling Parent Code</h3>
 
<P>
It is possible to encapsulate code even further by using the concept of an
parent object. Option buttons are part of an OptionGroup class, so the
OptionGroup object is called the parent or the container of the buttons.
Messages can be sent to a parent object by prefacing the method call with
this.parent.
<P>
In the following example, a set of OptionGroup buttons send messages to the
Click method of the OptionGroup container (parent object):

<OL><P><LI>Create a new form.

<P><LI>Place an OptionGroup object on the form, and change the button count
   property to 3.

<P><LI>In each option button's Click procedure, place this code:
<P>
   this.parent.click

<P><LI>Change the Caption and Name property of the three buttons to Red, Green,
   and Blue.

<P><LI>Place the following code in the Click procedure of the OptionGroup
   object itself:
<P>
   do case
   case this.value='red'
<PRE>        thisform.backcolor=rgb(255,0,0)
   case this.value='green'
        thisform.backcolor=rgb(0,255,0)
   case this.value='blue'
        thisform.backcolor=rgb(0,255,0)
   endcase

</PRE><P><LI>Set the Value property of the OptionGroup object to "" (an empty
   string), so it is created (instantiated) with a character data type.

<P><LI>Run the form.

<P><LI>Click the different option buttons, and observe the behaviors.
<P>
</OL>The individual buttons call the parent object's Click procedure. The parent
object in this case is the OptionGroup container. This code checks the
Value property and determines, by using the case structure, which values to
use when setting the form's background color.
<P>
<P><h3>Calling Button Code from the Parent</h3>
 
<P>
To run a given button's code from the OptionGroup object, refer to the
event for that particular button. For example, the Click event of the
OptionGroup object could run Option1 button's code with this code:
<P>
<PRE>   this.option1.click

</PRE></OL>This causes the code in the Click procedure of the Option1 button to run
whenever the user clicks the option group frame instead of an actual
button. Of course, the code in the Option1 Click procedure also runs when
the user clicks the Option1 button directly. But even if another button had
the focus, and the user clicks within the frame of the OptionGroup
container, the code for the Option1 button is run.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 28, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
