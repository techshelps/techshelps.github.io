

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Implement a MessageFilter in VFP Using Active Messaging </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q175044">
<META NAME="KBModify" CONTENT="1997/10/14">
<META NAME="KBCreate" CONTENT="1997/10/13">
<META NAME="Keywords" CONTENT="vfoxwin ActMsg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Many FoxPro developers may not be aware that the Active Messaging library exists for them to use as an extremely robust alternative to canned MAPI controls. This article is designed as part of a short (non-interdependent) series intended to provide...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYC,QAEV,QAV5,QAB5,QAPN,QBHQ,QA6A,QALQ,QA62,QABA,QAVX,QAVW,QAPF,QAL7,QAH6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Implement a MessageFilter in VFP Using Active Messaging</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q175044</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0, 5.0a
<LI>Extended Messaging Application Programming Interface (MAPI), version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Many FoxPro developers may not be aware that the Active Messaging library
exists for them to use as an extremely robust alternative to canned MAPI
controls. This article is designed as part of a short (non-interdependent)
series intended to provide FoxPro developers with information, development
tips, and useful snippets about the Microsoft Active Messaging Library.
<P>
This article provides an introductory overview of working with the
Session's MessageFilter object by providing a short code snippet
demonstrating how to implement a MessageFilter and setting a few of the
filtering attributes available.
<P>
For additional information, on where to acquire the Active Messaging
library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../MAPI/Q171440.htm">Q171440</A></B>
   TITLE     : Where to Acquire the Active Messaging Library

</PRE><h2>MORE INFORMATION</h2>
 
<P>
Being a database developer, you are most likely aware of both the concept
and benefits of applying filters to tables in order to process only a set
of records that meet a certain criteria. The same concept applies equally
well to Messages (for example: I want to see only unread messages, or only
messages from a certain person, ...). The following code sample
demonstrates how to implement this functionality in Visual FoxPro using the
Active Messaging library:
<P>
<PRE>   * AM_MessageFilter.PRG
   * --------------------
   *
   *Create a MAPI Session object then Logon. The Logon dialog can be
   *bypassed by providing a valid ProfileName as the first parameter
   *(as a string) to the Logon Method as seen below.
   objSession = CREATEOBJECT("mapi.session")
   objSession.Logon    &amp;&amp;objSession.Logon("YourProfileName")

   *Instantiate a MessageFilter Object on the Inbox's Messages collection
   objMsgColl = objSession.Inbox.Messages
   objMsgFilter = objMsgColl.Filter

   *Setup the criteria for the MessageFilter
   objMsgFilter.Text = "test test"
   objMsgFilter.Unread = .T.  &amp;&amp; Filter for unread messages

   *By default the two conditions noted above are logically ANDed, this
   *can be changed however to a logical OR instead by uncommenting the
   *next line
   *objMsgFilter.Or = .T.

   *Message filter is now specified; ready for display loop
   FOR EACH objMess IN objMsgColl &amp;&amp; Operates only on messages post filter
      MESSAGEBOX("Message not read: " + objMess.Subject)
   NEXT

   *Clean up then bail
   objSession.Logoff
   RELEASE objMessage, objMsgFilter, objMsgColl, objSession

</PRE>A final note: If you intend to apply the MessageFilter for only a specific
task then continue processing as normal with the full Messages Collection
available, you MUST be careful and release both the MessageFilter and
refresh the Messages Collection. While this sounds obvious enough when
reading it in print, it is a common mistake when using MessageFilters.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Generic information on Active Messaging can be found on the MSDN, or in the
Olemsg.hlp file, which can be found by following the directions in the
Microsoft Knowledge Base Article <B><A HREF="../MAPI/Q171440.htm">Q171440</A></B>, referenced earlier in this
article.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: Active Messaging<BR>
Keywords          : vfoxwin ActMsg kbcode<BR>
Version           : WINDOWS:1.0,3.0,3.0b,5.0,5.0a<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
