

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a Table Using FoxPro Connectivity Kit </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113752">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/04/13">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  By using the FoxPro Connectivity Kit's DBExec() command, you can create a table on the native platform that you are connecting to.  MORE INFORMATION  Using the standard SQL CREATE TABLE command with the Connectivity Kit's DBExec() command, you can ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QABM,QAZV,QAB9,QADN,QAKP,QAUD,QAB4,QAAP,QBV8,QBXR,QBXS,QARR,QBHQ,QBG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create a Table Using FoxPro Connectivity Kit</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113752</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
<LI>Microsoft FoxPro for MS-DOS, versions 2.5x, 2.6x
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
By using the FoxPro Connectivity Kit's DBExec() command, you can create a
table on the native platform that you are connecting to.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using the standard SQL CREATE TABLE command with the Connectivity Kit's
DBExec() command, you can create a new table on the native platform.
"Native platform" refers to the DBMS that you are connecting to. In the
example below, the source is SQL Server and the code example creates a
table called testtab in the pubs database on the SQL Server machine.
<P>
With minor modifications, this same code can be used to create a new table
called testtab on an Oracle server or on any other data source that may be
in use.
<P>
NOTE: If you have problems running the following code in FoxPro for MS-DOS,
please see the following article(s) in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q112482.htm">Q112482</A></B>
   TITLE     : How to Make an MS-DOS Level SQL Server Connection

</PRE><h3>Code Sample for FoxPro 2.x</h3>
 
<P>
<PRE>   *****SET THE LIBRARY AND INITIALIZE VARS
   IF _DOS
      SET LIBRARY TO SYS(2004)+"fpsql.plb"
   ELSE
      SET LIBRARY TO SYS(2004)+"fpsql.fll"
   ENDIF

   PUBLIC errval
   PUBLIC errmsg
   PUBLIC handle
   PUBLIC do_more

   errval=0
   errmsg=' '
   do_more=.T.

   *****SOURCE INFORMATION
   sourcename= 'test'
   user= 'sa'
   passwd=''

   *****CONNECT

   handle=DBConnect(sourcename,user,passwd)
   IF handle &gt; 0
      WAIT WINDOW 'Successfully Connected'
   ELSE
      error=DBError(0,@errmsg,@errval)
      WAIT WINDOW STR(error)+' '+STR(errval)+' '+errmsg
      do_more=.F.
   ENDIF

   IF do_more=.T.
      *****SET SESSION DEFAULTS

      =DBSetOpt(handle,'Asynchronous',0)
      =DBSetOpt(handle,'BatchMode',1)
      =DBSetOpt(handle,'ConnTimeout',0)
      =DBSetOpt(handle,'Transact',1)
      =DBSetOpt(handle,'UseTable',0)

      *****USE THE PUBS DATABASE ON SQL SERVER; On SQL Server
      *****it is necessary to open an existing database (pubs)
      *****in order to create a table.  In other words, databases
      *****on SQL Server contain tables and we are creating a table
      *****that will be part of the pubs database.

      err=DBExec(handle,'use pubs')
      DO errhand WITH err,'USE PUBS'

      *****CREATE_IT--CREATES TESTTAB TABLE ON SQL SERVER
      *****IN THE PUBS DATABASE.

      DO create_it

      *****DISCONNECT

      err=DBDisconn(handle)
      DO errhand with err,"DBDisconn()"
      SET LIBRARY TO
      CLOSE ALL
   ENDIF

   *****Simple Error Handler Program
   PROCEDURE errhand
   PARAMETERS err,command
      IF err &gt; 0
         WAIT WINDOW ALLTRIM(UPPER(command))+" Completed Successfully"
      ELSE
         ? UPPER(ALLTRIM(command))+" NOT Completed Successfully"
         error=DBError(handle,@errmsg,@errval)
         ? ALLTRIM(STR(error))+" "+ALLTRIM(STR(errval))+" " ;
           +ALLTRIM(errmsg)
      ENDIF
   RETURN

   *****THE DBExec() FUNCTION IS USED TO CREATE A TABLE
   PROCEDURE create_it
      createcomm= "CREATE TABLE testtab "+ ;
         "(ID char(4), NAME char(45), STATE char(2), ZIP char(10))"
      err=DBExec(handle,createcomm)
      DO errhand WITH err,"DBExec(handle,"+createcomm+")"
      IF err &gt; 0
         WAIT WINDOW 'THE CREATE Command Worked.'
      ENDIF

   RETURN
   * End of Code

</PRE><h3>Code Sample for Visual FoxPro</h3>
 
<P>
<PRE>   *****SET THE LIBRARY AND INITIALIZE VARS
   PUBLIC errval
   PUBLIC errmsg
   PUBLIC handle
   PUBLIC do_more

   errval=0
   errmsg=' '
   do_more=.T.

   *****SOURCE INFORMATION
   sourcename= 'test'
   user= 'sa'
   passwd=''

   *****CONNECT

   handle=sqlConnect(sourcename,user,passwd)
   IF handle &gt; 0
      WAIT WINDOW 'Successfully Connected'
   ELSE
      if !(type('aTemp')="U")
      release aTemp
      endif
      aerror(aTemp)
      errval=aTemp(1,1)
      errmsg=aTemp(1,2)
      WAIT WINDOW STR(errval)+': '+errmsg
      do_more=.F.
   ENDIF

   IF do_more=.T.

      *****USE THE PUBS DATABASE ON SQL SERVER; On SQL Server
      *****it is necessary to open an existing database (pubs)
      *****in order to create a table.  In other words, databases
      *****on SQL Server contain tables and we are creating a table
      *****that will be part of the pubs database.

      err=sqlexec(handle,'use pubs')
      DO errhand WITH err,'USE PUBS'

      *****CREATE_IT--CREATES TESTTAB TABLE ON SQL SERVER
      *****IN THE PUBS DATABASE.

      DO create_it

      *****DISCONNECT

      err=SQLDisconnect(handle)
      DO errhand with err,"SQLDisconnect()"
      CLOSE ALL
   ENDIF

   *****Simple Error Handler Program
   PROCEDURE errhand
   PARAMETERS err,command
      IF err &gt; 0
         WAIT WINDOW ALLTRIM(UPPER(command))+" Completed Successfully"
      ELSE
         ? UPPER(ALLTRIM(command))+" NOT Completed Successfully"
*         error=SQLError(handle,@errmsg,@errval)
*         ? ALLTRIM(STR(error))+" "+ALLTRIM(STR(errval))+" " ;
*           +ALLTRIM(errmsg)

      if !(type('aTemp')="U")
      release aTemp
      endif
      aerror(aTemp)
      errval=aTemp(1,1)
      errmsg=aTemp(1,2)
      WAIT WINDOW STR(errval)+': '+errmsg
      do_more=.F.
     ENDIF
   RETURN

   *****THE SQLExec() FUNCTION IS USED TO CREATE A TABLE
   PROCEDURE create_it
      createcomm= "CREATE TABLE testtab "+ ;
         "(ID char(4), NAME char(45), STATE char(2), ZIP char(10))"
      err=SQLExec(handle,createcomm)
      DO errhand WITH err,"SQLExec(handle,"+createcomm+")"
      IF err &gt; 0
         WAIT WINDOW 'The CREATE Command Worked.'
      ENDIF

   RETURN
   * End of Code
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxDos FoxWin 2.50 2.50a 2.50b<BR>
2.60 ODBC CK<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: FxtoolCk<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
