

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Remap FoxPro 2.x Connectivity Kit Functions to 3.0 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129754">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/03">
<META NAME="Keywords" CONTENT="kbtool kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visual FoxPro provides the same ability to use SQL Passthrough commands that earlier versions of FoxPro provided. However, the names of the functions have changed somewhat in Visual FoxPro version 3.0, so FoxPro version 2.x code that uses these fun...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB9,QAUD,QAHE,QAY5,QAGX,QBV8,QAH4,QALW,QA56,QA55,QBE7,QBE6,QAUJ,QAH6,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Remap FoxPro 2.x Connectivity Kit Functions to 3.0</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129754</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual FoxPro provides the same ability to use SQL Passthrough commands
that earlier versions of FoxPro provided. However, the names of the
functions have changed somewhat in Visual FoxPro version 3.0, so FoxPro
version 2.x code that uses these functions will no longer work as expected
in Visual FoxPro. This article provides code that re-maps the old function
names to the new function names.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you have a main program file or a procedure file, add this code to it
and call the functions as you normally would. If you do not, you may want
to make a procedure file and use the SET PROCEDURE command to reference
these functions at run time.
<P>
<PRE>   **************************************
   *   Procedure:  DBCANCEL
   *   Remaps dbcancel() -&gt; SQLCANCEL()
   **************************************
   FUNCTION dbcancel
   PARAMETERS nHandle

   h = SQLCANCEL(nHandle)

   RETURN h

   **************************************
   *   Procedure:  DBCOLS
   *   Remaps dbcols() -&gt; SQLCOLUMNS()
   **************************************
   FUNCTION dbcols
   PARAMETERS nHandle, cTable, cColForm, cResultSet

   DO CASE

      CASE PARAMETERS() = 2
         h = SQLCOLUMNS(nHandle, cTable)

      CASE PARAMETERS() = 3
         h = SQLCOLUMNS(nHandle, cTable, cColForm)

      CASE PARAMETERS() = 4
         h = SQLCOLUMNS(nHandle, cTable, cColForm, cResultSet)

   ENDCASE

   RETURN h

   **************************************
   *   Procedure:  DBCONNECT
   *   Remaps dbconnect() -&gt; SQLCONNECT()
   **************************************
   FUNCTION dbconnect
   PARAMETERS DataSource, cUserID, cPass, cCString

   DO CASE

      CASE PARAMETERS() = 3
         h = SQLCONNECT(DataSource, cUserID, cPass)

      CASE PARAMETERS() = 4
         h = SQLCONNECT(DataSource, UserID, cPass, cCString)

   ENDCASE
   RETURN h

   ******************************************
   *   Procedure:  DBDISCONN
   *   Remaps dbdisconn() -&gt; SQLDISCONN()
   ******************************************
   FUNCTION dbdisconn
   PARAMETERS nHandle

   h = SQLDISCONN(nHandle)

   RETURN h

   ******************************************
   *   Procedure:  DBEXEC
   *   Remaps dbexec() -&gt; SQLEXEC
   ******************************************
   FUNCTION dbexec
   PARAMETERS nHandle, cSQLCommand, cCursorName

   DO CASE

      CASE PARAMETERS() = 2
         h = SQLEXEC(nHandle, cSQLCommand)

      CASE PARAMETERS() = 3
         h = SQLEXEC(nHandle, cSQLCommand, cCursorName)

   ENDCASE

   RETURN h

   ******************************************
   *   Procedure:  DBGETOPT
   *   Remaps dbgetopt() -&gt; SQLGETPROP
   ******************************************
   FUNCTION dbgetopt
   PARAMETERS nHandle, cSetting

   h = SQLGETPROP(nHandle, cSetting)

   RETURN h

   *******************************************
   *   Procedure:  DBMORERES
   *   Remaps dbmoreres() -&gt; SQLMORERESULTS
   *******************************************
   FUNCTION dbmoreres
   PARAMETERS nHandle, cExpression

   h = SQLMORERESULTS(nHandle)

   RETURN h

   ******************************************
   *   Procedure:  DBSETOPT
   *   Remaps dbsetopt() -&gt; SQLSETPROP
   ******************************************
   FUNCTION dbsetopt
   PARAMETERS nHandle, cSetting, eExpression

   h = SQLSETPROP(nHandle, cSetting, eExpression)

   RETURN h

   ******************************************
   *   Procedure:  DBTABLES
   *   Remaps dbtables() -&gt; SQLTABLES
   ******************************************
   FUNCTION dbtables
   PARAMETERS nHandle, cTableType, cResultName

   DO CASE

      CASE PARAMETERS() = 2
         h = SQLTABLES(nHandle, cTableType)

      CASE PARAMETERS() = 3
         h = SQLTABLES(nHandle, cTableType, cResultName)

   ENDCASE

   RETURN h

   ***********
   ** \EOF ***
   ***********
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin<BR>
KBCategory: kbtool kbcode<BR>
KBSubcategory: FxtoolCk<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
