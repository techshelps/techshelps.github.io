

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Running JOIN on Three or More Tables is Slow </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163420">
<META NAME="KBModify" CONTENT="1997/10/29">
<META NAME="KBCreate" CONTENT="1997/02/10">
<META NAME="Keywords" CONTENT="buglist5.00 FxprgSql FxprgTable vfoxwin vfpfix5.0a kbusage kbbuglist kbfixlist">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Running a SQL query that joins three or more tables in Visual FoxPro 5.0 is very slow. If Visual FoxPro 3.x is available for testing, this same query performs much faster by comparison. Using the new JOIN syntax with the SQL Select statement is als...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4H,QBMW,QDNC,QDNA,QBWS,QA5V,QA2Q,QA63,QAH4,QAG2,QBFY,QAY2,QAVX,QAVW,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Running JOIN on Three or More Tables is Slow</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 29, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163420</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Running a SQL query that joins three or more tables in Visual FoxPro 5.0 is
very slow. If Visual FoxPro 3.x is available for testing, this same query
performs much faster by comparison. Using the new JOIN syntax with the SQL
Select statement is also slow.
<P>
<P><h2>CAUSE</h2>
 
<P>
One or more of the tables have only one or only a few records that join
with the other tables.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The query speed can usually be increased by using the new SQL Select syntax
in Visual FoxPro 5.0 for JOINS in conjunction with the FORCE keyword.
<P>
Using the sample SQL Select statements from step 3 under the Steps to
Reproduce Behavior section below, the addition of the FORCE keyword makes
the queries run much faster:
<P>
<PRE>      SELECT * FROM FORCE test1 ;
       INNER JOIN test2 ON test2.id = test1.id ;
       INNER JOIN test3 ON test3.id = test2.id

      SELECT * FROM FORCE test1 ;
       INNER JOIN (test2 INNER JOIN test3 ON test3.id = test2.id );
       ON test2.id =test1.id

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. This problem has been fixed in
Visual FoxPro 5.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This problem seems to occur when there is a join of three or more tables
when there are only one or two records in one of the tables or there are
only one or two records that have related records in the other tables. The
tables also have to have a large number of records in them (30,000, 70,000
and 90,000). All of the table join scenarios that can exhibit the problem
are not known.
<P>
If the slow query is allowed to run, it may fill the computer's hard drive
with a large temporary file and the following program error message may be
received:
<P>
<PRE>   There is not enough disk space for c:\temp\12345678.tmp

</PRE><h3>Steps to Reproduce Behavior</h3>
 
<P>
The following steps provide sample code that can be used to reproduce the
problem. Press the Escape key to cancel the query in step 2 when desired.

<OL><P><LI>Place the code below in a program file and run it. The code creates
   three tables that will take up about 6.6 MG of disk space:
<P>
<P><PRE>      CLOSE ALL
      SET ECHO OFF
      SET TALK OFF
      CREATE TABLE test1 (ID C(15),Dummy C(15))
      CREATE TABLE test2 (ID C(15),Dummy C(15))
      CREATE TABLE test3 (ID C(15),Dummy C(15))
      CLOSE ALL
</PRE><P>
<P><PRE>      WAIT WINDOW NOWAIT "filling test1"
      USE test1
      INDEX ON ID TAG ID
      FOR x = 1 TO 71894
      APPEND BLANK
      REPLACE ID WITH SYS(2015)
      NEXT
      GO TOP
      REPLACE NEXT 2 ID WITH "TEST"
</PRE><P>
<P><PRE>      WAIT WINDOW NOWAIT "filling test2"
      USE test2
      INDEX ON ID TAG ID
      FOR x = 1 TO 30622
      APPEND BLANK
      REPLACE ID WITH SYS(2015)
      NEXT
      GO TOP
      REPLACE NEXT 2 ID WITH "TEST"
</PRE><P>
<P><PRE>      WAIT WINDOW NOWAIT "filling test3"
      USE test3
      INDEX ON ID TAG ID
      FOR x = 1 TO 90000
      APPEND BLANK
      REPLACE ID WITH SYS(2015)
      NEXT
      GO TOP
      REPLACE NEXT 2 ID WITH "TEST"
      CLOSE ALL
</PRE>
<P><LI>Run the following query from a program file:
<P>
<P><PRE>      SELECT * FROM test1,test2,test3 ;
       WHERE test1.id=test2.id AND test2.id=test3.id
</PRE>
<P><LI>The following two SQL Select statements can also be used to reproduce
   the problem using the sample data created in step 1 above:
<P>
<P><PRE>      SELECT * FROM test1 ;
       INNER JOIN test2 ON test2.id = test1.id ;
       INNER JOIN test3 ON test3.id = test2.id
</PRE><P>
<P><PRE>      SELECT * FROM test1 ;
       INNER JOIN (test2 INNER JOIN test3 ON test3.id = test2.id );
       ON test2.id =test1.id
</PRE><P>
</OL><h2>REFERENCES</h2>
 
<P>
<P><h2>Microsoft Visual FoxPro "Developer's Guide" version 5.0, pages 214-215</h2>
 
<PRE>Keywords          : buglist5.00 FxprgSql FxprgTable vfoxwin vfpfix5.0a kbusage kbbuglist kbfixlist
Version           : 5.0
Platform          : WINDOWS
Issue type        : kbbug
Solution Type     : kbfix</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 29, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
