

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Using ON ERROR To Debug Applications </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178890">
<META NAME="KBModify" CONTENT="1998/01/09">
<META NAME="KBCreate" CONTENT="1998/01/06">
<META NAME="Keywords" CONTENT="FoxDos FoxMac FoxUnix FoxWin FxenvError FxotherSample FxprgGeneral VFoxMac vfoxwin kbco">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  FoxPro provides the ON ERROR command to allow programmers to trap specific errors that occur within applications. This article describes how to use an error trapping routine that stores relevant debugging information in a FoxPro table.  The code in...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAAP,QAH4,QBFY,QAGU,QAO4,QAKP,QDL9,QBWQ,QBWO,QBWN,QAJH,QA2Q,QBXT,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Using ON ERROR To Debug Applications</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 9, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178890</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Macintosh, versions 2.5b, 2.5c, 2.6a
<LI>Microsoft FoxPro for MS-DOS, versions 2.5, 2.5a, 2.5b, 2.6, 2.6a
<LI>Microsoft FoxPro for UNIX, version 2.6
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, 2.6, 2.6a
<LI>Microsoft Visual FoxPro for Macintosh, version 3.0b
<LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0, 5.0a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
FoxPro provides the ON ERROR command to allow programmers to trap specific
errors that occur within applications. This article describes how to use an
error trapping routine that stores relevant debugging information in a
FoxPro table.
<P>
The code included in this article traps errors that occur within a FoxPro
application and stores the following information to a table:

<UL><LI>The computer name where the error occurred.
<LI>The error number.
<LI>The error message.
<LI>The line of code where the error occurred if the source code is
   available.
<LI>The program file where the error occurred.
<LI>The line number where the error occurred.
<LI>The name of the currently selected table when the error occurred.
<LI>The date and time of the error.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
Faulty syntax and/or logic in an application can result in a wide array of
trappable error conditions. Some of the errors that occur in an application
may not be known until the application has been tested by end users. While
the default FoxPro error message display contains useful information for a
programmer, its appearance may be confusing to an end user. Likewise, end
users usually have little time to carefully note and report errors that
occur while an application is executing. This code may also prove useful in
determining the cause of intermittent errors that occur when no one is
normally present to witness the error.

<OL><P><LI>Create a program called Errutil.prg with the following code.
<P>
<P><PRE>      ON ERROR DO errhand IN errutil ;
      WITH SYS(0), ERROR(), MESSAGE(), MESSAGE(1), ;
      PROGRAM(), LINENO(1), DBF(), DATE(), TIME()
      * End of error trap setup.
</PRE><P>
<P><PRE>      PROCEDURE errhand
      PARAMETER m.machine, m.messgnum, m.messg, m.linecode, ;
<PRE></PRE>         m.callprog, m.inline, m.OPENTABL, m.errdate, ;
         m.errtime
         m.errspace=SELECT()      &amp;&amp; Store current work area.
         m.errorder=ORDER()       &amp;&amp; Store current order.
      IF LEN(ALLTRIM(m.callprog))=0
         m.callprog="Command Line"
        STORE SPACE(0) TO m.linecode
      ENDIF
      outmsgline="Error ; "+m.messg+CHR(13)+"Line "+STR(m.inline)+ ;
           CHR(13)+ ;
          "program name = "+m.callprog+CHR(13)+"Syntax is  :"+m.linecode
      * Visual FoxPro users use =MESSAGEBOX(outmsgline,32+0)
      * MAC uUse the FXALERT() Function in Foxtools.mlb
      * FoxPro For Windows users use the MsgBox() Function in Foxtools.fll
      WAIT WINDOW outmsgline TIMEOUT 5 &amp;&amp; All versions can use this syntax.
        IF !USED("ERRORLOG")
      IF FILE("ERRORLOG.DBF")
         SELECT 0
         USE errorlog
      ELSE
         SELECT 0
         thisversion=VERSION()
         IF LEFT(ALLTRIM(thisversion),6)="Visual"
            * Create Free table for Visual FoxPro Versions
            CREATE TABLE errorlog FREE (machine c(20), messgnum N(4,0), ;
               messg c(70), linecode c(70), callprog c(40), ;
               inline N(6,0), OPENTABL c(25), errdate d, errtime c(8))
         ELSE
               CREATE TABLE errorlog (machine c(20), messgnum N(4,0), ;
                    messg c(70), linecode c(70), callprog c(40), ;
                 inline N(6,0), OPENTABL c(25), errdate d, errtime c(8))
               ENDIF
            ENDIF
        ENDIF
        INSERT INTO errorlog FROM MEMVAR
        SELECT errorlog                  &amp;&amp; Select errorlog table.
        USE                              &amp;&amp; Close errorlog table.
        SELECT (m.errspace)              &amp;&amp; Return to stored work area.
        IF !EMPTY(ALIAS())
      SET ORDER TO (m.errorder)
       ENDIF
      RELEASE ALL LIKE m.messgnum, m.messg, m.linecode, m.callprog, ;
          m.inline
      RETURN

</PRE><P><LI>Create a program called Ztest.prg that contains the following lines of
   code:
<P>
<PRE>      DO errutil          &amp;&amp; Activates ON ERROR routine in Errutil.prg.
      USE c:\noexist.dbf  &amp;&amp; These files should not exist in order to
      DO C:\noexist.prg   &amp;&amp; produce errors for testing purposes.
      ON ERROR            &amp;&amp; Turns off active ON ERROR routine.

</PRE><P><LI>Type the following in the Visual FoxPro Command window:
  
<P><PRE>      Do ZTest.prg.
</PRE>  
   Two Wait windows appear identifying the offending lines of code. This
   information is placed into the Errorlog.dbf file. The windows disappear
   after five seconds.

<P><LI>Activate the Command window, then open and browse the Errorlog table.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
FoxPro Help, search on: "ON ERROR"; "ERROR()"; "MESSAGE()"; "SYS()";
"PROGRAM()"; "DBF()"; "LINENO()"
<P>
 
<PRE>Keywords          : FoxDos FoxMac FoxUnix FoxWin FxenvError FxotherSample FxprgGeneral VFoxMac vfoxwin kbcode
Version           : MACINTOSH:2.5b,2.5c,2.6a,3.0b;MS- DOS:2.5,2.5a,2.5b,2.6,2.6a;UNIX:2.6; WINDOWS:2.5,2.5a,2.5b,2.6,2.6a,3.0,3.0b,5.0,5.0a
Platform          : MACINTOSH MS-DOS UNIX WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 9, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
