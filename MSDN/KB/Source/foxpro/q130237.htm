

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Duplicating READ NOLOCK Functionality in Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130237">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/15">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  READ NOLOCK is no longer required in Visual FoxPro version 3.0.  In version 2.x of FoxPro, all records involved in a read were automatically locked when the record pointer was moved. This caused contention problems in a multiuser situation. The mos...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QA7O,QA4P,QBXS,QBFN,QA56,QA55,QBV8,QAB9,QAMN,QAB5,QA7N,QAPN,QAOE,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Duplicating READ NOLOCK Functionality in Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130237</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
READ NOLOCK is no longer required in Visual FoxPro version 3.0.
<P>
In version 2.x of FoxPro, all records involved in a read were automatically
locked when the record pointer was moved. This caused contention problems
in a multiuser situation. The most common symptom of contention problems
was the failure of a second user to be able to load a screen without
getting a "Record in use by another" error. To avoid problems, many
developers chose to use READ NOLOCK to prevent FoxPro from locking records
automatically.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>The FoxPro Version 2.x Solution</h3>
 
<P>
READ NOLOCK actually performed two separate functions:

<UL><LI>The record(s) involved in the read were not locked until the developer
   issued a SHOW GETS LOCK command.

<LI>The fields on the screen were automatically disabled until the lock
   was obtained.
<P>
</UL><h3>The Visual FoxPro Solution</h3>
 
<P>
Both functions can be duplicated through different commands in Visual
FoxPro.
<P>
To prevent locking a record until edits begin, use buffering. If you want
to lock a record as soon as the edit starts, use pessimistic-row or
pessimistic-table buffering. If you want to lock a record only when a write
is attempted, use optimistic-row or optimistic-table buffering. You no
longer need to place this code in a command button on the form. Buffering
is usually enabled through the form's BUFFERMODE property, or through a
CURSORSETPROP("Buffering") command executed in the form's INIT method.
<P>
Buffering will not enable and disable fields in the same manner as a READ
NOLOCK command. The SETALL method can be used, however, to set the ENABLED
property to .T. or .F. as desired for all controls on a form. The following
command disables every control on a form named frmTEST:
<P>
<PRE>   frmTEST.SETALL("ENABLED",.F.)

</PRE>This code would typically be placed in the click event of a command button
to disable all fields when the record pointer was moved. The command button
would be disabled, along with all fields in the form.
<P>
<P><h3>Points to Consider</h3>
 
<P>
The examples in this article duplicate the functionality of one version 2.x
command (READ NOLOCK) with new version 3.0 commands. You can still use the
READ NOLOCK command in version 3.0; however, by continuing to use the
version 2.x READ commands, you are limiting the functionality of your
application.
<P>
The READ NOLOCK command automatically disables every screen control tied
directly to a field in your .DBF, whether it was a GET field, a list box,
check box, or other control. Controls tied to a memory variable are not
disabled. However, the SETALL() method in Visual FoxPro disables all
controls on the form, including command buttons, whether they are tied to a
field in your table or not. By using this approach, you need to enable
each command button you want to have active.
<P>
The opposite approach is to use the optional third parameter on the SETALL
method to disable only controls of a certain type, such as text boxes, or
to disable individual controls through the control's ENABLED property. You
must prevent Visual FoxPro from locking the record automatically by using
optimistic buffering in conjunction with disabling fields.
<P>
Before deciding which technique to use, determine the desired end result.
If you want to duplicate a version 2.x user interface using Visual FoxPro
3.0, use optimistic buffering and enable and disable controls as required.
<P>
If you want to avoid the locking problems inherent in version 2.x, and it
is acceptable to have all fields enabled as the user enters the form, use
optimistic buffering alone.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information on buffering, please see the Visual FoxPro
"Developer's Guide." For more information on the SETALL method, please see
the information in the Visual FoxPro Help file or in the Visual FoxPro
"Language Reference."
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words:  3.00 VFoxWin<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgMultiuser<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
