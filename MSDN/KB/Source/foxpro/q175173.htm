

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Using Word to Print General Fields in Report Designer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q175173">
<META NAME="KBModify" CONTENT="1997/11/14">
<META NAME="KBCreate" CONTENT="1997/10/15">
<META NAME="Keywords" CONTENT="FxinteropWinword FxprgGeneral vfoxwin kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When using the Report Designer to print a general field that has text inserted into it with a word processor, the OLE bound Control object of the Report Designer has to be sized to be as large as the largest amount of text in the general fields. Th...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QA7O,QA7N,QAH4,QA5V,QDO7,QACI,QAOX,QA9N,QAML,QAY4,QAH7,QAPF,QAMB,QALQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Using Word to Print General Fields in Report Designer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 14, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q175173</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When using the Report Designer to print a general field that has text
inserted into it with a word processor, the OLE bound Control object of the
Report Designer has to be sized to be as large as the largest amount of
text in the general fields. This can present problems if there are multiple
pages of text in the general field. The OLE Bound control can be enlarged
only to the height of a single page in the Report Designer, which is
usually not large enough to print a general field that has more than a page
of data.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using a memo field would be one way to store the data and have it print
correctly in the Report Designer. The problem with this method is that any
formatting such as underlining, bolding, or different font sizes of the
text is not allowed in a memo field. A word processor is needed to format
data in this way and storing it into a general field is the only way to
keep the formatting of the data intact. Instead of using the Report
Designer to print the general field, sending it to a word processor like
Word for Windows will allow all of the data in a general field to be
printed correctly.
<P>
Below are two examples of code that use OLE Automation to call Word and
then use WordBasic or Visual Basic for Applications (VBA) commands to pass
the data to Word. The first example works only with Word 6.0 or Word 95
with any version of Visual FoxPro. The second example works only with Word
97 and Visual FoxPro 5.0 Service Pack (SP) 2. If the error "OLE error code
0x80020005: Type Mismatch." occurs, then look at the following article in
the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE ID: <B><A HREF="../FOXPRO/Q169565.htm">Q169565</A></B>
   TITLE     : Type Mismatch Using OLE Automation to Word 97

</PRE>If using the example that works with Word 6.0 or Word 95 and the following
error occurs, then the data in the general field of the table was inserted
with Word 97:
<P>
<PRE>   OLE Idispatch exception code 269 from Microsoft Word:
   Microsoft Word Err=1269 [ASCII 150] Word cannot edit the object[ASCII
   133]

</PRE>Change to the second example using Visual FoxPro 5.0 SP 2 and Word
97 to pass the data to Word.
<P>
To use the code as is, you need to create a table with field names like
those below:
<P>
<PRE>   Field Name      Type                    Width
   ----------      ---------               -----
   FIRST           Character                15
   LAST            Character                15
   ADDRESS         Character                25
   CITY            Character                15
   STATE           Character                 2
   ZIPCODE         Character                 5
   GEN             General                   4

</PRE>After building the table and adding some data to each character field, make
sure that each general field has been populated by double-clicking on the
general field to open it and selecting the EDIT - INSERT OBJECT menu
options. With the "Create New" button selected, select "Microsoft Word
Document" in the "Object Type" list box and type some data into Word. Close
Word to save the data into the general field.
<P>
The following code works with Visual FoxPro 3.x and 5.x when using Word 6.0
or Word 95. Place the following code into a program (.prg) file and run it.
<P>
<PRE>   ************* Beginning of code. ****************

   PUBLIC oWord
    oWord = CREATEOBJECT("Word.Basic")
    WITH oWord
       .AppShow        &amp;&amp; Makes Word Visible
       .FileNewDefault &amp;&amp; Opens up blank Word document

       * The following Insert commands place the FoxPro fields into
       * the Word document. You can change these commands to place
       * any text in the document.
       * Ensure that the table is already open. If only a portion
       * of records are to be printed, change the EOF() to a certain
       * number so that all of the records do not get processed.
       * Example: DO WHILE RECNO() &lt; 10

       GO TOP

       DO WHILE NOT EOF()
          .Insert("Record: "+ALLTRIM(STR(RECNO())))
            &amp;&amp; The above line shows the record number.
          .InsertPara
          .InsertPara
          .Insert(ALLTRIM(first)+" "+last)   &amp;&amp; Field in the table.
          .InsertPara
          .Insert(address)
          .InsertPara
          .Insert(ALLTRIM(city)+", "+state+"  "+zipcode)
          .InsertPara
          .InsertPara
          .Insert("Contents of the General Field:")
          .InsertPara
          .InsertPara
           KEYBOARD "{ctrl+c} {ctrl+w}" &amp;&amp; Copies and closes the general
                                        &amp;&amp; field to the clipboard.
           MODIFY GENERAL gen           &amp;&amp; This has to be after the
                                        &amp;&amp; KEYBOARD command.
          .EditPaste
          .WordLeft(1,1)
          .EditObject("0")
          .EditSelectAll
          .Editcopy
          .FileClose
          .EditClear
          .EditPaste
          .InsertPara
          .InsertPara
          .InsertPara
           SKIP                     &amp;&amp; Move the record pointer to
                                    &amp;&amp; the next record.
       ENDDO
       .FileSaveAs("c:\mydoc.doc")  &amp;&amp; Saves the Word document as
                                    &amp;&amp; Mydoc.doc.
       .FilePrint
    ENDWITH
   **************** End of code. ****************

</PRE>If using Word 97, Visual FoxPro 5.0 SP 2 is the only version that will run
this code correctly. Place the following code into a program (.prg) file
and run it.
<P>
<PRE>   **************** Beginning of code. **********
   PUBLIC oWord
   oWord = CREATEOBJECT("Word.Application")
   WITH oWord
      .visible=.t.       &amp;&amp; Makes Word Visible
    .documents.add     &amp;&amp; Opens up blank Word document

      * The following Insert commands place the FoxPro fields into
      * the Word document. You can change these commands to place
      * any text in the document.
      * Ensure that the table is already open. If only a portion
      * of records are to be printed, change the EOF() to a certain
      * number so that all of the records do not get processed.
      * Example: DO WHILE RECNO() &lt; 10
      GO TOP
      DO WHILE NOT EOF()

         .Selection.TypeText("Record: "+ALLTRIM(STR(RECNO())))
           &amp;&amp; The above line shows the record number.
         .Selection.TypeParagraph
         .Selection.TypeParagraph
         .Selection.TypeText(ALLTRIM(first)+" "+last)&amp;&amp; Field in the table.
         .Selection.TypeParagraph
         .Selection.TypeText(address)
         .Selection.TypeParagraph
         .Selection.TypeText(ALLTRIM(city)+", "+state+"  "+zipcode)
         .Selection.TypeParagraph
         .Selection.TypeParagraph
         .Selection.TypeText("Contents of the General Field:")
         .Selection.TypeParagraph
         .Selection.TypeParagraph
          KEYBOARD "{ctrl+c} {ctrl+w}" &amp;&amp; Copies and closes the general
                                       &amp;&amp; field to the clipboard.
         MODIFY GENERAL gen           &amp;&amp; This has to be after the
                                       &amp;&amp; KEYBOARD command.
         .Selection.Paste
         .Selection.MoveLeft
         x = .ActiveDocument.Shapes.Count
         .ActiveDocument.Shapes(x).OLEFormat.Edit
         .Selection.Wholestory
         .Selection.Copy
         .ActiveDocument.Close
         .Selection.Delete
         .Selection.EndKey(6)
         .Selection.Paste
         .Selection.TypeParagraph
         .Selection.TypeParagraph
         .Selection.TypeParagraph
          SKIP                     &amp;&amp; Move the record pointer to
      ENDDO
         .ActiveDocument.SaveAs    &amp;&amp; Saves the Word document as
                                   &amp;&amp; Mydoc.doc.
         .Application.PrintOut
   ENDWITH
   **************** End of code. ****************

</PRE><h2>REFERENCES</h2>
 
<P>
For more information on Word Basic and Visual Basic Applications (VBA),
look in the Word Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: OLE Word<BR>
Keywords          : FxinteropWinword FxprgGeneral vfoxwin kbcode<BR>
Technology        : kbole<BR>
Version           : WINDOWS:3.0,3.0b,5.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 14, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
