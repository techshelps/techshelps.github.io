

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Test for Entry in a Field in Visual FoxPro &amp; FoxPro 2.x </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135110">
<META NAME="KBModify" CONTENT="1995/08/20">
<META NAME="KBCreate" CONTENT="1995/08/16">
<META NAME="Keywords" CONTENT="kbtool">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  If you think you need to use a WHEN clause (used in FoxPro version 2.x @...GET fields on screens) when working in a Visual FoxPro form, you may be able to use an Init, When, or GotFocus event procedure to accomplish your goal:   - The Init event oc...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAO4,QA7O,QAH4,QAW6,QBWS,QAB9,QA7N,QA56,QA55,QAYZ,QBJZ,QBE7,QBE6,QAUR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Test for Entry in a Field in Visual FoxPro &amp; FoxPro 2.x</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135110</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
If you think you need to use a WHEN clause (used in FoxPro version 2.x
@...GET fields on screens) when working in a Visual FoxPro form, you may be
able to use an Init, When, or GotFocus event procedure to accomplish your
goal:

<UL><LI>The Init event occurs when an object is created.

<LI>The When event for an object occurs before a control receives the focus.

<LI>The GotFocus event occurs when an object receives the focus either by
   user action or by code.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The When and Init events are not equivalent. The Init event procedure runs
only once -- when the object is created. The When event procedure runs each
time the field is entered, right before it receives the focus.
<P>
If you want the code to fire a single time when entering the object
(field), use the Init event procedure instead of the When event procedure.
Usually, however, you will want to use the When event procedure.
<P>
Following are two step-by-step procedures that demonstrate how to use the
When event in Visual FoxPro versus the WHEN clause in FoxPro version 2.x.
<P>
<P><h3>Using the WHEN Clause in FoxPro 2.x w/EX1.SPR Sample Screen</h3>
 

<OL><P><LI>In FoxPro for Windows, open a screen, and draw an input field.

<P><LI>Type X as the input.

<P><LI>Enter the WHEN Clause, and type:
<P>
   WAIT WINDOW "You have now entered the field through the WHEN Clause" ;
<P><PRE>      TIMEOUT 2
</PRE>
<P><LI>Close the dialog box, for the input field, and save the screen as EX1.

<P><LI>On the Program menu, click Generate. Generate the screen as EX1.SPR,
   accepting the defaults.

<P><LI>Type DO EX1.SPR from the Command window, and notice the Wait Window
   comes up to demonstrate the WHEN Clause has executed.
<P>
</OL><h3>Using When, Init, &amp; GotFocus Events in Visual FoxPro w/EX2.SCX Sample Form</h3>
 

<OL><P><LI>In Visual FoxPro, on the File menu, click New and choose Form. Then
   click the New File button.

<P><LI>Using the Form controls, draw a text object on the form. Select it, and
   double-click the Init Event from the Properties window. It brings up a
   procedure box. Type this code:
<P>
   WAIT WINDOW "You are now in the INIT Event of the text object" ;
<P><PRE>      TIMEOUT 2
</PRE><P>
   Then press CTRL+W to close the procedure window.

<P><LI>Select the When Event from the Form controls to bring up a procedure
   box. Type this code:
<P>
<P><PRE>      WAIT WINDOW "You are now in the WHEN Event of the text object" ;
<PRE></PRE>         TIMEOUT 2

   Press CTRL+W to close the procedure window.

</PRE><P><LI>Select the GotFocus Event from the Form controls to bring up a procedure
   box. Type this code:
<P>
   WAIT WINDOW "You are now in the GotFocus Event of the text object" ;
<P><PRE>      TIMEOUT 2
</PRE><P>
   Press CTRL+W to close the procedure window.

<P><LI>On the Form menu, click Run Form.

<P><LI>When you are asked to save the form, save it as EX2.SCX. The Wait
   windows will pop up in succession as the form comes up and the text
   object is entered. By running the EX2.SCX form, you can see the order of
   the execution of these event procedures -- Init first, When second, and
   GotFocus third.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
Please see the Visual FoxPro Help menu for more information.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.60a 3.00 VFoxWin FoxWin Move Into Valid Click<BR>
Begin<BR>
KBCategory: kbtool<BR>
KBSubcategory: FxtoolSbuilder<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
