

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Create a Control to Select Fields from Different Tables </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147657">
<META NAME="KBModify" CONTENT="1996/10/17">
<META NAME="KBCreate" CONTENT="1996/02/28">
<META NAME="Keywords" CONTENT="kbprg kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article shows by example how to create a new control that will select fields from a variety of different tables. Within a grid-like environment, this control allows you to select a table from a pre-defined directory and select a field from tha...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QA7O,QA2Q,QBWS,QAG2,QAY2,QAW6,QAEF,QBXS,QA7N,QAUD,QAO4,QAGB,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Create a Control to Select Fields from Different Tables</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 17, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147657</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to create a new control that will select
fields from a variety of different tables. Within a grid-like environment,
this control allows you to select a table from a pre-defined directory and
select a field from that table. Multiple tables can be selected and entries
can be deleted. The user can also enter their own field value, which will
be added to that table's field list.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The control takes its list of .dbf tables from an array property of the
form. The user's selection of tables and fields are held in a cursor named
crChosen, which can be used after the selection process.
<P>
<P><h3>Steps to Create New Class</h3>
 

<OL><P><LI>Type the following command in the Command window to create a container
   class and modify it in the Visual Class Designer:
<P>
   CREATE CLASS fieldSelect AS container OF fselect.vcx

<P><LI>In Properties window, set the following properties:
<P>
   Width: 305
   Height: 95
   BackColor: 192,192,192
   BorderWidth: 0

<P><LI>Add the following properties. On the Class menu, click New Property, and
   then add the properties.
<P>
   ncurrentrow
   nlines

<P><LI>Add a grid to the container and set its properties to:
<P>
   ColumnCount: 2
   BackColor: 192,192,192
   DeleteMark: .F.
   Height: 97
   Left: 53
   RecordMark: .F.
   RecordSource: crChosen
   ScrollBars: 2
   Top: -1
   Width: 251
<P>
   Select the Column1 object from the properties sheet, and set the
   following properties:
<P>
   FontName: Microsoft Sans Serif
   FontSize: 8
<P>
   Select the Colummn2 object from the properties sheet, and set the
   following properties:
<P>
   FontName: Microsoft Sans Serif
   FontSize: 8

<P><LI>Select the Column1 object in the properties sheet, and then select the
   ComboBox tool from the toolbox. Click the first column of the grid, and
   drag out a small box to add the combo box to the column. Set the
   following properties of the combo box:
<P>
   Name: TableCombo
   FontName: Microsoft Sans Serif
   FontSize: 8
   BackColor: 192,192,192
   RowSourceType: 5
   RowSource: THISFORM.aTableList

<P><LI>Select the ComboBox tool from the toolbox again, and drag out a small
   box in the second column of the grid. Set the following properties of
   this combo box:
<P>
   Name: FieldCombo
   FontName: Microsoft Sans Serif
   FontSize: 8
   BackColor: 192,192,192
   RowSourceType: 1

<P><LI>Add a command button to the container, and set its properties to these
   values:
<P>
   Top: -1
   Left: 2
   Height: 19
   Width: 49
   Caption: Add
   Enabled: .F.

<P><LI>Add another command button to the containe,r and set its properties to
   these values:
<P>
   Top: 22
   Left: 2
   Height: 19
   Width: 49
   Caption: Delete
   Enabled: .F.

<P><LI>On the Class menu, click New Method. Enter checkchange as the name. From
   the properties sheet, select the fieldselect object. Now, near the
   bottom of the sheet you will see your new method. Double-click it, and
   add the following code:
<P>
   IF THIS.Grid1.ActiveRow &lt;&gt; THIS.nCurrentRow
<P><PRE>     THIS.Grid1.Tag='Row Changed'
     THIS.nCurrentRow=THIS.Grid1.ActiveRow
</PRE>   ENDIF
<P>
   IF ! EMPTY(Key_Field)
<P><PRE>     THIS.Command1.Enabled=.T.
</PRE>   ENDIF

<P><LI>In the Init event of fieldselect, enter this code:
<P>
   CREATE CURSOR crChosen (Table_Name C(12),Key_Field C(100),;
<P><PRE>      UserExpr L(1),Index N(3))
</PRE>   APPEND BLANK
   SELECT crChosen
   REPLACE UserExpr WITH .F.
   THIS.nCurrentRow=1
   THIS.nLines=1

<P><LI>On the Class menu, click New Method. Enter reeval as the name, and add
<P><PRE>    this code:
</PRE><P>
<P><PRE>    THIS.Grid1.RecordSource='crChosen'
    THIS.Grid1.Column1.TableCombo.Requery
</PRE>
<P><LI>In the Init event of the grid, enter this code:
<P>
<P><PRE>    THIS.Tag='Same Row'
</PRE><P>
<P><PRE>    THIS.RowHeight=25
    THIS.Column1.Width=120
    THIS.Column2.Width=110
</PRE><P>
<P><PRE>    THIS.Column1.CurrentControl='TableCombo'
    THIS.Column1.TableCombo.Visible=.T.
    THIS.Column1.Header1.Caption='Table Name'
    THIS.Column2.CurrentControl='FieldCombo'
    THIS.Column2.FieldCombo.Visible=.T.
    THIS.Column2.Header1.Caption='Expression'
</PRE>
<P><LI>In the GotFocus event of the TableCombo object, enter this code:
<P>
<P><PRE>    THIS.PARENT.PARENT.PARENT.CheckChange
</PRE><P>
<P><PRE>    IF EMPTY(crChosen.Table_name)
      REPLACE crChosen.Table_name WITH THIS.ListItem(1)
      THIS.DisplayValue=THIS.ListItem(1)
    ENDIF
</PRE>
<P><LI>In the GotFocus event of the FieldCombo object,enter this code:
<P>
<P><PRE>    THIS.PARENT.PARENT.PARENT.CheckChange
</PRE><P>
<P><PRE>    IF ! EMPTY(THIS.Value)
       IF THIS.PARENT.PARENT.Tag='Same Row'
<PRE></PRE>         m.Remember=THIS.ListIndex
       ENDIF
    ENDIF

    * Keep current selection
    IF ! EMPTY(THIS.DisplayValue)
       THIS.Value = THIS.DisplayValue
    ENDIF

    m.cChildTab=crChosen.table_name
    USE (m.cChildTab) ALIAS ChildTab IN 0
    SELECT ChildTab
    nCFieldCount=AFIELDS(aDummy)

    * Remove existing combo elements
    m.nCurCount=THIS.ListCount
    FOR i = m.nCurCount TO 1 STEP -1
       THIS.RemoveItem(i)
    NEXT i

    * Add new elements
    FOR i = 1 TO nCFieldCount
       THIS.AddItem(aDummy[i,1])
    NEXT i
    * If User-defined expression - add to combo field list
    IF crChosen.UserExpr
       THIS.AddItem(crChosen.Key_Field)
    ENDIF

    USE
    SELECT crChosen

    IF ! EMPTY(THIS.Value)
       IF THIS.PARENT.PARENT.Tag='Same Row'
         THIS.ListIndex=m.Remember
       ELSE
         THIS.ListIndex=crChosen.Index
       ENDIF
    ELSE
       THIS.ListIndex=1
       REPLACE crChosen.Key_Field WITH THIS.ListItem(THIS.ListIndex)
    ENDIF

</PRE><P><LI>In the Valid event of the FieldCombo object, enter this code:
<P>
<P><PRE>    * Changing Key_Field from User-defined to one off the list
    IF THIS.DisplayValue &lt;&gt; crChosen.Key_Field .AND. ;
       crChosen.UserExpr = .T.
<PRE></PRE>        REPLACE crChosen.UserExpr WITH .F.
    ENDIF

    REPLACE crChosen.Key_Field WITH THIS.DisplayValue

    * User-defined expression ?
    IF THIS.ListIndex = 0
      THIS.AddItem(THIS.DisplayValue)
      REPLACE crChosen.Index WITH THIS.ListCount
      REPLACE crChosen.UserExpr WITH .T.
    ELSE
      IF ! crChosen.UserExpr
        REPLACE crChosen.UserExpr WITH .F.
      ENDIF
      REPLACE crChosen.Index WITH THIS.ListIndex
    ENDIF

    THIS.PARENT.PARENT.Tag='Same Row'

</PRE><P><LI>In the Click event of the Command1 object, enter this code:
<P>
<P><PRE>    THIS.PARENT.grid1.ActivateCell(recno(),1)
    THIS.PARENT.grid1.column1.tablecombo.setfocus
    THISFORM.Refresh
    APPEND BLANK
    THIS.PARENT.grid1.ActivateCell(reccount(),1)
</PRE><P>
<P><PRE>    THIS.PARENT.Grid1.Tag="Row Changed"
</PRE><P>
<P><PRE>    THIS.PARENT.Command2.Enabled=.T.
    THIS.PARENT.nLines = THIS.PARENT.nLines + 1
</PRE>
<P><LI>In the Click event of the Command2 object, enter this code:
<P>
<P><PRE>    DELETE
    THIS.PARENT.nLines = THIS.PARENT.nLines - 1
    * Disable minus button if 1 line left
    IF THIS.PARENT.nLines=1
      THIS.Enabled=.F.
    ENDIF
</PRE><P>
<P><PRE>    THIS.PARENT.grid1.ActivateCell(IIF(recno()&gt;1,recno()-1,1),1)
    THISFORM.Refresh
    THIS.PARENT.grid1.column1.tablecombo.setfocus
    THIS.PARENT.Grid1.Tag="Row Changed"
</PRE>
<P><LI>Save the class.
<P>
</OL><h3>Steps to Use New Class</h3>
 

<OL><P><LI>Create a new form. Set the BackColor property to 192,192,192. From the
   Form menu, click New Property, and type:
<P>
   aTableList[2]

<P><LI>In the Load event of the form, enter this code:
<P>
   SET DELETED ON
   SET DEFAU TO sys(2004)+"samples\data"
   THISFORM.aTableList[1]="customer.dbf"
   THISFORM.aTableList[2]="orders.dbf"

<P><LI>In the Activate event of the form, enter this code:
<P>
   THIS.FieldSelect1.reeval

<P><LI>Using the form controls toolbar, click the View classes button, and
   select Add. Add fselect.vcx. Select the fieldselect tool, and drop it on
   the form.

<P><LI>Run the form.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 3.00b VFoxWin<BR>
KBCategory: kbprg kbhowto kbcode<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 17, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
