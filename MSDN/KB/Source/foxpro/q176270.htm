

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: Treewrap.exe: Sample TreeView Control in Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176270">
<META NAME="KBModify" CONTENT="1997/11/19">
<META NAME="KBCreate" CONTENT="1997/11/05">
<META NAME="Keywords" CONTENT="FxtoolGeneral vfoxwin">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visual FoxPro 5.0, ships with the TreeView control that is one of the controls in the Comctl32.ocx. When you use the TreevView control in a Visual FoxPro application, several issues may prevent you from using all the features of the control. Howeve...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAB5,QA7O,QAOE,QAMN,QA56,QA55,QAPF,QAHV,QAMA,QAPN,QA5F,QA9N,QAH4,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: Treewrap.exe: Sample TreeView Control in Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 19, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176270</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 5.0, 5.0a
<LI>Microsoft Visual Basic Professional and Enterprise Editions for
   Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual FoxPro 5.0, ships with the TreeView control that is one of the
controls in the Comctl32.ocx. When you use the TreevView control in a
Visual FoxPro application, several issues may prevent you from using all
the features of the control. However, you may work around the problems by
creating an ActiveX control in Visual Basic 5.0 that acts as a
wrapper for the TreeView control.
<P>
Code that will not work if written in FoxPro may be written in Visual
Basic. When you create the control, build the functionality needed into the
wrapper control.
<P>
The sample file explains how to create the wrapper control in Visual Basic
and expose the different properties, methods, and events to a container
that is using the control. For example, the code that gives a user the
ability to drag and drop nodes in the TreeView control is built in the
wrapper control. There is also an ImageList control inside the wrapper
control so that you can assign images for the TreeView to use.
<P>
The following file(s) is available for download from the Microsoft
Software Library:
<P>
<PRE>  ~ Treewrap.exe

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h2>MORE INFORMATION</h2>
 
<P>
The TreeView control example illustrates some basics of using and
manipulating the TreeView control. Because Visual FoxPro does not handle
some of the methods and properties of the TreeView control, this example
uses an ActiveX control written in Visual Basic that acts as a wrapper for
the TreeView control.
<P>
The example also shows how to add Nodes to the control using the five
different relationship settings of the Nodes Collection Add Method. The
sample code also allows you to remove a selected Node or branch.
<P>
The main focus of the example is to show how to save and restore the Nodes
in a FoxPro table. The algorithm used saves the Nodes in viewing order.
This allows you to save and restore the TreeView control with the Nodes in
the same order that the user was viewing them when the application closed.
<P>
The sample file also illustrates dragging and dropping of the Nodes. The
code allows you to drag a Node and drop it on top of a different Node so
that the dragged Node is now the child of the Node on which it was dropped
on. The drag and drop code was written into the wrapper control with Visual
Basic. The wrapper control then exposes the necessary properties, methods,
and events so that you can use the control in Visual FoxPro. An Imagelist
control is also included in the wrapper control to give you the ability to
assign an image to the nodes.
<P>
<P>
NOTE: To use this sample in FoxPro, you need to issue a SYS(2333,0) before
you open or run the TreeView form. You will also need to use Regsvr32.exe
and register the Vbtofox.ocx before you use the .ocx file. (It does not
matter where the .ocx file is located for this example to work.) The syntax
for using Regsvr32.exe is as follows:
<P>
<PRE>   Regsvr32 [/u] [/s] &lt;.ocx File Name&gt;

   where:

   /u means Unregister the .ocx File
   /s means Silent Mode (display no messages)

</PRE>If you build the .ocx file in Visual Basic, it will register the control
for you. The default in Visual Basic is to give the control a new class ID
every time the control is rebuilt. This can cause errors in Visual FoxPro
because it may be looking for a version of the control with a different
class ID.
<P>
To use this sample, you will need to have Visual Basic 5.0 and Visual
FoxPro 5.0 installed on your system. This sample has not been tested on a
machine that did not have both Visual Basic and Visual FoxPro installed.
<P>
Here are the steps to run the sample:

<OL><P><LI>Use Regsver32.exe to register the .ocx file.

<P><LI>Issue a SYS(2333,0) in FoxPro.

<P><LI>Set the default directory to the location of the Treeview.scx.

<P><LI>Run the Treeview.scx form.
<P>
</OL>The files included with this sample are listed below:

<UL><LI> Readme.txt
<LI> Treeview.scx      FoxPro file
<LI> Treeview.sct      FoxPro file
<LI> VBtoFox.vbp       VB project file
<LI> VBtoFox.vbw       VB file
<LI> WrapTreeView.ctl  VB file
<LI> VBtoFox.ocx
<LI> VBtoFox.exp
<LI> VBtoFox.lib
<LI> Rocket.ico
<LI> Plane.ico
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For more information on the TreeView control see the Online Help.
<P>
Additional information on creating ActiveX controls in Visual Basic may
be found in the Visual Basic's Component Tools Guide and Books Online.
<P>
Visual FoxPro Help; 5.0, 5.0a; search on: TreeView control1
<P>
Visual Basic's Component Tools Guide and Books Online; search on: Creating
ActiveX controls in Visual Basic
(c) Microsoft Corporation 1997, All Rights Reserved.
Contributions by Brian Combs, Microsoft Corporation
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: vfoxwin<BR>
Keywords          : FxtoolGeneral vfoxwin<BR>
Version           : WINDOWS:5.0,5.0a<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto kbfile<BR>
Solution Type     : kbsample<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 19, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
