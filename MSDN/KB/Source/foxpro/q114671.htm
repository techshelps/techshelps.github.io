

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use READKEY() to Test If Data Has Been Changed </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114671">
<META NAME="KBModify" CONTENT="1995/06/27">
<META NAME="KBCreate" CONTENT="1994/05/09">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The UPDATED() function returns .T. if any object has changed during a READ, or if a control such as a push button has been selected.  This article explains how you can also determine if the data itself has changed during a READ.  MORE INFORMATION  ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAVX,QAVW,QAGB,QAH4,QBFN,QA5V,QAYY,QAKD,QA7R,QAGC,QBFM,QAPN,QALW,QAYL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use READKEY() to Test If Data Has Been Changed</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 27, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114671</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, 2.6
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b, 2.6
<LI>Microsoft FoxPro for Macintosh, versions 2.5b, 2.5c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The UPDATED() function returns .T. if any object has changed during a READ,
or if a control such as a push button has been selected.
<P>
This article explains how you can also determine if the data itself has
changed during a READ.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The READKEY() function provides an easy method of testing if the current
user has made any modifications to the data during the READ. It does not
test if another user has modified the same record residing on a network
drive.
<P>
READKEY() can be used to return two distinct sets of values. If READKEY()
is issued with no arguments, as in the following example, it returns a
value in the range 0-36 if no data has changed, and 256-292 if data has
changed:
<P>
<PRE>   ?READKEY()

</PRE>If any numeric argument is specified, as in the following example,
READKEY() returns a value in the range 1-6, indicating the method used to
terminate the READ:
<P>
<PRE>   ?READKEY(0)

</PRE>For information about possible READKEY() return values, refer to the
"Language Reference" or the FoxPro Help file.
<P>
The following steps will create a simple screen based on memory variables.
A push button labeled Cancel will test if the data has been changed. If no
data has been changed, the READ will terminate. If any data has been
changed, a wait window will be displayed and the user will remain within
the READ.

<OL><P><LI>USE the CUSTOMER database in the TUTORIAL subdirectory. Create a quick
   screen based on memory variables.

<P><LI>In the Setup code snippet, enter the following code:
<P>
<P><PRE>      m.cancel = ""
      SCATTER MEMVAR
</PRE>
<P><LI>Add a terminating push button with the prompt "Cancel". Enter  M.CANCEL
</OL>as the variable for the push button.

<OL><P><LI>In the READ VALID snippet, enter the following code:
<P>
<PRE>      IF READKEY(0) = 3     &amp;&amp; Execute only if terminating button chosen
         IF readkey() &gt; 255
            WAIT WINDOW "Can't cancel ... Data has changed"
            RETURN .F.      &amp;&amp; Don't allow READ to terminate
         ELSE
            RETURN .t.      &amp;&amp; Terminate READ
         ENDIF
      ENDIF

</PRE><P><LI>Generate and run the screen program.
<P>
</OL>The value returned by READKEY() is valid only while the record pointer
remains on the current record. If the record pointer is moved, READKEY()
will reset to a value indicating that no data has been changed.
<P>
The code to test for the value of READKEY() must be located in the READ
VALID snippet or in the Cleanup code, not in the VALID snippet of the push
button. The value of READKEY() will not change until after the VALID
snippet of the push button has been executed.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information about how to test if data on disk has been
changed by another user, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q97638.htm">Q97638</A></B>
   TITLE     : How to Check for Changes Made in a Database Record

</PRE></OL>In a multiuser environment, you may need to use both techniques in order to
guarantee data integrity.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxMac FoxDos FoxWin 2.00 2.50 2.50a 2.50b 2.60<BR>
2.50c<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgMultiuser<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 27, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
