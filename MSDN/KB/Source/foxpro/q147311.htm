

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Control Visio(TM) Through OLE Automation </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147311">
<META NAME="KBModify" CONTENT="1996/02/23">
<META NAME="KBCreate" CONTENT="1996/02/22">
<META NAME="Keywords" CONTENT="kb3rdparty kbinterop kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visio(TM) is a registered trademark of Visio Corporation. Visio Corporation is one of the earliest users of the OLE specifications to enable its products to provide OLE Automation services.  This article provides a Visual FoxPro example that shows ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADN,QAK2,QANF,QAG9,QAEF,QAEB,QAMA,QAY2,QA5F,QAPN,QAGQ,QAYZ,QBCF,QAW6,QAJX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Control Visio(TM) Through OLE Automation</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 23, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147311</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0 and 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visio(TM) is a registered trademark of Visio Corporation. Visio Corporation
is one of the earliest users of the OLE specifications to enable its
products to provide OLE Automation services.
<P>
This article provides a Visual FoxPro example that shows how to use OLE
Automation to interact with other non-Microsoft applications.
<P>
Much of the syntax used in the command examples is derived from the
documentation of Microsoft Visual Basic, Applications Edition provided with
Microsoft Excel 7.0, and the browser tool of Microsoft Excel.
<P>
Many of the commands are specific to Visio, and are derived from Visio
documentation and Help file topics.
<P>
NOTE: Some products mentioned in this article are manufactured by vendors
independent of Microsoft; we make no warranty, implied or otherwise,
regarding these products' performance or reliability.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The nucleus of the example shown in this article was provided by Andrew
Ross MacNeil - Microsoft Most Valued Professional (MVP).
<P>
***********************************************************
<PRE>** Visio.prg                                             **
**                                                       **
** Demonstration of OLE Automation with Visual FoxPro    **
** as client, Visio as server                            **
</PRE>***********************************************************
<P>
CLEAR
CLEAR ALL
<P>
=MESSAGEBOX("Scale the Visual FoxPro desktop to occupy just the"+chr(13)+ ;
<PRE>            "      the top 30 - 40% of the screen. Then, "+chr(13)+ ;
            "when Visio opens, size it and locate it at the bottom")

</PRE>PUBLIC AppVisio, DocsVisio, AppPage,DocPage, MasterDoc, MasterObject, ;
<PRE>     RectObject, WindowObject

</PRE>WAIT WINDOW "Creating the object named appVisio"
AppVisio = CREATEOBJECT("Visio.application")
<P>
** You can use similar code by, instead of saying
* AppVisio = CREATEOBJECT("Visio.Application")
** say
* AppVisio = _SCREEN.activeform.visiocontrol.application
<P>
WAIT WINDOW "Creating a document"
<PRE>DocsVisio = AppVisio.Documents   &amp;&amp; A reference to a new visio document

</PRE>WAIT WINDOW "Adding the basic template"
VisioDoc = DocsVisio.Add ("basic.vst")  &amp;&amp; The basic template
<P>
WAIT WINDOW "Next, to the left you will see "+chr(13)+ ;
<PRE>            "two references to the same page."+chr(13)+chr(13)+ ;
            "OLE objects have properties."+chr(13)+ ;
            "One of them is 'Name'."
</PRE>AppPage = AppVisio.ActivePage
DocPage = VisioDoc.Pages(1)
? "AppPage.Name = "+AppPage.Name
? "DOCPAGE.Name = "+DOCPAGE.Name
<P>
WAIT WINDOW "Adding a name to the document." + chr(13) + ;
<PRE>            "Watch the left end of the title bar."
</PRE>DocPage.Name = "Demonstration"
<P>
** Now Pages Contain SHAPES.
** SHAPES can either be drawn outright using
** the DrawLine, DrawOval and
** DrawRectangle Methods
<P>
WAIT WINDOW "Drawing a line"
DocPage.DrawLine(1,9,3,10) &amp;&amp; 1" from Left,  9" from bottom
<PRE>                           &amp;&amp; 3" from Left, 10" from bottom

</PRE>** Or, they can be based on Master Shapes.
**
** Because the example opened up the "basic" vst (template)
**   you know there is a document
**   called Basic.vss (or stencil)
<P>
MasterDoc = AppVisio.Documents("basic.vss")  &amp;&amp; Reference to the stencil
<P>
**
** Now you can pull out a Master Object
<P>
MasterObject = MasterDoc.Masters("Rectangle")
<P>
**
** This drops the object onto the document page
WAIT WINDOW "Unseen, the program accessed a rectangle tool" +chr(13)+ ;
<PRE>            chr(13)+"Now, we drop it on the document page"
</PRE>RectObject = DocPage.Drop (MasterObject, 4,9)  &amp;&amp; Centered 4" from left
<PRE>                                               &amp;&amp; 9" from bottom

**
</PRE>** You can also edit the text for an object
<P>
RectObject.Text = "Adding Diagram"  &amp;&amp; Located in the
<PRE>                                    &amp;&amp; center of the rectangle

**
</PRE>WAIT WINDOW "This draws an oval but it doesn't give us a reference"
<P>
docpage.DrawOval(5,3,4,5) &amp;&amp; 5" from left, 3" from bottom
<PRE>                          &amp;&amp; to 4" from left, 5" from bottom

</PRE>WAIT WINDOW "So we undo it"
<P>
appVisio.Undo
CLEAR
<P>
WAIT WINDOW " and create a reference named 'Oval' and draw the oval"
Oval = docpage.DrawOval(5,3,4,5)  &amp;&amp; Oval is now the reference pointer
<P>
** This next command may seem logical but it doesn't work
* Oval.Move(3,3)
** With Ovals, you need to set the Center
WAIT WINDOW "Then move Oval's Center Point"
Oval.SetCenter(1,1)
WAIT WINDOW "Then move it again"
Oval.SetCenter(10,10)
WAIT WINDOW "Oops, right off of the page. We'll fix it!" TIMEOUT .6
<P>
Oval.SetCenter(8,10)
**
** Visio Application objects also have collections
**   of Windows and Active Windows.
** This allows you to perform your ZOOM Controls
WAIT WINDOW "Zooming to 150% of full page."
WindowObject = AppVisio.ActiveWindow
WindowObject.Zoom = 1.5
<P>
WAIT WINDOW "Zooming back to 20% of full page."
WindowObject.Zoom = .20
<P>
WAIT WINDOW "With Visio, you can also add other stencils."
<PRE>  WAIT WINDOW "Adding the Organization Chart Stencil"
  AppVisio.Documents.Add("orgchart.vss")

</PRE>** As well as identify different STYLES to use.
WAIT WINDOW "Enumerate count of Styles, then Styles 1, 2, &amp; 25"
? "Styles.Count = "+str(VisioDoc.Styles.Count,2,0)
? "Styles(1).Name = "+VisioDoc.Styles(1).Name
? "Styles(2).Name = "+VisioDoc.Styles(2).Name
? "Styles(25).Name = "+VisioDoc.Styles(25).Name
<P>
** with these styles you can change an object's appearance.
WAIT WINDOW "Let's Look at the FillStyle property" + chr(13) + ;
<PRE>            "The first will be 70% Gray"
</PRE>RectObject.FillStyle = "70% Gray Fill"
<P>
WAIT WINDOW "About to create rectangle 2"
RectObject2 = DocPage.Drop (MasterObject, 6,9)
WAIT WINDOW "FillStyle = 50% Gray"
RectObject2.FillStyle = "50% Gray Fill"
<P>
WAIT WINDOW "About to create rectangle 3, 30% Gray"
RectObject3 = DocPage.Drop (MasterObject, 4,8)
RectObject3.FillStyle = "30% Gray Fill"
<P>
WAIT WINDOW "About to create rectangle 4, 10% Gray"
RectObject4 = DocPage.Drop (MasterObject, 6,8)
RectObject4.FillStyle = "10% Gray Fill"
<P>
WAIT WINDOW "Erasing the Left Two Rectangles"
RectObject.delete
RectObject3.delete
<P>
WAIT WINDOW "Saving drawing as c:\vfp\visiodem.vsd"
IF FILE("c:\vfp\visiodem.vsd")
<PRE>  ERASE visiodem.vsd
</PRE>ENDIF
<P>
appvisio.application.windows.item(1).activate  &amp;&amp; Shift focus back
<PRE>                                               &amp;&amp; to drawing1 from
                                               &amp;&amp; orgchart stencil
</PRE>appvisio.application.activedocument.saveas("c:\vfp\visiodem.vsd")
<P>
WAIT WINDOW "Closing Visio"
=AppVisio.Documents()  &amp;&amp; ok
appvisio.quit
<P>
CLEAR
WAIT WINDOW "Appending saved file to General Field"
CLOSE ALL
IF FILE("Genvisio.dbf")
<PRE>  ERASE genvisio.dbf
  ERASE genvisio.fpt
</PRE>ENDIF
<P>
CREATE TABLE genvisio (genfield g)
APPEND BLANK
APPEND GENERAL genfield FROM visiodem.vsd
<P>
=MessageBox("Now, expand the VFP window to full size, and the"+chr(13)+ ;
<PRE>            "Browse window to full size within the VFP window")

</PRE>WAIT WINDOW "The browse will display a blank edit region."+chr(13) + ;
<PRE>            chr(13)+"Double-click the edit region to see" +chr(13)+ ;
            "inplace activation of the VISIO object."

</PRE>BROWSE
** End of Visio.prg
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.00b VFoxWin<BR>
KBCategory: kb3rdparty kbinterop kbhowto kbcode<BR>
KBSubcategory: FxinteropOle<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 23, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
