

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Transmit and Receive Binary Data using MSCOMM32 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q154741">
<META NAME="KBModify" CONTENT="1997/12/22">
<META NAME="KBCreate" CONTENT="1996/08/14">
<META NAME="Keywords" CONTENT="FxprgGeneral vfoxwin kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article illustrates some techniques using the Visual FoxPro 3.0 Communications (MSComm) control for receiving and transmitting binary data over RS-232 cable (without having modems).  MORE INFORMATION  The Communications control, MSCOMM32.OCX, ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QAO4,QAH6,QADX,QAPF,QBFY,QAYY,QA7O,QA6A,QAOE,QAMN,QALG,QAB5,QDIR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Transmit and Receive Binary Data using MSCOMM32</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 22, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q154741</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article illustrates some techniques using the Visual FoxPro 3.0
Communications (MSComm) control for receiving and transmitting binary data
over RS-232 cable (without having modems).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Communications control, MSCOMM32.OCX, provides serial communications
for your application by allowing the transmission and reception of data
through a serial port where only a string of characters to the transmit
buffer is permitted. This feature limits you to transmitting only text-
based files.
<P>
This article demonstrates how to use the MSComm control to transmit and
receive binary data using RS-232 cable. (The techniques in this article
will also work with modems.) The binary data must be converted one byte at
a time to a character and then transmitted. When received, the data must be
converted from a character back into binary data one byte at a time.
<P>
On DBCS-enabled operating systems (running operating system software that
uses one of the double-byte character sets), binary data will be corrupted
if one of the binary values matches a DBCS lead character. The MSComm
control will interpret this byte and the following byte as one double-byte
character and return only one byte for the equivalent ASCII character. To
resolve this problem, you need to convert one byte into ASCII size of three
characters to preserve the lead character.
<P>
<P><h3>Sample Code</h3>
 
<P>
The following code illustrates this process:
<P>
WARNING: USE OF THE SAMPLE CODE PROVIDED IN THIS ARTICLE IS AT YOUR
OWN RISK. Microsoft provides this sample code "as is" without
warranty of any kind, either expressed or implied, including but not
limited to the implied warranties of merchantability and/or fitness
for a particular purpose.
<P>
* Transmitter Code.
<P>
* INIT event of Comm OLE control
* 28800 baud, no parity, 8 data, and 1 stop bit.
* In RS-232, maximum speed of 28800 baud can be used
<P>
<PRE>   This.Settings = "28800,N,8,1"
   This.InputLen = 1
   This.CommPort = 1
   This.PortOpen = .T.

</PRE>* ONCOMM event of Comm OLE Control
* The following code is needed to make sure that next set of characters
* can be transmitted (CommEvent = 2 is triggered from the receiver side)
<P>
<PRE>   IF This.CommEvent = 2
      This.input
       IF gnTop &lt;= gnEnd
         gcString = FREAD(gnFileHandle, 1)  &amp;&amp; Store to memory
         q=asc(gcstring)
         * change ASCII to character (size of 3) to preserve the lead char
    thisform.olecontrol1.output = str(q,3)
    gnTop = gnTop + 1
       ENDIF
   ENDIF

</PRE>* INIT event of form
<P>
<PRE>   PUBLIC gnFileHandle
   PUBLIC gnEnd
   PUBLIC gnTop
   PUBLIC q

   * You should replace 'c:\sample.hlp' with your own binary file
   STORE FOPEN('c:\sample.hlp') TO gnFileHandle    &amp;&amp; Open the file
   STORE FSEEK(gnFileHandle, 0, 2) TO gnEnd  &amp;&amp; Move pointer to EOF
   STORE FSEEK(gnFileHandle, 0) TO gnTop  &amp;&amp; Move pointer to BOF
   gntop=1
   q=""

</PRE> 
<P>
Property of OleControl1
<P>
<PRE>RThreshold = 1     * triggers when at least one char is on the buffer
</PRE>SThreshold = 3
<P>
 
<P>
* Receiver Code.
<P>
* INIT event of OleControl1
* 28800 baud, no parity, 8 data, and 1 stop bit.
<P>
<PRE>   This.Settings = "28800,N,8,1"
   This.InputLen = 3
   This.CommPort = 1
   This.PortOpen = .T.

</PRE>* OnComm event
<P>
<PRE>   IF This.CommEvent = 2 AND This.InBufferCount &gt; 0
      qq=CHR(VAL(This.Input))
      =FWRITE(gnFileHandle,qq)
      this.output = CHR(26)
   ENDIF

</PRE>* INIT event of form
<P>
<PRE>   PUBLIC gnFileHandle

   * You should replace 'c:\sample.hlp' with your own file name
   IF FILE('c:\sample.hlp')  &amp;&amp; Does file exist?
      gnErrFile = FOPEN('c:\sample.hlp',12)  &amp;&amp; If so, open read-write
   ELSE
      gnErrFile = FCREATE('c:\sample.hlp')  &amp;&amp; If not, create it
   ENDIF

   = FCLOSE(gnErrFile)  &amp;&amp; Close the file

   STORE FOPEN('c:\sample.hlp',1) TO gnFileHandle     &amp;&amp; Open the file

</PRE>* CLICK event of button
<P>
<PRE>   *This tells the transmitting side to start sending the file
   Thisform.Olecontrol1.output = CHR(26)

</PRE> 
<P>
Property of OleControl1
<P>
RThreshold = 3
<P>
 
<P>
The event-driven technique generates an OnComm event when there are
characters waiting in the input buffer. Also, the CommEvent property will
contain a numeric 2. For the OnComm event to be triggered, you must set the
Rthreshold property to a value other than zero (its default). The most
common setting for the RThreshold property is 1, meaning that the OnComm
event is triggered if a minimum of one character is waiting in the input
buffer. In this article, 3 is being used as a value of RThreshold property
because 3 characters at a time are being sent.
 
<PRE>Keywords          : FxprgGeneral vfoxwin kbhowto
Version           : 3.0 3.0b
Platform          : WINDOWS</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 22, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
