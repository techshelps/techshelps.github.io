

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Save/SET/Restore of SET Environment Settings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130306">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/16">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  In version 2.x, environment settings such as  DELETED  were often stored into memory variables at the beginning of a section of code. At the end, the settings were manually reassigned to the original value. This article demonstrates an object-orien...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXS,QAEF,QAH4,QABA,QAX1,QAGB,QAKD,QAPN,QBCT,QBAO,QAUR,QAGC,QDKD,QAB9,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Save/SET/Restore of SET Environment Settings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130306</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In version 2.x, environment settings such as "DELETED" were often stored
into memory variables at the beginning of a section of code. At the end,
the settings were manually reassigned to the original value. This article
demonstrates an object-oriented approach to saving and restoring
environment settings.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The class "cSET" demonstrates this technique. In this class, a number of
the current SET environment settings for DELETED, ALTERNATE, and DECIMALS
are stored in objects. One object is created for each environment setting
that should be stored. This class could easily be expanded to include
additional environment settings.
<P>
When the class, cSET, is instantiated in your form or other application
component, an object is created for each desired environment setting. The
CONSTRUCTOR method is invoked whenever you want to change an environment
setting. It creates a command string that sets the desired temporary
environment setting. When the instantiated class object is released, the
DESTRUCTOR method is called. This method restores each environment setting
to its state at the time cSET was instantiated.

<OL><P><LI>To use this approach in an application, begin by creating a program
   that contains the class definition.
<P>
   * Begin code example
   * Save This as CSET.PRG
   * This class provides SET environment save/SET/restore capabilities
   * When the class is instantiated, the current SET environment is
   * saved &amp; SET to the desired value. When the instantiated object goes
   * out of scope, the environment is restored.
<P>
   * Usage:
   *  CreateObject( "CSET", &lt;cExpr1&gt;, &lt;cExpr2&gt; | &lt;nExpr2&gt; [, &lt;cExpr3&gt;] )
   *
   *   cExpr1 = One of the SET commands
   *   cExpr2 = Appropriate character value for the SET command
   *   nExpr2 = Appropriate numeric value for the SET command
   *   cExpr3 = Optional character value for SET commands that are both
<PRE>   *            ON | OFF
   *            and have another value (like ALTERNATE, FIELDS, etc.)
   *
   * Examples:
   *   loDeletedSave   = createobject( "CSET", "deleted", "on" )
   *   loDecimalsSave  = createobject( "CSET", "decimals", 5 )
   *   loAlternateSave = createobject( "CSET", "alternate", "on", ;
   *                     "alter.txt")

   DEFINE CLASS CSET AS CUSTOM

   * PROTECTED Data Members
   * =====================================================
   PROTECTED mcSET               &amp;&amp; SET command
   PROTECTED muOrgValue          &amp;&amp; Original value of the SET
   PROTECTED muOrgValue1         &amp;&amp; Original secondary value of the SET

   * Public Data Members
   * ========================================================
   * NONE

   * PROTECTED Function Members
   * =================================================

   * Constructor Method
   * ----------------------------------------------------------

   PROTECTED FUNCTION Init
   PARAMETER pcSET, puNewValue, pcNewValue1

   LOCAL lnParmCount          &amp;&amp; number of PARAMETERs sent to init
   LOCAL lcSETCommand            &amp;&amp; constructed SET command

   lnParmCount = PARAMETERS()

   * Default the data members
   This.mcSET = ""
   This.muOrgValue = ""
   This.muOrgValue1 = ""

   IF ( lnParmCount &lt; 2 )
   *   This.error( "some error" )
      RETURN
   ENDIF

   * Save current environment

   This.mcSET       = pcSET
   This.muOrgValue  = SET( pcSET )
   This.muOrgValue1 = SET( pcSET, 1 )
   IF ( This.muOrgValue == This.muOrgValue1 )
      * throw This away because we don't need it
      This.muOrgValue1 = ""
   ENDIF

   IF ( lnParmCount = 3 )
      * optional argument handling
      lcSETCommand = pcSET + " to " + pcNewValue1
      SET &amp;lcSETCommand
   ENDIF

   IF ( TYPE( "This.muOrgValue" ) == 'C' )
      * character type of SET
      lcSETCommand = puNewValue
      IF ( ! INLIST( This.muOrgValue, "ON", "OFF" ) )
         * not a simple ON|OFF so add a TO keyword
         lcSETCommand = "TO " + puNewValue
      ENDIF
   ELSE
      * numeric type of SET
      lcSETCommand = "TO " + STR( puNewValue )
   ENDIF

   lcSETCommand = pcSET + " " + lcSETCommand
   SET &amp;lcSETCommand                          &amp;&amp; change the SET

   * Destructor Method
   * ---------------------------------------------------- ------
   PROTECTED function Destroy

   *LOCAL lcSETCommand            &amp;&amp; constructed SET command

   IF ( EMPTY( This.mcSET ) )
      RETURN
   ENDIF

   IF ( TYPE( "This.muOrgValue" ) == 'C' )
      * character type of SET
      lcSETCommand = This.muOrgValue
      IF ( ! INLIST( This.muOrgValue, "ON", "OFF" ) )
         * not a simple ON|OFF so add a TO keyword
         lcSETCommand = "TO " + This.muOrgValue
      ENDIF
   ELSE
      * numeric type of SET
      lcSETCommand = "TO " + STR( This.muOrgValue )
   ENDIF

   lcSETCommand = This.mcSET + " " + lcSETCommand
   SET &amp;lcSETCommand                              &amp;&amp; restore the SET

   IF ( ! EMPTY( This.muOrgValue1 ) )
      * restore secondary SET information
      lcSETCommand = This.mcSET + " TO " + This.muOrgValue1
      SET &amp;lcSETCommand
   ENDIF

   * Public Function Members
   * ====================================================

   * Value Method
   * ---------------------------------------------------------------

   * RETURN the current values of the PROTECTED data members in a comma
   * delimited string.

   FUNCTION Value
   LOCAL lcRETURNValue

   IF ( TYPE( "This.muOrgValue" ) == 'C' )
      lcRETURNValue = This.mcSET + "," + This.muOrgValue
   ELSE
      lcRETURNValue = This.mcSET + "," + ;
         ALLTRIM( STR( This.muOrgValue ) )
   ENDIF

   IF ( ! EMPTY( This.muOrgValue1 ) )
      lcRETURNValue = lcRETURNValue + "," + This.muOrgValue1
   ENDIF

   RETURN lcRETURNValue

   ENDDEFINE

   *** END CODE EXAMPLE FOR cSET.PRG

</PRE><P><LI>Create a program with the following code. This code would normally be
   placed in the load event of a form, or at the top of a .PRG file. For
   the purposes of demonstration, it is being placed in a separate
   program file:
<P>
   ******************************************************************
   *Begin code example
   ******************************************************************
<P>
   * Driver program to test CSET class
<P>
   SET PROCEDURE TO cset ADDITIVE
<P>
   CLEAR
<PRE>   SET DELETED ON       &amp;&amp; start it out on for testing

   _Screen.Show
   ? "Deleted:", SET("deleted")
   loDeletedSave = CreateObject( "CSET", "deleted", "off" )
   ? "Value:", loDeletedSave.Value()
   ? "Deleted:", SET("deleted")

</PRE><P><LI>Run the program created in step 2. The following values should be
   displayed on the screen:
<P>
   Deleted: ON
   Value: deleted, ON
   Deleted: OFF
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
