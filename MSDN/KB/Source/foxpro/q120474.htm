

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Error "No Table is in Use" with Screen Based on SQL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120474">
<META NAME="KBModify" CONTENT="1995/06/27">
<META NAME="KBCreate" CONTENT="1994/09/12">
<META NAME="Keywords" CONTENT="kbenv kbprg kbprb kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The SHOW GETS command generates the error,  No Table is in Use  when a table is in use in the current work area.  CAUSE =====  The table involved in the current read was overwritten while it was open. For example, if you performed a query on a tabl...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QAY2,QAH4,QARR,QABA,QA2Q,QAEN,QBWS,QAXC,QAY4,QAJQ,QAG2,QAB4,QBFN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Error "No Table is in Use" with Screen Based on SQL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 27, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120474</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, 2.6, 2.6a
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b, 2.6, 2.6a
<LI>Microsoft FoxPro for Macintosh, version 2.6a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The SHOW GETS command generates the error, "No Table is in Use" when a
table is in use in the current work area.
<P>
<P><h2>CAUSE</h2>
 
<P>
The table involved in the current read was overwritten while it was open.
For example, if you performed a query on a table and then sent the results
back to the same open table, you may encounter this problem. Even though
the two tables have the same structure, when the original structure is
overwritten, the link between the GET field and the table is broken.
Therefore, a SHOW GETS command issued against the current READ fails
because the original table involved in the READ is no longer in existence.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Code to Reproduce Behavior</h3>
 
<P>
The Following program demonstrates how the "No Table is in Use" error
message can be generated. This example places a get field on a screen. Then
it performs a query against a table, and writes the results into the same
table. This causes the original table structure to be rewritten on top of
the currently open structure.
<P>
To duplicate this scenario create a program with the following code, then
run it.
<P>
**************************
<P>
SELECT CUSTOMER.CNO ;
<PRE>   FROM CUSTOMER, INVOICES ;
   WHERE INVOICES.CNO = CUSTOMER.CNO ;
   INTO TABLE TEMP

</PRE>***** This first section creates a table called Temp that gets overwritten.
<P>
CLOSE DATABASES
SET SAFETY OFF
<P>
IF ! USED("INVOICES")  &amp;&amp; Use the Invoices table from tutorial directory
<PRE>   USE INVOICES IN 0
</PRE>ENDIF
<P>
IF ! USED("CUSTOMER")  &amp;&amp; Use the Customer table from tutorial directory
<PRE>   USE CUSTOMER IN 0
</PRE>ENDIF
<P>
IF ! USED("TEMP")
<PRE>   USE TEMP IN 0
</PRE>ENDIF
<P>
SELECT CUSTOMER
<P>
DEFINE WINDOW TEST FROM 1,1 TO 15,40
ACTIVATE WINDOW TEST
@ 2,2 SAY "CUSTOMER #" GET CNO
<PRE>@ 5,2 EDIT TEMP.CNO     SIZE 3.375,15.286 DEFAULT " " SCROLL
</PRE>@ 10,2 GET MCHOICE FUNCTION '*N QUERY' DEFAULT 1 VALID QRYPROC()
<P>
READ CYCLE
<P>
RELEASE WINDOW TEST
<P>
** The following procedure queries the Customer &amp; Invoices tables, and then
** places the results back into the Temp table, overwriting the table
** with a new copy of Temp.
<P>
PROCEDURE QRYPROC
SELECT CUSTOMER.CNO ;
<PRE>   FROM CUSTOMER, INVOICES ;
   WHERE INVOICES.CNO = CUSTOMER.CNO ;
   INTO TABLE TEMP
</PRE>SELECT CUSTOMER
SHOW GETS
RETURN
<P>
**************************
<P>
<P><h3>Code to Work Around Behavior</h3>
 
<P>
To avoid overwriting the table, use memory variables instead of get fields
linked to a specific table. The following program is a modified version of
the previous program to demonstrate this workaround.
<P>
SELECT CUSTOMER.CNO ;
<PRE>   FROM CUSTOMER, INVOICES ;
   WHERE INVOICES.CNO = CUSTOMER.CNO ;
   INTO TABLE TEMP

</PRE>CLOSE DATABASES
SET SAFETY OFF
<P>
IF ! USED("INVOICES")  &amp;&amp; Use the Invoices table from tutorial directory
<PRE>   USE INVOICES IN 0
</PRE>ENDIF
<P>
IF ! USED("CUSTOMER")  &amp;&amp; Use the Customer table from tutorial directory
<PRE>   USE CUSTOMER IN 0
</PRE>ENDIF
<P>
IF ! USED("TEMP")
<PRE>   USE TEMP IN 0
</PRE>ENDIF
SCATTER MEMVAR
SELECT CUSTOMER
<P>
DEFINE WINDOW TEST FROM 1,1 TO 15,40
ACTIVATE WINDOW TEST
@ 2,2 SAY "CUSTOMER #" GET CNO
@ 5,2 EDIT M.CNO SIZE 3.375,15.286 DEFAULT " " SCROLL
@ 10,2 GET MCHOICE FUNCTION '*N QUERY' DEFAULT 1 VALID QRYPROC()
<P>
READ CYCLE
<P>
RELEASE WINDOW TEST
<P>
** The following procedure queries the Customer &amp; Invoices tables, and then
** places the results back into the Temp, essentially overwriting the table
** with a new copy of Temp.
<P>
PROCEDURE QRYPROC
SELECT CUSTOMER.CNO ;
<PRE>   FROM CUSTOMER, INVOICES ;
   WHERE INVOICES.CNO = CUSTOMER.CNO ;
   INTO TABLE TEMP
</PRE>SCATTER MEMVAR
SELECT CUSTOMER
SHOW GETS
RETURN
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxMac FoxDos FoxWin 2.00 2.50 2.50a 2.50b<BR>
2.50c 2.60 2.60a<BR>
KBCategory: kbenv kbprg kbprb kbcode<BR>
KBSubcategory: FxenvMemory<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 27, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
