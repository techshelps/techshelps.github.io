

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Debug .PLB and .FLL Source Code </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110921">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/02/01">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  In order to step through the source code of a .PLB or .FLL file, you must compile the source code with the _BreakPoint() function. This macro generates the debugger breakpoint instruction Interrupt 3h. (NOTE: All interrupts are given in hexadecimal...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAIJ,QBHQ,QAK6,QASR,QBV8,QAB9,QAY5,QAGI,QDIV,QBE7,QBE6,QAZB,QABG,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Debug .PLB and .FLL Source Code</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110921</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Professional Edition of Microsoft Visual FoxPro for Windows,
   version 3.0
<LI>Microsoft FoxPro Library Construction Kit for MS-DOS, versions 2.5x,
   2.6x
<LI>Microsoft FoxPro Library Construction Kit for Windows, version 2.5x,
   2.6x
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In order to step through the source code of a .PLB or .FLL file, you must
compile the source code with the _BreakPoint() function. This macro
generates the debugger breakpoint instruction Interrupt 3h. (NOTE: All
interrupts are given in hexadecimal.)
<P>
Once this is done, you must start the debugger and execute FoxPro from
within the debugger. After FoxPro has been started, it can be used
normally, which means you must load the library and then call the functions
from within the library that have the _BreakPoint() function. The library
will execute normally until the _BreakPoint() function is reached. When
this statement is reached, control will be transferred to the debugger. At
this point, you will be able to step through the .C source code. When the
code terminates, control will then be transferred back to FoxPro.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following are step-by-step instructions for stepping through the source
code of a .PLB or .FLL file. Depending on your version of FoxPro, use one
of the following instructions:
<P>
<P><h3>FoxPro 2.x</h3>
 

<OL><P><LI>Include the _BreakPoint() function in the .C source code.
</OL>2. Start the debugger.
3. Start FoxPro from within the debugger.
4. Load the library and call the functions.
5. Step through the C source code and then return to FoxPro.
6. Quit FoxPro.
7. Quit the debugger.
<P>
<P><h3>Visual FoxPro and Microsoft Visual C++ 2.0</h3>
 

<OL><P><LI>Add the _BreakPoint() in the source code
</OL>2. Compile and build a debug version of the .DLL
3. Start Visual FoxPro and issue the 'SET LIBRARY TO &lt;DLL file&gt;'
4. Call the function in the library (for example ?HELLO() )
<P>
When the code hits the _BreakPoint() instruction you will get an
"Application Error" with options for 'OK' to terminate and 'Cancel' to
debug.  Picking the 'Cancel' option will allow you to start VC++ with the
debugger active and to step through the sourcecode.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Library Construction Kit "Developer's Guide," Chapter 8
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxWin FoxDos 2.50 2.50a 2.50b<BR>
2.60 2.60a debug fll plb lck<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxtoolLck<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
