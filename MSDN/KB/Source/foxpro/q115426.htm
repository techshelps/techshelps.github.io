

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Indexing on a Character and Numeric Field Together </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q115426">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/05/25">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  It is sometimes desirable to create an index on combined fields. Doing this becomes more difficult when one of the fields is numeric, and may contain negative numbers. The following example shows how this may be accomplished.  MORE INFORMATION  NOT...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QA7O,QA7N,QDO9,QBE7,QBE6,QAB6,QAKC,QABE,QBV3,QACT,QBC6,QAPF,QABD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Indexing on a Character and Numeric Field Together</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q115426</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5x, 2.6x
<LI>Microsoft FoxPro for Macintosh, versions 2.5x, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is sometimes desirable to create an index on combined fields. Doing this
becomes more difficult when one of the fields is numeric, and may contain
negative numbers. The following example shows how this may be accomplished.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: This can also be accomplished by using the SQL SELECT command with
its ORDER clause.
<P>
The following table is in physical order. The CHAR field is a character
field with a length of 10, and the NUM field is a numeric field with a
width of 5.
<P>
<PRE>   CHAR                         NUM
   ---------------------------------

   Apple                        -299
   Apple                        -298
   Zebra                        3900
   Yankee                         -9
   Octopus                       237
   Frank                        -222
   Yankee                          1
   Zebra                       -4000
   Apple                        2200
   Apple  a                     2200

</PRE>The difficulty here is how to index on a string negative number. In a
character-based ascending index scheme, -004 doesn't come before -003.
FoxPro orders the data using the ASCII equivalents. To have the numbers
appear in ascending order, the numeric value must first be added to the
largest possible value for that field (99999 in this example) and then
converted to a string. For example, the following INDEX command creates a
compound index named COMBO that is in ascending order when the numeric
field is five spaces wide:
<P>
<PRE>   INDEX ON Char+STR(99999+Num) TAG Combo

</PRE>The following table contains the same data as above. However, it is now
in ascending order based on the COMBO index:
<P>
<PRE>   CHAR                         NUM
   ---------------------------------

   Apple                        -299
   Apple                        -298
   Apple                        2200
   Apple  a                     2200
   Frank                        -222
   Octopus                       237
   Yankee                         -9
   Yankee                          1
   Zebra                       -4000
   Zebra                        3900
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxDos FoxWin 2.00 2.50 2.50a<BR>
2.50b 2.50c 2.60 2.60a sort alphabetical combination<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
