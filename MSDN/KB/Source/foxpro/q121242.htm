

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Produce a List of Other Applications Running in Windows </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121242">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/09/28">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article demonstrates an approach that can be used to produce a list of all applications that are running under Microsoft Windows.  MORE INFORMATION  It is sometimes necessary for a FoxPro application to determine whether another application is...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAIH,QBWQ,QAMB,QAY5,QBBI,QATX,QBV8,QAB9,QAGI,QAGQ,QBWS,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Produce a List of Other Applications Running in Windows</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121242</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article demonstrates an approach that can be used to produce a list of
all applications that are running under Microsoft Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
It is sometimes necessary for a FoxPro application to determine whether
another application is running. The following article explains how to use
the FindWindow() function to determine whether a particular application is
running:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q110117.htm">Q110117</A></B>
   TITLE     : How to Pause Program Execution During a RUN Command

</PRE>In order to use the FindWindow() function, you need to know the complete
text of the window title. In some cases, the complete text of the window
title cannot be known. When a document is opened in Microsoft Word, for
example, the title of the Microsoft Word window will contain the text
"Microsoft Word - " followed by the name of the document that is being
edited. Since it is not possible for a FoxPro application to know the full
text of the window title in cases like this, the FindWindow() function
cannot be used to determine whether the application is running.
<P>
To work around this situation, this article provides a code sample that
uses the Windows API GetWindowText() function to produce a list of all
visible windows currently running in Microsoft Windows, with the exception
of Microsoft FoxPro.
<P>
The IsWindEx() function can be used in two ways. This function can be used
to determine whether there is a visible window that contains the specified
string of text. This function can also be used to produce a list of all
visible windows currently in existence.
<P>
To determine whether there is a visible window that contains a specified
string of text, call the function with the text that you are interested in
checking. For example, to determine whether there are any windows that
contain the text "Microsoft Word", call the function as follows:
<P>
<PRE>   ? IsWindEx("Microsoft Word")

</PRE>To produce a list of all visible windows currently in existence, call the
function with a null value, as follows:
<P>
<PRE>   =IsWindEx("")

</PRE><h3>Code Sample</h3>
 
<P>
FUNCTION IsWindEx
PARAMETERS WindowName
<P>
<PRE>     IsWindEx = .F.

     SET LIBRARY TO foxtools.fll

     * Register the Windows API functions that will be called

     mGetWinTxt = RegFn("GetWindowText", "I@CI", "I")
     mGetWindow = RegFn("GetWindow", "II", "I")
     mIsWinVis =  RegFn("IsWindowVisible", "I", "I")

     * Get the HWND (handle) to the main FoxPro window

     foxhwnd = MAINHWND()

     * Produce a list of all windows

        hwndNext = CallFn(mGetWindow,foxhwnd,0)

     DO WHILE hwndNext &lt;&gt; 0

          IF (hwndnext &lt;&gt; foxhwnd) .AND. ;
               CallFn(mGetWindow,hwndnext,4) = 0 .AND. ;
               CallFn(mIsWinVis,hwndnext) &lt;&gt; 0

               Stuffer = SPACE(64)
               x = CallFn(mGetWinTxt,hwndnext,@Stuffer,64)

               * If a window name was specified, check to
               * see if this is the specified window. If a
               * window name was not specified, display the
               * name of the window.

               IF LEN(TRIM(WindowName)) = 0

                    ? Stuffer

               ELSE

                    IF WindowName $ Stuffer

                         IsWindEx = .T.
                         EXIT

                    ENDIF

               ENDIF

          ENDIF

         hwndNext = CallFn(mGetWindow,hwndnext,2)

        ENDDO

     SET LIBRARY TO

     IF LEN(TRIM(WindowName)) = 0

          IsWindEx = .T.

     ENDIF

</PRE>RETURN IsWindEx
<P>
For more information about the functions called in this code sample, please
refer to the documentation for the Windows 3.1 Software Development Kit or
the Microsoft Developer's Network (MSDN) Development Library CD-ROM.
<P>
For more information about the algorithm used in this article, please refer
to the following article in the Microsoft Knowledge Base:
<P>
<PRE>  ARTICLE-ID: <B><A HREF="../WIN16SDK/Q80124.htm">Q80124</A></B>
  TITLE     : Retrieving the Names of Simultaneous Tasks Under Windows

</PRE><h2>REFERENCES</h2>
 
<P>
MSDN Development Library CD
Microsoft Windows 3.1 SDK documentation
Microsoft Visual C/C++ documentation
Microsoft Knowledge Base article <B><A HREF="../WIN16SDK/Q80124.htm">Q80124</A></B>
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxWin 2.50 2.50a 2.50b 2.60 2.60a<BR>
task open<BR>
task list<BR>
task manager emulate taskmanager<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgFoxtools<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
