

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: All Characters Following CHR(0) are Ignored with MSComm </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q169502">
<META NAME="KBModify" CONTENT="1997/06/03">
<META NAME="KBCreate" CONTENT="1997/06/03">
<META NAME="Keywords" CONTENT="FxinteropOcx kbcode kbinterop vfoxwin">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When an instance of the Microsoft Communication Control (MSComm Control) receives a CHR(0) it ignores that character and all characters that follow.   RESOLUTION  One of the following suggestions should resolve this problem:   - Set the InputLen pr...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QAHP,QAPN,QDJP,QAKG,QAUJ,QAEB,QBWS,QAW6,QAMB,QAKC,QA7O,QAOE,QAMN,QAJX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: All Characters Following CHR(0) are Ignored with MSComm</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 3, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q169502</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 5.0, 5.0a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When an instance of the Microsoft Communication Control (MSComm Control)
receives a CHR(0) it ignores that character and all characters that follow.
<P>
<P>
<P><h2>RESOLUTION</h2>
 
<P>
One of the following suggestions should resolve this problem:

<UL><LI>Set the InputLen property of the Microsoft Communication Control to 1
   and read one character at a time.

<LI>If possible, do not send CHR(0) or NULL to the Microsoft Communication
   control.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Microsoft Communication Control truncates all characters following, and
including, a CHR(0) or NULL that is passed to its Input. This occurs when
the "NullDiscard" of the Microsoft Communication control set to ".F."
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Connect two computers via a NULL Modem cable. For example, COM1 port of
   a computer (PC1) connected to the COM1 port of another computer (PC2)
   via a Null Modem Cable.

<P><LI>On PC1, place the following commands into a Visual FoxPro program and
   then execute it, to create and run a form that sends serial output
   using the MS Communication Control:
<P>
<P><PRE>       OUTFORM = CreateObject("comtst1")
       OUTFORM.Show
       READ EVENTS
</PRE><P>
<P><PRE>       DEFINE CLASS COMTST1 AS FORM
<PRE></PRE>         Top = 7
         Left = 88
         Height = 239
         Width = 288
         DOCREATE = .T.
         Caption = "Form1"
         Name = "Form1"
         OUTVAL = .F.
         ADD OBJECT TEXT1 AS TEXTBOX WITH ;
            HEIGHT = 37, ;
            LEFT = 29, ;
            TOP = 84, ;
            WIDTH = 229, ;
            Name = "Text1"
         ADD OBJECT Olecontrol1 AS Olecontrol WITH ;
            OLECLASS="MSCOMMLib.MSComm.1",;
            TOP = 12, ;
            LEFT = 0, ;
            HEIGHT = 100, ;
            WIDTH = 100, ;
            NULLDISCARD = .F., ;
            Name = "Olecontrol1"
         ADD OBJECT Command1 AS CommandBUTTON WITH ;
            TOP = 37, ;
            LEFT = 104, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Open Port", ;
            TABINDEX = 2, ;
            Name = "Command1"
         ADD OBJECT Command2 AS CommandBUTTON WITH ;
            TOP = 133, ;
            LEFT = 104, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Send", ;
            Name = "Command2"
         ADD OBJECT Command3 AS CommandBUTTON WITH ;
            TOP = 193, ;
            LEFT = 104, ;
            HEIGHT = 27, ;
            WIDTH = 84, ;
            CAPTION = "Exit", ;
            Name = "Command3"

         PROCEDURE Command1.Click
            IF This.CAPTION="Open Port"
               ThisForm.Olecontrol1.PORTOPEN=.T.
               This.Caption = "Close Port"
            Else
               ThisForm.Olecontrol1.PORTOPEN=.F.
               This.Caption = "Open Port"
            EndIf
         ENDPROC

         PROCEDURE Command2.Click
            *** Send CHR() representation of numbers entered ***
            OVAL1 = ALLTRIM(ThisForm.TEXT1.Value)
            OVAL2 = "chr(" + STRTRAN(OVAL1, " ", ")+chr(") + ")"
            ThisForm.Olecontrol1.OUTPUT=&amp;OVAL2
         ENDPROC

         PROCEDURE Command3.Click
            ThisForm.Release
            CLEAR EVENTS
         ENDPROC

       ENDDEFINE

</PRE><P><LI>Switch to PC2 and place the following code into a Visual FoxPro program
   and execute it to create and run a form that receives serial input using
   the MS Communication Control:
<P>
<P><PRE>       INFORM = CREATEOBJECT("comtst2")
       INFORM.SHOW
       READ EVENTS
</PRE><P>
<P><PRE>       DEFINE CLASS comtst2 AS FORM
<PRE></PRE>           Top = 5
           Left = 1
           Height = 216
           Width = 410
           DoCreate = .T.
           Caption = "Form1"
           Name = "Form1"
           inval1 = .F.
           inval2 = .F.
           ADD OBJECT Olecontrol1 AS OleCONTROL WITH ;
               OleCLASS="MSCOMMLib.MSComm.1",;
               TOP = 12, ;
               LEFT = 12, ;
               HEIGHT = 100, ;
               WIDTH = 100, ;
               NAME = "Olecontrol1", ;
               NullDiscard = .F., ;
               RThreshold = 10
           ADD OBJECT Command1 AS CommandBUTTON WITH ;
               TOP = 24, ;
               LEFT = 150, ;
               HEIGHT = 27, ;
               WIDTH = 84, ;
               CAPTION = "Open Port", ;
               NAME = "Command1"
           ADD OBJECT Edit1 AS EditBOX WITH ;
               FONTNAME = "Arial", ;
               HEIGHT = 64, ;
               LEFT = 24, ;
               TOP = 72, ;
               WIDTH = 252, ;
               NAME = "Edit1"
           ADD OBJECT Command2 AS CommandBUTTON WITH ;
               TOP = 108, ;
               LEFT = 298, ;
               HEIGHT = 27, ;
               WIDTH = 84, ;
               CAPTION = "Clear Text", ;
               NAME = "Command2"
           ADD OBJECT Command3 AS CommandBUTTON WITH ;
               TOP = 72, ;
               LEFT = 298, ;
               HEIGHT = 27, ;
               WIDTH = 84, ;
               CAPTION = "View Input", ;
               ENABLED = .F., ;
               NAME = "Command3"
           ADD OBJECT Command4 AS CommandBUTTON WITH ;
               TOP = 178, ;
               LEFT = 150, ;
               HEIGHT = 27, ;
               WIDTH = 84, ;
               CAPTION = "Exit", ;
               NAME = "Command4"

           PROCEDURE Command1.CLICK
               IF This.CAPTION="Open Port"
                   ThisForm.Olecontrol1.portopen=.T.
                   This.CAPTION = "Close Port"
                   ThisForm.Command3.ENABLED=.T.
               ELSE
                   ThisForm.Olecontrol1.portopen=.F.
                   This.CAPTION = "Open Port"
                   ThisForm.Command3.ENABLED=.F.
               ENDIF
           ENDPROC

           PROCEDURE Command2.CLICK
               ThisForm.Edit1.VALUE = ""
           ENDPROC

           PROCEDURE Command3.CLICK
               ThisForm.inval1 = ThisForm.Olecontrol1.INPUT
               FOR i = 1 TO LEN(ThisForm.inval1)
                   ThisForm.inval2 = ASC(SUBSTR(ThisForm.inval1, i, 1))
                   ThisForm.Edit1.VALUE=ThisForm.Edit1.VALUE+;
                           " "+ALLTRIM(STR(ThisForm.inval2))+" "
               ENDFOR
           ENDPROC

           PROCEDURE Command4.CLICK
               ThisForm.RELEASE
               CLEAR EVENTS
           ENDPROC

       ENDDEFINE

</PRE><P><LI>Click Open Port on the InForm form on PC2 to open the communication port
   on that computer.

<P><LI>Switch to PC1 and click Open Port on the OutForm form on PC1 to open the
   communication port on that computer.

<P><LI>Select the edit box on OutForm and enter the following numbers into
   the first line:
<P>
<P><PRE>      15 255 13 10 25
</PRE><P>
   NOTE: Ensure that the numbers are entered with a space between them but
<PRE>         with no space before the first (15) and after the last number
         (25).

</PRE><P><LI>Click SEND on OutForm to send the numbers.

<P><LI>Switch to PC2 and click View Input on InForm. Look at the contents of
   the edit box.
<P>
   NOTE: The characters sent by OutForm are displayed in the edit box of
<PRE>         InForm. So, the characters are being received and recognized by
         MS Communication Control on the receiving end.

</PRE><P><LI>Click Clear Text to clear the edit box.

<P><LI>Go back to PC1 and insert a "0" between the second and third number
   in the edit box of OutForm so that the entries look like the following:
<P>
<P><PRE>       15 255 0 13 10 25
</PRE>
<P><LI>Click SEND on OutForm to send the numbers.

<P><LI>Switch to PC1 and click View Input. Look at the contents of the edit
   box.
<P>
   NOTE: Only the first and the second numbers (15 255), sent by OutForm on
<PRE>         PC1, are displayed in the edit box of InForm. The "0" and the
         numbers following it are not displayed. This illustrates that
         after a receiving CHR(0) or NULL that the MS Communication Control
         ignores that particular character and all characters following it.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FxinteropOcx kbcode kbinterop vfoxwin<BR>
Version             : 5.0 5.0a<BR>
Platform            : WINDOWS<BR>
Issue type          : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 3, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
