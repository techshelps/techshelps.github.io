

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Automating a Word Object Embedded in a Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161197">
<META NAME="KBModify" CONTENT="1997/02/20">
<META NAME="KBCreate" CONTENT="1996/12/18">
<META NAME="Keywords" CONTENT="kbprg kbole kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article provides an example of how to programmatically update an OLE object embedded within a Word document. This example uses both Visual FoxPro 5.0 and Microsoft Word for Windows 95 version 7.0a.  MORE INFORMATION  The sample creates a new f...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIH,QAW6,QAPN,QAH4,QDO7,QA9Q,QA2K,QAPF,QA56,QA55,QAXB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Automating a Word Object Embedded in a Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161197</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article provides an example of how to programmatically update an OLE
object embedded within a Word document. This example uses both Visual
FoxPro 5.0 and Microsoft Word for Windows 95 version 7.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The sample creates a new form and adds a Word object to that form. Next,
the code activates the Word object to get a reference to its WordBasic
object, deactivates it, and then automates the WordBasic object. The
important part of this code is the temporary activation of Word. The object
embedded in a form is called "Document." Unfortunately, Word does not
support the object "Word.Document" through OLE Automation, but Word does
support the object "WordBasic." The following line of code saves a
reference to the object contained within the Word document:
<P>
<PRE>   oWordRef = oForm.oWordDoc.Object.Application.WordBasic

</PRE>This allows a programmer to update the object.
<P>
Please see the REFERENCES section of this article for additional
information.
<P>
<P><h3>Code Example</h3>
 
<P>
Place the following code in a program file and run it:
<P>
<PRE>   #DEFINE CRLF  CHR(13)+CHR(10)
   PUBLIC oForm
   oForm = CREATE('form')
   oForm.AddObject('oWordDoc','OleControl','WordDocument')
   oForm.oWordDoc.Height =  100
   oForm.oWordDoc.Width =  300
   oForm.oWordDoc.Visible =  .t.
   oForm.Show
   oForm.oWordDoc.DoVerb(0)
   oWordRef = oForm.oWordDoc.Object.Application.WordBasic
   MOUSE CLICK AT 0,0
   oWordRef.Insert("Hello World"+CRLF)
   oWordRef.EditSelectAll
   oWordRef.Font("Arial",18)
   oWordRef.Bold
   oWordRef.EditGoTo("\EndofDoc")
   oWordRef.WordLeft(3)
   oWordRef.SelectCurWord
   oWordRef.CharColor(2)
   RETURN

</PRE>This code will replace the Visual FoxPro toolbars with the Word toolbars
in order to edit the embedded Word object.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about OLE Automation, Visual FoxPro, and Word, please
see the following articles in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q138205.htm">Q138205</A></B>
   TITLE     : How To Use OLE Automation with Microsoft Word

   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q148474.htm">Q148474</A></B>
   TITLE     : SAMPLE: OLE Automation to Microsoft Excel, Word, &amp;
               PowerPoint

   ARTICLE-ID: <B><A HREF="../WORD/Q105535.htm">Q105535</A></B>
   TITLE     : Word for Windows Supports OLE Automation as a Server Only
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbole kbhowto<BR>
KBSubcategory: FxinteropOle VFoxWin<BR>
Additional reference words: 5.00<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
