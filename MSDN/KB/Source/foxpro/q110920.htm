

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Wildcards and Macro Substitution in SELECT-SQL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q110920">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/02/01">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Using macro substitution or wildcards in a SELECT-SQL statement allows the data to be defined, extracted, and accessed dynamically.  Macro substitution is used when an ampersand symbol (*) precedes a character-type memory variable or array element....">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAPN,QAB9,QA2Q,QAY2,QA7O,QA7N,QAYL,QAG2,QBWS,QAY4,QAPF,QAO2,QAEN,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Wildcards and Macro Substitution in SELECT-SQL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q110920</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b
<LI>Microsoft FoxPro for Macintosh, version 2.5b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using macro substitution or wildcards in a SELECT-SQL statement allows the
data to be defined, extracted, and accessed dynamically.
<P>
Macro substitution is used when an ampersand symbol (&amp;) precedes a
character-type memory variable or array element. The contents of the
variable or element replace the macro reference prior to the variable or
array element being translated in the SELECT-SQL statement.
<P>
The asterisk symbol (*) represents a wildcard reference in a SELECT-SQL
statement. The primary use of wildcards in a SELECT-SQL statement is to
reference multiple field names in a file without having to list each field
individually in the SELECT-SQL statement.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following program example uses macro substitution to dynamically change
the query output generated by the SELECT-SQL statement. The macro
substitution is in the SQL WHERE clause.
<P>
<PRE>   CLEAR
   ACCEPT "Enter a two character state " TO M_State
   M_Cust_St = "UPPER(customer.state)"
   M_EQ = "="
   M_State = "'"+UPPER(M_State)+"'"
   M_Key = M_Cust_St + " " + M_EQ + " " + M_State
   SELECT customer.company, customer.contact, customer.state ;
      FROM customer ;
      WHERE &amp;M_Key ;
      INTO CURSOR EX_SQL
      BROWSE TIMEOUT 10
      DISPLAY MEMORY LIKE M_*

</PRE>NOTE: When you are using macro substitution for the entire SELECT-SQL
statement in a stand-alone executable file, for example
<P>
<PRE>   mselect = "SELECT * FROM CUSTOMER"
   &amp;mselect

</PRE>the macro must be addressed before the macro or command is translated. To
resolve this issue and avoid possible errors, include the necessary source
code in a separate procedure file in the project prior to compiling the
executable file, as shown in the following program example:
<P>
<PRE>    PROCEDURE NotUsed
    SELECT customer.company, customer.contact, customer.state ;
      FROM customer ;
      WHERE customer.state = "NC" ;
      INTO CURSOR EX_SQL

</PRE>If the NotUsed procedure is NOT added to the project, the user will receive
a "Feature not available" error message at run time.
<P>
Note that if you are using macro substitution in one or more clauses of the
SELECT statement, for example
<P>
<PRE>   mwhere = "STATE = 'NC'"
   SELECT * FROM CUSTOMER WHERE &amp;mwhere

</PRE>the NotUsed procedure is NOT required.
<P>
The following program uses a wildcard to dynamically reference multiple
field names in a SELECT-SQL statement. The following query contains all
fields used in both the CUSTOMER.DBF and INVOICES.DBF files that have
matching CNO keys.
<P>
<PRE>    SELECT * ;
      FROM customer,invoices ;
      WHERE customer.cno = invoices.cno ;
      INTO CURSOR EX_SQL1
    BROWSE TIMEOUT 10

</PRE>Optionally, you can use a wildcard with a work area alias by entering the
filename, a period, and then an asterisk. The following SELECT-SQL
statement contains all fields used in the CUSTOMER file (which is suffixed
with an asterisk); the CNO and SALESMAN fields are displayed as output from
the INVOICES.DBF file for all records that contain matching CNO keys in
both files.
<P>
<PRE>    SELECT customer.*,invoices.cno,invoices.salesman ;
      FROM customer,invoices ;
      WHERE customer.cno = invoices.cno ;
      INTO CURSOR EX_SQL2

</PRE><h2>REFERENCES</h2>
 
<P>
FoxPro for MS-DOS "Developer's Guide," version 2.0, page D16-11
FoxPro for MS-DOS "Commands &amp; Functions," version 2.0, page C3-10
FoxPro for MS-DOS and Windows "Language Reference," version 2.5, page L3-9
FoxPro for MS-DOS "Developer's Guide," version 2.5, page D14-11
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxMac FoxDos FoxWin 2.00 2.50 2.50a<BR>
2.50b<BR>
memvar wild<BR>
card<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgSql<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
