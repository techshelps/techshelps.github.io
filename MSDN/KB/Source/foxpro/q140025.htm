

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Add an Outline Control to a Form and Populate It </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140025">
<META NAME="KBModify" CONTENT="1996/10/17">
<META NAME="KBCreate" CONTENT="1995/11/21">
<META NAME="Keywords" CONTENT="kbtool kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The Professional Edition of Visual FoxPro includes the Microsoft Outline control (Msoutl32.ocx). The outline control can be used to display information in a graphical hierarchical format, such as in file open dialog boxes. This article describes ho...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIB,QAPN,QA28,QATJ,QAO7,QBCD,QA7O,QAOE,QAMN,QAB5,QAMB,QAE1,QBXS,QATX,QAH4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Add an Outline Control to a Form and Populate It</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 17, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140025</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The Professional Edition of Visual FoxPro includes the Microsoft Outline
control (Msoutl32.ocx). The outline control can be used to display
information in a graphical hierarchical format, such as in file open
dialog boxes. This article describes how to use the outline control in the
Forms Designer to perform some common tasks.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Adding an Outline to your Form</h3>
 

<OL><P><LI>Create a new form.

<P><LI>Add an OLE Container control to your form. In the OLE Container control
   dialog box, click the Insert Control option, and select the Outline
   control from the list of available controls. Click OK.

<P><LI>Change the Name property of the control to oleOutline.
<P>
</OL><h3>Populating the Outline</h3>
 
<P>
To add items to the outline, use the outline's AddItem method. The AddItem
method takes two parameters -- the text you want to show in the outline and
the list index of the item. The second parameter is optional.
<P>
For example, the following line of code adds an item named Apples to the
bottom of the outline:
<P>
<PRE>   Thisform.oleOutline.AddItem("Apples")

</PRE></OL>The following line of code adds an item named Bananas to the second
position in the list:
<P>
<PRE>   Thisform.oleOutline.AddItem("Bananas",2)

</PRE><h3>How the ListIndex Property Affects the Items in Your Outline</h3>
 
<P>
As each individual item is added to the outline, it is assigned a list
index. The list index may be assigned manually by you when the item is
added, or it may be automatically assigned by the Msoutl.ocx.
<P>
The list index property affects the relative positioning of items within
the outline. If you add an item and specify a listindex property, any items
below the inserted item are moved down, and their respective listindex
properties are changed. The following table shows initial list index
properties, and how they are affected by inserting an item prior to the
current list index:
<P>
<PRE>                Original      Insert List    Insert List
Item Name       List Index    Index of 2     Index of 6
</PRE> 
<PRE>Fruit           1                 1             1
Vegetables      5                 6             7
Meats           10                11            12

</PRE>The table indicates that the ListIndex property will change as items are
added to the outline. This means that if you insert items, you may be
inserting them at a different place than intended. This causes problems if
you want to build a list of headings, and then insert items at the
appropriate location under each heading.
<P>
Because this property is volatile, you may want to build your outline in
sequential order, and allow the Msoutl32.ocx to assign a list index
automatically to each item as you add it to the outline. With this
technique, as you add topics, you need to add all the subitems for that
outline item before adding an item at the same hierarchical level.
<P>
<P><h3>Indenting Items Appropriately in the Outline</h3>
 
<P>
Each outline item has an associated Indent property. The Indent property
can be set to a minimum value of 0. The maximum value will depend on the
number of hierarchical levels in the current branch of the outline.

<UL><LI>A value of zero (0) indicates that the item should be invisible. This
   is the default value assigned by the AddItem method. You must set this
   to a value of 1 or higher to see the outline item. The first item in
   the outline is considered the "root item" of the outline, and it must
   have an indentation level of 0.

<LI>A value of 1 indicates that the item is displayed at the highest level
   of the outline.

<LI>A value of 2 or higher indicates that the item is a subitem of the
   next higher indentation level. You can use an indent level higher
   than 2, however, the indent can only be set to a maximum of one higher
   than the indentation of the item directly preceding it in the outline.
   If you try to set an indent level greater than one more of the prior
   item, you will receive an error.
<P>
</UL>The following line of code illustrates setting the Indent property of the
second item in the outline to an indent level of 3:
<P>
<PRE>   thisform.oleOutline.indent(2) = 3

</PRE>NOTE: The indent level of an item can be at most 1 greater than the indent
level of the item preceeding it.
<P>
The HASSUBITEMS() function allows you to determine programmatically if a
particular item has subitems associated with it.
<P>
<P><h3>Changing the Display of the Pictures in the Outline</h3>
 
<P>
You can change the picture associated with the outline by setting one of
the following properties. These properties determine the picture displayed
when an outline item is expanded, closed, or is a subitem:
<P>
<PRE>   PictureOpen
   PictureClosed
   PictureLeaf

</PRE>You can also specify a picture to be substituted for a particular item that
has subordinate items by setting the following properties:
<P>
<PRE>   PictureMinus
   PicturePlus

</PRE>The picture can be any small bitmap (.bmp file). You must set the picture
for the entire outline. You can also use the Style property to determine
which items are displayed with a particular item in the outline. Each
outline item has an individual style property. You may decide to change the
style property, for example, depending on whether an individual outline
item has subitems associated with it:
<P>
<PRE>Setting   Description
</PRE> 
<PRE>   0      Text only.
   1      Picture and text.
   2      (Default) Plus/minus and text.
   3      Plus/minus, picture, and text.
   4      Tree lines and text.
   5      Tree lines, picture, and text.

</PRE><h3>Gaining Access to a Particular Outline Item</h3>
 
<P>
Because the outline is a container object, it contains a control array
property to allow you to gain access to particular items within the
outline.
<P>
The ListCount property of the outline returns the number of items in the
outline.
<P>
The List property allows you to gain access to an item in the outline by
display order, regardless of the list index property setting for that item.
The following line of code sets the text of the third outline item to
Oranges:
<P>
<PRE>   ThisForm.oleOutline.list(3) = "Oranges"

</PRE>You may also want to use the ItemData property of the outline control. This
property contains an array of all items currently in the outline.
<P>
<P><h3>Obtaining the Text Associated with a Particular Outline Item</h3>
 
<P>
Occasionally, you may want to determine the text associated with the item
currently selected from the outline. You can do this by using the Text
property as follows:
<P>
<PRE>   ThisForm.oleOutline.Text

</PRE>This property is read-only. You must use the LIST() function to change the
text programmatically.
<P>
<P><h3>Expanding and Collapsing Outline Sections</h3>
 
<P>
The code to expand and collapse the outline is built into the functionality
of the control. You do not need to write code to handle expansion and
collapsing. However, you can affect a single item by setting its Expand
property to true (.T.) or false (.F.) appropriately.
<P>
<P><h3>Obtaining More Information on the Outline Control</h3>
 
<P>
This article is not a comprehensive list of all the methods and properties
associated with the Msoutl32.ocx. To obtain more information, query using
"outline control" in the Visual FoxPro Help file.
<P>
To view a sample form containing an outline control, open the
Vfp\Samples\Ole\Outline1.scx file supplied with Visual FoxPro.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 VFoxWin<BR>
KBCategory: kbtool kbhowto<BR>
KBSubcategory: FxtoolFormdes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 17, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
