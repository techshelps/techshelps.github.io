

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Compile a CFM for Visual FoxPro/Mac with CodeWarrior </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153152">
<META NAME="KBModify" CONTENT="1996/07/01">
<META NAME="KBCreate" CONTENT="1996/07/01">
<META NAME="Keywords" CONTENT="kbtool kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article describes the procedures for building a CFM library for use with Visual FoxPro for Macintosh using the CodeWarrior 8 C compiler. It will assume that the C code and LCK functions have been implemented properly in the source code file.  ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGC,QALX,QAFI,QBHQ,QAPF,QBXS,QA56,QA55,QALW,QAJN,QBHU,QBHT,QBFY,QAY2,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Compile a CFM for Visual FoxPro/Mac with CodeWarrior</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 1, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153152</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Macintosh, version 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes the procedures for building a CFM library for use
with Visual FoxPro for Macintosh using the CodeWarrior 8 C compiler. It
will assume that the C code and LCK functions have been implemented
properly in the source code file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
CodeWarrior is manufactured by MetroWerks Inc., a vendor independent of
Microsoft; we make no warranty, implied or otherwise, regarding this
product's performance or reliability.
<P>
The folder paths to the Visual FoxPro API sample files are as follow:
<P>
<PRE>   Microsoft Visual FoxPro:API:Sample Code
   Microsoft Visual FoxPro:API:CodeWarrior
   Microsoft Visual FoxPro:API:CodeWarrior:CW CFM Sample

</PRE>In the steps that follow, this article will only refer to the current
folder name and not provide the full path.
<P>
Visual FoxPro for Macintosh comes with a sample CodeWarrior project called
Hello.pi (note that the actual file extension is the symbol for the Greek
letter pi but that character cannot be reproduced in this text). The
easiest procedure for building a CFM from a new C file is to copy this
project and make some modifications for the new file.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Make sure that Metrowerks CodeWarrior 8 is installed on the Macintosh.
   By default is should install in a folder named CW8 Gold. The compiler
   to use is found in the Metrowerks CodeWarrior folder in the CW8 Gold
   folder. Use the CodeWarrior IDE 1.4 program.

<P><LI>To build the sample CodeWarrior Hello.pi project into a CFM, open the
   Hello.pi project. It is located in the CW CFM Sample folder. Choose the
   Make command from the Project menu, press CMD+M or click the Make
   button on the CodeWarrior toolbar. This library can then be loaded in
   Visual FoxPro with the SET LIBRARY TO command. More information on
   calling the library functions will follow.

<P><LI>To build a different C file into a library, follow these steps.
<P>
   a. Go to Finder and open up the CW CFM Sample folder.
<P>
   b. Copy the Reverse.c file from the Sample Code folder to the CW
<P><PRE>      CFM Sample folder.
</PRE><P>
   c. Duplicate the Hello.pi.exp file in the CW CFM Sample folder. Rename
<P><PRE>      it to Reverse.pi.exp. This file should only contain the text
      "DispatchAPI" without the quotes. If CodeWarrior is allowed to
      create this file when Making the CFM, the build will fail.
</PRE><P>
   d. Duplicate the Hello.pi project file. Rename it to Reverse.pi.
<P>
   e. Double-click Reverse.pi to launch CodeWarrior. If you get the
<P><PRE>      message that the project was created by an older version of
      CodeWarrior, go ahead and update it.
</PRE><P>
   f. With the Reverse.pi project window active, choose the Add Files...
<P><PRE>      command from the Project menu. Add the Reverse.c file to the
      project. You will probably have to navigate to the CW CFM Sample
      folder to find it. It should show up under the Sources portion of
      the project. If not, drag it there.
</PRE><P>
   g. Remove the Hello.c file from the project. Select Hello.c and
<P><PRE>      choose the Remove Files command from the Project menu.
</PRE><P>
   h. To have the correct name and icon for the new CFM file you are about
<P><PRE>      to build, a couple of preferences need to be set. From the Edit menu,
      choose the Preferences... command. Choose the PPC Project icon from
      the list of icons on the left side of the Preferences dialog. Scroll
      down to find it. The Project Type should be Shared Library. The File
      Name can be any legal name. Use Reverse.cfm for this example. The
      Creator can be changed to "cfmg" ,without quotes, to provide the
      CFM with the library bookshelf icon. Leave the Type as "shlb."
</PRE><P>
   i. While still in the Edit...Preferences dialog, choose the Access
<P><PRE>      Paths icon on the left side. Under the Additional Access Paths
      section, check the Treat #include &lt;..&gt; as #include "..." checkbox.
      Alternately, you can modify the Reverse.c file and change the
      #include &lt;pro_ext.h&gt; line to #include "pro_ext.h." Checking the
      checkbox is preferable however.
</PRE><P>
   j. Make the project. Choose the Make command from the Project menu,
<P><PRE>      press CMD+M, or click on the Make button on the toolbar. Reverse.cfm
      should show up in the CW CFM Sample folder with a bookshelf icon.
</PRE>
<P><LI>To load the Hello or Reverse.cfm libraries in Visual FoxPro, use one of
   the following commands from the Visual FoxPro Command window or within
   a program:
<P>
<P><PRE>      SET LIBRARY TO GETFILE() ADDITIVE
</PRE><P>
   Click the All Files checkbox, and navigate to the folder with the
   library.
<P>
   If the full path to the library is known, type that in the command:
<P>
<P><PRE>     SET LIBRARY TO HOME()+"API:CodeWarrior:CW CFM Sample:Reverse.cfm"
     SET LIBRARY TO HOME()+"API:CodeWarrior:CW CFM Sample:Hello" ADDITIVE
</PRE><P>
   Note that the complete library file name must be specified, including
   any file name extension(.CFM). This was not the case in FoxPro 2.6 for
   Macintosh.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For more information on the SET LIBRARY TO command, see Online Help.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00b VFoxMac<BR>
KBCategory: kbtool kbhowto<BR>
KBSubcategory: FxtoolLck
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 1, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
