

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Link List popup Display to Value of @...GET </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q142737">
<META NAME="KBModify" CONTENT="1996/01/18">
<META NAME="KBCreate" CONTENT="1996/01/17">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  To forestall having to scroll through a long list in order to find recurring instances of a given value in a table (.dbf file), you can choose to type the desired value in an @...GET field and issue a LOCATE FOR command to find the first such insta...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBV4,QAH4,QAUD,QBWS,QAHP,QBT6,QAYL,QAFR,QAA8,QACI,QAB9,QBV8,QAE1,QDIZ,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Link List popup Display to Value of @...GET</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 18, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q142737</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, version 2.5, 2.5a, 2.5b, 2.6, 2.6a
<LI>Microsoft FoxPro for Macintosh, version 2.5b, 2.5c, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To forestall having to scroll through a long list in order to find
recurring instances of a given value in a table (.dbf file), you can choose
to type the desired value in an @...GET field and issue a LOCATE FOR
command to find the first such instance, and then use a CONTINUE command to
find other instances.
<P>
This article gives one screen design that populates the list-popup with the
contents of an array created from a SQL SELECT of the appropriate field
from the table. It then coordinates the list's displayed value with the
record values in the table as the LOCATE FOR and CONTINUE commands are
executed.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Create Screen and List-Popup</h3>
 

<OL><P><LI>Set the default directory to Tutorial with the following command:
<P>
   SET DEFAULT TO SYS(2004) + "Tutorial"

<P><LI>Create a screen by entering the following command in the Command window:
<P>
   MODIFY SCREEN TestList

<P><LI>When the Screen Builder appears, click Screen/Layout on the menu bar.

<P><LI>In the Screen Layout dialog box, click Code. In the Screen Code dialog
   box, click Screen Setup Code, and then click OK twice to expose the
   Setup code editing window.

<P><LI>In the Setup code, enter the following commands:
<P>
   IF !USED("Customer")
<P><PRE>     USE Customer in 0
</PRE>   ENDIF
   SELECT Customer
   SELECT State,Recno() FROM Customer INTO ARRAY aTest
   * This assumes that no order has been set on the table Customer.
   * If the table is ordered the SELECT - SQL must include an
   * ORDER BY clause to place the query results in the same sequence as
   * that of the table. A further assumption is that the SELECT will not
   * include other numeric fields. Other character fields may be
   * included.
   Locater = ""  &amp;&amp; memvar tied to @...GET
<P>
   Close and save the Setup snippet by pressing CTRL+W

<P><LI>Click the GET ('ab') tool on the Screen designer toolbar. Place a GET
   field text box on the screen, and in the ensuing Field dialog box, type
   Locater in the edit box to the right of the Input button.

<P><LI>Click the Valid button, and then click inside the edit region of the
   Code Snippet window. Enter the following commands:
<P>
   LOCATE FOR State = ALLTRIM(UPPER(locater))
   Lookup = ASCAN(aTest,Recno())  &amp;&amp; local variable = locate's recno()
   mylist = ASUBSCRIPT(aTest,Lookup,1)  &amp;&amp; position list's display
   SHOW GET mylist
<P>
   Click OK twice to return to the screen. Size the @...GET text box to
   permit data entry.

<P><LI>Click the List tool (ninth from the top) and click the screen to
   position the list. In the List dialog box, select the From Array option,
   and type aTest in the edit box to the right. To the right of the
   Variable button, type mylist in the edit box. Click OK to return to the
   screen, and size the List so that it will display several lines of
   values.

<P><LI>Click the Push Button tool (fifth from the top), and place a button
   on the screen. In the Push Button dialog box, type Continue in the Push
   Button Prompts text editing region. To the right of the Variable button,
   type Go_On or some other variable name for the button object. Click the
   Valid button, and in the Code Snippet window, click the Procedure edit
   region, and enter these commands:
<P>
   CONTINUE
   Lookup = ASCAN(aTest,RECNO())  &amp;&amp; Local variable = locate's Record#
   mylist = ASUBSCRIPT(aTest,Lookup,1)
   SHOW GET mylist
<P>
   Click OK twice to return to the screen.

<P><LI>On the Program menu, click Generate, and proceed through the steps
<P><PRE>    to generate a screen program named TestList.spr from the screen
    definition TestList.scx.
</PRE>
<P><LI>In the Command window, type the following command:
<P>
<P><PRE>    DO TESTLIST.SPR
</PRE>
<P><LI>In the screen, enter the expression ca in the @...GET text box, press
<P><PRE>    the ENTER key, and observe the list's display. Click the Continue
    button and observe the list's display. Notice the display of the record
    number on the status bar.
<P></BLOCKQUOTE>
</OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.50 2.50a 2.50b 2.50c 2.60 2.60a FoxWin FoxMac<BR>
textbox listbox<BR>
KBCategory: kbprg kbhowto<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 18, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
