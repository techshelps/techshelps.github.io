

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Null Values in Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130307">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/16">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Microsoft Visual FoxPro version 3.0 supports null data values. Versions of FoxPro prior to version 3.0 did not directly support null data values. This article describes the general rules Visual FoxPro follows for handling null values (represented a...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QAY5,QAB9,QBV8,QAUD,QAI4,QA56,QA55,QAKC,QAPF,QAH7,QAH6,QAD7,QBVV,QABM V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Null Values in Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130307</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft Visual FoxPro version 3.0 supports null data values. Versions of
FoxPro prior to version 3.0 did not directly support null data values. This
article describes the general rules Visual FoxPro follows for handling null
values (represented as .NULL.) when they passed to Visual FoxPro commands
or functions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Use a null value (.NULL.) value when a value is missing, irrelevant, or
unknown. In previous versions of FoxPro, values that were unknown or
missing were usually represented by spaces or zeroes, which could have been
misinterpreted. With Visual FoxPro, you can now store a null value in a
field.
<P>
It is important to note that a null value (.NULL.) in Visual FoxPro is not
the same as an empty, blank, or zero value. Null represents the absence of
a value, so null is never equal to, greater than, or less than another
value, null or non-null. Visual FoxPro support for null values complies
with the ANSI standards and affects any area of the product where values
and expressions are used.
<P>
<P><h3>General Rules for Null Values</h3>
 
<P>
Here are the general rules for null values passed to Visual FoxPro commands
or functions:

<UL><LI>Commands generate an error when passed a null.

<LI>Functions that accept null values return .NULL. as a result.

<LI>Functions expecting a numeric value will generate an error if supplied
   with a null.

<LI>ISBLANK(), ISDIGIT(), ISLOWER(), ISUPPER(), ISALPHA(), and EMPTY() each
   return false (.F.) when passed a null value.

<LI>ISNULL() returns true (.T.) when passed a null value.

<LI>The commands INSERT SQL and SELECT SQL process null values through
   the IS NULL and IS NOT NULL clauses.

<LI>SQL Aggregate functions, such as MAX(), MIN(), and SUM() ignore all
   null values in the aggregate.

<LI>Visual FoxPro aggregate functions propagate .NULL. if all supplied
   values are null values, otherwise, any null value is ignored.
<P>
</UL>The remainder of this article gives more information and examples for these
general rules.
<P>
<P><h3>Commands Generate an Error When Passed a Null</h3>
 
<P>
A Visual FoxPro command is a statement that results in an action. Examples
of commands are USE, BROWSE, and DELETE. For example, the USE command
returns an error for this code:
<P>
<PRE>   STORE .NULL. TO nWorkArea
   USE mytable IN (nWorkArea)

</PRE>The IN clause of the USE command is expecting a numeric or alpha value,
when passed a .NULL. the error "Table Number is Invalid." is generated.
<P>
The NVL() function may be used to remove null values from calculations or
operations where null values are not supported or are not relevant.
<P>
<PRE>   STORE .NULL. TO nWorkArea
   USE mytable IN NVL(nWorkArea,0)

</PRE>This would open mytable in the first available workarea. Please see the
Help file or Visual FoxPro documentation for more information about the
NVL() function.
<P>
<P><h3>Functions that Accept Null Values Return .NULL. as a Result</h3>
 
<P>
A Visual FoxPro function is a routine that performs a specific task and
takes zero or more arguments. Examples of functions include ISBLANK(),
UPPER(), and SUBSTR(). Most Visual FoxPro functions allow a null value to
be passed as an argument without generating an error, however a .NULL. is
returned from the function. In other words, when you pass a null value to a
function, the result is always null. This is also how null values are
treated in mathematical equations. For example a null value added to 500
equals null, and a null value multiplied by zero equals null (not zero).
<P>
The following example code returns .NULL.:
<P>
<PRE>   cLastName = "Johnson"
   nBegin = 5
   nExtract = .NULL.
   ?SUBSTR(cLastName,nBegin,nExtract)

</PRE>The exceptions to this rule are the ISBLANK(), ISDIGIT(), ISLOWER(),
ISUPPER(), ISALPHA(), and EMPTY() functions - each of which return a .F.
value. The ISNULL() function returns a .T. value.
<P>
<P><h3>INSERT SQL and SELECT SQL Process Null Values by Using New Clauses</h3>
 
<P>
Two new clauses (IS NULL and IS NOT NULL) handle nulls in the INSERT and
SELECT SQL commands. For example, to locate all records in a table where
cLastName is not null, use this command:
<P>
<PRE>   SELECT cLastName FROM mytable WHERE cLastName IS NOT NULL

</PRE>To locate null values, use the IS NULL clause.
<P>
<P><h3>SQL Aggregate Functions Ignore Null Values</h3>
 
<P>
An aggregate function is a function that performs a numeric operation such
as addition, minimum, maximum, or average on a group (aggregate) of values.
Examples of aggregate functions include MAX(), MIN(), and SUM().
<P>
The SELECT SQL command, for example, can use aggregate functions to
retrieve numeric values from tables. For example, the following SELECT
command returns the maximum value from a field named nYTDSales:
<P>
<PRE>   SELECT MAX(nYTDSales) from mytable

</PRE>Any SQL aggregate function performed on a field that contains .NULL.
values ignores the .NULL. values, returning a result that treat the null
valuses as if they do not exist (are not part of the aggregate).
<P>
<P><h3>Visual FoxPro Aggregate Functions and Null Values</h3>
 
<P>
Unlike SQL aggregate functions, Visual FoxPro aggregate functions such as
MAX(), and MIN() return .NULL. if all supplied values are null values,
otherwise, any null value is ignored. For example the result of the
following MAX() function is 10:
<P>
<PRE>   ? MAX(2,.NULL.,10)

</PRE>However, a MAX() function supplied with all .NULL. values returns a .NULL.
value, as in this example:
<P>
<PRE>   x=.NULL.
   y=.Null.
   z=.NULL.
   ? MAX(x,y,z)

</PRE>For more information about the .NULL. value and the functions described
above, search for topics in the Visual FoxPro Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
