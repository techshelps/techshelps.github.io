

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Control in Grid w/ When Returning .F. Passes Keys to Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q156035">
<META NAME="KBModify" CONTENT="1997/01/10">
<META NAME="KBCreate" CONTENT="1996/09/13">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Clicking on a grid column whose control's When() returns False allows focus to be set to the grid column. In this state, keystrokes are passed to the form containing the grid, calling the form's KeyPress event and actuating any hotkeys on controls ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMN,QAUD,QARR,QA7O,QAB5,QADO,QAE1,QA5V,QAPN,QAOE,QDMN,QAH4,QALW,QBXS,QAVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Control in Grid w/ When Returning .F. Passes Keys to Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q156035</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Clicking on a grid column whose control's When() returns False allows focus
to be set to the grid column. In this state, keystrokes are passed to the
form containing the grid, calling the form's KeyPress event and actuating
any hotkeys on controls on the form.
<P>
<P><h2>WORKAROUND</h2>
 

<UL><LI>Do not return False (.F.) from the control's When(), and conditionally
   issue a KEYBOARD "{tab}" command in the control's GotFocus() to keep
   focus off column.
<P>
   - or -

<LI>Conditionally issue a NODEFAULT in the KeyPress() method of the form.
<P>
</UL><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This is normal behavior for the Grid object. This situation occurs because
the Grid object must change the record pointer before it can query columns
or column controls for Enabled = True. Once the record pointer is changed,
the grid can't go back because the grid does not save a previous record
pointer.
<P>
Leaving the focus on the prior column before the user switches to the
disabled column or control may lead to problems when handling two special
cases:

<UL><LI>When the grid is entered for the first time and there is no prior
   column.

<LI>When DynamicCurrentControl is used and the current control for the
   previous column gets set to a disabled control.
<P>
</UL>In addition, the grid must behave this way to accommodate the following
special case:

<UL><LI>If all the columns of a grid are disabled and the RecordMark and
   DeleteMark properties are set to False, the user needs to have a way
   to change the record pointer within the grid.
<P>
</UL>For more information about selection of grid columns with disabled
controls, or controls whose When() returns False, please see the following
article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q137963.htm">Q137963</A></B>
   TITLE     : PRB: Disabled Grid Controls Can Be Selected with Mouse

</PRE><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Run the following code from a program file:
<P>
   * Start of sample program
<P>
   PUBLIC oForm
   oForm=CREATEOBJECT('form1')
   oForm.SHOW
   oForm.grid1.column1.ADDOBJECT('text2','txtTextbox')
   oForm.grid1.column1.CURRENTCONTROL='text2'
   oForm.grid1.column1.text2.VISIBLE=.T.
<P>
   DEFINE CLASS form1 AS FORM
<P>
<P><PRE>      ADD OBJECT grid1 AS GRID WITH ;
      COLUMNCOUNT = 2, ;
      NAME = "Grid1"
</PRE><P>
<P><PRE>      ADD OBJECT command1 AS COMMANDBUTTON WITH ;
      CAPTION = "\&lt;Test", ;
      HEIGHT=25, ;
      TOP=205, ;
      NAME = "Command1"
</PRE><P>
<P><PRE>      PROCEDURE LOAD
<PRE></PRE>         CREATE CURSOR test ( ctest c(10), ctest2 c(10) )
         INSERT INTO test ( ctest) VALUES ( "    ")
         INSERT INTO test ( ctest) VALUES ( "    ")
         GO TOP
      ENDPROC

      PROCEDURE command1.VALID
         WAIT WINDOW "Command button valid called" TIMEOUT 1
      ENDPROC

   ENDDEFINE

   DEFINE CLASS txttextbox AS TEXTBOX

      PROCEDURE WHEN()
         RETURN RECNO()=1     &amp;&amp; Returns .F. if not on first record
      ENDPROC

   ENDDEFINE

   * End of sample program

</PRE><P><LI>Click the grid cell in the first column, second row of the grid.

<P><LI>Press the "t" key. The Command button click will be called by the
   "T" hotkey even though the grid has the focus.
<P>
</OL>Following are two examples of workarounds for this problem:
<P>
<P><h3>Method 1</h3>
 
<P>
To prevent the column from getting focus:

<OL><P><LI>Change the class definition for the textbox, removing the RETURN
   statement from the When() and adding code to the GotFocus() method as
   follows:
<P>
   DEFINE CLASS txtTextbox AS TEXTBOX
<P>
<P><PRE>      PROCEDURE GOTFOCUS()
</PRE><P>
<PRE>         IF RECNO()!=1          &amp;&amp; Check for condition that was checked
                                &amp;&amp; in When()
           KEYBOARD '{tab}'
         ENDIF

      ENDPROC

   ENDDEFINE

</PRE><P><LI>Run the program, and click the grid cell in the first column, second row
   of the grid. Note that the focus will not remain in the first column.
<P>
</OL><h3>Method 2</h3>
 
<P>
To intercept the KeyPress at the form level:

<OL><P><LI>Add the following code in the KeyPress procedure of the class definition
   for the Form:
<P>
   PROCEDURE KeyPress
<P><PRE>      LPARAMETERS nKeyCode, nShiftAltCtrl
<PRE></PRE>         * Check to see if the ActiveControl is a Grid and that the
         * ALT key was not pressed. If both of these are true, NODEFAULT
         * will discard the keystroke. If the ALT key was pressed, you do
         * want to use the keystroke to actuate any applicable hot-keyed
         * control on the form.
      IF this.ActiveControl.BaseClass = 'Grid' and nShiftAltCtrl != 4
         NODEFAULT
      ENDIF
   ENDPROC

</PRE><P><LI>Run the program, and click the grid in the cell in the first column,
   second row of the grid. Note that the focus will remain in the first
   column. Typing "t" will not actuate the Command button but pressing the
   ALT+T keys will.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: FxprgGrid FxprgClassoop<BR>
Additional reference words: 3.00 3.00b 5.00 kbdse VFoxWin
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
