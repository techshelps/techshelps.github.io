

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Print Multiple Columns in FoxPro for MS-DOS </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q113175">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/03/28">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  A common request is to print multiple columns in FoxPro for MS-DOS. Currently this capability is not provided in the Report Writer. However, you can simulate this functionality by creating a cursor that creates the  columns,  as described below.  M...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAZV,QAHT,QAE1,QA7O,QA7N,QA2Q,QDMN,QAYL,QAO2,QAG2,QAKC,QAGI,QBC6,QDMH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Print Multiple Columns in FoxPro for MS-DOS</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q113175</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b, and 2.6
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, and 2.6
<LI>Microsoft FoxPro for Macintosh, version 2.5b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A common request is to print multiple columns in FoxPro for MS-DOS.
Currently this capability is not provided in the Report Writer. However,
you can simulate this functionality by creating a cursor that creates the
"columns," as described below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
NOTE: The following method, though designed specifically for FoxPro for
MS-DOS, could also be used in FoxPro for Windows and FoxPro for Macintosh.
<P>
The following sample program creates an SQL cursor with the requested
number of columns. You can call the program in the following manner:
<P>
<PRE>   USE &lt;database name&gt;
   DO colmaker WITH 4  &amp;&amp; where 4 is the number of columns desired
   REPORT FORM &lt;multiple-column report&gt; PREVIEW

</PRE>The cursor can then be used to create a report. The columns will all be in
one record, so the fields for the total number of columns desired will be
placed on the same detail line. The program creates an extra field called
TRACKER for every column. This field will not be displayed in the report.
<P>
<PRE>   PROCEDURE colmaker
   PARAMETER colnum

   * Initializes variables
   **********************
   * Stores fields in database to an array 'repodbf'
   =AFIELDS(repodbf)

   * Stores number of fields in database to a variable 'numfield'
   numfield = ALEN(repodbf,1)

   * Stores database name to variable 'dbfname'
   dbfname = ALIAS()

   * Initializes procedure variables
   fldlist = ""
   whrclause = ""
   totcur = ""
   i = 0

   * Calculates variables to deal with extra records
   extras = RECCOUNT() % colnum
   IF extras &lt;&gt; 0
      mtracker = CEILING(RECCOUNT()/colnum)
   ENDIF

   * Generates field list for SELECT statements
   FOR i = 1 to numfield
      fldlist = fldlist + dbfname+ "."+repodbf(i,1) + ","
   ENDFOR

   * Adds a field to the resulting SELECT statements to organize
   * records
   fldlist = fldlist + "CEILING(recno()/"+ALLTRIM(STR(colnum))+") ;
      AS TRACKER"

   * Deletes any residual temporary databases
   oldsaf = SET("SAFETY")
   SET SAFETY OFF
   FOR i = 1 to colnum
      fname = "temp"+ALLTRIM(STR(i)) + ".DBF"
      ERASE &amp;fname
   ENDFOR

   * Creates databases for columns
   FOR i = 1 to colnum
      curname = "temp" + ALLTRIM(STR(i))
      x = IIF(i&lt;colnum,i,0)
      SELECT &amp;fldlist FROM (dbfname) INTO TABLE &amp;curname ;
         WHERE (RECNO()%colnum)=x
   * Creates names for cursors for use in final SELECT
      totcur = totcur + curname + ","
   ENDFOR
   totcur = SUBSTR(totcur,1,LEN(totcur)-1)

   * Adds blank records to necessary database to account for extra
   * records
   IF extras &lt;&gt; 0
      FOR i = extras+1 to colnum
         fname = "TEMP" + ALLTRIM(STR(i))
         SELECT &amp;fname
         APPEND BLANK
         REPLACE tracker WITH mtracker
      ENDFOR
   ENDIF

   * Builds join condition for resulting databases
   FOR i = 1 to colnum-1
      whrclause = whrclause + "temp"+ALLTRIM(STR(i)) + ;
         ".tracker = temp" + ALLTRIM(STR(i+1)) + ;
         ".tracker AND "
   ENDFOR i
      whrclause = whrclause + "temp1.tracker = temp" + ;
         ALLTRIM(STR(colnum)) + ".tracker"

   * Combines resulting database into one final database
   SELECT * FROM &amp;totcur INTO CURSOR final ;
      WHERE &amp;whrclause

   * Deletes residual databases
   FOR i = 1 to colnum
      fname = "temp"+ALLTRIM(STR(i))
      SELECT &amp;fname
      USE
      fname = fname + ".DBF"
      ERASE &amp;fname
   ENDFOR

   * Returns to resulting cursor
   SELECT final

</PRE>The "final" cursor will contain a copy of each field for the number of
columns specified. For example, using the CUSTOMER database in the FoxPro
TUTORIAL subdirectory, you could create a three-column report by placing
the following expressions in the Detail band:
<P>
<PRE>   CNO_A        CNO_B       CNO_C
   COMPANY _A   COMPANY_B   COMPANY _C

</PRE>The records will appear in order across and down the page. For example:
<P>
<PRE>   RECORD 1    RECORD 2   RECORD 3
   RECORD 4    RECORD 5   RECORD 6
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00  FoxMac FoxDos FoxWin 2.00 2.50<BR>
2.50a 2.50b 2.60<BR>
multi<BR>
multiple multi-<BR>
column multicolumn<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgSql<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
