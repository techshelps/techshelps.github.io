

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Create a Child "Windows" Window Using the LCK </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117357">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1994/06/27">
<META NAME="Keywords" CONTENT="kbinterop kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  As shown below, you can use the FoxPro Library Construction Kit to create a child  Windows  window that can be manipulated within FoxPro. Using this method, you can create a window procedure that can receive Windows messages such as WM_PAINT.  MORE...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWQ,QBWO,QAUD,QAI4,QAEV,QBHQ,QAGQ,QAYC,QDMW,QBFY,QAKR,QAHE,QAGX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Create a Child "Windows" Window Using the LCK</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117357</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro Library Construction Kit for Windows,
   versions 2.5, 2.6
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
As shown below, you can use the FoxPro Library Construction Kit to create a
child "Windows" window that can be manipulated within FoxPro. Using this
method, you can create a window procedure that can receive Windows messages
such as WM_PAINT.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>FoxPro Sample Code</h3>
 
<P>
SET LIBRARY TO Showind.fll
=ShowTheWind()
<P>
<P><h3>C Sample Code</h3>
 
<P>
<PRE>#include &lt;windows.h&gt;
#include &lt;pro_ext.h&gt;

</PRE>HINSTANCE hinst,mhinst ;
<PRE>char szClass[] = "Class";
</PRE>HWND hwndWindow = NULL;
MSG msg;
WNDCLASS wc;
<P>
long FAR PASCAL WndProc(HWND hWnd, UINT message, WORD wParam, LONG lParam);
<P>
HINSTANCE Inst;
<P>
<PRE>void ShowTheWindow(ParamBlk FAR *parm)
</PRE>{
<PRE>   wc.style=0;
   wc.lpfnWndProc=WndProc;
   wc.cbClsExtra=0;
   wc.cbWndExtra=0;
   wc.hInstance=Inst;
   wc.hIcon=NULL;
   wc.hCursor=NULL;
   wc.hbrBackground=(HBRUSH)(COLOR_BACKGROUND + 5);
   wc.lpszMenuName=NULL;
   wc.lpszClassName=szClass;

   if(!RegisterClass(&amp;wc))
      return ;
   hwndWindow = CreateWindow(szClass, "This is a child Window",
      WS_OVERLAPPED | WS_SYSMENU | WS_BORDER | WS_MINIMIZEBOX,
      CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT,

   FindWindow(0,"Microsoft FoxPro"), NULL, Inst, NULL );
   ShowWindow(hwndWindow,SW_SHOW);
   UpdateWindow(hwndWindow);
</PRE>}
<P>
long FAR PASCAL WndProc(HWND hWnd, unsigned message,WORD wParam, LONG
lParam)
<P>
{
<PRE>   PAINTSTRUCT ps;
   switch (message)
   {
      case WM_DESTROY:
         PostQuitMessage(0);
      case WM_PAINT:
         BeginPaint(hWnd,(LPPAINTSTRUCT)&amp;ps);
         EndPaint(hWnd,(LPPAINTSTRUCT)&amp;ps);
      default:
         return DefWindowProc(hWnd,message,wParam,lParam);
   }
</PRE>return(0L);
}
<P>
FoxInfo myFoxInfo[] = {
{"SHOWWIND", (FPFI)ShowTheWindow, 0, ""},
};
<P>
FoxTable _FoxTable = {
(FoxTable FAR *)0, sizeof(myFoxInfo) / sizeof(FoxInfo), myFoxInfo
};
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft FoxPro Library Construction Kit "Developer's Guide," version 2.5
Microsoft Visual C++ "Programmer's Reference, Volume 2: Functions"
"Programming Windows 3.1," Microsoft Press
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxWin 2.50 2.60 LCK API<BR>
KBCategory: kbinterop kbtool kbprg kbcode<BR>
KBSubcategory: FxtoolLck<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
