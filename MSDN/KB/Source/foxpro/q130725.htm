

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use the CloneObject Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130725">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/25">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  You can use the CLONEOBJECT() method to duplicate an object on the Form Designer at form-design time. If you are developing a wizard or builder, you can use CLONEOBJECT to add an object to a form. This article provides an example that illustrates h...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QAUD,QACI,QAP2,QBV8,QAB9,QAFO,QA5D,QAI2,QAJD,QAKC,QA7O,QAOE,QAMN V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use the CloneObject Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130725</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the CLONEOBJECT() method to duplicate an object on the Form
Designer at form-design time. If you are developing a wizard or builder,
you can use CLONEOBJECT to add an object to a form. This article provides
an example that illustrates how to use this method.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
This example runs a modal form that determines the number of controls to be
placed on a form. This modal dialog box returns a value to the program. In
this code, a command button is created, and the CLONEOBJECT method
duplicates the command button. Note that the caption for each of the
buttons is blue.

<OL><P><LI>Create a form. Using the following table as a guide, modify the form's
   properties and methods. Name the form CLONEOBJ.
<P>
<PRE>   Property       What to Type in the Property Sheet
   ------------------------------------------------------------------------
   BackColor      192,192,192
   Caption        Enter Number of Controls
   Unload Event   RETURN nValue        &amp;&amp;This is the value the form returns
   WindowType     1-Modal

</PRE><P><LI>Place a spinner on the form. Using the following table as a guide,
   modify the spinner's properties:
<P>
<PRE>   Property          Type in the Property Sheet
   ------------------------------------------------------------------------
   ControlSource     nValue
   KeyboardHighvalue 10
   KeyboardLowValue   1
   SpinnerHighValue  10
   SpinnerLowValue    1

</PRE><P><LI>Place a command button on the form. Using the following table as a
   guide, modify the command button's properties:
<P>
<PRE>   Property          Type in the Property Sheet
   ------------------------------------------------------------------------
   Caption           OK
   Click Event       RELEASE ThisForm

</PRE><P><LI>Copy and paste the following code into a program file (.PRG file), and
   run it.
<P>
<PRE>      *:   CLONEOBJ
      DO Form CloneObj TO nNumberofControls

      CREATE Form test2 NOWAIT

      =ASELOBJ(atest,1)       &amp;&amp; Place the name of the form in an array.
      atest(1).Caption="See the new controls on the Form"
      atest(1).LockScreen=.T. &amp;&amp; Changes are refreshed all at once
      =MESSAGEBOX('There is no control')

      * Define the first command button:
      atest(1).AddObject('mycmd1','CommandButton')
      atest(1).mycmd1.ForeColor=RGB(0,0,255)

      * Duplicate the first command button, and store the name of the
      * previous command button to position the new control relative to the
      * position of the previous command button:
      FOR I=2 TO nNumberofControls
         OldName='Mycmd'+ALLTRIM(STR(I-1))
         NewName='Mycmd'+ALLTRIM(STR(I))

         atest(1).mycmd1.CloneObject(NewName) &amp;&amp; Duplicate command button.
         oref=EVALUATE('atest(1).'+NewName)
         oOldref=EVALUATE('atest(1).'+OldName)
         oref.Top=oOldref.Top+35
         oref.Caption=NewName

      ENDFOR
      atest(1).SetAll('Visible',.T.,'CommandButton')
      atest(1).Refresh
      =MESSAGEBOX('Now there are '+ ALLTRIM(STR(nNumberofControls))+ ;
      ' controls')

</PRE></OL>The above program creates a form called TEST2.SCX with the number of
command buttons specified in the first form's spinner. When the program
file finishes running, TEST2.SCX remains open for modifications.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: FxtoolFormdes<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
