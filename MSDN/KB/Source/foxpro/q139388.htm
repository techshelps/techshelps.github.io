

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Create a Thermometer Bar in Visual FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q139388">
<META NAME="KBModify" CONTENT="1996/10/17">
<META NAME="KBCreate" CONTENT="1995/11/08">
<META NAME="Keywords" CONTENT="kbprg kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Windows-based applications often use a thermometer bar to represent the progress of a certain task visually. This article shows by example how to create a general-purpose thermometer bar that you can use in new or existing Visual FoxPro application...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEB,QAH4,QAUJ,QADN,QAW6,QAPN,QAPF,QAI4,QA56,QA55,QATK,QAR8,QAIV,QAA7,QAFH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Create a Thermometer Bar in Visual FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 17, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q139388</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows-based applications often use a thermometer bar to represent the
progress of a certain task visually. This article shows by example how to
create a general-purpose thermometer bar that you can use in new or
existing Visual FoxPro applications.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For this example, a timer is used to simulate a process. At regular
intervals, the thermometer bar is updated to indicate the percentage of
completion.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a new program that contains the following code:
<P>
   PUBLIC othermometer
   othermometer = CreateObject('thermometer')
   othermometer.Visible = .T.
<P>
   DEFINE CLASS thermometer AS form
<P>
<PRE>           Height = 73
           Width = 385
           DoCreate = .T.
           AutoCenter = .T.
           Caption = ""
           Closable = .F.
           ControlBox = .F.
           MaxButton = .F.
           MinButton = .F.
           Movable = .F.
           Name = "Form1"

       ADD OBJECT shape2 AS shape WITH ;
           Height = 25, ;
           Left = 24, ;
           Top = 24, ;
           Width = 336, ;
           Name = "Shape2"

       ADD OBJECT shape1 AS shape WITH ;
           BackColor = RGB(0,0,255), ;
           Height = 25, ;
           Left = 24, ;
           Top = 24, ;
           Width = 0, ;
           Name = "Shape1"

       ADD OBJECT timer1 AS timer WITH ;
           Top = 0, ;
           Left = 0, ;
           Height = 23, ;
           Width = 23, ;
           Interval = 100, ;
           Name = "Timer1"

       PROCEDURE timer1.Timer
           IF This.Parent.shape1.Width&lt;336
              This.Parent.shape1.Width=This.Parent.shape1.Width+2
           ELSE
              WAIT WINDOW 'Finished!'
              Thisform.Release
           ENDIF
       ENDPROC

   ENDDEFINE

</PRE><P><LI>Run the program. The thermometer bar form should display, and the
   thermometer bar should progress at a constant rate until it finishes.
<P>
</OL><h3>Another Example</h3>
 
<P>
The previous example uses a timer to simulate a process. This example
demonstrates how to implement this thermometer bar in a loop. The WAIT
TIMEOUT command inside the loop represents where the developer would place
code appropriate for the application.
<P>
The overall width of the thermometer bar is 300 pixels. Because the code
in the loop is executed 100 times, the width of the thermometer is
incremented 3 pixels at a time to achieve an overall thermometer bar width
of 300 pixels. This incremental value will vary depending on the number of
times through the loop.
<P>
<PRE>   PUBLIC othermometer
   othermometer = CreateObject('thermometer')
   othermometer.Visible = .T.

   i=0
   SET CONSOLE OFF

   DO WHILE i&lt;100
      WAIT TIMEOUT 1        &amp;&amp; Place application-specific code here
      othermometer.update()
      i=i+1
   ENDDO

   WAIT WINDOW 'Finished'

   othermometer.Release

   DEFINE CLASS thermometer AS form

           Height = 73
           Width = 349
           DoCreate = .T.
           AutoCenter = .T.
           Caption = ""
           Closable = .F.
           ControlBox = .F.
           MaxButton = .F.
           MinButton = .F.
           Movable = .F.
           Name = "Form1"

       ADD OBJECT shape2 AS shape WITH ;
           Height = 25, ;
           Left = 24, ;
           Top = 24, ;
           Width = 300, ;
           Name = "Shape2"

       ADD OBJECT shape1 AS shape WITH ;
           BackColor = RGB(0,0,255), ;
           Height = 25, ;
           Left = 24, ;
           Top = 24, ;
           Width = 0, ;
           Name = "Shape1"

       ADD OBJECT timer1 AS timer WITH ;
           Top = 0, ;
           Left = 0, ;
           Height = 23, ;
           Width = 23, ;
           Interval = 100, ;
           Name = "Timer1"

       PROCEDURE update
          This.shape1.Width=This.shape1.Width+3
       ENDPROC

   ENDDEFINE
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode kbhowto<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 17, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
