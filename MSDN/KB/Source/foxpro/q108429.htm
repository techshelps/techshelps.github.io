

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use PostMessage() with FOXTOOLS </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108429">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1993/12/12">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The code example below demonstrates how FOXTOOLS.FLL can be used to call the PostMessage() function from FoxPro for Windows.  NOTE: For backward compatibility, Visual FoxPro still supports FOXTOOLS.FLL (included in earlier FoxPro versions), the Vis...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAGI,QAY5,QBWQ,QAEV,QBV8,QAB9,QBHQ,QAYC,QAHE,QAGQ,QAIF,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use PostMessage() with FOXTOOLS</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108429</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro Library Construction Kit, version 2.5
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The code example below demonstrates how FOXTOOLS.FLL can be used to call
the PostMessage() function from FoxPro for Windows.
<P>
NOTE: For backward compatibility, Visual FoxPro still supports FOXTOOLS.FLL
(included in earlier FoxPro versions), the Visual FoxPro API library that
allows calls to 16-bit .DLL functions. However, in Visual FoxPro, the
DECLARE command is the preferred method for calling .DLL functions.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The FOXTOOLS.FLL file is a FoxPro application programming interface (API)
library that allows FoxPro programs to call many Windows dynamic-link
library (DLL) functions. The FOXTOOLS.WRI document explains how to use
FOXTOOLS.FLL. Both files are located in the GOODIES\FOXTOOLS subdirectory
of the main FoxPro for Windows directory.
<P>
The PostMessage() function posts (places) a message in a window's message
queue and then returns without waiting for the corresponding window to
process the message. This function is part of the Microsoft Windows API.
This function accepts the following parameters:
<P>
<PRE>   BOOL PostMessage(hwnd, uMsg, wParam, lParam)

   HWND hwnd;     /* handle of the destination window */
   UINT uMsg;     /* message to post */
   WPARAM wParam;     /* first message parameter */
   LPARAM lParam;     /* second message parameter */

</PRE>This article demonstrates how to use PostMessage() to send a WM_SYSCOMMAND,
SC_MAXIMIZE message to the main FoxPro window. The WM_SYSCOMMAND message is
sent when the user chooses a command from the Control (system) menu or when
the user chooses the Maximize button or the Minimize button. The second
parameter specifies the type of system command requested. SC_MAXIMIZE is
sent when the Maximize command is chosen.
<P>
By using the PostMessage() function to send this message to the FoxPro
window, you can "trick" FoxPro for Windows into thinking that the user
chose Maximize from the Control menu.
<P>
Both WM_SYSCOMMAND and SC_MAXIMIZE are constants. These constants are
defined in the WINDOWS.H file, which is included with the Windows Software
Development Kit (SDK). By finding the location in WINDOWS.H where
WM_SYSCOMMAND and SC_MAXIMIZE are defined, you can to determine that
WM_SYSCOMMAND has a hexadecimal value of "0x0112" and SC_MAXIMIZE has a
hexadecimal value of "0xF030". These hexadecimal values can be converted to
decimal values of 274 and 61,488 respectively.
<P>
<PRE>   * Load the FOXTOOLS library

   SET LIBRARY TO SYS(2004)+"FOXTOOLS.FLL"

   * Call RegFn() to register the PostMessage() function.

   func_ref = regfn("PostMessage", "IIIL", "I")

   * If RegFn() returned a value that is greater than -1, it
   * can be assumed that the function was successfully
   * registered.

   IF func_ref &gt; -1

        * The mainhwnd() function, found in FOXTOOLS, is used to
        * obtain a handle for the main FoxPro window.

        wnd_hndl = mainhwnd()

        * CallFn() is used to call the PostMessage() function with
        * the appropriate parameters. The parameters required
        * by PostMessage() are found in the Windows Software
        * Development Kit. This particular call will place
        * a Maximize (274,61488) message in the message queue
        * for the FoxPro window (wnd_hndl). FoxPro will
        * respond by maximizing its main window.

        = callfn(func_ref,wnd_hndl,274,61488,0)

   ENDIF

   * Unload the library

   SET LIBRARY TO

</PRE><h2>REFERENCES</h2>
 
<P>
Microsoft FoxPro for Windows FOXTOOLS.WRI document
Microsoft Windows Software Development Kit
Microsoft Visual C++
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxWin 2.50 2.50a 2.50b foxtools<BR>
api fll<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgFoxtools<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
