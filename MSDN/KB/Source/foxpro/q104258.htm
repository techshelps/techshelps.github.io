

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sample Code for Creating Multiple-Selection GET List Box </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q104258">
<META NAME="KBModify" CONTENT="1996/04/29">
<META NAME="KBCreate" CONTENT="1993/09/13">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  FoxPro does not include a multiple-selection GET object that is activated with a READ command. However, you can create a multiple-selection list object by storing the information that is selected in the VALID clause for the list object, as explaine...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVW,QAVX,QA2Q,QBVR,QABH,QABI,QAYL,QAG2,QAPN,QBV8,QBFM,QAH4,QAW6,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Sample Code for Creating Multiple-Selection GET List Box</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q104258</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
FoxPro does not include a multiple-selection GET object that is activated
with a READ command. However, you can create a multiple-selection list
object by storing the information that is selected in the VALID clause for
the list object, as explained below.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are several different methods of creating a multiple-selection list
object. The following example demonstrates how to make selections in an
array. (In the example, the array is called "test".) The selections are
marked by a check mark [CHR(251)], and then the selection is displayed when
the Done button is chosen. The VALID routine for the push button sorts the
array and stores the selected options in a variable. All options that were
selected are stored in the "checked" variable.
<P>
<P><h3>Notes</h3>
 

<UL><LI>If you use a two-column array, most statements in this code need to
   refer to  TEST[i,1] if the information you want is in the first column.

<LI>Under Windows, you must use the FoxPro for Windows font. The default
   font for a list box is MS Sans Serif, which does not display a check
   mark for CHR(251).
<P>
   CLOSE DATABASE
   CLEAR
<P>
   USE tutorial\customer
   *** Create array test to store the field CNO from database
   COPY TO ARRAY test FIELDS cno
   *** Store a space as the first character of every element of the
   *** array.
   FOR i = 1 TO ALEN(test)
<P><PRE>      test(i) = " " + test(i)
</PRE>   ENDFOR
   *** Initialize variables
<PRE>   selected = 0       &amp;&amp; Variable to store number of selected items
   checked = " "      &amp;&amp; Variable to store selected items

   DEFINE WINDOW test FROM 0,0 TO 17,20 TITLE "Test Application"
   MOVE WINDOW test CENTER
   ACTIVATE WINDOW test
   @ 2,2 GET choice FROM test DEFAULT 1 SIZE 10,10 ;
      VALID myval()
   @ 14,2 GET button PICTURE "@* Done" VALID done() DEFAULT 1
   READ CYCLE
   RELEASE WINDOW test

   *** VALID procedure for list box
   PROCEDURE myval
      *** Test to see if item has been selected by checking first
      *** character
      IF SUBSTR(test(choice),1,1) = " "
         *** Store check mark as first character of array element
         *** when item is selected.
         test(choice) = CHR(251) + SUBSTR(test(choice),2)
         *** Increment number of items selected
         selected = selected + 1
      ELSE
         *** Store a space as first character of array element
         *** to unselect item.
         test(choice) = " " + SUBSTR(test(choice),2,LEN(test(choice))-1)
         *** Decrement number if items selected
         selected = selected - 1
      ENDIF
      *** Reset current object to list box
      _CUROBJ = OBJNUM(choice)

   *** VALID procedure for Done push button
   PROCEDURE done
      *** Sort selected items to top if array
      result = ASORT(test,1,ALEN(test),1)
      *** Store selected items to variable "checked"
      FOR i = 1 to selected
      *** Substitute any desired code to store selected options
          checked = SUBSTR(test(i),2) + " " + checked
      ENDFOR
      RELEASE test
      *** Display selected options
      WAIT WINDOW "You selected " + checked
      CLEAR READ
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxDos FoxWin 2.00 2.50 2.50a list<BR>
popup multi<BR>
select<BR>
multi-select multiselect multiseletion<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
