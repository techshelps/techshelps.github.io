

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Simple Internet API Sample -- HTML Into Memo Field </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q174524">
<META NAME="KBModify" CONTENT="1997/10/02">
<META NAME="KBCreate" CONTENT="1997/09/30">
<META NAME="Keywords" CONTENT="FxotherSample FxprgGeneral vfoxwin">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The sample program below will connect to an Internet or intranet Web page and bring back the HTML code and store it into a memo field of a FoxPro table.  MORE INFORMATION  Save the sample program below into a Visual FoxPro program file. Use the fol...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAVZ,QA4Q,QAUD,QBWA,QAH4,QAD7,QATX,QBV9,QBRJ,QAQW,QADN,QAI4,QAY4,QAMB,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Simple Internet API Sample -- HTML Into Memo Field</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 2, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q174524</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0, 5.0a
   on the following platforms: NT, Win95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The sample program below will connect to an Internet or intranet Web page
and bring back the HTML code and store it into a memo field of a FoxPro
table.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Save the sample program below into a Visual FoxPro program file. Use the
following syntax to run the program:
<P>
<PRE>   DO readurl.prg WITH "<B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B>"

</PRE>Any Internet or intranet URL can be passed as a parameter. Microsoft.com
was chosen for this example.
<P>
Note that Microsoft Internet Explorer must be installed on the computer.
<P>
<PRE>   * READURL.PRG - return the HTML for a specified URL in HURL.MEMO
   *
   * passed: URLName, in the form "<B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B>"
   *
   * returns: length of HTML file
   *
   * usage:
   *
   *      m.urllength = readurl("<B><A HREF="http://www.microsoft.com">http://www.microsoft.com</A></B>")
   *
   *
   * notes:
   * 1 - IE does not need to be running to use this, but must be installed,
   * as the program uses an option that gets information from the registry
   *
   * 2 - the URL name apparently MUST be passed in the form shown above.
   *

   PARAMETERS UrlName

   DECLARE INTEGER InternetOpen IN wininet.DLL STRING sAgent, ;
         INTEGER lAccessType, STRING sProxyName, ;
         STRING sProxyBypass, INTEGER lFlags

   DECLARE INTEGER InternetOpenUrl IN wininet.DLL ;
      INTEGER hInternetSession, STRING sUrl, STRING sHeaders, ;
      INTEGER lHeadersLength, INTEGER lFlags, INTEGER lContext

   DECLARE INTEGER InternetReadFile IN wininet.DLL INTEGER hfile, ;
         STRING @sBuffer, INTEGER lNumberofBytesToRead, INTEGER @lBytesRead

   DECLARE short InternetCloseHandle IN wininet.DLL INTEGER hInst

   #DEFINE INTERNET_OPEN_TYPE_PRECONFIG 0
   #DEFINE INTERNET_OPEN_TYPE_DIRECT 1
   #DEFINE INTERNET_OPEN_TYPE_PROXY 3
   #DEFINE SYNCHRONOUS 0
   #DEFINE INTERNET_FLAG_RELOAD 2147483648
   #DEFINE CR CHR(13)


   IF NOT FILE("hurl.dbf")
         CREATE TABLE hurl (MEMO M)
   ELSE
         USE hurl
   ENDIF
   APPEND BLANK

   * what application is using Internet services?
   sAgent = "VPF 5.0"

   hInternetSession = InternetOpen(sAgent, INTERNET_OPEN_TYPE_PRECONFIG, ;
         '', '', SYNCHRONOUS)

   * debugging line - uncomment to see session handle
   * WAIT WINDOW "Internet session handle: " + LTRIM(STR(hInternetSession))

   IF hInternetSession = 0
         WAIT WINDOW "Internet session cannot be established" TIME 2
         RETURN 0
   ENDIF

   hUrlFile = InternetOpenUrl(hInternetSession, UrlName, '', ;
         0, INTERNET_FLAG_RELOAD, 0)

   * debugging line - uncomment to see URL handle
   * WAIT WINDOW "URL Handle: " + LTRIM(STR(hUrlFile))

   IF hUrlFile = 0
         WAIT WINDOW "URL cannot be opened"
         RETURN 0
   ENDIF

   DO WHILE .T.
         * set aside a big buffer
         sReadBuffer = SPACE(32767)
         lBytesRead = 0
         m.OK = InternetReadFile(hUrlFile, @sReadBuffer, ;
            LEN(sReadBuffer), @lBytesRead)

         * debugging code - uncomment if necessary
         *WAIT WINDOW "hURLFile: " + LTRIM(STR(hURLFile)) + CR + ;
         *                  "lBytesRead: " + LTRIM(STR(lBytesRead)) + CR ;
         *                  + "m.OK      : " + LTRIM(STR(m.OK))

         REPLACE hurl.MEMO WITH sReadBuffer ADDITIVE

         * uncomment to watch the changes to the memo file
         * MODIFY MEMO hurl.memo

         * error trap - either a read failure or read past eof()
         IF m.OK = 0 OR lBytesRead = 0
            EXIT
         ENDIF
   ENDDO

   * close all the handles we opened
   =InternetCloseHandle(hUrlFile)
   =InternetCloseHandle(hInternetSession)

   * return the number of bytes read
   RETURN LEN(hurl.memo)

</PRE><h2>REFERENCES</h2>
 
<P>
"Visual Basic and the Win32 Internet SDK" by James Braun (September 1996
MSDN)
<P>
 
<PRE>Keywords          : FxotherSample FxprgGeneral vfoxwin
Technology        : kbInetDev
Version           : Win:3.0,3.0b,5.0,5.0a
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 2, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
