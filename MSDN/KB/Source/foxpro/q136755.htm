

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Replacing the Visual FoxPro Desktop with an App's Form </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136755">
<META NAME="KBModify" CONTENT="1997/05/27">
<META NAME="KBCreate" CONTENT="1995/09/13">
<META NAME="Keywords" CONTENT="FxprgUdwindow kbprg vfoxwin">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  A Visual FoxPro application design may require that the Visual FoxPro desktop be hidden and the application's own forms occupy the entire Windows desktop area. This article explains how to do that.  This article adds the steps necessary to make the...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAH4,QA56,QA55,QAO4,QA0J,QAGB,QAB9,QAJH,QAJX,QAEF,QADR,QBV8,QAY5,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Replacing the Visual FoxPro Desktop with an App's Form</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 27, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136755</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A Visual FoxPro application design may require that the Visual FoxPro
desktop be hidden and the application's own forms occupy the entire
Windows desktop area. This article explains how to do that.
<P>
This article adds the steps necessary to make the application's form the
desktop. It concludes with the steps necessary to terminate the application
and restore the Visual FoxPro desktop.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Procedure</h3>
 

<OL><P><LI>Start the application's form and establish the Visual FoxPro event
   handler with the READ EVENTS command. The code in the .prg file
   continues with the procedure needed to terminate the application's form,
   stop the Visual FoxPro event handler, and return to the Visual FoxPro
   desktop. After that code there is the function to hide the main Visual
   FoxPro window.
<P>
   *******************************************************************
   ** Starter.prg  Extreme minimum sample Code to start the application
   *******************************************************************
   *
   DO FORM appform.scx
   READ EVENTS
<P>
   PROCEDURE back2vfp
   ** The application's form was activated from the desktop level as a
   ** desktop level form. The event handler is at the desktop level, and
   ** is equivalent to a property of the _SCREEN object, so it must be
   ** terminated by a method of the _SCREEN object. As no _SCREEN
   ** object members are visible (no command buttons, text boxes, etc.),
   ** a Timer event is used to clear events. The timer object is not
   ** visible, and doesn't need to be in order to be activated.
   ** To activate the Timer: Add it to the _SCREEN
   *
   _SCREEN.AddObject('oTime','MyTimer')  &amp;&amp; MyTimer is the
<PRE>   **                                       current instance
   ** End of procedure Back2vfp
   **
   ** Class definition. The TIMER event is triggered after two seconds
   DEFINE CLASS MyTimer AS Timer

      Interval= 2000

      PROCEDURE Timer
         CLEAR EVENTS
         _SCREEN.RemoveObject('oTime')
      ENDPROC
   ENDDEFINE
   **
   ** End of extreme minimum sample Starter.prg*******************
   ***************************************************************

</PRE><P><LI>In the application's form, declare three properties of the form to serve
   as global references in the following function. Also place a command
   button or other object on the form, this object provides an event that
   can terminate the application. For this example, name the three
   properties FoxHWND, FoxGone, and ShowState. Name the command button
   Quit. Its Click event will contain code to terminate the form.
<P>
   CAUTION: If a template class is used to create a form, and its DeskTop
   property is set to .F., then setting the DeskTop property of the created
   form to .T. will have no effect. In that case, running the form will
   cause the main Visual FoxPro Window and the form within it to not be
   visible, which will require a rebooting in Windows 3.x, and potentially
   damaging files associated with the application.
<P>
<P>
   For more information about the behavior of the Desktop property, please
   see the following article(s) in the Microsoft Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../FOXPRO/Q141315.htm">Q141315</A></B>
<PRE></PRE>      TITLE     : Changing Subclassed Form's Desktop Property Has No Effect

   ** The following is the code to hide the Visual FoxPro desktop.

   **************************************************************
   * This function may be called in the Load Event of the
   * application's form that has these properties:
   *
   * WindowType = Modal,
   * AlwaysOnTop = True, and
   * DeskTop = True
   **************************************************************

   #DEFINE W32sDLL "W32SCOMB.DLL"
   #DEFINE W32DLL "USER32.DLL"
   IF "3.5" $ OS(1) OR "Windows 4" $ OS(1) OR "NT" $ OS(1)  &amp;&amp;
      cDLL = W32DLL
   ELSE
      cDLL = W32sDLL
   ENDIF

   DECLARE integer FindWindow IN &amp;cDLL integer, string
   DECLARE Integer ShowWindow IN &amp;cDLL Integer, Integer

   SW_MAXIMIZE = 3
   SW_SHOWNORMAL = 1
   SW_SHOWMINIMIZED = 2
   SW_SHOWGONE = 0

   ThisForm.showstate = SW_SHOWNORMAL

   NullPointer = 0
   ThisForm.FoxHWND = FindWindow(NullPointer, _SCREEN.Caption)

   * Hide the Main Visual FoxPro Window
   ThisForm.FoxGone = ShowWindow(ThisForm.FoxHWND, SW_SHOWGONE)

   ** The next command is optional - it shows the successful
   ** execution of this function's code.
   ** =MessageBox("Visual FoxPro Desktop is hidden...")

   **************************************************************
   ** End of function.
   **************************************************************

</PRE><P><LI>Place the following code in the Click event of the Quit command button.
<P>
   * Clear the form
   ThisForm.Release
   *
   * Restore the Visual FoxPro desktop
   ThisForm.FoxGone = ShowWindow(ThisForm.FoxHWND, ThisForm.showstate)
   *
   * Terminate the READ EVENTS with a CLEAR EVENTS two seconds after
   * restoring the Visual FoxPro desktop
<PRE>   DO Back2vfp    &amp;&amp; Procedure found in the calling program Starter.prg

</PRE></OL><h3>Caveats</h3>
 
<P>
If this code is placed in a project and built into an application, the user
will receive the following error messages in a Locate File dialog box:
<P>
<PRE>   Unable to find Unknown FINDWINDOW
   Locate, Ignore, Ignore All, Cancel

</PRE>Once the user chooses Ignore, the following error messages appear:
<P>
<PRE>   Unable to find Unknown SHOWWINDOW.
   Locate, Ignore, Ignore All, Cancel

</PRE>This is because Visual FoxPro is trying to resolve the external references
in the DECLARE statements associated in the Load event's code. The user
can:

<UL><LI>Ignore the errors, and the project will build without a problem.
<P>
   -or-

<LI>Add a program to the project that references the FINDWINDOW and
   SHOWWINDOW as a procedure or a function.
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: SDI Command window timer _SCREEN<BR>
Keywords            : FxprgUdwindow kbprg vfoxwin<BR>
Version             : 3.0 5.0<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>
Resolution Type     : kbcode<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 27, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
