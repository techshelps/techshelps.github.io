

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Benefits and Uses of Automation in Visual FoxPro 5.0 Servers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q155083">
<META NAME="KBModify" CONTENT="1997/01/10">
<META NAME="KBCreate" CONTENT="1996/08/21">
<META NAME="Keywords" CONTENT="kbinterop kb3rdparty kbusage">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visual FoxPro for Windows version 5.0 introduces the capability of making a Visual FoxPro application an Automation Server. It also contains a program named  Automation Manager  and another named  RemAuto Connection Manager.   This article discusse...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA2K,QARL,QAPN,QA56,QA55,QAJH,QANN,QAGU,QAH5,QAH6,QAGI,QAI5,QAW6,QBVX,QBVP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Benefits and Uses of Automation in Visual FoxPro 5.0 Servers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q155083</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual FoxPro for Windows version 5.0 introduces the capability of making a
Visual FoxPro application an Automation Server. It also contains a program
named "Automation Manager" and another named "RemAuto Connection Manager."
<P>
This article discusses the purpose of these facilities, but does not
contain "how to" information.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The capability of Visual FoxPro for Windows version 5.0 to make a Visual
FoxPro application an Automation Server leads to such questions as "What
are the benefits in creating an Automation Server?" and "What can users do
with the application that they couldn't do before?"
<P>
Another question prompted by this new capability is "What are those two
menu options in the Visual FoxPro 5.0 program group named "Automation
Manager" and "RemAuto Connection Manager?"
<P>
<P><h3>Benefits and Uses of Automation Server</h3>
 
<P>
The primary advantage of having Automation Servers is that any application
that is an ActiveX (previously called OLE) Controller (client) can create
an instance of a Visual FoxPro server application and access its properties
and methods. Therefore, applications such as Microsoft Excel, Microsoft
Access, or an application written in Visual Basic or Visual C++ can issue a
CreateObject() that specifies a Visual FoxPro Automation Server.
<P>
That server may be Visual FoxPro, with its generous, powerful set of
properties and methods, or it may be a Visual FoxPro application that has
additional methods and properties originated by the application developer.
<P>
The server may be instructed to extract and process data that is then
retrieved by the client, Microsoft Excel for instance, under client
control.
<P>
Alternatively, the client may be another Visual FoxPro application that
assigns a task to an Automation Server with the instruction "call me back
when you've finished." Then the client goes on to do other work while the
server works asynchronously and independently.
<P>
Visual FoxPro applications can be either .EXE or .DLL servers. Developers
can choose to create a DLL (in-process) server to run in the same process
space as the client itself. Or they can choose to create an EXE that runs
as a separate process, either on the client's machine or remotely.
<P>
NOTE: Only EXEs can be used for remote automation.
<P>
An advantage to both the developer and the user is that these servers can
be stored and executed on remote machines without the client being aware of
the fact that the application is remote.
<P>
If the client issues CreateObject(), automation proxies provide the
application interfaces between machines and the Registry provides the data
that allows Microsoft ActiveX to link the client and the server
automatically.
<P>
<P><h3>The Automation Manager</h3>
 
<P>
The new Automation Manager is required for doing remote automation. It
serves as the stub used on the server-side of a remote machine to marshal
and handle the remote procedure calls (RPCs). In addition, it also provides
proxy services on Automation Callbacks made to the client. In this case,
the Automation Manager must also be installed on the client system.
<P>
A callback occurs when the client passes an object to the server and the
server invokes a method or sets a property on it. Specifically, the client
application defines a class and instantiates an object from that class. It
then passes that object's reference to the server.
<P>
For instance, the object has a method called "jobdone." Jobdone tests a
property named "done" to see if it is true and, if it is, turns the
background of a textbox to magenta and plays a .WAV file to alert the
operator. This all happens on the client machine.
<P>
The server receives the object reference from the client and then proceeds
to execute the SQL Select, monitor the COM port, or whatever. When the
server has completed its job, it sets the "done" property of the client's
callback object to .T. and calls the callback object's "jobdone" method.
<P>
The client application is free to run its own application without waiting
for the server, until the server provides the callback.
<P>
<P><h3>RemAuto Connection Manager</h3>
 
<P>
The RemAuto (Remote Automation) Connection Manager allows you to setup a
connection to the remote automation server. It works by displaying all
local servers and allows you to redirect a server to a remote one that you
specify with a network address, protocol, and permissions.
<P>
Visual FoxPro 5.0 also has a tool called CLIREG32.EXE that allows you to
register a remote automation server without the server being physically
located on the current (client) machine. The CLIREG32.EXE learns about the
remote sever and registers the access to it from information passed to the
client system in a .VBR file and a .TLB file that are created when the
server application is generated through Visual FoxPro 5.0's Project
Manager.
<P>
In the Visual FoxPro for Windows 5.0 directory folder there is a
"Samples\Servers" folder containing a local server application (Gopher) and
a remote automation example named PoolMgr. The project for each should be
rebuilt. The Gopher application should be built as a DLL, while the PoolMgr
application should be built as an EXE.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbinterop kb3rdparty kbusage<BR>
KBSubcategory: FxinteropOle<BR>
Additional reference words: 5.00 kbdsd VFoxWin OLE Automation
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
