

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Validate Data by Using Customized Error Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130355">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/17">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When doing field-level validation on a form, you may want to use a custom error message and bypass the Visual FoxPro default error message such as  Invalid input.  This article shows by example how to use custom error messages and turn off Visual F...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAUD,QBV4,QBT6,QAHP,QAVX,QAVW,QAPN,QAKR,QAKD,QAGB,QAH4,QA01,QAPF,QALW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Validate Data by Using Customized Error Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130355</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When doing field-level validation on a form, you may want to use a custom
error message and bypass the Visual FoxPro default error message such as
"Invalid input." This article shows by example how to use custom error
messages and turn off Visual FoxPro default error messages during
field-level validation routines.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When designing validation routines as one of the active methods for a
form's text boxes, developers often return a value of false (.F.) when the
entered data fails the validation routine. Here is an example validation
routine:
<P>
<PRE>   If (M.Field &lt;&gt; "TEST")
      Wait Window "Incorrect Value"
      Return .F.
   Endif

</PRE>A user who enters an invalid value sees the "Incorrect Value" Wait Window
and also sees another Wait Window put up by Visual FoxPro that says
"Invalid input."
<P>
To suppress the Visual Foxpro message, modify the field-level validation to
return a value of zero (0). This turns off the FoxPro default error
messages. Here's an example:
<P>
<PRE>   If (M.Field &lt;&gt; "TEST")
      Wait Window "Incorrect Value"
      Return 0
   Endif

</PRE><h3>Code Sample</h3>
 
<P>
The following code example demonstrates this behavior. It uses a form and
two text boxes. It also serves as a good example of how, in a program, you
can define objects and add new objects to defined objects.
<P>
*--------------------------------------------------------------*
<PRE>* Program: ValidTst - (C) 1995 - Microsoft Corporation         *
* This program demonstrates the difference between returning   *
* a value of false (.F.) when a field fails its validation     *
</PRE>* test versus returning a value of zero (0). Note: In order to *
<PRE>* leave the input field, you MUST enter the value of TEST.     *
</PRE>*--------------------------------------------------------------*
<PRE>frmMyForm = CREATEOBJECT('Form')              &amp;&amp; Create a Form.
frmMyForm.Closable = .F.                      &amp;&amp; Disable Control menu.

frmMyForm.AddObject('txtBox1','NewTextBox')   &amp;&amp; Add 1st text box.
frmMyForm.AddObject('txtBox2','OldTextBox')   &amp;&amp; Add 2nd text box.
</PRE>frmMyForm.AddObject('cmdQuit','cmdQuitButton')&amp;&amp; Quit Cmnd button.
<P>
<PRE>frmMyForm.SHOW                                &amp;&amp; Display the form.
READ EVENTS                                   &amp;&amp; Start event processing.

</PRE>*------------------------------------------------------*
* The VALID clause for this text box will use a custom *
<PRE>* error message. The only thing you will see is the    *
* message box showing what you typed in.               *
</PRE>*------------------------------------------------------*
DEFINE CLASS NewTextBox as textbox
<PRE>  Visible = .T.
  Left    = 125
  Top     = 20

  PROCEDURE Valid
    IF (This.Value &lt;&gt; "TEST")
      =MessageBox("You entered: "+Alltrim(This.Value))
      RETURN 0                &amp;&amp; Invalid data, do NOT return .f.
    ENDIF
</PRE>ENDDEFINE
<P>
*------------------------------------------------------*
<PRE>* In the second text box, if you don't type in TEST,   *
</PRE>* You will see FoxPro's default error message (Invalid *
<PRE>* input) as well as the message box.                   *
</PRE>*------------------------------------------------------*
DEFINE CLASS OldTextBox as textbox
<PRE>  Visible = .T.
  Left    = 125
  Top     = 70

  PROCEDURE Valid
    IF (This.Value &lt;&gt; "TEST")
      =MessageBox("You Entered: "+Alltrim(This.Value))
      RETURN .F.             &amp;&amp; Returning FALSE here.
    ENDIF
</PRE>ENDDEFINE
<P>
DEFINE CLASS cmdQuitButton AS CommandButton  &amp;&amp; Create command button.
<PRE>    Caption = '\&lt;Quit'       &amp;&amp; Caption on the command button.
    Cancel  = .T.            &amp;&amp; Default Cancel command button (Esc).
    Left    = 125            &amp;&amp; command button column.
    Top     = 150            &amp;&amp; command button row.
    Height  = 25             &amp;&amp; command button height.
    Visible = .T.

    PROCEDURE Click
      CLEAR EVENTS           &amp;&amp; Stop event processing, close Form.
</PRE>ENDDEFINE
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
