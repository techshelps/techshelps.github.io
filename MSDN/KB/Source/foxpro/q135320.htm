

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Modify a Table's Structure Programmatically in FoxPro </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q135320">
<META NAME="KBModify" CONTENT="1995/08/22">
<META NAME="KBCreate" CONTENT="1995/08/20">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article shows by example how to change the structure of a data table programmatically.  MORE INFORMATION  Modifying the structure of a pre-existing data table in FoxPro is not possible in the run-time environment because the Modify Structure c...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAEF,QA9N,QAIC,QA5V,QAY2,QA7O,QA7N,QAVX,QAVW,QASB,QAGB,QARR,QAUJ,QAH4,QDI1 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Modify a Table's Structure Programmatically in FoxPro</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 22, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q135320</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, version 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to change the structure of a data table
programmatically.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Modifying the structure of a pre-existing data table in FoxPro is not
possible in the run-time environment because the Modify Structure command
is not supported. To modify a table structure, you must:

<OL><P><LI>Copy the structure into an array or interim table.

<P><LI>Modify the particular element or field.

<P><LI>Create a table from this changed array or table.
<P>
</OL><h3>Sample Code</h3>
 
<P>
Following is sample code that creates a table programmatically and copies
its structure to an array. It then changes the length of one of the fields,
and creates a table from the edited array.
<P>
* Create Table myTable
<P>
CREATE TABLE myTable;
<PRE>  (firstname C(20),;
   lastname  C(20),;
   city   C(20))
</PRE></OL>INSERT INTO myTable VALUES("Eric","Cardenas","Sydney")
LIST STRUCTURE
LIST
COPY TO myTemp
<P>
* Store structure into an array
<P>
=AFIELDS(arrTable)
<P>
Change length of first_name to 30
<P>
arrTable[1,3] = 30
setSAFETY = SET("SAFETY")
SET SAFETY OFF
<P>
CREATE TABLE myTable;
<PRE>  FROM ARRAY arrTable
</PRE>APPEND FROM myTemp
LIST STRUCTURE
LIST
SET SAFETY &amp;setSAFETY
<P>
<P><h3>Using the COPY STRUCTURE EXTENDED Command</h3>
 
<P>
If you want to add or delete a field, it may be useful to us the COPY
STRUCTURE EXTENDED command, and then work with the structure .DBF file.
The COPY STRUCTURE EXTENDED command makes a table that has four fields:
Field_name, Field_type, Field_len, and Field_dec. Each record of the table
corresponds to a field in the original table.
<P>
<P><h3>Step-by-Step Example</h3>
 

<OL><P><LI>Create a table named Test with the following format:
<P>
<PRE>   field name    type     size
   ---------------------------
   cfield1        C        10
   cfield2        C        15
   nField1        N        4

</PRE><P><LI>Save the changes, and enter two or three records. The actual data is not
   important.

<P><LI>Create the following program:
<P>
<PRE>   close all                           &amp;&amp; clean up before starting
   use test                            &amp;&amp; use the file just created
   copy structure extended to newstruc &amp;&amp; copy its structure to a new table
   select 0                            &amp;&amp; select...
   use newstruc                        &amp;&amp; and use this new table
   locate for field_name = "CFIELD2"   &amp;&amp; Find the record corresponding to
                                       &amp;&amp; the second field

   * At this point, the record could be deleted, thereby removing the field
   * from the structure. For this example, just change its length. Changing
   * Field_len to a smaller number than in the original structure results
   * in a truncation of field data when you append from the original file.

   replace field_len with 20           &amp;&amp; change the length from 15 to 20
   create newtest2 from newstruc       &amp;&amp; create new table with the change
   append from test                    &amp;&amp; append record from the original
   close all

   * uncomment the following code to remove the old table permanently and
   * rename the new table to the old tables name:

   * erase test.dbf                     &amp;&amp; clean up after ourselves
   * erase newstuc.dbf
   * rename newtest2.dbf to test.dbf
   * erase newtest2.dbf

</PRE><P><LI>Run this program, and browse the Newstruc table. Notice that the field
   names are all capitalized. This is important. The LOCATE FOR command
   will not work if the sentinel value is not capitalized also.

<P><LI>Remove the comment asterisk from the last four lines of code if you want
   to rename the new file to the old file's name, and delete the temporary
   table created as well as the original table.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxWin 2.60a structure modifying<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgTable<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 22, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
