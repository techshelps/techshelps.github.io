

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Visual FoxPro Language Tips and Tricks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q141868">
<META NAME="KBModify" CONTENT="1997/03/11">
<META NAME="KBCreate" CONTENT="1995/12/28">
<META NAME="Keywords" CONTENT="FxprgGeneral kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article briefly describes some of the changes found in Visual FoxPro 3.0 and how to use the new features.  MORE INFORMATION  _SCREEN and activeControl Property  In previous versions of FoxPro, you may have used the FoxPro system variable _CURO...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QDL9,QBWO,QBWN,QAH4,QBWS,QBV8,QAB9,QBWQ,QAB5,QBVV,QA7O,QAOE,QAMN,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Visual FoxPro Language Tips and Tricks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q141868</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
3.00 3.00b 5.00 |3.00b
<PRE>WINDOWS         MACINTOSH
</PRE>kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
<LI>Microsoft Visual FoxPro for Macintosh, version 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article briefly describes some of the changes found in Visual FoxPro
3.0 and how to use the new features.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>_SCREEN and activeControl Property</h3>
 
<P>
In previous versions of FoxPro, you may have used the FoxPro system
variable _CUROBJ to refer to the object that currently had the focus.
Although the _CUROBJ variable has been retained for backward compatibility,
Microsoft recommends that you now refer to an object or control on a form
by using the _SCREEN reference and activeControl property. To return the
name of the control that has the focus use this code:
<P>
<PRE>   _SCREEN.activeform.activecontrol.name

    -or-

    thisform.activecontrol.name

    -or- (if the form is part of a formset)

    thisformset.thisform.activecontrol.name

</PRE>To return the name of the current control, use this code:
<P>
<PRE>   CurControl=_SCREEN.activeform.activecontrol.name or

   -or-

   CurControl=thisform.activecontrol.name

   -or- (if the form is part of a formset)

   thisformset.CurControl=thisform.activecontrol.name

</PRE>To set the caption of the current control, use this code:
<P>
<PRE>   _SCREEN.activeform.activecontrol.caption="my caption"

   -or-

   thisform.activecontrol.caption="my caption"

   -or- (if the form is part of a formset)

   thisformset.thisform.activecontrol.caption="my caption"

</PRE>To move the cursor to a control, use this code:
<P>
<PRE>   _screen.activeform.&lt;controlname&gt;.setfocus

   -or-

   thisform.&lt;controlname&gt;.setfocus

   -or- (if the form is part of a formset)

   thisformset.thisform.&lt;controlname&gt;.setfocus

</PRE>NOTE: &lt;controlname&gt; is the name of the control you wish to become active.
<P>
<P><h3>/N Parameter on the RUN Command</h3>
 
<P>
The RUN command is available on the Windows platform only. The RUN command
in FoxPro for Windows has a /N parameter that allows you to launch a
Windows-based application. In fact, FoxPro for Windows introduced the /N
option for executing windows-based applications from FoxPro. This
functionality is retained in Visual FoxPro. The following command launches
Word for Windows, and opens the readme document.
<P>
<PRE>   RUN /N &lt;drive&gt;&lt;path&gt;WINWORD.EXE README.DOC

</PRE>The Microsoft Windows Control Panel contains many utilities that you can
use in your applications. You can also call these utilities using the RUN
command:
<P>
<PRE>   RUN /N CONTROL COLOR
   RUN /N CONTROL PRINTERS
   RUN /N CONTROL DESKTOP

</PRE>You can include an optional numeric value immediately after /N to specify
how the Windows-based application is opened. Do not include any spaces
between /N and the numeric value. The following table lists the numeric
value you can include and describes the state of the Windows-based
application when opened.
<P>
<PRE>Value   Application attributes
</PRE> 
<PRE>1       Active and normal size
2       Active and minimized
3       Active and maximized
4       Inactive and normal (won't work with Windows 95)
7       Inactive and minimized

</PRE><h3>Drives and Directories</h3>
 
<P>
Several FoxPro functions can be used to obtain information about drives and
directories. Compare the returned values after issuing the command SET
DEFAULT TO C:\VFP.
<P>
Drive:
<P>
<PRE>   SYS(5) returns C:
   SET('DEFAULT') returns C:

</PRE>Directories:
<P>
<PRE>   CURDIR()returns \VFP\
   SYS(2003) returns \VFP
   FULL(SET('DEFA')) returns C:\VFP\

</PRE>You can also use the ADIR() function to see if a specific directory exists.
The following example returns 0 only if the path name does not exist.
Remember that the path to a network server may not exist if the network
connection is broken.
<P>
<PRE>   ADIR(temparr,'C:\VFP\*.*','D')=0

</PRE><h3>USE Command</h3>
 
<P>
You can run the USE IN 0 command to open a table or .dbf file in the first
available work area. This command does not select that work area in which
it opened the table or .dbf file. You must use the SELECT command to do
this. You can issue the command USE IN &lt;alias&gt; to close a table or .dbf
file without selecting its work area.
<P>
A new SHARED clause for the USE command allows you to open a table or .dbf
file for shared use without using the SET EXCLUSIVE command. For more
information about the USE command, refer to the USE topic in the Help file.
<P>
<P><h3>Cross-Tab Output to Spreadsheets</h3>
 
<P>
Genxtab has been replaced by the Fpxtab program and is called from the code
created by the Query Wizard. After running the Query Wizard select the
Cross-Tab Wizard from the first screen, and follow the instructions to
create a table that can then be exported or copied to spreadsheets.
<P>
<P><h3>Custom Messages</h3>
 
<P>
You can display custom messages in the FoxPro status bar. To do this, type
the following in the Command window:
<P>
<PRE>   SET TALK OFF
   SET MESSAGE TO &lt;expC&gt;

</PRE>Where &lt;expC&gt; is the message. (You can pass a null string to display
nothing.) SET MESSAGE TO without a parameter will restore the status bar to
its normal functionality.
<P>
<P><h3>Preprocessor Directives</h3>
 
<P>
Do not use _WINDOWS, _DOS, _MAC, or _UNIX with preprocessor directives
(that is, #IF...#ENDIF). These are designed to be runtime variables. For
example the following will NOT work:
<P>
<PRE>   #define _DOS .t.
   #define _WINDOWS .f.

   * For code compiled in MS-DOS, the following would not work:

   DO CASE
       CASE _DOS
           ? "Running in MS-DOS"
       CASE _WINDOWS
           ? "Running in Windows"
   ENDCASE

</PRE>This code would not work because _DOS would be changed to .T. and _WINDOWS
would be changed to .F. so that the code could never work properly again.
Instead use the following:
<P>
<PRE>   #if "Win" $ VERS()
   #define WINDOWS_CODE .t.
   #elif "Mac" $ VERS()
   #define MAC_CODE .t.
   #elif "Unix" $ VERS()
   #define UNIX_CODE .t.
   #else
   #define DOS_CODE .t.
   #ENDIF

   #if WINDOWS_CODE
   ? "Compiled under WINDOWS"
   #elif DOS_CODE
   ? "Compiled under MS-DOS"
   #ENDIF

</PRE><h3>Preprocessor Substitution in Text Strings</h3>
 
<P>
In FoxPro 2.6, #define prevented preprocessor substitution in text strings.
This has been remedied in Visual FoxPro. The following code will work as
expected returning the text 'test' from the function call. In FoxPro 2.x
this would have resulted in a 'NOSUB not found error' message. This is
because of the way the '[]' characters were evaluated.
<P>
#DEFINE nosub 1
<P>
<PRE>   DECLARE an_array(3)
   an_array(nosub)='test'

   ? afunc[an_array[nosub]]

   FUNCTION afunc
   PARAMETER x
   RETURN x

</PRE><h3>Development Tools</h3>
 
<P>
The Foxtools.fll file, which is located in your FoxPro for Windows root
directory, contains a variety of functions you can use to enhance your
applications. Many of these functions provide access to API routines and
Microsoft Windows functions. You can view these by using the DISPLAY STATUS
command (after you use SET LIBRARY TO foxtools). Use of the window API
routines is also supported through the use of the DECLARE statement.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 vFoxMac 3.00b 3.00 VFoxWin<BR>
KBCategory: kbprg<BR>
KBSubcategory: FxprgGeneral<BR>
Keywords            : FxprgGeneral kbprg<BR>
Version             : 3.00 3.00b 5.00 |3.00b<BR>
Platform            : MACINTOSH WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
