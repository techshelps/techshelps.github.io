

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Unexpected Results from _FindVar() in FoxPro for MS-DOS </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122357">
<META NAME="KBModify" CONTENT="1995/01/05">
<META NAME="KBCreate" CONTENT="1994/11/02">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The _FindVar() function, when used with FoxPro for MS-DOS, returns 1 (TRUE) when the variable passed to this function does not exist.  CAUSE =====  An invalid (negative) NTI value was passed to the _FindVar() function.  RESOLUTION  Do not pass nega...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QAYL,QAUD,QAVX,QAVW,QAY5,QAUJ,QALW,QAHD,QAI4,QAH7,QAH6,QAH4,QAD7,QBXS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Unexpected Results from _FindVar() in FoxPro for MS-DOS</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122357</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for MS-DOS, version 2.6a
<LI>Microsoft FoxPro for MS-DOS Library Construction Kit, version 2.6a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The _FindVar() function, when used with FoxPro for MS-DOS, returns 1 (TRUE)
when the variable passed to this function does not exist.
<P>
<P><h2>CAUSE</h2>
 
<P>
An invalid (negative) NTI value was passed to the _FindVar() function.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Do not pass negative NTI values to the _FindVar() function. The NTI value
is passed to the _FindVar() function as the first parameter of that
function.
<P>
For a technique you can use to determine if a variable exists, please see
the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q115990.htm">Q115990</A></B>
   TITLE     : How to Determine If a Variable Exists in Memory

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design. The behavior of the _FindVar() function is
undefined when negative values are passed to the function. The behavior of
_FindVar() can only be predicted when valid NTI values are passed to the
function.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>FoxPro Code to Reproduce Behavior</h3>
 
<P>
CLEAR
<P>
IF "Win"$VERS()
<P>
<PRE>   SET ALTERNATE TO testwin.txt
   SET LIBRRARY TO testwin.dll

</PRE>ELSE
<P>
<PRE>   SET ALTERNATE TO testdos.txt
   SET LIBRARY TO testdos.exe

</PRE>ENDIF
<P>
SET ALTERNATE ON
<P>
testvar = "Hello this is a test"
<P>
? "Test with a variable name that does exist ..."
?
= qmark("testvar")
<P>
?
? "Test with a variable name that does not exist ..."
?
= qmark("notexist")
<P>
SET LIBRARY TO
SET ALTERNATE TO
CLOSE ALTERNATE
<P>
<P><h3>C Code to Reproduce Problem</h3>
 
<P>
<PRE>#include &lt;stdlib.h&gt;
#include &lt;stdio.h&gt;
#include &lt;pro_ext.h&gt;

void FAR NameTableIndexEx(ParamBlk FAR *parm)
</PRE>{
<P>
<PRE>     NTI nti;
     char FAR *name;
     Locator loc;
     Value val;
     int WhatFind ;
     char buffer[20];

//
//     Null terminate character string, name of variable
//

 if (!_SetHandSize(parm-&gt;p[0].val.ev_handle, parm-&gt;p[0].val.ev_length + 1))
     {
          _Error(182); // "Insufficient memory"
     }

     _HLock(parm-&gt;p[0].val.ev_handle);

     name = (char FAR *) _HandToPtr(parm-&gt;p[0].val.ev_handle);
     name[parm-&gt;p[0].val.ev_length] = '\0';

     nti = _NameTableIndex(name);

     WhatFind = _FindVar(nti, 1, &amp;loc);

    _itoa( WhatFind, buffer, 10 ) ;
    _PutStr("\nThe value returned by FindVar (where = 1) is: ") ;
     _PutStr(buffer) ;

     WhatFind = _FindVar(nti, -1, &amp;loc);

    _itoa( WhatFind, buffer, 10 ) ;
    _PutStr("\nThe value returned by FindVar (where = -1) is: ") ;
     _PutStr(buffer) ;

     WhatFind = _FindVar(nti, 0, &amp;loc);

    _itoa( WhatFind, buffer, 10 ) ;
    _PutStr("\nThe value returned by FindVar (where = 0) is: ") ;
     _PutStr(buffer) ;
    _PutStr("\n") ;

</PRE>}
<P>
FoxInfo myFoxInfo[] =
{
<PRE>     {"QMARK", (FPFI) NameTableIndexEx, 1, "C"},
</PRE>};
<P>
FoxTable _FoxTable =
{
<PRE>     (FoxTable FAR *) 0, sizeof(myFoxInfo)/sizeof(FoxInfo), myFoxInfo
</PRE>};
<P>
<P><h3>Results</h3>
 
<P>
The following results are observed when this code is executed in FoxPro for
Windows. These are the expected results:
<P>
Test with a variable name that does exist ...
<P>
The value returned by FindVar (where = 1) is: 0
The value returned by FindVar (where = -1) is: 1
The value returned by FindVar (where = 0) is: 1
<P>
Test with a variable name that does not exist ...
<P>
The value returned by FindVar (where = 1) is: 0
The value returned by FindVar (where = -1) is: 0
The value returned by FindVar (where = 0) is: 0
<P>
The following results are observed when this code is executed in FoxPro for
MS-DOS. The last two lines indicate the problem:
<P>
Test with a variable name that does exist ...
<P>
The value returned by FindVar (where = 1) is: 0
The value returned by FindVar (where = -1) is: 1
The value returned by FindVar (where = 0) is: 1
<P>
Test with a variable name that does not exist ...
<P>
The value returned by FindVar (where = 1) is: 0
The value returned by FindVar (where = -1) is: 1
The value returned by FindVar (where = 0) is: 1
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.60a FoxDos<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
