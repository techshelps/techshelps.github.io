

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: How to Clear Popup Bars in a List Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q117931">
<META NAME="KBModify" CONTENT="1996/02/16">
<META NAME="KBCreate" CONTENT="1994/07/13">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  To have a popup list display a diminishing number of elements, possibly including an empty list, follow the steps shown below. (Two procedures are given; one for FoxPro for Windows and FoxPro for Macintosh, and one for FoxPro for MS-DOS.)  MORE INF...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBXS,QAUJ,QAY2,QAGU,QBWS,QAEF,QAG2,QAY4,QA2Q,QAGB,QAYL,QACI,QBVR,QDIZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: How to Clear Popup Bars in a List Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 16, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q117931</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, 2.5b, 2.6
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b, 2.6
<LI>Microsoft FoxPro for Macintosh, versions 2.5b, 2.5c
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To have a popup list display a diminishing number of elements, possibly
including an empty list, follow the steps shown below. (Two procedures are
given; one for FoxPro for Windows and FoxPro for Macintosh, and one for
FoxPro for MS-DOS.)
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>FoxPro for Windows or FoxPro for Macintosh</h3>
 

<OL><P><LI>Start FoxPro for Windows or FoxPro for Macintosh. From the File menu,
   choose New, select Screen, and then choose the New button.

<P><LI>From the Screen menu, choose Layout.

<P><LI>Under Options, choose the Code button, choose the Screen Setup Code
   button, and then choose OK twice. In the "Untitled - Setup" window, type
   the following code:
<P>
<P><PRE>      SET SAFETY OFF
      CREATE TABLE employee ;
<PRE></PRE>         (name C(20),addr C(30),city C(30),zip C(5),;
         salary N(8,2),comments m)
      SET SAFETY ON
      INSERT INTO employee (name) VALUE ('Emp1')
      INSERT INTO employee (name) VALUE ('Emp2')
      INSERT INTO employee (name) VALUE ('Emp3')
      INSERT INTO employee (name) VALUE ('Emp4')
      INSERT INTO employee (name) VALUE ('Emp5')
      SELECT name FROM employee INTO ARRAY mpoparray
      mpopval=''     &amp;&amp; two single quotation marks

   NOTE: The SELECT-SQL command yields the array (mpoparray) that will be
   used in the list box you will define in step 6. The mpopval variable
   will  also be used by this list box.

   When you have finished typing the code, close the "Untitled - Setup"
   window.

</PRE><P><LI>Click the Button tool, and create a button set with two prompts: The
   first button will perform the action; the second will terminate the
   READ. Name the button set variable mtest.

<P><LI>Enter the following code as a procedure in the VALID code snippet of the
   button set:
<P>
<P><PRE>      IF mtest=1
<PRE></PRE>         SHOW GETS
      ELSE
         CLEAR READ
      ENDIF

</PRE><P><LI>Click the List Box tool. In the List dialog box, type "mpoparray"
   (without the quotation marks) in the From Array box, and then assign the
   list box the variable name mpopval.

<P><LI>Under Clauses, choose the "# Of Elements" button. In the resulting
   dialog box, select Expression, and then type the following:
<P>
<P><PRE>      _TALLY
</PRE>
<P><LI>From the Screen menu, choose Layout, choose the Code button, and then
   choose the "On Refresh (Show Gets)" button. In the resulting dialog box,
   enter the following code as a procedure:
<P>
<P><PRE>      IF NOT EMPTY(mpopval)
<PRE></PRE>         DELETE FOR name=mpopval
         * If you are designing a network application, the SELECT-SQL
         * should be modified as below so that the PACK is NOT necessary.
         PACK
      ENDIF
      SELECT name FROM employee INTO ARRAY mpoparray

      * The following variant might be used in a multiuser application:
      SELECT name FROM employee ;
         INTO ARRAY mpoparray WHERE NOT DELETED()

</PRE></OL>This code will prevent you from seeing any extraneous data. For example,
when the last array element is deleted, a .F. might appear in the list;
this code fragment prevents this from happening.
<P>
<P><h3>FoxPro for MS-DOS</h3>
 

<OL><P><LI>Start FoxPro for MS-DOS. From the File menu, choose New, select Screen,
   and then choose OK.

<P><LI>From the Screen menu, choose Screen Layout.

<P><LI>Under Screen Code, select Setup, and then choose OK. In the "UNTITLED
   Setup" window, type the following code:
<P>
<P><PRE>      SET SAFETY OFF
      CREATE TABLE employee ;
<PRE></PRE>         (name C(20),addr C(30),city C(30),zip C(5),;
         salary N(8,2),comments m)
      SET SAFETY ON
      INSERT INTO employee (name) VALUE ('Emp1')
      INSERT INTO employee (name) VALUE ('Emp2')
      INSERT INTO employee (name) VALUE ('Emp3')
      INSERT INTO employee (name) VALUE ('Emp4')
      INSERT INTO employee (name) VALUE ('Emp5')
      SELECT name FROM employee INTO ARRAY mpoparray
      mpopval=''     &amp;&amp; two single quotation marks

   NOTE: The SELECT-SQL command yields the array (mpoparray) that will be
   used in the popup you will define in step 6. The mpopval variable will
   also be used by this popup.

   When you have finished typing the code, close the "UNTITLED Setup"
   window.

</PRE><P><LI>From the Screen menu, choose Push Button. Create a button set with two
   prompts: The first button will perform the action; the second will
   terminate the READ. Name the button set variable mtest.

<P><LI>Enter the following code as a procedure in the VALID code snippet of the
   button set:
<P>
<P><PRE>      IF mtest=1
<PRE></PRE>         SHOW GETS
      ELSE
         CLEAR READ
      ENDIF

</PRE><P><LI>From the Screen menu, choose Popup, select Array Popup, and then type
   "mpoparray" in the Array Popup box.

<P><LI>Assign the popup the variable name mpopval, and then select the "#
   Elements" box under Options. In the resulting dialog box, select
   Expression, and then type the following:
<P>
<P><PRE>      _TALLY
</PRE>
<P><LI>From the Screen menu, choose Screen Layout. Under READ Clauses, select
   Show. In the resulting dialog box, enter the following code as a
   procedure:
<P>
<P><PRE>      IF NOT EMPTY(mpopval)
<PRE></PRE>         DELETE FOR name=mpopval
         * If you are designing a network application, the SELECT-SQL
         * should be modified as below so that the PACK is NOT necessary.
         PACK
      ENDIF
      SELECT name FROM employee INTO ARRAY mpoparray

      * The following variant might be used in a multiuser application:
      SELECT name FROM employee ;
         INTO ARRAY mpoparray WHERE NOT DELETED()

</PRE></OL>This code will prevent you from seeing any extraneous data. For example,
when the last array element is deleted, a .F. might appear in the list;
this code fragment prevents this from happening.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Information and code provided by John W. Stepp.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxDos FoxWin 2.00 2.50 2.50a 2.50b 2.50c 2.60<BR>
KBCategory: kbprg kbprb<BR>
KBSubcategory: FxprgMultiuser<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 16, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
