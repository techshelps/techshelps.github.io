

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Read from the Windows Registry </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140170">
<META NAME="KBModify" CONTENT="1996/10/17">
<META NAME="KBCreate" CONTENT="1995/11/22">
<META NAME="Keywords" CONTENT="kbenv kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  You can use the Windows API functions RegEnumValue() and RegOpenKey() to read values into a Visual FoxPro application from a multiple-valued key in the Windows registry. For single-valued registry keys (not covered in this article) use the RegQuery...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWO,QAH4,QDL9,QBWQ,QBWN,QDIT,QAKD,QA4Q,QAY2,QA56,QA55,QAY5,QAGI,QACJ,QBV8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Read from the Windows Registry</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 17, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140170</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can use the Windows API functions RegEnumValue() and RegOpenKey() to
read values into a Visual FoxPro application from a multiple-valued key in
the Windows registry. For single-valued registry keys (not covered in this
article) use the RegQueryValue() API.
<P>
More information about API functions in general can be found in the
Win32api.hlp help file that comes with the Professional version of Visual
FoxPro. Also, for information on how to write to the Windows registry,
please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FOXPRO/Q135398.htm">Q135398</A></B>
   TITLE     : How To Write to the Windows Registry Using API Calls

</PRE>NOTE: Reading from the Windows registry applies to the Windows NT and
Windows 95 operating systems. Use GetProfileString and WriteProfileString
to read and write to the appropriate .ini files in the Windows for
Workgroups and Windows 3.1 operating systems.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>General Procedure for Reading Values from the Registry</h3>
 

<OL><P><LI>Declare and initialize the variables required for the API function.

<P><LI>Declare the API functions using the DECLARE DLL Visual FoxPro function.

<P><LI>Call the RegOpenKey() API to open the registry key.

<P><LI>Call the RegEnumValue() from a loop, looping until the correct value
   string is found for the item you want.

<P><LI>Reference the variables filled by the API function.
<P>
</OL><h3>Sample Code</h3>
 
<P>
NOTE: In some cases the Registry will not have all the settings for Visual
FoxPro. Before running this code example, run REGEDIT for Windows 95 and
make sure that the TMPFILES entry is there. If it is not there, this code
example will go into an endless loop. On the Tools menu, click Options, and
then click Set as Default. This will force the entries into the registry.
<P>
The following code reads the setting for the TMPFILES value from the
Software\Microsoft\VisualFoxPro\3.0\Options\TMPFILES key in the Windows
registry.
<P>
***
***BEGIN PROGRAM CODE
***
nKeyHandle=0  &amp;&amp; Holds the handle to the key opened by RegOpenKey
<P>
iValue=0  &amp;&amp; Index of value to query
lpszValue=space(255)  &amp;&amp; Receives the name of the value
<P>
* In this example, you are looking for TMPFILES.
lpcchValue=255
* This buffer tells the API the size of the lpszValue buffer.
* If buffer is not large enough, the lpszValue buffer will be blank.
lpdwType=space(255) &amp;&amp; Receives the type code for the value entry
lpbData=space(255) &amp;&amp; Receives the data for the value entry
<P>
* In this example, it will contain the path to the TMPFILES.
<P>
lpcbData=255  &amp;&amp; This buffer tells the API the size of the lpbData buffer
<P>
* If lpbData is not large enough, the buffer will be blank.
<P>
Declare RegOpenKey in ADVAPI32.DLL INTEGER, STRING, INTEGER @nKeyHandle
<P>
Declare RegEnumValue in ADVAPI32.DLL INTEGER nKeyHandle, INTEGER iValue,;
<PRE>   STRING @lpszValue, INTEGER @lpcchValue, INTEGER, STRING @lpdwType, ;
   STRING @lpbData, INTEGER @lpcbData

</PRE></OL>** The number for the HKey_Current_User (the first parameter in RegOpenKey)
** is found in the Winreg.h header file included with Microsoft Visual C++
<P>
=RegOpenKey(2147483649,"Software\Microsoft\VisualFoxPro\3.0\Options",;
@nKeyHandle)
<P>
do while alltrim(lpszValue)!="TMPFILES"  &amp;&amp;loops through the key looking
<P>
* for TMPFILES
<PRE>     lpszValue=space(255) &amp;&amp;need to reset the buffers
     lpcchValue=255
     lpdwType=space(255)
     lpbData=space(255)
     lpcbData=255
     =RegEnumValue(nKeyHandle,iValue,@lpszValue,@lpcchValue,0,;
</PRE>@lpdwType,@lpbData,@lpcbData)
<PRE>     ?alltrim(lpbData)+ ' '+alltrim(lpszValue)
     iValue=iValue+1
</PRE>enddo
<P>
** END PROGRAM CODE **
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 VFoxWin Foxuser temp resource<BR>
spellchk<BR>
KBCategory: kbenv kbhowto kbcode<BR>
KBSubcategory: FxenvAutoexec<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 17, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
