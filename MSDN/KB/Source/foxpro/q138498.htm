

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use Additem and AddListItem and How They Are Different </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q138498">
<META NAME="KBModify" CONTENT="1995/10/25">
<META NAME="KBCreate" CONTENT="1995/10/22">
<META NAME="Keywords" CONTENT="kbprg kbcode kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Both the AddItem and AddListItem methods add items to combo boxes or list boxes. This article highlights their functionality and the differences between the two methods. In particular, this article demonstrates why the AddListitem method might be a...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBVR,QAPN,QAE1,QACI,QA4F,QANE,QAJQ,QA9N,QAYV,QAJP,QAPF,QBDA,QAM3,QAHE,QAEF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use Additem and AddListItem and How They Are Different</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 25, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q138498</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Both the AddItem and AddListItem methods add items to combo boxes or list
boxes. This article highlights their functionality and the differences
between the two methods. In particular, this article demonstrates why the
AddListitem method might be a better way to populate a multiple-column
combo box.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Additem and AddlistItem methods add items to a list and accept two
optional parameters. The differences between the two methods are mirrored
in the differences between their first parameter; AddItem accepts
nListIndex as its first parameter, and AddListItem accepts nListItemId
as its first parameter.
<P>
There are two ways to identify an item in a list:

<UL><LI>Its relative position, which represents the order in which the items are
   displayed in the list. If an item is added to the list, the relative
   position of other items might change. This is similar to the index order
   of a table. The integer that holds this value is referred as nIndex.

<LI>Its absolute position, which represents the order in which the item is
   added to the list. This value is not dependent on the way items are
   displayed in the list, and it does not change as the number of items in
   the list are modified. This concept is similar to the RECNO() function,
   which is used to identify records in a table. The integer that holds
   this value is referred as nItemId.
<P>
</UL>These two numbers can be identical, but they are different when the list is
sorted, or when items are added or removed from the list.
<P>
The Additem method inserts an item based on its relative position in the
list. The syntax is:
<P>
<PRE>   Control.AddItem(cItem [, nIndex] [, nColumn])

</PRE>The AddListItem method allows you to create a unique id for the item, and
uses nItemId. If the item already exists, the prompt is replaced. The
syntax is:
<P>
<PRE>   Control.AddListItem(cItem [, nItemID] [, nColumn])

</PRE>The following example illustrates how to use the Additem and AddListItem
methods. To run the example, copy and paste the code in a program file.
<P>
<P><h3>Sample Code</h3>
 
<P>
Omyform=CREATE('myform')
Omyform.Show()
READ EVENTS
<P>
DEFINE Class myform AS Form
<PRE>   ADD OBJECT list1 AS mylist
   ADD OBJECT list2 AS mylist2
   ADD OBJECT cmd1 AS cmdquit
</PRE>ENDDEFINE
<P>
DEFINE Class cmdquit AS CommandButton
<PRE>   Top=105
   Left = 55
   Caption="Quit"
   PROCEDURE Click
      CLEAR EVENTS
      RELEASE Thisform
   ENDPROC
</PRE>ENDDEFINE
<P>
DEFINE Class mylist AS ListBox &amp;&amp; Defines a list filled with Additem
<PRE>   Top = 3
   Left=5
   Width=90
   Height=90
   RowSourceType=0
   PROCEDURE Init
      This.AddItem('Apples',1)
      This.AddItem('Oranges',2)
      This.AddItem('Lemons',2)  &amp;&amp; Element inserted before 'Oranges'
   ENDPROC
</PRE>ENDDEFINE
<P>
DEFINE Class mylist2 AS ListBox &amp;&amp;Defines a list filled with AddListitem
<PRE>   Top = 3
   Left=100
   Width=90
   Height=90
   RowSourceType=0

   PROCEDURE Init
      This.AddListItem('Apples',1)
      This.AddListItem('Oranges',2)
      This.AddListItem('Lemons',2) &amp;&amp; Prompt overwrites 'Oranges'
   ENDPROC
</PRE>ENDDEFINE
<P>
<P><h3>Multiple-Column List Boxes</h3>
 
<P>
The AddItem method might not yield expected results when it is used to
populate a multiple-column list box. The following step-by-step example
illustrates how the elements of a multiple-column list box are displayed
when the AddItem method is used.

<OL><P><LI>Create a form.

<P><LI>Place a list box on the form.

<P><LI>Change the following properties of the list box:
<P>
   ColumnCount : 2
   ColumnWidths: 80,80

<P><LI>Save the form as TestForm, and run it.

<P><LI>In the Command window, type:
<P>
   TestForm.List1.AddItem("One",1,1)
   TestForm.List1.AddItem("Two",1,2)
   TestForm.List1.AddItem("Three",2,1)
   TestForm.List1.AddItem("Four",2,2)
<P>
</OL>The resulting list looks as follows:
<P>
<PRE>    ---------------------
    |         |   Two    |
    |         |   Four   |
    | Three   |          |
    | One     |          |
    ---------------------

</PRE></OL>This occurs because the AddItem inserts each item at the relative position
specified by the nIndex integer.
<P>
Use the ListItemId to populate a multiple-column combo box and add items on
the same row. By using the example above and replacing AddItem with
AddListItem, the list looks like this:
<P>
<PRE>   ------------------------
   | One       | Two      |
   | Three     | Four     |
   ------------------------

</PRE>For more information about the AddItem and AddListItem methods, search for
"AddItem" or "AddListItem" in the Visual FoxPro Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode kbhowto<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 25, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
