

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Error Message When Comparing Large Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q114465">
<META NAME="KBModify" CONTENT="1997/10/20">
<META NAME="KBCreate" CONTENT="1994/05/04">
<META NAME="Keywords" CONTENT="FxprgGeneral kbbuglist kberrmsg kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  In FoxPro for Windows or FoxPro for MS-DOS, when you try to compare two very large string variables while a nonmachine collating sequence is in effect, FoxPro generates an  insufficient stack space  error message.  In FoxPro for Macintosh on a 68K ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAVX,QAVW,QAH6,QAKD,QAAP,QAH7,QAD7,QATX,QAKP,QDL9,QBWQ,QBWO,QBWN,QAB7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Error Message When Comparing Large Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q114465</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.50a 2.50b 2.60 2.60a 3.00 | 2.50a 2.50b 2.60x | 2.60a
<PRE>WINDOWS                     | MS-DOS            | MACINTOSH
</PRE>kbprg kbfixlist kbbuglist kberrmsg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5a, 2.5b, 2.6x
<LI>Microsoft FoxPro for MS-DOS, versions 2.5a, 2.5b, 2.6x
<LI>Microsoft FoxPro for Macintosh, version 2.6a
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
In FoxPro for Windows or FoxPro for MS-DOS, when you try to compare two
very large string variables while a nonmachine collating sequence is in
effect, FoxPro generates an "insufficient stack space" error message.
<P>
In FoxPro for Macintosh on a 68K Macintosh, FoxPro may give the following
error when comparing two character strings if there is a CODEPAGE=AUTO line
in the FoxPro configuration file and a collation sequence other than
Machine:
<P>
<PRE>   The application "unknown" has unexpectedly
   quit because an error of type 28 occurred.

</PRE>In FoxPro for Macintosh on a PowerPC Macintosh, FoxPro may produce an
Internal Consistency Error. The PowerPC may not produce an error initially.
Reissuing the SET COLLATE TO 'general' command has been reported to cause a
Type 11 error. In short, the error message and results on a PowerPC may be
inconsistent.
<P>
<P><h2>CAUSE</h2>
 
<P>
These problems occur because FoxPro builds a key for the left and right
sides of the equation. To ensure that the result will work in all languages
(English, French, Spanish, and so on), FoxPro asks for a stack that is four
times as long as the string being made into a key.
<P>
This behavior makes sense if you understand how international keys are
constructed -- there could be a diacritical mark (accent) on each character
in the string, and some characters could be expansions where a single
character represents two characters. For example, the German beta character
represents ss. For these reasons, FoxPro asks for 2*2*n bytes.
<P>
With a large string such as an entire memo field, FoxPro may ask for more
stack space than is available. The problems listed in the Symptoms section
of this article may occur when one of the strings is around 10,000
characters.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. This problem was corrected in
Visual FoxPro 3.0b for Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Type "CODEPAGE=AUTO" (without the quotation marks) in the configuration
   file.

<P><LI>Start FoxPro.

<P><LI>Create a program named TEST, and give it the following content:
<P>
   PARAMETER sequence, strlen
   SET TALK OFF
   SET COLLATE TO sequence
   a=REPLICATE('X',strlen)
   b='Z'
   ?a=b
<P>
</OL>This program creates two memory variables of type character. Then it
compares the two variables. You pass the desired collation sequence to the
parameter sequence. The problem occurs with all collation sequences except
"machine." The following examples all use the 'general' collation sequence
for illustration purposes only. You will pass the desired string length for
"a" to the parameter, strlen.
<P>
NOTE: The values for strlen provided here cause the problem in each version
of FoxPro, as noted. However, these values may vary. To produce the error,
you may want to increase the second parameter that you pass to the above
code. The REPLICATE command is being used to create long character strings
for comparison. You will pass the desired string length for "a" to the
parameter, strlen.
<P>
In FoxPro version 2.5a or 2.5b for Windows, this worked:
<P>
<PRE>   DO test WITH 'general',8926

</PRE></OL>But changing the value of strlen to 8927 produced a general protection (GP)
fault, and FoxPro remained in memory. You could use a memory monitor to see
that User memory and physical memory are reduced after loading FoxPro.
After the GP fault, memory is not recovered, so you must restart Windows.
<P>
In the 16-bit version of FoxPro version 2.5a or 2.5b for MS-DOS, this
worked:
<P>
<PRE>   DO test WITH 'general', 3899

</PRE>But changing the value of strlen to 3900 produced an "Internal consistency
error." Changing the value of strlen to 8925 caused the computer to reboot.
Changing the value of strlen to 8926 caused the computer to hang (stop
responding). In this situation the computer could not be warm-booted. It
required a cold or hard boot.
<P>
In the 32-bit version of FoxPro version 2.5a or 2.5b for MS-DOS, this
worked:
<P>
<PRE>   DO test WITH 'general',8776

</PRE>But changing the value of strlen to 8777 causes FoxPro to display what
appears to be a corrupted alert window with the "Internal consistency
error" message. Increasing the value of strlen can also result in an
"abnormal termination. Page fault" error message.
<P>
In FoxPro version 2.5b for Macintosh, this worked:
<P>
<PRE>   DO test WITH 'general',9912

</PRE>But changing the value of strlen to 9913 produced this alert:
<P>
<PRE>  The application "unknown" has unexpectedly
  quit because an error of type 28 occurred.

</PRE>In FoxPro version 2.6 for Windows, this worked:
<P>
<PRE>   DO test WITH 'general',8927

</PRE>But changing the value of strlen to 8928 caused an "Insufficient stack
space" error.
<P>
In the 16-bit version of FoxPro version 2.6 for MS-DOS, this worked:
<P>
<PRE>   DO test WITH 'general',3898

</PRE>But changing the value of strlen to 3899 produced an "Internal consistency
error" message.
<P>
In the 32-bit version of FoxPro version 2.6 for MS-DOS, this worked:
<P>
<PRE>   DO test WITH 'general',8774

</PRE>But changing the value of strlen to 8775 displayed what appears to be a
corrupted alert window with the "Internal consistency error" message.
Increasing the value of strlen to 8790 produced an "Insufficient stack
space" error message.
<P>
In Visual FoxPro, this worked:
<P>
<PRE>   DO test WITH 'general',8929

</PRE>But changing the value of strlen to 8930 caused an "Insufficient stack
space" error.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxWin FoxMac FoxDos 2.50a 2.50b<BR>
2.60 2.60a buglist2.50a buglist2.50b buglist2.60 buglist2.60a fixlist3.00b<BR>
buglist3.00 err msg errmsg GPF ICE crash non-machine hung frozen<BR>
KBCategory: kbprg kbfixlist kbbuglist kberrmsg<BR>
KBSubcategory: FxprgGeneral<BR>
Keywords          : FxprgGeneral kbbuglist kberrmsg kbfixlist kbprg<BR>
Version           : 2.50a 2.50b 2.60 2.60a 3.00 | 2.<BR>
Platform          : MACINTOSH MS-DOS WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
