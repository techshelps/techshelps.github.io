

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Creating Regular Indexes Through VFP ODBC Driver </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q163396">
<META NAME="KBModify" CONTENT="1997/02/11">
<META NAME="KBCreate" CONTENT="1997/02/10">
<META NAME="Keywords" CONTENT="kbprg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Currently, it is not possible to create a regular index with the INDEX ON command on a table through the Visual FoxPro ODBC driver, either by SQL Pass Through or a Default Value, Rule, or Trigger code.  RESOLUTION  It is possible to create a Regula...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QAUD,QAH6,QAH7,QAD7,QAPF,QAB9,QATP,QBV8,QAMB,QBWA,QA56,QA55,QAZB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Creating Regular Indexes Through VFP ODBC Driver</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q163396</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro ODBC Driver, versions 1.0, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Currently, it is not possible to create a regular index with the INDEX ON
command on a table through the Visual FoxPro ODBC driver, either by SQL
Pass Through or a Default Value, Rule, or Trigger code.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
It is possible to create a Regular index indirectly with the ALTER TABLE or
CREATE TABLE commands.
<P>
NOTE: Please use steps 1-6 from the MORE INFORMATION section below prior to
using the following examples.
<P>
<P><h3>Example 1</h3>
 
<P>
This example creates a Regular index on a table when the table is created.
A problem you might encounter is that the SQLEXEC() function returns a &lt; 0
result indicating that it failed (and it did fail to carry out the exact
command it was passed). The command passed tries to create a Persistent
Relationship to itself and Visual FoxPro completed a portion of the process
before it realized it could not complete the entire operation. The
byproduct of the command failing is the index tag. The drawback with this
method is there is no positive means of determining whether the tag was
actually created:
<P>
<PRE>      mchnl=SQLCONNECT('vfp') &amp;&amp; Connect to datasouce
      ? mchnl &amp;&amp; Needs to return a value &gt; 0
      ? SQLEXEC(mchnl,'CREATE TABLE x6 (col1 c(1), col2 c(3), ;
          FOREIGN KEY col2 TAG col2 REFERENCES x6)')
      ? AERROR(temp)
      DISPLAY MEMORY temp
      ? SQLDISCONNECT(mchnl)

</PRE><h3>Example 2</h3>
 
<P>
This example creates a regular index on an existing table. It functions on
the same principles as Example 1 and has the same drawbacks:
<P>
<PRE>      mchnl=SQLCONNECT('vfp') &amp;&amp; Connect to datasouce
      ? mchnl &amp;&amp; Needs to return a value &gt; 0
      ? SQLEXEC(mchnl,'CREATE TABLE x1 (col1 c(1), col2 c(3))')
      ? SQLEXEC(mchnl,'ALTER TABLE x1 ;
      ADD FOREIGN KEY col2 TAG col2 REFERENCES x1')

</PRE><h3>Example 3</h3>
 
<P>
This is probably the best method because you can be confident that the
Index was not created if the SQL Pass Through command returns a &lt; 0 number.
This example requires a Primary Key to exist for the same reasons that
Examples 1 and 2 SQL Pass Through commands failed. The SQL Pass Through
command being passed is going to establish a Persistent Relationship and
then DROP the FOREIGN KEY with the SAVE clause. This will destroy the
Persistent Relationship but will preserve the Regular index TAG:
<P>
<PRE>      mchnl=SQLCONNECT('vfp') &amp;&amp; Connect to datasource
      ? mchnl &amp;&amp; Needs to return a value &gt; 0
      ? SQLEXEC(mchnl,'CREATE TABLE x2 (col1 c(1) PRIMARY KEY col2 c(3))')
      ? SQLEXEC(mchnl,'ALTER TABLE x2 ;
          ADD FOREIGN KEY col2 TAG col2 REFERENCES x2')
      ? SQLEXEC(mchnl,'ALTER TABLE x2 DROP FOREIGN KEY TAG col2 SAVE')

</PRE><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Using the INDEX ON command through the Visual FoxPro ODBC driver will
generate either a syntax error or a "Trigger Failed" error.
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Start the ODBC Driver Manager or ODBC Data Source Administrator.

<P><LI>Create a New Datasource using the Visual FoxPro Database Driver.

<P><LI>Give the Datasource the name of "VFP."

<P><LI>For Database Type, choose Visual FoxPro Database(.DBC).

<P><LI>For the Path of the Database, use the BROWSE button and point to
   SAMPLES\DATA\testdata.dbc in the Visual FoxPro directory.

<P><LI>Start Visual FoxPro.

<P><LI>Issue a MODIFY DATABASE ? command, and then select the
   SAMPLES\DATA\Testdata.dbc.

<P><LI>From the Database Menu, select Edit Stored Procedures.

<P><LI>Place the following code in the Stored Procedures:
<P>
<P><PRE>      PROCEDURE cmdins
      USE customer IN 0 EXCLUSIVE
      SELECT customer
      INDEX ON contact TAG contact
      RETURN .T.
</PRE>
<P><LI>Save and the changes made to the Stored Procedures and then choose
   Close.

<P><LI>Select the Customer Table.

<P><LI>Right-click the Customer Table to bring up the Shortcut menu.

<P><LI>Choose Modify.

<P><LI>In the MODIFY STRUCTURE dialog box for the Customer table, select
   the TABLE Tab.

<P><LI>For the INSERT Trigger, enter "cmdins()" (the stored procedure
   above).

<P><LI>Save everything and issue a CLOSE ALL to close the database and table.

<P><LI>Issue the following commands from the Command Window:
<P>
<P><PRE>      mchnl=SQLCONNECT('vfp') &amp;&amp; Use the datasource defined above.
      ? mchnl &amp;&amp; Ensure that a value greater than zero is returned.
      ? SQLEXEC(mchnl,"INSERT INTO customer ;
<PRE></PRE>          (cust_id, company, contact, title, address, city, region, ;
          postalcode, country, phone, fax, maxordamt) ;
          VALUES ('31111', 'one', 'one', 'one', 'one', 'one', 'one', ;
          'one', 'one', 'one', 'one', 1)")
      * The above command invokes the Insert Trigger which fails.
      ? AERROR(temp) &amp;&amp; Use AERROR() to get the last error
      DISPLAY MEMORY LIKE temp
      * Note it returns the "Trigger Failed" error
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbprb<BR>
KBSubcategory: FxprgGeneral FxprgTable vfoxwin vfpodbc<BR>
Additional reference words: 1.00 5.00
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
