

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Read Information from Windows .INI Files </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102564">
<META NAME="KBModify" CONTENT="1996/04/29">
<META NAME="KBCreate" CONTENT="1993/08/04">
<META NAME="Keywords" CONTENT="kbenv kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The examples below demonstrate how to read specific information from the Windows .INI files. The first example shows how to read information from the WIN.INI file; the second example shows how to read information from any other Windows .INI file.  ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWN,QDL9,QBWO,QAPF,QAUD,QBWQ,QBFN,QA0B,QAY2,QBXT,QA5V,QAY5,QAYL,QAIB,QAB9 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Read Information from Windows .INI Files</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102564</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The examples below demonstrate how to read specific information from the
Windows .INI files. The first example shows how to read information from
the WIN.INI file; the second example shows how to read information from any
other Windows .INI file.
<P>
NOTE: This article only applies to 16-bit versions of Microsoft Windows
(Windows versions 3.x).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Example 1</h3>
 
<P>
This example will read the Load= line from the [Windows] section of
the WIN.INI file:
<P>
\kbon
<PRE>   SET LIBRARY TO SYS(2004)+"FOXTOOLS.FLL"
   MRETURN=REPLICATE(CHR(0), 144)
   MREGISTER=REGFN("GETPROFILESTRING","CCC@CI","I")
   MCALL=CALLFN(MREGISTER,"WINDOWS","LOAD","",@MRETURN,256)
   WAIT WINDOW ALLTRIM(MRETURN)
</PRE>\kboff
<P>
MRETURN is created as a large and empty character variable. This variable
is required when calling a function like this one. If we were to omit the
line to set up this variable, the function would not work. MRETURN can also
be initialized by using SPACE(144) instead of using REPLICATE().
<P>
MREGISTER is the variable name that defines the function using the RegFn()
function. This example registers the GetProfileString() function and
returns a value from the WIN.INI file.
<P>
MCALL returns a numeric value after calling the MREGISTER() function. The
number returned is the length of the returned string. MRETURN is still
going to be the full length that it was originally created.
<P>
This example returns the setting of the Load= line under the [Windows]
section of the WIN.INI file. If the Load= line does not contain any
information, the Default Return value, specified in the MCALL statement
after the "LOAD" key name, returns nothing and MCALL equals zero. The
Default Return value can be modified to return any character expression.
<P>
To read a different section of the WIN.INI file, change "WINDOWS" in the
example above to the application name of the section to be read from (for
example, "DESKTOP" would indicate the [Desktop] section). In addition,
change "LOAD" to reflect the key name to be read (for example, "WALLPAPER"
would indicate the Wallpaper= line under the [Desktop] section).
<P>
NOTE: Application name and key name are not case sensitive.
<P>
<P><h3>Example 2</h3>
 
<P>
This example will read the Color Schemes= line from the [Current]
section of the CONTROL.INI file:
<P>
\kbon
<PRE>   SET LIBRARY TO SYS(2004)+"FOXTOOLS.FLL"
   MRETURN=REPLICATE(CHR(0), 144)
   MREGISTER=REGFN("GETPRIVATEPROFILESTRING","CCC@CIC","I")
   MCALL=CALLFN(MREGISTER,"CURRENT","COLOR SCHEMES", ;
      "",@MRETURN,256,"CONTROL.INI")
   WAIT WINDOW ALLTRIM(MRETURN)
</PRE>\kboff
<P>
NOTE: The MCALL lines should be combined to fit on one line.
<P>
The commands are almost the same as those in Example 1, except that this
example uses the GetPrivateProfileString() function. This function allows
any Windows .INI file, other than the WIN.INI file, to be read. Another
difference between this example and Example 1 is that you must specify the
.INI file to be read. By default, if no path is specified, Windows will
look in the Windows program directory (usually C:\WINDOWS) for the .INI
file.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft Windows Software Development Kit "Guide to Programming,"
version 3.1
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxWin VFoxWin 2.50 2.50 2.50a 2.50b 2.60 2.60a<BR>
3.00<BR>
KBCategory: kbenv kbcode<BR>
KBSubcategory: FxprgFoxtools<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
