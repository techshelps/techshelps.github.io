

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Outer Join Syntax Example for SELECT-SQL Statement </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89181 ">
<META NAME="KBModify" CONTENT="1996/06/01">
<META NAME="KBCreate" CONTENT="1992/09/13">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When FoxPro Relational Query By Example (RQBE) is used to join two databases, a record in the parent database that does not have any corresponding record in the child database is omitted from the joined database. However, under some circumstances, ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAPN,QBPJ,QA2Q,QDNB,QAG2,QAB4,QAY2,QBWS,QAEN,QAZV,QAB9,QBVV,QBM2,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Outer Join Syntax Example for SELECT-SQL Statement</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 1, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89181 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6x
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5x, 2.6x
<LI>Microsoft Visual FoxPro for Macintosh, version 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When FoxPro Relational Query By Example (RQBE) is used to join two
databases, a record in the parent database that does not have any
corresponding record in the child database is omitted from the joined
database. However, under some circumstances, this is not the desired
behavior. The text below details how to perform an "outer join" that
preserves all records in the parent database.
<P>
NOTE: The RQBE interface cannot perform an outer join; a program must
perform the join because the RQBE interface cannot process the necessary
nested SELECT-SQL statements.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The code below demonstrates an outer join of the CUSTOMER.DBF and
INVOICES.DBF databases in the FOXPRO2\TUTORIAL directory.
<P>
NOTE: In Visual FoxPro for Windows, open the CUSTOMER.DBF and ORDERS.DBF
files in the VFP\SAMPLES\MAINSAMP\DATA subdirectory. Then, substitute
CUSTOMER.COMPANY_NAME for CUSTOMER.COMPANY, CUSTOMER.CUSTOMER_ID for
CUSTOMER.CNO, and ORDERS.ORDER_ID for INVOICES.INO in the code below.
<P>
(Note that the space before each semicolon [;] character is required.
Omitting the space from the query causes an error.)
<P>
<PRE>   SELECT customer.company, customer.cno, invoices.ino ;
      FROM customer, invoices ;
      WHERE customer.cno = invoices.cno ;
   UNION ;
   SELECT customer.company, customer.cno, 0 ;
      FROM customer ;
      WHERE customer.cno NOT IN ;
         (SELECT invoices.cno FROM invoices ;
            WHERE customer.cno = invoices.cno) ;
   INTO CURSOR QUERY

</PRE>The lines from the first SELECT statement to just before the UNION
statement
<P>
<PRE>   SELECT customer.company, customer.cno, invoices.ino ;
      FROM customer, invoices ;
      WHERE customer.cno = invoices.cno ;

</PRE>select all the records in the parent database that have a corresponding
record in the child database. This is what you normally get when you do a
join. The UNION statement tells FoxPro to include the output of the first
half of this SELECT statement with the second half in the final results. It
is important that the data in the second half of the query have the same
structure as the data in the first half of the query, otherwise errors are
generated.
<P>
The lines after the UNION statement
<P>
<PRE>   SELECT customer.company, customer.cno, 0 ;
      FROM customer ;
      WHERE customer.cno NOT IN ;
         (SELECT invoices.cno FROM invoices ;
            WHERE customer.cno = invoices.cno) ;

</PRE>retrieve all of the records in the parent database that have no
corresponding child record. This is done as follows:

<OL><P><LI>The SELECT statement in the parentheses creates a list of all the
   records that have corresponding child records.
<P>
<P><PRE>      (SELECT invoices.cno FROM invoices ;
<PRE></PRE>         WHERE customer.cno = invoices.cno) ;

</PRE><P><LI>The SELECT statement directly above that then selects all the records
   that are not in the list created by step 1.
<P>
<P><PRE>      SELECT customer.company, customer.cno, 0 ;
<PRE></PRE>         FROM customer ;
         WHERE customer.cno NOT IN ;

</PRE><P><LI>The 0 in the line for the second SELECT statement is used as a
   placeholder. If INVOICES.INO is a date field, use { / / } instead
   of the 0. Similarly, if INVOICES.INO is a character field, use " ".
   The idea is for the placeholder to be the same type as the field
   that it replaces.
<P>
   Please note that at this time, there are no plans to implement the
   functionality for a memo field placeholder. However, a workaround for
   this situation is documented in the following article in the Microsoft
   Knowledge Base:
<P>
<P><PRE>      ARTICLE-ID: <B><A HREF="../FOXPRO/Q119901.htm">Q119901</A></B>
<PRE></PRE>      TITLE     : How to Use the UNION Clause in a FoxPro SELECT
                  Statement

</PRE></OL>If the ORDER BY clause is entered at the end of the SELECT statement,
and the CNO field is used, an error message occurs. For example, the
following clause
<P>
<PRE>   ORDER BY cno

</PRE>results in an "Fieldname is not unique and must be qualified" error
message. Similarly, the following clause
<P>
<PRE>   ORDER BY customer.cno

</PRE>results in an "SQL Invalid Order by" error message.
<P>
To eliminate these errors, use the ORDER BY clause with a column number.
For example, the following clause
<P>
<PRE>   ORDER BY 1

</PRE>results in a query ordered by CNO since CNO is in column 1 of the output
table.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxMac 3.00b FoxDos VFoxWin FoxWin 2.00 2.50<BR>
2.50a 2.50b<BR>
2.60 2.60a 3.00<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgTable<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 1, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
