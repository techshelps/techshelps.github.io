

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Save &amp; Restore Record Pointer Without Negative EOF Mark </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q147169">
<META NAME="KBModify" CONTENT="1996/02/21">
<META NAME="KBCreate" CONTENT="1996/02/20">
<META NAME="Keywords" CONTENT="kbprg kbhowto kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Programmers frequently store record pointer information to a memory variable before a program accesses a table, so that they can restore the record number once the processing is finished. This article provides an alternative to using negative numbe...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAKC,QBC6,QAG8,QAUR,QDMH,QAH4,QAPF,QAO3,QAO2,QAWN,QAYY,QAVX,QAVW,QAU7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Save &amp; Restore Record Pointer Without Negative EOF Mark</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 21, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q147169</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0 and 3.0b
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Programmers frequently store record pointer information to a memory
variable before a program accesses a table, so that they can restore the
record number once the processing is finished. This article provides an
alternative to using negative numbers to indicate the end of a file.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A typical example to save and restore record pointer information is as
follows:
<P>
LOCAL lnRecNumber
SELECT Labels
**********************
* Save record Number *
**********************
lnRecNumber= IIF(EOF('Labels', -1, RECNO('Labels'))
<PRE>SELECT * FROM LABELS   &amp;&amp;Or any processing

</PRE>************************
* Restore record Number*
************************
IF lnRecNumber &gt; 0
<PRE>   GOTO (lnRecNumber)
   ELSE
   GO BOTTOM
   SKIP
</PRE>ENDIF
<P>
In this example, the negative number -1 is used to flag the end of the file
(EOF). However, using this approach might not yield the expected results
when you work with local views or when buffering is enabled.
<P>
When you enable buffering on a table, Visual FoxPro writes the records to a
buffer and permits edits until you issue a TABLEUPDATE() command. Every new
record is assigned a negative number while the data is buffered. The record
number is decremented as you add records. For example, the first record you
add has a value of -1, the second is -2, and so on. The following code
sample illustrates how Visual FoxPro assigns record numbers when table
buffering is enabled.
<P>
<P><h3>Sample Code</h3>
 
<P>
SET EXCLUSIVE OFF
CREATE TABLE TEST (cName C(10))
SET MULTI ON
=CURSORSETPROP("Buffering",5)
WAIT WINDOW "Appending Data" NOWAIT
? "Record number before the data is committed"
=AddRec("Name 1")
=AddRec("Name 2")
=AddRec("Name 3")
WAIT WINDOW "Commiting the Changes" NOWAIT
=TABLEUPDATE(.T.)
WAIT CLEAR
?
? "Record number after the data is committed"
SCAN
<PRE>  ? "Record Number:"
  ?? RECNO()
</PRE>ENDSCAN
<P>
FUNCTION AddRec
LPARAMETER cName
INSERT INTO test VALUES (cName)
? "Record Number: "
?? RECNO()
<P>
<P><h3>Alternative to Using a Negative Number</h3>
 
<P>
The alternative to using a negative number to store the end of the file is
to use the .NULL. value. In the first code sample, the line that read:
<P>
<PRE>   lnRecNumber= IIF(EOF('Labels', -1, RECNO('Labels'))

</PRE>can be changed to:
<P>
<PRE>   lnRecNumber= IIF(EOF('Labels', .NULL., RECNO('Labels'))

</PRE>You can use the ISNULL() function to verify whether the record pointer is
at the end of the file. For more information about ISNULL(), search for
ISNULL() in the Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.00b VFoxWin<BR>
KBCategory: kbprg kbhowto kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 21, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
