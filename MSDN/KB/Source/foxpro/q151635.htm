

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using SET ANSI &amp; SET EXACT with String Comparison Operator "=" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q151635">
<META NAME="KBModify" CONTENT="1996/05/29">
<META NAME="KBCreate" CONTENT="1996/05/28">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  When the logical operator  =  (equal to) is used for character string comparisons, the results may not be exactly as expected. If two strings being compared are of different lengths, the outcome varies depending on the ON/OFF states of two environm...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXS,QAG7,QATX,QAL3,QA4F,QATZ,QATY,QAJQ,QAVX,QAVW,QAPF,QAGN,QABA,QBAO,QANY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using SET ANSI &amp; SET EXACT with String Comparison Operator "="</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 29, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q151635</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b
<LI>Microsoft FoxPro for MS-DOS, versions 2.0, 2.5, 2.5a, 2.5b, 2.6, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When the logical operator "=" (equal to) is used for character string
comparisons, the results may not be exactly as expected. If two strings
being compared are of different lengths, the outcome varies depending on
the ON/OFF states of two environment settings: (1) SET EXACT specifies the
rules Visual FoxPro uses when comparing two strings of different lengths in
a non-SQL query environment; (2) SET ANSI determines whether the shorter of
two strings is padded with blanks when a SQL-string comparison is made.
Although these two environment settings have subtly different effects on
the = operator, their distinctions in functionality are often misunderstood
by developers because they both affect the comparison outcome of two
strings of different lengths.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The = operator is often used in Visual FoxPro to perform character string
comparisons. When two strings of different lengths are compared, the
results may vary depending on the ON/OFF states of two environment settings
such as SET EXACT and SET ANSI. In contrast, neither setting has an effect
if both strings are of the same length.
<P>
<P><h3>SET EXACT ON | OFF</h3>
 
<P>
SET EXACT determines the rules Visual FoxPro uses when comparing two
strings of different lengths in a non-SQL query environment. The ON state
specifies that the shorter of the two expressions is first padded on the
right with blanks to match the length of the longer expression, and then
the two expressions are matched character-for-character to be equivalent.
In contrast, the default OFF state concludes that two expressions are
equivalent if the expression on the left side is matched character-for-
character until the end of the expression on the right side is reached.
<P>
It is important to emphasize that the left-to-right order of the two
strings in a comparison is RELEVANT. Switching a string from one side of
the = operator to the other affects the result of the comparison.
Furthermore, the ON/OFF states of the setting's SET ANSI has no effect in
comparing two strings of different lengths in a non-SQL query environment.
The following examples further illustrate the point:
<P>
<PRE>Comparison:       EXACT OFF      EXACT OFF      EXACT ON      EXACT ON
                  ANSI OFF       ANSI ON        ANSI OFF      ANSI ON
</PRE> 
<P>
<PRE>? "a_" = "a"        .T.            .T.            .T.           .T.
? "a" = "a_"        .F.            .F.            .T.           .T.
? "ab" = "a"        .T.            .T.            .F.           .F.
? "a" = "ab"        .F.            .F.            .F.           .F.

</PRE>SET EXACT is scoped to the current data session.
<P>
<P><h3>SET ANSI ON | OFF</h3>
 
<P>
SET ANSI specifies how comparisons between strings of different lengths are
made with the = operator in SQL Commands. When the setting is ON, Visual
FoxPro first pads the shorter expression on the right with blanks to match
the length of the longer expression. The two strings are then compared
character-for-character for their entire lengths to be equivalent. However,
when the setting is OFF, the shorter expression is not padded with blanks.
The two strings are simply compared character-for-character until the end
of the shorter string is reached.
<P>
Visual FoxPro builds a SELECT - SQL Command in the Query Designer when you
create a query. If you choose the Equal option when creating join and
filter conditions, the = operator is included in the generated SELECT. The
SET ANSI setting can effect the results of queries you create and perform
in the Query Designer, whereas the state of SET EXACT has no effect on the
outcome of SQL string comparisons.
<P>
In SQL commands, the left-to-right order of the two strings in a comparison
is IRREVELANT. Switching a string from one side of the = operator to the
other does not effect the result of the comparison.
<P>
The following example demonstrates the precise effect of SET ANSI setting:

<OL><P><LI>Create a free table, SAMPLE, with one column named Field1 as char(20).
   Input the following records:
<P>
<P><PRE>      B
      Be
      Bet
      Between
</PRE>
<P><LI>Create a new query, test.qpr, to contain the following SELECT-SQL
   command:
<P>
<P><PRE>      SELECT SAMPLE.field1;
<PRE></PRE>         FROM SAMPLE;
         WHERE (SAMPLE.field1="B")

</PRE><P><LI>Create a new program, test.prg, containing the following code:
<P>
<P><PRE>      SET ANSI ON
      USE sample
      DO test.qpr
      CLOSE ALL
</PRE>
<P><LI>Run test.prg. Query returns the following records:
<P>
<P><PRE>      B
</PRE>
<P><LI>Copy test.prg to test2.prg. Change the state of SET ANSI so test2.prg
   contains the following code:
<P>
<P><PRE>      SET ANSI OFF
      USE sample
      DO test.qpr
      CLOSE ALL
</PRE>
<P><LI>Run test2.prg. Query returns the following records:
<P>
<P><PRE>      B
      Be
      Bet
      Between
</PRE>
<P><LI>If query test.qpr is modified to contain the following SELECT-SQL
   command:
<P>
<P><PRE>      SELECT SAMPLE.field1;
<PRE></PRE>         FROM SAMPLE;
         WHERE ("B"=SAMPLE.field1)

   Step 4 and Step 6 produce the same results.

</PRE></OL>SET ANSI is also scoped to the current data session.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.00b 2.00 2.50 2.50a 2.50b 2.60 2.60a<BR>
                            VFoxWin FoxWin<BR>
KBCategory: kbprg kbhowto<BR>
KBSubcategory: FxprgSet
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 29, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
