

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Container Classes Versus Control Classes </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q134314">
<META NAME="KBModify" CONTENT="1995/08/04">
<META NAME="KBCreate" CONTENT="1995/08/03">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  There are two main Visual FoxPro base classes, the Control class and the Container class. This article compares and contrasts them.  MORE INFORMATION  Built-in Control Classes  CheckBox ComboBox CommandButton Control Custom EditBox Header Image Lab...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QA7O,QAB5,QAOE,QAMN,QABO,QAB9,QAGI,QABA,QAU3,QAMR,QAHE,QBWS,QAHV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Container Classes Versus Control Classes</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 4, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q134314</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
There are two main Visual FoxPro base classes, the Control class and the
Container class. This article compares and contrasts them.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Built-in Control Classes</h3>
 
<P>
CheckBox
ComboBox
CommandButton
Control
Custom
EditBox
Header
Image
Label
Line
ListBox
OLEBoundControl
OLEControl
OptionButton
Shape
Spinner
TextBox
Timer
<P>
<P><h3>Built-in Container Classes</h3>
 
<P>
Column
CommandGroup
Container
Form
Formset
Grid
OptionGroup
Page
PageFrame
Toolbar
<P>
<P><h3>Differences Between the Two Base Classes</h3>
 
<P>
These two base classes are different when it comes to how objects within
each class can be referenced and manipulated. Member objects within Control
classes can only be manipulated at the design time of the class. These
objects cannot be referenced from outside the class at run time. In
contrast, objects within Container classes can be manipulated individually
at design time or run time, and they can be referenced from outside the
class by calling methods or setting properties (this applies to members and
methods not defined as PROTECTED).
<P>
<P><h3>How Subclassing Works for Container and Control Classes</h3>
 
<P>
If a Container is subclassed and child member objects are added to it
(Command Buttons, for example), then when an object is instantiated from
this container subclass, all methods and properties of any of the child
member objects as well those of the parent (the Container subclass) may be
accessed as long as they are not protected.
<P>
If a Control is subclassed and member objects are added to it, then when
this Control is instantiated, only methods and properties of the Control
class itself may be accessed, and then only if they are not protected. The
methods and properties of child member objects contained in the control
cannot be accessed from outside the control. These child members can only
be accessed from within the control (a method in the control can set a
property or call a method in a child member of the control). All methods
and properties of child members of controls are automatically protected.
<P>
Member objects must be added to Controls at design time with the ADD OBJECT
clause of the DEFINE CLASS command. Member objects may be added to
containers either at design time (with the ADD OBJECT clause) or at run
time (with the .AddObject() method).
<P>
<P><h3>Code Sample</h3>
 
<P>
<P>
*****************************************************************
* Start of CNTVSCTL.PRG
* This program contrasts Container and Control classes
*****************************************************************
<P>
ON ERROR DO errhand ;
<PRE>   WITH ERROR( ), MESSAGE( )  &amp;&amp; Traps unknown member error

</PRE>oForm1 = CREATEOBJECT( 'frmform1', 'Form with Container', 'cntContainer' )
<P>
oForm1.VISIBLE = .T.
<P>
oForm2 = CREATEOBJECT( 'frmform1', 'Form with Control', 'ctlControl' )
oForm2.LEFT = 310
oForm2.VISIBLE = .T.
READ EVENTS
<P>
ON ERROR
<P>
DEFINE CLASS frmForm1 AS FORM
<P>
<PRE>   WIDTH = 300
   SCALEMODE = 3

   PROCEDURE INIT
      PARAMETERS cformcaption cobj2add
      THIS.CAPTION = cformcaption
      THIS.ADDOBJECT( 'oAddedobject', cobj2add )
      THIS.ADDOBJECT( 'oFormbutton', 'cmdbutton2' )
      THIS.oformbutton.VISIBLE = .T.
      THIS.oAddedobject.VISIBLE = .T.
   ENDPROC

   PROCEDURE DESTROY
      CLEAR EVENTS
   ENDPROC

</PRE>ENDDEFINE
<P>
DEFINE CLASS cntContainer AS CONTAINER
<P>
<PRE>   ADD OBJECT oCenter AS center_it
   CAPTION = 'Container'
   HEIGHT = 120


   PROCEDURE INIT
      THIS.ADDOBJECT( 'ocmdButton', 'cmdbutton', 'Container Button' )
      THIS.ocmdButton.VISIBLE = .T.
      THIS.TOP = THIS.oCenter.T_B_center( THISFORM.HEIGHT, THIS.HEIGHT )
      THIS.LEFT = THIS.oCenter.L_R_center( THISFORM.WIDTH, THIS.WIDTH )
   ENDPROC

   PROCEDURE Call_click
      PARAMETERS cClickText
      THIS.ocmdButton.CLICK( cClickText )
   ENDPROC

</PRE>ENDDEFINE
<P>
DEFINE CLASS ctlControl AS CONTROL
<P>
<PRE>   ADD OBJECT oCenter AS center_it
   ADD OBJECT 'ocmdButton' AS 'cmdButton' NOINIT

   * Cannot do ADDOBJECT() in INIT PROCEDURE (at run time) in Control.
   * Must add with ADD OBJECT clause of DEFINE CLASS command.

   CAPTION = 'Control'
   HEIGHT = 120

   PROCEDURE INIT

      * The following command calls the ocmdButton INIT and passes
      * the desired button caption to the INIT
      THIS.ocmdButton.INIT( 'Control Button' )

      THIS.TOP = THIS.oCenter.T_B_center( THISFORM.HEIGHT, THIS.HEIGHT )
      THIS.LEFT = THIS.oCenter.L_R_center( THISFORM.WIDTH, THIS.WIDTH )
   ENDPROC

   PROCEDURE Call_click
      PARAMETERS cClickText
      THIS.ocmdButton.CLICK( cClickText )
   ENDPROC

</PRE>ENDDEFINE
<P>
DEFINE CLASS cmdbutton AS COMMANDBUTTON
<P>
<PRE>   PROCEDURE INIT
      PARAMETERS cButtonCaption
      THIS.WIDTH = 125
      THIS.TOP = THIS.PARENT.oCenter.T_B_center ;
         ( THIS.PARENT.HEIGHT, THIS.HEIGHT )
      THIS.LEFT = THIS.PARENT.oCenter.L_R_center ;
         ( THIS.PARENT.WIDTH, THIS.WIDTH )
      THIS.CAPTION = cButtonCaption
   ENDPROC

   PROCEDURE CLICK
      PARAMETERS cClickText
      WAIT WINDOW IIF(TYPE('cClickText') = 'C', cClickText ;
         ,THIS.PARENT.CAPTION+' Button'+' Click in '+ '"' ;
         +THIS.PARENT.CAPTION+'"') TIMEOUT 5
   ENDPROC

</PRE>ENDDEFINE
<P>
DEFINE CLASS cmdbutton2 AS COMMANDBUTTON
<P>
<PRE>   TOP = 215
   CAPTION = 'Form Button'

   PROCEDURE INIT
      THIS.LEFT =  (THIS.PARENT.WIDTH-THIS.WIDTH)/2
   ENDPROC

   PROCEDURE CLICK   &amp;&amp; Passes wait window message to display
      * The following line causes an error when calling Click event
      * of ocmdbutton in Control, but works properly when called
      * in Container.
      THIS.PARENT.oAddedobject.ocmdButton.CLICK('Click Event for ';
         +'"'+THIS.PARENT.oAddedobject.CAPTION+' Button"'+' in ' ;
         +'"'+THIS.PARENT.oAddedobject.CAPTION+'"'+' Called from '+'"' ;
         +THIS.CAPTION+'"'+' Click')
      THIS.PARENT.oAddedobject.Call_click( 'Click Event for ';
         +'"'+THIS.PARENT.oAddedobject.CAPTION+' Button"' ;
         +' Called Through Call_Click Procedure in '+'"' ;
         +THISFORM.oAddedobject.CAPTION+'"')
   ENDPROC

</PRE>ENDDEFINE
<P>
* Define a class to center buttons, containers, &amp; controls:
DEFINE CLASS center_it AS CUSTOM  &amp;&amp; s
<P>
<PRE>   FUNCTION T_B_center
      PARAMETERS ncontheight nobjheight
      RETURN (ncontheight-nobjheight)/2
   ENDFUNC

   FUNCTION L_R_center
      PARAMETERS ncontwidth nobjwidth
      RETURN (ncontwidth-nobjwidth)/2
   ENDFUNC

</PRE>ENDDEFINE
<P>
PROCEDURE errhand
<PRE>   PARAMETERS nError, cMess
   DO CASE
      CASE nerror = 1925
          = MESSAGEBOX('Error # '+ALLTRIM(STR(nError))+ '. '+cMess;
               +CHR(13)+CHR(13) ;
               +'Member ocmdButton is unknown outside of Control!',48)
      OTHERWISE
          = MESSAGEBOX('Error # '+ALLTRIM(STR(nerror))+'. '+cMess)
   ENDCASE
</PRE>ENDPROC
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 4, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
