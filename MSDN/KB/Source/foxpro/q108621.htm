

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Variable Containing SQL String Can Be Used in DBExec() </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108621">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1993/12/14">
<META NAME="Keywords" CONTENT="kbtool kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  The DBExec() command sends an SQL statement to the data source, where the statement is processed. When you are creating a user-defined query that is used to query a remote data source using DBExec(), the SQL statement can be stored in a variable an...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QABM,QAGU,QAB9,QBG2,QADN,QAY2,QAVX,QAVW,QAPN,QAB4,QAAP,QBHQ,QATX,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Variable Containing SQL String Can Be Used in DBExec()</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108621</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
<LI>Microsoft FoxPro for Windows, versions 2.5, 2.5a, and 2.5b
<LI>Microsoft FoxPro Connectivity Kit, version 2.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The DBExec() command sends an SQL statement to the data source, where the
statement is processed. When you are creating a user-defined query that is
used to query a remote data source using DBExec(), the SQL statement can be
stored in a variable and that variable can be substituted directly into the
DBExec() command.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Most examples in the Connectivity Kit "User's Guide" show DBExec() being
executed with the SQL statement directly in the DBExec() function. For
example, page 39 of the Connectivity Kit "User's Guide" has the following
in the example:
<P>
<PRE>   retcode=DBExec(handle,"SELECT * FROM authors","cursor")

</PRE>These kind of examples can be misleading; it seems as if the SQL statement
has to be specified directly in the DBExec.
<P>
However, DBExec() and any other function contained in the Connectivity Kit
behave like other native functions do in FoxPro: a character string can be
stored to a variable and then that variable can be substituted when the
parameter is a character string (&lt;expC2&gt;).
<P>
Page 38 of the Connectivity Kit "User's Guide" shows the syntax for
DBExec() as follows:
<P>
<PRE>   Syntax   DBExec(&lt;expN&gt;,&lt;expC1&gt;[,&lt;expC2&gt;])

</PRE>Angle brackets (&lt;&gt;) surrounding text indicate information that the user
provides. This information can be a filename, an expression, a memory
variable name, and so on.
<P>
The following example shows that you can build an SQL statement from "x"
and "y", store it in variable "z" and use "z" in the DBExec() command:
<P>
<PRE>   ** Set library to the ODBC library used in Windows
   SET LIBRARY TO SYS(2004)+"\FPSQL.FLL"

   ** ERRVAL=error number, ERRMSG=errror message
   ** if an error is received then DBError()
   ** will be called and the error number will be
   ** stored in ERRVAL and the message in ERRMSG.
   PUBLIC errval
   PUBLIC errmsg

   errval=0
   errmsg=' '

   ** Specify source name as seen in ODBC manager.
   ** Specify user and password for server.
   ** This information is specific for each user.
   sourcename="test"
   user="sa"
   passwd=""

   ** Get a connection handle.
   handle=DBCONNECT(sourcename,user,passwd)

   IF handle &gt; 0
      WAIT WINDOW "Successfully Connected"
   ELSE
      error=DBERROR(0,@errmsg,@errval)
      WAIT WINDOW STR(errval)+" "+errmsg
      DBDISCONN(handle)
   ENDIF

   ** Set various options for session handle.
   =DBSETOPT(handle,'ConnTimeout',0)   &amp;&amp; Wait indefinitely if need be.
   =DBSETOPT(handle,'UseTables',1)     &amp;&amp; Put results into table.

   ** Use the PUBS database (a standard database that comes
   ** with SQL Server).
   a=DBEXEC(handle,"use pubs")
   IF a &gt; 0
      WAIT WINDOW "NOW USING PUBS DATABASE"
   ELSE
      error=DBError(handle,@errmsg,@errval)
      WAIT WINDOW STR(errval)+" "+errmsg
   ENDIF

   ** We could have obtained x and y from an @ SAY/GET from
   ** a screen also.
   x="select * from"
   y="stores"
   z=ALLTRIM(x)+" "+ALLTRIM(y)

   ** Perform an SQL SELECT and put results in TEST.DBF.
   a=DBEXEC(handle,z,"test.dbf")
   IF a &gt; 0
      WAIT WINDOW "SELECT * FROM STORES EXECUTED"
      BROWSE
   ELSE
      error=DBERROR(handle,@errmsg,@errval)
      WAIT WINDOW STR(errval)+" "+errmsg
   ENDIF

   ** Release connection handle and library.
   =DBDISCONN(handle)
   SET LIBRARY TO

</PRE>NOTE: If you are using Visual FoxPro for Windows, use SQLCONNECT(),
SQLEXEC(), and SQLDISCONNECT() instead of DBCONNECT(), DBEXEC(), and
DBDISCONNECT(). For more information about these functions, search for
"SQL" in the online Help.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: VFoxWin 3.00 FoxWin 2.50 2.50a 2.50b ODBC CK<BR>
Relational<BR>
Query By Example (RQBE)<BR>
KBCategory: kbtool kbprg kbcode<BR>
KBSubcategory: FxtoolCk<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
