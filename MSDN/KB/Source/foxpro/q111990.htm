

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_FP Macros in the LCK Different Between MS C and WATCOM C </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111990">
<META NAME="KBModify" CONTENT="1997/10/10">
<META NAME="KBCreate" CONTENT="1994/02/27">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Calling the C macros to return a far pointer offset or a far pointer segment can give you different results in WATCOM C and Microsoft C.  MORE INFORMATION  The C macros _FP_OFF and _FP_SEG (in Microsoft C) or FP_OFF and FP_SEG (in WATCOM C) as thei...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBHQ,QAH6,QAUD,QAO3,QAO2,QAH7,QAD7,QAH4,QAGI,QAYV,QBKN,QDL9,QBWQ,QBWO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>_FP Macros in the LCK Different Between MS C and WATCOM C</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 10, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111990</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
2.00 2.50 | 2.50
<PRE>MS-DOS    | WINDOWS
</PRE>kbinterop kb3rdparty kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FoxPro Library Construction Kit for MS-DOS, version 2.0
<LI>Microsoft FoxPro Library Construction Kit for MS-DOS and Windows,
   version 2.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Calling the C macros to return a far pointer offset or a far pointer
segment can give you different results in WATCOM C and Microsoft C.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The C macros _FP_OFF and _FP_SEG (in Microsoft C) or FP_OFF and FP_SEG (in
WATCOM C) as their names imply are meant to deal with far pointers. You
can, however, pass a near pointer to them and get different results
depending upon which C compiler you use.
<P>
If you pass a near pointer in a Microsoft C compiled library, you will get
garbage return values that could in turn cause a general protection (GP)
fault if you were to call intdosx() from FoxPro for Windows.
<P>
However, WATCOM'S macros are able to handle the non-far pointer and thus
return valid information that can be used by a call such as one to
intdosx().
<P>
<P><h2>REFERENCES</h2>
 
<P>
Microsoft C/C++ "Run-Time Library Reference," version 7.0, page 293-294
<P>
Microsoft Visual C/C++ "Reference Volume III: Run-Time Library
<PRE>  Reference," version 1.0, page 234

</PRE>WATCOM C "Library," version 9.0, pages 195-196
<P>
WATCOM C "Library Reference," version 8.5, pages 188-189
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 2.50 lck far-pointer gpf<BR>
KBCategory: kbinterop kb3rdparty kbprg<BR>
KBSubcategory:<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 10, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
