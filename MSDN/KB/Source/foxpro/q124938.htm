

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Cancel a Process While in a READ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q124938">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/01/17">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article explains how to cancel a process that has been started with a READ command. This is functionally similar to being able to press the Cancel button to terminate a print job in any Windows application.  MORE INFORMATION  A separate Cancel...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGB,QAGC,QA5V,QAZM,QAZL,QBFN,QAA7,QA5D,QAYL,QBFM,QAH4,QAJD,QAPN,QAEF,QAXC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Cancel a Process While in a READ</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q124938</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FoxPro for Windows, versions 2.5x, 2.6, 2.6a
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to cancel a process that has been started with a
READ command. This is functionally similar to being able to press the
Cancel button to terminate a print job in any Windows application.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A separate Cancel button whose VALID clause contains a CLEAR READ or some
other terminating code will not work, since FoxPro cannot initiate the
Cancel button while a previous READ is still in effect. The sample code
below shows how to work around this limitation.
<P>
<P><h3>Steps to Create a Cancel Button for an Active READ</h3>
 

<OL><P><LI>Create a Quick Screen using one of the smaller .DBF files in the FoxPro
   TUTORIAL directory, such as the MOREREG.DBF database file. This file
   ships with approximately 11 records.

<P><LI>Near the center of the screen, create a button called Process, and
   assign this button a variable named "scrlrecs" (without the quotation
</OL>marks). (SCRLRECS stands for "scroll records.") In the VALID clause for
Process, enter the following code:
<P>
<PRE>      SHOW GET scrlrecs DISABLED
      m.cancel = .F.

      DO WHILE m.cancel = .F.
           SHOW GETS LEVEL 1
           SKIP
           IF EOF( )
                GO TOP
           ENDIF
           @ 8.000,52.000 GET cnclbttn PICTURE "@*HN Cancel" ;
              SIZE 1.625,8.125,0.500 DEFAULT 1 FONT "MS Sans Serif",8 ;
              STYLE "B" VALID gocancel( )
           READ CYCLE TIMEOUT .25
      ENDDO

      GO TOP
      SHOW GETS
      SHOW GET scrlrecs ENABLED

      PROCEDURE gocancel
           m.cancel = .T.
           WAIT WINDOW 'Process Terminating' TIMEOUT 2
      RETURN

</PRE><P><LI>Below the Process button, create another button called Exit and
   assign the Exit button a variable named "extscx" (without the quotation
   marks). (EXTSCX stands for "exit screen.")

<P><LI>Select the Terminate READ On Selection check box.

<P><LI>Save the screen as MYCANCEL.SCX and generate a MYCANCEL.SPR file.
<P>
</OL><h3>Explanation of Procedures</h3>
 

<OL><P><LI>After MYCANCEL.SPR has been run, and Process button chosen, the VALID
    for this button disables the Process button.

<P><LI>The VALID clause creates a memory variable called M.CANCEL and assigns
    it the logical value of false (.F.).

<P><LI>The DO WHILE loop begins running.

<P><LI>As long as M.CANCEL maintains its value of false, the DO WHILE loop
    cycles repeatedly, executing the SHOW GETS, which display the values
    of the fields for the current record.

<P><LI>SKIP controls the advancement of the database record pointer.

<P><LI>The IF statement is executed within the DO WHILE loop to determine if
    the record pointer has moved beyond the last record in the database. If
    so, the pointer is moved back to the first record of the database.

<P><LI>Each pass through the DO WHILE loop redefines an @ ... GET which is
    assigned the variable name CNCLBTTN (cancel button), and displays a
    picture of a button named Cancel.

<P><LI>A VALID is assigned to this @ ... GET statement, which, when executed,
    runs the GOCANCEL procedure.

<P><LI>The READ for this @ ... Get statement is timed out after 1/4 of a
    second if the VALID is not executed.

<P><LI>Choosing the Cancel button suspends the DO WHILE loop and runs the
    GOCANCEL procedure. The GOCANCEL procedure does the following:
<P>
    a. Changes the value of M.CANCEL to true.
    b. Places a WAIT WINDOW on the desktop for two seconds.
    c. Performs a RETURN to the DO WHILE loop.

<P><LI>Because M.CANCEL is now true, the DO WHILE loop ends.

<P><LI>The remaining code moves the record pointer to the first record in the
    database, displays the field values of record #1, and reenables the
    Process button.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: FoxWin 2.50 2.50a 2.50b 2.60 2.60a<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
