

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling a Form as If It Were a Function to Return a Value </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q129648">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/05/01">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  In Visual FoxPro for Windows, a form is an object and as such cannot be called directly as a function can. However, by using object-oriented practices, you can create a class that calls a form. That class can in turn be instantiated in a function t...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QBT6,QBV4,QAGI,QAH4,QAHP,QAB9,QAY5,QAPN,QBV8,QAUR,QAI2,QAGB,QBWS,QAIF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Calling a Form as If It Were a Function to Return a Value</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q129648</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Visual FoxPro for Windows, a form is an object and as such cannot be
called directly as a function can. However, by using object-oriented
practices, you can create a class that calls a form. That class can in turn
be instantiated in a function that returns what was entered in the form.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following instructions demonstrate how to call a form as if it were a
function.

<OL><P><LI>Create a new form, and save it as MYFORM.SCX.

<P><LI>Create a text box on the form.

<P><LI>Double-click the text box to bring up the methods. Select VALID from the
   Procedure list, and type in the following code:
<P>
   STORE This.Value TO uRetValue
<PRE>   ThisForm.Release     &amp;&amp; release the form

</PRE><P><LI>Close the TEXT1.Valid dialog.

<P><LI>Click in the form outside of the text box to deactivate the text box.
   Click the right mouse button, and choose properties.

<P><LI>Select the ALL tab. Scroll down in the list to the property WINDOW TYPE.

<P><LI>Change the Window type to 1-Modal, and close the properties dialog. Then
   save and close the form.

<P><LI>Create and save a program file called MYTEST.PRG that contains the
   following code:
<P>
   *begin program
<PRE>   LPARAMETERS tcfilename   &amp;&amp; t-PARAMETER c-char
   LOCAL ofrmMyForm         &amp;&amp; o-object (instance)
   *create an instance of the form
   ofrmMyForm=CREATEOBJECT("frmMyForm", tcfilename)
   RETURN ofrmMyForm.SHOW()

   DEFINE CLASS frmMyForm AS CUSTOM
        * create property to hold the filename
        cfilename=""
        FUNCTION INIT(tcfilename)
             THIS.cfilename=tcfilename
             RETURN .T.
        ENDFUNC
        FUNCTION SHOW
             PRIVATE uRetValue     &amp;&amp; u-unknown type
             STORE .T. TO uRetValue
             * call the form
             DO FORM (THIS.cfilename)
             RETURN uRetValue
        ENDFUNC
   ENDDEFINE
   *end program

</PRE><P><LI>In the Command window, issue this command:
<P>
   ? MYTEST("MYFORM.SCX")
<P>
</OL>The program creates an instance of the class, which in turn runs the form.
When the form is displayed, enter some data, and press ENTER. The form will
close, and program execution, which has paused at this point because the
WindowType property was set to Modal, will continue with the statement
RETURN uRetValue.
<P>
As the program terminates, ofrmMyForm will fall out of scope, and what was
typed will show up in the active window.
<P>
This is just an example of calling a function that displays a form. With
simple modification, the procedure described here could be used for
password entry, prompting for a search string, or various other uses.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgClassoop<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
