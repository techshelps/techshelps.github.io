

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Use SYS(3054) to Optimize a Query </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q156551">
<META NAME="KBModify" CONTENT="1997/01/20">
<META NAME="KBCreate" CONTENT="1996/09/25">
<META NAME="Keywords" CONTENT="kbusage kbprint kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Visual FoxPro 5.0 added a new SYS() function that allows you to see the Rushmore optimization level of query. This information can help you optimize your queries in relation to their use of Rushmore.  SYS(3054) actually accepts the following three ...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATJ,QA28,QBWA,QAMB,QAYZ,QAA3,QBWS,QA2Q,QAB6,QARR,QAG2,QA4H,QA26,QAY2,QDIV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Use SYS(3054) to Optimize a Query</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 20, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q156551</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro 5.0 for Windows
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual FoxPro 5.0 added a new SYS() function that allows you to see the
Rushmore optimization level of query. This information can help you
optimize your queries in relation to their use of Rushmore.
<P>
SYS(3054) actually accepts the following three different parameters:

<UL><LI>1  - to turn on reporting of filter optimization
<LI>11 - to turn on reporting of join optimization
<LI>0  - to turn off the reporting of optimization levels
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
To demonstrate how this function works, follow the steps below:

<OL><P><LI>Copy the Customer.dbf and Orders.dbf files from the \Samples\Data
   folder to another folder where you can make changes to the tables.
   For the purpose of this example, copy only the .dbf files as they are
   the only files that you need. After you have copied the files, open
   them exclusively so you can remove the database container references and
   the Structural CDXs. When you open the tables, a dialog box opens
   stating that the Testdata.dbc could not be opened, click delete (you do
   not need the .dbc for this example). If you have SET SAFETY ON, you
   also get a dialog box stating that the Structural CDX file could not be
   found, click ignore.

<P><LI>Now you can type the following in the Command window:
<P>
<P><PRE>      ? SYS(3054,1)
      SELECT * FROM customer WHERE customer.country = 'USA'
</PRE><P>
   The following is returned:
<P>
<P><PRE>      Rushmore optimization level for table customer: none
</PRE>
<P><LI>Next, add an index tag on country field and repeat the query above:
<P>
<P><PRE>      INDEX on country TAG country
</PRE><P>
   NOTE: Be sure to re-select the customer table first (SELECT customer) so
   you are operating on the original data. Now, you should see the
   following:
<P>
<P><PRE>      Using index tag Country to rushmore optimize table customer
      Rushmore optimization level for table customer: full
</PRE>
<P><LI>Now, if you try the following query:
<P>
<P><PRE>      SELECT * FROM customer WHERE customer.country = 'USA' and ;
<PRE></PRE>         customer.maxordamt&gt;2000

   You see the following:

      Using index tag Country to rushmore optimize table customer
      Rushmore optimization level for table customer: partial

   Adding a tag on maxordamt makes the second query fully optimizable.

</PRE><P><LI>Next, if you join the two tables:
<P>
<P><PRE>      SELECT * FROM customer, orders WHERE ;
<PRE></PRE>         customer.cust_id = orders.cust_id

   You see the following:

      Rushmore optimization level for table customer: none
      Rushmore optimization level for table orders: none

</PRE><P><LI>Now, add tags to both tables for the cust_id field:
<P>
<P><PRE>      SELECT customer
      INDEX ON cust_id TAG cust_id
      SELECT orders
      INDEX ON cust_id TAG cust_id
</PRE><P>
   Try the query again:
<P>
<P><PRE>      SELECT * FROM customer, orders WHERE ;
<PRE></PRE>         customer.cust_id = orders.cust_id

   You see the following:

      Rushmore optimization level for table customer: none
      Rushmore optimization level for table orders: none

   Since the query is joining the tables and not doing any filtering, this
   is correct. Since there is no filter, there is no filter optimization.

</PRE><P><LI>Next, issue the following command:
<P>
<P><PRE>      ? SYS(3054,11)
</PRE><P>
   Try the query again and you see the following:
<P>
<P><PRE>      Rushmore optimization level for table customer: none
      Rushmore optimization level for table orders: none
      Joining table customer and table orders using index tag Cust_id
</PRE>
<P><LI>Now, try this query:
<P>
   SELECT * FROM customer, orders WHERE customer.cust_id=orders.cust_id ;
<P><PRE>      AND customer.country = 'USA' AND orders.order_amt&gt;500
</PRE><P>
   You see the following:
<P>
<P><PRE>      Rushmore optimization level for table customer: full
      Rushmore optimization level for table orders: none
      Joining table customer and table orders using index tag Cust_id
</PRE><P>
   Since there is no tag for orders.order_amt, that filter expression
   cannot be optimized. Add a tag to orders for the order_amt field and the
   optimization for orders is full.
<P></OL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbusage kbprint kbprg kbhowto<BR>
KBSubcategory: FxprintFont<BR>
Additional reference words: 5.00 kbdse VFoxWin query performance
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 20, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
