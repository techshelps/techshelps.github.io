

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Determine the Coordinates of an Object </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q136328">
<META NAME="KBModify" CONTENT="1995/09/10">
<META NAME="KBCreate" CONTENT="1995/09/06">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  This article shows by example how to determine the coordinates of an object on a form in Visual FoxPro. This could be useful when you want to position the mouse pointer over an object programmatically, and then fire that object's Click event.  MORE...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QAO2,QBWS,QAYV,QACI,QAH4,QA56,QA55,QABK,QAA8,QAEB,QADK,QAU4,QAUD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Determine the Coordinates of an Object</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 10, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q136328</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article shows by example how to determine the coordinates of an object
on a form in Visual FoxPro. This could be useful when you want to position
the mouse pointer over an object programmatically, and then fire that
object's Click event.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Step-by-Step Example</h3>
 
<P>
You can use the Top, Left, Height, and Width properties to determine the
exact area occupied by an object. Then position the mouse pointer in that
area, and fire the object's Click event. The following procedure gives an
example.

<OL><P><LI>Create a new form.

<P><LI>Place a command button (Command1) on the form.

<P><LI>Place the following five lines of code in the Debug window:
<P>
   _SCREEN.ActiveForm.Command1.Top
   _SCREEN.ActiveForm.Command1.Left
   _SCREEN.ActiveForm.Command1.Height
   _SCREEN.ActiveForm.Command1.Width
   _SCREEN.ActiveForm.Command1.ScaleMode
<P>
   These commands return numeric values indicating the coordinates of the
   Command1 button relative to the form on which it is located. The Top
   property indicates the distance between the top edge of the control
   and the top edge of its parent object. (For form objects, Top give the
   distance between the top edge of the form and the main Visual FoxPro
   window.)
<P>
   The Left property indicates the left-most edge of an object relative to
   its parent object. (For form objects, Left gives the distance between
   the left edge of the form and the main Visual FoxPro window.)
<P>
   The Height property indicates the height of the object on the screen.
<P>
   The Width property indicates the width of the object.
<P>
   The ScaleMode property indicates the unit of measurement for coordinates
   of an object when using graphics methods or when positioning controls.
   The two measurements Visual FoxPro uses are pixels and foxels. The
   ScaleMode property uses foxels if set to 0 and pixels if set to 3.

<P><LI>Run the form, and make a note of the values returned in the Debug
   window. Knowing what these values represent, you can simulate
   clicking the Command1 button on this form by using this code:
<P>
   tRow = _screen.activeform.command1.top
   tCol = _screen.activeform.command1.left
   MOUSE CLICK AT tRow, tCol PIXELS WINDOW (_SCREEN.ACTIVEFORM.Name)
<P>
</OL>NOTE: This code fires the Command1 Click event. For more information on the
syntax of the MOUSE CLICK command, please see the MOUSE Command topic in
the Help file.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 10, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
