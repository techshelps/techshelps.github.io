

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Use #INCLUDE to Add Header Files to a Visual FoxPro Proj </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131475">
<META NAME="KBModify" CONTENT="1996/04/30">
<META NAME="KBCreate" CONTENT="1995/06/12">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  By using the #INCLUDE directive, you can instruct Visual FoxPro to include the contents of another file such as a header file (.H file) in your code during compilation. Header files have useful items such as standard constants that you can use in y...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAKJ,QA56,QA55,QAUD,QAPF,QA5V,QAUJ,QABG,QBHU,QBHT,QAKD,QAHT,QA01,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Use #INCLUDE to Add Header Files to a Visual FoxPro Proj</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 30, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131475</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
By using the #INCLUDE directive, you can instruct Visual FoxPro to include
the contents of another file such as a header file (.H file) in your code
during compilation. Header files have useful items such as standard
constants that you can use in your Visual FoxPro code. This ability has
existed in the C programming language. Now it is also available to Visual
FoxPro developers.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Benefits of Using #INCLUDE</h3>
 
<P>
Coding problems can be minimized when the #INCLUDE generator directive is
used to include header files. Constants can be given values once in the
header file, and these constants can be used anywhere in FoxPro code.
<P>
By definition, the value of PI is 3.14. If a named constants header file is
created with a #DEFINE for PI, the word PI could be used rather than typing
3.14. Using the named constant, Visual FoxPro replaces all occurrences of
PI with 3.14 at compile time.
<P>
Using English words like PI in code improves readability and can make
localization for non-English countries easier. For example, a single
constants file could be created that contains application messages as
follows:
<P>
<PRE>   #DEFINE CANCELENTRY "Are you sure you want to cancel this record?"

</PRE>Then, use CANCELENTRY in your Visual FoxPro code. To translate your program
for a different country, all you need to do is translate a copy of the
constants file into the different language. No changes to your Visual
FoxPro code are necessary.
<P>
<P><h3>Example One: COMMON.H</h3>
 
<P>
A Named Constants file (FOXPRO.H) comes with Visual FoxPro. It contains the
named constants for most Visual FoxPro functions. You can extend this
concept of named constants even further by creating a COMMON.H file to
define a number of standard types of constants such as the character values
required for a carriage return/linefeed.
<P>
The following sample header file demonstrates this concept:
<P>
* COMMON.H
<P>
*-- ASCII
<PRE>#DEFINE LF              CHR(10)
#DEFINE CR              CHR(13)
#DEFINE CRLF            CR+LF

</PRE>If you use #INCLUDE to include this COMMON.H file in your Visual FoxPro
project, you can use the text CRLF at any point in your program code where
a carriage return/linefeed combination is needed. You no longer need to
type CHR(13)+CHR(10). While either choice (CRLF or CHR(13)+CHR(10)) is
valid, if a defined constant should change values, it need only be changed
in a single location for that change to be reflected at all locations in
your code where the constant is referenced.
<P>
<P><h3>Example Two: TESTFILE.PRG</h3>
 
<P>
Building on the COMMON.H file, the following code provides a simple
demonstration of the use of a COMMON.H file and constants referenced in
code:
<P>
*-----------------------------------------------------------*
<PRE>* Sample program :  TESTFILE.PRG                            *
</PRE>*-----------------------------------------------------------*
#INCLUDE "COMMON.H"  &amp;&amp; Use definitions from COMMON.H file
<P>
ACTIVATE SCREEN
CLEAR
? 'Line 1'+CRLF+'Line 2'
=TestUDF()
<P>
FUNCTION TestUDF
<PRE>? DRAG_ENTER            &amp;&amp; refer to FOXPRO.H file
</PRE>RETURN
*-----------------------------------------------------------*
<P>
*-----------------------------------------------------------*
<PRE>* Sample Header File: COMMON.H                              *
</PRE>*-----------------------------------------------------------*
*-- ASCII
<PRE>#DEFINE LF              CHR(10)
#DEFINE CR              CHR(13)
#DEFINE CRLF            CR+LF

</PRE>*-- Header files
#INCLUDE "FOXPRO.H"  ** If not in current directory, you
<PRE>                     ** must qualify this file with the
                     ** appropriate path location
</PRE>*----------------------------------------------------------*
<P>
<P><h3>Example Three: Using FOXPRO.H that Comes with Visual FoxPro</h3>
 
<P>
Here's another example use of named constants in code. As found in the
FOXPRO.H file, the following constants for the MessageBox function can be
used in place of the numeric equivalents. This list has been abbreviated
for space considerations:
<P>
*-- Function Parameters
*-- MessageBox parameters
<PRE>#DEFINE MB_YESNO          4    &amp;&amp; Yes and No buttons
#DEFINE MB_ICONQUESTION   32   &amp;&amp; Warning query
#DEFINE MB_DEFBUTTON2     256  &amp;&amp; Second button is default

</PRE>*-- MsgBox return values
<PRE>#DEFINE IDYES             6    &amp;&amp; Yes button pressed
#DEFINE IDNO              7    &amp;&amp; No button pressed

</PRE>Given the above definitions, a sample dialog box written without the named
constants might read as follows:
<P>
<PRE>   cMessageTitle = 'My App'
   cMessageText  = 'Record not found. Would you like to search again?'
   nDialogType   = 4 + 32 + 256  &amp;&amp; The appearance of the message box
   *    4 = Yes and No buttons
   *   32 = Question mark icon
   *  256 = Second button is default
   nAnswer = MESSAGEBOX(cMessageText, nDialogType, cMessageTitle)

   IF (nAsnswer = 6)   &amp;&amp; Yes was selected
     &amp;&amp; Execute some other code
   ENDIF

</PRE>The nDialogType code could be recast using named constants as this:
<P>
<PRE>   cMessageTitle = 'My App'
   cMessageText  = 'Record not found. Would you like to search again?'
   nDialogType   = MB_YESNO + MB_ICONQUESTION + MB_DEFBUTTON2

   nAnswer = MESSAGEBOX(cMessageText, nDialogType, cMessageTitle)

   IF (nAnswer=IDYES)
     &amp;&amp; Execute some other code
   ENDIF

</PRE>Both ways are equally valid, but by using words as opposed to numbers, the
code is easier to understand and maintain.
<P>
<P><h2>REFERENCES</h2>
 
<P>
Additional information about the #INCLUDE directive and related topics
can be found in the Visual FoxPro Help file under the following topics:

<UL><LI>#INCLUDE preprocessor directive
<LI>Including Predefined Constants in a Form or Form Set
<LI>#DEFINE...#UNDEF
<LI>#IF...#ENDIF
<LI>#IFDEF | #IFNDEF...#ENDIF
<P></UL>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00  VFoxWin Preprocessor<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 30, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
