

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Printing Two Reports in One Duplexed Report </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165638">
<META NAME="KBModify" CONTENT="1997/03/24">
<META NAME="KBCreate" CONTENT="1997/03/24">
<META NAME="Keywords" CONTENT="FxprgGeneral FxprintGeneral kbprint vfoxwin">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QAOX,QADX,QA4F,QABA,QAI4,QBXT,QBAO,QA5V,QAIB,QAEF,QA2Q,QBXS,QAGB,QAG2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Printing Two Reports in One Duplexed Report</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 24, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165638</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0, 5.0a
 ---------------------------------------------------------------------
<P>
</UL><h2>SUMMARY</h2>
 
<P>
Because FoxPro reports are sent as separate print jobs, they are also
printed on separate pages. So, if you have two one-page reports and you
want to have them printed as one duplex report, you would have to combine
the reports into one, or combine the output of the two reports--as the
program code in this article illustrates.
<P>
NOTE: The COPY FILE command used at the end of this program may not work
under Windows NT. This is another issue being researched at this time.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are some cases where extra characters may be printed at the top of
the two pages, but adjustments can be made to the code to prevent this.
Specifically, you need to change the adjustment on the lines using the
FSEEK() function so that the file pointer is moved by fewer characters.
<P>
Please note the assumptions that this code makes:

<UL><LI>You have a printer connected to a local printer port (LPT1 for this
   code to work without modification), or you have captured a network
   printer to LPT1.

<LI>You have only two reports to be printed together, and they print
   one page each.
<P>
</UL>One additional note is that this program creates several files as temporary
files in the default directory. Please take note of the names of the files
so as not to overwrite any files you may already have (since SAFETY is
turned OFF). These temporary files are not deleted, but could be with only
a few additional lines of code.
<P>
<PRE>   **=========================================**
   ** Begin program                           **
   **=========================================**
   ******* Environment Settings
   ** Printer Settings... this allows the user to
   ** choose which printer settings will be used in
   ** creating the file. But remember, the file
   ** will still be sent to the port indicated in
   ** the COPY FILE command at the end of the program.
   SET PRINTER TO GETPRINTER()

   ** Safety should be off in case we have
   ** already run this procedure before
   tmpsafe = SET("SAFETY")
   SET SAFETY OFF
   ******* End environment settings

   ******* Create template file
   ** Create blank report
   IF FILE("blank.frx")
      DELETE FILE blank.frx
   ENDIF
   DEFINE WINDOW test FROM 0,0 TO 10,10
   KEYBOARD "{CTRL+W}"
   CREATE REPORT blank
   RELEASE WINDOW blank
   RELEASE WINDOW test

   ** Change the printer settings to ensure duplex printing is
   ** turned on and use selected settings. Please note that
   ** duplex printing will work only on printers that support it.
   USE blank.frx
   REPLACE expr WITH "DUPLEX=2"  &amp;&amp; turn duplex on
   USE

   ** Create blank table to cover two pages
   SELECT 0
   IF USED("blank")
      USE IN blank
   ENDIF
   IF FILE("blank.dbf")
      DELETE FILE blank.dbf
   ENDIF
   CREATE TABLE BLANK (test C)
   FOR nCnt = 1 TO 25
      APPEND BLANK
   ENDFOR

   ** Create template print file from blank report
   REPORT FORM blank TO template.prn
   USE IN blank

   ** Create variables for each line of the template file
   htemplate = FOPEN("template.prn")
   linecnt = 0
   DO WHILE !FEOF(htemplate)
      linecnt = linecnt + 1
      lnvar = "line" + ALLTRIM(STR(linecnt))
      STORE FGETS(htemplate) TO &amp;lnvar
   ENDDO
   =FCLOSE(htemplate)
   ******* End create

   ******* Process the individual reports
   ** Remove printer settings from the reports
   ** so they use the selected settings
   &amp;&amp; First report
   report1 = GETFILE("FRX","Please select first report")
   IF EMPTY(report1)
      =MESSAGEBOX("You did not specify a file for the first report," + ;
         CHR(13) + "so this program cannot continue.")
      RETURN
   ENDIF
   USE (report1) IN 0 ALIAS one
   SELECT one
   onetmp = one.expr
   REPLACE expr WITH ""
   USE IN one
   &amp;&amp; Second report
   report2 = GETFILE("FRX","Please select second report")
   IF EMPTY(report2)
      =MESSAGEBOX("You did not specify a file for the second report," + ;
         CHR(13) + "so this program cannot continue.")
      RETURN
   ENDIF
   USE (report2) IN 0 ALIAS two
   SELECT two
   rtmp = two.expr
   REPLACE expr WITH ""
   USE IN two

   ** Send reports to files
   REPORT FORM (report1) TO one.txt NOCONSOLE
   REPORT FORM (report2) TO two.txt NOCONSOLE

   ** Restore printer settings to the reports
   &amp;&amp; First report
   USE (report1) IN 0 ALIAS one
   SELECT one
   REPLACE expr WITH rtmp
   USE IN one
   &amp;&amp; Second report
   USE (report2) IN 0 ALIAS two
   SELECT two
   REPLACE expr WITH rtmp
   USE IN two

   ** Determine the size of the input files
   tmpdb4 = SET("COMPATIBLE")
   SET COMPATIBLE ON
   onesz = FSIZE("one.txt")
   twosz = FSIZE("two.txt")
   SET COMPATIBLE &amp;tmpdb4
   ******* End process

   ******* Create final print file
   ** Delete the file, if it exists, and create
   ** a new file to contain the reports
   IF FILE("final.prn")
      DELETE FILE final.prn
   ENDIF
   hFinal = FCREATE("final.prn")

   ** Write header codes
   totchar = 0  &amp;&amp; this will contain the length of the header
   FOR nCnt = 1 TO linecnt-2
      lnvar = "line" + ALLTRIM(STR(nCnt))
      totchar = totchar + FPUTS(hFinal,EVAL(lnvar))
   ENDFOR
   pgvar = "line" + ALLTRIM(STR(linecnt-1))  &amp;&amp; page break line
   ejvar = "line" + ALLTRIM(STR(linecnt))  &amp;&amp; end of job line

   ** Write body of first report file
   hOne = FOPEN("one.txt")
   =FSEEK(hOne,totchar-(linecnt-2))
   =FWRITE(hFinal,FREAD(hOne,onesz-totchar-LEN(EVAL(ejvar))))

   ** Write pagebreak codes
   =FPUTS(hFinal,EVAL(pgvar))

   ** Write body of second report file
   hTwo = FOPEN("two.txt")
   =FSEEK(hTwo,totchar-(linecnt-2))
   =FWRITE(hFinal,FREAD(hTwo,twosz-totchar-LEN(EVAL(ejvar))))

   ** Write end-of-job codes
   =FPUTS(hFinal,EVAL(ejvar))

   ** Close all files
   =FCLOSE(hFinal)
   =FCLOSE(hOne)
   =FCLOSE(hTwo)
   ******* End create

   ******* Send the final file to the printer
   ** This line copies the file to the printer
   ** connected to LPT1: in Windows. You may also
   ** specify LPT1 or LPT2 instead of PRN.
   COPY FILE final.prn TO PRN
   ******* End send

   ******* Restore Environment Settings
   SET SAFETY &amp;tmpsafe
   ******* End restore
   **=========================================**
   ** End program                             **
   **=========================================**
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : FxprgGeneral FxprintGeneral kbprint vfoxwin<BR>
Version             : 3.0 3.0b 5.0 5.0a<BR>
Platform            : WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 24, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
