

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Use a Custom Class to Encrypt Passwords </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130005">
<META NAME="KBModify" CONTENT="1996/12/02">
<META NAME="KBCreate" CONTENT="1995/05/09">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; foxpro, crossnet, odbc">
<META NAME="Description" CONTENT="  Many applications require a level of security that necessitates password protection. Password validation requires comparing passwords to a list of acceptable passwords, normally stored in table form. This article demonstrates how to create a custom...">
<META NAME="Product" CONTENT="Visual FoxPro">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAWK,QABG,QBV4,QBT6,QAHP,QAGI,QAPN,QAB9,QAW6,QAEB,QABO,QAUJ,QAH4,QAMB,QAAD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Use a Custom Class to Encrypt Passwords</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 2, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130005</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual FoxPro for Windows, versions 3.0, 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Many applications require a level of security that necessitates password
protection. Password validation requires comparing passwords to a list of
acceptable passwords, normally stored in table form. This article
demonstrates how to create a custom class that encrypts passwords and
allows passwords to be manipulated in encrypted form, allowing a higher
level of security.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code sample demonstrates how to use a Custom Class to encrypt
and decrypt a password. The password can then be used in encrypted form for
added security.
<P>
<P><h3>Code Sample</h3>
 
<P>
* Beginning of pwdclass.prg
*
* To use this program, run it; then type the password in the upper-left
* text box, and press ENTER. The Encrypt_It procedure in the FxtoolFormdes
* instance of the PASS_WORD class is called in the valid of the text box.
* The encrypted password is displayed in the lower-left text.
* Pressing the Decrypt It! button calls the Decrypt_It procedure
* in the custPassword instance of the PASS_WORD class. The resulting
* value is displayed in the text box below the Decrypt It! button.
*************
<P>
frmPwdform = CREATEOBJECT("pwdform") &amp;&amp; Instantiate class from pwdform.
<P>
frmPwdform.VISIBLE = .T.
READ EVENTS
<P>
* Define Form Class:
<P>
DEFINE CLASS pwdform AS FORM
<P>
<PRE>   CAPTION = "Password Encryption Example"
   ADD OBJECT custPassword AS PASS_WORD  &amp;&amp; Add Password object to form.

   HEIGHT = 130
   WIDTH = 350
   AUTOCENTER = .T.

   ADD OBJECT txtText1 AS TEXTBOX WITH ;
      HEIGHT = 25, ;
      LEFT = 25, ;
      TOP = 20, ;
      WIDTH = 125, ;
      PASSWORDCHAR = "*", ;
      NAME = "txtText1"

   ADD OBJECT txtText2 AS TEXTBOX WITH ;
      HEIGHT = 25, ;
      LEFT = 25, ;
      TOP = 72, ;
      WIDTH = 125, ;
      READONLY = .T., ;
      NAME = "txtText2"

</PRE>* Command button to demonstrate the call to Decrypt_It procedure is
* contained in cmdCommand1.click in the following procedure:
<P>
<PRE>   ADD OBJECT cmdCommand1 AS COMMANDBUTTON WITH ;
      TOP = 20, ;
      LEFT = 200, ;
      HEIGHT = 29, ;
      WIDTH = 125, ;
      CAPTION = "Decrypt It!", ;
      NAME = "cmdCommand1"

</PRE>* Textbox to display Unencrypted password:
<P>
<PRE>   ADD OBJECT txtText3 AS TEXTBOX WITH ;
      CONTROLSOURCE = "THISFORM.custPassword.cUnencrypted", ;
      HEIGHT = 25, ;
      LEFT = 200, ;
      READONLY = .T., ;
      TOP = 72, ;
      WIDTH = 125, ;
      NAME = "Text3"

   PROCEDURE txtText1.LOSTFOCUS
      THISFORM.custPassword.Encrypt_It(TRIM(THIS.VALUE))
      THISFORM.txtText2.VALUE = THISFORM.custPassword.cEncrypted
      THISFORM.cmdCommand1.SETFOCUS
   ENDPROC

   PROCEDURE cmdCommand1.CLICK
      THISFORM.custPassword.Decrypt_It(THISFORM.custPassword.cEncrypted)
      THISFORM.REFRESH
      THISFORM.txtText1.SETFOCUS
   ENDPROC

   PROCEDURE DESTROY
      CLEAR EVENTS
   ENDPROC

</PRE>ENDDEFINE
<P>
DEFINE CLASS PASS_WORD AS CUSTOM
<P>
<PRE>   HEIGHT = 17
   WIDTH = 100
   cUnencrypted = ""
   cEncrypted = ""
   NAME = "Password"

   PROCEDURE Encrypt_It     &amp;&amp; Call this to encrypt password
      PARAMETERS cPassword
      cEncrypted_password = ''
      FOR i = 1 TO LEN(cPassword)
         cLetter = SUBSTR(cPassword, i, 1)
         cEncrypted_password = cEncrypted_password + ;
            CHR((ASC(cLetter)*2)+5)      &amp;&amp; Arbitrary encryption formula
      NEXT i
      THIS.cEncrypted = cEncrypted_password

   ENDPROC

   PROCEDURE Decrypt_It     &amp;&amp; Call this to Decrypt password
      PARAMETERS cPassword
      cUnencrypted_password = ''
      FOR i = 1 TO LEN(cPassword)
         cLetter = SUBSTR(cPassword, i, 1)
         cUnencrypted_password = cUnencrypted_password + ;
            CHR((ASC(cLetter)-5)/2)    &amp;&amp; Reverse of encryption formula
      NEXT i
      THIS.cUnencrypted = cUnencrypted_password

   ENDPROC

</PRE>ENDDEFINE
<P>
* End of pwdclass.prg
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 3.00 VFoxWin<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FxprgGeneral<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 2, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
