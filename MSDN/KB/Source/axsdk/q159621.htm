

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Difference Between OLE Controls and ActiveX Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q159621">
<META NAME="KBModify" CONTENT="1998/01/19">
<META NAME="KBCreate" CONTENT="1996/11/18">
<META NAME="Keywords" CONTENT="AXSDKControls kbusage">
<META NAME="KBArea" CONTENT="Support; KB; axsdk">
<META NAME="Description" CONTENT="  The specification for ActiveX controls has been relaxed to give developers the ability to create smaller, faster controls that are more suitable for the Internet. In the new OLE control specification, we make use of component categories, which allo...">
<META NAME="Product" CONTENT="ActiveX SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA7O,QAOE,QAMN,QAHV,QA9Q,QAVZ,QAW6,QBS0,QBMR,QBWA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Difference Between OLE Controls and ActiveX Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 19, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q159621</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft ActiveX SDK, version 1.0
<LI>Internet Client SDK, version 4.0, 4.01
<LI>Microsoft Visual Basic Enterprise Edition, 16-bit and 32-bit, for
   Windows, version 4.0
<LI>Microsoft Visual FoxPro for Windows, versions 3.0, 3.0b, 5.0
<LI>Microsoft Visual C++, 32-bit Edition, versions 2.0, 2.1, 2.2, 4.0, 4.1,
   4.2
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The specification for ActiveX controls has been relaxed to give developers
the ability to create smaller, faster controls that are more suitable for
the Internet. In the new OLE control specification, we make use of
component categories, which allows the relaxing of some previous rules
identifying interfaces as being mandatory and allows greater flexibility to
efficiently target certain areas of functionality without having to provide
superfluous support to qualify as a control. We also added some new
features like windowless objects, URL monikers, asynchronous monikers,
progressive downloading, and OLE Hyperlinks. (And, perhaps most
importantly, we support marking controls as safe for data download and safe
for scripting.)
<P>
Keep in mind that an ActiveX control is just another term for an "OLE
Object" or "COM Object." A "COM Object" is required to support the IUnknown
interface. In addition, all ActiveX controls must be self-registering. For
an in-process control that means implementing and exporting
DllRegisterServer and DllUnregisterServer. With NT 4.0 built-in marshaling
support for the connection point interfaces, a control can now be a local
server. This means creating and registering its class factory objects with
the system when it is first run. Since IUnknown doesn't allow you to do
much, you want to implement at least one additional interface. However,
these minimal requirements allow controls to be as lightweight as possible.
<P>
Mike McKeown addresses this very confused issue of OLE Controls versus
ActiveX Controls in the October 1996 issue of the MIND (Microsoft
Interactive Developer) magazine.
<P>
More information on enabling controls for the Internet, as well as various
documentation on interfaces and functions an ActiveX Control should
support, can be found on the "ActiveX Controls" section of the ActiveX SDK
online documentation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
What is the difference between an OLE Control and an ActiveX Control?
<P>
No difference. Look at ActiveX Control as a renaming and restructuring of
the OLE Controls technology. For marketing reasons the term OLE has come
full circle and once again refers to the OLE technologies that apply to
Object Linking and Embedding only. The term "OLE" control has been replaced
with the "ActiveX" term to distance the name from the older Object Linking
and Embedding technology with which controls have very little in common. No
one should use the term "OLE Control" anymore.
<P>
Is an OCX an "ActiveX Control"?
<P>
No. An OCX is a file that can hold one or more Active Controls. These files
do not need to have the .OCX extension (some use .DLL) and thus should not
<PRE>be referred to as "OCXs".   This also links them to a file extension which
</PRE>is what our document-centric paradigm is trying to eliminate.
<P>
Are out of the box OLE Controls such as the one shipped with Visual Basic
4.0 also ActiveX controls?
<P>
Yes. All controls that we formerly called "OLE Controls" are ActiveX
Controls. This excludes VBXs and Windows Custom Controls since they were
never OLE based to start with.
<P>
How about MFC Controls, are they also ActiveX Controls?
<P>
Yes, all MFC Controls are ActiveX Controls. An old Visual C++ 4.0 Control
is an ActiveX Control, as is one created with Visual Basic 4.0. Look at the
term ActiveX Control as a renaming and restructuring of the OLE Control
technology--an evolution.
<P>
A control can be built to work efficiently on the Internet, or to be hosted
in desktop container apps, or to do both. Sure, some controls are not as
better suited to be used on the Internet due to their large size and
synchronously loading of properties, but they are still ActiveX Controls.
This is where most of the confusion comes in.
<P>
Are there different types of ActiveX Controls?
<P>
Yes. The OLE Control and Control Container Guidelines version 2.0 describe
a number of optional features that may be implemented. Some controls
implement features that require corresponding features in the container in
order to work properly. Conversely, some containers only recognize controls
that implement some optional features.
<P>
Older containers typically only recognize controls that are marked in the
registry with the "Control" key and that implement the older OLE Control
specification, although they may be able to use newer controls as
Automation objects. Newer controls and containers can use something called
"Component Categories" to describe the functionality that they export as
well as the container support that they require to work 100 percent
properly in both design and run times.
<P>
The OLE Control and Control Container Guidelines and other related
specifications can be found in the Internet Client SDK documentation.
<P>
So, will all ActiveX Controls work with Visual Basic 4.0?
<P>
Most ActiveX Controls should work with VB5.
<P>
Will all ActiveX Controls work with Internet Explorer 3.0 (IE3)?
<P>
Internet Explorer is designed to host lightweight ActiveX controls,
including support for windowless controls.
<P>
Internet Explorer also includes security features that may prevent some
ActiveX Controls from working with all IE3 configurations. This is most
likely for older controls. In order for controls to work smoothly with IE
when it is configured for the "High Safety Level" for active-content
security (which is the default), the controls must be marked as "safe for
initialization" or "safe for scripting." If a control is used on an HTML
page in a way that conflicts with its safety identification and the user's
safety level, IE does not create an instance of the control. See the
Component Development - Safe Initialization and Scripting for ActiveX
controls in the Internet Client SDK documentation for more information.
<P>
How do "lightweight ActiveX Controls" come into play?
<P>
Typically, when someone uses this term, they are referring to controls that
are written to be as small as possible, so they can be downloaded quickly.
Lightweight controls are ActiveX Controls, but may not implement all the
required features of the older OLE Control specification.
<P>
The Active Template Library (ATL) can be used to create lightweight
controls for use over the Internet or intranet.
<P>
If you want to know more about ActiveX controls, particularly on developing
Web pages, check out another FAQ available on the Internet Client SDK Web
page.
<P>
For a description of the ActiveX technologies, see
<B><A HREF="http://www.microsoft.com/kb/articles/q154/5/44.htm">http://www.microsoft.com/kb/articles/q154/5/44.htm</A></B> on the Microsoft Web
site. To learn more about URL monikers, asynchronous monikers, progressive
downloading, and OLE Hyperlinks, see <B><A HREF="http://www.microsoft.com/intdev/prog-">http://www.microsoft.com/intdev/prog-</A></B>
gen/moniker.htm#url. While you're at it, take time to download the Internet
Client SDK from
<B><A HREF="http://www.microsoft.com/msdn/sdk/inetsdk/asetup/default.asp">http://www.microsoft.com/msdn/sdk/inetsdk/asetup/default.asp.</A></B>
<P>
 
<PRE>Keywords          : AXSDKControls kbusage
Technology        : kbInetDev kbole
Version           : 1.0 4.0 3.0 3.0b 5.0 2.0 2.0 4.0 4.1 4.2
Platform          : NT WINDOWS
Issue type        : kbinfo</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 19, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
