

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Adding to the Standard Context Menus of the WebBrowser </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177241">
<META NAME="KBModify" CONTENT="1998/01/19">
<META NAME="KBCreate" CONTENT="1997/11/24">
<META NAME="Keywords" CONTENT="AXSDKWebBrowser">
<META NAME="KBArea" CONTENT="Support; KB; axsdk">
<META NAME="Description" CONTENT="  This article contains information that supplements the  Controlling the Context Menus  section in the  Reusing the Web Browser Control * MSHTML  overview in the Internet Client SDK. Specifically, this article describes optional registry keys to con...">
<META NAME="Product" CONTENT="ActiveX SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QAVI,QAKD,QBRJ,QBV9,QAPN,QAF0,QABA,QABB,QAJB,QATX,QABH,QBWA,QAMB,QAHT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Adding to the Standard Context Menus of the WebBrowser</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 19, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177241</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Internet Client SDK, versions 4.0, 4.01
<LI>Internet Explorer (Programming), versions 4.0 4.01
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains information that supplements the "Controlling the
Context Menus" section in the "Reusing the Web Browser Control &amp; MSHTML"
overview in the Internet Client SDK. Specifically, this article describes
optional registry keys to control the context in which added items are
shown as well as a description of the context menu event object.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Here is the full complete text of the section "Adding to the Standard
Context Menus":
<P>
<P><h3>Adding to the Standard Context Menus</h3>
 
<P>
Items can be added to the existing context menus of the WebBrowser control
by placing entries in the registry and linking these to URLs that execute
script. To add additional items to the standard WebBrowser context menus,
create or open the following key:
<P>
<PRE>   HKEY_CURRENT_USER
       Software
           Microsoft
               Internet Explorer
                   MenuExt

</PRE>Under this key, you create a key (not a value) whose name contains the text
you want displayed in the menu. The default value for this key contains the
URL that will be executed. The key name can include the "&amp;" character,
which will cause the character immediately following the "&amp;" to be
underlined. The URL will be loaded inside of a hidden HTML dialog box, all
of the inline script will be executed, and the dialog box will be closed.
The hidden HTML dialog box's external.menuArguments property contains the
window object of the window on which the context menu item was executed.
<P>
The following registry entry will add an item with the title "My Menu Item"
to the WebBrowser context menu and will execute the inline script contained
in the file "c:\myscript.htm."
<P>
<PRE>   HKEY_CURRENT_USER
       Software
           Microsoft
               Internet Explorer
                   MenuExt
                       My Menu Item = "file://c:\myscript.htm"

</PRE>The following are the contents of "c:\myscript.htm."
<P>
<PRE>   &lt;SCRIPT LANGUAGE="JavaScript" defer&gt;
   var parentwin = external.menuArguments;
   var doc = parentwin.document;
   var sel = doc.selection;
   var rng = sel.createRange();
   var str = new String(rng.text);
   if(str.length == 0)
      rng.text = "MY INSERTED TEXT";
   else
      rng.text =  str.toUpperCase();
   &lt;/SCRIPT&gt;

</PRE>This script obtains the parent window object from external.menuArguments.
The parent window object is the WebBrowser control in which the context
menu item was executed. The script then obtains the current selection and,
if no selection is present, inserts the text "MY INSERTED TEXT" at the
point where the context menu was executed. If there is a selection present,
the selected text is changed to uppercase.
<P>
<P><h3>Optional Keys</h3>
 
<P>
Under the item registry key created earlier, there are a couple of optional
values. One of these specifies on which context menus this item will
appear. The other specifies that the script should be run as a dialog box.
<P>
The "Contexts" DWORD value specifies the context menus in which an item
will appear. It is a bit mask consisting of the logical OR of the following
values (defined in mshtmhst.h). These values correspond to the constant
passed in a IDocHostUIHandler::ShowContextMenu call.
<P>
<PRE>   (0x1 &lt;&lt; CONTEXT_MENU_DEFAULT) (evaluates to 0x1)
   (0x1 &lt;&lt; CONTEXT_MENU_IMAGE) (evaluates to 0x2)
   (0x1 &lt;&lt; CONTEXT_MENU_CONTROL) (evaluates to 0x4)
   (0x1 &lt;&lt; CONTEXT_MENU_TABLE) (evaluates to 0x8)
   (0x1 &lt;&lt; CONTEXT_MENU_TEXTSELECT) (evaluates to 0x10)
   (0x1 &lt;&lt; CONTEXT_MENU_ANCHOR) (evaluates to 0x20)
   (0x1 &lt;&lt; CONTEXT_MENU_UNKNOWN) (evaluates to 0x40)

</PRE>So for example, if you wanted your simple extension to appear only in the
default menu and the text selection menu, you could create a DWORD value in
the registry under the "My Menu Item" key called "Contexts" and set it to
0x11. From C/C++ code, this can be expressed as follows:
<P>
<PRE>   (0x1 &lt;&lt; CONTEXT_MENU_DEFAULT) | (0x1 &lt;&lt; CONTEXT_MENU_TEXTSELECT)

</PRE>The other optional registry DWORD value is "Flags." There is only one bit
(0x1) valid for this registry value, and it is defined as
MENUEXT_SHOWDIALOG in Mshtmhst.h. When this bit is set, the script is run
just as if it had been called through the ShowModalDialog method. The
window that runs the script is not hidden and the dialog boxis not
automatically closed after inline and onload script finishes. The
external.menuArugments value still contains the window object where the
user selected the menu item.
<P>
<P><h3>The Context Menu Event</h3>
 
<P>
Whenever a context menu extension is triggered, the event object off of the
main window (external.menuArguments.event) contains information about where
the user clicked and which context menu was shown. The mouse coordinates
are valid along with event.srcElement. The event.type value contains one of
the following strings, indicating which context menu was shown to the user:

<UL><LI>MenuExtDefault
<LI>MenuExtImage
<LI>MenuExtControl
<LI>MenuExtTable
<LI>MenuExtTextSelect
<LI>MenuExtAnchor
<LI>MenuExtUnknown
<P>
</UL><h3>Another Example</h3>
 
<P>
This example will create a new context menu item on just the default menu.
This item, called "Show in New Window" will start whatever is clicked on in
a new window. So, If something is deeply nested in a frameset, you can
easily launch a specific frame in its own window. Here are the contents of
a .reg file that can be run to insert the correct registry settings. Call
this Example2.reg. Double-clicking on this file in the Explorer will insert
the settings in your registry.
<P>
<PRE>   REGEDIT4

   [HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\MenuExt\Show in
   &amp;New Window]
   @="file://c:\\example2.htm"
   "Contexts"=dword:00000001

</PRE>Here are the contents of "C:\Example2.htm."
<P>
<PRE>   &lt;SCRIPT LANGUAGE="JavaScript" defer&gt;
      open(external.menuArguments.location.href);
   &lt;/script&gt;

</PRE><h2>REFERENCES</h2>
 
<P>
Internet Client SDK: Internet Tools &amp; Technologies; Reusing the Web Browser
Control and MSHTML; Overview
<P>
 
<PRE>Keywords          : AXSDKWebBrowser
Technology        : kbInetDev
Version           : WINDOWS:4.0
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 19, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
