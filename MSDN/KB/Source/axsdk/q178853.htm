

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE: HLINKAXD Demonstrates a Hyperlinking Active Document </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178853">
<META NAME="KBModify" CONTENT="1998/01/19">
<META NAME="KBCreate" CONTENT="1998/01/05">
<META NAME="Keywords" CONTENT="AXSDKHyperlink">
<META NAME="KBArea" CONTENT="Support; KB; axsdk">
<META NAME="Description" CONTENT="  HlinkAxDoc (HLINKAXD) is a sample demonstration of the hyperlinking interfaces. HlinkAxDoc is an MFC Active Document server that contains hyperlinks. In addition to being a container, it is also a hyperlinking target and can be the recipient of hyp...">
<META NAME="Product" CONTENT="ActiveX SDK">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="ActiveX ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAE2,QAW6,QAPN,QAB5,QAY2,QAIB,QAIA,QBWA,QAVZ,QAHT,QBBS,QAMA,QA62,QAML V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FILE: HLINKAXD Demonstrates a Hyperlinking Active Document</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 19, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178853</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft ActiveX SDK, version 1.0
<LI>Internet Client SDK, versions 4.0, 4.01
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
HlinkAxDoc (HLINKAXD) is a sample demonstration of the hyperlinking
interfaces. HlinkAxDoc is an MFC Active Document server that contains
hyperlinks. In addition to being a container, it is also a hyperlinking
target and can be the recipient of hyperlinks from other hyperlinking
containers.
<P>
HlinkAxDoc implements IHlinkTarget and IHlinkSite. It uses the IHlink,
IHlinkBrowseContext, and IHlinkFrame interfaces when jumping to hyperlinks
as well as being activated as the target of a hyperlink. Last, HlinkAxDoc
also supports the IPersistMoniker interface and demonstrates a basic
implementation of the Load method.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following file is available for download from the Microsoft
Software Library:
<P>
<PRE> ~ <A HREF="http://support.microsoft.com/download/support/mslfiles/Hlinkaxd.exe">Hlinkaxd.exe</A> <I>(size: 81412 bytes)</I> 

</PRE>For more information about downloading files from the Microsoft Software
Library, please see the following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../zMiscellaneous/Q119591.htm">Q119591</A></B>
   TITLE     : How to Obtain Microsoft Support Files from Online Services

</PRE><h3>What Is It?</h3>
 
<P>
HlinkAxDoc is a basic hyperlinking Active Document server. All it does is
store a list of hyperlink objects that can be used to jump to other
hyperlink targets such as Web pages via URLs or Office documents.
HlinkAxDoc can persist this list of hyperlinks, meaning it can save its own
file format and load it back again, re-creating hyperlinks from the
original data. Also, HlinkAxDoc can read Internet Shortcuts as well as
Hyperlink objects from the Clipboard and from drag&amp;drop operation. This
allows you to drag a hyperlink from an HTML page in Internet Explorer into
HlinkAxDoc and store the hyperlink for later use. A whole collection of
hyperlinks, with their URLs visible, could be stored and saved in this
manner.
<P>
To build this sample, you will need Visual C++ 5.0 with the Internet Client
SDK (InetSDK) installed. The sample will probably need to use the Hlink.lib
and Uuid.lib from the InetSDK, so you should set your Inernet SDK include
and lib directories to the top of the VC search path using Tools-&gt;Options
-&gt;Directories.
<P>
Major Players - Objects and Interfaces
 
<P>
There are basically six major characters in the drama of the hyperlinking
architecture. First and foremost is the hyperlink object itself. A
hyperlink is a COM object implemented by "the system" (Hlink.dll,
technically) that encapsulates all the data necessary to locate an
acceptable hyperlink target application and point it to a specific document
or file. Hyperlinks are usually stored in a hyperlink container, which can
optionally implement one or more hyperlink site objects to manage a set of
contained hyperlinks. Hyperlink containers typically display hyperlinks in
the UI in some visible way and provide a method for creating new
hyperlinks. Fourth, applications that can be the recipient of hyperlink
navigation are known as hyperlink targets.
<P>
Confusingly, most hyperlink targets can also be hyperlink containers. Take
Word for example. If you create a hyperlink inside one word document that
links to another word document and then activate it, the second word
document is the target of the hyperlink stored in the first document, the
container. Upon reaching the second word document, this hyperlink target
could easily have yet another hyperlink inside it which would go to another
word document, a URL, or whatever. That is, a Word document can be both a
hyperlink container and target.
<P>
Hyperlink targets are typically Active Document servers as well as
standalone applications. That is, these servers can open documents inside
another application that supports the necessary architecture to be an
Active Document container. (Do not confuse an Active Document container
with a Hyperlink container.) Of course, the ultimate Active Document
container of all Active Document containers, the uber-container, is
Internet Explorer (IE). Internet Explorer also serves as the fifth object
in our discussion, the hyperlink frame. As a hyperlink frame, Internet
Explorer has the capability of hosting one or more hyperlink targets that
work as Active Document containers. Internet Explorer owns the frame and
Internet toolbar and provides for the most Web-like hyperlinking
atmosphere. When hyperlinks are made between standalone applications, some
trickery occurs to make the navigation appear smoother. However, the
navigation still happens between two separate frame windows. When
hyperlinks are made inside a hyperlink frame, there is one frame window
through the entire hyperlinking experience, provided all hyperlink targets
are active documents.
<P>
Note that very rarely will an application other than Internet Explorer act
as a hyperlink frame. So in a sense, this can also be thought of as a
"system" implemented object.
<P>
The sixth and last major character is the hyperlink browse context. The
hyperlink browse context is another object implemented for you by "the
system" that encapsulates the functionality of a navigation stack. The
browse context stores references to all the hyperlinks that have been made
in a particular hyperlinking session. It also stores information about
registered hyperlink targets and holds references to targets during a
particular session to keep them open and speed back/forward navigation.
Using the hyperlink browse context that gets passed from hyperlink target
to hyperlink target, targets and hyperlink frames can make intelligent
decisions about whether to activate forward or back buttons.
<P>
Given that browse context, frame, and hyperlink itself are implemented by
the system, that means developers interested in hyperlinking will typically
have to implement only the target and container functionality for their
applications. This corresponds to supporting the IHlinkTarget interface for
hyperlink targets. Containers do not have a specific requirement, all they
have to do is work with the system-provided IHlink, IHlinkBrowseContext,
and IHlinkFrame interfaces. However, they can optionally support IHlinkSite
to help with hyperlink management.
<P>
HlinkAxDoc implements IHlinkSite and IHlinkTarget and works with all the
other interfaces. It is both a hyperlinking container as well as a
hyperlinking target. HlinkAxDoc also works as an Active Document and can be
hosted in hyperlink frames.
<P>
The Internet Client SDK and Platform SDKs have good documentation on the
various objects and interfaces used in typical hyperlinking scenarios.
Please refer to these for more information.
<P>
 
<PRE>Keywords          : AXSDKHyperlink
Technology        : kbInetDev internet kbole
Version           : WINDOWS:1.0,4.0,4.01
Platform          : WINDOWS
Issue type        : kbhowto</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 19, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
