

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: ASP Returns "Error in Loading DLL" with VB Component </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178777">
<META NAME="KBModify" CONTENT="1998/01/05">
<META NAME="KBCreate" CONTENT="1998/01/02">
<META NAME="Keywords" CONTENT="VSGenIss">
<META NAME="KBArea" CONTENT="Support; KB; vstudio">
<META NAME="Description" CONTENT="  When using Visual Studio Service Pack 2 or 3, a problem may occur when you try to work with objects that have been assigned as Visual Basic collections. When you try to access any of the functions of the collection (such as count, add, or remove), ...">
<META NAME="Product" CONTENT="vstudio">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBS0,QAAP,QAB4,QAH4,QAW6,QDO3,QAUD,QAFF,QAEF,QAKP,QDNQ,QAVX,QAVW,QALZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: ASP Returns "Error in Loading DLL" with VB Component</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 5, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178777</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Studio versions 97sp2, 97sp3
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When using Visual Studio Service Pack 2 or 3, a problem may occur when you
try to work with objects that have been assigned as Visual Basic
collections. When you try to access any of the functions of the collection
(such as count, add, or remove), or use the For...Each...Next enumerations,
the following Visual Basic Script error appears:
<P>
<PRE>   Microsoft VBScript runtime error '800a0030' Error in loading DLL

</PRE><h2>CAUSE</h2>
 
<P>
We are researching this bug and will post new information here in the
Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two possible solutions to this problem:

<UL><LI>Revert back to a previous version of Visual Basic 5.0 (prior to Service
   Pack 2).
<P>
</UL>-or-

<UL><LI>Implement a class wrapper around the collection object of Visual Basic.
   To implement a class wrapper around the collection object, follow these
   steps:

</UL><OL><P><LI>Add the following code to a class module in Visual Basic:
<P>
<P><PRE>      Option Explicit
      Private m_cList As Collection
</PRE><P>
<P><PRE>      'Add
<PRE></PRE>      'Purpose     - Add to list
      'Inputs      - (String)  sKey
      '            - (Variant) vItem
      Public Sub Add(ByVal sKey As String, vItem As Variant)
        m_cList.Add vItem, sKey
      End Sub

      'Remove
      'Purpose     - Remove from list
      'Inputs      - (String)  sKey
      Public Sub Remove(sKey As String)
        m_cList.Remove sKey
      End Sub

      Public Property Get Count() As Long
        Count = m_cList.Count
      End Property

      Public Property Get Item(sKey As String) As Variant
        On Error Resume Next
        If m_cList.Count &gt; 0 Then
          If IsObject(m_cList(sKey)) Then
            Set Item = m_cList(sKey)
          Else
            Item = m_cList(sKey)
          End If
        End If
      End Property

      Public Property Get NewEnum() As IUnknown
        On Error Resume Next
        Set NewEnum = m_cList.[_NewEnum]
      End Property

      Private Sub Class_Initialize()
        On Error Resume Next
        Set m_cList = New Collection
      End Sub

      Private Sub Class_Terminate()
        On Error Resume Next
        Set m_cList = Nothing
      End Sub

</PRE><P><LI>In Visual Basic, under the Tools menu, click Procedure Attributes, click
   Advanced, and select the Item methods Procedure ID as default and select
   the NewEnum procedure Id as -4 (you will need to type this in manually).

<P><LI>Place this code into a class module for the project. Instead of using a
   collection, use the class module with this code.

<P><LI>To test this new object, create a test Active Server Page with the
   following code:
<P>
   &lt;%
<P><PRE>      'Create an instance of the new collection object
      Set objMyColl = Server.CreateObject("Project1.Class1")
</PRE><P>
<P><PRE>      If IsObject(objMyColl) Then
<PRE></PRE>         Response.Write "Yes, I am an object" &amp; "&lt;BR&gt;&lt;BR&gt;"

         'Add some test members
         objMyColl.Add CStr("1"), "Apple"
         objMyColl.Add CStr("2"), "Orange"
         objMyColl.Add CStr("3"), "Banana"

         'Get the count of the members
      Response.Write "I have " &amp; objMyColl.Count &amp; " members" &amp; "&lt;BR&gt;&lt;BR&gt;"

          Response.Write "The members are: " &amp; "&lt;BR&gt;"
          For Each Item in objMyColl
            Response.Write item &amp; "&lt;BR&gt;"
          Next
       Else
          Response.Write "Server failed to create object."
       End if

   %&gt;

</PRE></OL><h2>STATUS</h2>
 
<P>
Microsoft is researching this problem and will post new information here in
the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Create an ActiveX DLL project in Visual Basic 5.0 with Service Pack 2 or
   later.

<P><LI>Add a class to the project that has a method (function) with a return
   parameter as a collection.

<P><LI>Compile the project into a DLL.

<P><LI>Create an Active Server Page that creates an instance of the object and
   accesses any methods of the object or tries to enumerate the collection.
   The Active Server Page returns the following error:
<P>
<P><PRE>      Microsoft VBScript runtime error '800a0030' Error in Loading DLL
</OL></PRE> 
<PRE>Keywords          : VSGenIss
Version           : WINDOWS:97sp2,97sp3
Platform          : WINDOWS
Issue type        : kbprb</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 5, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
