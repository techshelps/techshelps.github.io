

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INFO: Visual Studio Environment Readme </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q165791">
<META NAME="KBModify" CONTENT="1997/03/25">
<META NAME="KBCreate" CONTENT="1997/03/25">
<META NAME="Keywords" CONTENT="kbtlc">
<META NAME="KBArea" CONTENT="Support; KB; vstudio">
<META NAME="Description" CONTENT="  Other product and company names herein may be the trademarks of their respective owners.  This document includes updated information for Microsoft® Developer Studio Environment. The information in this document and in the Help system is more up-to-...">
<META NAME="Product" CONTENT="vstudio">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QAPN,QAUF,QAH4,QBWP,QAW6,QBVV,QAX1,QAY2,QAB9,QAR4,QBWS,QA56,QA55,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>INFO: Visual Studio Environment Readme</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q165791</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual Studio 97
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Other product and company names herein may be the trademarks of their
respective owners.
<P>
This document includes updated information for Microsoft® Developer Studio
Environment. The information in this document and in the Help system is
more up-to-date than that in the online documentation. Many of the issues
outlined in this document will be corrected in upcoming releases.
<P>
Contents
<P>
ClassView and Wizard Bar 'Auto #Include' Feature May Cause Build Error
(C2011: type redefinition)
Using the ClassView List
Files in the External Dependencies Folder (FileView) Are Not Project Files
Using Icon and Toolbar Editors with Windows NT 4.0
Hosting ActiveX Documents in the Developer Studio Environment
Accessing Online Help Brings Up MSN Dialog Box
MSDN Must Be Installed to View Visual Studio Documentation
Full Debugging Support for VBScript Macros is Available for Free!
Automation Issues for the Microsoft Developer Studio Environment
<PRE>   Some VBScript Objects and Procedures Are Not Supported from VBScript
   Macros
   Automating Tasks, Ignore Cautionary Text in Procedure in Online Docs
   Additional Method for the Debugging Object, Automation
   Detail for MoveTo Method for the TextSelection Object, Automation
   IDocument should be IGenericDocument in Dual Interface Automation Sample
   NewWorkspace event is never fired for the Application object, Automation

</PRE><h2>MORE INFORMATION</h2>
 
<P>
ClassView and Wizard Bar 'Auto #Include' Feature May Cause Build Error
(C2011: type redefinition)
 
<P>
The 'Auto #Include' feature adds #include statements to your code when you
add a function/variable through the ClassView context menu or WizardBar,
and when the function/variable is of a type class, struct, or union.
Therefore, if you author code that does not have the #ifndef/#endif wrapper
statements in your header file, there is a possibility that a build error
will occur if this header file is included twice within a project. The
build error is: error C2011: type redefinition. You can solve this by
adding the following lines to the top and bottom of your header file.
<P>
For example, if you have a file sample.h, it should look like this:
<P>
<PRE>  #ifndef MYHEADER_H__
  #define MYHEADER_H__

</PRE>This is where all the code for sample.h is.
<P>
<PRE>  #endif // MYHEADER_H__

</PRE><h3>Using ClassView List</h3>
 
<P>
The ClassView list requires .h files. If you cannot see your classes in
ClassView, make sure that your header files are included in the project.
<P>
<P><h3>Files in the External Dependencies Folder (FileView) Are Not Project Files</h3>
 
<P>
The "External Dependencies" folder (in FileView) in the Developer Studio
environment lists files that are not part of the project but that are used
when building your project. When performing certain project-dependent
operation on a file such as using source code control, defining custom
build rules, or displaying ClassView items from the header files, the file
must be a part of the project. This is a change from the "Dependencies"
folder behavior in Visual C++ version 4.x.
<P>
To add a file to a project, move the file (drag and drop) from the
"External Dependencies" folder to anywhere in the project folders or the
main project folder.
<P>
<P><h3>Using Icon and Toolbar Editors with Windows NT v4.0</h3>
 
<P>
The Icon and Toolbar editors may show strange behavior on Microsoft Windows
NT® 4.0 machines running S3, ATI, or Tseng Labs ET4000 video drivers.
Typically, icons and toolbar buttons will go black and certain items on the
screen will appear "blocky." Service Pack 2 for Windows NT 4.0 fixes this
problem. You can obtain the service pack via FTP from &gt;
ftp.microsoft.com/bussys/winnt/winnt-public/fixes .
<P>
NOTE: If you get a STOP error message (accessing the floppy disk drive or
the CD-ROM drive) with Service Pack 2 for Windows NT 4.0, you can obtain
the fix listed below or wait for the next Windows NT service pack. You can
obtain the fix via FTP from &gt; ftp.microsoft.com/bussys/winnt/winnt-
public/fixes/usa/NT40/hotfixes-postsp2/krnl-fix .
<P>
NOTE: If you get a loss of connectivity in remote access with Windows NT,
and you installed the NT Service Pack 2, you can turn off the Multilinking
Protocol (MP) option altogether, or acquire this fix via FTP from &gt;
ftp.microsoft.com/bussys/winnt/winnt-public/fixes/usa/NT40/hotfixes-
postsp2/ras-fix .
<P>
<P><h3>Hosting ActiveX Documents in the Developer Studio Environment</h3>
 
<P>
The Developer Studio environment can host ActiveX Documents such as Word or
Excel. To open an ActiveX document, click "Other Documents" (File menu, New
command). Because ActiveX documents do not all meet the same standards,
they may hang the application that is hosting them. For example, Comic Chat
will hang and should not be used from inside the Developer Studio
environment. Microsoft has tested many other ActiveX documents, such as the
products in Microsoft Office, and verified that these do not hang the
Developer Studio environment.
<P>
<P><h3>Accessing Online Help Brings Up MSN Dialog Box</h3>
 
<P>
When accessing online Help you may get a dialog box asking about your dial-
up connection for your online service provider. This occurs because Visual
Studio uses the Internet Explorer (which has an option to automatically
connect to the online service) to display the online documentation. Click
Cancel to dismiss the dial-up connection dialog box. You can disable
automatic dialup with the following procedure.
<P>
To turn off the automatic dialup:

<OL><P><LI>Right-click the Internet Explorer icon on your desktop to see the
   context menu.
</OL>2. Click Properties.
3. In the Properties dialog box, click the Connection tab.
4. In the Dialing group, clear "Connect to the Internet as needed". This
<PRE>   disables Auto dialup.
</PRE></OL>5. Click Apply, and then click OK.
<P>
<P><h3>MSDN Must Be Installed to View Visual Studio Documentation</h3>
 
<P>
Once MSDN is installed, you can find the complete set of Visual Studio
documentation in the Table of Contents under the Microsoft Developer
Network Visual Studio Edition node, Developer Products, Visual Studio 97.
<P>
<P><h3>Full Debugging Support for VBScript Macros is Available for Free!</h3>
 
<P>
Currently Visual Studio does not provide an integrated debugger to allow
you to step through a VBScript macro, set breakpoints, inspect variables,
etc. However, the new Microsoft Script Debugger will have this ability. The
Microsoft Script Debugger, designed to debug VBScript code embedded in HTML
pages open in the Microsoft Internet Explorer, will actually debug VBScript
code running in any application, including the Visual Studio products.
<P>
<P><h3>How to Get a Copy of the Microsoft Script Debugger</h3>
 
<P>
Visit the VBScript home page at <B><A HREF="http://www.microsoft.com/vbscript">http://www.microsoft.com/vbscript.</A></B> From
this page there will be a link to download the Microsoft Script Debugger
for free.
<P>
<P><h3>How to Use the Microsoft Script Debugger to Debug Your VBScript Macros</h3>
 

<OL><P><LI>Ensure that mdm.exe, distributed with the Microsoft Script Debugger, is
   running. If it is not, you may double-click it from Explorer.
</OL>2. Launch Developer Studio.
3. Be sure the VBScript macro file you wish to debug is installed. (For
<PRE>   more information, see "Installing VBScript Macros" in the Developer
   Studio Environment User's Guide.)
</PRE></OL>4. Start the Microsoft Script Debugger.
5. Microsoft Script Debugger should automatically display the "Attach to
<PRE>   Application" dialog box. If it does not, go to the File menu and click
   Attach.

   NOTE: Some prerelease versions of the Microsoft Script Debugger may not
   yet be able to debug processes other than Internet Explorer. If the
   version of Microsoft Script Debugger that you are running does not have
   the Attach to Application dialog described above, then you will need a
   newer version of the Microsoft Script Debugger to debug VBScript macros
   in Developer Studio.

</PRE><P><LI>Choose msdev.exe from the listbox in this dialog box, and click Attach.
</OL>7. You will now see the Project Explorer displayed, with a node for each
<PRE>   VBScript macro file that is loaded into Developer Studio. You may open
   those files within Microsoft Script Debugger by double-clicking the
   appropriate node. You may then set breakpoints in those files, or
   alternatively, go to the Debug menu and click Break at Next Statement.
   Then, the next time you run a VBScript macro from Developer Studio,
   that macro will pause at the breakpoints you set, or at the next
   instruction if you clicked Break at Next Statement. You may now use the
   Microsoft Script Debugger to inspect variables, evaluate expressions in
   the Immediate Window, and look at the call stack of the paused VBScript
   procedures. Consult the documentation distributed with the Microsoft
   Script Explorer for more information on its features.

</PRE></OL><h3>Automation Issues for the Microsoft Developer Studio Environment</h3>
 
<P>
Some VBScript Objects and Procedures Are Not Supported from VBScript
Macros:
<P>
The VBScript Reference lists all objects and procedures that you may access
from "unsafe" VBScript hosts. VBScript macros may only use the "safe"
constructs of VBScript. This means a number of objects and procedures
listed in the VBScript reference will be unavailable when writing VBScript
macros. The following are examples of such "unsafe" constructs:
<P>
CreateObject function
GetObject function
FileSystemObject Object and all of its properties and methods
TextStream Object and all of its properties and methods
Dictionary Object and all of its properties and methods
File Input/Output Constants
<P>
Automating Tasks, Ignore Cautionary Text in Procedure in Online Docs:
<P>
Disregard the Caution statement after step 5, this bracket syntax is no
longer necessary. This is listed in the procedure to add a command
(Developer Studio Environment User's Guide, Automating Tasks in Developer
Studio, Developer Studio Add-ins, How Do I...Topics, Developer Studio Add-
ins, in the topic Adding Commands to Developer Studio).
<P>
Additional Method for the Debugging Object, Automation:
<P>
There is an additional method for the Debugging Object that is not
represented in the online documentation (Developer Studio Environment
User's Guide, Automating Tasks in Developer Studio, Reference: Developer
Studio Objects, Debugger Methods category.) Break is an additional valid
Debugger method:
<P>
Break Method, applies to Debugger object.
Syntax: object.Break
Parameters: object: An object expression that evaluates to an object in the
Applies To list.
Example: The following example performs the Break method.
<P>
<PRE>   Debugger.Break

</PRE>Detail for MoveTo Method for the TextSelection Object, Automation:
<P>
In the Developer Studio Environment User's Guide, under the node for
Automating Tasks in Developer Studio, in the section titled Reference:
Developer Studio Objects, and then in the category called Methods, in the
topic for MoveTo, there are two lines displaying incorrect information
about using the zero value for line and/or column: "Some possible values
are: 0 Does not move the insertion point; it stays on the current
line/column." Your results may differ from this explanation. To get the
current line and column, try TextSelection.CurrentLine or
TextSelection.Current Column.
<P>
IDocument should be IGenericDocument in Dual Interface Automation Sample:
<P>
All references to "IDocument" within the Developer Studio User's Guide
should say "IGenericDocument". This error occurs in the topic "Controlling
Developer Studio Objects Through Dual Interfaces" (in the Developer Studio
Environment User's Guide, Automating Tasks in Developer Studio, Developer
Studio Add-ins, Overview of Developer Studio Add-ins node). It also occurs
in the sample listed under the "Alternating Between Dual Interfaces" title
in that same topic. Please note that IDocuments (plural) is fine.
<P>
NewWorkspace event is never fired for the Application object, Automation:
<P>
You may not use a VBScript macro file, an add-in, or an out-of-process
controller to respond to the NewWorkspace event on the Application object.
This event is never fired, and you cannot write an event handler for it.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97<BR>
Keywords            : kbtlc<BR>
Version             : 97<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbreadme<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
