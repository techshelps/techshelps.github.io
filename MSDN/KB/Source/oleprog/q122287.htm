

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Limits of VB 3.0 &amp; Disptest as Automation Controllers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q122287">
<META NAME="KBModify" CONTENT="1996/02/15">
<META NAME="KBCreate" CONTENT="1994/11/01">
<META NAME="Keywords" CONTENT="kbole kbprg kb3rdparty">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  Visual Basic version 3.0 for Windows and Disptest (the automation controller that shipped with OLE version 2.0) have the following limitations as automation controllers in addition to those described on pages 67-69 of the OLE 2 Programmer's Referen...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAPN,QA2K,QAH6,QAH7,QAD7,QA5F,QAMA,QA28,QATJ,QAKD,QBVP,QAHE,QAUD,QAGI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Limits of VB 3.0 &amp; Disptest as Automation Controllers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q122287</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic for Windows, version 3.0
<LI>Microsoft OLE Libraries for Windows and Win32s, version 2.02
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Visual Basic version 3.0 for Windows and Disptest (the automation
controller that shipped with OLE version 2.0) have the following
limitations as automation controllers in addition to those described on
pages 67-69 of the OLE 2 Programmer's Reference, Volume 2:

<UL><LI>Parameters cannot be passed by reference to Automation properties or
   methods.

<LI>Array elements cannot be accessed.

<LI>When an exception is raised by an automation object, the value of
   the wCode field of the EXCEPINFO structure is not used. Instead the
   value 440 is displayed.
<P>
</UL>NOTE: All of these limitations have been removed in Visual Basic version
4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Parameters Cannot Be Passed by Reference</h3>
 
<P>
Visual Basic version 3.0 for Windows and Disptest cannot pass parameters by
reference to automation properties and methods.
<P>
This is a limitation of Visual Basic version 3.0 and Disptest, not of OLE
Automation. OLE Automation allows building controllers that pass parameters
by reference.
<P>
Here are three workarounds:

<UL><LI>Use return values of properties and methods to return a value instead of
   using byref parameters for this purpose. This approach cannot be used
   when a property or method returns multiple values.
<P>
   -or-

<LI>Use third party controllers (see the list below) while you wait for a
   future version of Visual Basic, or use Visual Basic for Applications,
   which ships with Microsoft Excel version 5.0. Microsoft Visual Basic for
   Applications cannot be redistributed by or incorporated into products
   that are not manufactured by Microsoft. However, if user of your
   application has Microsoft Excel version 5.0 installed, you can use its
   Visual Basic for Applications as a controller of any Automation server.
<P>
   Here are two known third-party controllers:
<P>
   NOTE: The products included here are manufactured by vendors
   independent of Microsoft; we make no warranty, implied or otherwise,
   regarding these products' performance or reliability.
<P>
   Softbridge Basic Language
   Mystic River Software, Inc. 125 CambridgePark Drive, Cambridge MA 02140
   Tel:1-800-298-3500, 617-497-1585
   Fax:617-864-7747
<P>
   Summit BasicScript
   Summit Software Company, 2844 Sweet Road, Jamesville, NY  13078
   Tel: 315-677-9000
   Fax: 315-677-3224
   Internet: info@summsoft.com
<P>
   -or-

<LI>Write a DLL that has exported functions that correspond to Automation
   methods and properties exposed by the automation server. Visual Basic
   version 3.0 can call these exported DLL functions, which in turn can
   call the corresponding automation properties or methods in the
   automation server. This approach works because Visual Basic version 3.0
   can pass parameters by reference to DLL functions.
<P>
   The DLL functions can pass parameters by reference to the properties and
   methods of the automation method or property because OLE supports
   passing parameters by reference. This approach may not be suitable for
   some automation servers that implement nested objects.
<P>
</UL><h3>Array Elements Cannot Be Accessed</h3>
 
<P>
Array elements cannot be accessed in Visual Basic version 3.0 or Disptest.
As a result, code similar to the following code cannot be executed in
Visual Basic version 3.0 or in Disptest if selection returns a safearray.
This is because safearray elements cannot be accessed in Visual Basic
version 3.0 or in Disptest.
<P>
<PRE>   Value = ObjVar.Selection(I)
   ObjVar.Selection(I) = Value

</PRE>Workarounds include using indexed properties, third-party controllers,
Visual Basic for Applications in Microsoft Excel version 5.0, or waiting
for a future release of Visual Basic.
<P>
Indexed properties are properties that take parameters. For example,
in the example code, Selection could be made a property that takes an
index parameter. Here is a description in the .ODL file of an indexed
parameter called Value whose property type is VARIANT:
<P>
<PRE>   [propget] VARIANT Value(long index);
   [propput] void Value(long index, VARIANT NewValue);

</PRE>In a dispinterface, an indexed property should be used under the 'methods'
keyword. A Microsoft Foundations Classes (MFC) implementation can use the
DISP_PROPERTY_PARAM macro in the dispatch map to implement an indexed
property.
<P>
The disadvantage of implementing array element access using indexed
properties is the performance penalty caused by each indexed property
access requiring the overhead of an RPC/LRPC call (for LocalServer
Automation objects).
<P>
<P><h3>Value of EXCEPINFO.wCode Not Displayed on Exceptions</h3>
 
<P>
When an automation object raises an exception by returning DISP_E_EXCEPTION
from IDispatch::Invoke and by filling the pexcepinfo parameter of this
method, Visual Basic version 3.0 and Disptest will ignore the value
returned in the wCode field of the EXCEPINFO structure, instead returning
the value 440. Note that either the wCode or scode field of EXCEPINFO
should be set to 0 -- both cannot be used.
<P>
Workarounds include using third-party controllers, Visual Basic for
Applications in Microsoft Excel version 5.0, or waiting for a future
release of Visual Basic.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.00 5.00<BR>
KBCategory: kbole kbprg kb3rdparty<BR>
KBSubcategory: LeTwoAto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
