

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reasons to Block an OLE Server </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q83021 ">
<META NAME="KBModify" CONTENT="1995/02/17">
<META NAME="KBCreate" CONTENT="1992/04/02">
<META NAME="Keywords" CONTENT="kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  Windows implements OLE through dynamic data exchange (DDE); the OLE libraries send and post DDE messages to transmit information. Because DDE messages must be processed in a particular order, an OLE server application must not enter a message dispa...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QA9Q,QAEV,QA01,QAPN,QAA7,QAY5,QAA8,QAYC,QBUG,QBUF,QBHQ,QAH6,QAHC,QAZ2 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Reasons to Block an OLE Server</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q83021 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Windows implements OLE through dynamic data exchange (DDE); the OLE
libraries send and post DDE messages to transmit information. Because DDE
messages must be processed in a particular order, an OLE server application
must not enter a message dispatch loop in an OLESERVER, OLESERVERDOC, or
OLEOBJECT method.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When an application displays a message box or a modal dialog box,
Windows enters a message dispatch loop. If such a loop occurs within
an OLE method, it could allow the OLE libraries to receive additional
DDE messages before the current method completed processing. These
messages could cause problems; the OLE libraries might act as if the
method in progress (that started the message dispatch loop) had
completed its processing, and call another method. If this new method
requires information provided by the incomplete method, an error will
result.
<P>
To avoid this situation, the OLE Server Library provides the
OleBlockServer function. When a server application blocks itself by
calling this function, the OLE libraries queue all incoming requests
to the server. When the server is ready to continue processing, it
calls the OleUnblockServer function to unblock itself. A server
application generally blocks during a lengthy operation where an
interruption to processing will be difficult or impossible to handle.
Additionally, a server should block itself any time it displays a
dialog box or a message box.
<P>
The following code demonstrates blocking an OLE server during the
OLESERVER::Create method:
<P>
BOOL  fBlocked = FALSE; // Global flag to indicate server blocked.
<P>
OLESTATUS FAR PASCAL ServerCreate(...)
{
<PRE>   // The value of lhServer identifies the server and is provided by a
   // call to the OleRegisterServer function.
   retVal = OleBlockServer(lhServer);

   // Set the flag indicating server blocked.
   fBlocked = TRUE;

   if (retVal == OLE_OK)
      MessageBox(...);
   else
      return(OLE_ERROR_GENERIC);
</PRE>}
<P>
<PRE>    .
    .   // Other code.
    .

   // Main message loop in WinMain.
   while (TRUE)
   {
      // Loop until no more blocked OLE requests.
      while (fBlocked)
         OleUnblockServer(lhServer, &amp;fBlocked);

      GetMessage(&amp;msg, NULL, 0, 0)

      // WM_QUIT message received, fall out of loop.
      if (msg.message == WM_QUIT)
         break;

      TranslateMessage(&amp;msg);
      DispatchMessage(&amp;msg);
   }

</PRE>Please note that OleUnblockServer unblocks only one request at a time.
Therefore, it is necessary to call this function repeatedly until all
requests have been unblocked.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.10 1.00<BR>
KBCategory: kbole kbprg<BR>
KBSubcategory: LeoneSvrBlock<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
