

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: DCOM95 MTA Clients May Block Broadcast DDE Messages </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q181949">
<META NAME="KBModify" CONTENT="1998/03/02">
<META NAME="KBCreate" CONTENT="1998/03/02">
<META NAME="Keywords" CONTENT="LeTwoCom">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  Due to a bug in the RPC runtime DLLs that ship with DCOM951.1, MTA clients that do not service the message queue may block the global broadcast of DDE messages. When a user double-clicks on a desktop icon, the program associated with the icon may b...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAEV,QAUQ,QBVV,QAYC,QACK,QDL9,QBWO,QBWN,QARL,QAIF,QAHC,QBWQ,QDIX,QAGQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: DCOM95 MTA Clients May Block Broadcast DDE Messages</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 2, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q181949</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft OLE Libraries 4.0 included with:
<P><PRE>    - Microsoft Windows 95
</UL></PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Due to a bug in the RPC runtime DLLs that ship with DCOM951.1, MTA clients
that do not service the message queue may block the global broadcast of DDE
messages. When a user double-clicks on a desktop icon, the program
associated with the icon may be blocked from launching and Windows Explorer
may hang.
<P>
<P><h2>CAUSE</h2>
 
<P>
A top-level window is created by the RPC runtime on the MTA client thread
that called CoCreateInstance(Ex), but the window is not destroyed when the
API returns. The client thread has no obligation to service the message
queue under the MTA programming model. If it does not, this top-level
window causes global DDE broadcast messages to block.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this bug, you need to make the client's MTA thread behave
like an STA thread (that is, it must service the message queue). If it is
blocking on a win32 handle, it must call the MsgWaitForMultipleObjects()
API to simultaneously dispatch windows messages. See the REFERENCES section
for an article that explains how to do this.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this bug and will post
new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
A thread initializes COM libraries for the Single Threaded Apartment(STA)
by calling CoInitializeEx(0, COINIT_APARTMENTTHREADED), or simply
CoInitialize() or OleInitialize(). This type of thread must service the
message queue for the following two reasons:

<UL><LI>COM creates a hidden top-level window when a thread calls the APIs
   mentioned above. A thread must always service the message queue if it
   creates top-level windows. If it does not, the thread can block the
   global broadcast of messages by any application using the SendMessage
   API.

<LI>Incoming calls into the apartment are delivered as messages posted by
   COM to this hidden window. If the thread does not service the message
   queue, it will not receive incoming calls.
<P>
</UL>A thread initializes COM libraries for the Multi Threaded Apartment(MTA) by
calling CoInitializeEx(0, COINIT_MULTITHREADED). This type of thread does
not need to service the message queue, because incoming calls into this
type of apartment are delivered through RPC runtime threads and not through
windows messages. COM does not create any windows when the thread calls
CoInitializeEx(0, COINIT_MULTITHREADED). The RPC runtime creates hidden
windows as needed to facilitate calls. The RPC runtime does this on its own
threads and it services the message queue. However, due to the bug
described in this article, the RPC runtime creates a window on the client's
thread and does not destroy this window when the call completes. If the
client does not service the message queue, this top-level window will block
global broadcasts.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For additional information, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../OLEPROG/Q136885.htm">Q136885</A></B>
   TITLE     : INFO: OLE Threads Must Dispatch Messages
</PRE> 
<PRE>Keywords          : LeTwoCom
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 2, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
