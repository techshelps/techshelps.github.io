

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLE Clipboard Formats and Conventions </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q83659 ">
<META NAME="KBModify" CONTENT="1995/02/17">
<META NAME="KBCreate" CONTENT="1992/04/16">
<META NAME="Keywords" CONTENT="kbole kbprg">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  Because most OLE server applications can support a number of data formats, the OLE specification defines a data format convention that determines which data format a server application uses to place data on the clipboard. This article explains the ...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNG,QA9Q,QAPN,QAW6,QAYY,QAUJ,QBPG,QAJH,QANH,QA3R,QAYK,QAOK,QAH6,QARM,QAKC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>OLE Clipboard Formats and Conventions</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q83659 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Because most OLE server applications
can support a number of data formats, the OLE specification defines a
data format convention that determines which data format a server
application uses to place data on the clipboard. This article explains
the Native, OwnerLink, and ObjectLink OLE clipboard data formats.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
An OLE server application must call the RegisterClipboardFormat
function to register the Native, OwnerLink, and ObjectLink OLE data
formats. An OLE server application provides the data, which an OLE
client application stores. The OLE libraries use the data to
reconstruct an object when required.
<P>
<P><h3>Contents of OLE Formats</h3>
 
<P>
The Native data format presents the server application's internal data
structures. In the process of opening and editing an embedded object,
the server application reconstructs the object from native data. The
structure of the data is defined only by the server application.
<P>
The OwnerLink data format describes an embedded object, identifying
the class, document name, and name of an object. Each of these data is
a null-terminated string. A server application creates OwnerLink data
by concatenating the three identifying strings, with a null terminator
on each, and appending a final null terminator. The following string
is an example of OwnerLink data for a portion of a bitmap saved from
Windows Paintbrush:
<P>
<PRE>   Paintbrush Picture\0Unused\0(20,10)-(90,100)\0\0

</PRE>In the example above, Paintbrush Picture identifies the class of the
object. Because the OwnerLink data format describes an embedded
object, the document name field is not used in OLE version 1.0. The
application specifies "Unused" as a place holder. The coordinates in
the object name field describe the object. Other applications can use
a name such as "Figure #1234."
<P>
The ObjectLink data format describes a linked object. While it
contains the same data as the OwnerLink format, the document name and
object name fields are much more important. For example, a linked
object that originated in Paintbrush might be described with
ObjectLink data as in the following:
<P>
<PRE>   Paintbrush Picture\0c:\\BITMAP.BMP\0(20,10)-(90,100)\0\0

</PRE>The class name field is the same as the OwnerLink data. In this
format, the document name identifies the actual filename of the link,
and the object name identifies the portion of the file that makes up
the object. Because a linked object is not required to refer to the
entire file, the object name must identify the portion of the file
that makes up the actual object. Another application may use a
different object name, such as a range of cells in a spreadsheet, a
slide number in a presentation, or a page number and line number in a
document.
<P>
<P><h3>Placing OLE Data on the Clipboard</h3>
 
<P>
When the user cuts or copies data to the clipboard, an OLE server
application renders the data to the clipboard. The OLE server must
render the data in the three OLE formats, as appropriate. If the
server can support other data formats, it can also render the data in
these formats. The following list presents the data formats. The
format that preserves the most information is listed first; subsequent
formats lose fidelity.

<UL><LI>Application-specific data
<LI>Native OLE format
<LI>OwnerLink OLE format
<LI>CF_METAFILEPICT format
<LI>CF_DIB or CF_BITMAP format
<LI>ObjectLink OLE format
<LI>Any other data formats in any desired order
<P>
</UL>A server application renders data in OwnerLink format only when it can
provide an embedded object. It renders data in ObjectLink format only
when the server has a known filename in which the object is stored,
and only when the user is copying the data to the clipboard. If the
object is new and it does not have a known filename, or if the user is
cutting the data to the clipboard, the server does not provide the
ObjectLink data format.
<P>
The CF_BITMAP, CF_DIB, and CF_METAFILEPICT formats provide a static
graphic representation of an object. An OLE server application should
always provide data in CF_METAFILEPICT format.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbole kbprg<BR>
KBSubcategory: LeOneCli LeOneSvr<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
