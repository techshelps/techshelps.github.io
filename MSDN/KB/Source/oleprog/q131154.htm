

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Testing OLE Applications with Outline </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131154">
<META NAME="KBModify" CONTENT="1997/04/08">
<META NAME="KBCreate" CONTENT="1995/06/04">
<META NAME="Keywords" CONTENT="kbole kbtshoot LeTwoTls">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  To understand how an OLE application should handle an OLE scenario, you may find it helpful to examine an existing application that handles that scenario correctly.  The OUTLINE series of OLE sample applications can provide a log of debug output. T...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIB,QA9Q,QAGI,QAH4,QAVX,QAJH,QAIF,QDMH,QAW6,QATL,QATK,QABH,QAPF,QAPN,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Testing OLE Applications with Outline</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 8, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131154</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Software Development Kit (SDK) for Windows NT
   version 3.5
<LI>Microsoft OLE Libraries for Windows and Win32s, versions 2.01, 2.02,
   and 2.03
<LI>Microsoft OLE Libraries included with:
   - Microsoft Windows NT version 3.5
   - Microsoft Windows 95
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
To understand how an OLE application should handle an OLE scenario, you may
find it helpful to examine an existing application that handles that
scenario correctly.
<P>
The OUTLINE series of OLE sample applications can provide a log of debug
output. This log shows all of the OLE calls that the OUTLINE application
handles and the OLE calls that it makes. Examining this log is a useful OLE
problem-solving tool, and an excellent way to learn about OLE programming.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The OUTLINE series consists of four different applications: CNTROUTL (OLE
container), SVROUTL (OLE server), ICNTROTL (in-place editing-capable
OLE container), and ISVROTL (in-place editing-capable OLE server). The
OUTLINE series is included as sample code with the OLE SDK and with the
Win32 SDK.
<P>
Each of the four OUTLINE applications implements a Debug Level dialog
box. The following table show the debugging information produced by each
debug level value:
<P>
<P>
<PRE>Debug Level   Debugging Information Produced
</PRE> 
<PRE>   0          No debug messages (default).
   1          Print message when a Document or Application is destroyed.
   2          Trace every OLE API and method call.
   3          Give a more OUTLINE app specific context to the OLE calls.
   4          Track all memory reference counts (AddRef/Release).

</PRE>The debug output forms a log of all the incoming and outgoing OLE method
calls that OUTLINE handles. Use the DBWIN tool to capture and display this
output. Note that although there are both 16-bit and 32-bit versions of
the OUTLINE samples, DBWIN can currently only be used to capture output
from the 16-bit samples.
<P>
<P><h3>Benefits to Examining the Watch Log</h3>
 
<P>
The first benefit to examining the watch log produced by one of the
OUTLINE samples is that it shows the series of calls that an OLE
application needs to make in order to handle a given OLE scenario. For
example, to see what calls an OLE container application needs to make when
transitioning an embedded object from the loaded to the running state,
double-click an object embedded into a CNTROUTL document to run that
object; then examine the log that CNTROUTL produces.
<P>
The next benefit arises from the fact that the source code to the OUTLINE
samples is included with Microsoft Visual C++. The watch log shows you
the key calls that OUTLINE makes to handle some particular scenario.
Using a GREP utility, you can search the OUTLINE source code for those
calls, and then examine that code. The OUTLINE source code is a very
thorough implementation of OLE functionality.
<P>
In addition, you can run the OUTLINE application under a debugger, setting
break points before the key calls, and then stepping through that code.
<P>
Finally, the OUTLINE source code contains many source code comments labeled
"OLE2NOTE." These comments contain in-depth discussions of some of the
more detailed aspects of OLE programming.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : kbole kbtshoot LeTwoTls<BR>
Version             : 2.01 2.02 2.03 3.5 4.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 8, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
