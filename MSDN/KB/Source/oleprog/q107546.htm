

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SAMPLE: OLE Automation Collection </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q107546">
<META NAME="KBModify" CONTENT="1996/10/23">
<META NAME="KBCreate" CONTENT="1993/11/23">
<META NAME="Keywords" CONTENT="kbole kbfile kbwebcontent">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  COLLECT demonstrates how to create an OLE automation collection object.  You can find COLLECT.EXE, a self-extracting file, on the following services:   - Microsoft's World Wide Web Site on the Internet       On the www.microsoft.com home page, clic...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAUD,QAW6,QAEF,QA28,QATJ,QBBI,QALW,QA9Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>SAMPLE: OLE Automation Collection</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  October 23, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q107546</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE Libraries for Windows and Win32s, version 2.0
<LI>Microsoft OLE Libraries, included with:
<P><PRE>    - Microsoft Windows NT, versions 3.5 and 3.51
    - Microsoft Windows 95
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
COLLECT demonstrates how to create an OLE automation collection object.
<P>
<PRE>You can find <A HREF="http://support.microsoft.com/download/support/mslfiles/COLLECT.EXE">COLLECT.EXE</A> <I>(size: 38484 bytes)</I> 
                        , a self-extracting file, on the following
</PRE>services:

<UL><LI>Microsoft's World Wide Web Site on the Internet
<P><PRE>      On the www.microsoft.com home page, click the Support icon.
      Click Knowledge Base, and select the product.
<PRE></PRE>      Enter kbfile <A HREF="http://support.microsoft.com/download/support/mslfiles/COLLECT.EXE">COLLECT.EXE</A> <I>(size: 38484 bytes)</I> 
                              , and click GO!
      Open the article, and click the button to download the file.

</PRE><LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \softlib\mslfiles folder.
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/COLLECT.EXE.">COLLECT.EXE.</A> <I>(size: 38484 bytes)</I> 
</PRE>
<LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL.
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/COLLECT.EXE.">COLLECT.EXE.</A> <I>(size: 38484 bytes)</I> 
</PRE><P>
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The collection object implements the following methods and properties: Add
Method, Count Property, Item Property, NewEnum Property, and Remove Method.
<P>
Error handling in the collection object involves raising exceptions.
CreateStdDispatch does not allow exceptions to be raised, so the collection
object implements the IDispatch interface using DispGetIDsOfNames and
DispInvoke.
<P>
<P><h3>Add Method</h3>
 
<P>
<PRE>Description:     Adds the indicated item to the collection. If an object
                 is created, it should be returned.
Arguments:       Varies. It can be a pointer to the object that is to be
                 added or it can the information required to create the
                 object.
Return type:     Varies. If no object is created, the return type should
                 be void. If an object is created, the return type should
                 be VT_DISPATCH.

</PRE>Note: The Add method is not appropriate for all collections, so it is not
required. For many application-created collections, objects are
automatically added to the collection for the user.
<P>
<P><h3>Count Property</h3>
 
<P>
<PRE>Description:     Returns the number of items in the collection. Read-only
                 property.
Arguments:       None.
Return type:     VT_I4.

</PRE><h3>Item Property</h3>
 
<P>
<PRE>Description:     Returns the indicated item in the collection.
Argument:        Specifies the index. Some collections allow various types
                 of indexing. For example, this sample allows an integer or
                 string to be specified as an index.
Return type:     VT_DISPATCH.

</PRE>Note: Item is the default value for the object, so it should have the
special DISPID, DISPID_VALUE. MkTypLib automatically assigns this DISPID if
the default attribute is specified in the ODL file.
<P>
<P><h3>_NewEnum Property</h3>
 
<P>
<PRE>Description:     Returns an enumerator that supports IEnumVariant for the
                 items currently in the collection. Read-only property.
Arguments:       None.
Return type:     VT_UNKNOWN.

</PRE>Note: NewEnum will not be accessible to users and must have the restricted
attribute in the ODL file. The NewEnum method must have a special DISPID,
DISPID_NEWENUM. The defining characteristic of a collection is the ability
for a user to iterate over the items in it. Some languages will have built-
in support for collections. The NewEnum method allows an OLE automation
controller to support "for each" iteration over a collection:
<P>
<PRE>   For Each Item In Collection
   Debug.Print Item.Text
   Next Item

</PRE>OLE automation controllers that support "for each" iteration will call the
NewEnum method on the collection object and then QueryInterface on the
resulting IUnknown to get the desired IEnumVariant.
<P>
<P><h3>Remove Method</h3>
 
<P>
<PRE>Description:     Removes the specified item from the collection.
Argument:        Specifies the index. Some collections allow various types
                 of indexing. For example, this sample allows an integer
                 or string to be specified as an index.
Return type:     void.

</PRE>Note: The object is not deleted. It is simply removed from the collection.
Remove should support the same kinds of indexing as the Item() method for
the same collection. The Remove method is not appropriate for all
collections, so it is not required. For many application-created
collections, objects are automatically removed the collection for the user.
<P>
To Run
 
<P>
The collection sample application object exposes the following:
<P>
<PRE>   ProgID :  Collection.Application

   Method and Property Names     Notes
   -----------------------------------------------------------
   [App Object]
   Collection  (read only prop)  Returns empty collection.
   New Item    (method)          Creates and returns new item.

   [Item Object]
   Text        (default prop)    Sets and returns string.

   [Collection Object]
   See above for exposed properties and methods.

</PRE>Update the path in HELLO.REG to the current location of the object and the
type libraries.
<P>
<P><h3>To Compile</h3>
 
<P>
Requires OLE version 2.01 or later.
<P>
Include device=vmb.386 in the [386Enh] section of SYSTEM.INI.
Note that vmb.386 can be found in \OLE2\BIN.
Run WXSERVER.EXE from \OLE2\BIN before running the makefile.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.50 4.00 softlib<BR>
KBCategory: kbole kbfile kbwebcontent<BR>
KBSubcategory: LeTwoAto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  October 23, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
