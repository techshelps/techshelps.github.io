

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining If an Object Is Capable of Visual Editing </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q99045 ">
<META NAME="KBModify" CONTENT="1995/05/17">
<META NAME="KBCreate" CONTENT="1993/05/20">
<META NAME="Keywords" CONTENT="kbole kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  It is impossible for a container to consistently determine whether an object will attempt negotiation for visual editing. However, by determining whether the object supports the IOleInPlaceObject interface, the container may want to assume that the...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAW6,QAPN,QAUD,QA56,QA55,QAGI,QDL9,QBWO,QBWN,QAIJ,QADK,QBWS,QDMW,QDIV,QBHQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Determining If an Object Is Capable of Visual Editing</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q99045 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE Libraries for Windows and Win32s, versions 2.0 and 2.01
<LI>Microsoft OLE Libraries, included with:
<P><PRE>    - Microsoft Windows NT, versions 3.5 and 3.51
    - Microsoft Windows 95
</UL></PRE> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is impossible for a container to consistently determine whether an
object will attempt negotiation for visual editing. However, by
determining whether the object supports the IOleInPlaceObject
interface, the container may want to assume that the negotiation will
occur.
<P>
The default object handler will always fail a call to QueryInterface
for IOleInPlaceObject if the object is in the loaded state. The
container must first run the object and then query for the
IOleInPlaceObject interface. If this QueryInterface call succeeds,
then the container can assume that the object supports visual editing,
and may start negotiation on the execution of a verb.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following C++ code returns TRUE if an object may start visual
negotiation when IOleObject::DoVerb is called:
<P>
BOOL fCanInPlaceActivate(LPOLEOBJECT lpObject)
{
LPOLEINPLACEOBJECT lpInPlaceObject;
BOOL retval;
<P>
<PRE>    // Run the object.
    OleRun(lpObject);

    // Query for IOleInPlaceObject.
    HRESULT herr = lpObject-&gt;QueryInterface(IID_IOleInPlaceObject,
                                            (LPVOID FAR *)
                                            lpInPlaceObject);

    // Check the return value.
    if (herr == NOERROR)
        {
        retval = TRUE;
        lpInPlaceObject-&gt;Release();
        }
    else
        retval = FALSE;

    lpObject::Close(OLECLOSE_NOSAVE);

    return retval;
</PRE>}
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.00 3.50 4.00<BR>
KBCategory: kbole kbprg kbcode<BR>
KBSubcategory: LeTwoInp<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
