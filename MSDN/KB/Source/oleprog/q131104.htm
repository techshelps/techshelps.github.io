

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: Compiler Doesn't Lay Out Overloaded Functions in Order </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q131104">
<META NAME="KBModify" CONTENT="1995/06/07">
<META NAME="KBCreate" CONTENT="1995/06/04">
<META NAME="Keywords" CONTENT="kbprg kbole kbprb">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  The Microsoft Visual C++ compiler does not lay out overloaded functions in the vtable in the order in which they are declared. This does not adhere to the COM binary standard. (See the OLE Specification section 3.1.1.1 for a discussion of the COM b...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABB,QAY5,QDL9,QBWO,QBWN,QBVV,QBFY,QA4Q,QAEF,QABA,QBV8,QAB9,QA9Q,QA56,QA55 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: Compiler Doesn't Lay Out Overloaded Functions in Order</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 7, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q131104</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft OLE Libraries for Windows and Win32s, version 2.03
<LI>Microsoft OLE libraries included with:
<P>
<P><PRE>    - Microsoft Windows NT version 3.5
    - Microsoft Windows 95
</PRE>
<LI>Microsoft Visual C++ for Windows, version 1.52
<LI>Microsoft Visual C++, 32-Bit Edition, version 2.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The Microsoft Visual C++ compiler does not lay out overloaded functions in
the vtable in the order in which they are declared. This does not adhere to
the COM binary standard. (See the OLE Specification section 3.1.1.1 for a
discussion of the COM binary standard.) If there are no overloaded
functions, the COM binary standard is followed.
<P>
In general, it is not a good idea to use overloaded methods in a COM
interface because this precludes use of the interface from languages like C
that do not support overloading.
<P>
<P><h2>CAUSE</h2>
 
<P>
All the overloads of a function are laid out together in successive entries
in the reverse order of their declaration, overall in the order of the
first overload of each name. Therefore given this declaration:
<P>
class A {
<PRE>   virtual void a();
   virtual void b();
   virtual void a(int);
   virtual void b(int);
</PRE>};
<P>
Entries in the vtable are laid out in this order: A::a(int), A::a(),
A::b(int), A::b(). The COM binary standard requires that functions be laid
out in the order in which they are declared.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is built into the design. It cannot be modified because of
legacy code that depends on this behavior.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.03 1.52 4.00 3.50 2.10<BR>
KBCategory: kbprg kbole kbprb<BR>
KBSubcategory: LeTwoArc<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 7, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
