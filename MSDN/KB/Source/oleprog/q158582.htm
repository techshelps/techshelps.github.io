

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Configure a Non-DCOM Server and Client to Use DCOM </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q158582">
<META NAME="KBModify" CONTENT="1996/11/06">
<META NAME="KBCreate" CONTENT="1996/10/31">
<META NAME="Keywords" CONTENT="kbole kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; oleprog">
<META NAME="Description" CONTENT="  COM server and client applications that were written before the introduction of DCOM can be configured to use DCOM by making appropriate changes to the server application's registry entries. The server and client applications do not need to be rewr...">
<META NAME="Product" CONTENT="OLE (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT="OLE ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWS,QARL,QBWG,QAG2,QA2Q,QAUJ,QAJH,QDL9,QBWO,QBWN,QDK6,QBWQ,QBVX,QBVV,QAB5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Configure a Non-DCOM Server and Client to Use DCOM</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 6, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q158582</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft COM/DCOM libraries included with:
   Microsoft Windows NT 4.0
   Microsoft Windows 95 with DCOM support
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
COM server and client applications that were written before the
introduction of DCOM can be configured to use DCOM by making appropriate
changes to the server application's registry entries. The server and client
applications do not need to be rewritten. This procedure can be applied to
any COM server and client, including those created using MFC or Visual
Basic.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The registry entries can be changed using the DCOMCNFG.EXE tool, the OLE
Viewer tool, or manually.
<P>
Before making the changes, register the server application in the registry
of the client machine and server machine. This may involve running the
server application's setup program or running the server application and
shutting it down on both machines. The server application does not need to
reside on the client machine. If the server uses custom interfaces, the
marshaling code must be installed on the client and server machines.
Automation servers that support vtbl-binding must install their type
libraries on the client and server machines. Automation servers that do not
support vtbl-binding do not need to install their type libraries on the
client machine.
<P>
After the registry changes have been made, run the client application on
the client machine. DCOM will look at the server application registry
entries on the client machine and will determine the name of the server
machine. It will then connect to the server machine, determine the location
of the server application from the registry entries on the server machine,
and launch the server application on that machine.
<P>
Note that DCOM is not supported for 16-bit applications. Also, see the last
section of this article for special instructions for DCOM on Windows 95.
<P>
<P><h3>Changing the Registry Using DCOMCNFG</h3>
 

<OL><P><LI>Launch the DCOMCNFG.EXE graphical utility (found in the Windows NT
   system32 directory) on the client machine. It will list all the
   registered servers. If you do not see the name of your server, it is
   probably listed by CLSID. (This is true for many Visual Basic servers
   because they do not put a name string as the default value of their
   CLSID key.) To determine the CLSID of your server, run the registry
   editor (regedit.exe). Open the HKEY_CLASSES_ROOT folder. All the ProgIDs
   (for example, 'MyServer.MyClass') of the registered servers will be
   listed in the left pane. Select the ProgID key of your server and open
   it. Then select the CLSID sub-key and open it. The CLSID value will be
   listed in the right pane.

<P><LI>If your server is listed by its CLSID and if you would like DCOMCNFG to
   list the name of the server instead, open the registry editor (after
   closing DCOMCNFG) and go down the list in the left pane until you reach
   the CLSID key. Open the CLSID key and find and open your server's CLSID.
   At the top of the right pane is a value preceded by "(Default)." Double-
   click on this prefix; a string editor will pop up. Enter the name of
   your server in this string editor and close the registry editor. Now
   when DCOMCNFG is run, it will list your server by name instead of CLSID.
   Do this on the server machine and the client machine.

<P><LI>Run DCOMCNFG on the client machine, select your server (by name or by
   CLSID) and select the Properties button. This will bring up a Properties
   dialog. Select the Location tab. Then select the "Run application on the
   following computer" checkbox and specify the name of the server machine.
   Clear the other checkboxes, and then press the Apply button.

<P><LI>Run DCOMCNFG on the server machine, select your server, and select the
   Properties dialog. Select the Security tab. You can choose to apply the
   default access and launch permissions to the server or you can choose to
   apply custom permissions. The default permissions can be changed using
   the Default Security tab in DCOMCNFG. Make sure that SYSTEM is in the
   Launch and Access permissions, and then add the account of the user on
   the client machine to the Launch and Access permissions. Press the Apply
   button. You are now ready to access the server from the client.
<P>
</OL><h3>Changing the Registry Using the OLE Viewer Tool</h3>
 
<P>
Get the latest version of the OLE Viewer tool from
<B><A HREF="http://www.microsoft.com/oledev/olecom/oleview.htm">http://www.microsoft.com/oledev/olecom/oleview.htm</A></B> on the World Wide
Web.

<OL><P><LI>Run the OLE Viewer tool on the client machine and select the
   View/ExpertMode menu. Double-click "All Objects" in the left pane and
   select your server. Select the "Implementation" tab in the right pane,
   select the LocalServer sub-tab. and clear the location of the server.
   Select the "Activation" tab and specify the name of the server machine.
   Close the OLE Viewer tool.

<P><LI>Run the OLE Viewer tool on the server machine and select the
   View/ExpertMode menu. Double-click "All Objects" in the left pane and
   select your server. Use the LaunchPermissions and AccessPermissions tabs
   in the right pane to set permissions for the server. You can choose to
   apply the default access and launch permissions or you can choose to
   apply custom permissions. The default permissions can be changed using
   the File/SystemConfiguration menu. Make sure that SYSTEM is in the
   Launch and Access permissions, and then add the account of the user on
   the client machine to the Launch and Access permissions. You are now
   ready to access the server from the client.
<P>
</OL><h3>Changing the Registry Manually</h3>
 
<P>
You can also make many of these modifications manually instead of using the
DCOMCNFG tool, as follows:

<OL><P><LI>Using the registry editor, modify the server application's registry
   entries on the client and the server machines. The following
   registration information uses the REGEDIT4 syntax where the key is
   specified in square brackets. The line after each key specifies a name
   and a value. The name is on the left of '=' and the value on the right.
<PRE>   '@' on the left indicates a value without a name. Replace the following
   GUIDs with your GUIDs. You can generate a new GUID for AppID (using
   uuidgen.exe), or use the same GUID as the CLSID. Replace hello.exe with
   your server's EXE name and replace 'Hello App' with a string that
   describes your server application:

   REGEDIT4
   ;;;; CLSID key
   [HKEY_CLASSES_ROOT\CLSID\{0bf52b11-8cab-11cf-8572-00aa00c006cf}]
   "AppID"="{0bf52b15-8cab-11cf-8572-00aa00c006cf}"

   ;;;; AppID key
   [HKEY_CLASSES_ROOT\APPID\{0bf52b15-8cab-11cf-8572-00aa00c006cf}]
   @="Hello App"

   [HKEY_CLASSES_ROOT\APPID\hello.exe]
   "APPID"="{0bf52b15-8cab-11cf-8572-00aa00c006cf}"

</PRE><P><LI>Remove any InprocServer32 and LocalServer32 keys from the server
   application's registry entries on the client machine. (These should not
   be removed on the server machine where the server application resides.)
   Add the following key to the server's registry entries on the client
   machine. Use the same GUID for the AppID as in the previous step.
   Replace server_machine_name with the name of the machine on which the
   server is located:
<P>
   [HKEY_CLASSES_ROOT\APPID\{0bf52b15-8cab-11cf-8572-00aa00c006cf}]
   "RemoteServerName"="server_machine_name"

<P><LI>On the server machine, use DCOMCNFG or the OLE View tool to specify
   access and launch permissions for the server application. See the
   sections in this article that describe these tools for more information
   about how to specify permissions.
<P>
</OL><h3>DCOM on Windows 95</h3>
 
<P>
DCOM for Windows 95 is in Beta at the time this article is being written.
At this time, DCOMCNFG is not available for Windows 95 and the registry
changes will have to made either by using the OLE Viewer tool or manually.
<P>
On Windows 95 with DCOM, there is an additional registry setting that
enables or disables incoming calls:
<P>
<PRE>   [HKEY_LOCAL_MACHINE\Software\Microsoft\OLE]
   "EnableRemoteConnections"="N"

</PRE></OL>By default, the EnableRemoteConnections named value is set to "N" and
incoming calls are disabled. To enable incoming calls, change this to "Y."
The OLE Viewer tool can be used to change this using its
File/SystemConfiguration menu. Note that this affects server applications
that run on Windows 95 machines and that it does not affect client
applications on these machines.
<P>
It is not possible to launch a process on a Windows 95 machine securely
from a client machine because all processes in Windows 95 run in the
security context of the currently logged-on user. Therefore, DCOM on
Windows 95 does not support remote activation. A server application on a
Windows 95 machine will have to be launched manually or by some other
mechanism to be accessed by a client application on another machine.
Consequently, the DefaultLaunchPermissions and LaunchPermissions registry
values have no affect on Windows 95.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 2.00 OLE COM DCOM OLE2 kbdss<BR>
KBCategory: kbole kbhowto<BR>
KBSubcategory: LeTwoArc
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 6, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
