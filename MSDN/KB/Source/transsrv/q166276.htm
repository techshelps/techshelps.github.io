

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Write an MTS Component Using ATL </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q166276">
<META NAME="KBModify" CONTENT="1997/06/25">
<META NAME="KBCreate" CONTENT="1997/04/02">
<META NAME="Keywords" CONTENT="TSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; transsrv">
<META NAME="Description" CONTENT="  This article describes how to write a Microsoft Transaction Server (MTS) component using the Active Template Library (ATL), which is included with Visual C++ version 5.0.  MORE INFORMATION  Follow these steps to create a simple MTS component:  Crea...">
<META NAME="Product" CONTENT="transsrv">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWS,QAPN,QBJZ,QA2Q,QAP2,QAG2,QAJG,QAUJ,QAW6,QAUD,QAB5,QAD7,QAJN,QBVV,QBBS V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Write an MTS Component Using ATL</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  June 25, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q166276</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Transaction Server, version 1.0
<LI>Microsoft Visual C++, 32-bit Editions, version 5.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to write a Microsoft Transaction Server (MTS)
component using the Active Template Library (ATL), which is included with
Visual C++ version 5.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Follow these steps to create a simple MTS component:
<P>
<P><h3>Create a New ATL Project</h3>
 

<OL><P><LI>Click New from the File menu.

<P><LI>Click the Projects tab, select the ATL COM AppWizard, and type in the
   Project name "MTSProj1" and Location. Click "Create a new workspace."
<P><PRE>    Click OK.
</PRE>
<P><LI>On the ATL COM AppWizard screen, select a Server Type of "Dynamic Link
   Library (DLL)" and click "Allow merging of proxy/stub code." Click
   Finish.

<P><LI>Confirm the new project information and click OK.
<P>
</OL><h3>Insert an MTS Component</h3>
 

<OL><P><LI>Click New ATL Object from the Insert menu.

<P><LI>In the ATL Object Wizard, select Objects in the left pane, then select
   MS Transaction Server in the right pane. Click Next.

<P><LI>Click the Names tab of the ATL Object Wizard Properties. Type in a C++
   Short Name of "MTSObj1." Do not click OK at this time.

<P><LI>Click the MTX tab and select a Dual Interface. As an option, you can
   also select "Support IObjectControl" and "Can be pooled," which tells
   the MTS run-time environment that your object should be returned to an
   instance pool after deactivation, rather than destroyed. This is,
   however, not required for a minimal component. Click OK to generate the
   component.
<P>
</OL><h3>Add a Method to Your Component</h3>
 

<OL><P><LI>If you do not currently have the project workspace displayed, click
   Workspace from the View menu.

<P><LI>Select the ClassView tab in the project workspace and expand the top
   level to see your class (CMTSObj1) and interface (IMTSObj1) names.
   Right-click on the interface name and select Add Method.

<P><LI>Type in the Method Name "Return5" and the Parameters "[out]long*" and
   click OK. You will not be able to change the Return Type from HRESULT
   because you are implementing a dual interface.
<P>
</OL><h3>Implement the Method</h3>
 

<OL><P><LI>Implement the CMTSObj1::Return5 method as follows:
<P>
<P><PRE>      STDMETHODIMP CMTSObj1::Return5 (long* number)
      {
<PRE></PRE>          *number = 5;
          return S_OK;
      }

</PRE></OL>You should now be able to build your project and add it to the MTS
Explorer.
 

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Keywords            : TSrvProg<BR>
Technology          : kbAtl kbInetDev<BR>
Version             : 1.0 5.0<BR>
Platform            : NT WINDOWS<BR>
Issue type          : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  June 25, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
