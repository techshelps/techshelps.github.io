

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Use ADO in an MTS ATL Component. </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q175383">
<META NAME="KBModify" CONTENT="1997/12/01">
<META NAME="KBCreate" CONTENT="1997/10/20">
<META NAME="Keywords" CONTENT="TSrvProg">
<META NAME="KBArea" CONTENT="Support; KB; transsrv">
<META NAME="Description" CONTENT="  This article explains how to create an Active Template Library (ATL) component which runs under Microsoft Transaction Server (MTS) and uses ActiveX Data Objects (ADO) to manipulate data from SQL Server.  MORE INFORMATION  To create an ATL component...">
<META NAME="Product" CONTENT="transsrv">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBWS,QAW6,QAUD,QBFY,QAUJ,QACI,QAYY,QDIZ,QBXS,QA9N,QAH4,QAHE,QABM,QBVX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Use ADO in an MTS ATL Component.</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 1, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q175383</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Transaction Server 1.0
<LI>Microsoft Visual C++, 32-bit Editions, version 5.0
<LI>ActiveX Data Objects (ADO), versions 1.0, 1.5
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article explains how to create an Active Template Library (ATL)
component which runs under Microsoft Transaction Server (MTS) and uses
ActiveX Data Objects (ADO) to manipulate data from SQL Server.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To create an ATL component which runs under MTS and uses ADO to access
SQL Server, do the following:

<OL><P><LI>Use the ATL COM AppWizard to create a new DLL.

<P><LI>Insert a new ATL COM object. Select the MTS type. Click the MTX tab,
   and then enable the following choices:
<P>
<P><PRE>    - Support IObjectControl
    - Can be Pooled
</PRE><P>
   For this example, name the object "ADOComponent."

<P><LI>In ClassView, right-click the object's interface and choose "Add
   Method." Type the method name, and in the Parameters field type:
<P>
<P><PRE>      [in, out] VARIANT * returnval
</PRE><P>
   In this specific example, this argument is not necessary except to
   demonstrate how you might return data to the client.

<P><LI>Use ClassView to open the .cpp file for your method. In this case, the
   file is named ADOComponent.cpp.

<P><LI>Ensure that the includes listed below are in the ADOComponent.cpp file.
<P>
<P><PRE>      #import "msado10.dll" no_namespace rename("EOF", "adoEOF" )
</PRE><P>
   If you plan to reference ADO Objects as arguments to a method that
   is declared in ADOComponent.h, you must move the #import directive
   to that header file.

<P><LI>On the Build menu, click "Set Active Configuration" and then choose
   the "Win32 Unicode Release MinSize" configuration.
<P>
   Other configurations will run. However, this configuration is ideal for
   MTS on Windows NT.

<P><LI>Under Project Settings, click the C/C++ tab and add the /GX flag to
   enable C++ exception handling. Also delete the following directive:
<P>
<P><PRE>      /D "_ATL_MIN_CRT"
</PRE><P>
   C++ exception handling is required by ATL smart pointers.

<P><LI>The ATL wizard inserted the following erroneous line into the Deactivate
   method:
<P>
<P><PRE>      m_spObjectContext-&gt;Release();
</PRE><P>
   Replace this code with the following line:
<P>
<P><PRE>      m_spObjectContext.Release();
</PRE>
<P><LI>Using ODBC administrator, create a DSN on your computer named PUBS.
<P>
   This DSN should point to the pubs database on a SQL Server.
   Alternatively, you could change the SQL text in the Open statement to
   process data from another database.
<P>
   You may want to make this a System DSN.

<P><LI>Insert the following code in your method and then compile:
<P>
<P><PRE>      _RecordsetPtr adoRs = NULL;
</PRE><P>
<P><PRE>      try
      {
<PRE></PRE>         _variant_t InVar;

         adoRs.CreateInstance(__uuidof(Recordset));
         adoRs-&gt;Open( "select au_fname from authors where "
                      "au_lname = 'White'",
                      "DSN=PUBS;UID=sa;PWD=;",
                      adOpenForwardOnly, adLockReadOnly, adCmdText );
         InVar = adoRs-&gt;Fields-&gt;GetItem("au_fname")-&gt;Value;
         VariantClear(returnval);
         VariantCopy(returnval, &amp;(InVar.Detach()));

         adoRs-&gt;Close();
      }
      catch(_com_error)
      {
         if(adoRs)
         {
            adoRs-&gt;Close();
            adoRs = NULL;
         }

         m_spObjectContext-&gt;SetAbort();
         return z.Error();
      }

      m_spObjectContext-&gt;SetComplete();

      return S_OK;

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For more information about Microsoft Transaction Server or ADO, please
consult the following web sites:
<P>
<PRE>   <B><A HREF="http://premium.microsoft.com/support/default.asp">http://premium.microsoft.com/support/default.asp</A></B>
   <B><A HREF="http://www.microsoft.com/transaction/">http://www.microsoft.com/transaction/</A></B>

   <B><A HREF="http://www.microsoft.com/data/ado/">http://www.microsoft.com/data/ado/</A></B>

</PRE>For more information about exception handling, including #import's
_com_error exception, please see the following article in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../VISUALC/Q167802.htm">Q167802</A></B>
   TITLE     : SAMPLE: EXCEPTEX Traps MFC and Win32 Structured Exceptions
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 1.00 1.50 5.00<BR>
Keywords          : TSrvProg<BR>
Version           : WINDOWS:1.0,1.5; WINNT:1.0,5.0<BR>
Platform          : WINDOWS winnt<BR>
Issue type        : kbhowto<BR>
Solution Type     : kbpending<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 1, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
