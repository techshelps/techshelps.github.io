

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Connecting to a Running Instance of Internet Explorer </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q176792">
<META NAME="KBModify" CONTENT="1998/02/06">
<META NAME="KBCreate" CONTENT="1997/11/14">
<META NAME="Keywords" CONTENT="InetSDKShellObjMod kbcode">
<META NAME="KBArea" CONTENT="Support; KB; ie_dev">
<META NAME="Description" CONTENT="  It is possible to connect to a running instance of Internet Explorer 4.0 (IE4) using the SHDocVw.ShellWindows collection.  MORE INFORMATION  Normally, an application connects to a running instance of another application using the Running Object tab...">
<META NAME="Product" CONTENT="Internet Explorer (Programming)">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QBV9,QAW6,QBIC,QBWS,QAI5,QAVZ,QBS0,QAHT,QBVR,QBWA,QBRJ,QAF3,QAJQ,QBVV V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Connecting to a Running Instance of Internet Explorer</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 6, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q176792</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Internet Explorer (Programming), versions 4.0, 4.01
<LI>Internet Client SDK, version 4.0, 4.01
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
It is possible to connect to a running instance of Internet Explorer 4.0
(IE4) using the SHDocVw.ShellWindows collection.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Normally, an application connects to a running instance of another
application using the Running Object table. Because Internet Explorer 4.0
does not register itself in the running object table, another method is
necessary.
<P>
The ShellWindows collection is described in the Internet Client SDK as
follows: The ShellWindows object represents a collection of the open
windows that belong to the shell. In fact, this collection contains
references to Internet Explorer as well as other windows belonging to the
shell, such as the Windows Explorer.
<P>
The following Visual Basic code obtains a reference to the ShellWindows
collection.
The collection is enumerated and the LocationName for each object added to
a list box. If the document associated with the object is of type
HTMLDocument (a Web Page), the title for the page is added to another list
box.
<P>
In order to run the following code, it is necessary to add a reference to
Shdocvw.dll and Mshtml.dll to the Visual Basic project:
<P>
<PRE>   Dim SWs As New SHDocVw.ShellWindows
   Dim IE As SHDocVw.InternetExplorer

   Private Sub Form_Load()
      Dim Doc
      List1.Clear
      List2.Clear

      Text1.Text = SWs.count

      For Each IE In SWs
         List1.AddItem IE.LocationName

         Set Doc = IE.Document
         If TypeOf Doc Is HTMLDocument Then
            'if this is an HTML page, display the title
            'may or may not be the same as LocationName
            List2.AddItem Doc.Title
         End If
      Next
   End Sub

</PRE>In C++, a connection can be accomplished in roughly the same way. Visual
C++ Native Com Support is used here for the sake of brevity.
<P>
Add references to Shdocvw.dll and Mshtml.dll to the project:
<P>
<PRE>   #import "mshtml.dll"
   #import "shdocvw.dll" exclude("tagREADYSTATE")

</PRE>Declare an instance of an IShellWindows pointer:
<P>
<PRE>   SHDocVw::IShellWindowsPtr m_spSHWinds;

</PRE>Create an instance of a ShellWindows object:
<P>
<PRE>   m_spSHWinds.CreateInstance(__uuidof(SHDocVw::ShellWindows));

</PRE>Use the ShellWindows object:
<P>
<PRE>   void CConnectIEView::OnInitialUpdate()
   {
      CFormView::OnInitialUpdate();

      ASSERT(m_spSHWinds != NULL);

      CString strCount;
      long nCount = m_spSHWinds-&gt;GetCount();

      strCount.Format("%i", nCount);
      m_strWinCount = strCount;

      UpdateData(FALSE);

      IDispatchPtr spDisp;
      for (long i = 0; i &lt; nCount; i++)
      {
         _variant_t va(i, VT_I4);
         spDisp = m_spSHWinds-&gt;Item(va);

         SHDocVw::IWebBrowser2Ptr spBrowser(spDisp);
         if (spBrowser != NULL)
         {
            m_ctlListLoc.AddString(spBrowser-&gt;GetLocationName());

            MSHTML::IHTMLDocument2Ptr spDoc(spBrowser-&gt;GetDocument());
            if (spDoc != NULL)
            {
                m_ctlListTitle.AddString(spDoc-&gt;Gettitle());
            }
         }
      }
   }

</PRE>The previous method for connecting to a running instance of the Internet
Explorer does not work if Shell Integration is not installed or if "Browse
in a new process" is selected in Internet Explorer 4.0.
<P>
If these factors cannot be controlled, there is still one possible method
that may work. A browser helper object can be written to register Internet
Explorer 4.0 in the running object table (ROT). There are many
implementations possible here depending on how the application is to
determine the instance of Internet Explorer with which to connect. This is
just one possible solution: The browser helper object, having access to the
object model of the instance of Explorer that launched it, would determine
if this is the instance of the browser that should be registered in the
running object table.
<P>
The interface that the consumer is interested in can be registered in the
ROT with the RegisterActiveObject function and a dummy CLSID that the
consumer will recognize. Another solution, that would allow multiple
instances of the explorer to be registered in the ROT, would be to have the
Browser Helper object compose an Item moniker based on a GUID and piece of
data unique to each instance of Internet Explorer. The moniker would be
registered in the ROT with the IRunningObjectTable::Register method. Again,
the consumer would have to know how recognize this moniker.
<P>
<P><h2>REFERENCES</h2>
 
<P>
The Internet Client SDK; search on Internet Tools and Technologies -
Windows Shell API
<P>
For additional information, please see the following article(s) in the
Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../IE_DEV/Q179230.htm">Q179230</A></B>
   TITLE : FILE: IEHelper-Attaching to IE4 using a Browser Helper Object

</PRE>(c) Microsoft Corporation 1997, All Rights Reserved. Contributions by
Robert Duke, Microsoft Corporation
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: helper connect<BR>
Keywords          : InetSDKShellObjMod kbcode<BR>
Technology        : kbInetDev kbole<BR>
Version           : WINDOWS:4.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 6, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
