

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generating SQL Scripts for SMS Views </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133253">
<META NAME="KBModify" CONTENT="1997/04/23">
<META NAME="KBCreate" CONTENT="1995/07/26">
<META NAME="Keywords" CONTENT="kbnetwork ntconfig nthowto smsdatabase">
<META NAME="KBArea" CONTENT="Support; KB; sms">
<META NAME="Description" CONTENT="  SMSVIEW creates various views that can be used when querying the Systems Management Server SQL Database. The SQL Scripts used to create these views can be dumped using Microsoft SQL Enterprise Manager (in Microsoft SQL Server 6.0).  MORE INFORMATIO...">
<META NAME="Product" CONTENT="Systems Management Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QADK,QA2Q,QAY2,QAG2,QAS1,QABM,QBWS,QBWT,QAW6,QAPN,QA9N,QA4H,QAHD,QACI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Generating SQL Scripts for SMS Views</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 23, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133253</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft Systems Management Server version 1.1 and 1.2
<LI>Microsoft SQL Server version 6.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
SMSVIEW creates various views that can be used when querying the Systems
Management Server SQL Database. The SQL Scripts used to create these views
can be dumped using Microsoft SQL Enterprise Manager (in Microsoft SQL
Server 6.0).
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To generate the SQL scripts to create the SMS views:

<OL><P><LI>Start SQL Enterprise Manager.

<P><LI>If the server where the Systems Management Server database resides is
   not already registered in SQL Enterprise Manager, register it as
   follows:
<P>
   a. Select Register Server from the Server menu.
<P>
   b. Provide the server name and valid logon information (by default,
<P><PRE>      the valid logon is SA with no password and Standard Security).
</PRE><P>
   c. Choose Register.

<P><LI>In the Server Manager window, select the server you just registered
   (there may be a slight delay as a connection to this server is
   established).

<P><LI>Choose + in the following order:
<P>
   a. The Server's name in the Server Manager window.
<P>
   b. Databases to get to the Systems Management Server database.
<P>
   c. The database that contains the Systems Management Server data.
<P>
   The name of the SMS database in the Server Manager window should be
   selected.

<P><LI>Select Generate SQL Scripts from the Object menu.

<P><LI>In the Generate SQL Scripts - &lt;servername&gt;\&lt;database name&gt; dialog box,
   choose All Views for Scripting Objects. This fills in the name of each
   view in the list box at the bottom right portion of the dialog box.

<P><LI>Ensure Object Creation and Object Drop are selected for Scripting
   Options.

<P><LI>If you prefer scripts for each view to be placed in a separate file,
   select Per Object in Scripting Options. Otherwise, select Single File.

<P><LI>Choose Preview (there is a short wait as the scripts are generated).
   Save the scripts as text files or choose Close to go back to the
   Generate SQL Scripts dialog box without saving the scripts).
<P>
</OL>The following displays the resulting output (in Systems Management Server
1.1, Build 682):
<P>
<PRE>/****** Object:  View dbo.vDisk    Script Date: 7/5/95 4:30:43 AM ******/
</PRE></OL>if exists (select * from sysobjects where id = object_id('dbo.vDisk') and
<P>
sysstat &amp; 0xf = 2)
drop view dbo.vDisk
<P>
GO
<P>
Create View vDisk as select dwMachineID , Disk_SPEC.__Disk_Full0 ,
Disk_COMM.Disk_Index0 , Disk_COMM.File_System0 ,
Disk_SPEC.Free_Storage__MByte_0 , Disk_SPEC.Sectors0 ,
Disk_SPEC.Serial_Number0 , Disk_SPEC.Storage_Size__MByte_0 ,
Disk_COMM.Storage_Type0 , Disk_SPEC.Storage_Used__MByte_0 ,
<PRE>Disk_SPEC.Volume_Name0 from  MachineDataTable  ,Disk_COMM   , Disk_SPEC
</PRE>where Disk_COMM.datakey =*  CommonKey and Disk_SPEC.datakey =* SpecificKey
and ArchitectureKey = 5 and GroupKey = 8
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vEnvironment    Script Date: 7/5/95 4:30:43 AM
</PRE>******/
if exists (select * from sysobjects where id =
object_id('dbo.vEnvironment')
<P>
and sysstat &amp; 0xf = 2)
drop view dbo.vEnvironment
<P>
GO
<P>
Create View vEnvironment as select dwMachineID ,
Environment_SPEC.Environment_String0 , Environment_SPEC.Value0 from
<PRE>MachineDataTable  ,Environment_COMM   , Environment_SPEC where
</PRE>Environment_COMM.datakey =*  CommonKey and Environment_SPEC.datakey =*
SpecificKey and ArchitectureKey = 5 and GroupKey = 12
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vGroupNames    Script Date: 7/5/95 4:30:44 AM
</PRE>******/
if exists (select * from sysobjects where id = object_id('dbo.vGroupNames')
and sysstat &amp; 0xf = 2)
drop view dbo.vGroupNames
<P>
GO
<P>
<PRE>Create View vGroupNames as select  GM.GroupName   FROM ArchitectureMap AM,
</PRE>GroupMap GM  WHERE  GM.ArchitectureKey = AM.ArchitectureKey AND
((AM.Mode=0))
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vIdentification    Script Date: 7/5/95 4:30:44 AM
</PRE>******/
if exists (select * from sysobjects where id =
object_id('dbo.vIdentification') and sysstat &amp; 0xf = 2)
drop view dbo.vIdentification
<P>
GO
<P>
Create View vIdentification as select dwMachineID ,
Identification_SPEC.Domain0 , Identification_SPEC.LogOn_Name0 ,
Identification_SPEC.Name0 , Identification_SPEC.NetCardID0 ,
Identification_SPEC.Site0 , Identification_SPEC.SMSID0 ,
Identification_SPEC.SMSLocation0 , Identification_SPEC.SystemRole0 ,
Identification_SPEC.SystemType0 from  MachineDataTable
,Identification_COMM
<P>
, Identification_SPEC where Identification_COMM.datakey =*  CommonKey and
Identification_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and
GroupKey = 1
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vMouse    Script Date: 7/5/95 4:30:44 AM ******/
</PRE>if exists (select * from sysobjects where id = object_id('dbo.vMouse') and
sysstat &amp; 0xf = 2)
drop view dbo.vMouse
<P>
GO
<P>
Create View vMouse as select dwMachineID , Mouse_COMM.Hardware_Installed0 ,
Mouse_COMM.Language0 , Mouse_COMM.Manufacturer0 ,
Mouse_COMM.Mouse_Hardware_Type0 , Mouse_COMM.Number_of_Buttons0 from
<PRE>MachineDataTable  ,Mouse_COMM   , Mouse_SPEC where Mouse_COMM.datakey =*
</PRE>CommonKey and Mouse_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and
GroupKey = 4
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vNetcard    Script Date: 7/5/95 4:30:45 AM
</PRE>******/
<P>
if exists (select * from sysobjects where id = object_id('dbo.vNetcard')
and
<P>
<P>
sysstat &amp; 0xf = 2) drop view dbo.vNetcard
<P>
GO
<P>
Create View vNetcard as select dwMachineID , Netcard_SPEC.IRQ0 ,
Netcard_COMM.Manufacturer0 , Netcard_SPEC.Port_Address0 from
<PRE>MachineDataTable  ,Netcard_COMM   , Netcard_SPEC where Netcard_COMM.datakey
</PRE>=*  CommonKey and Netcard_SPEC.datakey =* SpecificKey and ArchitectureKey =
5 and GroupKey = 11
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vNetwork    Script Date: 7/5/95 4:30:45 AM
</PRE>******/
<P>
if exists (select * from sysobjects where id = object_id('dbo.vNetwork')
and
<P>
<P>
sysstat &amp; 0xf = 2) drop view dbo.vNetwork
<P>
GO
<P>
Create View vNetwork as select dwMachineID , Network_COMM.Default_Gateway0
,
<P>
Network_SPEC.IP_Address0 , Network_SPEC.IPX_Address0 ,
Network_COMM.LogOn_Name0 , Network_COMM.Major_Version0 ,
Network_COMM.Minor_Version0 , Network_SPEC.Network_Active0 ,
Network_COMM.Network_Type0 , Network_COMM.Subnet_Mask0 from
<PRE>MachineDataTable  ,Network_COMM   , Network_SPEC where Network_COMM.datakey
</PRE>=*  CommonKey and Network_SPEC.datakey =* SpecificKey and ArchitectureKey =
5 and GroupKey = 10
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vOperating_System    Script Date: 7/5/95 4:30:45
</PRE>AM ******/
if exists (select * from sysobjects where id =
<P>
object_id('dbo.vOperating_System') and sysstat &amp; 0xf = 2)
drop view dbo.vOperating_System
<P>
GO
<P>
Create View vOperating_System as select dwMachineID ,
<P>
Operating_System_COMM.Build_Number0 , Operating_System_COMM.Build_Type0 ,
Operating_System_COMM.Country_Code0 ,
Operating_System_SPEC.Installation_Date0 ,
Operating_System_COMM.Language_ID0 ,
Operating_System_COMM.Operating_System_Name0 ,
Operating_System_COMM.Registered_Organization0 ,
Operating_System_SPEC.Registered_Owner0 ,
Operating_System_SPEC.System_Root0
<P>
, Operating_System_SPEC.System_Start_Options0 ,
Operating_System_COMM.Version0 from  MachineDataTable
<PRE>,Operating_System_COMM   , Operating_System_SPEC where
</PRE>Operating_System_COMM.datakey =*  CommonKey and
Operating_System_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and
GroupKey = 7
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vPC_Memory    Script Date: 7/5/95 4:30:46 AM
</PRE>******/
if exists (select * from sysobjects where id = object_id('dbo.vPC_Memory')
and sysstat &amp; 0xf = 2)
drop view dbo.vPC_Memory
<P>
GO
<P>
Create View vPC_Memory as select dwMachineID ,
PC_Memory_SPEC.Page_File_Name0 , PC_Memory_SPEC.Page_File_Size__MByte_0 ,
PC_Memory_SPEC.Total_Paging_File_Space__0 ,
PC_Memory_SPEC.Total_Physical_Memory__KB0 from  MachineDataTable
<PRE>,PC_Memory_COMM   , PC_Memory_SPEC where PC_Memory_COMM.datakey =*
</PRE>CommonKey and PC_Memory_SPEC.datakey =* SpecificKey and ArchitectureKey = 5
and GroupKey = 9
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vProcessor    Script Date: 7/5/95 4:30:46 AM
</PRE>******/
if exists (select * from sysobjects where id = object_id('dbo.vProcessor')
and sysstat &amp; 0xf = 2)
drop view dbo.vProcessor
<P>
GO
<P>
Create View vProcessor as select dwMachineID ,
Processor_COMM.Processor_Name0 , Processor_COMM.Processor_Type0 ,
<PRE>Processor_COMM.Quantity0 from  MachineDataTable  ,Processor_COMM   ,
</PRE>Processor_SPEC where Processor_COMM.datakey =*  CommonKey and
Processor_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and
GroupKey = 6
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vServices    Script Date: 7/5/95 4:30:46 AM
</PRE>******/
if exists (select * from sysobjects where id = object_id('dbo.vServices')
and sysstat &amp; 0xf = 2)
drop view dbo.vServices
<P>
GO
<P>
Create View vServices as select dwMachineID , Services_SPEC.EXE_Path0 ,
Services_COMM.Name0 , Services_SPEC.Start_Name0 , Services_COMM.Start_Type0
<PRE>, Services_COMM.State0 from  MachineDataTable  ,Services_COMM   ,
</PRE>Services_SPEC where Services_COMM.datakey =*  CommonKey and
Services_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and
GroupKey = 13
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vVideo    Script Date: 7/5/95 4:30:47 AM ******/
</PRE>if exists (select * from sysobjects where id = object_id('dbo.vVideo') and
<P>
sysstat &amp; 0xf = 2)
drop view dbo.vVideo
<P>
GO
<P>
Create View vVideo as select dwMachineID , Video_COMM._nd_Adapter_Type0 ,
Video_COMM.Adapter_Type0 , Video_SPEC.Bios_Date0 ,
Video_COMM.Current_Video_Mode0 , Video_COMM.Display_Type0 ,
Video_COMM.Manufacturer0 , Video_COMM.Max_Rows0 from  MachineDataTable
<PRE>,Video_COMM   , Video_SPEC where Video_COMM.datakey =*  CommonKey and
</PRE>Video_SPEC.datakey =* SpecificKey and ArchitectureKey = 5 and GroupKey = 5
<P>
GO
<P>
<PRE>/****** Object:  View dbo.vWorkstationStatus    Script Date: 7/5/95 4:30:47
</PRE>AM ******/
if exists (select * from sysobjects where id =
object_id('dbo.vWorkstationStatus') and sysstat &amp; 0xf = 2)
drop view dbo.vWorkstationStatus
<P>
GO
<P>
Create View vWorkstationStatus as select dwMachineID ,
WorkstationStatus.Failed_Hardware_Checks0 ,
WorkstationStatus.Files_Not_Installed0 , WorkstationStatus.LastHWScan ,
WorkstationStatus.LastSWScan , WorkstationStatus.Standalone_Workstation0 ,
WorkstationStatus.System_Files_Not_Modified0 from  MachineDataTable  ,
WorkstationStatus where WorkstationStatus.datakey =* SpecificKey and
ArchitectureKey = 5 and GroupKey = 2
<P>
GO
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodsms<BR>
Keywords            : kbnetwork ntconfig nthowto smsdatabase<BR>
Version             : 1.1 1.2<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 23, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
