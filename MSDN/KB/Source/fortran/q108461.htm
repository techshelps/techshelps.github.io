

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: DO Loop/Computed GOTO Errors with /Ox and /4Yb </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q108461">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/12/12">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  DO loops may not function properly when compiled with both optimization for time (/Ox) and extended error handling (/4Yb or $DEBUG). A similar problem exists using computed GOTO statements.  RESOLUTION  Do not compile with /Ox and /4Yb at the same ...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWP,QAJZ,QAMB,QAC2,QA8T,QAR4,QAA7,QAM1,QAKP,QAE5,QAB4,QAAP,QAH4,QAI4,QDOL V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: DO Loop/Computed GOTO Errors with /Ox and /4Yb</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q108461</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
WINDOWS NT
kbtool kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
DO loops may not function properly when compiled with both optimization for
time (/Ox) and extended error handling (/4Yb or $DEBUG). A similar problem
exists using computed GOTO statements.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Do not compile with /Ox and /4Yb at the same time. Use the Visual Workbench
debugger to track down run-time errors that occur when using /Ox.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft FORTRAN
PowerStation 32 for Windows NT, version 1.0. This problem was fixed in
FORTRAN PowerStation, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code illustrates the DO loop problem when compiling with /Ox
and /4Yb:
<P>
<P><h3>Sample Code #1</h3>
 
<P>
c FORTRAN Compile options needed: /Ox /4Yb
<PRE>      ieof = 0
      DO i = 1, 4
        IF ( i .EQ. 4 )  ieof = 999
        i1 = i + 1
        WRITE (*,1000) i, i1, ieof
      ENDDO
</PRE>1000  FORMAT (3i6)
<PRE>      END

</PRE><h3>Output</h3>
 
<P>
Expected results:
<P>
<PRE>   1     2     0
   2     3     0
   3     4     0
   4     5   999

</PRE>Results with -Ox -4Yb:
<P>
<PRE>   1     2     0
   1     2     0
   2     3     0
   3     4     0

</PRE>The sample program below executes in an infinite loop when compiling with
/Ox and /4Yb:
<P>
<P><h3>Sample Code #2</h3>
 
<P>
c FORTRAN Compile options needed: /Ox /4Yb
<PRE>      J = 0
    1 CONTINUE
      WRITE(*,*) 'Label 1'
      WRITE(*,*) 'J = ', J

      J = J + 1
      IF (J.EQ.2) THEN
     K = 1
      ELSE
     K = 1
      ENDIF

      WRITE(*,*) 'J = ', J
      GOTO(1,2), J        ! Computed GOTO always branches to label 1

    2 CONTINUE
      WRITE(*,*) 'Label 2'
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: FL32Iss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
