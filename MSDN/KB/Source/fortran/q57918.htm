

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Floating-Point Exceptions in FORTRAN </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q57918 ">
<META NAME="KBModify" CONTENT="1995/12/11">
<META NAME="KBCreate" CONTENT="1990/01/22">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  The IEEE floating point standard defines the following five exceptions: invalid operation, divide by zero, overflow, underflow, and precision. The Microsoft FORTRAN run-time libraries provide the following three routines to obtain and modify the va...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKD,QAY5,QAJQ,QA7O,QAUD,QAOE,QAMN,QAB5,QAH4,QBV8,QBE7,QBE6,QBBI,QAB9,QAP3 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Handling Floating-Point Exceptions in FORTRAN</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q57918 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 3.3, 3.31, 4.0, 4.01, 4.1,
   5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN PowerStation 1.0, 1.0a for MS-DOS.
<LI>Microsoft FORTRAN PowerStation 32, versions 1.0 and 4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The IEEE floating point standard defines the following five exceptions:
invalid operation, divide by zero, overflow, underflow, and precision. The
Microsoft FORTRAN run-time libraries provide the following three routines
to obtain and modify the value of the status and control words:

<UL><LI>The store-status-word (SSWRQQ) function returns the value of the
   status word.

<LI>The store-control-word (SCWRQQ) function returns the value of the
   control word.

<LI>The load-control-word (LCWRQQ) function sets the control word to a
   specified value.
<P>
</UL>An application can specify the manner to handle an exception by changing
the control word and can determine which exceptions have occurred by
checking the value of the status word.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates using the LCWRQQ function to
disable the overflow and divide by zero exceptions and their corresponding
run-time errors.
<P>
<P><h3>Sample Code</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTERFACE TO SUBROUTINE LCWRQQ(CW)
      INTEGER*2 CW
      END

      PROGRAM NOEXCEPTIONS

      INTEGER*2 CW
      PARAMETER(CW = 16#133F)
      REAL*4 X, Y, Z

      X = 1.0
      Y = 0.0

      CALL LCWRQQ(CW)

      Z = X / Y

      END

</PRE>NOTE: In FORTRAN PowerStation, GETSTATUSFPQQ is equivalent to SSWRQQ,
GETCONTROLFPQQ is equivalent to SCWRQQ, and SETCONTROLFPQQ is equivalent to
LCWRQQ.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 3.30 4.00 4.10 5.00 5.10<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
