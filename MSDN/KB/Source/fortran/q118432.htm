

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Block-Data Subprograms Are Not Global Symbols </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118432">
<META NAME="KBModify" CONTENT="1995/07/13">
<META NAME="KBCreate" CONTENT="1994/07/18">
<META NAME="Keywords" CONTENT="kbtool kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When an object module containing only a block-data subprogram is placed in a library and that library is used to link to an executable file, the block-data subprogram is not linked to the executable file: no data initialization is performed.  Accor...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBHQ,QBFY,QBWP,QAGI,QDKW,QAOX,QAWM,QAYY,QBVV,QBE7,QBE6,QA7H,QAY2,QASR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Block-Data Subprograms Are Not Global Symbols</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 13, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118432</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS, versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When an object module containing only a block-data subprogram is placed
in a library and that library is used to link to an executable file, the
block-data subprogram is not linked to the executable file: no data
initialization is performed.
<P>
According to the ANSI specification for FORTRAN 77, it is possible for a
program to include a block-data module by making an external reference to
the block-data subprogram.
<P>
<P><h2>CAUSE</h2>
 
<P>
The linker links modules from a library only when the modules each contain
a global symbol that matches an external reference to a procedure. Because
a block-data module contains no global procedure names, the linker cannot
be made to link the block-data module to the executable file.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
In order to work around the problem, do one of the following:

<UL><LI>Place the block-data subprogram definition in the same module as a non-
   block-data subprogram definition. When an external reference is made to
   the non-block-data subprogram, the entire module (including the block-
   data subprogram) is then linked to the executable file.
<P>
   -or-

<LI>Do not put the block data module into a library; instead, link the
   block-data module explicitly.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the FORTRAN PowerStation for MS-
DOS, versions 1.0 and 1.0a, and the FORTRAN PowerStation 32 for Windows NT,
version 1.0. We are researching this problem and will post new information
here in the Microsoft Knowledge Base as it becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To demonstrate the problem and both workarounds, perform the following
steps:

<OL><P><LI>Create a static library from "Sample Code 2," below.

<P><LI>Build a program using "Sample Code 1," below, and the library you built
   in step 1. The build fails with an unresolved external error for
   "block_data".

<P><LI>Create a second static library from "Sample Code 3," below (workaround
   number 1)

<P><LI>Build a program using "Sample Code 1" and the library you built in
   step 3. When run, this program correctly prints "3.1415".

<P><LI>In "Sample Code 1," comment out the line containing the call to
   "block_data".

<P><LI>Build a program using the new "Sample Code 1" and the library you built
   in step 1. When run, this program incorrectly prints "0.00000".

<P><LI>Build a program using the new "Sample Code 1" and the object module from
   "Sample Code 2" (workaround number 2). When run, this program correctly
   prints "3.1415".
<P>
</OL><h3>Sample Code 1</h3>
 
<P>
c compile options needed: none
<P>
<PRE>      common /block_com/ y
      print *,y
</PRE></OL>C The following statement causes an external reference to "block_data",
C even though the call will never be made. A block-data subprogram will
C automatically execute before the first statement in a program if it is
C in the executable file.
<PRE>      if (.false.) call block_data()
      end

</PRE><h3>Sample Code 2</h3>
 
<P>
c compile options needed: none
<P>
<PRE>      block data block_data
      common /block_com/ x
      data x /3.1415/
      end

</PRE><h3>Sample Code 3</h3>
 
<P>
c compile options needed: none
<P>
<PRE>      subroutine block_data()
      end

      block data block_data2
      common /block_com/ x
      data x /3.1415/
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.00a<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: FL32Iss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 13, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
