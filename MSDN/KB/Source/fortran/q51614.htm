

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Access FORTRAN COMMON Block Contents From C++ </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q51614 ">
<META NAME="KBModify" CONTENT="1997/08/26">
<META NAME="KBCreate" CONTENT="1989/12/05">
<META NAME="Keywords" CONTENT="FORTLngIss kb16bitonly">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An application developed in Microsoft FORTRAN can store data in a COMMON block of memory that has the Microsoft C equivalent of a public structure. An application developed in C can access a FORTRAN COMMON block as an  extern public  structure. The...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAVW,QAVX,QAH4,QAHC,QAR4,QAA8,QAUJ,QAGI,QBW7,QAI5,QA1S,QAOX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Access FORTRAN COMMON Block Contents From C++</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  August 26, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q51614 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.01, 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN PowerStation for MS-DOS, versions 1.0, 1.0a
<LI>Microsoft C/C++ version 7.0
<LI>Microsoft Visual C++ for Windows, versions 1.0, 1.5, 1.51
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
An application developed in Microsoft FORTRAN can store data in a COMMON
block of memory that has the Microsoft C equivalent of a public structure.
An application developed in C can access a FORTRAN COMMON block as an
"extern public" structure. The only public symbols in FORTRAN are the names
of COMMON blocks and of subprograms. Because FORTRAN does not have a syntax
to declare an external COMMON block, FORTRAN code always creates the memory
locations for data in a mixed-language programming environment.
<P>
The most critical aspect to accessing a COMMON block from C code is using
the correct naming convention. In C, all public names must have a leading
underscore (_) character; FORTRAN code must declare the underscore
explicitly. C and FORTRAN each expect public names to contain only
uppercase letters. To enforce the correct naming convention, either use the
_fortran attribute on the "extern struct" declaration in the C code or use
the [C] attribute on the COMMON block name in the FORTRAN code.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following project demonstrates using a FORTRAN COMMON block in an
application developed in C. The project uses the _fortran keyword to allow
the C code to generate the correct name for the COMMON block. Even though
the design of the makefile assumes Microsoft FORTRAN version 5.1 and
Microsoft C/C++ version 7.0, the information is generally correct for
other versions of these compilers. This project creates a driver program,
a FORTRAN subprogram that defines a COMMON block, and a C program that
accesses the data in the COMMON block. The driver program is written in
FORTRAN, it could have as easily been written in C.
<P>
A critical switch used in the C compile line is /Gx-. If this switch is not
used, you will not be able to access the common block, unless you use
"_far" in the extern declaration, in CFUNC.C as follows:
<P>
<PRE>    extern struct comstruct _fortran _far TEST;

</PRE><h3>Sample Code #1: FORMAIN.FOR</h3>
 
<P>
<PRE>   C Main driver program
   C Compiler options required: None

         PROGRAM COMMONTEST
         CALL FORSUB
         END

</PRE><h3>Sample Code #2: FORSUB.FOR</h3>
 
<P>
<PRE>   C A FORTRAN subroutine with a COMMON block
   C Compiler options required: None

         SUBROUTINE FORSUB
         COMMON /TEST/ A, B, C
         REAL A
         INTEGER B
         CHARACTER*1 C

         A = 1.
         B = 2
         C = 'F'
         CALL CFUNC
         PRINT*
         PRINT*, 'IN FORSUB FOLLOWING CALL TO CFUNC'
         PRINT*, 'A IS ', A, '           B IS ', B, '           C IS ', C
         RETURN
         END

</PRE><h3>Sample Code #3: CFUNC.C</h3>
 
<P>
<PRE>   /*
    * Compiler options needed: None
    */

   // A C function that uses data in the FORTRAN COMMON block

   #include &lt;stdio.h&gt;

   struct comstruct
   {
      float A;
      long  B;
      char  C;
   };

   extern struct comstruct _fortran TEST;

   void _fortran cfunc(void)
   {
      printf("In cfunc\n");
      printf("a is %f, b is %ld, c is %c\n", TEST.A, TEST.B, TEST.C);
      TEST.A = TEST.A + 1.;
      TEST.B = TEST.B + 1;
      TEST.C = 'C';
   }

</PRE><h3>Sample Code #4: MAKEFILE</h3>
 
<P>
<PRE>   all: test.exe

   formain.obj: formain.for
      fl /c /AL /Od /Zi formain.for

   forsub.obj: forsub.for
      fl /c /AL /Od /Zi forsub.for

   cfunc.obj: cfunc.c
      cl /c /AL /Od /Zi /Gx- cfunc.c

   test.exe: formain.obj forsub.obj cfunc.obj
      link formain forsub cfunc, test, nul, /nod /noe /co \
         llibc7 llibf7rc oldnames;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: fail<BR>
Keywords          : FORTLngIss kb16bitonly<BR>
Version           : MS-DOS:4.0,4.01,4.1,5.0,5.1,1.0,1.00a; OS/2:4.1,5.0,5.1<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  August 26, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
