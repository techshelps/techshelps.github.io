

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Bad Results Displayed by CodeView for Huge COMMON Blocks </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q71554 ">
<META NAME="KBModify" CONTENT="1995/07/06">
<META NAME="KBCreate" CONTENT="1991/04/25">
<META NAME="Keywords" CONTENT="kbtool kbcode kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Microsoft CodeView versions 2.30, 3.00, and 3.11 erroneously calculate the addresses of variables in FORTRAN COMMON blocks when these variables are preceded in the COMMON block by 65,535 or more bytes of data. The segment values of the addresses of...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAHC,QAJQ,QAYL,QAC2,QAYY,QAA8,QAAP,QAR5,QBVV,QALG,QANY,QAKP,QBWD,QAL3,QAKD V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Bad Results Displayed by CodeView for Huge COMMON Blocks</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 6, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q71554 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft CodeView for MS-DOS, versions 2.3, 3.0, and 3.11
<LI>Microsoft CodeView for OS/2, versions 2.3, 3.0, and 3.11
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Microsoft CodeView versions 2.30, 3.00, and 3.11 erroneously calculate
the addresses of variables in FORTRAN COMMON blocks when these
variables are preceded in the COMMON block by 65,535 or more bytes of
data. The segment values of the addresses of these variables are
calculated incorrectly, generating incorrect results for any CodeView
function that uses symbolic names to display information. In
particular, watch-expressions will show incorrect values for the
contents of these variables.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
If viewing a specific data item is necessary, it should be moved to
the beginning of the COMMON block or placed in a separate COMMON
block. If this is not possible, the LOCFAR intrinsic function can be
used with FORTRAN versions 4.0, 4.01, 4.1, and 5.0 to print out the
correct memory address of the data item, which can then be used with a
CodeView dump command, a watchpoint, or a breakpoint to view the
required information.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in CodeView versions 2.3, 3.0, and
3.11 for MS-DOS and OS/2.
<P>
This is not an issue with FORTRAN PowerStation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following program example illustrates the problem:
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>      parameter(n=65535)               ! 64K less one byte

      integer*1 arr1, arr2

      common /test/ arr1(n), arr2(10)

      arr1(1) = 1
      arr2(1) = 2

      write(*,'(a,z)') ' locfar(arr1) = ',locfar(arr1)
      write(*,'(a,z)') ' locfar(arr2) = ',locfar(arr2)

      end

</PRE>When running the above program under CodeView, the addresses displayed
for arr1 and arr2 are identical. This is because the offsets are
correctly calculated as zero, but the segment of arr2 is incorrectly
calculated as being the same as the segment of arr1. Consequently,
watch-expressions for the two variables display identical values.
<P>
Within CodeView, the offset of a variable preceded by 65,535 bytes in
a COMMON block is always correctly determined, but the segment address
is not. In the example above, if arr1 is increased in size, the memory
locations of the two arrays are no longer mapped directly on top of
each other by CodeView because the offsets will no longer be
identical.
<P>
CodeView does not appear to have a general problem with huge data
items or items in COMMON blocks. The problem only occurs with data
items in COMMON blocks when the starting address of the data item
begins on or beyond the boundary of the second segment of the COMMON
block. If a huge (greater than 64K bytes) data item has a starting
address in the first segment of the COMMON block, all the elements of
that data item are correctly displayed by CodeView.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 2.30 3.00 3.11<BR>
KBCategory: kbtool kbcode kbbuglist<BR>
KBSubcategory: CvwIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 6, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
