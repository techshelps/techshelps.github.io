

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: LNK2133 Size Mismatch on Common Block During Link </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q102691">
<META NAME="KBModify" CONTENT="1995/07/20">
<META NAME="KBCreate" CONTENT="1993/08/08">
<META NAME="Keywords" CONTENT="kbtool kberrmsg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An attempt to link code that contains a COMMON block fails and the linker generates the following message:     error LNK2133: Size mismatch for symbol          where         is the name of the COMMON block.  CAUSE =====  The source code declares an...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5V,QAHC,QAH4,QAB4,QAPF,QAA8,QAAP,QAE2,QBVV,QDMH,QBFY,QAPN,QAO4,QAJQ,QBXA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: LNK2133 Size Mismatch on Common Block During Link</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q102691</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An attempt to link code that contains a COMMON block fails and the linker
generates the following message:
<P>
<PRE>   error LNK2133: Size mismatch for symbol &lt;_XXXX&gt;

</PRE>where &lt;_XXXX&gt; is the name of the COMMON block.
<P>
<P><h2>CAUSE</h2>
 
<P>
The source code declares an initialized COMMON block with one size in
one routine and an uninitialized COMMON block with the same name but
with another size in another routine.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The best method to resolve this situation involves modifying the
source code such that each declaration of the COMMON block has the
same size. If this is not possible, modify the LINK command line to
list the object module that contains the initialized COMMON block
declaration before the other modules. In addition, the initialized
COMMON block declaration must be as large or larger than any
subsequent COMMON block declaration or memory corruption or other
incorrect results may occur.
<P>
<P><h2>STATUS</h2>
 
<P>
These problems do not occur with FORTRAN PowerStation 1.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The Common Object File Format (COFF) implements COMMON blocks using
two record types: COMDAT and COMDEF. A COMDAT record contains
initialized COMMON block data and a COMDEF record contains
uninitialized COMMON block data. LINK32 resolves each reference to the
COMMON block by associating each COMDEF record with the first COMDAT
record it encounters, if any. The first COMDAT record determines the
amount of space reserved for the COMMON data storage; if no COMDAT
record exists, the largest COMDEF record determines the amount of
space reserved. This behavior has the following implications:
<P>
<PRE>   If the data in a COMMON block is not initialized in any routine,
   COMMON block declarations with different sizes should not cause any
   problems and you can link the object files with the varying
   declarations in any order. Each declaration must be in a separate
   source file or the FORTRAN compiler generates an error.

   The application should initialize the COMMON block in only one
   location. LINK32 ignores subsequent COMDAT records and does not
   adjust the amount of storage set aside for the COMMON block. If the
   first COMDAT record in the file is smaller than subsequent COMDAT
   records, LINK32 does not generate an error message. However, when
   you run the application it could corrupt memory. Generating
   debugging information with the /4Yb compiler option switch does not
   catch this condition because each array in a COMMON block is
   correctly dimensioned in each object module.

   If LINK32 encounters a COMDEF record before a COMDAT record, the
   size of the COMDEF record must agree with the size of the COMDAT
   record. Otherwise, LINK32 generates the LNK2133 error and the link
   fails.

</PRE>To demonstrate this error, perform the following four steps:

<OL><P><LI>Compile each of the code examples below.

<P><LI>Link Sample 1 with Sample 2 or Sample 3. No error occurs at link
   time but a DX1020 error occurs at run time.

<P><LI>Link Sample 2 with Sample 1. The link fails and an LNK2133 error
   occurs.

<P><LI>Link Sample 3 with Sample 1. No errors occur at link time or at run
   time. LINK32 ignores the data statement in Sample 1.
<P>
</OL><h3>Sample Code 1</h3>
 
<P>
C Compiler options needed: /c
<P>
<PRE>      program tester
      integer arr
      common /testblk/ arr(1)
      data arr /11/
      call sub1
      print*, arr(1000000)
      end

</PRE></OL><h3>Sample Code 2</h3>
 
<P>
C Compiler options needed: /c
<P>
<PRE>      subroutine sub1
      integer arr
      common /testblk/ arr(1000000)
      arr(1000000) = 99
      end

</PRE><h3>Sample Code 3</h3>
 
<P>
C Compile options needed: /c
<P>
<PRE>      subroutine sub1
      integer arr
      common /testblk/ arr(1000000)
      data arr /1000000*77/
      arr(1000000) = 99
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbtool kberrmsg kbprb<BR>
KBSubcategory: LnkIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
