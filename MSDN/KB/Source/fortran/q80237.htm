

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Tab Edit Descriptor Fails Crossing Buffer Boundary </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q80237 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1992/01/23">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When the following conditions are met  1. Output is placed in a record position that is beyond the number of bytes    held by the I/O buffer.  2. The FORMAT edit descriptor tabs back to a position that is within the    number of bytes held by the I...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA5A,QAIB,QAR4,QACJ,QA5V,QAVX,QAVW,QAKC,QAOX,QAKP,QBC6,QACI,QAH4,QARP,QAG8 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Tab Edit Descriptor Fails Crossing Buffer Boundary</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q80237 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.10 | 5.00 5.10
<PRE>MS-DOS    | OS/2
</PRE>kbprg kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When the following conditions are met

<OL><P><LI>Output is placed in a record position that is beyond the number of bytes
   held by the I/O buffer.

<P><LI>The FORMAT edit descriptor tabs back to a position that is within the
   number of bytes held by the I/O buffer.

<P><LI>Output is written on top of the existing output that is immediately
   after the I/O buffer boundary.
<P>
</OL>the initial data that was output prior to the backwards tab will not be
overwritten by the new output. This will only occur with output immediately
following the I/O buffer boundary.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Since it is difficult to determine if a tab operation is going to cross an
I/O buffer boundary, it is best to avoid tabbing back behind and
overwriting existing output in a record. If the size of the I/O buffer is
increased to a larger number, there will be fewer buffer boundaries and the
probability of encountering this problem will be decreased.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the products listed above. This
problem was corrected in FORTRAN PowerStation, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code can be used to reproduce the problem:
<P>
<P><h3>Sample code</h3>
 
<P>
<PRE>       open(1,file='test.dat',blocksize=1024)
       write(1,10) '@@@@@@@@@@@@@@',123,456,789
</PRE></OL>10     format(1024x,a,t1010,3i10)
<PRE>       end

</PRE>Output (at end of file test.dat):
<P>
<PRE>123     @@@         789
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 buglist5.10 fixlist1.00<BR>
KBCategory: kbprg kbfixlist kbbuglist<BR>
KBSubCategory: FORTLngIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
