

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Use atof or atoi Functions to Convert from Char Strings </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q120397">
<META NAME="KBModify" CONTENT="1995/12/09">
<META NAME="KBCreate" CONTENT="1994/09/11">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Microsoft FORTRAN PowerStation does not permit list-directed I/O for internal files. As a result, you may find it difficult to convert character strings to numeric values unless you know the exact format of the string. However, the atoi and atof fu...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAY5,QBV8,QAB9,QATX,QBHQ,QBFY,QBBS,QAAP,QBVV,QAB4,QAWN,QAI4,QBWP,QBE7,QBE6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Use atof or atoi Functions to Convert from Char Strings</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 9, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q120397</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS, version 1.0a
<LI>Microsoft FORTRAN PowerStation32 for Windows NT, version 1.0 and
   4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Microsoft FORTRAN PowerStation does not permit list-directed I/O for
internal files. As a result, you may find it difficult to convert character
strings to numeric values unless you know the exact format of the string.
However, the atoi and atof functions included in the LIBC.LIB library can
accomplish the translation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To use the atof and atoi functions, you must create interfaces to the
functions, and declare the types of the functions.
<P>
The LIBC.LIB library containing the atof and atoi functions, is linked by
default when building FORTRAN programs in PowerStation, so no special
options are required.
<P>
The atof function expects the character string to be in the following
form:
<P>
<PRE>   [whitespace] [sign] [digits] [.digits] [ {d | D | e | E }[sign]digits]

</PRE>Use some caution and error checking when employing these functions. If
the atof or atoi function cannot convert the string format, it returns zero
(0.0 or 0) as the error condition. You should consult the C run-time
library reference for complete information on these functions.
<P>
FORTRAN does not null terminate strings, so the functions may incorrectly
translate a string that contains digits up to the end. To be safe, insert a
null character in the last position of the string. For example, the
following command null terminates the string "a":
<P>
<PRE>      CHARACTER*10 a
      a(10:10) = char(0)

</PRE><h3>Sample Code</h3>
 
<P>
Compiler options needed: none
<P>
C Interface to the atof function which is in the LIBC library
<PRE>      INTERFACE to REAL*8 FUNCTION atof[C](a)
      CHARACTER*(*) a[reference]
      END

</PRE>C Interface to the atoi function which is in the LIBC library
<PRE>      INTERFACE to INTEGER FUNCTION atoi[C](a)
      CHARACTER*(*) a[reference]
      END

      REAL*8  x
      REAL*8  atof !prevents error F2236: ATOF : length redefined
      INTEGER i
      INTEGER atoi !prevents error F2201: ATOI : type redefined
      CHARACTER*30 a

      PRINT *, "Type a numeric value"
      READ '(A)', a

      a(30:30) = char(0)
      x = atof(a)
      i = atoi(a)
      PRINT *, '"',a,'"', x, i

      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf  1.00 1.00a 4.00 VAX porting port<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 9, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
