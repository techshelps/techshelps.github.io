

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Example Using C or Assembly to Scroll Text for FORTRAN </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q62885 ">
<META NAME="KBModify" CONTENT="1995/07/17">
<META NAME="KBCreate" CONTENT="1990/06/11">
<META NAME="Keywords" CONTENT="kbprg kbinterop kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  With an OUTTEXT call, it is not possible to embed CR/LF characters to enforce scrolling of text on the screen. To scroll the text, an assembler or C routine may be used as follows:  1. Use SETTEXTPOSITION to position the cursor on the screen.  2. U...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAGI,QAH4,QA5V,QAXB,QA5Z,QAYA,QAC1,QBD2,QAIF,QBXT,QAIB,QAFF,QAE8,QAJQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Example Using C or Assembly to Scroll Text for FORTRAN</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q62885 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS and OS/2 versions 4.1, 5.0 and 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
With an OUTTEXT call, it is not possible to embed CR/LF characters to
enforce scrolling of text on the screen. To scroll the text, an
assembler or C routine may be used as follows:

<OL><P><LI>Use SETTEXTPOSITION to position the cursor on the screen.

<P><LI>Use OUTTEXT to display the output at that position.

<P><LI>Call an Assembly or C routine to scroll the screen by one line.

<P><LI>Return to step 1 above, positioning the cursor at the same location
   on the screen.
<P>
</OL><h2>MORE INFORMATION</h2>
 
<P>
The following code sample illustrates the use of the assembly routine:
<P>
<P><h3>Sample Code (.for)</h3>
 
<P>
<PRE>       interface to subroutine scroll_line()
       end
       include 'fgraph.fi'
       include 'fgraph.fd'
       record/rccoord/curpos
</PRE></OL>c
<PRE>       call settextposition (10,20,curpos)
       call outtext('Hello1')
</PRE>c
<PRE>       call scroll_line()
</PRE>c
<PRE>       call settextposition (10,20,curpos)
       call outtext ('Hello2')
       end

</PRE>The following is the code segment of the assembly module:
<P>
<P><h3>Sample Code (.asm)</h3>
 
<P>
.model large,fortran
<P>
.code
<P>
scroll_line proc far
<PRE>     push bp
     mov bp, sp
     mov ah,6          ;function 6H
     mov al,1          ;number of lines to scroll
     mov ch,0          ;row of top left corner
     mov cl,0          ;col of top left corner
     mov dh,24         ;row of bottom right corner
     mov dl,79         ;col of bottom right corner
     mov bh,7          ;attribute of line
     int 10h           ;interrupt 10h
     pop bp
     ret
</PRE>scroll_line endp
<PRE>     end

</PRE>To use the C subroutine, only the interface statement of the FORTRAN
module should be modified to read as follows:
<P>
<PRE>       interface to subroutine scroll_line [FAR,C] ()
       end

</PRE>The following is the code segment of the C module:
<P>
<P><h3>Sample Code (C)</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;
#include &lt;dos.h&gt;

</PRE>union REGS reg;
<P>
<P>
<PRE>void scroll_line()
</PRE>{
<P>
<PRE>/*
 *  The registers have the same significance as those in
 *  the assembly-language routine above.
 */

  reg.h.ah = 6;     // function 6H
  reg.h.al = 1;     // number of lines to scroll
  reg.h.bh = 0x7;   // attribute of line
  reg.h.ch = 0;     // row of top left corner
  reg.h.cl = 0;     // column of top left corner
  reg.h.dh = 24;    // row of bottom right corner
  reg.h.dl = 79;    // row of top right corner

  int86(0x10, &amp;reg, &amp;reg);
  return;
</PRE>}
<P>
The following is the MAKE file when the assembly module subroutine is
used:
<P>
<P><h3>Makefile (Assembly)</h3>
 
<P>
all=1.obj 2.obj
<P>
update: 1.for
<PRE>    fl /Zi /c 1.for

</PRE>update: 2.asm
<PRE>    masm /Zi 2.asm;

</PRE>update: $(all)
link /co $(all),,,/nod graphics llibfer;
<P>
The following is the MAKE file when the C module subroutine is used:
<P>
<P><h3>Makefile (C)</h3>
 
<P>
all=1.obj 2.obj
<P>
update: 1.for
<PRE>    fl /Zi /c 1.for

</PRE>update: 2.c
<PRE>    cl /AL /Zi /c 2.c

</PRE>update: $(all)
<PRE>    link $(all)/co,,,/nod /noe graphics llibfer llibcer;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf  5.00 5.10 mixed language<BR>
KBCategory: kbprg kbinterop kbcode<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
