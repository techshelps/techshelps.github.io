

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: /Zi and INTERFACE and CHARACTER*(*) Halts Compiler </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q84330 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1992/05/10">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Using the Microsoft FORTRAN compiler version 5.0 or 5.1 with the /Zi option to compile code that has an INTERFACE statement and the character declaration CHARACTER*(*) may cause the machine to hang under MS-DOS when compiling. Compiling the same pr...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBBS,QAH4,QAPN,QAOT,QAR4,QAWN,QAKE,QAJQ,QAB9,QATX,QAM1,QAFF,QAKP,QAMR V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: /Zi and INTERFACE and CHARACTER*(*) Halts Compiler</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q84330 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.10 | 5.10
<PRE>MS-DOS    | OS/2
</PRE>kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, version 5.1
<LI>Microsoft FORTRAN for OS/2, version 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using the Microsoft FORTRAN compiler version 5.0 or 5.1 with the /Zi option
to compile code that has an INTERFACE statement and the character
declaration CHARACTER*(*) may cause the machine to hang under MS-DOS when
compiling. Compiling the same program with /Zi under OS/2 may cause a Trap
D protection violation to be generated.
<P>
<P><h2>CAUSE</h2>
 
<P>
This problem occurs when the CHARACTER*(*) declaration is used within the
INTERFACE statement, which is very similar to other reported problems
compiling code containing INTERFACE statements with the /Zi option. For
more information, please see the following article in the Microsoft
Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FORTRAN/Q77258.htm">Q77258</A></B>
   TITLE: Compiler Hang with /Zi or /Od, INTERFACE Statement

</PRE><h2>RESOLUTION</h2>
 
<P>
Change the specification CHARACTER*(*) to CHARACTER*1 in INTERFACE
statements. The size of the character string in the INTERFACE statement is
not used by the compiler so any dummy value can be used.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft FORTRAN versions
5.0 and 5.1 for MS-DOS and OS/2. This problem was corrected in FORTRAN
PowerStation, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code 1</h3>
 
<P>
c The following sample code halts the compiler when compiled with /Zi.
<P>
<PRE>      interface to subroutine s(c)
      character*(*) c
      end

      subroutine s(c)
      character*(*) c
      integer a1(2), a2(2), a3(2), a4(2)
      parameter (i1=1, i=-1)
      end

</PRE><h3>Sample Code 2</h3>
 
<P>
c No error is generated when compiling the following code with /Zi:
<P>
c FORTRAN character strings are passed by reference, similar to all
c other FORTRAN data. The size of character string c in the INTERFACE
c statement is not used by the compiler, so any fixed value solves
c the problem.
<P>
<PRE>      interface to subroutine s(c)
      character*1 c     ! Arbitrary size of string assigned here.
      end

      subroutine s(c)
      character*(*) c
      integer a1(2), a2(2), a3(2), a4(2)
      parameter (i1=1, i=-1)
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 5.10 hang<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
