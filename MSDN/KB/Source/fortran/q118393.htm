

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: READ Gets Bad Data After Exit Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q118393">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/07/17">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  If you attempt to do a READ from a file after another READ has exited during an error, the data you obtain will be bad.  STATUS ======  Microsoft has confirmed this to be a bug in FORTRAN, version 5.1. This problem was corrected in FORTRAN PowerSta...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAOX,QBFN,QAYY,QAAP,QAN1,QAB4,QABA,QAY2,QAGB,QAKP,QAI4,QAR4,QBXH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: READ Gets Bad Data After Exit Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q118393</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10
MS-DOS
kbprg kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, version 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If you attempt to do a READ from a file after another READ has exited
during an error, the data you obtain will be bad.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in FORTRAN, version 5.1. This
problem was corrected in FORTRAN PowerStation for MS-DOS, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When you read from a file, the READ statement transfers control to another
line if the "err=" is included and there is a read error. If another READ
is attempted immediately, the variables in the iolist contain bad data,
usually 0.
<P>
If your data file looks like
<P>
<PRE>   11.
   ***
   22.
   33.

</PRE>then the expected output from the attached sample code below will read as
follows:
<P>
<PRE>   Normal print after read 1.  iostat=       0  data(1):      11.000000
   Error from read 2.
   Normal print after read 3.  iostat=       0  data(3):      22.000000
   Normal print after read 4.  iostat=       0  data(4):      33.000000
   Printing out data
   data(          1) =       11.000000
   data(          2) =       99.000000
   data(          3) =       22.000000
   data(          4) =       33.000000
   Stop - Program terminated.

</PRE>Both PowerStation for MS-DOS and PowerStation 32 for Windows NT produce
the expected output. However the FORTRAN 5.1 produces the following:
<P>
<PRE>   Normal print after read 1.  iostat=       0  data(1):       11.000000
   Error from read 2.
   Normal print after read 3.  iostat=       0  data(3):    0.000000E+00
   Normal print after read 4.  iostat=       0  data(4):       22.000000
   Printing out data
   data(          1) =       11.000000
   data(          2) =       99.000000
   data(          3) =    0.000000E+00
   data(          4) =       22.000000
   Stop - Program terminated.

</PRE><h3>Sample Code</h3>
 
<P>
C Compile options needed:  none
<P>
<PRE>      REAL*4 data(4)
      DATA data /4*99./

      OPEN(15, file="Data")

      READ(15, "(f3.0)", ERR=10, END=90, IOSTAT=i) data(1)
      PRINT*, "Normal print after read 1.  ",
     +"iostat=", i, "  data(1): ", data(1)
      GOTO 15
   10 PRINT*, "Error from read 1."

   15 READ(15, "(f3.0)", ERR=20, END=90, IOSTAT=i) data(2)
      PRINT*, "Normal print after read 2.  ",
     +"iostat=", i, " data(2): ", data(2)
      GOTO 25
   20 PRINT*, "Error from read 2."

   25 READ(15, "(f3.0)", ERR=30, END=90, IOSTAT=i) data(3)
      PRINT*, "Normal print after read 3.  ",
     +"iostat=", i, "  data(3): ", data(3)
      GOTO 35
   30 PRINT*, "error from read 3"

   35 READ(15, "(f3.0)", ERR=40, END=90, IOSTAT=i) data(4)
      PRINT*, "Normal print after read 4.  ",
     +"iostat=", i, "  data(4): ", data(4)
      goto 999
   40 PRINT*, "error from read 4"
      GOTO 999

   90 PRINT*, "End of file jump."

  999 PRINT*, "Printing out data"
      DO 1000 i = 1, 4
          PRINT*, "data(",i,") = ", data(i)
 1000 CONTINUE

      STOP
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 buglist5.10 fixlist1.00<BR>
KBCategory: kbprg kbbuglist kbfixlist<BR>
KBSubCategory: FORTLngIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
