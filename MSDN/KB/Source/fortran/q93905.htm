

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using INTDOSQQ for Password Entry in FORTRAN 5.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q93905 ">
<META NAME="KBModify" CONTENT="1995/07/19">
<META NAME="KBCreate" CONTENT="1992/12/21">
<META NAME="Keywords" CONTENT="kbprg kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  You can create a program that allows for password entry using Microsoft FORTRAN version 5.1 for MS-DOS. The Microsoft FORTRAN  Reference  manual for version 5.1 explains using the INTDOSQQ and INTDOSXQQ subroutines to invoke MS-DOS system calls usi...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QADN,QAHC,QAGI,QAH7,QAH6,QAUD,QAD7,QAY5,QAHB,QAWK,QAEF,QBV8,QAB9,QAIF,QBFY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using INTDOSQQ for Password Entry in FORTRAN 5.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 19, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q93905 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, version 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
You can create a program that allows for password entry using Microsoft
FORTRAN version 5.1 for MS-DOS. The Microsoft FORTRAN "Reference" manual
for version 5.1 explains using the INTDOSQQ and INTDOSXQQ subroutines to
invoke MS-DOS system calls using Interrupt 21h. Interrupt 21h Functions 7
and 8 retrieve input from the keyboard without echoing the input to the
display. Interrupt 21h Function 7 ignores the CTRL+C and CTRL+BREAK key
combinations while Interrupt 21h Function 8 processes these key
combinations by terminating the program. For more information about the
various functions provided by Interrupt 21h, see the "MS-DOS Encyclopedia"
or another reference on programming in the MS-DOS environment.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample code use MS-DOS Interrupt 21h Function 7 to allow the
user to enter a password without echoing the keystrokes to the display. The
application uses Interrupt 21h Function 2 to display an asterisk on the
screen for each keystroke entered.
<P>
<P><h3>Sample Code</h3>
 
<P>
C Compiler options required: None
<P>
<PRE>      include 'flib.fi'
      program password
      character*80 pass
      logical get_pass/.true./
      integer*2 i, j, getch

      write(*,'(1x,a,\)') 'ENTER PASSWORD &gt; '
      i=1
      do while (get_pass)
         j = getch()            ! Get a character of the password
         if (j .le. 32) then
            if (j .eq. 8 .and. i .gt. 1) then   ! BACKSPACE key pressed
               i = i-1
               call putchar( char(j) )    ! Move cursor back 1 character
               call putchar( ' ' )        ! Write a blank over the asterisk
               call putchar ( char(j) )   ! Move cursor back to blanks
               pass(i:i+1) = '  '
            endif
            if (j .eq. 13) get_pass = .false. ! ENTER key pressed - exit
         else
            call putchar( '*' )           ! Echo asterisk to display
            pass(i:i) = char(j)           ! Add input character to string
            i = i + 1
            if (i .gt. 80) get_pass = .false. ! Don't write past string end
         endif
      enddo
      write(*,*)
      write(*,*) 'password entered &gt; ',pass
      end

</PRE>C  The GETCH function retrieves a character from the
C  Standard Input without echoing the character to the screen.
<P>
<PRE>      integer*2 function getch
      include 'flib.fd'
      record /regs$info/ in, out
      in.bregs.ah = #07            ! Function 7 - STDIN Input (no echo)
      call intdosqq(in, out)       ! Interrupt 21h
      getch = out.bregs.al         ! Input data returned in AL
      return
      end

</PRE>C  The PUTCHAR subroutine writes a single character to the screen.
<P>
<PRE>      subroutine putchar( ch )
      include 'flib.fd'
      record /regs$info/ in, out
      character*1 ch
      in.bregs.ah = #02            ! Function 2 - Display Output
      in.bregs.dl = ch             ! character to display goes in DL
      call intdosqq(in, out)       ! Interrupt 21h
      return
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 5.10<BR>
KBCategory: kbprg kbcode<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 19, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
