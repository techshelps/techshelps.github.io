

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: /Ge Fails to Detect Stack Overflow </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106520">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/11/09">
<META NAME="Keywords" CONTENT="FORTLngIss kbbuglist kberrmsg kbfixlist kbprg">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Programs compiled with the /Ge option produce the following run-time error     DOSXMSF : fatal error DX1020: unhandled exception: General    protection fault;  when a stack overflow occurs, instead of the expected R6000 stack overflow message.  STA...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAH4,QA19,QABI,QABH,QAR4,QBV8,QAIF,QAKP,QAB4,QAAP,QBKN,QAJ6,QBWP,QBE7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: /Ge Fails to Detect Stack Overflow</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106520</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.00a | 1.00
<PRE>MS-DOS     | WINDOWS NT
</PRE>kbprg kbfixlist kberrmsg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Programs compiled with the /Ge option produce the following run-time
error
<P>
<PRE>   DOSXMSF : fatal error DX1020: unhandled exception: General
   protection fault;

</PRE>when a stack overflow occurs, instead of the expected R6000 stack
overflow message.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN PowerStation
version 1.0 for MS-DOS. This problem was corrected in Microsoft FORTRAN
PowerStation 32, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The stack-checking routine enabled by the /Ge option does not detect
stack overflow. Because the default stack size for the FORTRAN
PowerStation is 32K, a general protection (GP) fault is unlikely to be
caused by a stack overflow. The exception to this is when one of the
following types of programs is written:

<UL><LI>Programs deliberately designed to use up the stack. This would
   involve extensive use of automatic variables, indirect recursion,
   or deeply nested subroutine and function calls totaling thousands
   of passed arguments.

<LI>Programs that circumvent the link time check for stack use based on
   name decorations. These programs may cause stack overflow if they
   contain problems related to passing arguments. This check is
   circumvented by declaring the routine to use the C or VARYING
   calling conventions or by using the ALIAS attribute.

<LI>Programs that call Assembly language routines that incorrectly use
   the stack.
<P>
</UL><h3>Sample Code</h3>
 
<P>
The following code can be used to illustrate the problem:
<P>
C Compile options needed: /Ge
<P>
<PRE>      subroutine recur(y)
      integer y
      y = y + 1
      call indrec(y)
      end

      subroutine indrec(i)
      integer i
      i = i + 1
      call recur(i)
      end

      integer x
      x = 0
      call recur(x)
      end

</PRE>NOTE: The /Ge compiler option is no longer used for stack-probe checks
under FORTRAN PowerStation 32, version 4.0. Attempting to use this option
will generate the message:
<P>
<PRE>   Command line warning D2004: obsolete option /Ge ignored.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 gpf gp-fault<BR>
KBCategory: kbprg kbfixlist kbbuglist kberrmsg<BR>
KBSubcategory: FORTLngIss<BR>
Keywords          : FORTLngIss kbbuglist kberrmsg kbfixlist kbprg<BR>
Version           : 1.00 1.00a | 1.00<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
