

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: MULMIX Mixed-Language Example Fails with Win 3.1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q82293 ">
<META NAME="KBModify" CONTENT="1995/07/11">
<META NAME="KBCreate" CONTENT="1992/03/30">
<META NAME="Keywords" CONTENT="kbprg kbbuglist kbinterop kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When the MULMIX mixed-language C and FORTRAN Windows program shipped with Microsoft FORTRAN version 5.1 is run under Windows 3.1, a dialog box that accepts numeric input may not work correctly. When the user inputs numbers in the two available fiel...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QBFY,QAUD,QATX,QAY5,QAI4,QDL9,QBWQ,QBWO,QBWN,QBVV,QAD7,QAKP,QAGB,QBSO V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: MULMIX Mixed-Language Example Fails with Win 3.1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 11, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q82293 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, version 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When the MULMIX mixed-language C and FORTRAN Windows program shipped with
Microsoft FORTRAN version 5.1 is run under Windows 3.1, a dialog box that
accepts numeric input may not work correctly. When the user inputs numbers
in the two available fields, the OK button may not be enabled and no
calculation performed. Erratic program behavior may also be observed.
<P>
<P><h2>CAUSE</h2>
 
<P>
The C code in the source file MULMIX.C contains an error. The
Windows versions 3.0 and 3.1 SDK documentation states that the
EM_GETLINE parameter to the SendMessage() API does NOT return a
null terminated string. However, in Windows 3.0, the string is
actually null terminated. The code in MULMIX.C relies on this
undocumented behavior.
<P>
In Windows 3.1 the functionality of this message type is as
described in the Win 3.0 and 3.1 SDK documentation, and no null
character is appended to the returned string. As a result, the
string returned by the SendMessage() function never passes the
numerical verification test in the MULMIX code and the OK button is
not enabled.
<P>
Erratic behavior may also result because the absence of the null
character terminating the string can cause the strtol() function to
access memory not owned by the program.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
The code in MULMIX.C should be modified to correct this problem.
There are two ways to do this:

<UL><LI>Manually append the null character to the string returned by
   the SendMessage() function.
<P>
 -or-

<LI>Use the WM_GETTEXT parameter instead of the EM_GETLINE
   parameter. WM_GETTEXT will return a null terminated string.
<P>
</UL>STATUS
 
<P>
Microsoft has confirmed this to be a problem in the sample program
MULMIX.C shipped with Microsoft FORTRAN version 5.1. We are
researching this problem and will post new information here as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code fragment reproduces the problem (from MULMIX.C):
<P>
<P><h3>Sample Code 1</h3>
 
<P>
<PRE>/* Copy edit-control contents to szBuffer */

   nNumChars = SendMessage( (HWND) LOWORD( lParam ),
                            EM_GETLINE,
                            0, (LONG)(LPSTR)szBuffer );

   if( nNumChars )
   {
       dNums[n] = strtol( szBuffer, &amp;pc, 10 );
       bNumsOK[n] = (*pc == '\0') || (*pc == ' ');
   }
   else
   {
       bNumsOK[n] = FALSE;
   }

</PRE><h3>Sample Code 2</h3>
 
<P>
<PRE>/* This is solution 1, adding the null character:
   Copy edit-control contents to szBuffer
*/

   nNumChars = SendMessage( (HWND) LOWORD( lParam ),
                            EM_GETLINE,
                            0, (LONG)(LPSTR)szBuffer );

   if( nNumChars )
   {
       dNums[n] = strtol( szBuffer, &amp;pc, 10 );
       szBuffer[nNumChars] = '\0';     /* new line added. */
       pc = &amp;(szBuffer[nNumChars]);    /* new line added. */
       bNumsOK[n] = (*pc == '\0') || (*pc == ' ');
   }

</PRE><h3>Sample Code 3</h3>
 
<P>
<PRE>/* This is solution 2, using WM_GETTEXT:
   Copy edit-control contents to szBuffer
*/

   nNumChars = SendMessage( (HWND) LOWORD( lParam ),
                            WM_GETTEXT,
                            16, (LONG)(LPSTR)szBuffer );

   if( nNumChars )
   {
      dNums[n] = strtol( szBuffer, &amp;pc, 10 );
      bNumsOK[n] = (*pc == '\0') || (*pc == ' ');
   }
   else
   {
      bNumsOK[n] = FALSE;
   }
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 3.00 3.10 5.10<BR>
KBCategory: kbprg kbcode kbbuglist kbinterop<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 11, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
