

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FORTRAN PowerStation 32 MIXLANG.TXT </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q133104">
<META NAME="KBModify" CONTENT="1995/12/10">
<META NAME="KBCreate" CONTENT="1995/07/24">
<META NAME="Keywords" CONTENT="kbreadme">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  The following information is from the Microsoft FORTRAN PowerStation 32 MIXLANG.TXT file located in the \FPSNT\README directory.  This file has three parts:      Part      Contents     ----      --------       1       Building C projects       2   ...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBE6,QBE7,QBFY,QAH4,QATX,QAH7,QAH6,QAD7,QAGI,QA8T,QAMA,QDNN,QAIF,QBHQ,QA4Q V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FORTRAN PowerStation 32 MIXLANG.TXT</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 10, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q133104</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following information is from the Microsoft FORTRAN PowerStation 32
MIXLANG.TXT file located in the \FPSNT\README directory.
<P>
This file has three parts:
<P>
<PRE>    Part      Contents
    ----      --------
      1       Building C projects
      2       Building FORTRAN projects
      3       Using DLLs with Mixed Languages

</PRE><h2>MORE INFORMATION</h2>
 
<P>
====================&lt; Part 1: Building C Projects &gt;====================
<P>
You can build C projects using FORTRAN code in the C++ Visual
Workbench. Compile your FORTRAN code one of the following ways:

<OL><P><LI> Using the FL32 command on the command line.

<P><LI> Compiling within FORTRAN Visual Workbench.

<P><LI> Using a makefile in C++ Visual Workbench.
<P>
</OL>Use the FORTRAN compiler option /c to suppress linking.
<P>
Include your FORTRAN object (.OBJ) and static library (.LIB) files by
listing them in the Files in Project box on the Project menu.
<P>
Run-time libraries must support the FORTRAN code integrated into the
C project. You can access the correct versions through the following
steps:

<OL><P><LI> From the Options menu, choose Directories. In the Library Files
</OL>Path box, insert as the first item the directory path containing
the FORTRAN versions of the C run-time libraries.  This assures that
the correct versions of libc.lib, libcmt.lib, and msvcrt.lib will be
loaded by the linker. The typical item list should begin with
c:\fpsnt\lib;... .

<OL><P><LI> From the Options menu, choose Project. In the new menu, choose
</OL>Linker Options. Under Category Setting: Input, in the Object\Library
Modules box, type libf.lib and console.lib.
<P>
If you are using the Win32 System Development Kit, make certain that
directory MSTOOLS\BIN from the Win32 SDK does not appear before
MSVCNT\BIN or FPSNT\BIN in the executables directory path; otherwise
LINK32 from SDK will be inappropriately picked up instead of LINK.
<P>
<P>
=================&lt; Part 2: Building FORTRAN Projects &gt;=================
<P>
<P><h3>Passing Strings to C</h3>
 
The following sample code illustrates passing strings from FORTRAN to
C and back using the C convention and using _stdcall.  In the first
case, the string is terminated in FORTRAN with the C terminator (\n).
In the second case, a standard FORTRAN string is passed, and the C
program must allow for the hidden length integer at the end of the
string.  You can copy this code to the Clipboard and paste it into
your files.
<P>
<PRE>CC    FSTR_F.FOR    FORTRAN MAIN PROGRAM
CC
      INTERFACE TO SUBROUTINE Ucase1 [C,ALIAS:'_Ucase1'] (text)
      CHARACTER*(*) text
      END
      INTERFACE TO SUBROUTINE Ucase2 [ALIAS:'_Ucase2@8'] (text)
      CHARACTER*(*) text
      END

      CHARACTER*40 string1,string2
      DATA string1 /'This is a null-terminated string.'C/
      DATA string2 /'This is a standard Fortran string.'/

      WRITE (*, *) string1
      CALL Ucase1 (string1)
      WRITE (*, *) string1

      WRITE (*, *) string2
      CALL Ucase2 (string2)
      WRITE (*, *) string2

      END

//    FSTR_C.C    C Subprograms       Make strings uppercase
//
#include &lt;ctype.h&gt;

void Ucase1( char *string )
</PRE></OL>{
<PRE>    char *ptr;

    for (ptr = string; *ptr; ptr++)
        *ptr = toupper( *ptr );
}

void __stdcall Ucase2( char *string, int length )
</PRE>{
<PRE>    char *ptr;

    for (ptr = string; *ptr; ptr++)
        *ptr = toupper( *ptr );
}


</PRE>==============&lt; Part 3: Using DLLs with Mixed Languages &gt;==============
<P>
The following programs are examples of mixed C and FORTRAN programs
using DLLs where the main program is in one language and the DLL is in
the other.  The examples communicate data between the main program and
the DLL through a common data structure (a FORTRAN common block and a
C structure).
<P>
Redirecting the output of a mixed-language DLL program can produce
unexpected results due to the different I/O buffering performed by the
C and FORTRAN run-time libraries.
<P>
These samples can be copied to the Clipboard and pasted into a file to
use as examples and templates for this type of program.
<P>
<P>
<P><h3>Case 1. A FORTRAN Main Program calls a C DLL</h3>
 
<P>
CC    FORTRAN MAIN PROGRAM
CC
<PRE>      INTERFACE TO SUBROUTINE csub [C,ALIAS:'_csub']()
      END

      INTEGER i
      REAL x
      CHARACTER*4 s
      COMMON /BRIDGE[dllimport]/ i, x, s
      i = 1
      x = 2.5
      s = 'fail'
      WRITE(*,'(5X,A)')       'before calling dll '
      WRITE(*,'(5X,A,I5)')    'i = ', i
      WRITE(*,'(5X,A,F4.2)')  'x = ', x
      WRITE(*,'(5X,A,A)')     's = ', s
      CALL csub()
      WRITE(*,'(5X,A)')       'after calling dll '
      WRITE(*,'(5X,A,I5)')    'i = ', i
      WRITE(*,'(5X,A,F4.2)')  'x = ', x
      WRITE(*,'(5X,A,A)')     's = ', s
      END

//    C DLL Subprogram
//
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#define DLLexport _declspec(dllexport)


</PRE>DLLexport void csub();
<P>
DLLexport struct {
<PRE>   int i;
   float x;
   char s[4];
</PRE>} BRIDGE;
<P>
<PRE>void csub()
</PRE>{
<PRE>   BRIDGE.i = BRIDGE.i + 1;
   BRIDGE.x = BRIDGE.x + 1.5F;
   strcpy(BRIDGE.s, "pass");
   printf("\n\n%s\n%s%d\n%s%f\n%s%s\n",
         "in the dll",
         "i = ", BRIDGE.i,
         "x = ", BRIDGE.x,
         "s = ", BRIDGE.s);
}

</PRE>Output redirected to a file:
<P>
Before calling dll:
<PRE>i =     1
</PRE>x = 2.50
s = fail
<P>
After calling dll:
<PRE>i =     2
</PRE>x = 4.00
s = pass
<P>
Output in the dll:
i = 2
x = 4.000000
s = pass
<P>
<P>
<P><h3>Case 2. A C Main Program calls a FORTRAN DLL</h3>
 
<P>
<PRE>//    C Main Program
//
#include &lt;stdio.h&gt;
#include &lt;string.h&gt;
#define DLLimport _declspec(dllimport)

</PRE>extern void _stdcall FSUB ();
<P>
extern DLLimport struct {
<PRE>   int i;
   float x;
   char s[4];
</PRE>} BRIDGE;
<P>
<PRE>void main(){
   BRIDGE.i = 1;
   BRIDGE.x = 2.5F;
   strcpy(BRIDGE.s, "fail");
   printf("\n\n%s\n%s%d\n%s%f\n%s%s\n",
         "before calling dll", "i = ", BRIDGE.i,
         "x = ", BRIDGE.x,
         "s = ", BRIDGE.s);
   FSUB();
   printf("\n\n%s\n%s%d\n%s%f\n%s%s\n",
         "before calling dll", "i = ", BRIDGE.i,
         "x = ", BRIDGE.x,
         "s = ", BRIDGE.s);
}

</PRE>CC    FORTRAN DLL SUBROUTINE
CC
<PRE>      SUBROUTINE FSUB[dllexport]()
      COMMON /BRIDGE[dllexport]/ i, x, s
      INTEGER i
      REAL x
      CHARACTER*4 s
      i = i + 1
      x = x + 1.5
      s = 'pass'
      WRITE(*,*)
      WRITE(*,'(5X,A)')       'in the dll '
      WRITE(*,'(5X,A,I5)')    'i = ', i
      WRITE(*,'(5X,A,F4.2)')  'x = ', x
      WRITE(*,'(5X,A,A)')     's = ', s
      END

</PRE>Output redirected to a file:
<P>
In the dll:
<PRE>i =     2
</PRE>x = 4.00
s = pass
<P>
Before calling dll:
i = 1
x = 2.500000
s = fail
<P>
After calling dll:
i = 2
x = 4.000000
s = pass
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbreadme<BR>
KBSubcategory: FORTLngIss CLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 10, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
