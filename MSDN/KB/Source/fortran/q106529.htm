

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: GetStrQQ Leaves Characters in Standard Output </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q106529">
<META NAME="KBModify" CONTENT="1996/03/15">
<META NAME="KBCreate" CONTENT="1993/11/10">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  The intrinsic function GetStrQQ leaves spurious characters in the standard output buffer that are displayed on the next statement that flushes the buffer.  RESOLUTION  Use the READ statement instead of GetStrQQ for reading from the standard input d...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QABB,QATX,QAUD,QAHT,QABA,QBLX,QA5A,QBFN,QA8T,QAPN,QALZ,QAB9,QAKP,QBVV,QAY5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: GetStrQQ Leaves Characters in Standard Output</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 15, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q106529</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS DOS, versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32, version 1.0 and 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The intrinsic function GetStrQQ leaves spurious characters in the
standard output buffer that are displayed on the next statement that
flushes the buffer.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use the READ statement instead of GetStrQQ for reading from the
standard input device. Alternatively, the GetCharQQ function may be
used within a DO loop.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Contrary to the documentation, there is no advantage to using GetStrQQ
rather than READ for standard I/O.
<P>
Run the sample code below, and enter any string when prompted. The
output has a blank line under "Enter string: abc" but not under "Enter
another string: abc", and in addition there is an extra space in front
of the first 1000. GetStrQQ produces the extra linefeed and space
characters, whereas the standard READ statement does not.
<P>
<P><h3>Output</h3>
 
<P>
<PRE>   Enter string: abc

              1000
             2000
   Enter another string: abc
             1000
             2000

</PRE><h3>Sample Code</h3>
 
<P>
C No compiler options required
<P>
<PRE>        include 'flib.fi'
        include 'flib.fd'
        character string*10

        write(*,'('' Enter string: ''\)')
        len = getstrqq(string)

        do i = 1,2
          write(*,*)  i*1000
        end do

        write(*,'('' Enter another string: ''\)')
        read(*,'(a)')  string

        do i = 1,2
          write(*,*)  i*1000
        end do
        end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 1.00a 4.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 15, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
