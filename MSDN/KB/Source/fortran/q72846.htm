

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Incorrect Inline Variable Format May NOT Generate Errors </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72846 ">
<META NAME="KBModify" CONTENT="1995/12/11">
<META NAME="KBCreate" CONTENT="1991/06/11">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Using Microsoft FORTRAN, a program using a character variable for a FORMAT specifier on a READ or WRITE statement may not generate a run-time error even though the FORMAT specifier is incorrect. This may happen if the FORMAT specifier represented b...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QAAP,QDNG,QA8T,QAPN,QAB4,QAHH,QAOX,QAB9,QBVV,QA5E,QAR4,QAL2,QAH4,QDNU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Incorrect Inline Variable Format May NOT Generate Errors</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72846 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
<LI>Microsoft FORTRAN PowerStation for MS-DOS, versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0 and
   4.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
Using Microsoft FORTRAN, a program using a character variable for a FORMAT
specifier on a READ or WRITE statement may not generate a run-time error
even though the FORMAT specifier is incorrect. This may happen if the
FORMAT specifier represented by the character variable is correct up to one
edit descriptor past the edit descriptor needed by the I/O list of the
corresponding READ or WRITE statement, even if the remainder of the FORMAT
specifier is incorrect.
<P>
The errors that may be expected correspond to those available within
Microsoft FORTRAN that indicate an invalid format descriptor.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The character variable is parsed as a FORMAT specifier only to the point
required by the number of variables in the I/O list of the READ or WRITE
statement using the FORMAT specifier. A run-time error will not be
generated unless the number of variables in the I/O list causes the run-
time routines to parse to the incorrect or syntactically invalid portion of
the FORMAT specifier.
<P>
For example, in the program below, during the first WRITE statement, the
run-time routine parses the format specifier string to obtain the first
edit descriptor. It then matches the edit descriptor with the first
variable in the WRITE statement. Since these match (an integer variable and
an integer edit descriptor), the run-time routine goes back to the FORMAT
specifier string to obtain the second edit descriptor. In parsing this edit
descriptor and finding it valid, the run-time routine then attempts to
match it with the next variable in the WRITE statement. As no second
variable exists, the first variable is printed out according to the first
FORMAT specifier, and the program continues on.
<P>
The difference with the second WRITE statement is that while matching the
edit descriptors with the corresponding variables to be written out, the
run-time routine attempts to parse the string one edit descriptor further
than the first WRITE statement. This edit descriptor is incomplete, and the
"F6988: unexpected end of format" error is generated.
<P>
<PRE>       character*20 fmt
       integer i
       i=10
       fmt='(1x,i4,i4'
       write(*,fmt) i     ! prints out i, since the FORMAT is
                          ! correct up to the next edit descriptor
       write(*,fmt) i,i   !  generates run-time error F6988

       end

</PRE>This program produces the following output:
<P>
10
<PRE>     run-time error F6988: WRITE(CON)
     - unexpected end of format
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf 1.00 5.00 5.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
