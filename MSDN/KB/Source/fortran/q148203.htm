

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Passing LOC() Intrinsic Result to C Function Fails </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q148203">
<META NAME="KBModify" CONTENT="1996/03/08">
<META NAME="KBCreate" CONTENT="1996/03/07">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Using a variable character substring as an argument to the LOC() intrinsic function and passing the result to a C function causes the variable character substring to become corrupted.  RESOLUTION   - Use a literal character substring as the LOC() i...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAGI,QAYL,QAH4,QAY5,QATX,QBV8,QBE7,QBE6,QAKP,QAIF,QBWP,QAPN,QAL3,QALZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Passing LOC() Intrinsic Result to C Function Fails</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 8, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q148203</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:
<P>
<PRE>  - Microsoft Fortran PowerStation for Windows 95 and Windows NT,
    version 4.0
</PRE> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using a variable character substring as an argument to the LOC() intrinsic
function and passing the result to a C function causes the variable
character substring to become corrupted.
<P>
<P><h2>RESOLUTION</h2>
 

<UL><LI>Use a literal character substring as the LOC() intrinsic argument.
<P>
   -or-

<LI>Assign the variable character substring to a temporary character
   variable, and use it as the LOC() intrinsic argument.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code to Illustrate Problem and Workarounds</h3>
 
<P>
C Fortran Main Source Code
C Compile options needed: none
<P>
<PRE>      INTERFACE
          SUBROUTINE MYFUNC(I)
          INTEGER I
          !MS$ATTRIBUTES VALUE :: I
          !MS$ATTRIBUTES C,ALIAS:'_myfunc' :: myfunc
          END SUBROUTINE MYFUNC
      END INTERFACE

      CHARACTER STR*3, TEMP*4
      INTEGER L

      STR = 'ABC'
      L = 3

</PRE>C this fails
<PRE>      CALL MYFUNC(LOC(STR(1:L)//CHAR(0)))

</PRE>C these work
<PRE>      CALL MYFUNC(LOC(STR//CHAR(0)))
      CALL MYFUNC(LOC(STR(1:3)//CHAR(0)))
      TEMP=STR(1:L)//CHAR(0)
      CALL MYFUNC(LOC(TEMP))
      END

</PRE> 
<P>
<PRE>/* C Function Source Code:
   Compile options needed: /c
*/

#include &lt;stdio.h&gt;
void myfunc(char *s)
</PRE>{
<PRE>    long x;
    x = (long) s;
    printf("s: %x  String: %s\n", x, s);
</PRE>}
<P>
<P><h3>Program Output</h3>
 
<P>
s: 12ffa8  String: -
s: 12ffa4  String: ABC
s: 12ffa0  String: ABC
s: 41bac8  String: ABC
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 8, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
