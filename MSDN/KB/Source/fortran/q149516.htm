

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Watching a DLL Common Block Using Context Operator Fails </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q149516">
<META NAME="KBModify" CONTENT="1996/04/09">
<META NAME="KBCreate" CONTENT="1996/04/03">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Attempting to view a DLL variable or common block contents in a watch window using the context operator {} fails with the following messages:  DLL variable:      EE2347: Undefined variable   DLL common block:      Invalid Debug Information   STATUS...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QATK,QATL,QBJZ,QAH4,QBWS,QAVX,QAHC,QBXS,QAJN,QDNN,QAG2,QAY2,QANY,QAK6 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Watching a DLL Common Block Using Context Operator Fails</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 9, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q149516</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Fortran PowerStation for Windows 95 and Windows NT,
   version 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Attempting to view a DLL variable or common block contents in a watch
window using the context operator {} fails with the following messages:
<P>
DLL variable:
<P>
<PRE>   "EE2347: Undefined variable"

</PRE>DLL common block:
<P>
<PRE>   "Invalid Debug Information"

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Debug information for DLL variables and common blocks is available in the
debugger's Locals window. The members of a common block can be viewed in a
watch window but only if specified without the context operator. Trying to
view a DLL variable or common block by using the context operator will
always fail. Also, attempting to watch a common block structure in a watch
window will fail with the message "Invalid Debug Information".
<P>
<P><h3>Steps to Reproduce Problem</h3>
 

<OL><P><LI>Create two source code files using the sample code provided. One
   (Theapp.for) will be the main source code and the other (Thedll.for)
   will be the DLL source code.

<P><LI>Create a QuickWin project using the main source file (Theapp.for). From
   the Developer Studio File menu, choose New, and then double-click the
   Project Workspace option. In the New Project Workspace dialog box, click
   the QuickWin Application type, name the project TheApp, set the project
   directory, and click the Create button.

<P><LI>Insert the main source code file into the project. From the Insert
   menu, choose Files into Project. and select the Theapp.for file.

<P><LI>Create a DLL project using the file Thedll.for, which will be a
   subproject of the QuickWin project created in step 2. From the Insert
   menu, choose Project, and then in the Insert Project dialog box, click
   the Dynamic-Link Library type, name the project TheDll, click
   Subprojects of:, and click the Create button.

<P><LI>Insert the DLL source code file into the subproject. From the Insert
   menu, choose Files into Project, and select the Thedll.for file.

<P><LI>Set the DLL build output directory to be the same as the QuickWin build
   output directory. From the Build menu, choose Settings, and then select
   the General folder tab. In the Settings For list box, highlight the DLL
   debug project target "TheDll - Win32 Debug (TheDll.dll)." Then select
   the Output files edit box, and remove the "TheDll\Debug" text, replacing
   it with "Debug." Then click the OK button to save the changes and exit
   the dialog box.

<P><LI>Build and link the QuickWin and DLL projects. In Developer Studio,
   change the default configuration to "TheApp - Win32 Debug." Then from
   the Build menu, choose Rebuild All.

<P><LI>Try to view the common block or its members in a watch window. Begin a
   debugging session, from the Build menu, choose Debug, and then select
   Step Into. Step past the variable initialization statements in the DLL.
   Now, in a watch window, type the variable "i" or the common block name
   "TheBlock" using the context operator as in the following examples and
   press the ENTER key.
<P>
   Example One
   -----------
<P>
   Type:
<P>
<P><PRE>      {,,TheDll.dll}i
</PRE><P>
   Result:
<P>
<P><PRE>      This fails with "EE2347: Undefined variable"
</PRE><P>
   Example Two
   -----------
<P>
   Type:
<P>
<P><PRE>      {,,TheDll.dll}TheBlock
</PRE><P>
   Result:
<P>
<P><PRE>      This fails with "Invalid Debug Information"
</PRE><P>
</OL><h3>Sample Code</h3>
 
<P>
<P><h3>Main</h3>
 
<P>
C Compile options needed: /MW /Zi
C TheApp.for (QuickWin app)
<P>
<PRE>      program TheApp
          integer i, j
          common /TheBlock/ i, j
          !ms$attributes dllimport :: TheBlock

          call initcommon()
          print *, i, j
      end

</PRE></OL><h3>DLL</h3>
 
<P>
C Compile options needed: /LD /Zi
C TheDll.for (DLL for TheApp)
<P>
<PRE>      subroutine initcommon()
          !ms$attributes dllexport :: initcommon
          integer i, j
          common /TheBlock/ i, j
          !ms$attributes dllexport :: TheBlock

          i = 5
          j = 7
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: WBDebug
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 9, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
