

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FORTRAN and C Character String and Integer Array </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q63308 ">
<META NAME="KBModify" CONTENT="1995/07/20">
<META NAME="KBCreate" CONTENT="1990/06/25">
<META NAME="Keywords" CONTENT="kbprg kbinterop kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  The following code is designed to show passing arrays and character strings from FORTRAN to C and from C to FORTRAN.  MORE INFORMATION  There are two programs here. The first has a FORTRAN main and C subroutine; the second a C main and FORTRAN subr...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QATX,QA4Q,QAH4,QAH7,QAH6,QAD7,QAFF,QAYL,QAIJ,QAJQ,QAPF,QAMA,QAG8,QANY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FORTRAN and C Character String and Integer Array</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 20, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q63308 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following code is designed to show passing arrays and character
strings from FORTRAN to C and from C to FORTRAN.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
There are two programs here. The first has a FORTRAN main and C
subroutine; the second a C main and FORTRAN subroutine. Each program
does essentially the same thing -- passes an array of 5 INTEGER*4 and a
character string to the subroutine, which then prints the values.
<P>
C version 6.0 and FORTRAN version 5.0 were used in this example.
FORTRAN needs to be built with C compatible libraries, and the modules
need to be linked with the /NOE switch. Each module needs to be
compiled with the same floating-point and memory-module options (for
example, /AL /FPi).
<P>
The following is the FORTRAN main:
<P>
<P><h3>Sample Code (.for)</h3>
 
<P>
C Note that the passed string has a zero length C style string
C appended so that it appends a NULL terminating character.
<P>
<PRE>      INTERFACE TO SUBROUTINE CPRINT [C] (I,STRING)
      INTEGER*4 I [REFERENCE]
      CHARACTER*(*) STRING [REFERENCE]
      END

      PROGRAM FMAIN

      INTEGER*4 I(5)
      CHARACTER*255 PRINTSTRING /'This example shows passing an array an
     +d a string.'/

      I(1) = 5
      I(2) = 4
      I(3) = 3
      I(4) = 2
      I(5) = 1


      CALL CPRINT(I,PRINTSTRING//''C)

      END


</PRE>The following is the start of the C subroutine:
<P>
<P><h3>Sample Code (.c)</h3>
 
<P>
<PRE>#include &lt;stdio.h&gt;

void cprint(long int i[], char * printstring)
</PRE>{
<PRE>  int count;

  printf("\n");
  for (count = 0; count &lt; 5;count++)
    printf("\t%li",i[count]);
  printf("\n");

  printf("%s",printstring);
</PRE>}
<P>
The following is the start of the C main program:
<P>
<P><h3>Sample Code (.c)</h3>
 
<P>
extern void fortran fprint (long int *, char *);
<P>
main ()
{
<PRE>    long int i[5];
    char printstring[255] = "This example shows passing an array and"
                            " a string.";

    i[0] = 5;
    i[1] = 4;
    i[2] = 3;
    i[3] = 2;
    i[4] = 1;

    fprint(i,printstring);
</PRE>}
<P>
The following is the start of the FORTRAN subroutine:
<P>
<P><h3>Sample Code (.for)</h3>
 
<P>
C The declaration of PRINTSTRING has to be equal to or less than the
C size of the string passed from C. If it is not, other data will get
C accessed, possibly causing a protection violation under OS/2.
<P>
<PRE>      SUBROUTINE FPRINT (I,PRINTSTRING)
      INTEGER*4 I(*)
      CHARACTER*255 PRINTSTRING

      INTEGER  J

</PRE>C The following line truncates the string at the end of the C string.
C (The C string end-of-string character is CHAR(0).)
<PRE>      PRINTSTRING = PRINTSTRING(1:INDEX(PRINTSTRING,CHAR(0)))

      WRITE (*,*) (I(J),J=1,5)
      WRITE (*,*)
</PRE>C The substring (1:lentrim()) is printed instead of just the
C variable because this way only the characters stored in the
C variable are printed, and not the entire length of the variable
C padded with spaces (255 spaces).
<PRE>      WRITE (*,*) PRINTSTRING(1:LEN_TRIM(PRINTSTRING))
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf  5.00 5.10 mixed<BR>
KBCategory: kbprg kbinterop kbcode<BR>
KBSubcategory: FORTLngIss CLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 20, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
