

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOCERR: CHARACTER and REAL Can EQUIVALENCE on Odd Boundary </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q48868 ">
<META NAME="KBModify" CONTENT="1995/07/18">
<META NAME="KBCreate" CONTENT="1989/09/18">
<META NAME="Keywords" CONTENT="kbprg kbdocerr">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  According to the sample code on Page 165 of the Microsoft FORTRAN  Reference  manual for versions 5.0 and 5.1, when an application uses an EQUIVALENCE statement to match a character array to a REAL value such that the REAL value has an odd-numbered...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAD2,QAH4,QAAP,QAIB,QAL2,QA4Q,QAPN,QAB4,QAWN,QAKE,QDMW,QBXT,QBWI,QA8T,QA5V V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOCERR: CHARACTER and REAL Can EQUIVALENCE on Odd Boundary</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 18, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q48868 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The informaiton in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.01, 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
According to the sample code on Page 165 of the Microsoft FORTRAN
"Reference" manual for versions 5.0 and 5.1, when an application uses an
EQUIVALENCE statement to match a character array to a REAL value such that
the REAL value has an odd-numbered memory address, the compiler generates
an error. This statement is incorrect; the sample code that demonstrates
this situation compiles without error.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following statement appears on Page 165 of the Microsoft FORTRAN
"Reference" manual for versions 5.0 and 5.1 and on Page 211 of the
Microsoft FORTRAN "Language Reference" manual for versions 4.01 and 4.1:
<P>
<PRE>   Microsoft FORTRAN permits character and noncharacter entities to be
   associated, but not in such a way that noncharacter entities start on an
   odd-byte boundary. If necessary, the compiler adjusts the storage
   location of the character entity so the noncharacter entity begins on an
   even byte. The following example causes a compile-time error:

      CHARACTER 1 char1(10)
      REAL reala, realb
      EQUIVALENCE (reala, char1(1))
      EQUIVALENCE (realb, char1(2))

</PRE>An asterisk is missing from the character array declaration in the manual.
The first line should read as follows:
<P>
<PRE>      CHARACTER*1 char1(10)

</PRE>This line of code has been corrected in the FORTRAN PowerStation Language
Help.
<P>
The corrected code compiles correctly.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>      CHARACTER*1 CHAR1(10)
      INTEGER*1 REALA, REALB
      EQUIVALENCE (REALA, CHAR1(1))
      EQUIVALENCE (REALB, CHAR1(2))
      REALA = 4
      REALB = 5
      WRITE(*,*) REALA, REALB
      WRITE(*,*) ICHAR(CHAR1(1)), ICHAR(CHAR1(2))
      END

</PRE>Compiling the code above produces the following output:
<P>
<PRE>          4           5
          4           5

</PRE>The following information is available in the .LST style:
<P>
 
<PRE>Name                      Class   Type              Size   Offset

CHAR1 . . . . . . . . . . local   CHAR*1              10    0002
REALA . . . . . . . . . . local   INTEGER*1            1    0002
REALB . . . . . . . . . . local   INTEGER*1            1    0003
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.01 4.10 5.00 5.10<BR>
KBCategory: kbprg kbdocerr<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 18, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
