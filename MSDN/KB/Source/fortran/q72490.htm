

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Incorrect Results Using Array Element in IBSET Function </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72490 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1991/05/29">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An application provides incorrect results. When the application is compiled with Microsoft FORTRAN version 4.0 for MS-DOS, it provides correct results.  CAUSE =====  The application stores an array in a COMMON block. The application uses as an arra...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QAH4,QAYL,QAY5,QAL3,QBV8,QAR4,QBFY,QAB9,QAIF,QAAP,QAKP,QBE7,QBE6,QA8T V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Incorrect Results Using Array Element in IBSET Function</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72490 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.01 4.10 5.00 5.10 | 4.10 5.00 5.10
<PRE>MS-DOS              | OS/2
</PRE>kbtool kbbuglist kbfixlist kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.01, 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application provides incorrect results. When the application is compiled
with Microsoft FORTRAN version 4.0 for MS-DOS, it provides correct results.
<P>
<P><h2>CAUSE</h2>
 
<P>
The application stores an array in a COMMON block. The application uses as
an array subscript a variable that is the first argument to the IBSET
intrinsic function. The application assigns to that element the value
returned from the IBSET intrinsic function.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, perform one of the following three steps:

<UL><LI>Modify the source code to assign the array element to a
   temporary variable and specify the variable in the IBSET
   intrinsic function.
<P>
   -or-

<LI>Specify the /Od or /4Yb compiler option switch to disable loop
   optimization.
<P>
   -or-

<LI>Modify the source code to place an executable statement between
   the calls to the IBSET intrinsic function.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN versions 4.01, 4.1,
5.0, and 5.1 for MS-DOS and versions 4.1, 5.0, and 5.1 for OS/2. This
problem was corrected in FORTRAN PowerStation, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates this problem.
<P>
<P><h3>Sample Code #1</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER*2 ARR(1)
      COMMON /BLOC/ ARR
      I = 1
      ARR = 0

</PRE>C Setting bit 0 of 00000000 correctly produces 00000001 (1 decimal).
<P>
<PRE>      ARR(I) = IBSET(ARR(I), 0)

</PRE>C Setting bit 1 of 00000001 should produce 00000011 (3 decimal)
C but instead produces 00000010 (2 decimal).
<P>
<PRE>      ARR(I) = IBSET(ARR(I), 1)
      WRITE(*, '(1X, ''Result of second IBSET call = '', I1)') ARR
      END

</PRE>The following code example demonstrates one technique to eliminate
this problem. It assigns the array element to a temporary variable and
specifies the variable in the IBSET function call.
<P>
<P><h3>Sample Code #2</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER*2 ARR(1), TMP
      COMMON /BLOC/ ARR
      I = 1
      ARR = 0

      ARR(I) = IBSET(ARR(I), 0)
      TMP = ARR(I)
      ARR(I) = IBSET(TMP, 1)

      WRITE(*, '(1X, ''Result of second IBSET call = '', I1)') ARR
      END

</PRE>The following code example demonstrates another technique to eliminate
this problem. It places an executable statement between the two IBSET
function calls.
<P>
<P><h3>Sample Code #3</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER*2 ARR(1)
      COMMON /BLOC/ ARR
      I = 1
      ARR = 0

      ARR(I) = IBSET(ARR(I), 0)
      WRITE(*, '(1X, ''Result of first IBSET call = '', I1)') ARR
      ARR(I) = IBSET(ARR(I), 1)

      WRITE(*, '(1X, ''Result of second IBSET call = '', I1)') ARR
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.01 4.10 5.00 5.10 buglist4.01 buglist4.10<BR>
buglist5.00 buglist5.10 fixlist1.00<BR>
KBCategory: kbtool kbbuglist kbfixlist kbcode<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
