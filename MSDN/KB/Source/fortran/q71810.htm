

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Incorrect Results When ISHFT, ISHL in ISHFT or ISHL Call </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q71810 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1991/05/03">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An application produces incorrect results. Specifying the /Od compiler option switch and recompiling does not change the results. When you compile the application with Microsoft FORTRAN version 4.0, it produces correct results.  CAUSE =====  The ap...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMN,QACI,QBFY,QAH4,QAR4,QAMV,QAL3,QAKC,QA8T,QAY5,QAAP,QBV8,QDKW V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Incorrect Results When ISHFT, ISHL in ISHFT or ISHL Call</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q71810 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.01 4.10 5.00 5.10 | 4.10 5.00 5.10
<PRE>MS-DOS              | OS/2
</PRE>kbtool kbbuglist kbfixlist kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.01, 4.1, 5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application produces incorrect results. Specifying the /Od compiler
option switch and recompiling does not change the results. When you compile
the application with Microsoft FORTRAN version 4.0, it produces correct
results.
<P>
<P><h2>CAUSE</h2>
 
<P>
The application uses an ISHFT or ISHL logical shift intrinsic function as
an argument to another ISHFT or ISHL logical shift intrinsic function.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To work around this problem, modify the source code to store the results of
one logical shift operation in a temporary variable. Specify the variable
as the argument to the other logical shift instruction.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN versions 4.01, 4.1,
5.0, and 5.1. This problem was corrected in FORTRAN PowerStation, version
1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates this problem.
<P>
<P><h3>Sample Code #1</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER IN, SHIFT, I
      IN = 2
      SHIFT = 4
      WRITE (*, *) 'input number to be shifted   ', IN
      WRITE (*, *) '# of bits to shift           ', SHIFT
C
</PRE>C Shifting the number 00000010 (2 decimal) logically left by 4 bits
C then logically right by 4 bits should produce 00000010 (2 decimal).
C However, this code produces 00000000 (0 decimal).
C
<PRE>      I = ISHFT(ISHFT(IN, SHIFT), -SHIFT)
      WRITE(*, *) 'input shifted over and back  ', I

      END

</PRE>This application produces the following output:
<P>
<PRE>input number to be shifted           2
# of bits to shift                   4
input shifted over and back          0

</PRE>It is designed to produce the following output:
<P>
<PRE>input number to be shifted           2
# of bits to shift                   4
input shifted over and back          2

</PRE>Substituting the ISHL logical shift intrinsic function for the ISHFT
logical shift intrinsic function produces the same incorrect results.
<P>
To work around this problem, split the logical shift functions into
two separate expressions. The following code example demonstrates this
technique.
<P>
<P><h3>Sample Code #2</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER IN, SHIFT, I, TMP
      IN = 2
      SHIFT = 4
      WRITE (*, *) 'input number to be shifted   ', IN
      WRITE (*, *) '# of bits to shift           ', SHIFT
C
</PRE>C Shifting 00000010 (2 decimal) logically left by 4 bits
C produces the value 00100000 (32 decimal).
C
<PRE>      tmp = ISHFT(in, shift)
</PRE>C
C Shifting 00100000 (32 decimal) logically right by 4 bits
C produces the value 00000010 (2 decimal).
C
<PRE>      I = ISHFT(TMP, -SHIFT)
      WRITE (*, *) 'input shifted over and back  ', I

      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.01 4.10 5.00 5.10 buglist4.01 buglist4.10<BR>
buglist5.00 buglist5.10 fixlist1.00<BR>
KBCategory: kbtool kbbuglist kbfixlist kbcode<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
