

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: LEN_TRIM Appears to Return Incorrect String Length </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q89131 ">
<META NAME="KBModify" CONTENT="1995/12/11">
<META NAME="KBCreate" CONTENT="1992/09/10">
<META NAME="Keywords" CONTENT="kbprg kbcode kbprb">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  LEN_TRIM may appear to return an incorrect trimmed string length. This occurs when the string in the calling routine is not initialized and the subprogram's formal argument declares the character string smaller than the original string's length.  C...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QATX,QAUD,QAAP,QAGI,QAG0,QAR4,QAH4,QALW,QBWP,QAOX,QAI4,QAWN,QAKE,QACJ,QBW5 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: LEN_TRIM Appears to Return Incorrect String Length</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q89131 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
<LI>Microsoft FORTRAN PowerStation for MS-DOS, versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0 and
   4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
LEN_TRIM may appear to return an incorrect trimmed string length. This
occurs when the string in the calling routine is not initialized and the
subprogram's formal argument declares the character string smaller than the
original string's length.
<P>
<P><h2>CAUSE</h2>
 
<P>
All bytes in uninitialized strings are set to zero (null characters). When
a string is initialized, any unused bytes are padded with spaces to the end
of the string. The padding is done to the size that is declared in the
routine in which the string is initialized. If a string is passed to a
routine that declares the string size to be smaller then it was defined,
the string will be incompletely padded with spaces. Upon return to the
routine where the string was declared, the string will still have null
characters at the end. The LEN_TRIM intrinsic function only parses for
spaces and will stop immediately when it detects the final null character.
This will appear to be incorrect because most editors display null
characters as blanks.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
LEN_TRIM works correctly if the string lengths are declared equal in all
routines that the use the string. Also, initializing the string to all
spaces in the routine in which it is originally declared will also correct
the problem.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Code to Reproduce Problem</h3>
 
<P>
<PRE>      character work*80
      integer len

      call getstr(work)
      len = LEN_TRIM(work)
      print *,len             ! len will be 80
      end

      subroutine getstr(outstr)
      character outstr*45
      outstr = 'This is a test'
      return
      end


</PRE><h3>Code to Correct Problem</h3>
 
<P>
<PRE>      character work*80
      integer len

      work = ' '
      call getstr(work)
      len = LEN_TRIM(work)
      print *,len             ! len will be 14
      end

      subroutine getstr(outstr)
      character outstr*45
      outstr = 'This is a test'
      return
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 5.00 5.10 1.00<BR>
KBCategory: kbprg kbcode kbprb<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
