

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Avoid "Program Too Large for Memory" </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67194 ">
<META NAME="KBModify" CONTENT="1995/07/19">
<META NAME="KBCreate" CONTENT="1990/11/22">
<META NAME="Keywords" CONTENT="kbprg kberrmsg">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When you attempt to run a very large program in MS-DOS, the error  Program Too Large For Memory  may occur. MS-DOS runs in real mode, which does not allow more than 640K of memory for applications. This article discusses possible methods to circumv...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBW6,QAH4,QAPN,QAD2,QAJZ,QAJQ,QBW7,QAI5,QAYY,QAC9,QDIR,QBWG,QA5V,QAAP,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to Avoid "Program Too Large for Memory"</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 19, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67194 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS and OS/2 versions 4.1, 5.0, and 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When you attempt to run a very large program in MS-DOS, the error
"Program Too Large For Memory" may occur. MS-DOS runs in real mode,
which does not allow more than 640K of memory for applications. This
article discusses possible methods to circumvent this limitation.
These methods include using the OS/2 operating system instead of DOS,
direct-access disk file(s) for data storage, ALLOCATABLE arrays, and
overlays.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Using Expanded and Extended Memory with Microsoft FORTRAN</h3>
 
<P>
Some DOS applications can use an expanded memory manager (EMM) driver
program and expanded memory board(s) to access memory beyond the 1 MB
limit of conventional memory. Microsoft FORTRAN, however, does not
have the capability to use expanded memory. It can utilize extended
memory (above 1 MB), but only when used with the OS/2 operating system
and protected mode libraries. Extended memory is the term used to
refer to the memory at physical addresses above 1 MB that can be
accessed by an 80286 or 80386 CPU in protected mode.
<P>
<P><h3>Using a Direct Access Disk File to Store Large Amounts of Data</h3>
 
<P>
A disk drive can be used to store large amounts of data in a direct-
access disk file, thus freeing up the memory that would otherwise be
used by the data. By using a direct-access file, records can be read
from or written to in any order, simulating the use of an array. If
expanded or extended memory is available, it can be used for a RAM
drive. By using a RAM drive, I/O access to the data is much faster
than when using a fixed disk drive.
<P>
<P><h3>Using Allocatable Arrays in FORTRAN Version 5.00</h3>
 
<P>
An ALLOCATABLE array is an array that is dynamically sized at run time
by using the ALLOCATE statement and the ALLOCATABLE attribute (see
pages 21-25 of the "Microsoft FORTRAN Reference" manual). The ALLOCATE
statement (see pages 113-114 of the "Microsoft FORTRAN Reference"
manual) establishes the upper and lower bounds of each ARRAY dimension
and reserves sufficient memory. The array can then be DEALLOCATED at
run time by using the DEALLOCATE statement (see page 143 of the
"Microsoft FORTRAN Reference" manual) to free memory for use by other
arrays.
<P>
For example:
<P>
<PRE>  INTEGER data [ALLOCATABLE] (:,:)
  INTEGER error
  DATA i, j / 10,50 /
  ALLOCATE (data (i,j), STAT=error)

  DEALLOCATE (data, STAT=error)

</PRE><h3>Using Overlays in FORTRAN Versions 4.00, 4.01, 4.10, and 5.00</h3>
 
<P>
Overlays (see pages 366-367 of the "Microsoft FORTRAN Reference"
manual for versions 5.00 and pages 258-260 of the "Microsoft FORTRAN
CodeView and Utilities User's Guide") allow several program modules to
use the same memory area. When needed, a module or group of modules is
loaded into memory from the disk. Module access time can be shortened
if a RAM drive is used to store the executable. Modules that are to be
overlaid are enclosed in parentheses. CODE (but NEVER DATA) is
overlaid. Note: If the program consists of mostly DATA, then this
procedure will be of little help.
<P>
The following example is for versions 4.00, 4.01, 4.10, and 5.00:
<P>
<PRE>   At LINK command line: LINK A (B C) (E F)

   Object modules B and C are swapped in and out of the same memory for
   Object modules E and F. Note: Object modules in parentheses are
   overlaid together so that they will be loaded into memory at the
   same time.

</PRE>The following example is for versions 4.10 and 5.00:
<P>
<PRE>   At FL command line: FL MAIN.FOR (OVER1.FOR) (OVER2.FOR)

   FORTRAN code modules OVER1 and OVER2 are swapped in and out of the
   same memory location.
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf  4.10 5.00 5.10<BR>
KBCategory: kbprg kberrmsg<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 19, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
