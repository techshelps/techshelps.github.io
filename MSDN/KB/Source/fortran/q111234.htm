

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: ISHFT and ISHL Always Assume 4-Byte Integers </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q111234">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/02/08">
<META NAME="Keywords" CONTENT="FORTLngIss kbbuglist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  The ISHL and ISHFT intrinsic functions may return incorrect results when shifting INTEGER*1 or INTEGER*2 variables. The incorrect results occur only when right-shifting negative values.  CAUSE =====  The compiler converts the value to be shifted to...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAMN,QA4Q,QACI,QBWP,QAKD,QAR4,QALG,QBFY,QBE7,QBE6,QA8T,QAM1,QAH4,QAAP,QAPF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: ISHFT and ISHL Always Assume 4-Byte Integers</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q111234</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.0a | 1.00
<PRE>MS-DOS    | WINDOWS NT
</PRE>kbtool kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS, version 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
The ISHL and ISHFT intrinsic functions may return incorrect results when
shifting INTEGER*1 or INTEGER*2 variables. The incorrect results occur only
when right-shifting negative values.
<P>
<P><h2>CAUSE</h2>
 
<P>
The compiler converts the value to be shifted to a 4-byte value. For 1- and
2-byte negative integers, the higher order bits are filled with 1s, which
can be incorrectly shifted into the low order bytes.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Convert the bit pattern of the negative INTEGER*1 or INTEGER*2 value to an
unsigned INTEGER*4 value. This is done by adding 256 to a negative
INTEGER*1 value or by adding 65536 to a negative INTEGER*2 value. Then
shift the resulting INTEGER*4 value.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN PowerStation 32 for
Windows NT version 1.0 and MS-DOS version 1.0 and 1.0a. This problem was
fixed in FORTRAN PowerStation 32, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample illustrates the problem:
<P>
<P><h3>Sample Code #1</h3>
 
<P>
c Compile options needed: none
c
<PRE>      integer*2 i2
      integer*1 i1
      i1 = -123
      i2 = i1
      write(*,'('' Before shift '',Z2,2x,z4)') i1, i2
      write(*,'('' After shift  '',Z2,2x,z4)') ishl(i1,-2), ishl(i2,-2)
      end

</PRE><h3>Output</h3>
 
<P>
Before shift  85  FF85
<PRE>After shift   E1  FFE1

</PRE>The following code illustrates the article's resolution:
<P>
<P><h3>Sample Code #2</h3>
 
<P>
c Compile options needed: none
c
<PRE>      integer*4 j,k
      integer*2 i2
      integer*1 i1
      i1 = -123
      i2 = i1
      j = 256 + i1
      k = 65536 + i2
      write(*,'('' Before shift '',Z2,2x,z4)') i1, i2
      write(*,'('' After shift  '',Z2,2x,z4)') ishl(j,-2), ishl(k,-2)
      end

</PRE><h3>Output</h3>
 
<P>
Before shift  85  FF85
<PRE>After shift   21  3FE1
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00<BR>
KBCategory: kbtool kbbuglist<BR>
KBSubcategory: FORTLngIss<BR>
Keywords          : FORTLngIss kbbuglist kbtool<BR>
Version           : 1.00 1.0a | 1.00<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
