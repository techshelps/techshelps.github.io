

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: Implied Do-loop Ignores END=Label in READ at End of File </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72919 ">
<META NAME="KBModify" CONTENT="1995/12/11">
<META NAME="KBCreate" CONTENT="1991/06/14">
<META NAME="Keywords" CONTENT="kbprg kbbuglist">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  A program compiled with Microsoft FORTRAN, that uses an implied DO-loop in a READ statement that has the END=label or ERR=label directive, will not branch to the specified label if the loop reads past the end of the file. The implied DO-loop will c...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAC2,QA5V,QAMB,QBFN,QBCF,QAM3,QAYV,QBCE,QAB4,QAVS,QA8T,QAKP,QBFY,QAY2,QDMH V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: Implied Do-loop Ignores END=Label in READ at End of File</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  December 11, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72919 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
<LI>Microsoft FORTRAN PowerStation for MS-DOS versions 1.0 and 1.0a
<LI>Microsoft FORTRAN PowerStation 32 version 1.0 and 4.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A program compiled with Microsoft FORTRAN, that uses an implied DO-loop in
a READ statement that has the END=label or ERR=label directive, will not
branch to the specified label if the loop reads past the end of the file.
The implied DO-loop will continue to completion with no error and without
branching to the end label. The elements of the array that cannot be read
from the file are filled with zeros.
<P>
<P><h2>CAUSE</h2>
 
<P>
There is no way to trap the end-of-file condition in the middle of reading
an implied DO-loop.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To obtain predictable results when using implied DO-loops, ensure that
there is sufficient data in each record to fill all the elements of the
array that is being read into. The END=label specifier cannot be relied
upon to trap insufficient data on the final record.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a bug in the Microsoft products listed
at the beginning of this article. We are researching this problem and will
post new information here in the Microsoft Knowledge Base as it becomes
available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
This is not a problem with the run-time handling of the END= or ERR=
directives in READ statements. When an implied DO-loop reads past the
amount of data on a record, the default run-time end-of-record
handling fills the remaining array elements with zeros. This occurs
even on the last record in a file. The end of file is not encountered
when an implied DO-loop runs out of data on the final record in a
file. The end-of-record condition is met first, and the remainder of
the array is filled with zeros without allowing the end of file to be
read. If another READ statement occurred at this point, the end of
file would be encountered.
<P>
The following program creates a data file with only 7 elements on a
single record. It then rewinds the file and reads 50 elements from
this single record. Neither the END= label nor the ERR= label is
branched to, and the 43 extra records are filled with zeros.
<P>
<PRE>      program test
      real*4 arr(50)

</PRE>c Fill the array with numbers from 1 to 50.
<P>
<PRE>      do 10,j=1,50
      arr(j) = float(j)
</PRE>10    continue
<P>
<PRE>      open(8,file='junkk')

</PRE>c Write only 7 elements to the single record in the file.
<P>
<PRE>      write(8,100) (arr(i), i=1,7)

      rewind(8)

</PRE>c Read 50 elements from the file.
<P>
<PRE>      read(8,200,end=300,err=250) (arr(i),i=1,50)

      write(*,*) arr

</PRE>100   format(7f10.2)
200   format(50f10.2)
<P>
c Branch to the end to avoid error messages.
<P>
<PRE>      stop 'No branch to error or end labels'

</PRE>250   write(*,*) 'got to error label'
300   write(*,*) 'got to the end of file label'
<P>
<PRE>      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 4.00 5.00 5.10<BR>
KBCategory: kbprg kbbuglist<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  December 11, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
