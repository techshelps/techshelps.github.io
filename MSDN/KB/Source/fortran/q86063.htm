

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: F6099: Int Overflow Unreported on Exponential Math </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q86063 ">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1992/06/28">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Programs compiled with Microsoft FORTRAN version 4.0, 4.01, 4.1, 5.0, or 5.1 with the /4Yb compiler option or the $DEBUG metacommand may not report the following run-time error message     run-time error F6099: $DEBUG    - INTEGER overflow  if an i...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QA4Q,QABI,QA19,QBB2,QAB4,QABH,QAH4,QAAP,QBSO,QAVX,QAR4,QAN2,QAKP,QBVV,QAOT V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: F6099: Int Overflow Unreported on Exponential Math</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q86063 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10 5.00 5.10 | 4.10 5.00 5.10
<PRE>MS-DOS                   | OS/2
</PRE>kbtool kbbuglist kbfixlist kberrmsg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.01, 4.1, 5.0, and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, and 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Programs compiled with Microsoft FORTRAN version 4.0, 4.01, 4.1, 5.0, or
5.1 with the /4Yb compiler option or the $DEBUG metacommand may not report
the following run-time error message
<P>
<PRE>   run-time error F6099: $DEBUG
   - INTEGER overflow

</PRE>if an integer is raised to a power, which is an integer other than 2. If
the exponent is a REAL number, the following error may be generated:
<P>
<PRE>   run-time error M6101: MATH
   -floating-point error:invalid

</PRE><h2>CAUSE</h2>
 
<P>
The /4Yb compiler option or $DEBUG metacommand directs the compiler to do
testing for INTEGER overflow, but it fails to do this for the exponential
arithmetic if the exponent is an integer other than 2. If the exponent is
2, the algorithm is implemented as simple multiplication and the INTEGER
overflow error is generated. In the case of REAL exponents, INTEGER
overflow is still incorrectly not being checked; however, a floating-point
math exception eventually is generated because intermediate values are
being computed using floating-point values.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Code should be written to check INTEGERS that are raised to a power for
overflow.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft FORTRAN versions
4.0, 4.01, 4.1, 5.0, and 5.1 for MS-DOS and OS/2. This problem was
corrected in FORTRAN PowerStation, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code reproduces the problem:
<P>
<P><h3>Sample Code 1</h3>
 
<P>
$debug
<PRE>      integer i, j, m

      m = 500
      do i=1,100000
        j=m**i ! This line will not generate an INTEGER overflow.

        k=(m+i*1000)**2
</PRE>c This line will generate the overflow error because n**2 is
c implemented as multiplication (n*n) and doesn't use exponentiation.
<P>
<PRE>        write(*,*) 'j=',j
        write(*,*) 'k=',k
      end do
      end

</PRE><h3>Sample Code 2</h3>
 
<P>
The following code is an example of a way of avoiding INTEGER overflows.
<P>
$debug
<PRE>      integer i
      real    max, check

      max = huge(i)
      k = 500

      do i=1,100000
        check = max**float( 1./float(i) )
        print*, i , check , k**i
        if (float(k).ge.check) stop 'Integer overflow'
      end do
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.10 5.00 5.10 buglist5.00 buglist5.10<BR>
fixlist1.00<BR>
KBCategory: kbtool kbbuglist kbfixlist kberrmsg kbcode<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
