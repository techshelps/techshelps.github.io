

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: F6700 Heap Space Exceeded </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q125468">
<META NAME="KBModify" CONTENT="1995/07/17">
<META NAME="KBCreate" CONTENT="1995/01/29">
<META NAME="Keywords" CONTENT="kbprg kberrmsg kbprb">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When you run a QuickWin program and try to allocate a huge array dynamically, the return code may be 6700. The associated error message, as documented in the FORTRAN Professional Development System on page 489, is:     F6700 heap space limit exceed...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QBFY,QAH4,QAAP,QAIB,QAR6,QAMB,QABN,QBJQ,QANY,QACJ,QBW5,QA5E,QAOT,QAEB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: F6700 Heap Space Exceeded</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q125468</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN Compiler for MS-DOS, version 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When you run a QuickWin program and try to allocate a huge array
dynamically, the return code may be 6700. The associated error message, as
documented in the FORTRAN Professional Development System on page 489, is:
<P>
<PRE>   F6700 heap space limit exceeded

</PRE><h2>CAUSE</h2>
 
<P>
One cause of the error may be attempting to allocate a huge array (greater
than 64K) where the data items do not align on 64K segment boundaries.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Change the data type such that the array will align on the 64K boundary.
<P>
<P><h2>STATUS</h2>
 
<P>
This behavior is by design.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
If you attempt to dimension the huge array statically, the compiler
produces this error:
<P>
<PRE>   F2120 : &lt;array name&gt;: huge array cannot be aligned to segment boundary

</PRE>Compiling and running the following code sample produces an output for
<PRE>'istat' of 6700, indicating the heap space was exceeded and no dynamic
</PRE>memory was allocated.
<P>
If you change the line declaring the array 'str' as allocatable into a
comment, and change the static declaration from a comment into an excuted
line, the compiler produces the F2120 error.
<P>
Changing the declaration to:
<P>
<PRE>   CHARACTER*16 str(10, 6400)

</PRE>eliminates the error in both cases.
<P>
<P><h3>Sample Code</h3>
 
<P>
<PRE>/* Compile options needed: /MW
*/

      PROGRAM testmem
</PRE>C     QuickWin application so we can use more than 640K
C
C     Create an allocatable array over 64K
<P>
<PRE>      CHARACTER*12 str[ALLOCATABLE, HUGE](:,:)

</PRE>C     Creating the array statically produces the F2120 error
<P>
C      CHARACTER*12 str(10, 6400)
<PRE>      INTEGER istat

</PRE>C     The allocate should fail with error 2120
C     since a single string crosses a segment boundary
C     but instead produces an error 6700
C     indicating heap space limit exceeded
<P>
<PRE>      ALLOCATE(str(10, 6400), stat=istat)
      PRINT*, "Error code (0 is success) = ", istat

      IF(istat .eq. 0) THEN
           DEALLOCATE(str)
      END IF

      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 fail memory allocation<BR>
KBCategory: kbprg kberrmsg kbprb<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
