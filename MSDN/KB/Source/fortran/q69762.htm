

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Mixed Type Expressions Cause F2124: Code Generation Error </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q69762 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1991/03/01">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Using Microsoft FORTRAN 5.0 or 5.1 to compile a program that uses mixed data types in an expression can cause the compiler to hang the machine under DOS, generate a protection violation under OS/2, or result in the following error:     F2124: Code ...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAAP,QAB4,QAH4,QBFY,QAOT,QAP2,QAKP,QABE,QAHH,QAR4,QAJQ,QAUD,QAKJ,QAGX,QAYY V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Mixed Type Expressions Cause F2124: Code Generation Error</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q69762 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.10 5.00 5.10 | 4.10 5.00 5.10
<PRE>MS-DOS              | OS/2
</PRE>kbtool kbfixlist kbbuglist kberrmsg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.1, 5.0, and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Using Microsoft FORTRAN 5.0 or 5.1 to compile a program that uses
mixed data types in an expression can cause the compiler to hang the
machine under DOS, generate a protection violation under OS/2, or
result in the following error:
<P>
<PRE>   F2124: Code Generation Error

</PRE>In some cases, the compiler will generate the following error:
<P>
<PRE>   fatal error F1001: Internal Compiler Error
               (compiler file '@(#)mactab.c:1.2', line 663)

</PRE>Explicitly converting all variables and constants to the same type
will suppress the error.
<P>
In some cases, the error is suppressed by optimization (for example,
using /Ox, or by not using the /Od compiler option during
compilation). In other cases, the problem is more severe when using
optimization.
<P>
<P><h2>CAUSE</h2>
 
<P>
The following sample programs illustrate the problems.
<P>
<P><h3>Using COMPLEX and REAL Data Types</h3>
 
<P>
<PRE>       subroutine x(a,c,d)
       complex*16 a, d, b
       b = (1.0,0)
       a = a * (-b) * c * d
       return
       end

</PRE>The above program must be compiled with the /Od switch to cause the
code generation error.  In some cases, the /FPc option may be
necessary to generate F2124.
<P>
Using COMPLEX instead of COMPLEX*16 will generate the following error:
<P>
<PRE>   fatal error F1001: Internal Compiler Error
               (compiler file '@(#)mactab.c:1.2', line 663)

</PRE><h3>Using REAL and INTEGER Data Types</h3>
 
<P>
<PRE>       real a,b,c
       b = 1.0
       c = 2.0
       a = 4 * b * (-1) * c
       end

</PRE>Compiling this program under DOS without the /Od compiler option will
cause the compiler to hang the computer. When compiling under OS/2, a
protection violation is generated by the second pass of the compiler.
Using the /Od compiler option results in the following error:
<P>
<PRE>   F2124: Code Generation Error


</PRE><h2>RESOLUTION</h2>
 
<P>
Explicitly converting the type of all of the variables or constants to
the same type will prevent the errors, as illustrated by the following
sample programs:
<P>
<P><h3>Using COMPLEX and REAL Data Types</h3>
 
<P>
<PRE>       subroutine x(a,c,d)
       complex*16 a, d, b
       b = (1.0,0)
       a = a * (-b) * dcmplx(c) * d    ! Convert real data type to
                                       ! double precision complex
                                       ! data type to match other
                                       ! types.
       return
       end


</PRE><h3>Using REAL and INTEGER Data Types</h3>
 
<P>
<PRE>       real a,b,c
       b = 1.0
       c = 2.0
       a = 4.0 * b * (-1.0) * c        ! Convert integer constants
                                       ! to real constants to match
                                       ! other types.
       end

</PRE><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft FORTRAN versions
5.0 and 5.1 for MS-DOS and OS/2. This problem was corrected in FORTRAN
PowerStation.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 5.10<BR>
KBCategory: kbtool kbfixlist kbbuglist kberrmsg<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
