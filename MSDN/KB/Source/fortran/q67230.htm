

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: No Error When Out-of-Range Value Read Into INTEGER*1 </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q67230 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1990/11/28">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When an application reads a value less than -128 or larger than 127 into an INTEGER*1 variable, no run-time error occurs. Compiling with the /4Yb compiler option switch or the $DEBUG metacommand does not change the observed results.  CAUSE =====  T...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAUD,QAAP,QAKD,QAB4,QA4Q,QALG,QAY4,QAR4,QAKP,QALW,QBFN,QAYL,QAH4,QANY,QAKC V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: No Error When Out-of-Range Value Read Into INTEGER*1</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q67230 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10 5.00 | 4.10 5.00
<PRE>MS-DOS              | OS/2
</PRE>kbtool kbbuglist kbfixlist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.01, 4.1, 5.0
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When an application reads a value less than -128 or larger than 127
into an INTEGER*1 variable, no run-time error occurs. Compiling
with the /4Yb compiler option switch or the $DEBUG metacommand does
not change the observed results.
<P>
<P><h2>CAUSE</h2>
 
<P>
The run-time error management routine inspects the first byte of
the input value to determine if it is in range and ignores the
remaining bytes.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN versions
4.0, 4.01, 4.1, and 5.0 for MS-DOS and versions 4.1 and 5.0 for
OS/2. This problem was corrected in FORTRAN version 5.1 for MS-DOS
and OS/2.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
When an application reads an integer smaller than -127 or larger than
128 into an INTEGER*1 variable, the run-time library is designed to
produce the following error:
<P>
<PRE>   run-time error F6100:  READ
   -INTEGER overflow on input

</PRE>The observed behavior is as follows:
<P>
<PRE>      127 =  01111111               Returns the value 127
      128 =  10000000               Returns run-time error
      255 =  00000000 11111111      Returns run-time error
      256 =  00000001 00000000      Returns the value 0

</PRE>Therefore, if the first byte is out of range, the application
correctly generates an error. However, if the first byte is in range,
the program ignores the other bytes, produces no error, and returns
the value of the first byte.
<P>
Entering the values into the code example below produces corresponding
results, as follows:
<P>
<PRE>    0-127     Returns proper value
    128-255   Causes a Run-Time Error (RTE) as expected
    256-383   Returns value minus 256 (should cause an RTE)
    384-511   Causes an RTE

</PRE>This cycle repeats every 128 values.
<P>
<P><h3>Sample Code</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      INTEGER*1 I
</PRE>10    READ (*, *) I
<PRE>      WRITE (*, *) I
      GOTO 10
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 4.00 4.01 4.10 5.00 buglist4.00 buglist4.01<BR>
buglist4.10 buglist5.00 fixlist5.10<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
