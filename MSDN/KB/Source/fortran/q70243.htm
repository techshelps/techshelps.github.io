

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Concatenation of Substring Gives Incorrect Results </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q70243 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1991/03/15">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  Programs compiled with Microsoft FORTRAN versions 4.0, 4.01, 4.1, and 5.0 that concatenate substrings having a variable for a substring index, can give incorrect results or hang the machine when executed under MS-DOS, or result in a protection viol...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAYL,QA28,QATJ,QAB9,QBF0,QA8T,QAOX,QAY5,QAPN,QA6N,QAR4,QAKP,QAL3,QAGI,QAAP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Concatenation of Substring Gives Incorrect Results</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q70243 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
4.00 4.01 4.10 5.00 5.10 | 4.10 5.00 5.10
<PRE>MS-DOS                   | OS/2
</PRE>kbtool kbfixlist kbbuglist
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 4.0, 4.01, 4.1, 5.0, and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, and 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
Programs compiled with Microsoft FORTRAN versions 4.0, 4.01, 4.1,
and 5.0 that concatenate substrings having a variable for a
substring index, can give incorrect results or hang the machine when
executed under MS-DOS, or result in a protection violation when executed
under OS/2.
<P>
<P><h2>CAUSE</h2>
 
<P>
The problem is usually observed when the concatenation occurs inside a
function call, or inside OPEN or IF statements.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
To avoid this problem, assign the concatenated expression to a
temporary character variable and use the temporary variable in the
program.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN versions 4.0,
4.01, 4.1, 5.0, and 5.1. This problem was corrected in FORTRAN
PowerStation.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following sample programs illustrate the problem:
<P>
<P><h3>In an IF Statement</h3>
 
<P>
<PRE>      character r*2 /'AA'/
      n=0

      if ('BBB' .gt. r(1:n+2)//'A') then  ! The IF statement should
                                          ! cause 'YES' to be printed,
                                          ! however 'NO' is printed
                                          ! instead.
         write (*,*) 'YES'
      else
         write (*,*) 'NO'
      endif

      if ('BBB' .gt. r(1:2)//'A') then
         write (*,*) 'YES'
      else
         write (*,*) 'NO'
      endif

      end


</PRE><h3>In a Function</h3>
 
<P>
<PRE>      character*4  a
      character*1  b

      a = 'cdef'
      b = 'd'
      i = len(a)
      print *, i
      j = index('ab'//a(1:i),b)  ! The INDEX function should cause '4'
                                 ! to be printed, however other values
                                 ! are generated instead.
      print *, j
      end

</PRE>Assigning the concatenated expression to a temporary character
variable and using the temporary variable in the IF statement or
function call will prevent the problem from occurring, as illustrated
by the following sample programs:
<P>
<P><h3>In an IF Statement</h3>
 
<P>
<PRE>      character r*2 /'AA'/

      character str*13             ! Declare a temporary variable and
      str = r(1:n+2)//'A'          ! assign the concatenated expression
                                   ! to it.

      n = 0

      if ('BBB' .gt. str) then     ! Use the temporary variable in
                                   ! the IF statement.

         write (*,*) 'YES'
      else
         write (*,*) 'NO'
      endif

      if ('BBB' .gt. r(1:2)//'A') then
         write (*,*) 'YES'
      else
         write (*,*) 'NO'
      endif

      end


</PRE><h3>In a Function</h3>
 
<P>
<PRE>      character*4  a
      character*1  b
      character*12 str    ! Declare a temporary variable.

      a = 'cdef'
      b = 'd'
      i = len(a)
      print *, i
      str = 'ab'//a(1:i)  ! Assign the concatenated expression
                          ! to the temporary variable.

      j = index(str,b)    ! Use the temporary variable in the
                          ! index function.
      print *, j
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00<BR>
KBCategory: kbtool kbfixlist kbbuglist<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
