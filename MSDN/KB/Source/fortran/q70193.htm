

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DOCERR: Iteration Count Overflow in 5.0 and 5.1 Manuals </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q70193 ">
<META NAME="KBModify" CONTENT="1995/07/17">
<META NAME="KBCreate" CONTENT="1991/03/15">
<META NAME="Keywords" CONTENT="kbprg kbdocerr kbcode">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  On pages 149 and 150 of the version 5.0 and version 5.1  Microsoft FORTRAN Reference  manual, the iteration count for DO loops is incorrectly stated to default to INTEGER*2 storage. DO loop iteration counts actually appear to default to the same pr...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAIJ,QA4Q,QAYL,QAX0,QAH4,QAG8,QDIV,QAVX,QAGB,QAGN,QA19,QAD2,QASR,QAAP,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>DOCERR: Iteration Count Overflow in 5.0 and 5.1 Manuals</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 17, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q70193 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 5.0 and 5.1
<LI>Microsoft FORTRAN for OS/2, versions 5.0 and 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
On pages 149 and 150 of the version 5.0 and version 5.1 "Microsoft FORTRAN
Reference" manual, the iteration count for DO loops is incorrectly stated
to default to INTEGER*2 storage. DO loop iteration counts actually appear
to default to the same precision as the DO variable, except when the start
value and stop value are constants, rather than variables. In this case,
the DO loop iteration count appears to default to INTEGER*4 storage.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Page 150 states that "The iteration count is computed using two-byte
precision (the default)", and the code on page 150 of the Reference Manual
illustrates an iteration overflow when compiled with /4Yb or $DEBUG.
However, declaring the DO variable 'n' as integer*4 or removing the
IMPLICIT statement removes the iteration overflow, indicating that the
iteration count precision is dependent on the precision of the DO variable.
This is demonstrated by the code below, which both compiles and runs
without errors, even when compiled with /4Yb or $DEBUG:
<P>
<P><h3>Sample code</h3>
 
<P>
$DEBUG
<P>
<PRE>      IMPLICIT INTEGER*2 (A-Z)
      INTEGER*4 N
      stop=32000
      start=0
      step=1200
      DO 100 n=start,stop,step
</PRE>100   CONTINUE
<PRE>      END

</PRE>Declaring the DO variable as INTEGER*2 and the rest of the variables as
INTEGER*4 generates an integer overflow error when compiled with /4Yb or
$DEBUG.
<P>
<P><h3>Sample code</h3>
 
<P>
$DEBUG
<P>
<PRE>      INTEGER*4 start,stop,step
      INTEGER*2 N
      stop=32000
      start=0
      step=1200
      DO 100 n=start,stop,step
</PRE>100   CONTINUE
<PRE>      END

</PRE>Therefore, the iteration count precision is dependent on the precision of
the DO variable. Furthermore, the code on page 149 does not cause the
iteration overflow error as stated.  This code is as follows:
<P>
<P><h3>Sample code</h3>
 
<P>
$DEBUG
<P>
<PRE>      INTEGER*2 i
      DO 10 i=-32000,32000,1
</PRE>10    CONTINUE
<PRE>      END

</PRE>This code executes without error when compiled with /4Yb or $DEBUG,
indicating that when constants are used for the start and stop values, the
iteration count defaults to INTEGER*4 precision.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 5.10 docerr<BR>
KBCategory: kbprg kbdocerr kbcode<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 17, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
