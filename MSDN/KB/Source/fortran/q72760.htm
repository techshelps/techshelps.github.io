

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: F2124 or Incorrect Results From Structure Array Use </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q72760 ">
<META NAME="KBModify" CONTENT="1997/09/11">
<META NAME="KBCreate" CONTENT="1991/06/06">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An attempt to compile an application fails and the compiler may generate the following message:     F2124: CODE GENERATION ERROR           Contact Microsoft Technical Support  Alternately, the application compiles without error but does not generat...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAH4,QA5V,QAB4,QAOX,QAIC,QAAP,QAPF,QAHE,QAKP,QBVV,QAOT,QAKR,QAFF,QBV8,QBBI V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: F2124 or Incorrect Results From Structure Array Use</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 11, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q72760 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.00 5.10 | 5.00 5.10
<PRE>MS-DOS    | OS/2
</PRE>kbtool kbbuglist kbfixlist kberrmsg kbcode
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS and OS/2, versions 5.0, 5.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An attempt to compile an application fails and the compiler may generate
the following message:
<P>
<PRE>   F2124: CODE GENERATION ERROR
          Contact Microsoft Technical Support

</PRE>Alternately, the application compiles without error but does not generate
any output.
<P>
<P><h2>CAUSE</h2>
 
<P>
The application declares an array of structures that contain REAL*4
elements, REAL*8 elements, or mixed-type elements (for example, one
INTEGER*4 element and one COMPLEX*8 element). The application attempts to
write the entire array without specifying a subscript.
<P>
The same code generation error can occur if the application  declares an
assumed-size array in a subprogram and the compiler  command line specifies
the /Od compiler option switch. In this  case, the types of the structure
elements do not effect the error.  If the command line does not include /Od
compiler option switch,  the error message may not appear, but the
application does not  produce any output.
<P>
Neither the ANSI FORTRAN 77 standard nor Microsoft FORTRAN supports
printing an entire assumed-size array. The compiler is designed to
generate the following error message in this case:
<P>
<PRE>   F2727:  assumed-size array illegal here

</PRE><h2>RESOLUTION</h2>
 
<P>
To address this error, modify the source code to print each element  of the
array individually instead of all at once.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN versions 5.0 and
5.1 for MS-DOS and OS/2. This problem was corrected in FORTRAN
PowerStation, version 1.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following code example demonstrates this problem.
<P>
<P><h3>Sample Code #1</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      STRUCTURE /STRUC/
        REAL R
      END STRUCTURE
      RECORD /STRUC/ S(10)
      S.R = 4
      WRITE (*, *) S.R
      END

</PRE>To work around this problem, use an implied-DO loop to print each
elements of the array of structures. The following code example
demonstrates this approach.
<P>
<P><h3>Sample Code #2</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      STRUCTURE /STRUC/
        REAL R
      END STRUCTURE
      RECORD /STRUC/ S(10)
      S.R = 4
      WRITE (*, *) (S(I).R, I = 1, 10) ! Print elements using
                                       ! implied DO-loop
      END

</PRE>The following code example, that uses an assumed-size array of
structures, compiles without error but does not produce any output.
<P>
<P><h3>Sample Code #3</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      STRUCTURE /STRUC/
       REAL R
      END STRUCTURE
      RECORD /STRUC/ ST(10)
      ST.R = 4
      CALL SUB(ST)
      END

      SUBROUTINE SUB(ST)
      STRUCTURE /STRUC/
       REAL R
      END STRUCTURE
      RECORD /STRUC/ ST(*)   ! Assumed-sized array declared
      WRITE (*, *) ST.R      ! nothing is output here
      END

</PRE>Compiling this code example with the /Od compiler option switch
specified causes a code generation error.
<P>
An application cannot print an assumed-size array as an array. The
application must specify a subscript and print each element
individually. One solution to this problem is to use an adjustable-
sized array. Pass the length of the structure array to the subprogram
with the array itself. Use the array length to terminate the loop that
prints the individual array elements. The following code example
demonstrates this process.
<P>
<P><h3>Sample Code #4</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      PARAMETER (LENGTH = 10)
      STRUCTURE /STRUC/
       REAL J
      END STRUCTURE
      RECORD /STRUC/ ST(LENGTH)
      ST.J = 4
      CALL SUB(ST, LENGTH)
      END

      SUBROUTINE SUB(ST, LENGTH)
      STRUCTURE /STRUC/
       REAL J
      END STRUCTURE
      INTEGER LENGTH
      RECORD /STRUC/ ST(LENGTH)
      WRITE (*, *) (ST(I).J, I = 1, LENGTH)  ! Print array elements
                                             ! in implied DO-loop
      END
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.00 5.10 buglist5.00 buglist5.10 fixlist1.00<BR>
KBCategory: kbtool kbbuglist kbfixlist kberrmsg kbcode<BR>
KBSubcategory: FLIss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 11, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
