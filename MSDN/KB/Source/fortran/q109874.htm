

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Constants Out of Range Not Found by /4Yb </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q109874">
<META NAME="KBModify" CONTENT="1997/09/18">
<META NAME="KBCreate" CONTENT="1994/01/10">
<META NAME="Keywords" CONTENT="FL32Iss kbbuglist kbfixlist kbtool">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  A program that contains a simple arithmetic expression including constant out of range may produce incorrect results. Using the -4Yb compiler option does not give a run-time error on constants that are out of range even though it should.  CAUSE ===...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAKJ,QAH4,QBWP,QDMR,QBFY,QAYL,QAEF,QBVV,QAR4,QAL3,QAAP,QAKP,QDNZ,QAN2,QAB4 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Constants Out of Range Not Found by /4Yb</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 18, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q109874</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00 1.00a | 1.00
<PRE>MS-DOS     | WINDOWS NT
</PRE>kbtool kbfixlist
<P>
 
The information in this article applies to:
<P>
- Microsoft FORTRAN PowerStation for MS-DOS, version 1.0 and 1.0a
- Microsoft FORTRAN PowerStation 32 for Windows NT, version 1.0
 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
A program that contains a simple arithmetic expression including constant
out of range may produce incorrect results. Using the -4Yb compiler option
does not give a run-time error on constants that are out of range even
though it should.
<P>
<P><h2>CAUSE</h2>
 
<P>
The constant folding algorithm (arithmetic performed at compile time)
generates 0 (zero) for the variable out of range.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Avoid using a simple constant expression that might be out of range. Use
the temporary variable for the intermediate results and then use this
variable in the expression. Compile the program with -4Yb and the
appropriate run-time error will be generated.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft FORTRAN
PowerStation 32 for NT, version 1.0 and FORTRAN Powerstation for
MS-DOS version 1.0 and 1.0a. This is not a problem in Microsoft FORTRAN
for MS-DOS, version 5.1, or FORTRAN PowerStation 32, version 4.0.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Sample Code #1</h3>
 
<P>
c Compile options required: -4Yb does not affect the behavior
c The following code reproduces the problem.
<P>
<PRE>       i=2**50
       write (*,*) i
       end

</PRE><h3>Sample Code #2</h3>
 
<P>
c Compile options required: -4Yb
c The following code solves the problem and generates the following
c run-time error: run-time  F6099: $DEBUG
<PRE>c            -INTEGER arithmetic overflow

       j=50
       i=2**j
       write (*,*) i
       end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 runtime run time<BR>
KBCategory: kbtool kbbuglist kbfixlist<BR>
KBSubcategory: FL32Iss<BR>
Keywords          : FL32Iss kbbuglist kbfixlist kbtool<BR>
Version           : 1.00 1.00a | 1.00<BR>
Platform          : MS-DOS NT WINDOWS<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 18, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
