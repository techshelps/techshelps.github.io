

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIX: Intrinsic REAL Function Assigned to COMPLEX Fails </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q100376">
<META NAME="KBModify" CONTENT="1997/09/16">
<META NAME="KBCreate" CONTENT="1993/06/20">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  An application that assigns the result of a REAL intrinsic function to a COMPLEX variable may generate incorrect results.  CAUSE =====  The compiler generates incorrect code to perform this assignment.  RESOLUTION  There are two methods to avoid th...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QBE6,QBE7,QABE,QAH4,QAYL,QBV8,QAR4,QAKP,QDKW,QAY5,QAOX,QAPN,QAL3,QAAP V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FIX: Intrinsic REAL Function Assigned to COMPLEX Fails</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  September 16, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q100376</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
1.00
MS-DOS
kbtool kbfixlist kbbuglist kberrmsg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN PowerStation for MS-DOS, version 1.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
An application that assigns the result of a REAL intrinsic function to
a COMPLEX variable may generate incorrect results.
<P>
<P><h2>CAUSE</h2>
 
<P>
The compiler generates incorrect code to perform this assignment.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
There are two methods to avoid this problem, as follows:

<UL><LI>Modify the source code to assign the result of the REAL function to
   a temporary REAL variable. Then specify the temporary variable in the
   assignment statement.

<LI>Add zero to the result of the function.
<P>
</UL><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in FORTRAN PowerStation
version 1.0 for MS-DOS. This problem has been resolved with FORTRAN
PowerStation maintenance release version 1.0a for MS-DOS.
<P>
FORTRAN PowerStation version 1.0 can be differentiated from the
maintenance release version 1.0a by invoking the linker. Typing
"link32 | more" from \F32\BIN directory will show version 2.8 for
FORTRAN PowerStation version 1.0, and it will show version 1.0f for
the maintenance release version 1.0a.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Specifying different compiler options does not correct this problem.
The various options only change the incorrect value that the code
places in the COMPLEX variable.
<P>
The following sample code demonstrates this problem:
<P>
<P><h3>Sample Code #1</h3>
 
<P>
c Compile options needed: None
<P>
<PRE>      complex*8 c
      real*4 x
      x = 1.0
      c = exp(x)
      print *, 'complex c1 = exp(x); c = ', c
      end


</PRE>The following sample code demonstrates one method to work around this
problem:
<P>
<P><h3>Sample Code #2</h3>
 
<P>
c Compile options needed: None
<P>
<PRE>      complex*8 c
      real*4 x, tmp
      x = 1.0
      tmp = exp(x)
      c = tmp
      print *, 'complex c1 = exp(x); c = ', c
      end

</PRE>The following sample code demonstrates another method to work around
this problem:
<P>
<P><h3>Sample Code #3</h3>
 
<P>
c Compile options needed: None
<P>
<PRE>      complex*8 c
      real*4 x
      x = 1.0
      c = exp(x) + 0
      print *, 'complex c1 = exp(x); c = ', c
      end
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 1.00 buglist1.00 fixlist1.00a<BR>
KBCategory: kbtool kbfixlist kbbuglist kberrmsg<BR>
KBSubcategory: FL32Iss<BR>
Solution Type     : kbfix<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  September 16, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
