

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>File I/O Ignores Formatted Carriage Control </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q24212 ">
<META NAME="KBModify" CONTENT="1995/07/19">
<META NAME="KBCreate" CONTENT="1987/12/16">
<META NAME="Keywords" CONTENT="kbprg">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  When an application sends uses formatted I/O and a FORMAT specifier to send a record to a device, FORTRAN interprets the first character of the record as a carriage-control character, as follows:     Character  Interpretation    -------------------...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB5,QA5V,QAH4,QA7O,QDNG,QAOX,QBF6,QA5A,QAVX,QAVW,QAOE,QAMN,QAH6,QBVV,QA8T V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>File I/O Ignores Formatted Carriage Control</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  July 19, 1995</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q24212 </B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN for MS-DOS, versions 3.2, 3.3, 3.31, 4.0, 4.01,
   5.0, 5.1
<LI>Microsoft FORTRAN for OS/2, versions 4.1, 5.0, 5.1
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When an application sends uses formatted I/O and a FORMAT specifier to send
a record to a device, FORTRAN interprets the first character of the record
as a carriage-control character, as follows:
<P>
<PRE>   Character  Interpretation
   -----------------------------------------------------------

   Blank     Advance one line
   0         Advance two lines
   1         Advance to top of next page (form feed)
   +         Do not advance (Prints over previous output)

</PRE>FORTRAN ignores the carriage-control character "1" for screen I/O.
<P>
Applications commonly specify carriage control as the first character of
the FORMAT specifier. However, when an application sends the output to a
disk file (rather than sending the output directly to a device), the
application places the literal character into the file and does not place
any carriage-control information into the file. If you copy the file to the
printer, no carriage control occurs.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Microsoft FORTRAN recognizes the following list of devices.
<P>
<PRE>   Device      Comments
   -------------------------------

   AUX         COM1 alias
   COM1        COM1 port
   CON         stdout, stdin
   ERR         stderr
   LINE        COM1 alias
   LPT1        stdprn
   NUL         null device
   PRN         stdprn

</PRE>Microsoft FORTRAN version 5.1 also recognizes the following devices.
<P>
<PRE>   Device      Comments
   -------------------------------

   USER        stdout, stdin
   LPT2        stdprn
   LPT3        stdprn
   LPT4        stdprn

</PRE>To use carriage control in text sent to a file, the application must
explicitly write the carriage-control characters to the file. The following
code example sends a form-feed character directly to a printer, but not to
a file.
<P>
<P><h3>Sample Code #1</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      OPEN(1, FILE = 'PRN')
      OPEN(2, FILE = 'TEST.DAT')
      WRITE(1, 10)
      WRITE(2, 10)
</PRE>10    FORMAT('1 This follows the 1')
<PRE>      END

</PRE>The output to the TEST.DAT file is as follows:
<P>
1 This follows the 1
<P>
The following code example sends a form-feed character to both the printer
and to the file using the CHAR() intrinsic function.
<P>
<P><h3>Sample Code #2</h3>
 
<P>
C Compile options needed: None
<P>
<PRE>      OPEN(1, FILE = 'PRN')
      OPEN(2, FILE = 'TEST.DAT')
      WRITE(1, 10) CHAR(12)
      WRITE(2, 20) CHAR(12)
</PRE>10    FORMAT(1X, A, 'This follows the form feed')
20    FORMAT(A, 'This follows the form feed')
<PRE>      END

</PRE>Note that the code uses a 1X format character to skip the carriage control
field for output sent to the printer. Otherwise, the CHAR(12) character
would be interpreted as a blank carriage-control character. In the output
to the file, this step is not required because the CHAR(12) is desired in
the file as a form-feed character.
<P>
In list-directed I/O (the "*" format), the first character of a record is
not interpreted as a carriage-control character.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: kbinf  3.20 3.30 3.31 4.00 4.01 4.10 5.00 5.10<BR>
KBCategory: kbprg<BR>
KBSubcategory: FORTLngIss<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  July 19, 1995</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
