

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Microsoft FORTRAN 5.1 with Visual Basic </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q121457">
<META NAME="KBModify" CONTENT="1997/02/28">
<META NAME="KBCreate" CONTENT="1994/10/05">
<META NAME="Keywords" CONTENT="APrgOther kbappnote kbfile kbinterop kbprg">
<META NAME="KBArea" CONTENT="Support; KB; fortran">
<META NAME="Description" CONTENT="  This article contains the complete text of Application Note number HF1047. The title of this Application Note is  HF1047: Using FORTRAN 5.1 with Visual Basic.   HF1047 describes how to call FORTRAN routines in a .DLL from a Visual Basic for Windows...">
<META NAME="Product" CONTENT="Fortran">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBS0,QAH4,QAMA,QATX,QA5F,QAK4,QAFF,QAVX,QAVW,QAH6,QAGI,QAMB,QBDM,QAY2,QAD7 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Using Microsoft FORTRAN 5.1 with Visual Basic</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 28, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q121457</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
5.10   | 3.00
MS-DOS | WINDOWS
kbinterop kbfile kbappnote kbprg
<P>
 
The information in this article applies to:

<UL><LI>Microsoft FORTRAN optimizing compiler for MS-DOS, version 5.1
<LI>Microsoft Visual Basic for Windows, version 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article contains the complete text of Application Note number HF1047.
The title of this Application Note is "HF1047: Using FORTRAN 5.1 with
Visual Basic."
<P>
HF1047 describes how to call FORTRAN routines in a .DLL from a Visual Basic
for Windows-based application, and how to create the .DLL file from FORTRAN
code.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
To obtain this Application Note, download HF1047.EXE, a self-extracting
file, from the Microsoft Software Library (MSL) on the following services:

<UL><LI>Microsoft Download Service (MSDL)
<P><PRE>      Dial (206) 936-6735 to connect to MSDL
      Download <A HREF="http://support.microsoft.com/download/support/mslfiles/HF1047.EXE">HF1047.EXE</A> <I>(size: 32409 bytes)</I> 
</PRE>
<LI>Internet (anonymous FTP)
<P><PRE>      ftp ftp.microsoft.com
      Change to the \softlib\mslfiles directory
      Get <A HREF="http://support.microsoft.com/download/support/mslfiles/HF1047.EXE">HF1047.EXE</A> <I>(size: 32409 bytes)</I> 
</PRE><P>
</UL>Or you can have this Application Note faxed or mailed to you by calling
Microsoft Product Support Services Monday through Friday, 6:00 A.M. to 6:00
P.M. Pacific time. If you are outside the United States, contact the
Microsoft subsidiary for your area. To locate your subsidiary, go to the
Microsoft Web site <B><A HREF="http://www.microsoft.com/worldwide/default.htm">http://www.microsoft.com/worldwide/default.htm</A></B>
<P>
<P><h2>THE TEXT OF HF1047</h2>
 
<P>
 
<PRE>  Microsoft(R) Product Support Services Application Note (Text File)
            HF1047: USING FORTRAN 5.1 WITH VISUAL BASIC(R)
</PRE> 
<PRE>                                                   Revision Date: 9/94
                                                      No Disk Included

</PRE> 
<PRE>| INFORMATION PROVIDED IN THIS DOCUMENT AND ANY SOFTWARE THAT MAY     |
| ACCOMPANY THIS DOCUMENT (collectively referred to as an Application |
| Note) IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER      |
| EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED      |
| WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR       |
| PURPOSE. The user assumes the entire risk as to the accuracy and    |
| the use of this Application Note. This Application Note may be      |
| copied and distributed subject to the following conditions:  1) All |
| text must be copied without modification and all pages must be      |
| included;  2) If software is included, all files on the disk(s)     |
| must be copied without modification (the MS-DOS(R)  utility         |
| diskcopy is appropriate for this purpose);  3) All components of    |
| this Application Note must be distributed together;  and  4) This   |
| Application Note may not be distributed for profit.                 |
|                                                                     |
| Copyright (C) 1994 Microsoft Corporation.  All Rights Reserved.     |
| Visual Basic, Microsoft, and MS-DOS are registered trademarks and   |
| Windows is a trademark of Microsoft Corporation.                    |
|---------------------------------------------------------------------|

</PRE><h2>FORTRAN AND VISUAL BASIC FOR WINDOWS(TM)</h2>
 
<P>
There are several points to consider when using FORTRAN from Visual
Basic:

<UL><LI>Calling FORTRAN routines from Visual Basic for Windows requires
   that the FORTRAN routines be made into a DLL.

<LI>When passing data:
<P>
<P><PRE>    - Both FORTRAN and Visual Basic pass data by reference.
    - Visual Basic strings are different from FORTRAN strings. They
      include a string structure, and require a special declaration
      ("ByVal") to force Visual Basic to pass the string pointer.
    - In Visual Basic, array indices start at 0. In FORTRAN, they
      start at 1.
</PRE>
<LI>There must be a declaration statement in Visual Basic for each
   FORTRAN routine that will be called.

<LI>FORTRAN DLLs have two significant problems in file I/O:
<P>
<P><PRE>    - Unformatted or Binary files can't be accessed with FORTRAN
      commands.
    - ASCII files that are opened in FORTRAN will not be readable
      until you exit from Visual Basic.
</PRE><P>
   The solution to both problems is to use Windows API calls to do
   file I/O.
<P>
   NOTE: For additional information on file I/O, please see the
   following article in the Microsoft Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../FORTRAN/Q102698.htm">Q102698</A></B>
<PRE>        TITLE: Performing File I/O from a FORTRAN Dynamic-Link Library

</PRE></UL><h2>CREATING A FORTRAN DLL CALLED FROM A VISUAL BASIC PROGRAM</h2>
 
<P>
This lab presents the steps required to build a FORTRAN DLL and shows how
to create a Visual Basic application that uses this DLL. This lab also
shows the syntax required to pass various types of data between FORTRAN and
Visual Basic.
<P>
<P><h3>Preparation</h3>
 

<OL><P><LI>Install FORTRAN version 5.1 to target 'MS-DOS and Windows' and
   include the Windows DLL library. When this is completed
   successfully, the files \FORTRAN\BINB\FL.DEF and
   \FORTRAN\LIB\LDLLFEW.LIB will be on your computer
<P>
   NOTE: If there are problems with any of this, please use the
   additional information provided in the following article in the
   Microsoft Knowledge Base:
<P>
   ARTICLE-ID: <B><A HREF="../FORTRAN/Q112006.htm">Q112006</A></B>
<PRE>        TITLE: FORTRAN 5.1 Setup Procedure for Typical Installations

</PRE><P><LI>Install Visual Basic version 3.0.

<P><LI>Read chapters 1 and 2 of the "Visual Basic Programmers Guide," and do
   the "Hello World" example.
<P>
</OL><h3>Procedure</h3>
 

<OL><P><LI>Start Visual Basic, and begin a new project.

<P><LI>Add the following items to the Form by dragging them from the Tool
   Box to the Form:
<P>
<P><PRE>    - Four command buttons
    - One text box
</PRE>
<P><LI>In the Properties Window, modify the properties of the following items:
<P>
<PRE>   Object               Properties      Setting
   ----------------------------------------------------
   Form                 Caption         VB/Fortran Lab
   Text Box             Text            empty
                        Multi Line      True
                        Scroll Bars     3 Both
   Command Button 1     Caption         Test Array
   Command Button 2     Caption         Test String
   Command Button 3     Caption         Test String Array
   Command Button 4     Caption         Test Square


   At this point, the Form should look something like this:

</PRE></OL> 
<PRE>|                          VB/Fortran Lab                         |
</PRE> 
<PRE>|                                                                 |
|                               -------------------------------   |
|  -------------------------    |                           | |   |
|  |      Test Array       |    |                           | |   |
|  -------------------------    |                           | |   |
|  -------------------------    |                           | |   |
|  |      Test String      |    |                           | |   |
|  -------------------------    |                           | |   |
|  -------------------------    |                           | |   |
|  |   Test String Array   |    |                           | |   |
|  -------------------------    |                           | |   |
|  -------------------------    |                           | |   |
|  |      Test Square      |    |                           | |   |
|  -------------------------    |                           | |   |
|                               |                           | |   |
|                               |---------------------------| |   |
|                               -------------------------------   |
</PRE> 

<OL><P><LI>From the Project Window, select View Code for the Form.

<P><LI>Add the Visual Basic code as follows:
<P>
   Add the following code to the Command1 Click event:
<P>
<PRE>      Sub Command1_Click ()
         Static arr(1 To 3, 1 To 7) As Single
         Call ARRAYTEST(arr(1, 1))
         For i% = 1 To 3
            For j% = 1 To 7
               ' Enter the following two lines as one, single line of code:
               text1.Text = Str$(arr(i%, j%)) + Chr$(13) + Chr$(10)
                  + text1.Text
            Next j%
         Next i%
      End Sub

   Add the following code to the Command2 Click event:

      Sub Command2_Click ()
         Dim temp As String * 40
         Call STRINGER(temp)
         text1.Text = temp + Chr$(13) + Chr$(10) + text1.Text
      End Sub

   Add the following code to the Command3 Click event:

      Sub Command3_Click ()
         Static testarray(1 To 5) As StringArray
         Call ARRAYSTRING(testarray(1))
         For i% = 1 To 5
            ' Enter the following two lines as one, single line of code:
            text1.Text = testarray(i%).strings + Chr$(13) +
               Chr$(10) + text1.Text
         Next i%
      End Sub

   Add the following code to the Command4 Click event:

      Sub Command4_Click ()
         Dim a As Single
         a = 4.2
         Call Square(a)
         text1.Text = Str$(a) + Chr$(13) + Chr$(10) + text1.Text
      End Sub

</PRE><P><LI>Create the files for the form by choosing Save Project As from
   the file menu. In a directory of your choice, save the form as
   VB-FORT.FRM, and save the project as VB-FORT.MAK. Create a new module,
   and save it as GLOBAL.BAS.

<P><LI>From the Project Window, select View Code for GLOBAL.BAS. Add all of
   the following code to general declarations section in GLOBAL.BAS:
<P>
<P><PRE>      Type StringArray
<PRE></PRE>         strings As String * 24
      End Type

      Declare Sub ARRAYTEST Lib "fortvb.dll" (Myarray As Single)
      Declare Sub STRINGER Lib "fortvb.dll" (ByVal mystring As String)
      Declare Sub ARRAYSTRING Lib "fortvb.dll" (Myarray As StringArray)
      Declare Sub Square Lib "fortvb.dll" (a As Single)

   NOTE: The DLL name in these declarations could include full path to
   the FORTRAN DLL (For example, "C:\VB\TEXT\FORTVB.DLL"). Then Visual
   Basic won't have to search for it.

</PRE><P><LI>Create the FORTRAN file to be made into a DLL as follows:
<P>
   Create a file (FORTVB.FOR) with the following contents, and place it
   in the same directory where the Form and other Visual Basic files
   are located:
<P>
<P><PRE>      C  Code for the FORTRAN DLL 'FORTVB.DLL'
<PRE></PRE>            subroutine arraystring(arr)
            character*24 arr(5)
            arr = 'This is a string also'
            end

            subroutine arraytest(arr)
            real*4 arr(3,7)
            integer i,j
            do i=1,3
              do j=1,7
                arr(i,j) = 11*i+j-1*i
              end do
            end do
            end

            subroutine square(a)
            real*4 a
            a = a*a
            end

            subroutine stringer(s)
            character*40 s
            s = 'This is from fortran'
            end

</PRE><P><LI>Create the Definitions file as follows:
<P>
   Create the file FORTVB.DEF with the following contents:
<P>
<PRE>      LIBRARY        FORTVB
      EXETYPE        WINDOWS
      PROTMODE
      CODE           PRELOAD MOVEABLE DISCARDABLE
      DATA           PRELOAD MOVEABLE SINGLE
      HEAPSIZE       1024

      EXPORTS        WEP
                     ARRAYTEST
                     ARRAYSTRING
                     SQUARE
                     STRINGER

</PRE><P><LI>Build the DLL by typing the following commands at the MS-DOS prompt
<P><PRE>    in the directory where the Form and other Visual Basic files
    are located:
</PRE><P>
<P><PRE>       FL /c /Gw /Aw /G2 FORTVB.FOR
       LINK FORTVB,FORTVB.DLL,NUL,/NOD LDLLFEW,FORTVB.DEF
</PRE>
<P><LI>Copy the DLL to a directory where Visual Basic can find it if the
<P><PRE>    declarations did not include the full path to the DLL. This could
    be either the working directory, C:\WINDOWS\SYSTEM, or a directory
    in the path.
</PRE><P>
<P><PRE>    NOTE: loading a Visual Basic project does not change the working
    directory. The current project directory is not usually searched
    when loading a DLL.
</PRE>
<P><LI>Run the Visual Basic application, and click the command buttons to
<P><PRE>    execute the FORTRAN subroutines. The results will appear in the
    text window.
</PRE><P>
</OL> 
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional reference words: 5.10 HF1047.EXE<BR>
KBCategory: kbinterop kbfile kbappnote kbprg<BR>
KBSubcategory: APrgOther<BR>
Keywords            : APrgOther kbappnote kbfile kbinterop kbprg<BR>
Version             : 5.10   | 3.00<BR>
Platform            : MS-DOS WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 28, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
