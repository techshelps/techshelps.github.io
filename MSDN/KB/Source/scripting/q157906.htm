

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How To Maintain State Across Pages with VBScript </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q157906">
<META NAME="KBModify" CONTENT="1997/01/13">
<META NAME="KBCreate" CONTENT="1996/10/18">
<META NAME="Keywords" CONTENT="kbprg kbhowto">
<META NAME="KBArea" CONTENT="Support; KB; scripting">
<META NAME="Description" CONTENT="  This article illustrates the three ways that you can maintain state across Web pages using Visual Basic Scripting Edition.  Following are the three methods:   - Assign a cookie to an alternate HREF.  - Use a cookie and change the contents of the pa...">
<META NAME="Product" CONTENT="Scripting">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBWA,QDNQ,QAFF,QAPN,QAYL,QAKD,QAGI,QABC,QBXS,QAIB,QAIA,QBWI,QBS0 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How To Maintain State Across Pages with VBScript</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 13, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q157906</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Visual Basic, Scripting Edition, versions 1.0, 1.1, 2.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article illustrates the three ways that you can maintain state across
Web pages using Visual Basic Scripting Edition.
<P>
Following are the three methods:

<UL><LI>Assign a cookie to an alternate HREF.
<LI>Use a cookie and change the contents of the page.
<LI>Use frames and store a value in the top level frame.
<P>
</UL><h2>MORE INFORMATION</h2>
 
<P>
The three methods are described in more detail below. To view an example
that demonstrates the three methods, create the HTML files that are
described in each section. You can use Notepad or any other text editor to
create the files.
<P>
<P><h3>Method 1 - Assigning a Cookie to an Alternate HREF</h3>
 
<P>
To use method 1, you need to read your files from an HTTP server.
<P>
<PRE>  ******** Begin Page1-1.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub SetCookie
        document.cookie = "MyVar='101'; path='page1-2.htm'"
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 1 - Method 1&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Set Cookie" onClick="SetCookie"&gt;
      &lt;A HREF="page1-2.htm"&gt;Go to Page 2&lt;/A&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End Page1-1.htm **********

  ******** Begin Page1-2.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub GetCookie
        MsgBox document.cookie
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 2 - Method 1&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Get Cookie" onClick="GetCookie"&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End Page1-2.htm   **********

</PRE>Page1-1.htm:

<UL><LI>The onClick event of the button calls the SetCookie subroutine that is
   defined at the top of the page.

<LI>The subroutine sets the value of the cookie and the PATH of the cookie.
   The PATH is the name of the page that the value is set for.

<LI>The anchor "Go to Page 2" navigates to page 2 using standard HTML
   syntax.
<P>
</UL>Page1-2.htm:

<UL><LI>The onClick event of the button calls the GetCookie subroutine that is
   defined at the top of the page.

<LI>The subroutine reads the value of the cookie to demonstrate that the
   variable has been set.
<P>
</UL><h3>Method 2 - Using a Cookie and Changing the Contents of the Page</h3>
 
<P>
To use method 2 you need to read your files from an HTTP server.
<P>
<PRE>  ******** Begin Page2-1.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub SetCookie
        document.cookie = "MyVar=101"
      End Sub

      Sub GotoNextPage
        location.href = "page2-2.htm"
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 1 - Method 2&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Set Cookie" onClick="SetCookie"&gt;
      &lt;A HREF="" onClick="GotoNextPage"&gt;Go to Page 2&lt;/A&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End Page2-1.htm **********

  ******** Begin Page2-2.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub GetCookie
        MsgBox document.cookie
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 2 - Method 2&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Get Cookie" onClick="GetCookie"&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End Page2-2.htm **********

</PRE>Page2-1.htm:

<UL><LI>The onClick event of the button calls the SetCookie subroutine that is
   defined at the top of the file.

<LI>The subroutine sets the value of the cookie for the current page.

<LI>The anchor "Go to Page 2" calls the GotoNextPage subroutine that is
   defined at the top of the page.

<LI>The GotoNextPage subroutine navigates to Page 2 by setting the HREF
   property of the location object. This changes what the current page is
   pointing to without resetting the cookie.
<P>
</UL>Page2-2.htm:

<UL><LI>The onClick event of the button calls the GetCookie subroutine that is
   defined at the top of the page.

<LI>The subroutine reads the value of the cookie to demonstrate that the
   variable has been set.
<P>
</UL><h3>Method 3 - Using Frames and Storing a Value in the Top Level Frame</h3>
 
<P>
<PRE>  ******** Begin Page3-1.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Dim MyVar
    &lt;/SCRIPT&gt;

    &lt;FRAMESET COLS="50%,50%"&gt;
      &lt;FRAME SRC="page3-2.htm"&gt;
      &lt;FRAME SRC="page3-3.htm"&gt;
    &lt;/FRAMESET&gt;
  &lt;/HTML&gt;
  ******** End Page3-1.htm **********

  ******** Begin Page3-2.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub SetVariable
        top.MyVar = 101
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 1 - Method 3&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Set Variable" onClick="SetVariable"&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End PAGE3-2.HTM **********

  ******** Begin Page3-3.htm **********
  &lt;HTML&gt;
    &lt;SCRIPT LANGUAGE="VBSCRIPT"&gt;
      Sub GetVariable
        MsgBox top.MyVar
      End Sub
    &lt;/SCRIPT&gt;
    &lt;BODY&gt;
      &lt;H2&gt;Page 2 - Method 3&lt;/H2&gt;&lt;HR&gt;
      &lt;INPUT TYPE=BUTTON VALUE="Get Variable" onClick="GetVariable"&gt;
    &lt;/BODY&gt;
  &lt;/HTML&gt;
  ******** End Page3-3.htm **********

</PRE>Page3-1.htm:

<UL><LI>A variable is defined. Since the variable is defined outside of any
   subroutines, it is accessible to all child frames.
<P>
</UL>Page3-2.htm:

<UL><LI>The onClick event of the button calls the SetVariable subroutine that is
   defined at the top of the file.

<LI>The subroutine sets the value of the variable in the top-most frame. It
   does this using the variable TOP, which refers to the top-level frame.
<P>
</UL>Page3-3.htm:

<UL><LI>The onClick event of the button calls the GetVariable subroutine that is
   defined at the top of the page.

<LI>The subroutine reads the value of the variable in the top-most frame.
<P>
</UL><h2>REFERENCES</h2>
 
<P>
For additional information on cookies and frames visit the Microsoft Site
Builder Workshop at <B><A HREF="http://www.microsoft.com/workshop">http://www.microsoft.com/workshop.</A></B>
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbprg kbhowto<BR>
KBSubcategory: PrgSyntaxVBScript kbdsi<BR>
Additional reference words: 1.00 1.10 2.00 kbDSI
<P>


</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 13, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
