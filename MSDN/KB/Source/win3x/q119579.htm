

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows Support of the 16550 UART </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q119579">
<META NAME="KBModify" CONTENT="1994/11/22">
<META NAME="KBCreate" CONTENT="1994/08/18">
<META NAME="Keywords" CONTENT="kbref kbhw kbdocerr">
<META NAME="KBArea" CONTENT="Support; KB; win3x, crossnet">
<META NAME="Description" CONTENT="  The universal asynchronous receiver-transmitter (UART) is an integrated circuit that contains the software programming control of the PC serial port. The 8250 was the original UART to ship with the IBM personal computer. This UART and the improved ...">
<META NAME="Product" CONTENT="Windows 3.1 and Windows for Workgroups">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDJ9,QBWO,QDL9,QBWN,QBWQ,QBXS,QABA,QAHC,QADN,QBVV,QAKR,QAHE,QBAO,QAU3,QALG V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Windows Support of the 16550 UART</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 22, 1994</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q119579</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft Windows operating system versions 3.0, 3.00a, 3.1, 3.11
<LI>Microsoft Windows for Workgroups versions 3.1, 3.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The universal asynchronous receiver-transmitter (UART) is an integrated
circuit that contains the software programming control of the PC serial
port. The 8250 was the original UART to ship with the IBM personal
computer. This UART and the improved 16450 version are limited to one input
register that holds only one byte at a time. These UARTs are not usually
suitable for modem speeds greater than 9600 bits per second (BPS) because
of possible input data overruns that can occur if a character is left in
the input register when the next byte is received.
<P>
The newer 16550 UART allows reliable data transfer at high speeds with its
16-byte first in, first out (FIFO) input register. The FIFO feature can
buffer up to 16 bytes at a time, which improves serial communications by
preventing data overruns in applications that are 16550 aware.
<P>
This article outlines the use and history of support for the 16550 in
Microsoft Windows.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Windows 3.0 and Earlier Versions</h3>
 
<P>
Windows 3.0 and earlier versions do not support the FIFO feature of the
16550 UART. Instead, the UART remains in the 8250 UART compatibility mode,
allowing one byte to be received at a time. If the incoming character isn't
read fast enough by the computer, the byte is lost. Lost or "dropped"
characters are likely to occur at speeds faster than 9600 bits per second
(BPS).
<P>
There are no UART-specific switches in the SYSTEM.INI file with Windows
3.0.
<P>
NOTE: Third-party communications drivers (such as Turbocom by Pacific
Commware) are available to add support for the 16550 FIFO feature in
Windows 3.0.
<P>
<P><h3>Windows 3.1, 3.11, and Windows for Workgroups 3.1</h3>
 
<P>
Windows 3.1 was the first version of Windows to support the FIFO feature of
the 16550 UART for Windows-based applications. (MS-DOS-based applications
run under Windows 3.1, 3.11, or Windows for Workgroups 3.1 do not support
the FIFO feature.) The receive buffer (RX) is set by the serial
communications driver (COMM.DRV) to 14 bytes. The transmit buffer (TX) is
not enabled.
<P>
[386Enh] Section SYSTEM.INI Setting:
<P>
<PRE>   COM1FIFO=0 | 1
   COM2FIFO=0 | 1
   COM3FIFO=0 | 1
   COM4FIFO=0 | 1

</PRE>Default: Enable the FIFO if detected and the setting is not in the
SYSTEM.INI file.
<P>
Purpose: Specifies whether the FIFO buffer of a communication (COM) port
16550 UART should be enabled (1) or disabled (0). If a serial port does not
have a 16550 UART, this setting is ignored. If you place a numerical value
other than "1" or "0" (for example, COMxFIFO=2 ), the setting is ignored,
and the FIFO is enabled if detected. Using TRUE, FALSE, or any other non-
numerical value sets the switch to "0" and therefore disables the FIFO.
<P>
Example:
<P>
The COMxFIFO= setting is not fully Boolean aware. To properly use these
switches, use the following syntax
<P>
<PRE>   COM&lt;x&gt;FIFO=1

   -or-

   COM&lt;x&gt;FIFO=0

</PRE>where &lt;x&gt; is the number of the COM port you want to set.
<P>
The SYSINI.WRI file from the Microsoft Windows Resource Kit for version 3.1
incorrectly identifies TRUE and FALSE as functioning with this switch. Page
196 of the Windows Resource Kit manual incorrectly identifies "On" and
"Off" as functioning with this switch. Again, using any non-numerical value
sets the switch to "0" and therefore disables the FIFO.
<P>
These values are used by Windows for both standard and 386 enhanced modes.
<P>
NOTE: Third-party communications drivers (such as Turbocom by Pacific
Commware and KingComm by OTC Corporation) enable FIFO support for MS-DOS-
based applications running under Windows.
<P>
<P><h3>Windows for Workgroups 3.11</h3>
 
<P>
Windows for Workgroups 3.11 is the first version of Windows to enable 16550
FIFO support for MS-DOS-based applications running under Windows. In
addition to Windows-based applications, your MS-DOS-based applications can
now use FIFO to prevent data overruns without using a third-party
communications driver. The Windows for Workgroups communications driver
(SERIAL.386) can also use the transmit buffer (TX) of the 16550 UART.
Previous versions of the communications driver use the receive buffer (RX)
only.
<P>
[386Enh] section SYSTEM.INI settings:
<P>
In addition to the COMxFIFO setting outlined above, Windows for Workgroups
3.11 introduces two new settings, RXTRIGGER and TXFIFO.
<P>
RXFIFO Setting:
<P>
<PRE>   COM1RxTRIGGER=1 | 4 | 8 | 14
   COM2RxTRIGGER=1 | 4 | 8 | 14
   COM3RxTRIGGER=1 | 4 | 8 | 14
   COM4RxTRIGGER=1 | 4 | 8 | 14

</PRE>Default: 8
<P>
Purpose: Sets the number of bytes to enable for the receive FIFO buffer
(RX) on the 16550 UART.
<P>
Example:
<P>
<PRE>   COM&lt;x&gt;RXTRIGGER=8

</PRE>where &lt;x&gt; is the number of the COM port you want to set.
<P>
NOTE: In general, you should not change the RXFIFO value. Increasing the
value of RXFIFO to 14 causes fewer interrupts to be generated, but it also
decreases the space in the remainder of the buffer to 2 characters. On a
busy system, which may have an increase in interrupt latency (the time that
it takes for an interrupt to be serviced by the CPU), this may cause
characters to overrun the buffer. Likewise, decreasing the value for RXFIFO
increases the number of interrupts generated, which could lead to interrupt
saturation, negating the usefulness of the FIFO on a multitasking system.
<P>
TXFIFO Setting:
<P>
<PRE>   COM1TXFIFO=0 | 1
   COM2TXFIFO=0 | 1
   COM3TXFIFO=0 | 1
   COM4TXFIFO=0 | 1

</PRE>Default: 0
<P>
Purpose: Enables the transmit buffer (TX) on the 16550 UART. If enabled, 16
bytes are sent to the UART with each empty transmit interrupt generated.
<P>
Example:
<P>
<PRE>   COM&lt;x&gt;TXFIFO=0

</PRE>where &lt;x&gt; equals the number of the COM port you want to set.
<P>
NOTE: Enabling the transmit buffer (TX) may result in better system
performance during a high-speed file upload. It does not affect downloads.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbref kbhw kbdocerr<BR>
KBSubcategory: win30 win31 wfw wfwg wincomm<BR>
Additional reference words: 3.00 3.0 3.0a 3.1 3.11 3.10 50Z PS/2 modems<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 22, 1994</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
