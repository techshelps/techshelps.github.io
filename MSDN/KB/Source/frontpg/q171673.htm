

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FP97: How to Use Microsoft Forms 2.0 ActiveX Controls </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q171673">
<META NAME="KBModify" CONTENT="1998/03/18">
<META NAME="KBCreate" CONTENT="1997/07/21">
<META NAME="Keywords" CONTENT="fpedit kbcode kbdta">
<META NAME="KBArea" CONTENT="Support; KB; frontpg">
<META NAME="Description" CONTENT="  This article describes how to insert Microsoft Forms 2.0 ActiveX Controls in Microsoft FrontPage Editor. The following examples use Microsoft Visual Basic Scripting Edition (VBScript) code to set properties and respond to control events.  For infor...">
<META NAME="Product" CONTENT="FrontPage">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Security" CONTENT="PUBLIC ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QDNQ,QBJZ,QBQU,QBWS,QAB5,QA7O,QAOE,QAMN,QAHV,QAM4,QANX,QA50,QAMB,QA01,QBCF V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>FP97: How to Use Microsoft Forms 2.0 ActiveX Controls</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  March 18, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q171673</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:
<P>
- Microsoft FrontPage 97 for Windows with Bonus Pack
 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to insert Microsoft Forms 2.0 ActiveX
Controls in Microsoft FrontPage Editor. The following examples
use Microsoft Visual Basic Scripting Edition (VBScript) code to set
properties and respond to control events.
<P>
For information about how to do this FrontPage 98, please see the
following article in the Microsoft Knowledge Base:
<P>
<PRE>   ARTICLE-ID: <B><A HREF="../FRONTPG/Q180822.htm">Q180822</A></B>
   TITLE     : FP98: How to Use Microsoft Forms 2.0 ActiveX Controls

</PRE><h2>MORE INFORMATION</h2>
 
<P>
WARNING: ANY USE OF THE CODE PROVIDED IN THIS ARTICLE IS AT YOUR OWN
RISK. Microsoft provides this code "as is" without warranty of any
kind, either express or implied, including but not limited to the
implied warranties of merchantability and/or fitness for a particular
purpose.
<P>
The Microsoft Forms 2.0 ActiveX Controls described in this article are
included with FrontPage.
<P>
<P><h3>Message Box Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 CommandButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "CommandButton1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub CommandButton1_Click()
            ' The Following line displays a Message Box with the date
            ' when the command button is clicked.
            msgbox "Today's date is " &amp;DATE,64,"My MsgBox"
          End sub

    c. Click OK.

</PRE></OL><h3>Label Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       CommandButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "CommandButton2" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 200.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub CommandButton2_Click()
            ' The following example fills a Label control with text
            ' when the command button is clicked.
            Label1.Caption="Today's date is " &amp; DATE
          End sub

    c. Click OK.

</PRE></OL><h3>Text Box Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 TextBox."
</PRE><P>
<P><PRE>    b. In the Name box, type "TextBox1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 140.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       CommandButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "CommandButton3" (without the quotation
       marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 TextBox."
</PRE><P>
<P><PRE>    b. In the Name box, type "TextBox2" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 300.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub CommandButton3_Click()
            ' The following example fills in a text box
            ' when the command button is clicked
            TextBox2.Text="You have entered: "&amp; UCASE(TextBox1.Text)
          End sub

    c. Click OK.

</PRE></OL><h3>Check Box Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 CheckBox."
</PRE><P>
<P><PRE>    b. In the Name box, type "CheckBox1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       CommandButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "CommandButton4" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 140.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label2" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 300.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          sub CommandButton4_Click()
            ' This example evaluates the value of the checkbox and fills
            ' in text in the label when the command button is clicked
            if CheckBox1.Value=TRUE then Label2.Caption="The checkbox _
              is checked"
            if CheckBox1.Value=FALSE then Label2.Caption="The checkbox _
              is not checked"
          end sub

    c. Click OK.

</PRE></OL><h3>Option Button Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       OptionButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "OptionButton1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       CommandButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "CommandButton5" (without the quotation
       marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label3" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 300.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>Press ENTER.

<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       OptionButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "OptionButton2" (without the quotation
       marks). Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub CommandButton5_Click()
            ' This example evaluates the value of the option button and fills
            ' in text in the label when the command button is clicked
            If OptionButton1.Value=True Then
            Label3.Caption = "This option is selected"
            Else
            Label3.Caption = "The other option is selected"
            End If
          End sub

    c. Click OK.

</PRE></OL><h3>Toggle Button Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       ToggleButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "ToggleButton1" (without the quotation
       marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 100. In the Height box, enter 30.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          sub ToggleButton1_Click()
            ' This example evaluates the value of the toggle button and
            ' fills in text in the label when the command button is clicked.
            If ToggleButton1.Value = True Then
            ToggleButton1.Caption = "DEPRESSED"
            Else
            ToggleButton1.Caption = ""
            End If
          End Sub

    c. Click OK.

</PRE></OL><h3>Spin Button Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       SpinButton."
</PRE><P>
<P><PRE>    b. In the Name box, type "SpinButton1" (without the quotation
       marks).
</PRE><P>
<P><PRE>    c. Click Properties. In the Properties window, do the following:
</PRE><P>
<P><PRE>       1) In the Properties list, click Min. In the Value box, type "-100"
<PRE></PRE>          (without the quotation marks). Click Apply.

       2) Click the Close button in the top right corner of the Properties
          window.

       3) In the Edit ActiveX Control dialog box, click OK.

    d. Click OK.

</PRE><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label4" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          sub SpinButton1_SpinDown()
            ' This example evaluates if the spin button has been depressed and
            ' fills in text in the label when the command button is clicked
            Label4.Caption = SpinButton1.Value
            end sub

          sub SpinButton1_SpinUp()
            ' This example evaluates if the spin button has not been depressed
            ' and fills in text in the label when the command button is clicked
            Label4.Caption = SpinButton1.Value
          end sub

    c. Click OK.

</PRE></OL><h3>Scroll Bar Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       ScrollBar."
</PRE><P>
<P><PRE>    b. In the Name box, type "ScrollBar1" (without the quotation
       marks).
</PRE><P>
<P><PRE>    c. Click Properties. In the Properties window, do the following:
</PRE><P>
<P><PRE>       1) In the Properties list, click Min.
</PRE><P>
<P><PRE>       2) In the Value box, type "-32766" (without the quotation marks). Click
<PRE></PRE>          Apply.

       3) Click the Close button in the top right corner of the Properties
          window.

       4) In the Edit ActiveX Control dialog box, click OK.

    d. Click OK.

</PRE><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label5" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub ScrollBar_Change()
            ' This example evaluates the position of the marker on the scroll
            ' bar fills in text in the label when the command button is clicked
            Label5.Caption = -(ScrollBar1.Value)
          End sub

    c. Click OK.

</PRE></OL><h3>List Box Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       ListBox."
</PRE><P>
<P><PRE>    b. In the Name box, type "ListBox1" (without the quotation marks).
</PRE><P>
<P><PRE>    c. Click Properties. In the Properties window, do the following:
</PRE><P>
<P><PRE>       1) In the Properties list, click BorderStyle.
</PRE><P>
<P><PRE>       2) In the Value list, select 1-Single.
</PRE><P>
<P><PRE>       3) Click Apply.
</PRE><P>
<P><PRE>       4) Click the Close button in the top right corner of the Properties
<PRE></PRE>          window.

       5) In the Edit ActiveX Control dialog box, click OK.

    d. Click OK.

</PRE><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label6" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 400.
</PRE><P>
<P><PRE>    d. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub ListBox1_Click()
            ' This example evaluates which option in a list box has been
            ' selected and fills in the resulting text in the label when
            ' the command button is clicked
            Label6.Caption= "You have selected " &amp; _
            Listbox1.List(ListBox1.ListIndex)
          End sub

       NOTE: A ListBox requires you to write script that populates the
       list with values in an array. The script should be inserted at the
       top of the page so that it executes when your page is loaded into
       a Web browser.

    c. Click OK.

</PRE><P><LI>Press CTRL+HOME. Press ENTER. Press the UP ARROW key.
<P>
   The insertion point should be positioned at the beginning of a blank line
   at the top of the page.

<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          Sub window_onLoad()
            ' This example creates and populates the array used in the
            ' proceeding list box example
            ' dim array to populate ListBox
            Dim ListBoxArray(2)
            ListBoxArray(0)="RED"
            ListBoxArray(1)="WHITE"
            ListBoxArray(2)="BLUE"
            ListBox1.List=ListBoxArray
          End sub

    c. Click OK.

</PRE></OL><h3>Combo Box Example</h3>
 

<OL><P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, select "Microsoft Forms 2.0
       ComboBox."
</PRE><P>
<P><PRE>    b. In the Name box, type "ComboBox1" (without the quotation marks).
       Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click ActiveX Control.

<P><LI>In the ActiveX Control Properties dialog box, do the following:
<P>
<P><PRE>    a. In the Pick A Control list, "select Microsoft Forms 2.0 Label."
</PRE><P>
<P><PRE>    b. In the Name box, type "Label7" (without the quotation marks).
</PRE><P>
<P><PRE>    c. In the Width box, enter 400. Click OK.
</PRE>
<P><LI>On the Insert menu, point to Advanced, and then click Script.

<P><LI>In the Script dialog box, do the following:
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server" check box.
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code:
</PRE><P>
<PRE>          sub ComboBox1_Click()
            ' This example evaluates which option in a combo box has been
            ' selected and fills in the resulting text in the label when
            ' the command button is clicked.
            Label7.Caption= "You have selected " &amp; _
            ComboBox1.List(ComboBox1.ListIndex)
          end sub

       NOTE: A ListBox requires you to write script that populates the
       list with values in an array. The script should be inserted at the
       top of the page so that it executes when your page is loaded into a
       Web browser.

</PRE><P><LI>Double-click the Script icon at the top of the page.
<P>
   NOTE: This icon was created in step 6 of the List Box example.
<P>
<P><PRE>    a. Under Language, click VBScript and click to clear the "Run Script
       on Server check box."
</PRE><P>
<P><PRE>    b. In the Script box, enter the following code.
</PRE><P>
<P><PRE>       NOTE: Place this code at the bottom of the Script box, after the
       existing script, but before the last line which reads "end sub."
</PRE><P>
<PRE>          ' This example creates and populates the array used in the
          ' combo box example.
          '
          ' dimension array to populate ComboBox
          Dim ListBoxArray(2)
          ListBoxArray(0)="RED"
          ListBoxArray(1)="WHITE"
          ListBoxArray(2)="BLUE"
          ListBox1.List=ListBoxArray

    c. Click OK.

</PRE></OL><h2>REFERENCES</h2>
 
<P>
For additional information about Microsoft Visual Basic Scripting Edition,
please see the following Microsoft World Wide Web site:
<P>
<PRE>   <B><A HREF="http://www.microsoft.com/VBScript">http://www.microsoft.com/VBScript</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: 97 98
<P>

Keywords          : fpedit kbcode kbdta<BR>
Version           : windows:97<BR>
Platform          : WINDOWS<BR>
Hardware          : x86<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  March 18, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
