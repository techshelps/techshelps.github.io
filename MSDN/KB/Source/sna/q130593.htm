

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interpreting SNA Server API Traces: Byte Packing Considerations </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q130593">
<META NAME="KBModify" CONTENT="1997/04/17">
<META NAME="KBCreate" CONTENT="1995/05/23">
<META NAME="Keywords" CONTENT="kbnetwork ntprotocol snaappc snacpic snalua snaprog">
<META NAME="KBArea" CONTENT="Support; KB; sna">
<META NAME="Description" CONTENT="  When interpreting Verb Control Blocks (VCB) within SNA Server API traces, the interpreter must consider the packing alignment of each structure. The packing depends on the #include file used to build the application. The standard SNA API include fi...">
<META NAME="Product" CONTENT="SNA Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QALG,QBWP,QBWO,QDIT,QBET,QAH4,QAUD,QAIB,QAHC,QA7O,QA4Q,QAL3,QAHE,QDL9,QBWQ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>Interpreting SNA Server API Traces: Byte Packing Considerations</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  April 17, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q130593</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SNA Server for Windows NT, versions 2.0, 2.1, 2.11, and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
When interpreting Verb Control Blocks (VCB) within SNA Server API traces,
the interpreter must consider the packing alignment of each structure. The
packing depends on the #include file used to build the application. The
standard SNA API include files shipped with SNA Server perform the packing
of the VCB depending on whether the program is built using Win16 or Win32.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Sample VCB STRUCTURE for TP_STARTED APPC API verb:
<P>
<PRE>   TP_STARTED
     opcode         unsigned short int   (WORD (2 Bytes))
     opext          unsigned char        (BYTE)
     reserv2        unsigned char        (BYTE)
     primary_rc     unsigned short int   (WORD (2 Bytes))
     secondary_rc   unsigned long int    (DWORD (4 Bytes))
     lu_alias       unsigned char[8]     (8 bytes)
     tp_id          unsigned char[8]     (8 bytes)
     tp_name        unsigned char[64]    (64 bytes)

</PRE><h3>WIN32</h3>
 
<P>
With Windows NT (32-bit) compilations, VCBs are not packed. As a result,
both DWORDs and WORDs begin on WORD boundaries, and BYTEs begin on BYTE
boundaries.
<P>
The following is an excerpt from a trace taken on an SNA Server using a
Win32 APPC application:
<P>
TP_STARTED response, result = PARAMETER_CHECK
<P>
<PRE>Type:Sync                                  VerbID:00001800

</PRE>---- Verb Parameter Block at address 0014CBC0 ----
<PRE>14000000 00010000 00000003 53444653     &lt;............SDFS&gt;
44462020 00000000 F0DE1400 D9E4D4C2     &lt;DF  ....0...RUMB&gt;
C1F4F0F0 00000000 00000000 00000000     &lt;A400............&gt;
00000000 00000000 00000000 00000000     &lt;................&gt;
00000000 00000000 00000000 00000000     &lt;................&gt;
00000000 00000000 00000000              &lt;............    &gt;

</PRE>Referring to the "VCB STRUCTURE for TP_STARTED APPC API verb" above,
the verb control block parameters are decoded as follows for Win32:
<P>
<PRE>  opcode  = 1400
  opext   = 00
</PRE>reserv2 = 00
<PRE>  primary_rc = 0001 (the subsequent two bytes "0000" are ignored)
  secondary_rc = 00000003
  lu_alias     = 53 44 46 53 44 46 20 20 ("SDFSDF  ")
  tp_id        = 00 00 00 00 F0 DE 14 00
  tp_name      = D9 E4 D4 C2 C1 F4 F0 F0 ("RUMBA400 &lt;nulls&gt;")

...

</PRE><h3>WIN16</h3>
 
<P>
With Windows 3.x (16-bit) compilations, VCBs are also not packed, but are
aligned differently than Windows NT (32-bit) compilations. With Win16,
DWORDs and WORDs start on WORD boundaries, and BYTEs are on BYTE
boundaries.
<P>
The following is an excerpt from a trace taken on a Windows for Workgroups
client using a Win16 APPC application:
<P>
...
TP_STARTED response, result = PARAMETER_CHECK
<P>
<PRE>Type:Sync                                  VerbID:0000180F

</PRE>---- Verb Parameter Block at address 300F:0000 ----
<PRE>14000000 00010000 00035344 46202020     &lt;..........SDF   &gt;
20200F00 01004B16 DF22D9E4 D4C2C1F4     &lt;  ....K.."RUMBA4&gt;
F0F00000 00000000 00000000 00000000     &lt;00..............&gt;
00000000 00000000 00000000 00000000     &lt;................&gt;
00000000 00000000 00000000 00000000     &lt;................&gt;
00000000 00000000 0000                  &lt;..........      &gt;
...

</PRE>For Win16, note that the secondary return code immediately follows the
primary return code (omitting the two NULL bytes which separate these
fields in the Win32 trace above).
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodsna<BR>
Keywords            : kbnetwork ntprotocol snaappc snacpic snalua snaprog<BR>
Version             : 2.0 2.1 2.11 3.0<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  April 17, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
