

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to do BIND Checking in an SLI_OPEN(). </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q160714">
<META NAME="KBModify" CONTENT="1997/11/05">
<META NAME="KBCreate" CONTENT="1996/12/09">
<META NAME="Keywords" CONTENT="prodsna kbcode kbprg">
<META NAME="KBArea" CONTENT="Support; KB; sna">
<META NAME="Description" CONTENT="  A call to SLI_OPEN() is used to open an SSCP-LU as well as an LU-LU session. A developer may wish to check the incoming BIND image by taking advantage of several SLI_OPEN() fields.  MORE INFORMATION  1. The following are the SLI_OPEN() vcb fields s...">
<META NAME="Product" CONTENT="SNA Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBFY,QAH4,QAGI,QBSO,QAAD,QAUD,QAKR,QABI,QABH,QA7O,QA7N,QAIF,QA5V,QALZ,QAGU V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>How to do BIND Checking in an SLI_OPEN().</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  November 5, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q160714</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft SNA Server versions 2.0, 2.1, 2.11, and 3.0
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
A call to SLI_OPEN() is used to open an SSCP-LU as well as an LU-LU session.
A developer may wish to check the incoming BIND image by taking advantage of
several SLI_OPEN() fields.
<P>
<P><h2>MORE INFORMATION</h2>
 

<OL><P><LI>The following are the SLI_OPEN() vcb fields specific to bind checking:

</OL></UL><LI>other_verb.common.lua_extension_list_offset = 0x48;  // should use offsetof()

<LI>other_verb.specific.open.lua_open_extension[0].lua_routine_type =
   LUA_ROUTINE_TYPE_BIND;

<LI>strcpy(other_verb.specific.open.lua_open_extension[0].lua_module_name,
   "WINSLI32");

<LI>strcpy(other_verb.specific.open.lua_open_extension[0].lua_procedure_name,
   "BindValidation");

<LI>other_verb.specific.open.lua_open_extension[1].lua_routine_type =
   LUA_ROUTINE_TYPE_END;
<P>
   NOTE: For more information on the meaning of each field see the SNA Server
   LUA Programmer's Reference included on the SNA Server compact disk.

</UL><OL><P><LI>The following is sample bind validation callback code:
<P>
   typedef VOID FAR PASCAL BindValidation( LUA_VERB_RECORD FAR * )
   {
<P><PRE>    pVerb-&gt;common.lua_prim_rc = LUA_STATE_CHECK;
</PRE>   }
<P>
   Note: For vc++ 4.0 the typedef should be:
<P>
<P><PRE>      typedef VOID _STDCall BindValidation(LUA_VERB_RECORD FAR*)
</PRE><P>
   The BIND routine has access to the LUA VCB passed to it. The BIND routine
   should validate the BIND and indicate the appropriate SLI primary and
   secondary return code in the LUA verb record. Also, the routine may
   indicate the primary and secondary RU sizes supported by the SLI program
   by setting byte 10 and 11 in the common.lua_data_ptr field (where the
   BIND command is indicated).

<P><LI>The following are the compiler options for the module containing the
   callback:
<P>
<P><PRE>      /FA -c -Zle -W3 -WX -Ge -Gy -Gz -Ox -Zd
      -DCONDITION_HANDLING -DSTD_CALL
      -Di386=1 -D_X86_ -DNT_UP -DWIN32 -DDEVL
      -D_DLL -D_MT  -DWIN32_SUPPORT
</PRE>
<P><LI>The following is the code generated for the callback:
<P>
<P><PRE>      PUBLIC _BindValidation@4
      ; COMDAT _BindValidation@4
      _TEXT SEGMENT
      _pVerb$ = 8
<PRE></PRE>      _BindValidation@4 PROC NEAR    ; COMDAT

      // pVerb-&gt;common.lua_prim_rc = LUA_STATE_CHECK;
      mov eax, DWORD PTR _pVerb$[esp-4]
      mov WORD PTR [eax+4], 512   ; 00000200H
      ret 4
      _BindValidation@4 ENDP
      _TEXT ENDS

</PRE><P><LI>The following is the code generated by SLI to call this callback:
<P>
<P><PRE>      ; Line 658
      // (*aSCB-&gt;bind_rtn)(sliVCB);
<PRE></PRE>      push    ebp
      call    DWORD PTR [ebx+188]
      // N.B. there is no ADD ESP,4 following the call

</PRE><P><LI>The following is the client internal trace showing WINSLI detecting the
   user provided bind validation callback:
<P>
<P><PRE>      |00000157.000000f7 OUDMD  Opening User DLL Modules
      |00000157.000000f7 OUDMD  Opening a Bind Routine
      |00000157.000000f7 OUDMD  Opening DLL = WINSLI32
      |00000157.000000f7 OUDMD  Loading Routine = BindValidation
</PRE>
<P><LI>The following is client internal trace showing the bind validation
   callback:
<P>
<P><PRE>      |00000157.0000015c CLUAD  Calling BIND Routine
      |00000157.0000015c CLUAD  Return from BIND routine, prc=512
      |00000157.0000015c CLUAD  Returned With Error From Routine
      |00000157.0000015c FrRUI  Freeing RUI vcb = 0x14E424
      |00000157.0000015c BINDP  USER BIND ROUTINE FAILED
</PRE>
<P><LI>The following is an API trace to show the bind validation error:
<P>
<PRE>      000015c SLI    ----------------------------------------------   11:11:52.28
      000015c SLI    SLI_OPEN post
      000015c SLI    SESSION_FAILURE - NEG_RSP_FROM_BIND_ROUTINE
      000015c SLI    ---- Verb Parameter Block at address 00405150 ----
      000015c SLI    52004900 000F0000 00000039 01000000       &lt;R.I........9....&gt;
      000015c SLI    00000000 4C553220 20202020 48000000       &lt;....LU2     H...&gt;
      000015c SLI    88E01400 00000400 C0904000 F4000000       &lt;h.........@.4...&gt;
      000015c SLI    00000000 00000000 00000040 00000000       &lt;...........@....&gt;
      000015c SLI    00000000 02000000 0157494E 534C4933       &lt;.........WINSLI3&gt;
      000015c SLI    32004269 6E645661 6C696461 74696F6E       &lt;2.BindValidation&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 00000000 00000000       &lt;................&gt;
      000015c SLI    00000000 00000000 0000                    &lt;..........      &gt;
      000015c SLI    ---- Data at address 004090C0 ----
      000015c SLI    86998584                                  &lt;fred            &gt;
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words:<BR>
Keywords          : prodsna kbcode kbprg<BR>
Version           : 2.00 2.10 2.11 3.00<BR>
Platform          : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  November 5, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
