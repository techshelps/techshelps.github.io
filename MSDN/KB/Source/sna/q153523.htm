

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMINIT May Fail with PRODUCT_SPECIFIC_ERROR(20) After a CMCANC </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q153523">
<META NAME="KBModify" CONTENT="1997/05/27">
<META NAME="KBCreate" CONTENT="1996/07/11">
<META NAME="Keywords" CONTENT="kbbug2.11.sp1 kbfix2.11.sp2 kbnetwork">
<META NAME="KBArea" CONTENT="Support; KB; sna">
<META NAME="Description" CONTENT="  When an application issues a cmcanc() call with a cmrcv() outstanding, the CPIC library would release its conversation control block twice. This would cause a subsequent cminit() call to fail with PRODUCT_SPECIFIC_ERROR(20).  CAUSE =====  When the ...">
<META NAME="Product" CONTENT="SNA Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAGI,QBGP,QDO3,QAB4,QAXC,QBHQ,QAUJ,QAP2,QAI8,QDNL,QANY,QAAP,QAG8,QBWP,QA7O V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>CMINIT May Fail with PRODUCT_SPECIFIC_ERROR(20) After a CMCANC</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  May 27, 1997</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q153523</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



<P><h3> </h3>
 
The information in this article applies to:

<UL><LI>Microsoft SNA Server for Windows NT, version 2.11 Service Pack 1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When an application issues a cmcanc() call with a cmrcv() outstanding, the
CPIC library would release its conversation control block twice. This would
cause a subsequent cminit() call to fail with PRODUCT_SPECIFIC_ERROR(20).
<P>
<P><h2>CAUSE</h2>
 
<P>
When the application issues the cmcanc() verb the outstanding cmrcv()
returns with the error, CM_DEALLOCATED_ABEND_SVC. At that point the CPIC
library frees the conversation control block. When the cmcanc() verb had
finished its processing, it then frees the conversation control block
again. This causes the CPIC library's count of active conversations to drop
to -1. Because the CPI-C library uses unsigned integers, a negative value
of -1 appears as a very large positive number. When the application now
issues the next cminit() call the CPIC library checks its count of active
conversations, and notice that it was greater than the maximum limit of 16.
<P>
With the SNA Application, CPI-C trace enabled you might see the following:
<P>
<PRE>|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:10.55
<PRE>|00000101.000000e0 CPIC   CMCANC request
|00000101.000000e0 CPIC    Conversation ID = 02000000
|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:10.57
<PRE>|00000101.000000e0 CPIC   CMRCV async response, result =
</PRE>CM_DEALLOCATED_ABEND_SVC
<PRE>|00000101.000000e0 CPIC    Buffer empty
|00000101.000000e0 CPIC    Data received type = CM_INCOMPLETE_DATA_RECEIVED
|00000101.000000e0 CPIC    Received length = 0
|00000101.000000e0 CPIC    Status received = CM_NO_STATUS_RECEIVED
|00000101.000000e0 CPIC    Request to send received =
</PRE>CM_REQ_TO_SEND_NOT_RECEIVED
<PRE>|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:10.57
<PRE>|00000101.000000e0 CPIC   CMCANC response, result = CM_OK
|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:14.26
<PRE>|00000101.000000e0 CPIC   CMINIT request
|00000101.000000e0 CPIC    Sym dest name = LU62TEST
|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:14.26
<PRE>|00000101.000000e0 CPIC   CMINIT response, result =
</PRE>CM_PRODUCT_SPECIFIC_ERROR
<PRE>|00000101.000000e0 CPIC    Conversation ID = 00000000
|00000101.000000e0 CPIC   Conversation characteristics
|00000101.000000e0 CPIC    Conversation type = CM_BASIC_CONVERSATION
|00000101.000000e0 CPIC    Deallocate type = CM_DEALLOCATE_SYNC_LEVEL
|00000101.000000e0 CPIC    Error direction = CM_RECEIVE_ERROR
|00000101.000000e0 CPIC    Sync level = CM_NONE
|00000101.000000e0 CPIC    Fill type = CM_FILL_LL
|00000101.000000e0 CPIC    Prepare to receive type =
</PRE>CM_PREP_TO_RECEIVE_SYNC_LEVEL
<PRE>|00000101.000000e0 CPIC    Receive type = CM_RECEIVE_AND_WAIT
|00000101.000000e0 CPIC    Send type = CM_BUFFER_DATA
|00000101.000000e0 CPIC    Conversation security type = XC_SECURITY_NONE
|00000101.000000e0 CPIC    Log data pointer = 00000000
|00000101.000000e0 CPIC    Log data length = 0
|00000101.000000e0 CPIC    Sym dest name =
|00000101.000000e0 CPIC    Partner LU name =
|00000101.000000e0 CPIC   00000000 00000000 00000000 00000000
</PRE>&lt;................&gt;
<PRE>|00000101.000000e0 CPIC   00                                      &lt;.
&gt;
|00000101.000000e0 CPIC    Mode name =
|00000101.000000e0 CPIC   00000000 00000000                       &lt;........
&gt;
|00000101.000000e0 CPIC    Partner TP name =
|00000101.000000e0 CPIC   00000000 00000000 00000000 00000000
</PRE>&lt;................&gt;
<PRE>|00000101.000000e0 CPIC   00000000 00000000 00000000 00000000
</PRE>&lt;................&gt;
<PRE>|00000101.000000e0 CPIC   00000000 00000000 00000000 00000000
</PRE>&lt;................&gt;
<PRE>|00000101.000000e0 CPIC   00000000 00000000 00000000 00000000
</PRE>&lt;................&gt;
<PRE>|00000101.000000e0 CPIC   ----------------------------------------------
</PRE>13:35:14.28
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in Microsoft SNA Server
version 2.11.sp1.
This problem was corrected in the latest Microsoft SNA Server 2.11 U.S.
Service Pack. For information on obtaining the service pack, query on the
following word in the Microsoft Knowledge Base (without the spaces):
<P>
<PRE>   S E R V P A C K

</PRE><h2>MORE INFORMATION</h2>
 
<P>
There might be other reasons for getting a PRODUCT_SPECIFIC_ERROR(20) that
are not necessarily be related to this article. Further reasons for getting
a PRODUCT_SPECIFIC_ERROR(20) can be found in the Knowledge Base articles
<B><A HREF="../SNA/Q132720.htm">Q132720</A></B> and <B><A HREF="../SNA/Q148359.htm">Q148359</A></B>.
<P>
If you should observe this behavior you will also get the error message
3022 logged in the Application Event Log which indicates an attempt to
exceed the maximum number of concurrent CPIC conversations.
<P>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: prodsna sp1 cpi-c cmcanc cminit<BR>
product_specific_error<BR>
Keywords            : kbbug2.11.sp1 kbfix2.11.sp2 kbnetwork<BR>
Version             : 2.0 2.1 2.11.sp1<BR>
Platform            : WINDOWS<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  May 27, 1997</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
