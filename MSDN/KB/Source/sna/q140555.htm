

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2 New Win32 CPIC APIs: Asynch Verb Completion Via WinNT Events </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q140555">
<META NAME="KBModify" CONTENT="1996/02/01">
<META NAME="KBCreate" CONTENT="1995/12/03">
<META NAME="Keywords" CONTENT="">
<META NAME="KBArea" CONTENT="Support; KB; sna">
<META NAME="Description" CONTENT="  The following two new Win32 CPIC API Calls have been added to SNA Server 2.11 to enable asynchronous verb completion using Windows NT Events:   - WinCPICSetEvent()   - WinCPICExtractEvent()  This article discusses the way CPIC verbs in general comp...">
<META NAME="Product" CONTENT="SNA Server">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAO4,QAPN,QBET,QAUD,QBGP,QAGI,QBWP,QBB0,QAH4,QADP,QAHE,QAIF,QAI8,QBXN,QA4H V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>2 New Win32 CPIC APIs: Asynch Verb Completion Via WinNT Events</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  February 1, 1996</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q140555</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
The information in this article applies to:

<UL><LI>Microsoft SNA Server for Windows NT, version 2.11
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
The following two new Win32 CPIC API Calls have been added to SNA Server
2.11 to enable asynchronous verb completion using Windows NT Events:

<UL><LI>WinCPICSetEvent()

<LI>WinCPICExtractEvent()
<P>
</UL>This article discusses the way CPIC verbs in general complete
asynchronously and how two new API calls complete asynchronously.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
Currently, CPIC verbs complete asynchronously by posting a message to a
window. There is one such window for each CPIC application. Each CPIC
conversation can have one asynchronous verb outstanding at any time. When a
verb completes, the posting to the window takes as parameters the CPIC
conversation ID of the verb which has completed, and the return code of the
verb.
<P>
This new specification addresses the new requirement to allow CPIC verbs
running on Win32 to complete asynchronously through events, in common with
the other SNA Server asynchronous interfaces.
<P>
The prototypes are:
<P>
<PRE>   /* Set_Conversation_Event */
   VOID WinCPICSetEvent(unsigned char CM_PTR, /*conversation_ID*/
   CM_EVENT_HANDLE CM_PTR, /* event handle */
   CM_RETURN_CODE CM_PTR); /* return_code  */

</PRE>The parameters for this verb are:

<UL><LI>Conversation ID, which is the ID of the conversation for which this
   event is used.

<LI>Event handle, which is the handle of the event which is to be cleared
   when an asynchronous verb on the conversation completes. This parameter
   can replace an already-defined event, or remove an already-defined event
   (by having NULL as the parameter).

<LI>Error code, which returns the error PROGRAM_PARAMETER_CHECK if
   any of the parameters are invalid.
<P>
</UL>Prototypes continued:
<P>
<PRE>   /* Extract_Conversation_Event */
   VOID WinCPICExtractEvent(unsigned char CM_PTR /*conversation_ID*/
   CM_EVENT_HANDLE CM_PTR, /* event handle */
   CM_RETURN_CODE CM_PTR); /* return_code  */

</PRE>The parameters for this verb are:

<UL><LI>Conversation ID, which is the ID of the conversation for which the event
   handle is being extracted.

<LI>Event handle, which returns the event handle being used by this
   conversation. If no handle has been registered, it returns NULL.

<LI>Error code, which returns the error PROGRAM_PARAMETER_CHECK if any of
   the parameters are invalid.
<P>
</UL>When a verb is issued on a non-blocking conversation, it returns
CM_OPERATION_INCOMPLETE if it is going to complete asynchronously. If an
event has been registered with the conversation, then the application can
call WaitForSingleObject() or WaitForMultipleObjects() to be notified of
the completion of the verb. Once the verb has completed, the application
must then call cmwait() to determine the return code for the asynchronous
verb.
<P>
If no event has been registered, then the asynchronous verb completes as it
does at present, which is by posting a message to the window which the
application has registered with the CPIC library.
<P>
It is the responsibility of the application to reset the event, as it is
with other APIs.
<P>
An application can discover the event handle being used for a CPIC
conversation with the call WinCPICExtractEvent().
<P>
Internal Changes:
<P>
Asynchronous event completion inside the CPIC library is done by a macro
COMPLETE_ASYNC_VERB. This is changed to first check whether there is an
event handle associated with the conversation. If there is, it clears this
event. If there is not, it posts a message to a window as before.
<P>
The conversation control block is changed to have a field to contain the
event.
<P>
Microsoft has updated the following files to add the two new Win32 CPIC API
calls:
<P>
<PRE>   LIBS\WIN32\WCPIC32.DLL
   LIBS\WINB32\WCPIC32.LIB
   LIBS\WIN32\WINCPIC.DLL
   LIBS\WIN32\WINCPIC.LIB
   LIBS\WIN32\SNATRC.DLL
   LIBS\WIN95\SNATRC.DLL

</PRE><h2>STATUS</h2>
 
<P>
This feature is included in the latest U.S. Service Pack for SNA Server for
Windows NT, version 2.11. For information on obtaining the Service Pack,
query on the following word in the Microsoft Knowledge Base (without the
spaces):
<P>
<PRE>   S E R V P A C K
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
KBCategory: kbnetwork kbbug2.11<BR>
KBSubcategory: ntnetserv<BR>
Additional reference words: prodsna 2.11<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  February 1, 1996</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
