

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: ClassView Incorrectly Allows Non-Abstract/Abstract Method </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q161707">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1997/01/02">
<META NAME="Keywords" CONTENT="kbui VJGenIss">
<META NAME="KBArea" CONTENT="Support; KB; java">
<META NAME="Description" CONTENT="  ClassView allows you to add methods that use the abstract modifier to non- abstract classes. In Visual J++ 1.0 it also allows you to add methods that do not use the abstract modifier to interfaces. As a result, errors occur when you compile the sou...">
<META NAME="Product" CONTENT="java">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXF,QAVW,QAVX,QAPN,QBBS,QABO,QA56,QA55,QAAP,QAUR,QAH4,QAKP,QALZ,QAB4,QADZ V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: ClassView Incorrectly Allows Non-Abstract/Abstract Method</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q161707</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Visual J++, versions 1.0, 1.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
ClassView allows you to add methods that use the abstract modifier to non-
abstract classes. In Visual J++ 1.0 it also allows you to add methods that
do not use the abstract modifier to interfaces. As a result, errors occur
when you compile the source code. ClassView should not allow these
scenarios.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Avoid adding methods that use ClassView in this manner.
<P>
<P><h2>STATUS</h2>
 
<P>
Microsoft has confirmed this to be a problem in the Microsoft products
listed at the beginning of this article. We are researching this problem
and will post new information here in the Microsoft Knowledge Base as it
becomes available.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 
<P>
In Visual J++ 1.0, add the following interface definition to an AppWizard-
generated Java applet:
<P>
<PRE>   interface Test{}

   Save the changes to the file, and view the ClassView tab of the Project
   Workspace window. The "new" interface Test appears in the project
   "classes" display. In the ClassView pane, right-click "interface Test"
   to open the context menu. Use the context menu to add a non-abstract
   class method to the interface Test. Invalid Java code is generated that
   can cause various compile-time errors.

</PRE>In either Visual J++ 1.0 or 1.1, add the following class definition to an
AppWizard-generated Java applet:
<P>
<PRE>   class Test1{}

   Save the changes to the file, and view the ClassView tab of the Project
   Workspace window. The "new" class Test1 appears in the project "classes"
   display. In the ClassView pane, right-click "class Test1" to open the
   context menu. Use the context menu to add an abstract class method to
   the class Test1. Invalid Java code is generated that can cause various
   compile-time errors.

</PRE><h2>REFERENCES</h2>
 
<P>
For the latest Knowledge Base articles and other support information on
Visual J++ and the SDK for Java, see the following page on the Microsoft
Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/visualj/">http://support.microsoft.com/support/visualj/</A></B>
   <B><A HREF="http://support.microsoft.com/support/java/">http://support.microsoft.com/support/java/</A></B>

</PRE> 
<PRE>Keywords          : kbui VJGenIss
Technology        : kbInetDev
Version           : 1.0 1.1
Platform          : WINDOWS
Issue type        : kbbug</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
================================================================================<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
