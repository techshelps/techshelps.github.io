

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRB: COM Objects are not Being Released in Java </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q179062">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1998/01/08">
<META NAME="Keywords" CONTENT="JCOM JVM">
<META NAME="KBArea" CONTENT="Support; KB; java">
<META NAME="Description" CONTENT="  When setting a COM object reference to null and possibly attempting to force garbage collection by calling gc(), COM objects may not be released in a timely or predictable fashion.  CAUSE =====  If you do not call ComLib.release, normal garbage-col...">
<META NAME="Product" CONTENT="java">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAPN,QAW6,QBVV,QAGI,QBXF,QAA5,QAU3,QABA,QA7H,QA5E,QANG,QABN,QAI4,QA63,QA56 V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>PRB: COM Objects are not Being Released in Java</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q179062</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>SDK for Java, versions 1.51, 2.0, 2.01
<LI>Microsoft Visual J++, versions 1.0, 1.1
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
When setting a COM object reference to null and possibly attempting to
force garbage collection by calling gc(), COM objects may not be released
in a timely or predictable fashion.
<P>
<P><h2>CAUSE</h2>
 
<P>
If you do not call ComLib.release, normal garbage-collection will attempt
to perform the release for you. However, this mechanism is not guaranteed
due to the threading limitations of many COM objects. That is, many COM
objects can be called only on the thread on which they were created.
Because garbage collection occurs at unpredictable times, the required
thread may have expired or may be no longer responding to messages by the
time garbage-collection reclaims the object. In addition, this
unpredictability can obscure true memory leaks and/or tie up important
system resources.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
It is recommended that you use explicit releases by calling ComLib.release
in order to free COM objects in a timely and predictable fashion.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
For example, if you have the following code that creates a COM object in
Java:
<P>
<PRE>   import excel8.*;
   import com.ms.com.*;

   _Global globXL=null;
   _Application appXL=null;

   try
   {
      globXL = (_Global)new Global();
      appXL = (_Application)globXL.getApplication();
   }
   catch (ComFailException e)
   {
      System.out.println(e.getMessage());
   }

</PRE>One would use this to release these COM objects (note all references to COM
objects should be released):
<P>
<PRE>   try
   {
      ComLib.release(appXL);
      appXL=null;
      ComLib.release(globXL);
      globXL=null;
   }
   catch (ComFailException e)
   {
      System.out.println(e.getMessage());
   }

</PRE><h2>REFERENCES</h2>
 
<P>
Please see the SDK2.0x for Java documentation for more information.
<P>
For the latest Knowledge Base articles and other support information on
Visual J++ and the SDK for Java, see the following page on the Microsoft
Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/visualj/">http://support.microsoft.com/support/visualj/</A></B>
   <B><A HREF="http://support.microsoft.com/support/java/">http://support.microsoft.com/support/java/</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: JCOM garbage collection release com objects
<P>

Keywords          : JCOM JVM<BR>
Technology        : kbInetDev internet<BR>
Version           : WINDOWS:1.0,1.1,1.51,2.0,2.01<BR>
Platform          : WINDOWS<BR>
Issue type        : kbprb<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
