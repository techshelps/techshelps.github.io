

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Creating a Modal Dialog Box from Java </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177753">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1997/12/05">
<META NAME="Keywords" CONTENT="kbcode JCOM JVM">
<META NAME="KBArea" CONTENT="Support; KB; java">
<META NAME="Description" CONTENT="  This article describes how to create a modal dialog box with respect to the Internet Explorer browser in Java. The class java.awt.Dialog allows you to create a modal dialog box, but this dialog box is not modal with respect to the browser. To creat...">
<META NAME="Product" CONTENT="java">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXF,QAPN,QBWA,QDNQ,QA01,QBE5,QAT7,QAGI,QAY2,QAW6,QAMB,QBV9,QBRJ,QAY5,QATX V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Creating a Modal Dialog Box from Java</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177753</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>SDK for Java, version 2.0, 2.01
<LI>Microsoft Internet Explorer (Programming), version 4.0, 4.01
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
This article describes how to create a modal dialog box with respect to the
Internet Explorer browser in Java. The class java.awt.Dialog allows you to
create a modal dialog box, but this dialog box is not modal with respect to
the browser. To create a modal dialog box with respect to the browser, you
can use Internet Explorer 4.0's showModalDialog method (part of the Window
object). Due to a limitation in calling showModalDialog directly from Java,
a technique is used to call the showModalDialog method on behalf of the
Virtual Machine for Java.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
The following HTML and Java applet demonstrates how to create a modal
dialog box from Java under Internet Explorer 4.0. This sample demonstrates
invoking the showModalDialog method from Java using the setTimeout method
and interaction between Java and Internet Explorer 4.0 using AutoIDispatch.
<P>
Please see the following Java code, which is used in HTML later. This
applet has a method called setMyObject(), which takes an object as a
parameter. When the user clicks the "click me" button, the "doModal()"
method is invoked on the object passed in from the setMyObject() method.
The "doModal()" method takes a string as a parameter, which is the content
of the text field.
<P>
<PRE>   import java.applet.Applet;
   import java.awt.*;
   import java.awt.event.*;
   import com.ms.com.Dispatch;

   public class DialogTest extends Applet implements ActionListener
   {
      Object MyObject;

      TextField tf= new TextField("testing.....",30);

      public void init()
      {
         Button b = new Button("click me");
         add(b);
         b.addActionListener(this);
         add(tf);
      }

      public void setMyObject(Object MyObject) { MyObject = MyObject; }

      public void actionPerformed(ActionEvent e)
      {
         Dispatch.call(MyObject, "doModal", tf.getText());
      }
</PRE>}
<P>
The following HTML creates a Java applet called DialogTest and, upon
initialization, passes in a reference to "this" via the setMyObject()
method in the applet. The applet stores a reference to this object in order
to call the method doModal, which in turn sets a timeout that is a
workaround for calling showModalDialog directly. The argument passed into
doModal() is passed down to showModalDialog as the dialog argument into the
modal dialog box.
<P>
<PRE>   &lt;HTML&gt;
   &lt;HEAD&gt;
   &lt;TITLE&gt;Dialog Test&lt;/TITLE&gt;
   &lt;/HEAD&gt;
   &lt;BODY&gt;
   &lt;APPLET
      CODE=DialogTest
      ID=DialogTest
      WIDTH=300
      HEIGHT=70 &gt;
   &lt;/APPLET&gt;

   &lt;SCRIPT LANGUAGE="JavaScript"&gt;
   &lt;!--
   function doModal(tst)
   {
      setTimeout("doModal2('DialogTestDialog.html', '"+tst+"')",100);
   }

   function doModal2(url, dialogarg)
   {
      var strFeatures = "dialogWidth:385px;dialogHeight:100px;" +
         "help:no;maximize:no;minimize:no;scrollbars:no";
      var cRetValue=showModalDialog(url,dialogarg,strFeatures);
      if (cRetValue == null)
      {
         alert('You clicked the cancel or close button');
      }
      else
      {
         alert(cRetValue);
      }
   }

   function init()
   {
      DialogTest.setMyObject(this);
   }

   window.onload=init;
   --&gt;
   &lt;/SCRIPT&gt;
   &lt;/BODY&gt;
   &lt;/HTML&gt;

</PRE>The following HTML is the DialogTestDialog.html referenced in the HTML
above. This HTML effectively becomes the modal dialog box. It takes the
window.dialogArguments variable (which originated from the Java applet) and
puts this string into a text field. When the user clicks the "click me"
button on this page, the window.returnValue is set to the value of this
text field. The above HTML then displays the return value using the
JavaScript alert() method.
<P>
<PRE>   &lt;HTML&gt;
   &lt;HEAD&gt;
   &lt;TITLE&gt;DialogTestDialog&lt;/TITLE&gt;

   &lt;SCRIPT LANGUAGE="JavaScript"&gt;
   &lt;!--
   function doOK()
   {
      window.returnValue=document.all.inp1.value;
      window.close()
   }

   function init()
   {
      document.all.inp1.value=window.dialogArguments;
   }

   window.onload=init;

   --&gt;
   &lt;/SCRIPT&gt;

   &lt;/HEAD&gt;
   &lt;BODY&gt;

   &lt;INPUT TYPE=BUTTON NAME=b1 VALUE="click me" onclick="doOK()"&gt;
   &lt;INPUT NAME=inp1 SIZE=30&gt;

   &lt;/BODY&gt;
   &lt;/HTML&gt;

</PRE><h2>REFERENCES</h2>
 
<P>
See the Internet Client SDK documentation for more information on the
showModalDialog method in Internet Explorer 4. Please see Knowledge Base
article <B><A HREF="../java/Q172202.htm">Q172202</A></B> (INFO: Implementing Java Automation Objects using
AutoIDispatch) for more information on interactivity between Java and
scripting using COM.
<P>
For the latest Knowledge Base articles and other support information on
Visual J++ and the SDK for Java, see the following page on the Microsoft
Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/visualj/">http://support.microsoft.com/support/visualj/</A></B>
   <B><A HREF="http://support.microsoft.com/support/java/">http://support.microsoft.com/support/java/</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: modal dialog internet explorer
<P>

Keywords          : kbcode JCOM JVM<BR>
Technology        : kbInetDev internet<BR>
Version           : WINDOWS:2.0,2.01,4.0,4.01<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
