

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUG: IllegalAccessError Using Private Inherited Constructor </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q177180">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1997/11/21">
<META NAME="Keywords" CONTENT="kbcode kberrmsg JVM">
<META NAME="KBArea" CONTENT="Support; KB; java">
<META NAME="Description" CONTENT="  If a class (B) inherits from a class (A) that has a private default constructor, an attempt to instantiate class (B) should result in a compiler error. The compiler shipped with Visual J++ (version 1.01.7022) does not catch this error. The Microsof...">
<META NAME="Product" CONTENT="java">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QAB4,QAAP,QBXF,QA56,QA55,QAOT,QABO,QAKP,QA1O,QAY2,QABN,QBSO,QAR4,QAK7,QABA V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>BUG: IllegalAccessError Using Private Inherited Constructor</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q177180</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Virtual Machine for Java
<LI>Microsoft Visual J++, version 1.1
<LI>SDK for Java, version 2.0
</UL> 
<P>
<P><h2>SYMPTOMS</h2>
 
<P>
If a class (B) inherits from a class (A) that has a private default
constructor, an attempt to instantiate class (B) should result in a
compiler error. The compiler shipped with Visual J++ (version 1.01.7022)
does not catch this error. The Microsoft Virtual Machine for Java, however,
does catch this error. When the applet or application is run the following
error is generated by the Virtual Machine:
<P>
<PRE>   java.lang.IllegalAccessError: A: method &lt;init&gt;()V is inaccessible

</PRE>NOTE: Non-Microsoft virtual machines may not throw this error. It is,
however, correct behavior to do so.
<P>
<P><h2>RESOLUTION</h2>
 
<P>
Use the compiler shipped with SDK for Java 2.0 with Visual J++. You can do
this by replacing the compiler file in Visual J++ with three files from the
Microsoft SDK for Java. First, save a copy of the compiler (Jvc.exe) from
your existing Visual J++ installation. Next, copy Jvc.exe, Jps.dll, and
Msjvc.dll into your Visual J++ directory. Projects will then build using
the new compiler.
<P>
The new compiler will catch this problem by generating the following error
message:
<P>
<PRE>   error J0147: Cannot access private member 'A()' in class 'A' from class
                'B'

</PRE><h2>STATUS</h2>
 
<P>
This problem was corrected in jvc version 1.02.4337, which ships in the SDK
for Java version 2.0
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
<P><h3>Steps to Reproduce Behavior</h3>
 

<OL><P><LI>Using Visual J++ 1.1, create a Java Project and the following Java
   classes in it:
<P>
<P><PRE>      public class TestError
      {
</PRE><P>
<PRE>         public static void main( String[] args )
         {
            boolean returnValue = true;

            try
            {
               // The compiler should flag this line as an error
               B obj = new B();
               returnValue = true;
            }
            catch( Throwable e )
           {
               e.printStackTrace();
               returnValue = false;
            }

            System.out.println( "Passed = " + returnValue );
         }
      }

      class A
      {
         private A() {}
      }

      class B extends A
      {
         public B() {}
      }

</PRE><P><LI>Build the Java project.

<P><LI>You will see the above mentioned error, when you run this application.
<P>
</OL><h2>REFERENCES</h2>
 
<P>
For the latest Knowledge Base articles and other support information on
Visual J++ and the SDK for Java, see the following page on the Microsoft
Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/visualj/">http://support.microsoft.com/support/visualj/</A></B>
   <B><A HREF="http://support.microsoft.com/support/java/">http://support.microsoft.com/support/java/</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: protected private default constructor
<P>

Keywords          : kbcode kberrmsg JVM<BR>
Technology        : kbInetDev internet<BR>
Version           : WINDOWS:1.1,2.0<BR>
Platform          : WINDOWS<BR>
Issue type        : kbbug<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
