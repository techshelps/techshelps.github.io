

<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HOWTO: Fire 'Events' from a Java Applet on a Web Page </TITLE>

<!--STYLE_BEGIN-->
<style>@import url(../../msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="../../msdn_ie3.css">
<!--STYLE_END-->

<META HTTP-EQUIV="CONTENT-Type" CONTENT="text/html; charset=us-ascii">
<META NAME="ms.locale" CONTENT="EN-US">
<META NAME="Category" CONTENT="Support; KB Article">
<META NAME="KBID" CONTENT="Q178994">
<META NAME="KBModify" CONTENT="1998/01/29">
<META NAME="KBCreate" CONTENT="1998/01/07">
<META NAME="Keywords" CONTENT="JMisc">
<META NAME="KBArea" CONTENT="Support; KB; java">
<META NAME="Description" CONTENT="  In Internet Explorer 3.0x, there is no way for a Java Applet to  fire  an event that can be handled through scripting on a Web page. This article shows how to use combination of Java class methods and scripting methods to simulate events.  NOTE: In...">
<META NAME="Product" CONTENT="java">
<META NAME="Platform" CONTENT="Windows">
<META NAME="Technology" CONTENT=" ">
<META NAME="Premium" CONTENT="support">

<META NAME="nyms" CONTENT="QBXF,QAPN,QBWA,QAT7,QAUD,QDNQ,QAO4,QBXS,QAY5,QAGI,QALW,QBRJ,QBV9,QAY2,QAMB V02180118">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LEFTMARGIN="0" RIGHTMARGIN="0" TOPMARGIN="0">


<!--DOCBODY_START-->
<BR>
<CENTER>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0" VALIGN="top" WIDTH="90%">
	<TR>
		<TD VALIGN="top">
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<H1>HOWTO: Fire 'Events' from a Java Applet on a Web Page</H1>
			</FONT>
			<FONT FACE="verdana,arial,helvetica" SIZE="1">
			Last reviewed:  January 29, 1998</FONT><BR>
			<FONT FACE="verdana,arial,helvetica" SIZE="2">
			<B>Article ID: Q178994</B>
			</FONT>
		</TD>
	</TR>
	<TR>
	<TD>
	<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>



 
 
The information in this article applies to:

<UL><LI>Microsoft Win32 Virtual Machine for Java
<LI>Microsoft Visual Basic, Scripting Edition, version 2.0
<LI>Microsoft JScript, versions 1.0, 2.0
<LI>Microsoft Internet Explorer (Programming), versions 3.01, 3.02
</UL> 
<P>
<P><h2>SUMMARY</h2>
 
<P>
In Internet Explorer 3.0x, there is no way for a Java Applet to "fire" an
event that can be handled through scripting on a Web page. This article
shows how to use combination of Java class methods and scripting methods to
simulate events.
<P>
NOTE: In Internet Explorer 4.0, events can be fired from a Java applet and
caught in the Web pages script. See the Microsoft SDK for Java 2.0
documentation for more information.
<P>
<P><h2>MORE INFORMATION</h2>
 
<P>
In order to simulate an event from a Java applet, you will need to create a
set of methods in your Java Applet class and a polling function on the Web
page. The polling function will check the applet to see if the event has
occurred and act on that event if it has occurred.
<P>
For example, if you wanted to fire an event when the users clicks on the
applet, you would code the class as follows:
<P>
<PRE>   import java.awt.*;
   import java.applet.*;
   public class MyApplet extends Applet
   {
      // fire is the private member that determines if the event fired
      private boolean fire = false;

      public MyApplet()
      {
         // Set the background to black so it can be seen
         setBackground(Color.black);
      }

      public boolean handleEvent(Event e)
      {
         if(e.id == e.MOUSE_DOWN)
         {
            // When the user clicks, set fire to True.
            fire = true;
         }
         return false;
      }

      // Scripting will call this method to see if the event occurred.
      public boolean clicked()
      {
         // If fire is True, then 'reset' it to False and return True
         if(fire)
         {
            fire = false;
            return true;
         }
         // Otherwise, return False
         return false;
      }
   }

</PRE>Then, you need to create HTML:
<P>
<PRE>   &lt;HTML&gt;
   &lt;HEAD&gt;
   &lt;SCRIPT LANGUAGE="VBScript"&gt;
   &lt;!--
   Sub window_onLoad()
      ' Set the initial timeout for polling
      window.setTimeout "checkClicked", 1000
   end sub

   ' This is the method that the timeout calls
   Sub checkClicked()
      if document.app.clicked then
         ' The applets clicked method returned True
         msgbox "You clicked my applet!"
         ' Reset the timeout
         window.setTimeout "checkClicked", 1000
      else
         ' The applets clicked method returned False
         ' Reset the timeout
         window.setTimeout "checkClicked", 1000
      end if
   end sub
   --&gt;
   &lt;/SCRIPT&gt;

   &lt;TITLE&gt;Document Title&lt;/TITLE&gt;
   &lt;/HEAD&gt;

   &lt;BODY&gt;

   &lt;APPLET CODE=MyApplet.class ID=app WIDTH=320 HEIGHT=200&gt;
   &lt;/APPLET&gt;

   &lt;/BODY&gt;
   &lt;/HTML&gt;

</PRE>When the Web page is loaded, the window_onLoad function executea. It
sets a "timeout" to execute the checkClicked VBScript function. The
checkClicked function "polls" the Applet by calling the clicked method on
the Applet. If the clicked method returns True, then the checkClicked
displays a message box and resets the timeout. If the clicked method
returned False, then the checkClicked function just resets the timeout.
<P>
Both VBScript and JScript can access public members and methods of the Java
Applet due to a feature of the Microsoft Virtual Machine for Java called
AutoIDispatch. If you needed to simulate "Event Parameters," such as
coordinates of the mouse click, you could add additional public methods on
the Applet that returned these values.
<P>
<P><h2>REFERENCES</h2>
 
<P>
For more information about the Microsoft Virtual Machine for Java's
AutoIDispatch feature, please see the following article in the Microsoft
Knowledge Base:
<P>
ARTICLE-ID: <B><A HREF="../java/Q172202.htm">Q172202</A></B>
<PRE>TITLE     : INFO: Implementing Java Automation Objects Using AutoIDispatch

</PRE>For the latest Knowledge Base articles and other support information on
Visual J++ and the SDK for Java, see the following page on the Microsoft
Technical Support site:
<P>
<PRE>   <B><A HREF="http://support.microsoft.com/support/visualj/">http://support.microsoft.com/support/visualj/</A></B>
   <B><A HREF="http://support.microsoft.com/support/java/">http://support.microsoft.com/support/java/</A></B>
</PRE>

	</FONT>
	</TD>
	</TR>
</TABLE>
<P>


<!--DOCBODY_END-->

<!--FOOTER_START-->
<table cellpadding=5 border=0 width="90%">
<tr>
<td>
	<HR WIDTH="90%">

<BLOCKQUOTE>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="1">
<SPAN STYLE="font-family:verdana,arial,helvetica; font-size:8pt">
Additional query words: fire events applet script
<P>

Keywords          : JMisc<BR>
Version           : WINDOWS:1.0,2.0,3.01,3.02<BR>
Platform          : WINDOWS<BR>
Issue type        : kbhowto<BR>

</SPAN>
</FONT>
<BR>
<BR>
THE INFORMATION PROVIDED IN THE MICROSOFT KNOWLEDGE BASE IS
PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND.  MICROSOFT DISCLAIMS
ALL WARRANTIES, EITHER EXPRESS OR IMPLIED, INCLUDING THE WARRANTIES
OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  IN NO
EVENT SHALL MICROSOFT CORPORATION OR ITS SUPPLIERS BE LIABLE FOR
ANY DAMAGES WHATSOEVER INCLUDING DIRECT, INDIRECT, INCIDENTAL,
CONSEQUENTIAL, LOSS OF BUSINESS PROFITS OR SPECIAL DAMAGES, EVEN IF
MICROSOFT CORPORATION OR ITS SUPPLIERS HAVE BEEN ADVISED OF THE
POSSIBILITY OF SUCH DAMAGES.  SOME STATES DO NOT ALLOW THE EXCLUSION
OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES
SO THE FOREGOING LIMITATION MAY NOT APPLY.
</BLOCKQUOTE>
<P>
<center>
	<FONT FACE="Verdana,Arial,Helvetica" SIZE="1">
	Last reviewed:  January 29, 1998</FONT>
	<BR>
	<A HREF="../cpyright.htm" STYLE="font: bold 7pt Verdana,Arial,Helvetica">&copy; 1998 Microsoft Corporation. All rights reserved. Terms of Use.</A><BR>
	
</center>
</td>
</tr>
</table>

<!--FOOTER_END-->
</FONT>
</BODY>
</HTML>
