<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Error Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjerror"></a>CdbError Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjErrorC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjErrorM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjErrorP">
</object></p>
<p>
A <b>CdbError</b> object contains details about data access errors, each of which pertains to a single operation involving <a href="daglos01_2mnj.htm">DAO</a>.</p>
<p>
<a href="dadobj01_4tet.htm"><img src="objdbeng.gif" border=0></a><br>
<img src="parchild.gif" border=0><a href="dadobj02_7oaa.htm"><img src="colerror.gif" border=0></a><br>
<img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objerror.gif" border=0></p>
<p class=label>
<b>Remarks</b></p>
<p>
Any operation involving DAO can generate one or more errors. For example, a call to an <a href="daglos03_0bqb.htm">ODBC</a> server might result in a database server error, an ODBC error, and a DAO error. As each error occurs, a <b>CdbError</b> object is placed in the <b>Errors</b> collection of the <b>CdbDBEngine</b> object. A single event can, therefore, result in several <b>CdbError</b> objects appearing in the <b>Errors</b> collection.</p>
<p>
When a subsequent DAO operation generates an error, the <b>Errors</b> collection is cleared and one or more new <b>CdbError</b> objects are placed in the <b>Errors</b> collection. DAO operations that don't generate an error have no effect on the <b>Errors</b> collection.</p>
<p>
The set of <b>CdbError</b> objects in the <b>Errors</b> collection describes one error. The first <b>CdbError</b> object is the lowest level error (the originating error), the second is the next higher level error, and so forth. For example, if an <a href="daglos03_0bqb.htm">ODBC</a> error occurs while trying to open a <a href="dadobj04_452s.htm">CdbRecordset</a> object, the first <b>CdbError</b> object — <b>Errors</b>(0) — contains the lowest level ODBC error; subsequent errors contain the ODBC errors returned by the various layers of ODBC. In this case, the ODBC driver manager, and possibly the driver itself, return separate <b>CdbError</b> objects. The last <b>CdbError</b> object — <b>Errors.Count-1</b> — contains the DAO error indicating that the object couldn't be opened.</p>
<p>
Enumerating the specific errors in the <b>Errors</b> collection enables your error-handling routines to more precisely determine the cause and origin of an error, and take appropriate steps to recover. On both <a href="daglos02_60it.htm">Microsoft Jet</a> and <a href="daglos03_4o11.htm">ODBCDirect</a> workspaces, you can read the <b>CdbError</b> object’s properties to obtain specific details about each error, including:
<ul type=disc>
<li>
The <a href="daprop03_9cq6.htm">Description</a> property, which contains the text of the error alert that will be displayed on the screen if the error is not trapped.<br><br></li>
<li>
The <a href="daprop05_38ky.htm">Number</a> property, which contains the <a href="daglos02_5c6d.htm">Long</a> integer value of the error constant.<br><br></li>
<li>
The <a href="daprop07_23dx.htm">Source</a> property, which identifies the object that raised the error. This is particularly useful when you have several <b>CdbError</b> objects in the <b>Errors</b> collection following a request to an <a href="daglos03_23vp.htm">ODBC data source</a>.<br><br></li>
<li>
The <b>HelpFile</b> and <b>HelpContext</b> properties, which indicate the appropriate Microsoft Windows Help file and Help topic, respectively, (if any exist) for the error.</li>
</ul>
<p class=label>
<b>CdbError Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbError(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbError(const CdbError &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbError &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbError(DAOError *</b><i>perr</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i><b> = FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=22%><b>Type</b></td>
<td class=label width=28%><b>Argument</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=22%><b>DAOError *</b></td>
<td width=28%><i>perr</i></td>
<td width=50%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=22%><b>BOOL</b></td>
<td width=28%><i>bAddRef<br>
</i><b>=FALSE</b></td>
<td width=50%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, the DAO Automation interface <b>AddRef</b> function is called.</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object if you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object, but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
