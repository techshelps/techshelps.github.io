<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Another Setup Tool</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dahowusinganothersetuptool"></a>Using Another Setup Tool</h1>
<p>
If you want to use another setup tool, or, for example, your setup is simple enough to do by copying files using a .bat file, you can use a combination of the above approaches to reduce the work required and still have a robust setup.</p>
<p class=indent>
<B><b>Note</b></B> Creating your own installation without using the supplied InstallShield scripts as a starting point is not recommended. An OLE Automation server like DAO can only exist in one place on a machine, so if your setup does not work correctly it will break other applications that use DAO (such as Microsoft Access, Microsoft Excel, Visual Basic, or other DAO-enabled applications). If you need to start from scratch, see the file Daosetup.rtf in the Setup subdirectory of your DAO SDK installation for more details.</p>
<p>
The easiest way to do this is to use the supplied install program to do either a minimal or full install of the run-time components. You can have this happen without anything being displayed to the user by using the silent option outlined above. This will also provide full uninstall capabilities that you trigger programmatically.</p>
<p>
If you use the automatic setup, an entry will be written to the registry at the location:</p>
<p>
<b>HKEY_LOCAL_MACHINE\Windows\CurrentVersion\Uninstall\Data Access Objects (DAO)</b></p>
<p>
Below this entry there will be a key named <b>UninstallString</b> that will have a value of something like:</p>
<p>
<b>C:\Windows\uninst.exe -f "C:\program files\common files\Microsoft Shared\DAO\DelsLog.1"</b></p>
<p>
Your setup program may wish to modify this (for example, change the name to “DAO portion of My Application”). Alternatively, you might remove the key altogether and trigger the uninstall when your own application is uninstalled. However you decide to handle this, you should ensure that DAO is uninstalled using the command line found in the registry. This will handle the appropriate DLL reference counting, clean up the registry, and take care of other setup details.</p>
</font></BODY>
</HTML>
