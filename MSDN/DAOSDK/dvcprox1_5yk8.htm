<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ForeignName, ForeignTable, and Table Properties Example (VC++)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="daproforeignnamex"></a>ForeignName, ForeignTable, and Table Properties Example (VC++)</h1>
<p>
This example shows how you can use the <b>ForeignName</b>, <b>ForeignTable</b>, and <b>Table</b> properties when you create a relationship between two existing tables — in this case, Table1 (the primary table) and Table2 (the foreign table) in the specified database. Field1 is the primary key in Table1 and Field2 is a foreign key in Table2. The relationship is one-to-many and referential integrity is enforced.</p>
<pre><code>CdbDBEngine   dbeng;
CdbDatabase   dbsDefault;
CdbField   fldLocal;
CdbRelation   relForeign;

// Get database
dbsDefault =&nbsp; dbeng.OpenDatabase(_T("Northwind.mdb"));

// Create new relationship and set its properties.
relForeign = dbsDefault.CreateRelation(_T("MyRelation"));
relForeign.SetTable(_T("Table1"));
relForeign.SetForeignTable(_T("Table2"));

// Create field and set its properties.
fldLocal = relForeign.CreateField(_T("Field1"));
fldLocal.SetForeignName(_T("Field2"));

// Append field to relation and relation to database.
relForeign.Fields.Append(fldLocal);
dbsDefault.Relations.Append(relForeign);
dbsDefault.Close();
</code></pre>
</font></BODY>
</HTML>
