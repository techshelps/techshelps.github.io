<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FindFirst, FindLast, FindNext, FindPrevious Methods (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmthfindfirst"></a>FindFirst, FindLast, FindNext, FindPrevious Methods</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthFindFirstC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthFindFirstX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthFindFirstA">
</object></p>
<p>
Locates the first, last, next, or previous record in a dynaset- or snapshot-type <a href="dadobj04_452s.htm">Recordset</a> object that satisfies the specified criteria and makes that record the <a href="daglos01_7wpw.htm">current record</a> (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>VOIDFindFirst( LPCTSTR</b><i>pstrCriteria</i><b> );</b></p>
<p>
<b>VOIDFindLast( LPCTSTR</b><i>pstrCriteria</i><b> );</b></p>
<p>
<b>VOIDFindNext( LPCTSTR</b><i>pstrCriteria</i><b> );</b></p>
<p>
<b>VOIDFindPrevious( LPCTSTR</b><i>pstrCriteria</i><b> );</b></p>
<p class=label>
<b>Parameters</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=20%><b>Type</b></td>
<td class=label width=26%><b>Argument</b></td>
<td class=label width=54%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=20%><b>LPCTSTR</b></td>
<td width=26%><i>pstrCriteria</i></td>
<td width=54%>A pointer to a string expression (like the WHERE clause in an SQL statement without the word WHERE) used to locate the record.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
If you want to include all the records in your search — not just those that meet a specific condition — use the <a href="dameth04_5rn8.htm">Move</a> methods to move from record to record. To locate a record in a table-type <b>CdbRecordset</b>, use the <a href="dameth06_46qz.htm">Seek</a> method.</p>
<p>
If a record matching the criteria isn't located, the current record pointer is unknown, and the <a href="daprop05_8uqw.htm">NoMatch</a> property is set to <b>True</b>. If <i>recordset</i> contains more than one record that satisfies the criteria, <b>FindFirst</b> locates the first occurrence, <b>FindNext</b> locates the next occurrence, and so on.</p>
<p>
Each of the <b>Find</b> methods begins its search from the location and in the direction specified in the following table.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=26%><b>Find method</b></td>
<td class=label width=37%><b>Begins searching at</b></td>
<td class=label width=37%><b>Search direction</b></td>
</tr>
<tr valign=top>
<td width=26%><b>FindFirst</b></td>
<td width=37%>Beginning of recordset</td>
<td width=37%>End of recordset </td>
</tr>
<tr valign=top>
<td width=26%><b>FindLast</b></td>
<td width=37%>End of recordset</td>
<td width=37%>Beginning of recordset </td>
</tr>
<tr valign=top>
<td width=26%><b>FindNext</b></td>
<td width=37%>Current record</td>
<td width=37%>End of recordset </td>
</tr>
<tr valign=top>
<td width=26%><b>FindPrevious</b></td>
<td width=37%>Current record</td>
<td width=37%>Beginning of recordset </td>
</tr>
</table><br>
<p>
When you use the <b>FindLast</b> method, the <a href="daglos02_0elh.htm">Microsoft Jet database engine</a> fully populates your <b>CdbRecordset</b> before beginning the search, if this hasn't already happened.</p>
<p>
Using one of the <b>Find</b> methods isn't the same as using a <b>Move</b> method, however, which simply makes the first, last, next, or previous record current without specifying a condition. You can follow a Find operation with a Move operation.</p>
<p>
Always check the value of the <b>NoMatch</b> property to determine whether the Find operation has succeeded. If the search succeeds, <b>NoMatch</b> is <b>False</b>. If it fails, <b>NoMatch</b> is <b>True</b> and the current record isn't defined. In this case, you must position the current record pointer back to a valid record.</p>
<p>
Using the <b>Find</b> methods with <a href="daglos02_7hgl.htm">Microsoft Jet-connected ODBC</a>-accessed recordsets can be inefficient. You may find that rephrasing your <i>criteria</i> to locate a specific record is faster, especially when working with large recordsets.</p>
<p>
In an <a href="daglos03_4o11.htm">ODBCDirect workspace</a>, the <b>Find</b> and <b>Seek</b> methods are not available on any type of <b>CdbRecordset</b> object, because executing a <b>Find</b> or <b>Seek</b> through an ODBC connection is not very efficient over the network. Instead, you should design the query (that is, using the <i>source</i> argument to the <a href="dameth05_1f78.htm">OpenRecordset</a> method) with an appropriate WHERE clause that restricts the returned records to only those that meet the criteria you would otherwise use in a <b>Find</b> or <b>Seek</b> method.</p>
<p>
When working with Microsoft Jet-connected ODBC databases and large dynaset-type <b>CdbRecordset</b> objects, you might discover that using the <b>Find</b> methods or using the <a href="daprop07_4uic.htm">Sort</a> or <a href="daprop04_1ynm.htm">Filter</a> property is slow. To improve performance, use SQL queries with customized ORDER BY or WHERE clauses, <a href="daglos03_2515.htm">parameter queries</a>, or <a href="dadobj03_6zdy.htm">CdbQueryDef</a> objects that retrieve specific indexed records.</p>
<p>
Use the U.S. date format (month-day-year) when you search for fields containing dates, even if you're not using the U.S. version of the Microsoft Jet database engine; otherwise, the data may not be found. Use the Microsoft Visual Basic <b>Format</b> function to convert the date. For example:</p>
<pre><code>rstEmployees.FindFirst "HireDate &gt; #" _
   &amp; Format(mydate, 'm-d-yy' ) &amp; "#"
</code></pre>
<p>
If <i>pstrCriteria</i> is composed of a string concatenated with a non-integer value, and the system parameters specify a non-U.S. decimal character such as a comma (for example, <code>strSQL = "PRICE &gt; " &amp; lngPrice</code>, and <code>lngPrice = 125,50</code>), an error occurs when you try to call the method. This is because during concatenation, the number will be converted to a string using your system's default decimal character, and Microsoft Jet SQL only accepts U.S. decimal characters.</p>
<p class=label>
<b>Notes</b>
<ul type=disc>
<li>
For best performance, the <i>pstrCriteria</i> should be in either the form "<i>field </i>=<i> value</i>" where <i>field</i> is an indexed field in the underlying base table, or "<i>field</i> LIKE <i>prefix</i>" where <i>field </i>is an indexed field in the underlying base table and <i>prefix</i> is a prefix search string (for example, <code>"ART*"</code>).<br><br></li>
<li>
In general, for equivalent types of searches, the <b>Seek</b> method provides better performance than the <b>Find </b>methods. This assumes that table-type <b>Recordset </b>objects alone can satisfy your needs.</li>
</ul>
<p class=label>
<b>Usage</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;
...
CdbBookmark         bmHere;
CdbRecordset      rstCustomers;
...
// Save current record position.
bmHere = rstCustomers.GetBookmark();   
// Search for a name in the recordset.
rstCustomers.FindFirst(_T("Name = 'Ms. Schmidt'"));
// If not found go back to saved record position.
if (rstCustomers.GetNoMatch()) 
   rstCustomers.SetBookmark( &amp;bmHere );   
</code></pre>
</font></BODY>
</HTML>
