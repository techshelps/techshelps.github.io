<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Models</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvhowobjectmodels"></a>Object Models</h1>
<p>
DAO supports two different database environments or workspaces.
<ul type=disc>
<li>
<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> allow you to access data in <a href="daglos02_0elh.htm">Microsoft Jet databases</a>, <a href="daglos02_7hgl.htm">Microsoft Jet-connected ODBC databases</a>, and <a href="daglos02_1c8d.htm">installable ISAM</a> data sources in other formats, such as Paradox or Lotus 1-2-3.<br><br></li>
<li>
<a href="daglos03_4o11.htm">ODBCDirect workspaces</a> allow you to access database servers through <a href="daglos03_0bqb.htm">ODBC</a>, without loading the <a href="daglos02_0elh.htm">Microsoft Jet database engine</a>.</li>
</ul>
<p>
Use the Microsoft Jet workspace when you open a Microsoft Jet database (.mdb file) or other desktop ISAM database, or when you need to take advantage of Microsoft Jet's unique features, such as the ability to join data from different database formats.</p>
<p>
The <a href="daglos03_37lg.htm">ODBCDirect</a> workspace provides an alternative when you only need to execute queries or stored procedures against a back-end server, such as Microsoft SQL Server, or when your client application needs the specific capabilities of ODBC, such as <a href="daglos01_6t7r.htm">batch updates</a> or <a href="daglos01_2feh.htm">asynchronous query</a> execution.</p>
<p class=label>
<b>DAO Objects</b></p>
<p>
There are 17 different DAO object types. You can declare new DAO <a href="daglos03_5jl1.htm">object variables</a> for any of the object types.</p>
<p>
For example, the following Visual C++ code creates object variables for a <b>CdbDatabase</b> object, a dynaset-type <b>CdbRecordset</b> object, and a <b>CdbField</b> object:</p>
<pre><code>CdbDBEngine      eng;
CdbDatabase      dbs;
CdbRecordset      rst;
CdbField         fld;
//
dbs = eng.OpenDatabase("Biblio.mdb");
rst = dbs.OpenRecordset("Authors", dbOpenDynaset);
fld = rst.Fields["Au_ID"];
</code></pre>
<p class=label>
<b>DAO Collections</b></p>
<p>
Each DAO object type other than <b>CdbDBEngine</b> also has a corresponding collection. A collection includes all the existing objects of that type. For example, the <b>Recordsets</b> collection contains all open <b>CdbRecordset</b> objects. Each collection is "owned" by another object at the next higher level in the hierarchy. A <b>CdbDatabase</b> object "owns" a <b>Recordsets</b> collection. Except for the <b>CdbConnection</b> and <b>CdbError</b> objects, every DAO object has a <b>Properties</b> collection.</p>
<p>
Most DAO objects have default collections. For example, the default collection of a <b>CdbRecordset</b> object is the <b>Fields</b> collection. You can simplify your code by taking advantage of these defaults. For example, the following code returns the PubID field in the current record:</p>
<pre><code>CdbField fld = rstExample["PubID"];
</code></pre>
<p class=label>
<b>CdbDBEngine and CdbWorkspace Objects</b></p>
<p>
All DAO objects are derived from the <b>CdbDBEngine</b> object. You can set the <b>DefaultType</b> property on the <b>CdbDBEngine</b> object to determine the workspace type (Microsoft Jet or ODBCDirect) to create on subsequent <b>CreateWorkspace</b> method calls, or you can override this property with the <i>Type</i> argument in the <b>CreateWorkspace</b> method itself. When your application creates a workspace, the appropriate library — the Microsoft Jet database engine or ODBC — is loaded into memory at that time.</p>
<p>
You can open additional <b>CdbWorkspace</b> objects as needed. Each <b>CdbWorkspace</b> object has a user ID and password associated with it.</p>
</font></BODY>
</HTML>
