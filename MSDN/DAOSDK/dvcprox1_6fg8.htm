<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ConflictTable Property Example (VC++)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="daproconflicttablex"></a>ConflictTable Property Example (VC++)</h1>
<p>
This example shows how to use the <b>ConflictTable</b> property to resolve update conflicts.</p>
<pre><code>void ResolveConflict( CdbDatabase&amp; dbs )
{
CdbTableDef         tdfTest;
CdbRecordset      rstConflict;
CString            strTable;
long            lCt, lMaxCt;
//
lMaxCt = dbs.TableDefs.GetCount();
for (lCt = 0; lCt &lt; lMaxCt; lCt++)
   {
   tdfTest = dbs.TableDefs[lCt];
   strTable = tdfTest.GetConflictTable();
   if(!strTable.IsEmpty())
      {
      rstConflict = dbs.OpenRecordset(
                     (LPCTSTR)strTable));
      // Process each record
      rstConflict.MoveFirst();
      while (!rstConflict.GetEOF())
         {
         // Do conflict resolution.
         // Remove conflicting record when finished.
         rstConflict.Delete();
         rstConflict.MoveNext();
         }
      rstConflict.Close();
      }
   }
}
</code></pre>
</font></BODY>
</HTML>
