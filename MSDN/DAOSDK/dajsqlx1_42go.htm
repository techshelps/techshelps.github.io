<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SELECT Statement, FROM Clause Example (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="dasqlselectx"></a>SELECT Statement, FROM Clause Example</b></p>
<p>
Some of the following examples assume the existence of a hypothetical Salary field in an Employees table. Note that this field does not actually exist in the Northwind database Employees table.</p>
<p>
This example creates a dynaset-type <b>Recordset </b>based on an <a href="daglos04_188k.htm">SQL statement</a> that selects the LastName and FirstName fields of all records in the Employees table. It calls the EnumFields procedure, which prints the contents of a <b>Recordset</b> object to the <b>Debug</b> window.</p>
<pre><code>Sub SelectX1()

   Dim dbs As Database, rst As Recordset

   ' Modify this line to include the path to Northwind
   ' on your computer.
   Set dbs = OpenDatabase("Northwind.mdb")

   ' Select the last name and first name values of all 
   ' records in the Employees table.
   Set rst = dbs.OpenRecordset("<span class=cfe><b>SELECT </b></span>LastName, " _
      &amp; "FirstName FROM Employees;")

   ' Populate the recordset.
   rst.MoveLast
</code></pre>
<p>
<code>' Call EnumFields to print the contents of the</code></p>
<p>
<code>' Recordset.</code></p>
<p>
<code>EnumFields rst,12</code></p>
<pre><code>dbs.Close

End Sub
</code></pre>
<p>
This example counts the number of records that have an entry in the PostalCode field and names the returned field Tally.</p>
<pre><code>Sub SelectX2()

   Dim dbs As Database, rst As Recordset

   ' Modify this line to include the path to Northwind
   ' on your computer.
   Set dbs = OpenDatabase("Northwind.mdb")

   ' Count the number of records with a PostalCode 
   ' value and return the total in the Tally field.
   Set rst = dbs.OpenRecordset("<span class=cfe><b>SELECT</b></span> Count " _
      &amp; "(PostalCode) AS Tally FROM Customers;")

   ' Populate the Recordset.
   rst.MoveLast

   ' Call EnumFields to print the contents of 
   ' the Recordset. Specify field width = 12.
   EnumFields rst, 12

   dbs.Close

End Sub
</code></pre>
<p>
This example shows the number of employees and the average and maximum salaries.</p>
<pre><code>Sub SelectX3()

   Dim dbs As Database, rst As Recordset

   ' Modify this line to include the path to Northwind
   ' on your computer.
Set dbs = OpenDatabase("Northwind.mdb")

   ' Count the number of employees, calculate the 
   ' average salary, and return the highest salary.
   Set rst = dbs.OpenRecordset("<span class=cfe><b>SELECT </b></span>Count (*) " _
      &amp; "AS TotalEmployees, Avg(Salary) " _
      &amp; "AS AverageSalary, Max(Salary) " _
      &amp; "AS MaximumSalary FROM Employees;")

   ' Populate the Recordset.
   rst.MoveLast

   ' Call EnumFields to print the contents of
   ' the Recordset. Pass the Recordset object and
   ' desired field width.
   EnumFields rst, 17

   dbs.Close

End Sub
</code></pre>
<p>
The <b>Sub</b> procedure EnumFields is passed a <b>Recordset</b> object from the calling procedure. The procedure then formats and prints the fields of the <b>Recordset</b> to the <b>Debug</b> window. The <code>intFldLen</code> variable is the desired printed field width. Some fields may be truncated.</p>
<pre><code>Sub EnumFields(rst As Recordset, intFldLen As Integer)

   Dim lngRecords As Long, lngFields As Long
   Dim lngRecCount As Long, lngFldCount As Long
   Dim strTitle As String, strTemp As String

   ' Set the lngRecords variable to the number of
   ' records in the Recordset.
   lngRecords = rst.RecordCount
   ' Set the lngFields variable to the number of
   ' fields in the Recordset.
   lngFields = rst.Fields.Count
   
   Debug.Print "There are " &amp; lngRecords _
      &amp; " records containing " &amp; lngFields _
      &amp; " fields in the recordset."
   Debug.Print
   
   ' Form a string to print the column heading.
   strTitle = "Record&nbsp; "
   For lngFldCount = 0 To lngFields - 1
      strTitle = strTitle _
      &amp; Left(rst.Fields(lngFldCount).Name _
      &amp; Space(intFldLen), intFldLen)
   Next lngFldCount
   
   ' Print the column heading.
   Debug.Print strTitle
   Debug.Print
   
   ' Loop through the Recordset; print the record
   ' number and field values.
   rst.MoveFirst
   For lngRecCount = 0 To lngRecords - 1
      Debug.Print Right(Space(6) &amp; _
         Str(lngRecCount), 6) &amp; "&nbsp; ";
      For lngFldCount = 0 To lngFields - 1
         ' Check for Null values.
         If IsNull(rst.Fields(lngFldCount)) Then
            strTemp = "&lt;null&gt;"
         Else
            ' Set strTemp to the field contents. 
            Select Case _
               rst.Fields(lngFldCount).Type
               Case 11
                  strTemp = ""
               Case dbText, dbMemo
                  strTemp = _
                     rst.Fields(lngFldCount)
               Case Else
                  strTemp = _
                     str(rst.Fields(lngFldCount))
            End Select
         End If
         Debug.Print Left(strTemp _ 
            &amp; Space(intFldLen), intFldLen);
      Next lngFldCount
      Debug.Print
      rst.MoveNext
   Next lngRecCount

End Sub</code></pre>
</font></BODY>
</HTML>
