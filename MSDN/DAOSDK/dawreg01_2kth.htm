<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing the Schema.ini File</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dahowcustomizingschemainifile"></a>Customizing the Schema.ini File</h1>
<p>
To read, import, or export text data, you need to create a Schema.ini file in addition to including the Text ISAM information in the .ini file. Schema.ini contains the specifics of a text data source: how the text file is formatted, how it is read at import time, and the default export format for files. The following examples show the layout for a fixed-width file, Filename.txt.</p>
<pre><code>[Filename.txt]
ColNameHeader=False
Format=FixedLength
MaxScanRows=25
CharacterSet=OEM
Col1=columnname Char Width 24
Col2=columnname2 Date Width 9
Col3=columnname7 Float Width 10
Col4=columnname8 Integer Width 10
Col5=columnname9 LongChar Width 10
</code></pre>
<p>
Similarly, the format for a delimited file is specified as follows:</p>
<pre><code>[Delimit.txt]
ColNameHeader=True
Format=Delimited(!)
MaxScanRows=0
CharacterSet=OEM
Col1=username char width 50
Col2=dateofbirth Date width 9
</code></pre>
<p>
If you are exporting data into a delimited text file, specify the format for that file as well.</p>
<pre><code>[Export: My Special Export]
ColNameHeader=True
Format=TabDelimited
MaxScanRows=25
CharacterSet=OEM
DateTimeFormat=mm.dd.yy.hh.mm.ss
CurrencySymbol=Dm
CurrencyPosFormat=0
CurrencyDigits=2
CurrencyNegFormat=0
CurrencyThousandSymbol=,
CurrencyDecimalSymbol=.
DecimalSymbol=,
NumberDigits=2
NumberLeadingZeros=0
</code></pre>
<p>
The My Special Export example refers to a specific export option; you can specify any variation of export options at connect time. This last example also corresponds to a data source name (DSN) that can be optionally passed at connect time. All three format sections can be included in the same .ini file.</p>
<p>
The Microsoft Jet database engine uses the Schema.ini entries as follows.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=38%><b>Entry</b></td>
<td class=label width=62%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=38%>ColNameHeader</td>
<td width=62%>Can be set to either <b>True</b> (indicating that the first record of data specifies the column names) or <b>False</b>.</td>
</tr>
<tr valign=top>
<td width=38%>Format</td>
<td width=62%>Can be set to one of the following values: TabDelimited, CSVDelimited, Delimited (&lt;single character&gt;), or FixedLength. The delimiter specified for the Delimited file format can be any single character except a double quotation mark (").</td>
</tr>
<tr valign=top>
<td width=38%>MaxScanRows</td>
<td width=62%>Indicates the number of rows to be scanned when guessing the column data types. If this is set to 0, the entire file is searched.</td>
</tr>
<tr valign=top>
<td width=38%>CharacterSet</td>
<td width=62%>Can be set to OEM or ANSI, indicating whether the source file is written using an OEM or ANSI code page.</td>
</tr>
<tr valign=top>
<td width=38%>DateTimeFormat</td>
<td width=62%>Can be set to a format string indicating dates and times. This entry should be specified if all date/time fields in the import/export are handled with the same format. All of the Microsoft Jet database engine formats except AM and PM are supported. In the absence of a format string, the Windows Control Panel short date picture and time options are used.</td>
</tr>
<tr valign=top>
<td width=38%>CurrencySymbol</td>
<td width=62%>Indicates the currency symbol to be used for currency values in the text file. Examples include the dollar sign ($) and Dm. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>CurrencyPosFormat</td>
<td width=62%>Can be set to any of the following values:<p>
Currency symbol prefix with no separation ($1)</p>
<p>
Currency symbol suffix with no separation (1$)</p>
<p>
Currency symbol prefix with one character separation ($ 1)</p>
<p>
Currency symbol suffix with one character separation (1 $)</p>
<p>
If this entry is absent, the default value in the Windows Control Panel is used.</p>
</td>
</tr>
<tr valign=top>
<td width=38%>CurrencyDigits</td>
<td width=62%>Specifies the number of digits used for the fractional part of a currency amount. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>CurrencyNegFormat</td>
<td width=62%>Can be one of the following values:<p>
($1)</p>
<p>
–$1</p>
<p>
$–1</p>
<p>
$1–</p>
<p>
(1$)</p>
<p>
–1$</p>
<p>
1–$</p>
<p>
1$–</p>
<p>
–1 $</p>
<p>
–$ 1</p>
<p>
1 $–</p>
<p>
$ 1–</p>
<p>
$ –1</p>
<p>
1– $</p>
<p>
($ 1)</p>
<p>
(1 $)</p>
<p>
The dollar sign is shown for purposes of this example, but it should be replaced with the appropriate CurrencySymbol value in the actual program. If this entry is absent, the default value in the Windows Control Panel is used.</p>
</td>
</tr>
<tr valign=top>
<td width=38%>CurrencyThousandSymbol</td>
<td width=62%>Indicates the single-character symbol to be used for separating currency values in the text file by thousands. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>CurrencyDecimalSymbol</td>
<td width=62%>Can be set to any single character that is used to separate the whole from the fractional part of a currency amount. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>DecimalSymbol</td>
<td width=62%>Can be set to any single character that is used to separate the integer from the fractional part of a number. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>NumberDigits</td>
<td width=62%>Indicates the number of decimal digits in the fractional portion of a number. If this entry is absent, the default value in the Windows Control Panel is used.</td>
</tr>
<tr valign=top>
<td width=38%>NumberLeadingZeros</td>
<td width=62%>Specifies whether a decimal value less than 1 and greater than –1 should contain leading zeros; this value can either be False (no leading zeros) or True.</td>
</tr>
<tr valign=top>
<td width=38%>Col1, Col2, ...</td>
<td width=62%>Lists the columns in the text file to be read. The format of this entry should be:<p>
Col<i>n</i>=<i>columnName</i> type [Width <i>#</i>]</p>
<p>
<i>columnName</i>: Column names with embedded spaces should be enclosed in quotation marks.</p>
<p>
<i>type</i>: Can be Bit, Byte, Short, Long, Currency, Single, Double, DateTime, Text, or Memo.</p>
<p>
In addition, the following ODBC Text Driver types are supported:</p>
<p>
Char (same as Text)<br>
Float (same as Double)<br>
Integer (same as Short)<br>
LongChar (same as Memo)<br>
Date <i>date format</i></p>
</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B> When you change Windows Registry settings, you must exit and then restart the database engine for the new settings to take effect.</p>
</font></BODY>
</HTML>
