<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The SQL statement couldn't be executed because it contains ambiguous outer joins. To force one of the joins to be performed first, create a separate query that performs the first join and then include that query in your SQL statement. (Error 3258)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmsgqueryambiguousjoins"></a>The SQL statement couldn't be executed because it contains ambiguous outer joins. To force one of the joins to be performed first, create a separate query that performs the first join and then include that query in your SQL statement. (Error 3258)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmsgQueryAmbiguousJoinsC">
</object></p>
<p>
You tried to execute an <a href="daglos04_188k.htm">SQL statement</a> that contains multiple <a href="daglos02_37hq.htm">joins</a>; the results of the query can differ depending on the order in which the joins are performed. For example, this error can occur if you execute the following SQL statement:</p>
<pre><code>SELECT * FROM Customers, Orders, [Order Details],
Customers LEFT JOIN Orders 
ON Customers.CustomerID = Orders.CustomerID,
Orders INNER JOIN [Order Details] 
ON Orders.OrderID = [Order Details].OrderID;
</code></pre>
<p>
Executing this statement produces an error because the order of the joins is ambiguous. To force one of the joins to be performed first, create a separate query that performs the first join and then include that query in your SQL statement. The following queries illustrate how you might construct the preceding query so that the INNER JOIN operation is performed before the LEFT JOIN and RIGHT JOIN operation:</p>
<p>
Query1</p>
<pre><code>SELECT * FROM Orders, [Order Details], 
Orders INNER JOIN [Order Details] 
ON Orders. OrderID = [Order Details].OrderID;
</code></pre>
<p>
Query2</p>
<pre><code>SELECT * FROM Customers, Query1, 
Customers LEFT JOIN Query1 
ON Customers.CustomerID = Orders.CustomerID;
</code></pre>
</font></BODY>
</HTML>
