<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FillCache Method (dbDAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmthfillcaches"></a>CdbRecordset::FillCache Method</h1>
<p>
Fills all or a part of a local cache for a <u>Recordset</u> object that contains data from a Microsoft Jet-connected ODBC data source (Microsoft Jet-connected ODBC databases only).</p>
<p class=label>
<b>Syntax</b></p>
<p>
VOIDFillCache(LONG lRows=-1, CdbBookmark *pbm=NULL);</p>
<p class=label>
<b>Parameters</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=563>
<tr valign=top>
<td class=label width=29%><b>Type</b></td>
<td class=label width=27%><b>Example</b></td>
<td class=label width=44%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=29%>LONG</td>
<td width=27%>lRows</td>
<td width=44%>Optional. An integer that specifies the number of rows to store in the cache. If you omit this argument, the value is determined by the <u>CacheSize</u> property setting.</td>
</tr>
<tr valign=top>
<td width=29%>CdbBookmark *</td>
<td width=27%>pbm=NULL</td>
<td width=44%>Optional. Pointer to a bookmark. The cache is filled starting from the record indicated by this bookmark. If you omit this argument, the cache is filled starting from the record indicated by the <u>CacheStar</u><b>t</b> property.</td>
</tr>
</table><br>
<p class=label>
<b>Usage</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbDBE   ngine      dben(..., dbUseODBC);
CdbDatabase      dbs;
CdbRecordset      rst;
CdbBookmark      book;

dbs = dben.OpenDatabase(_T("ODBC;..."));
rst = dbs.OpenRecordset(..., dbOpenDynaset);
if (rst.Bookmarkable())
{
   // Remember the current record position.
book = rst.GetBookmark();
   // Start the cache from the current position.
rst.SetCacheStart(book);
   // The cache will hold 25 records.
rst.SetCacheSize(25);
rst.FillCache();
   // Do some work...
rst.MoveNext();
   // Get a few more records.
book = rst.GetBookmark();
rst.FillCache(5, &amp;book);
...
}
</code></pre>
</font></BODY>
</HTML>
