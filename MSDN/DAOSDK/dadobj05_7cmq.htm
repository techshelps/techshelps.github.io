<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjuser"></a>CdbUser Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjUserC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjUserM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjUserP">
</object></p>
<p>
A <b>CdbUser</b> object represents a <a href="daglos04_3zlg.htm">user account</a> that has access <a href="daglos03_31ny.htm">permissions</a> when a <b>CdbWorkspace</b> object operates as a <a href="daglos04_24og.htm">secure workgroup</a> (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</p>
<p>
<a href="dadobj05_8945.htm"><img src="objworks.gif" border=0></a><br>
<img src="parlower.gif" border=0><a href="dadobj02_1els.htm"><img src="objgroup.gif" border=0></a><br>
<img src="parchild.gif" border=0><img src="parshare.gif" border=0><a href="dadobj05_66k2.htm"><img src="coluser.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objuser.gif" border=0><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj02_6lv4.htm"><img src="colgroup.gif" border=0></a><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><a href="dadobj03_6aux.htm"><img src="colprope.gif" border=0></a></p>
<p class=label>
<b>Remarks</b></p>
<p>
You use <b>CdbUser</b> objects to establish and enforce access permissions for the <b>CdbDocument</b> objects that represent databases, tables, and queries. Also, if you know the properties of a specific <b>CdbUser</b> object, you can create a new <b>CdbWorkspace</b> object that has the same access permissions as the <b>CdbUser</b> object.</p>
<p>
You can append an existing <b>CdbUser</b> object to the <b>Users</b> collection of a <b>CdbGroup</b> object to give a user account the access permissions for that <b>CdbGroup</b> object. Alternatively, you can append the <b>CdbGroup</b> object to the <b>Groups</b> collection in a <b>CdbUser</b> object to establish membership of the user account in that group. If you use a <b>Users</b> or <b>Groups</b> collection other than the one to which you just appended an object, you may need to use the <b>Refresh</b> method.</p>
<p>
With the properties of a <b>CdbUser</b> object, you can:
<ul type=disc>
<li>
Use the <b>Name</b> property to return the name of an existing user. You can't return the <b>PID</b> and <b>Password</b> properties of an existing <b>CdbUser</b> object.<br><br></li>
<li>
Use the <b>Name</b>, <b>PID</b>, and <b>Password</b> properties of a newly created, unappended <b>CdbUser</b> object to establish the identity of that <b>CdbUser</b> object. If you don't set the <b>Password</b> property, it's set to a <a href="daglos04_81yf.htm">zero-length string</a> ("").</li>
</ul>
<p>
The <a href="daglos02_0elh.htm">Microsoft Jet database engine</a> predefines two <b>CdbUser</b> objects named Admin and Guest. The user Admin is a member of both of the <b>CdbGroup</b> objects named Admins and Users; the user Guest is a member only of the <b>CdbGroup</b> object named Guests.</p>
<p>
To create a new <b>CdbUser</b> object, use the <b>CreateUser</b> method.</p>
<p>
To refer to a <b>CdbUser</b> object in a collection by its ordinal number or by its <b>Name</b> property setting, use either of the following syntax forms:</p>
<p>
<b>Users[</b>0]</p>
<p>
<b>Users[</b>"<i>name</i>"<b>]</b></p>
<p class=label>
<b>CdbUser Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbUser(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbUser(const CdbUser &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbUser &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbUser(DAOUser *</b><i>pusr</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i><b> = FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=24%><b>Type</b></td>
<td class=label width=27%><b>Argument</b></td>
<td class=label width=49%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%><b>DAOUser *</b></td>
<td width=27%><i>pusr</i></td>
<td width=49%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=24%><b>BOOL</b></td>
<td width=27%><i>bAddRef</i><p>
=<b>FALSE</b></p>
</td>
<td width=49%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, the DAO Automation interface <b>AddRef</b> function is called.</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object if you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
