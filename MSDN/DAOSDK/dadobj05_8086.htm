<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TableDef Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjtabledef"></a>CdbTableDef Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjTableDefC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjTableDefM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjTableDefP">
</object></p>
<p>
A <b>CdbTableDef</b> object represents the stored definition of a <a href="daglos01_6dwl.htm">base table</a> or a <a href="daglos02_01np.htm">linked table</a> (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</p>
<p>
<a href="dadobj01_4mud.htm"><img src="objdatab.gif" border=0></a><br>
<img src="parchild.gif" border=0><a href="dadobj05_8bhi.htm"><img src="coltable.gif" border=0></a><br>
<img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objtable.gif" border=0><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj02_5jz8.htm"><img src="colfield.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj03_2bzs.htm"><img src="colindex.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><a href="dadobj03_6aux.htm"><img src="colprope.gif" border=0></a></p>
<p class=label>
<b>Remarks</b></p>
<p>
You manipulate a table definition using a <b>CdbTableDef</b> object and its methods and properties. For example, you can:
<ul type=disc>
<li>
Examine the field and <a href="daglos02_9np4.htm">index</a> structure of any local, linked, or external table in a database.<br><br></li>
<li>
Use the <b>Connect</b> and <b>SourceTableName</b> properties to set or return information about linked tables, and use the <b>RefreshLink</b> method to update connections to linked tables.<br><br></li>
<li>
Use the <b>ValidationRule</b> and <b>ValidationText</b> properties to set or return validation conditions.<br><br></li>
<li>
Use the <b>OpenRecordset</b> method to create a table-, dynaset-, dynamic&nbsp;-, snapshot-, or forward-only–type <b>CdbRecordset</b> object, based on the table definition.</li>
</ul>
<p>
For base tables, the <b>RecordCount</b> property contains the number of records in the specified database table. For linked tables, the <b>RecordCount</b> property setting is always -1.</p>
<p>
To create a new <b>CdbTableDef</b> object, use the <a href="dameth02_459i.htm">CreateTableDef</a> method.</p>
<p class=label>
<b><img src="prcarrow.gif" border=0>To add a field to a table</b>
<ol>
<li>
Make sure any <a href="dadobj04_452s.htm">CdbRecordset</a> objects based on the table are all closed.<br><br></li>
<li>
Use the <b>CreateField </b>method to create a <b>CdbField</b> <a href="daglos03_5jl1.htm">object variable</a> and set its properties.<br><br></li>
<li>
Use the <b>Append</b> method to add the <b>CdbField</b> object to the <b>Fields</b> collection of the <b>CdbTableDef</b> object.</li>
</ol>
<p>
You can delete a <b>CdbField</b> object from a <b>TableDefs</b> collection if it doesn't have any indexes assigned to it, but you will lose the field's data.</p>
<p class=label>
<b><img src="prcarrow.gif" border=0>To create a table that is ready for new records in a database</b>
<ol start=4>
<li>
Use the <b>CreateTableDef</b> method to create a <b>CdbTableDef</b> object.<br><br></li>
<li>
Set its properties.<br><br></li>
<li>
For each field in the table, use the <b>CreateField</b> method to create a <b>CdbField</b> object variable and set its properties.<br><br></li>
<li>
Use the <b>Append</b> method to add the fields to the <b>Fields</b> collection of the <b>CdbTableDef</b> object.<br><br></li>
<li>
Use the <b>Append</b> method to add the new <b>CdbTableDef</b> object to the <b>TableDefs</b> collection of the <b>Database</b> object.</li>
</ol>
<p>
A linked table is connected to the database by the <b>SourceTableName</b> and <b>Connect</b> properties of the <b>CdbTableDef</b> object.</p>
<p class=label>
<b><img src="prcarrow.gif" border=0>To link a table to a database</b>
<ol start=9>
<li>
Use the <b>CreateTableDef</b> method to create a <b>CdbTableDef</b> object.<br><br></li>
<li>
Set its <b>Connect</b> and <b>SourceTableName</b> properties (and optionally, its <b>Attributes</b> property).<br><br></li>
<li>
Use the <b>Append</b> method to add it to the <b>TableDefs</b> collection of a <b>Database</b>.</li>
</ol>
<p>
To refer to a <b>CdbTableDef</b> object in a collection by its ordinal number or by its <b>Name</b> property setting, use either of the following syntax forms:</p>
<p>
<b>TableDefs[</b>0<b>]</b></p>
<p>
<b>TableDefs[</b>"<i>name</i>"<b>]</b></p>
<p class=label>
<b>CdbTableDef Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbTableDef(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbTableDef(const CdbTableDef &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbTableDef &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbTableDef(DAOTableDef *</b><i>ptd</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i><b> = FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=28%><b>Type</b></td>
<td class=label width=25%><b>Argument</b></td>
<td class=label width=47%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=28%><b>DAOTableDef *</b></td>
<td width=25%><i>ptd</i></td>
<td width=47%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=28%><b>BOOL</b></td>
<td width=25%><i>bAddRef</i><p>
=<b>FALSE</b></p>
</td>
<td width=47%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, the DAO Automation interface <b>AddRef</b> function is called.</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object if you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object, but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
