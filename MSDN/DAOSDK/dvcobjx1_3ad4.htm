<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Database Object, Databases Collection Example (VC++)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="daobjdatabasex"></a>Database Object, Databases Collection Example (VC++)</h1>
<p>
This example creates a new <b>Database</b> object and opens it (thereby appending it to the <b>Databases</b> collection) in the default <b>Workspace</b> object. Then it enumerates all the collections contained by each <b>Database</b> object and the properties of the new <b>Database</b> object and closes the new <b>Database</b>. See the methods and properties listed in the <b>Database</b> summary topic for additional examples.</p>
<pre><code>CdbDBEngine         dbeng;
CdbWorkspace      wrkDefault;
CdbDatabase         dbsEnum, dbsTemp;
long            intOBJ, intDB;

wrkDefault = dbeng.Workspaces[0L];

dbsEnum = wrkDefault.CreateDatabase(_T("Northwind.mdb"), dbLangGeneral);
// Enumerate all open databases.
for (intDB = 0; wrkDefault.Databases.GetCount(); intDB++)
   {
   dbsTemp = wrkDefault.Databases[intDB];
   printf(_T("Enumeration of Database: %s\n"), dbsTemp.GetName());
   //   Enumerate containers.
   printf(_T("Container: Name, Owner"));
   for (intOBJ = 0; intOBJ &lt; dbsTemp.Containers.GetCount(); intOBJ++)
      printf(_T("&nbsp; %s, %s\n"), dbsTemp.Containers[intOBJ].GetName(), 
            dbsTemp.Containers[intOBJ].GetOwner());
      
   // Enumerate query definitions.
   printf(_T("QueryDef: Name"));
   for (intOBJ = 0; intOBJ &lt; dbsTemp.QueryDefs.GetCount(); intOBJ++)
      printf(_T("&nbsp; %s\n"), dbsTemp.QueryDefs[intOBJ].GetName());
   
   // Enumerate Recordsets.
   // No output because no Recordset is open.
   printf(_T("\nRecordset: Name"));
   for (intOBJ = 0; intOBJ &lt; dbsTemp.Recordsets.GetCount(); intOBJ++)
      printf(_T("&nbsp; %s\n"), dbsTemp.Recordsets[intOBJ].GetName());
   
   // Enumerate relationships.
   printf(_T("\nRelation: Name, Table, ForeignTable"));
   for (intOBJ = 0; intOBJ &lt; dbsTemp.Relations.GetCount(); intOBJ++)
      printf(_T("&nbsp; %s, %s, %s\n"), dbsTemp.Relations[intOBJ].GetName(),
                  dbsTemp.Relations[intOBJ].GetTable(),
                  dbsTemp.Relations[intOBJ].GetForeignTable());
   
   // Enumerate table definitions.
   printf(_T("\nTableDef: Name, DateCreated"));
   for (intOBJ = 0; intOBJ &lt; dbsTemp.TableDefs.GetCount(); intOBJ++)
      printf(_T(" %s, %s\n"), dbsTemp.TableDefs[intOBJ].GetName(),
                     dbsTemp.TableDefs[intOBJ].GetDateCreated());
      
   
   // Enumerate built-in properties of dbsEnum.
   printf(_T(" dbsEnum.Name: %s\n"), dbsEnum.GetName());
   printf(_T(" dbsEnum.CollatingOrder: %s\n"), 
                        dbsEnum.GetCollatingOrder());
   printf(_T(" dbsEnum.Connect: %s\n"), dbsEnum.GetConnect());
   printf(_T(" dbsEnum.QueryTimeout: %s\n"), 
                        dbsEnum.GetQueryTimeout());
   printf(_T(" dbsEnum.Transactions: %s\n"), 
                        dbsEnum.GetTransactions());
   printf(_T(" dbsEnum.Updatable: %s\b"), dbsEnum.GetUpdatable());
   
   dbsEnum.Close;   // File remains on disk.
   }   
</code></pre>
</font></BODY>
</HTML>
