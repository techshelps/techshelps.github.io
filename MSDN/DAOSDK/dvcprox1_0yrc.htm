<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DesignMasterID Property Example (VC++)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="daprodesignmasteridx"></a>DesignMasterID Property Example (VC++)</h1>
<p>
This example uses the <b>DesignMasterID</b> property, <b>ReplicaID</b> property, and <b>Synchronize</b> method to move the <b>DesignMaster</b> to a replica.</p>
<pre><code>/*   Notes:
   1)   Open current DesignMaster in exclusive mode.
      Cast the second operand as a BOOL to invoke the
      correct overloaded OpenDatabase method.
   2)   Open the database that will become the new
      DesignMaster.
   3) Synchronize will first copy the old
      DesignMaster's DesignMasterID to the replica. 
      This will update the replica's DesignMasterID 
      property to point to itself.
*/
void SetNewDesignMasterX( 
                        LPCTSTR szOldDM, 
                        LPCTSTR szNewDM )
{
   CdbDBEngine   dbeng;
   CdbDatabase   dbsOld, dbsNew;
                                    // note 1
   dbsOld = dbeng.OpenDatabase(szOldDM, (BOOL)TRUE);
   dbsNew = dbeng.OpenDatabase(szNewDM);   // note 2
   dbsOld.SetDesignMasterID(
                     (LPCTSTR)dbsNew.GetReplicaID());
   dbsOld.Synchronize(szNewDM, 
                     dbRepImpExpChanges);// note 3
   dbsOld.Close();
   dbsNew.Close();
   return;
}
</code></pre>
</font></BODY>
</HTML>
