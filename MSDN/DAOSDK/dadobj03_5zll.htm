<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Property Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjproperty"></a>CdbProperty Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjPropertyC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjPropertyM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjPropertyP">
</object></p>
<p>
A <b>CdbProperty</b> object represents a built-in or user-defined characteristic of a <a href="daglos01_7lis.htm">DAO object</a>.</p>
<p>
<img src="objallda.gif" border=0><br>
<img src="parchild.gif" border=0><a href="dadobj03_6aux.htm"><img src="colprope.gif" border=0></a><br>
<img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objprope.gif" border=0></p>
<p class=label>
<b>Remarks</b></p>
<p>
Every DAO object, except the <b>CdbConnection</b> and <b>CdbError</b> objects, contains a <b>Properties</b> collection, which has <b>CdbProperty</b> objects corresponding to built-in properties of that DAO object. The user can also define <b>CdbProperty</b> objects and append them to the <b>Properties</b> collection of some DAO objects. These <b>CdbProperty</b> objects (which are often just called properties) uniquely characterize that instance of the object.</p>
<p>
You can create user-defined properties for the following objects:
<ul type=disc>
<li>
<b>CdbDatabase</b>, <b>CdbIndex</b>, <b>CdbQueryDef</b>, and <b>CdbTableDef</b> objects.<br><br></li>
<li>
<b>CdbField</b> objects in <b>Fields</b> collections of <b>CdbQueryDef</b> and <b>CdbTableDef</b> objects.</li>
</ul>
<p>
To add a user-defined property, use the <b>CreateProperty</b> method to create a <b>CdbProperty</b> object with a unique <b>Name</b> property setting. Set the <b>Type</b> and <b>Value</b> properties of the new <b>CdbProperty</b> object, and then append it to the <b>Properties</b> collection of the appropriate object. The object to which you are adding the user-defined property must already be appended to a collection. Referencing a user-defined <b>CdbProperty</b> object that has not yet been appended to a <b>Properties</b> collection will cause an error, as will appending a user-defined <b>CdbProperty</b> object to a <b>Properties</b> collection containing a <b>CdbProperty</b> object of the same name.</p>
<p>
You can delete user-defined properties from the <b>Properties</b> collection, but you can't delete built-in properties.</p>
<p class=indent>
<B><b>Note</b></B> A user-defined <b>CdbProperty</b> object is associated only with the specific instance of an object. The property isn't defined for all instances of objects of the selected type.</p>
<p>
You can use the <b>Properties</b> collection of an object to enumerate the object's built-in and user-defined properties. You don't need to know beforehand exactly which properties exist or what their characteristics (<b>Name</b> and <b>Type</b> properties) are to manipulate them. However, if you try to read a write-only property, such as the <b>Password</b> property of a <b>CdbWorkspace</b> object, or try to read or write a property in an inappropriate context, such as the <b>Value</b> property setting of a <b>CdbField</b> object in the <b>Fields</b> collection of a <b>CdbTableDef</b> object, an error occurs.</p>
<p>
The <b>CdbProperty</b> object also has four built-in properties:
<ul type=disc>
<li>
The <b>Name</b> property — a <a href="daglos04_7751.htm">String</a> that uniquely identifies the property.<br><br></li>
<li>
The <b>Type</b> property — an <a href="daglos02_9vfp.htm">Integer</a> that specifies the property data type.<br><br></li>
<li>
The <b>Value</b> property — a <a href="daglos04_4fs5.htm">Variant</a> that contains the property setting.<br><br></li>
<li>
The <b>Inherited</b> property — a <a href="daglos01_8wyt.htm">Boolean</a> that indicates whether the property is inherited from another object. For example, a <b>CdbField</b> object in a <b>Fields</b> collection of a <b>CdbRecordset</b> object can inherit properties from the underlying <b>CdbTableDef</b> or <b>CdbQueryDef</b> object.</li>
</ul>
<p>
To refer to a built-in <b>CdbProperty</b> object in a collection by its ordinal number or by its <b>Name</b> property setting, use either of the following syntax forms:</p>
<p>
<b>Properties[</b>0<b>]</b></p>
<p>
<b>Properties[</b>"<i>name</i>"<b>]</b></p>
<p>
For a built-in property, you can also use this syntax:</p>
<p>
<i>object</i>.<i>name</i></p>
<p class=indent>
<B><b>Note</b></B> For a user-defined property, you must use the <b>Properties[</b>"<i>name</i>"<b>]</b> syntax.</p>
<p>
With the same syntax forms, you can also refer to the <b>Value</b> property of a <b>CdbProperty</b> object. The context of the reference will determine whether you are referring to the <b>CdbProperty</b> object itself or the <b>Value</b> property of the <b>CdbProperty</b> object.</p>
<p class=label>
<b>CdbProperty Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbProperty(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbProperty(const CdbProperty &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbProperty &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbProperty(DAOProperty *</b><i>pprp</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i><b> = FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=27%><b>Type</b></td>
<td class=label width=24%><b>Argument</b></td>
<td class=label width=49%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=27%><b>DAOProperty *</b></td>
<td width=24%><i>pprp</i></td>
<td width=49%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=27%><b>BOOL</b></td>
<td width=24%><i>bAddRef</i><p>
=<b>FALSE</b></p>
</td>
<td width=49%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, the DAO Automation interface <b>AddRef</b> function is called.</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object if you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object, but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
