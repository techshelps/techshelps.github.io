<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Subqueries</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dasqlsubqueries"></a>SQL Subqueries</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlSubqueriesC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlSubqueriesX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlSubqueriesS">
</object> </p>
<p>
A subquery is a <a href="dajsql02_2kac.htm">SELECT</a> statement nested inside a SELECT, <a href="dajsql03_6acv.htm">SELECT...INTO</a>, <a href="dajsql03_3vu7.htm">INSERT...INTO</a>, <a href="dajsql03_2dph.htm">DELETE</a>, or <a href="dajsql03_0uhx.htm">UPDATE</a> statement or inside another subquery.</p>
<p class=label>
<b>Syntax</b></p>
<p>
You can use three forms of syntax to create a subquery:</p>
<p>
<i>comparison</i> [ANY | ALL | SOME] (<i>sqlstatement</i>)</p>
<p>
<i>expression</i> [NOT] IN (<i>sqlstatement</i>)</p>
<p>
[NOT] EXISTS (<i>sqlstatement</i>)</p>
<p>
A subquery has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Part</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>comparison</i></td>
<td width=50%>An <a href="dadefn01_0x2r.htm">expression</a> and a comparison operator that compares the expression with the results of the subquery.</td>
</tr>
<tr valign=top>
<td width=50%><i>expression</i></td>
<td width=50%>An expression for which the result set of the subquery is searched.</td>
</tr>
<tr valign=top>
<td width=50%><i>sqlstatement</i></td>
<td width=50%>A SELECT statement, following the same format and rules as any other SELECT statement. It must be enclosed in parentheses.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
You can use a subquery instead of an expression in the field list of a SELECT statement or in a <a href="dajsql02_91t1.htm">WHERE</a> or <a href="dajsql02_6l7r.htm">HAVING</a> clause. In a subquery, you use a SELECT statement to provide a set of one or more specific values to evaluate in the WHERE or HAVING clause expression.</p>
<p>
Use the ANY or SOME predicate, which are synonymous, to retrieve records in the main query that satisfy the comparison with any records retrieved in the subquery. The following example returns all products whose unit price is greater than that of any product sold at a discount of 25 percent or more:</p>
<pre><code>SELECT * FROM Products
WHERE UnitPrice &gt; ANY
(SELECT UnitPrice FROM OrderDetails
WHERE Discount &gt;= .25);
</code></pre>
<p>
Use the <a href="dajsql02_9bck.htm">ALL</a> predicate to retrieve only those records in the main query that satisfy the comparison with all records retrieved in the subquery. If you changed ANY to ALL in the previous example, the query would return only those products whose unit price is greater than that of all products sold at a discount of 25 percent or more. This is much more restrictive.</p>
<p>
Use the IN predicate to retrieve only those records in the main query for which some record in the subquery contains an equal value. The following example returns all products with a discount of 25 percent or more:</p>
<pre><code>SELECT * FROM Products
WHERE ProductID IN
(SELECT ProductID FROM OrderDetails
WHERE Discount &gt;= .25);
</code></pre>
<p>
Conversely, you can use NOT IN to retrieve only those records in the main query for which no record in the subquery contains an equal value.</p>
<p>
Use the EXISTS predicate (with the optional NOT reserved word) in true/false comparisons to determine whether the subquery returns any records.</p>
<p>
You can also use table name <a href="daglos01_23oz.htm">aliases</a> in a subquery to refer to tables listed in a <a href="dajsql02_5zfx.htm">FROM</a> clause outside the subquery. The following example returns the names of employees whose salaries are equal to or greater than the average salary of all employees having the same job title. The Employees table is given the alias "T1":</p>
<pre><code>SELECT LastName,
FirstName, Title, Salary
FROM Employees AS T1
WHERE Salary &gt;=
(SELECT Avg(Salary)
FROM Employees
WHERE T1.Title = Employees.Title) Order by Title;
</code></pre>
<p>
In the preceding example, the AS <a href="daglos03_15gk.htm">reserved word</a> is optional.</p>
<p>
Some subqueries are allowed in <a href="daglos01_8veh.htm">crosstab queries</a> — specifically, as predicates (those in the WHERE clause). Subqueries as output (those in the SELECT list) are not allowed in crosstab queries.</p>
</font></BODY>
</HTML>
