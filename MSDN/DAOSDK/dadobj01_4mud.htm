<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CdbDatabase Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjdatabase"></a>CdbDatabase Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjDatabaseC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjDatabaseM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjDatabaseP">
</object></p>
<p>
A <b>CdbDatabase</b> object represents an open database.</p>
<p>
<a href="dadobj05_8945.htm"><img src="objworks.gif" border=0></a><br>
<img src="parchild.gif" border=0><a href="dadobj01_4y3p.htm"><img src="coldatab.gif" border=0></a><br>
<img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objdatab.gif" border=0> <br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj01_77le.htm"><img src="colconta.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj03_6aux.htm"><img src="colprope.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj03_7ana.htm"><img src="colquery.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj04_45o4.htm"><img src="colrecor.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parmult.gif" border=0><a href="dadobj05_4sku.htm"><img src="colrelat.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><a href="dadobj05_8bhi.htm"><img src="coltable.gif" border=0></a></p>
<p class=label>
<b>Remarks</b></p>
<p>
Use the <b>CdbDatabase</b> object and its methods and properties to manipulate an open database. In any type of database, you can:
<ul type=disc>
<li>
Use the <b>Execute</b> method to run an <a href="daglos01_6p2x.htm">action query</a>.<br><br></li>
<li>
Set the <b>Connect</b> property to establish a connection to an ODBC data source.<br><br></li>
<li>
Set the <b>QueryTimeout</b> property to limit the length of time to wait for a query to execute against an ODBC data source.<br><br></li>
<li>
Use the <b>RecordsAffected</b> property to determine how many records were changed by an action query.<br><br></li>
<li>
Use the <b>OpenRecordset</b> method to execute a <a href="daglos04_6a2h.htm">select query</a> and create a <b>Recordset</b> object.<br><br></li>
<li>
Use the <b>Version</b> property to determine which version of a database engine created the database.</li>
</ul>
<p>
With a Microsoft Jet database (.mdb file), you can also use other methods, properties, and collections to manipulate a <b>CdbDatabase</b> object, as well as create, modify, or get information about its tables, queries, and relationships. For example, you can:
<ul type=disc>
<li>
Use the <b>CreateTableDef</b> and <b>CreateRelation</b> methods to create tables and relations, respectively.<br><br></li>
<li>
Use the <b>CreateProperty</b> method to define new <b>CdbDatabase</b> properties.<br><br></li>
<li>
Use the <b>CreateQueryDef</b> method to create a <a href="daglos03_0oxg.htm">persistent</a> or temporary query definition.<br><br></li>
<li>
Use <b>MakeReplica</b>, <b>Synchronize, and PopulatePartial</b> methods to create and synchronize full or partial <a href="daglos03_9b4x.htm">replicas</a> of your database.<br><br></li>
<li>
Set the <b>CollatingOrder</b> property to establish the alphabetic sorting order for character-based fields in different languages.</li>
</ul>
<p>
In an ODBCDirect workspace, you can use the <b>CdbConnection</b> property to obtain a reference to the <b>CdbConnection</b> object that corresponds to the <b>CdbDatabase</b> object.</p>
<p>
Use the <b>CreateDatabase</b> method to create a <a href="daglos03_0oxg.htm">persistent</a> <b>CdbDatabase</b> object that is automatically appended to the <b>Databases</b> collection, thereby saving it to disk.</p>
<p>
You don't need to specify the <b>CdbDBEngine</b> object when you use the <b>OpenDatabase</b> method.</p>
<p>
Opening a database with <a href="daglos02_01np.htm">linked tables</a> doesn't automatically establish links to the specified external files or <a href="daglos02_7hgl.htm">Microsoft Jet-connected ODBC data sources</a>. You must either reference the table's <b>CdbTableDef</b> or <b>CdbField</b> objects or open a <b>CdbRecordset</b> object. If you can't establish links to these tables, a trappable error occurs. You may also need permission to access the database, or another user might have the database opened exclusively. In these cases, trappable errors occur.</p>
<p>
You can also use the <b>OpenDatabase</b> method to open an external database (such as Microsoft Visual FoxPro, dBASE, and Paradox) directly instead of opening a Microsoft Jet database that has links to its tables.</p>
<p class=indent>
<B><b>Note</b></B> Opening a <b>CdbDatabase</b> object directly on a Microsoft Jet-connected ODBC data source, such as Microsoft SQL Server, is not recommended because query performance is much slower than when using linked tables. However, performance is not a problem with opening a <b>CdbDatabase</b> object directly on an external ISAM database file, such as Visual FoxPro, Paradox, and so forth.</p>
<p>
When a procedure that declares a <b>CdbDatabase</b> object has executed, local <b>CdbDatabase</b> objects are closed along with any open <b>CdbRecordset</b> objects. Any pending updates are lost and any pending transactions are rolled back, but no trappable error occurs. You should explicitly complete any pending <b>transactions</b> or edits and close <b>CdbRecordset</b> objects and <b>CdbDatabase</b> objects before exiting procedures that declare these object variables locally.</p>
<p>
When you use one of the transaction methods (<b>BeginTrans</b>, <b>CommitTrans</b>, or <b>Rollback</b>) on the <b>CdbWorkspace</b> object, these <a href="daglos04_9dta.htm">transactions</a> apply to all databases opened on the <b>CdbWorkspace</b> from which the <b>CdbDatabase</b> object was opened. If you want to use independent transactions, you must first open an additional <b>CdbWorkspace</b> object, and then open another <b>CdbDatabase</b> object in that <b>CdbWorkspace</b> object.</p>
<p class=indent>
<B><b>Note</b></B> You can open the same data source or database more than once, creating duplicate names in the <b>Databases</b> collection. To avoid confusion, assign <b>CdbDatabase</b> objects to <a href="daglos03_5jl1.htm">object variables</a> and refer to them by variable name.</p>
<p class=label>
<b>CdbDatabase Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbDatabase(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbDatabase(const CdbDatabase &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbDatabase &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbDatabase(DAODatabase *</b><i>pdb</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i> <b>=</b> <b>FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=24%><b>Type</b></td>
<td class=label width=25%><b>Argument</b></td>
<td class=label width=51%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=24%><b>DAODatabase *</b></td>
<td width=25%><i>pdb</i></td>
<td width=51%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=24%><b>BOOL</b></td>
<td width=25%><i>bAddRef<br>
</i><b>=FALSE</b></td>
<td width=51%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, the DAO Automation interface <b>AddRef</b> function is called.</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object when you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object, but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
