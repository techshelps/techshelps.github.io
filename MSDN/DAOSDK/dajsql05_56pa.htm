<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Between...And Operator (Microsoft Jet SQL)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dasqlbetween"></a>Between...And Operator</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlBETWEENC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlBetweenX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dasqlBetweenS">
</object> </p>
<p>
Determines whether the value of an expression falls within a specified range of values. You can use this operator within <a href="daglos04_188k.htm">SQL statements</a>.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>expr</i> [<b>Not</b>] <b>Between</b> <i>value1</i> <b>And</b> <i>value2</i></p>
<p>
The <b>Between...And</b> operator syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Part</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><i>expr</i></td>
<td width=50%>Expression identifying the field that contains the data you want to evaluate.</td>
</tr>
<tr valign=top>
<td width=50%><i>value1</i>, <i>value2</i></td>
<td width=50%>Expressions against which you want to evaluate <i>expr</i>.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
If the value of <i>expr</i> is between <i>value1</i> and <i>value2</i> (inclusive), the <b>Between...And</b> operator returns <b>True</b>; otherwise, it returns <b>False</b>. You can include the <b>Not</b> logical operator to evaluate the opposite condition (that is, whether <i>expr</i> lies outside the range defined by <i>value1</i> and <i>value2</i>).</p>
<p>
You might use <b>Between...And</b> to determine whether the value of a field falls within a specified numeric range. The following example determines whether an order was shipped to a location within a range of postal codes. If the postal code is between 98101 and 98199, the <b>IIf</b> function returns "Local". Otherwise, it returns "Nonlocal".</p>
<pre><code>SELECT IIf(PostalCode Between 98101 And 98199, "Local", "Nonlocal")
FROM Publishers
</code></pre>
<p>
If <i>expr</i>, <i>value1</i>, or <i>value2</i> is <a href="daglos03_67os.htm">Null</a>, <b>Between...And</b> returns a <b>Null value</b>.</p>
<p>
Because <a href="daglos04_99f7.htm">wildcard characters</a>, such as *, are treated as literals, you cannot use them with the <b>Between...And</b> operator. For example, you cannot use 980* and 989* to find all postal codes that start with 980 to 989. Instead, you have two alternatives for accomplishing this. You can add an expression to the query that takes the left three characters of the text field and use <b>Between...And</b> on those characters. Or you can pad the high and low values with extra characters — in this case, 98000 to 98999, or 98000 to 98999 – 9999 if using extended postal codes. (You must omit the – 0000 from the low values because otherwise 98000 is dropped if some postal codes have extended sections and others do not.)</p>
</font></BODY>
</HTML>
