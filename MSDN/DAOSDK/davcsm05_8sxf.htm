<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetRowsEx Method (dbDAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmthgetrowsexs"></a>CdbRecordset::GetRowsEx Method</h1>
<p>
The <b>GetRowsEx</b> method retrieves multiple rows and allows you to specify the data types of the fields stored in your application variables.</p>
<p>
The <b>GetRowsEx</b> method is a performance improvement by dbDAO and MFC DAO to avoid the necessity to retrieve all data as variants and then convert to native types.</p>
<p class=label>
<b>Syntax</b></p>
<p>
LONGGetRowsEx(LPVOID pvBuffer,</p>
<p>
LONG cbRow,</p>
<p>
LPDAORSETBINDING prb,</p>
<p>
LONG cBinding, </p>
<p>
LPVOID pvVarBuffer = NULL,</p>
<p>
LONG cbVarBuffer = 0, </p>
<p>
LONG lRows = -1);</p>
<p class=label>
<b>Parameters</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=563>
<tr valign=top>
<td class=label width=35%><b>Type</b></td>
<td class=label width=32%><b>Example</b></td>
<td class=label width=33%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%>LPVOID</td>
<td width=32%>pvBuffer</td>
<td width=33%>Pointer to buffer in which to store returned rows.</td>
</tr>
<tr valign=top>
<td width=35%>LONG</td>
<td width=32%>cbRow</td>
<td width=33%>Length of row in bytes.</td>
</tr>
<tr valign=top>
<td width=35%>LPDAORSETBINDING</td>
<td width=32%>prb</td>
<td width=33%>Pointer to binding structure.</td>
</tr>
<tr valign=top>
<td width=35%>LONG</td>
<td width=32%>cBinding</td>
<td width=33%>Number of bindings.</td>
</tr>
<tr valign=top>
<td width=35%>LPVOID</td>
<td width=32%>pvVarBuffer = NULL</td>
<td width=33%>Optional. Pointer to buffer in which to store variable-length data.</td>
</tr>
<tr valign=top>
<td width=35%>LONG</td>
<td width=32%>cbVarBuffer = 0</td>
<td width=33%>Optional. Length in bytes of pvVarBuffer.</td>
</tr>
<tr valign=top>
<td width=35%>LONG</td>
<td width=32%>lRows</td>
<td width=33%>Optional. Number of rows requested.</td>
</tr>
</table><br>
<p>
<b>GetRowsEx</b> returns a <b>Long</b> which indicates the number of records actually retrieved.</p>
<p class=label>
<b>Remarks</b></p>
<p>
<b>GetRowsEx</b> is only available in dbDAO.</p>
<p>
The DAORSETBINDING structure specifies how data is to be copied from the rows to the memory buffer. A separate binding structure must be filled in for each field retrieved.</p>
<p class=indent>
<B><b>Note</b></B> Each time <b>GetRowsEx</b> retrieves a set of records, it retrieves&nbsp; the last record of the previous set again. For example, if you retrieve five records at a time, <b>GetRowsEx</b> will first retrieve records 1 through 5. The next time it will retrieve records 5 through 10. The time after that, records 10 through 15, and so on. Notice that records 5 and 10 are retrieved twice.</p>
<p class=label>
<b>Usage</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbRecordset      rst;
COleVariant      vRows;
int               n;
LONG            lIndex[2];
HRESULT         hr;
DAORSETBINDING   dsbind;
TCHAR            Buffer[512], VarBuffer[256];
...                        // Open a recordset, fill in binding                            // structure, etc.
vRows = GetRowsEx(&amp;Buffer, cbRow, &amp;dsbind, cBinding, 
                  &amp;VarBuffer, sizeof(VarBuffer), 10);
lIndex[0] = 0;            // Index of the 1st field.
lIndex[1] = 1;            // Index of the 2nd row.
                        // Get the field (assume an integer).
hr = SafeArrayGetElement(vRows.parray, &amp;lIndex, &amp;n);
</code></pre>
</font></BODY>
</HTML>
