<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Execute Method (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmthexecute"></a>Execute Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthExecuteC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthExecuteX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthExecuteA">
</object></p>
<p>
Runs an <a href="daglos01_6p2x.htm">action query</a> or executes an <a href="daglos04_188k.htm">SQL statement</a> on a specified <a href="dadobj01_1qcu.htm">CdbConnection</a> or <a href="dadobj01_4mud.htm">CdbDatabase</a> object.</p>
<p class=label>
<b>Syntax: from a CdbConnection or CdbDatabase object</b></p>
<p>
<b>VOIDExecute(LPCTSTR </b><i>pstrQuery</i><b>,</b></p>
<p>
<b>LONG </b><i>lOptions</i><b> = -1);</b></p>
<p class=label>
<b>Syntax: from a CdbQueryDef object</b></p>
<p>
<b>VOIDExecute(LONG </b><i>lOptions</i><b> = -1);</b></p>
<p class=label>
<b>Parameters</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=19%><b>Type</b></td>
<td class=label width=23%><b>Argument</b></td>
<td class=label width=58%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><b>LPCTSTR</b></td>
<td width=23%><i>pstrQuery</i></td>
<td width=58%>A pointer to a string that is an SQL statement.</td>
</tr>
<tr valign=top>
<td width=19%><b>LONG</b></td>
<td width=23%><i>lOptions</i></td>
<td width=58%>Optional. A constant or combination of constants that determines the data integrity characteristics of the query, as specified in Remarks.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
You can use the following constants for <i>IOptions</i>.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=38%><b>Constant</b></td>
<td class=label width=62%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=38%><b>dbDenyWrite</b></td>
<td width=62%>Denies write permission to other users (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbInconsistent</b></td>
<td width=62%>(Default) Executes <a href="daglos02_5f5g.htm">inconsistent</a> updates (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbConsistent</b></td>
<td width=62%>Executes <a href="daglos01_4g38.htm">consistent</a> updates (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbSQLPassThrough</b></td>
<td width=62%>Executes an SQL pass-through query. Setting this option passes the SQL statement to an <a href="daglos03_0bqb.htm">ODBC</a> database for processing (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbFailOnError</b></td>
<td width=62%>Rolls back updates if an error occurs (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbSeeChanges</b></td>
<td width=62%>Generates a run-time error if another user is changing data you are editing (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbRunAsync</b></td>
<td width=62%>Executes the query <a href="daglos01_2feh.htm">asynchronously</a> (<a href="daglos03_37lg.htm">ODBCDirect</a> <b>Connection</b> and <b>QueryDef</b> objects only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbExecDirect</b></td>
<td width=62%>Executes the statement without first calling <b>SQLPrepare</b> ODBC API function (ODBCDirect <b>Connection</b> and <b>QueryDef</b> objects only).</td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=38%><b>Constant</b></td>
<td class=label width=62%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=38%><b>dbDenyWrite</b></td>
<td width=62%>Denies write permission to other users (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbInconsistent</b></td>
<td width=62%>(Default) Executes <a href="daglos02_5f5g.htm">inconsistent</a> updates (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbConsistent</b></td>
<td width=62%>Executes <a href="daglos01_4g38.htm">consistent</a> updates (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbSQLPassThrough</b></td>
<td width=62%>Executes an SQL pass-through query. Setting this option passes the SQL statement to an <a href="daglos03_0bqb.htm">ODBC</a> database for processing (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbFailOnError</b></td>
<td width=62%>Rolls back updates if an error occurs (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbSeeChanges</b></td>
<td width=62%>Generates a run-time error if another user is changing data you are editing (Microsoft Jet workspaces only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbRunAsync</b></td>
<td width=62%>Executes the query <a href="daglos01_2feh.htm">asynchronously</a> (<a href="daglos03_37lg.htm">ODBCDirect</a> <b>Connection</b> and <b>QueryDef</b> objects only).</td>
</tr>
<tr valign=top>
<td width=38%><b>DbExecDirect</b></td>
<td width=62%>Executes the statement without first calling <b>SQLPrepare</b> ODBC API function (ODBCDirect <b>Connection</b> and <b>QueryDef</b> objects only).</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B> The constants <b>dbConsistent</b> and <b>dbInconsistent</b> are mutually exclusive. You can use one or the other, but not both in a given instance of <b>OpenRecordset</b>. Using both <b>dbConsistent</b> and <b>dbInconsistent</b> causes an error.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>Execute</b> method is valid only for action queries. If you use <b>Execute</b> with another type of query, an error occurs. Because an action query doesn't return any records, <b>Execute</b> doesn't return a <a href="dadobj04_452s.htm">CdbRecordset</a>. (Executing an SQL pass-through query in an ODBCDirect workspace will not return an error if a <b>CdbRecordset</b> isn't returned.)</p>
<p>
Use the <a href="daprop06_912c.htm">RecordsAffected</a> property of the <b>CdbConnection</b>, <b>CdbDatabase</b>, or <b>CdbQueryDef</b> object to determine the number of records affected by the most recent <b>Execute</b> method. For example, <b>RecordsAffected</b> contains the number of records deleted, updated, or inserted when executing an action query. When you use the <b>Execute</b> method to run a query, the <b>RecordsAffected</b> property of the <b>CdbQueryDef</b> object is set to the number of records affected.</p>
<p>
In a Microsoft Jet workspace, if you provide a syntactically correct SQL statement and have the appropriate permissions, the <b>Execute</b> method won't fail — even if not a single row can be modified or deleted. Therefore, always use the <b>dbFailOnError</b> option when using the <b>Execute</b> method to run an update or delete query. This option generates a run-time error and rolls back all successful changes if any of the records affected are locked and can't be updated or deleted.</p>
<p>
For best performance in a Microsoft Jet workspace, especially in a multiuser environment, nest the <b>Execute</b> method inside a <a href="daglos04_9dta.htm">transaction</a>. Use the <a href="dameth01_50fn.htm">BeginTrans</a> method on the current <a href="dadobj05_8945.htm">CdbWorkspace</a> object, then use the <b>Execute</b> method, and complete the transaction by using the <a href="dameth01_50fn.htm">CommitTrans</a> method on the <b>CdbWorkspace</b>. This saves changes on disk and frees any locks placed while the query is running.</p>
<p>
In an <a href="daglos03_4o11.htm">ODBCDirect workspace</a>, if you include the optional <b>dbRunAsync</b> constant, the query runs asynchronously. To determine whether an asynchronous query is still executing, check the value of the <a href="daprop07_8ajr.htm">StillExecuting</a> property on the object from which the <b>Execute</b> method was called. To terminate execution of an asynchronous <b>Execute</b> method call, use the <a href="dameth02_9bn0.htm">Cancel</a> method.</p>
<p class=label>
<b>Usage: from a CdbDatabase or CdbConnection object</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbWorkspace      ws;
CdbDatabase      db;
...                  // Initialize ws, db, etc.

ws.BeginTrans();         // Start working.
db.Execute(_T("SELECT * FROM PARTS"),&nbsp; dbFailOnError);     
                     // Make some changes.
ws.CommitTrans();          // Accept changes.
ws.Close();            // Close the workspace.
</code></pre>
<p class=label>
<b>Usage: from a CdbQueryDef object</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbQueryDef       qd;
CdbConnection      conn;
LPCTSTR    lpctsrSQL = 
            _T("SELECT SALARY FROM EMPLOYEES ")
            _T("WHERE LASTNAME = 'SMITH'");
...
qd = conn.CreateQueryDef(_T("SALARYDEF"), lpctsrSQL);
qd.Execute(dbFailOnError);
</code></pre>
</font></BODY>
</HTML>
