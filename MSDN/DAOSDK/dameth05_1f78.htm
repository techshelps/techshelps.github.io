<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OpenRecordset Method (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvmthopenrecordset"></a>OpenRecordset Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthOpenRecordsetC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthOpenRecordsetX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvmthOpenRecordsetA">
</object></p>
<p>
Creates a new <a href="dadobj04_452s.htm">CdbRecordset</a> object and appends it to the <b>Recordsets</b> collection.</p>
<p class=label>
<b>Syntax: CdbConnection, CdbDatabase</b></p>
<p>
<b>CdbRecordsetOpenRecordset(LPCTSTR </b><i>pstrSource</i><b>,</b></p>
<p>
<b>LONG </b><i>lType</i><b> = -1,</b></p>
<p>
<b>LONG </b><i>lOptions</i><b> = -1,</b></p>
<p>
<b>LONG </b><i>lLockEdits</i><b> = -1);</b></p>
<p class=label>
<b>Syntax: CdbQueryDef</b></p>
<p>
<b>CdbRecordsetOpenRecordset(LONG </b><i>lType</i><b> = -1,</b></p>
<p>
<b>LONG </b><i>lOptions</i><b> = -1,</b></p>
<p>
<b>LONG </b><i>lLockEdits</i><b> = -1);</b></p>
<p class=label>
<b>Syntax: CdbRecordset, CdbTableDef</b></p>
<p>
<b>CdbRecordsetOpenRecordset(LONG </b><i>lType</i><b> = -1,</b></p>
<p>
<b>LONG </b><i>lOptions</i><b> = -1);</b></p>
<p class=label>
<b>Parameters</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=19%><b>Type</b></td>
<td class=label width=25%><b>Argument</b></td>
<td class=label width=56%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><b>LPCTSTR</b></td>
<td width=25%><i>pstrSource</i></td>
<td width=56%>A pointer to a string specifying the source of the records for the new <b>CdbRecordset</b>. The source can be a table name, a query name, or an SQL statement that returns records. For table-type <b>CdbRecordset</b> objects in Microsoft Jet databases, the source can only be a table name.</td>
</tr>
<tr valign=top>
<td width=19%><b>LONG</b></td>
<td width=25%><i>lType</i></td>
<td width=56%>Optional. A constant that indicates the type of <b>CdbRecordset</b> to open, as specified under Settings.</td>
</tr>
<tr valign=top>
<td width=19%><b>LONG</b></td>
<td width=25%><i>lOptions</i></td>
<td width=56%>Optional. A combination of constants that specify characteristics of the new <b>CdbRecordset</b>, as listed under Settings.</td>
</tr>
<tr valign=top>
<td width=19%><b>LONG</b></td>
<td width=25%><i>lLockEdits</i></td>
<td width=56%>Optional. A constant that determines the locking for the <b>CdbRecordset</b>, as specified under Settings.</td>
</tr>
</table><br>
<p class=label>
<b>Settings</b></p>
<p>
You can use one of the following constants for the <i>IType</i> argument.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=38%><b>Constant</b></td>
<td class=label width=62%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=38%><b>dbOpenTable</b></td>
<td width=62%>Opens a table-type <b>Recordset</b> object (<a href="daglos02_60it.htm">Microsoft Jet workspaces</a> only).</td>
</tr>
<tr valign=top>
<td width=38%><b>dbOpenDynamic</b></td>
<td width=62%>Opens a dynamic-type <b>Recordset</b> object, which is similar to an <a href="daglos03_0bqb.htm">ODBC</a> <a href="daglos01_2wj6.htm">dynamic cursor</a>. (<a href="daglos03_4o11.htm">ODBCDirect workspaces</a> only)</td>
</tr>
<tr valign=top>
<td width=38%><b>dbOpenDynaset</b></td>
<td width=62%>Opens a dynaset-type <b>Recordset</b> object, which is similar to an ODBC <a href="daglos02_37oy.htm">keyset cursor</a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>dbOpenSnapshot</b></td>
<td width=62%>Opens a snapshot-type <b>Recordset</b> object, which is similar to an ODBC <a href="daglos04_8alu.htm">static cursor</a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>dbOpenForwardOnly</b></td>
<td width=62%>Opens a forward-only-type <b>Recordset</b> object.</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B> If you open a <b>CdbRecordset</b> in a Microsoft Jet workspace and you don't specify a type, <b>OpenRecordset</b> creates a table-type <b>CdbRecordset</b>, if possible. If you specify a <a href="daglos02_01np.htm">linked table</a> or query, <b>OpenRecordset</b> creates a dynaset-type <b>CdbRecordset</b>. In an ODBCDirect workspace, the default setting is <b>dbOpenForwardOnly</b>.</p>
<p>
You can use a combination of the following constants for the <i>IOptions</i> argument.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=40%><b>Constant</b></td>
<td class=label width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>dbAppendOnly</b></td>
<td width=60%>Allows users to append new records to the <b>Recordset</b>, but prevents them from editing or deleting existing records (Microsoft Jet dynaset-type <b>CdbRecordset</b> only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbSQLPassThrough</b></td>
<td width=60%>Passes an <a href="daglos04_188k.htm">SQL statement</a> to a <a href="daglos02_7hgl.htm">Microsoft Jet-connected ODBC data source</a> for processing (Microsoft Jet snapshot-type <b>CdbRecordset</b> only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbSeeChanges</b></td>
<td width=60%>Generates a <a href="daglos03_9tki.htm">run-time error</a> if one user is changing data that another user is editing (Microsoft Jet dynaset-type <b>CdbRecordset</b> only). This is useful in applications where multiple users have simultaneous read/write access to the same data. </td>
</tr>
<tr valign=top>
<td width=40%><b>dbDenyWrite</b></td>
<td width=60%>Prevents other users from modifying or adding records (Microsoft Jet <b>CdbRecordset</b> objects only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbDenyRead</b>&nbsp;</td>
<td width=60%>Prevents other users from reading data in a table (Microsoft Jet table-type <b>CdbRecordset</b> only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbForwardOnly</b>&nbsp;</td>
<td width=60%>Creates a forward-only <b>CdbRecordset</b> (Microsoft Jet snapshot-type <b>CdbRecordset </b>only). It is provided only for backward compatibility, and you should use the <b>dbOpenForwardOnly</b> constant in the <i>lType</i> argument instead of using this option.</td>
</tr>
<tr valign=top>
<td width=40%><b>dbReadOnly</b>&nbsp;</td>
<td width=60%>Prevents users from making changes to the <b>CdbRecordset </b>(Microsoft Jet only). The <b>dbReadOnly</b> constant in the <i>lLockEdits</i> argument replaces this option, which is provided only for backward compatibility.</td>
</tr>
<tr valign=top>
<td width=40%><b>dbRunAsync</b></td>
<td width=60%>Runs an <a href="daglos01_2feh.htm">asynchronous query</a> (ODBCDirect workspaces only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbExecDirect</b>&nbsp;</td>
<td width=60%>Runs a query by skipping <b>SQLPrepare</b> and directly calling <b>SQLExecDirect</b> (ODBCDirect workspaces only). Use this option only when you’re not opening a <b>CdbRecordset</b> based on a <a href="daglos03_2515.htm">parameter query</a>. For more information, see the "Microsoft ODBC 3.0 Programmer’s Reference."</td>
</tr>
<tr valign=top>
<td width=40%><b>dbInconsistent</b>&nbsp;</td>
<td width=60%>Allows <a href="daglos02_5f5g.htm">inconsistent</a> updates (Microsoft Jet dynaset-type and snapshot-type <b>CdbRecordset</b> objects only).</td>
</tr>
<tr valign=top>
<td width=40%><b>dbConsistent</b>&nbsp;</td>
<td width=60%>Allows only <a href="daglos01_4g38.htm">consistent</a> updates (Microsoft Jet dynaset-type and snapshot-type <b>CdbRecordset</b> objects only).</td>
</tr>
</table><br>
<p class=indent>
<B><b>Note</b></B> The constants <b>dbConsistent</b> and <b>dbInconsistent</b> are mutually exclusive, and using both causes an error. Supplying an <i>lLockEdits</i> argument when <i>lOptions</i> uses the <b>dbReadOnly</b> constant also causes an error.</p>
<p>
You can use the following constants for the <i>ILockEdits</i> argument.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Constant</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>dbReadOnly</b></td>
<td width=50%>Prevents users from making changes to the <b>Recordset</b> (default for ODBCDirect workspaces). You can use <b>dbReadOnly</b> in either the <i>lOptions</i> argument or the <i>lLockEdits</i> argument, but not both. If you use it for both arguments, a run-time error occurs.</td>
</tr>
<tr valign=top>
<td width=50%><b>dbPessimistic</b>&nbsp;</td>
<td width=50%>Uses pessimistic locking to determine how changes are made to the <b>Recordset</b> in a multiuser environment. The <a href="daglos03_5orp.htm">page</a> containing the record you're editing is locked as soon as you use the <a href="dameth03_5fzo.htm">Edit</a> method (default for Microsoft Jet workspaces).</td>
</tr>
<tr valign=top>
<td width=50%><b>dbOptimistic</b>&nbsp;</td>
<td width=50%>Uses <a href="daglos03_46g3.htm">optimistic</a> locking to determine how changes are made to the <b>Recordset</b> in a multiuser environment. The page containing the record is not locked until the <a href="dameth06_94yt.htm">Update</a> method is executed.</td>
</tr>
<tr valign=top>
<td width=50%><b>dbOptimisticValue</b>&nbsp;</td>
<td width=50%>Uses optimistic concurrency based on row values (ODBCDirect workspaces only).</td>
</tr>
<tr valign=top>
<td width=50%><b>dbOptimisticBatch</b>&nbsp;</td>
<td width=50%>Enables <a href="daglos01_6t7r.htm">batch optimistic updating</a> (ODBCDirect workspaces only).</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
From a <b>CdbQueryDef</b> or a dynaset- or snapshot-type <b>CdbRecordset</b> object in a Microsoft Jet workspace, or if <i>pstrSource</i> refers to an SQL statement or a <b>CdbTableDef</b> that represents a <a href="daglos02_01np.htm">linked table</a>, you can't use <b>dbOpenTable</b> for the <i>lType</i> argument; if you do, a run-time error occurs. If you want to use an SQL <a href="daglos03_3i49.htm">pass-through query</a> on a linked table in a <a href="daglos02_7hgl.htm">Microsoft Jet-connected ODBC data source</a>, you must first set the <b>Connect </b>property of the linked table's database to a valid ODBC <a href="daglos01_6o2v.htm">connection string</a>. If you only need to make a single pass through a <b>CdbRecordset</b> opened from a Microsoft Jet-connected ODBC data source, you can improve performance by using <b>dbOpenForwardOnly</b> for the <i>lType</i> argument.</p>
<p>
From a dynaset- or snapshot-type <b>CdbRecordset</b>, the new <b>CdbRecordset</b> is of the same type. From a table-type <b>CdbRecordset</b> object, the type of the new object is a dynaset-type <b>CdbRecordset</b>. You can't open new <b>CdbRecordset objects</b> from forward-only–type or <a href="daglos03_37lg.htm">ODBCDirect</a> <b>CdbRecordset </b>objects.</p>
<p>
In an ODBCDirect workspace, you can open a <b>CdbRecordset</b> containing more than one <a href="daglos04_6a2h.htm">select query</a> in the <i>pstrSource</i> argument, such as:</p>
<pre><code>"SELECT LastName, FirstName FROM Authors 
WHERE LastName = 'Smith';
SELECT Title, ISBN FROM Titles 
WHERE ISBN Like '1-55615-*'"
</code></pre>
<p>
The returned <b>CdbRecordset</b> will open with the results of the first query. To obtain the result sets of records from subsequent queries, use the <a href="dameth04_74qc.htm">NextRecordset</a> method.</p>
<p>
Use the <b>dbSeeChanges</b> constant in a Microsoft Jet workspace if you want to trap changes while two or more users are editing or deleting the same record. For example, if two users start editing the same record, the first user to execute the <b>Update</b> method succeeds. When the second user invokes the <b>Update</b> method, a run-time error occurs. Similarly, if the second user tries to use the <b>Delete</b> method to delete the record, and the first user has already changed it, a run-time error occurs.</p>
<p>
Typically, if the user gets this error while updating a record, your code should refresh the contents of the fields and retrieve the newly modified values. If the error occurs while deleting a record, your code could display the new record data to the user and a message indicating that the data has recently changed. At this point, your code can request a confirmation that the user still wants to delete the record.</p>
<p>
You should also use the <b>dbSeeChanges</b> constant if you open a <b>CdbRecordset </b>in a Microsoft Jet-connected ODBC workspace against a Microsoft SQL Server 6.0 (or later) table that has an IDENTITY column, otherwise an error may result.</p>
<p>
In an ODBCDirect workspace, you can execute asynchronous queries by setting the <b>dbRunAsync</b> constant in the <i>lOptions</i> argument. This allows your application to continue processing other statements while the query runs in the background. But, you cannot access the <b>CdbRecordset</b> data until the query has completed. To determine whether the query has finished executing, check the <a href="daprop07_8ajr.htm">StillExecuting</a> property of the new <b>CdbRecordset</b>. If the query takes longer to complete than you anticipated, you can terminate execution of the query with the <a href="dameth02_9bn0.htm">Cancel</a> method.</p>
<p>
Opening more than one <b>CdbRecordset</b> on an ODBC data source may fail because the connection is busy with a prior <b>OpenRecordset</b> call. One way around this is to use a <a href="daglos04_5icy.htm">server-side cursor</a> and ODBCDirect, if the server supports this. Another solution is to fully populate the <b>CdbRecordset</b> by using the <b>MoveLast</b> method as soon as the <b>CdbRecordset</b> is opened.</p>
<p>
If you open a <b>CdbConnection</b> object with <b>DefaultCursorDriver</b> set to <b>dbUseClientBatchCursor</b>, you can open a <b>CdbRecordset</b> to cache changes to the data (known as <a href="daglos01_6t7r.htm">batch updating</a>) in an <a href="daglos03_37lg.htm">ODBCDirect</a> workspace. Include <b>dbOptimisticBatch</b> in the <i>ILockedits</i> argument to enable update caching. See the <a href="dameth06_94yt.htm">Update</a> method topic for details about how to write changes to disk immediately, or to cache changes and write them to disk as a batch.</p>
<p>
Closing a <b>CdbRecordset</b> with the <a href="dameth02_4pt1.htm">Close</a> method automatically deletes it from the <b>Recordsets</b> collection.</p>
<p class=indent>
<B><b>Note</b></B> If <i>pstrSource</i> refers to an SQL statement composed of a string concatenated with a non-integer value, and the system parameters specify a non-U.S. decimal character such as a comma (for example, <code>strSQL = "PRICE &gt; " &amp; lngPrice</code> and <code>lngPrice = 125,50</code>), an error occurs when you try to open the <b>CdbRecordset</b>. This is because during concatenation, the number will be converted to a string using your system's default decimal character, and SQL only accepts U.S. decimal characters.</p>
<p class=label>
<b>Usage: Database</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbDatabase      db;
CdbRecordset      rst;
CString         strSql = _T("SELECT * FROM PARTS");
...                              // Initialize db, etc.
rst = db.OpenRecordset((LPCTSTR)strSql, dbOpenDynaset,                               dbDenyWrite, dbPessimistic);
</code></pre>
<p class=label>
<b>Usage: QueryDef</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbQueryDef      qd;
CdbRecordset      rst;
...               // Initialize qd, etc.
rst = qd.OpenRecordset( dbOpenDynaset, dbDenyWrite, dbPessimistic);
</code></pre>
<p class=label>
<b>Usage: TableDef</b></p>
<pre><code>#include &lt;afxole.h&gt;
#include &lt;dbdao.h&gt;

CdbDBEnghine      dben;
CdbDatabase      dbs;
CdbRecordset      rst;
CdbTableDef      td;
CdbField         fld;
   // Initialize the TableDef.
dbs = dben.OpenDatabase(...);
td = dbs.CreateTableDef(...);
fld = td.CreateField(...);
td.Fields.Append(fld);
dbs.TableDefs.Append(td);
   // Open a recordset based on the TableDef.
rst = td.OpenRecordset( dbOpenTable, dbAppendOnly );
</code></pre>
</font></BODY>
</HTML>
