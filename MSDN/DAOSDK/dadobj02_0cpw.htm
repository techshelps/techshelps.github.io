<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Field Object (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="dvobjfield"></a>CdbField Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjFieldC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjFieldM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="dvobjFieldP">
</object></p>
<p>
A <b>CdbField</b> object represents a column of data with a common <a href="daglos01_9yed.htm">data type</a> and a common set of properties.</p>
<p>
<a href="dadobj05_8086.htm"><img src="objtable.gif" border=0></a><br>
<img src="parlower.gif" border=0><a href="dadobj03_6zdy.htm"><img src="objquery.gif" border=0></a><br>
<img src="parlower.gif" border=0><img src="parlower.gif" border=0><a href="dadobj04_452s.htm"><img src="objrecor.gif" border=0></a><br>
<img src="parlower.gif" border=0><img src="parlower.gif" border=0><img src="parlower.gif" border=0><a href="dadobj05_4hbi.htm"><img src="objrelat.gif" border=0></a><br>
<img src="parlower.gif" border=0><img src="parlower.gif" border=0><img src="parlower.gif" border=0><img src="parlower.gif" border=0><a href="dadobj03_74qg.htm"><img src="objindex.gif" border=0></a><br>
<img src="parchild.gif" border=0><img src="parshare.gif" border=0><img src="parshare.gif" border=0><img src="parshare.gif" border=0><img src="parshare.gif" border=0><a href="dadobj02_7oaa.htm"><img src="colfield.gif" border=0></a><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><img src="objfield.gif" border=0><br>
<img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="space.gif" border=0><img src="parchild.gif" border=0><a href="dadobj03_6aux.htm"><img src="colprope.gif" border=0></a></p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>Fields</b> collections of <b>CdbIndex</b>, <b>CdbQueryDef</b>, <b>CdbRelation</b>, and <b>CdbTableDef</b> objects contain the specifications for the fields those objects represent. The <b>Fields</b> collection of a <b>CdbRecordset</b> object represents the <b>CdbField</b> objects in a row of data or in a record. Use the <b>CdbField</b> objects in a <b>CdbRecordset</b> object to read and set values for the fields in the <a href="daglos01_7wpw.htm">current record</a> of the <b>CdbRecordset</b> object.</p>
<p>
In both <a href="daglos02_23l1.htm">Microsoft Jet</a> and <a href="daglos03_37lg.htm">ODBCDirect</a> workspaces, you manipulate a field using a <b>CdbField</b> object and its methods and properties. For example, you can:
<ul type=disc>
<li>
Use the <b>OrdinalPosition</b> property to set or return the presentation order of the <b>CdbField</b> object in a <b>Fields</b> collection. (This property is read-only for ODBCDirect databases.)<br><br></li>
<li>
Use the <b>Value</b> property of a field in a <b>CdbRecordset</b> object to set or return stored data.<br><br></li>
<li>
Use the <b>AppendChunk</b> and <b>GetChunk</b> methods and the <b>FieldSize</b> property to get or set a value in an <a href="daglos03_6411.htm">OLE Object</a> or <a href="daglos02_4sit.htm">Memo</a> field of a <b>CdbRecordset</b> object.<br><br></li>
<li>
Use the <b>Type</b>, <b>Size</b>, and <b>Attributes</b> properties to determine the type of data that can be stored in the field.<br><br></li>
<li>
Use the <b>SourceField</b> and <b>SourceTable</b> properties to determine the original source of the data.</li>
</ul>
<p>
In Microsoft Jet workspaces, you can:
<ul type=disc>
<li>
Use the <b>ForeignName</b> property to set or return information about a foreign field in a <b>CdbRelation</b> object.<br><br></li>
<li>
Use the <b>AllowZeroLength</b>, <b>DefaultValue</b>, <b>Required</b>, <b>ValidateOnSet</b>, <b>ValidationRule</b>, or <b>ValidationText</b> properties to set or return validation conditions.<br><br></li>
<li>
Use the <b>DefaultValue</b> property of a field on a <b>CdbTableDef</b> object to set the default value for this field when new records are added.</li>
</ul>
<p>
In ODBCDirect workspaces, you can:
<ul type=disc>
<li>
Use the <b>Value</b>, <b>VisibleValue</b>, and<b> OriginalValue</b> properties to verify successful completion of a batch update.</li>
</ul>
<p>
To create a new <b>CdbField</b> object in a <b>CdbIndex</b>, <b>CdbTableDef</b>, or <b>CdbRelation</b> object, use the <b>CreateField </b>method.</p>
<p>
When you access a <b>CdbField</b> object as part of a <b>CdbRecordset</b> object, data from the current record is visible in the <b>CdbField</b> object's <b>Value</b> property. To manipulate data in the <b>CdbRecordset</b> object, you don't usually reference the <b>Fields</b> collection directly; instead, you indirectly reference the <b>Value</b> property of the <b>CdbField</b> object in the <b>Fields</b> collection of the <b>CdbRecordset</b> object.</p>
<p>
To refer to a <b>CdbField</b> object in a collection by its ordinal number or by its <b>Name</b> property setting, use either of the following syntax forms:</p>
<p>
<b>Fields[</b>0<b>]</b></p>
<p>
<b>Fields[</b>"<i>name</i>"<b>]</b></p>
<p>
With the same syntax forms, you can also refer to the <b>Value</b> property of a <b>CdbField</b> object that you create and append to a <b>Fields</b> collection. The context of the field reference will determine whether you are referring to the <b>CdbField</b> object or the <b>Value</b> property of the <b>CdbField</b> object.</p>
<p class=label>
<b>CdbField Constructor Syntax</b></p>
<p>
Use any one of the following three constructors. The qualifier 'CONSTRUCTOR' in the syntax models is provided to help readability. It has no syntactic value.</p>
<p>
<b>CONSTRUCTORCdbField(VOID);</b></p>
<p>
This constructor creates an instance of the class. There are no parameters.</p>
<p>
<b>CONSTRUCTORCdbField(const CdbField &amp;);</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=50%><b>Type</b></td>
<td class=label width=50%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=50%><b>const CdbField &amp;</b></td>
<td width=50%>Reference to an object.</td>
</tr>
</table><br>
<p>
This constructor creates a copy of the object referenced in the parameter.</p>
<p>
<b>CONSTRUCTORCdbField(DAOField *</b><i>pfld</i><b>,</b></p>
<p>
<b>BOOL </b><i>bAddRef</i><b> = FALSE);</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=23%><b>Type</b></td>
<td class=label width=28%><b>Argument</b></td>
<td class=label width=49%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=23%><b>DAOField *</b></td>
<td width=28%><i>pfld</i></td>
<td width=49%>A DAO Automation interface pointer corresponding to this DAO class.</td>
</tr>
<tr valign=top>
<td width=23%><b>BOOL</b></td>
<td width=28%><i>bAddRef</i><p>
<b>=FALSE</b></p>
</td>
<td width=49%>Optional. A <b>Boolean</b>. If <b>TRUE</b>, <p>
the DAO Automation interface <b>AddRef</b> function is called.</p>
</td>
</tr>
</table><br>
<p>
DAO functionality is presented through pointers to DAO Automation interfaces. This constructor makes a DAO interface available in the form of a DAO class object that provides additional functionality.</p>
<p>
This constructor is not required for typical use. It is provided to enable you to easily create a DAO class object if you have access to the corresponding DAO interface.</p>
<p>
When the destructor for the DAO object is invoked, the underlying Automation interface's <b>Release</b> member is called. If <b>Release</b> decrements the interface's reference count to zero, the pointer to the Automation interface can be deleted. If you don't want this to happen (for example, because you want to discard the DAO object, but continue using the Automation interface), specify <b>TRUE</b> for the second parameter. The underlying Automation interface's <b>AddRef</b> member is called, which counterbalances the eventual call to <b>Release</b>.</p>
</font></BODY>
</HTML>
