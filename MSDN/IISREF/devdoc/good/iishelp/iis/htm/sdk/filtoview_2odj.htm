<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Event Processing</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_in_filter_event_processing"></a>Filter Event Processing</h2>
<p>
Every filter is contained in a separate DLL with two common entry point functions, <a href="isapiref_4v8u.htm"><b>GetFilterVersion</b></a> and <a href="isapiref_48ir.htm"><b>HttpFilterProc</b></a>. When the DLL is loaded, <b>GetFilterVersion</b> is called. When the <b>GetFilterVersion</b> entry point is called, it passes an <a href="isapiref_8vle.htm"><b>HTTP_FILTER_VERSION</b></a> structure to the filter. The filter uses this structure to provide IIS with version information, a list of the events that the filter should be informed of, and the priority level for each event. </p>
<p>
After this first exchange, every time IIS processes one of the available events, it calls any filters that have registered for that event. If several filters have registered for the same event, the filters are called sequentially. The order that IIS calls the filters depends first on the priority specified in the <b>dwFlags</b> member of the <b>HTTP_FILTER_VERSION</b> structure by <b>GetFilterVersion</b>. If two or more different filters have registered for the same event at the same priority level, the order that the filters were loaded determines the order in which they are called. You can configure the order that filters are loaded by using the metabase. The order in which events are processed is described in detail in <a href="filtoview_9svb.htm">Summary of Event Ordering</a>.</p>
<p>
When the <a href="isapiref_48ir.htm"><b>HttpFilterProc</b></a> entry point is called, the filter uses the <i>notificationType</i> parameter to determine what action to take. For example, a filter that encrypts data will probably register for events that read or write raw data. When the filter receives notification that a read or write event has occurred, it encrypts the data and uses the <a href="appref_7vjo.htm"><b>WriteClient</b></a> callback function to write the encrypted data to the client.</p>
<p>&nbsp;</p></body>
</HTML>
