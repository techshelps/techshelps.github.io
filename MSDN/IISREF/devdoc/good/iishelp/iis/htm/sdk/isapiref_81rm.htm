<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HTTP_FILTER_CONTEXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_in_http_filter_context_str"></a>HTTP_FILTER_CONTEXT</h1>
<p>
This structure is used by HTTP_FILTER_PROC to obtain information about the current request. This structure is very similar in function to an ISAPI extension's EXTENSION_CONTROL_BLOCK.</p>
<pre><code>typedef struct _HTTP_FILTER_CONTEXT
{
    DWORD    cbSize;
    DWORD    Revision;
    PVOID    ServerContext;
    DWORD    ulReserved;
    BOOL     fIsSecurePort;
    PVOID    pFilterContext;
BOOL    (WINAPI * GetServerVariable);    
BOOL    (WINAPI * AddResponseHeaders);     
BOOL    (WINAPI * WriteClient);     
VOID *     (WINAPI * AllocMem);    
BOOL    (WINAPI * ServerSupportFunction);     
} HTTP_FILTER_CONTEXT, *PHTTP_FILTER_CONTEXT;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>cbSize</b></dt>
<dd>
[in] The size of this structure, in bytes.</dd>
<dt>
<b>Revision</b></dt>
<dd>
[in] The revision level of this structure. This is less than or equal to the version of the document, HTTP_FILTER_REVISION.</dd>
<dt>
<b>ServerContext</b></dt>
<dd>
[in] Reserved for server use.</dd>
<dt>
<b>ulReserved</b></dt>
<dd>
[in] Reserved for server use.</dd>
<dt>
<b>fIsSecurePort</b></dt>
<dd>
[in] A value of TRUE indicates that this event is over a secure port. A value of FALSE indicates that the event is not over a secure port.</dd>
<dt>
<b>pFilterContext</b></dt>
<dd>
[in/out] Points to any context information that the filter wants to associate with this request. Any memory associated with this request can be safely freed during the SF_NOTIFY_END_OF_NET_SESSION notification.</dd>
<dt>
<b>GetServerVariable</b></dt>
<dd>
Points to a function that retrieves information about the server and this connection. For some notifications, some variables may not be defined. An example of this are any notifications which occur before PREPROC_HEADERS, such as the READ_RAW_DATA notification. </dd>
<dt>
<b>AddResponseHeaders</b></dt>
<dd>
Points to the <b>AddResponseHeaders</b> function that adds a header to the HTTP response. </dd>
<dt>
<b>WriteClient</b></dt>
<dd>
Points to the <b>WriteClient</b> function that sends raw data back to the client.</dd>
<dt>
<b>AllocMem</b></dt>
<dd>
Points to the <b>AllocMem</b> function used to allocate memory. Any memory allocated with this function will automatically be freed when the net session ends. </dd>
<dt>
<b>ServerSupportFunction</b></dt>
<dd>
Points to the <b>ServerSupportFunction</b> function used to extend the ISAPI filter functions. Parameters are specific to the extensions.</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="appref_504l.htm"><b>GetServerVariable</b></a>, <a href="isapiref_9uur.htm"><b>AddResponseHeaders</b></a>, <a href="appref_7vjo.htm"><b>WriteClient</b></a>, <a href="isapiref_3oa5.htm"><b>AllocMem</b></a>, <a href="isapiref_1d82.htm"><b>ServerSupportFunction</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
