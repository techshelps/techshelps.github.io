<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Converting Existing CGI Scripts to ISAPI Extensions</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_in_converting_existing_cgi_scripts_to_isapi_extensions"></a>Converting Existing CGI Scripts to ISAPI Extensions</h2>
<p>
This section explains the basic requirements for converting existing CGI script-executable files to ISAPI extension DLLs. As with other DLLs, Web server applications should be thread-safe. More than one client will be executing the same function at the same time, so the code should follow safety procedures in modifying a global or static variable.</p>
<p>
You can keep your ISAPI extension thread-safe by using appropriate synchronization techniques, such as creating critical sections and semaphores. For additional information on writing thread-safe DLLs, see the documentation in the Platform SDK and in the Microsoft Development Library compact disc.</p>
<p>
There are several structural differences between an ISAPI extension and a CGI executable file. An ISAPI extension:
<ul>
<li>
Receives most of its data through the <b>lpbData</b> member of the Extension Control Block (ECB) as opposed to reading it from stdin. For any additional data, the extension uses the <a href="appref_235g.htm"><b>ReadClient</b></a> callback function.</li>
<li>
Accesses common CGI variables through the ECB. For other variables, it calls <a href="appref_504l.htm"><b>GetServerVariable</b></a>. In a CGI executable file, these are retrieved from the environment table using <b>getenv</b>.</li>
<li>
Sends data back to the client with the <a href="appref_7vjo.htm"><b>WriteClient</b></a> callback function instead of writing to stdout.</li>
<li>
Specifies completion status by either sending the header directly using the <a href="appref_7vjo.htm"><b>WriteClient</b></a> callback function, or calls <a href="appref_4gtq.htm"><b>ServerSupportFunction</b></a> using the HSE_REQ_SEND_RESPONSE_HEADER, instead of sending a "Status: NNN xxxxx..." to stdout.</li>
<li>
Redirects requests with a Location: or URL: header, instead of writing the header to stdout, use the HSE_REQ_SEND_URL if the URL is local. However, if the URL is remote or unknown, HSE_REQ_SEND_URL_REDIRECT_RESP in the <a href="appref_4gtq.htm"><b>ServerSupportFunction</b></a> callback function is used.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
