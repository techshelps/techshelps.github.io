<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding to a Response Header</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_in_adding_to_a_response_header"></a>Adding to a Response Header</h2>
<p>
One use of ISAPI filters is to modify a response header before IIS sends it to the client. For example, you might want to modify the expires value. The following code illustrates how to accomplish this.</p>
<pre><code>BOOL WINAPI GetFilterVersion(PHTTP_FILTER_VERSION pVer)
{
    pVer-&gt;dwFilterVersion = HTTP_FILTER_REVISION;
    lstrcpy(pVer-&gt;lpszFilterDesc, "Filter Template");
    pVer-&gt;dwFlags = SF_NOTIFY_ORDER_DEFAULT | SF_NOTIFY_URL_MAP;

    return TRUE;
}

DWORD WINAPI HttpFilterProc(PHTTP_FILTER_CONTEXT pfc, DWORD NotificationType, LPVOID pvNotification)
{
    HTTP_FILTER_URL_MAP *pUrlMap = (HTTP_FILTER_URL_MAP *)pvNotification;
    LPSTR szPtr1;

    // Find the extension of the requested file
    szPtr1 = strrchr(pUrlMap-&gt;pszPhysicalPath, '.');

    // If this is a JPG, add an expires header
    if (szPtr1)
    {
        szPtr1++;
        if (!lstrcmpi(szPtr1, "jpg"))
            pfc-&gt;AddResponseHeaders(pfc, "Expires: 0\r\n", 0);
    }
    
    return SF_STATUS_REQ_NEXT_NOTIFICATION;
}
 </code></pre>
<p>
For a complete working sample program that modifies a response header, see <a href="nonssamp_8jzn.htm">Developer Samples</a>.</p>
<p>&nbsp;</p></body>
</HTML>
