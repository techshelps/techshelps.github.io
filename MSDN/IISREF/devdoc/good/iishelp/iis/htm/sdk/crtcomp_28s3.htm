<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Page-level Event Methods</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_page_level_event_methods"></a>Page-level Event Methods</h3>
<p>
In IIS 3.0, objects accessed the built-in objects by creating an instance of the <b>ScriptingContext</b> object in a page-level event method. This approach is supported in order to be compatible with existing ASP applications. This method of accessing the built-in objects is not recommended. Any new components that you develop should use <b>ObjectContext</b> to access the built-in objects. It is recommended that you modify any components that rely on <b>ScripingContext </b>to use <b>ObjectContext</b> instead.</p>
<p>
You can implement two page-level event methods, <a href="crtcomp_32n9.htm"><b>OnStartPage</b></a><b> </b>and <a href="crtcomp_2dk5.htm"><b>OnEndPage</b></a><b>,</b> in your component. These methods are optional. ASP pages will work with any Automation object, regardless of whether these methods are implemented.</p>
<p>
When the server creates an object instance, it looks for <b>OnStartPage</b> and <b>OnEndPage</b> methods associated with that object's <b>IDispatch</b> interface. If the object has implemented these methods, the server will automatically call the <b>OnStartPage</b> method during script processing before the object is used and call the <b>OnEndPage </b>method when all scripts on the ASP page have been processed. </p>
<p>
The only exceptions are objects created with application scope, which never receive <b>OnStartPage</b> or <b>OnEndPage</b> method calls. As the <a href="crtcomp_80qb.htm"><b>component design guidelines</b></a> indicate, very few objects should be given application scope. For more information about application-scope objects, see the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_global.asa_reference">
</object><a href=JavaScript:alink_1.Click()><b>Global.asa Reference</b></a>.</p>
<p>
Because objects that have been given application scope do not receive a call to the <b>OnStartPage </b>method, they cannot depend on its functionality. </p>
<p>
It is recommended that your object, regardless of scope, handle the situation in which the <b>OnStartPage </b>method fails or is not called. A common example of the latter is occurs when the object is created in a way other than the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_createobject">
</object><a href=JavaScript:alink_2.Click()><b>Server.CreateObject</b></a> method provided by ASP.</p>
<p>&nbsp;</p></body>
</HTML>
