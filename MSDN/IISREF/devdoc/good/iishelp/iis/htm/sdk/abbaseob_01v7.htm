<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMSAdminBase::GetDataPaths</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_k2_imsadminbase_getdatapaths"></a>IMSAdminBase::GetDataPaths</h1>
<p>
The <b>IMSAdminBase::GetDataPaths</b> determines which keys in the metabase contain a specified data identifier. This method retrieves the paths of all keys in the subtree relative to a specified starting key that actually contains the identifier. You can use this method to determine the scope of inherited data values, since only keys that contain the identifier itself are returned. Paths to keys that only contain inherited data for the specified identifier will not be returned.</p>
<pre><code><b>HRESULT GetDataPaths( 
  METADATA_HANDLE </b><i>hMDHandle</i><b>,      </b>//metabase handle<b> </b>
<b>  LPCWSTR </b><i>pszMDPath</i><b>,              </b>//path to the key, relative to <i>hMDHandle</i> 
<b>  DWORD </b><i>dwMDIdentifier</i><b>,           </b>//identifier of the data<b> </b>
<b>  DWORD </b><i>dwMDDataType</i><b>,</b>       <b>    </b>  //type of data 
<b>  DWORD </b><i>dwMDBufferSize</i><b>,           </b>//the size, in wchars, of <i>pbBuffer</i> 
<b>  LPWSTR </b><i>pszBuffer</i><b>,               </b>//the buffer that receives the data 
<b>  DWORD </b><i>*pdwMDRequiredBufferSize</i>  //if the method fails, receives 
                                  // the required buffer size 
<b>); </b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hMDHandle</i></dt>
<dd>
Specifies a handle to the metabase. This can either be METADATA_MASTER_ROOT_HANDLE or a handle returned by a previous call to <b>IMSAdminBase::OpenKey</b>.</dd>
<dt>
<i>pszMDPath</i></dt>
<dd>
Points to a string that contains the path of the key to be opened, relative to <i>hMDHandle</i>. For example, if the handle references the /LM key, you could specify the Web services subkey using the path /W3SVC. </dd>
<dt>
<i>dwMDIdentifier</i></dt>
<dd>
Specifies the identifier of the data, such as MD_ACCESS_PERM. </dd>
<dt>
<i>dwMDDataType</i></dt>
<dd>
A DWORD that specifies the type of data to be located. This parameter can be one of the following values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Data type</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>ALL_METADATA</td>
<td width=52%>Copy or move all data, regardless of type.</td>
</tr>
<tr valign=top>
<td width=48%>BINARY_METADATA</td>
<td width=52%>Binary data in any form.</td>
</tr>
<tr valign=top>
<td width=48%>DWORD_METADATA</td>
<td width=52%>An unsigned 32-bit number.</td>
</tr>
<tr valign=top>
<td width=48%>EXPANDSZ_METADATA</td>
<td width=52%>A null-terminated string that contains unexpanded environment variables, such as %PATH%.</td>
</tr>
<tr valign=top>
<td width=48%>MULTISZ_METADATA</td>
<td width=52%>An array of null-terminated strings, terminated by two null characters.</td>
</tr>
<tr valign=top>
<td width=48%>STRING_METADATA</td>
<td width=52%>A null-terminated ASCII string.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwMDBufferSize</i></dt>
<dd>
Specifies the size, in wchars, of the buffer.</dd>
<dt>
<i>pszBuffer</i></dt>
<dd>
Points to a buffer that receives the data. If the method call is successful, the buffer will contain a double-null terminated multsz of all paths in the subtree that contain the specified identifier. The returned paths are relative to the handle specified. If the identifier exists on the key designated by the handle and path specified, this path will be the first entry in the list. </dd>
<dt>
<i>pdwMDRequiredBufferSize</i></dt>
<dd>
Points to a DWORD that contains the buffer length required, in wchars. This parameter is only used if the method returns ERROR_INSUFFICIENT_BUFFER. </dd>
</dl>
<h4>Return Values</h4>
<p>
Returns an HRESULT that contains one of the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>The parameter is incorrect.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=50%>There is not enough memory to complete the operation.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_PATH_NOT_FOUND</td>
<td width=50%>The specified path is not found.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_SUCCESS</td>
<td width=50%>The method succeeded.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
