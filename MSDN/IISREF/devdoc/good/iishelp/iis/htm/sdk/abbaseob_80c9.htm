<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMSAdminBase::OpenKey</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_k2_imsadminbase_openkey"></a>IMSAdminBase::OpenKey</h1>
<p>
The <b>IMSAdminBase::OpenKey</b> method opens a key for read access, write access or both. The returned handle can be used by several of the other methods. </p>
<p>
The first time you call this  method, you must pass in the METADATA_MASTER_ROOT_HANDLE. </p>
<pre><code><b>HRESULT OpenKey(
  METADATA_HANDLE</b><i> hMDHandle</i><b>,      </b>//metabase handle
<b>  LPCWSTR</b><i> pszMDPath</i><b>,              </b>//path to the key, relative to <i>hMDHandle</i>
<b>  DWORD</b><i> dwMDAccessRequested</i><b>,      </b>//specifies read and/or write permissions
<b>  DWORD</b><i> dwMDTimeOut</i><b>,              </b>//the time, in milliseconds, before the 
                     <b>        </b>     // method times out
<b>  PMETADATA_HANDLE</b><i> phMDNewHandle  </i>//receives the handle to the opened key
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hMDHandle</i></dt>
<dd>
Specifies a handle to the metabase. This can either be METADATA_MASTER_ROOT_HANDLE or a handle returned by a previous call to <b>IMSAdminBase::OpenKey</b>.</dd>
<dt>
<i>pszMDPath</i></dt>
<dd>
Points to a string that contains the path of the key to be opened, relative to <i>hMDHandle</i>. For example, if the handle references the /LM key, you could specify the Web services subkey using the path /W3SVC.</dd>
<dt>
<i>dwMDAccessRequested</i></dt>
<dd>
Specifies the requested permissions for the handle. This parameter must be set to at least one of the following values:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Value</th>
<th align=left width=47%>Description</th>
</tr>
<tr valign=top>
<td width=53%>METADATA_PERMISSION_READ</td>
<td width=47%>Open the key for reading. </td>
</tr>
<tr valign=top>
<td width=53%>METADATA_PERMISSION_WRITE</td>
<td width=47%>Open the key for writing.</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwMDTimeOut</i></dt>
<dd>
Specifies the time, in milliseconds, for the method to wait for the open operation to succeed. </dd>
<dt>
<i>phMDNewHandle</i></dt>
<dd>
Points to a handle to receive the opened handle.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns an HRESULT that contains one of the following values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=50%>ERROR_INVALID_PARAMETER</td>
<td width=50%>The parameter is incorrect.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_PATH_BUSY</td>
<td width=50%>The path specified cannot be used at this time because a handle to the key, or one of its ancestors or descendents, is already open.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_PATH_NOT_FOUND</td>
<td width=50%>The specified path is not found.</td>
</tr>
<tr valign=top>
<td width=50%>ERROR_SUCCESS</td>
<td width=50%>The method succeeded.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Opening a key with read permissions guarantees that the view of the data will not change while the key is open. Opening a key with write permissions guarantees that no other processes will read or write any data until the handle is closed. This applies to the open key and all of its ancestor and descendent keys. Because opening a key locks a portion of the metabase, it is recommended that you open the key, perform any reads or writes, and immediately close the key when done. </p>
<p>
If you try to open a key with read access, the method will wait until all open write access handles to the key and to all ancestor and descendent keys are closed. If you try to open a key with write access, the method will wait until all open handles (either read or write) to the key and to all ancestor and descendent keys are closed. </p>
<p>
The METADATA_MASTER_ROOT_HANDLE remains open at all times, and does not block other handles of either access type from being opened. </p>
<p>&nbsp;</p></body>
</HTML>
