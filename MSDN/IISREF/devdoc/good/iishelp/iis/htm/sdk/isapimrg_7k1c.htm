<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>New ISAPI features for IIS 4.0</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_in_new_isapi_features_for_iis_4.0"></a>New ISAPI features for IIS 4.0</h3>
<p>
IIS 4.0 introduces significant changes to the ways you can develop and implement Internet applications. The changes that affect how you develop ISAPI applications and filters are summarized as follows.</p>
<h4>Running ISAPI extensions out of process</h4>
<p>
In previous releases of IIS, you always ran ISAPI extensions in the same server process as IIS. While this allowed quicker performance, the danger that IIS would become corrupted if your extension did not handle errors properly was greater.</p>
<p>
IIS 4.0 allows you to isolate an extension by running it in a separate server process. You can accomplish this by selecting the <b>Run in separate memory space</b> option in the IIS user interface when you create an extension. The configures the extension to map to the DLL which exposes the ISAPI extension entry points.</p>
<p>
For more information on isolating applications, see <i>Isolating Applications</i> under <a href="../../../iis/htm/core/iisvadm.htm"><b>Server Administration</b></a>. </p>
<p>
Some of your ISAPI extension DLLs may not be suitable for running in a separate server process. Issues that could prevent an ISAPI extension from running in a separate server process include: 
<ul>
<li>
requirement for exclusive access to files</li>
<li>
security considerations</li>
<li>
design problems</li>
<li>
combined of ISAPI extension and filter functions in a single DLL</li>
<li>
performance requirements</li>
</ul>
<p>
You can use the administration property <a href="arproprf_3ppv.htm"><b>InProcessIsapiApps</b></a><b> </b>to specify all ISAPI DLLs that you want to run in the same server process as IIS. This property applies to a WebService. Requests for such ISAPI DLLs are routed to the default application root in IIS (/LM/W3SVC). The default application root is marked in-process only, which guarantees that all such requests will run in-process.</p>
<p>
<b>Warning:</b> A software error in ISAPI DLLs will stop the IIS server. Therefore, unless you are sure that your DLL will never run out-of-process, do not add the DLL to this list.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Setup will create the <b>InProcessIsapiApps</b> property and populate it with Ssinc.dll and Httpodbc.dll, which only work if running in the same process as IIS.</p>
<p>
For more information on using the metabase, see <a href="aaadmin_6jzi.htm"><b>IIS Administration</b></a> </p>

<h4><a name="_in_specifying_filters_in_the_metabase"></a>Specifying filters in the Metabase</h4>
<p>
IIS 4.0 introduces the metabase, a new data storage location. ISAPI filter information that you formerly stored in the System Registry should now be stored in the metabase. Metabase information can be modified either through the <a href="aoiisao_2kfn.htm"><b>IIS Admin Objects</b></a> or the <a href="abbaseob_41x0.htm"><b>IIS Admin Base Object</b></a>. </p>

<h4><a name="_in_global_and_website_filters"></a>Global and Website filters</h4>
<p>
Previously, you applied ISAPI filters across all levels of a server. There was no way to specify that a filter would only respond to events at a more granular level. In IIS 4.0, you can apply filters to all Web sites on a server or to a particular Web site only. A global filter will be notified of events that occur at any Web site on the server, while Web site filters are only notified of events at the site to which they are applied. You can specify both global and Web site filters with the user interface, or you can set the appropriate key values in the metabase. For more information on setting a filter see <a href="aoiisao_0drm.htm"><b>IIS Filter</b></a> and <a href="aoiisao_4h6b.htm"><b>IIS Filters</b></a> in IIS Admin Objects.</p>

<h4><a name="_in_support_for_terminatefilter"></a>Support for TerminateFilter</h4>
<p>
<a href="isapiref_2rzm.htm"><b>TerminateFilter</b></a> is a new entry point for ISAPI filters introduced in IIS 4.0. If your ISAPI filter exports <b>TerminateFilter</b>, it will be called when the filter is unloaded.</p>

<h4><a name="_in_new_filter_notification"></a>New filter notification</h4>
<p>
SF_NOTIFY_SEND_RESPONSE is a new notification that can be specified with the <a href="isapiref_48ir.htm"><b>HttpFilterProc</b></a> function. </p>

<h4><a name="_in_new_server_variables"></a>New Server Variables</h4>
<p>
Many new server variables that can be specified by the <a href="appref_504l.htm"><b>GetServerVariable</b></a> function have been added. </p>

<h4><a name="_in_new_serversupportfunction_commands_for_filters"></a>New ServerSupportFunction () commands for filters</h4>
<p>
Two new commands for <a href="appref_4gtq.htm"><b>ServerSupportFunction</b></a> have been added. They are:</p>
<p>
SF_REQ_DISABLE_NOTIFICATIONS </p>
<p>
SF_REQ_GET_PROPERTY </p>
<p>
In addition, three new options have been added to the <a href="appref_4gtq.htm"><b>ServerSupportFunction</b></a>. They are:</p>
<p>
HSE_REQ_SEND_RESPONSE_HEADER_EX</p>
<p>
HSE_REQ_GET_CERT_INFO_EX</p>
<p>
HSE_REQ_GET_IMPERSONATION_TOKEN</p>

<h4><a name="_in_new_members_of_the_http_filter_log_structure"></a>New Members of the HTTP_FILTER_LOG structure</h4>
<p>
Three new members of the <a href="isapiref_1otu.htm"><b>HTTP_FILTER_LOG</b></a> structure have been added in IIS 4.0. They are:
<ul>
<li>
DWORD dwBytesSent;</li>
<li>
DWORD dwBytesRecvd;</li>
<li>
DWORD msTimeForProcessing</li>
</ul>

<h4><a name="_in_support_for_http_1.1"></a>Support for HTTP 1.1</h4>
<p>
IIS 4.0 introduces support for HTTP 1.1. Two areas where this has potential impact on ISAPI extension and filter developers is in support for pipelined requests and the transfer encoding header. Pipelined requests are described in <a href="isapimrg_1vtz.htm"><b>Extension Request Processing</b></a>.</p>
<p>
Active Server Pages (ASP) now support the transfer encoding header, which tells the client if a transformation has been applied to the body of the message that is being sent. For example, if the client supports HTTP 1.1, IIS 4.0 can specify the Transfer-encoding value of chunked. When the chunked transformation has been applied, the message is broken into a chucks of varying sizes. Each chunk contains its own size indicator and optional footers for specifying header fields. Chunking improves the overall efficiency of the transmission.</p>
<p>
For more information on Transfer encoding, see RFC 2068 published by the World Wide Web consortium. RFC 2068 is available at: http://www.w3.org/protocols. See <a href="nonssamp_8jzn.htm"><b>Developer Samples</b></a> for information on the sample extension that implements this technology.</p>
<p>&nbsp;</p></body>
</HTML>
