<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ILogPlugin::QueryExtraLoggingFields</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_k2_ilogplugin_queryextraloggingfields"></a>ILogPlugin::QueryExtraLoggingFields</h1>
<p>
The <b>ILogPlugin::QueryExtraLoggingFields</b> method determines logging information that is specific to a custom logging module.</p>
<pre><code><b>virtual HRESULT STDMETHODCALLTYPE QueryExtraLoggingFields(
  PDWORD</b><i> cbSize</i>       //size of the <i>szParameters</i> parameter
<b>  PCHAR</b><i> szParameters  </i>//defines additional fields for logging
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cbsize</i></dt>
<dd>
The size of the <i>szParameters</i> parameter.</dd>
<dt>
<i>szParameters</i></dt>
<dd>
Null-separated strings that list the extra fields to be logged.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You can use this method to record data sent by custom headers from the client. For example, to capture a user's cookie, the <i>szParameters</i> parameter would contain the following:</p>
<pre><code>User-Agent\0Cookie\0\0
</code></pre>
<p>
You could then use the <b>IInetLogInformation::GetExtraHTTPHeaders</b> method to retrieve a list of header information. This list would be null delimited.</p>
<h4>See Also</h4>
<p>
<a href="logovrvw_3lo3.htm"><b>IInetLogInformation::GetExtraHTTPHeaders</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
