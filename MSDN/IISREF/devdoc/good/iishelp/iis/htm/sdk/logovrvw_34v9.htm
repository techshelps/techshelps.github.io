<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating a Logging User Interface Module</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_k2_creating_a_logging_user_interface_module"></a>Creating a Logging User Interface Module</h1>
<p>
When you create your own custom logging module, you have three user interface options:
<ul>
<li>
<b>No user interface module:</b>  This option is appropriate if your logging module has no configurable settings, or if you'd rather provide access to your logging module through mechanisms other than those used by IIS. </li>
<li>
<b>Use a built-in user interface module:</b>  You can, in effect, borrow one of the user interface modules provided with the built-in IIS logging modules. The user interface module GUID specified under the <b>Microsoft IIS Log File Format</b> key of the /LM/LOGGING path in the metabase would be most appropriate for this use, because it provides basic configuration functionality. </li>
<li>
<b>Create a new user interface module:</b>  You can create your own COM object that implements the appropriate interfaces. </li>
</ul>
<p>
You are not restricted to performing any set tasks in your user interface module. </p>
<h5><img src="../../../../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create and install a logging user interface module</h5>
<ul>
<li>
Either write a COM component that implements the <a href="logovrvw_9bj9.htm"><b>ILogUIPlugin</b></a> interface, as defined in the ilogobj.h header file, or use one of the built-in user interface modules. </li>
<li>
Use regsvr32, or some other registration tool, to register the component. </li>
<li>
Add your logging user interface module GUID to the MD_LOG_PLUGIN_UI_ID key in the metabase. </li>
</ul>
<p>
If you decide to create a new user interface module, you should implement the module in a DLL separate from the logging module. Also, the UI module must be resident and registered on the machine on which Internet Service Manager is running. This requirement is particularly important if you intend to administer your custom logging module remotely; the logging module itself can be running on a remote machine, but the logging UI module must be local. </p>
<p>&nbsp;</p></body>
</HTML>
