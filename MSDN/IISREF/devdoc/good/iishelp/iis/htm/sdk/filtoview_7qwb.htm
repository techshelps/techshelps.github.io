<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Basic Filter Framework</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_in_basic_filter_framework"></a>Basic Filter Framework</h2>
<p>
Like ISAPI extensions, ISAPI filters must provide two common entry points, and can optionally provide a termination entry point. The required entry points are <a href="isapiref_4v8u.htm"><b>GetFilterVersion</b></a> and <a href="isapiref_48ir.htm"><b>HttpFilterProc</b></a>. Support for a third optional entry point, the <a href="isapiref_2rzm.htm"><b>TerminateFilter</b></a> function has been added in ISAPI 4.0. If your filter exposes <b>TerminateFilter,</b> IIS will call this function before it removes the filter from memory. <b>TerminiateFilter</b> is similar to <b>TerminateExtension</b>; it is intended as a way for you to perform any resource maintenance required before shutting down. </p>
<p>
The basic structure of an ISAPI filter consists of the functions that accomplish each of the following three tasks: 
<ul>
<li>
<a href="#_in_initializing_a_filter">Initializing a filter</a></li>
<li>
<a href="#_in_processing_the_event">Processing the event</a></li>
<li>
<a href="#_in_terminating_the_filter">Terminating the filter</a></li>
</ul>

<h3><a name="_in_initializing_a_filter"></a>Initializing a filter</h3>
<p>
When IIS loads an ISAPI filter, it calls the <a href="isapiref_4v8u.htm"><b>GetFilterVersion</b></a> function. This function returns the <a href="isapiref_8vle.htm"><b>HTTP_FILTER_VERSION</b></a> data structure to IIS. The structure includes a short description of the filter and the server events for which the filter needs to be notified. Server events are specified by the data structure's <b>dwFlags</b> member.</p>
<p>
The following code registers a filter for notification before sending raw data to the client and before updating the log file.</p>
<pre><code>BOOL WINAPI GetFilterVersion( PHTTP_FILTER_VERSION pVer )
{

// The next line sets the version of the filter.

    pVer-&gt;dwFilterVersion = HTTP_FILTER_REVISION;

// The next line sets the description of the filter.

    lstrcpy( pVer-&gt;lpszFilterDesc, "Reading Raw Data and Logging filter" );

// This filter will be notified for the following notifications
    pVer-&gt;dwFlags = SF_NOTIFY_SEND_RAW_DATA | SF_NOTIFY_LOG;

    return TRUE;</code></pre>
<pre><code>}</code></pre>

<h3><a name="_in_processing_the_event"></a>Processing the event</h3>
<p>
The function responsible for processing the event information is the <a href="isapiref_48ir.htm"><b>HTTPFilterProc</b></a>. IIS calls your filter for every event that you have registered the filter for. When IIS calls <b>HTTPFilterProc</b>, it passes in an <a href="isapiref_81rm.htm"><b>HTTP_FILTER_CONTEXT</b></a> data structure. This structure is similar to the ECB for an ISAPI extension, in that it is associated with a particular request, and is used by IIS to coordinate filter processing. When IIS calls the filter's <b>HTTPFilterProc</b>, it also passes in a DWORD identifying which event has occurred and a pointer to a memory area defined by IIS that contains the event information.</p>
<p>
The two examples, <a href="filtoview_9mb7.htm">Obtaining Server Variables</a>, and <a href="filtoview_4ucy.htm">Adding to a Response Header</a>, demonstrate the use of <b>HTTPFilterProc</b>.</p>
<p>
One important factor in processing events is the order in which they are processed. While there are a number of factors that can have an impact on this order, <a href="filtoview_9svb.htm">Summary of Event Ordering</a> provides a general outline of the issues involved.</p>

<h3><a name="_in_terminating_the_filter"></a>Terminating the Filter</h3>
<p>
You can provide the <a href="isapiref_2rzm.htm"><b>TerminateFilter</b></a> entry point function as a way to gracefully remove any attachments to system resources that your filter may have developed while running. If you do not provide the TerminateFilter entry point, your filter must remove attachments </p>
<p>&nbsp;</p></body>
</HTML>
