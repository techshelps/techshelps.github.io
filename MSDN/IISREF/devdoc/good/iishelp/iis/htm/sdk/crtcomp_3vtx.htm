<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Determining Component Scope</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_determining_component_scope"></a>Determining Component Scope</h2>
<p>
Scope refers to how you instantiate your component in IIS. You do not have any direct control over the scope that a script writer will assign to your component. They can place it in applications, sessions, or pages. In designing your component, however, you should be aware of the implications scope has on performance. The <a href="crtcomp_80qb.htm"><b>component design guidelines</b></a> summarize these implications.</p>
<p>
An object instance can be created either with the <b>Server.CreateObject</b> command or with the &lt;OBJECT&gt; tag. For a majority of components, the most appropriate way for you to create an object instance is to use the &lt;OBJECT&gt;<b> </b>tag in the ASP script that requires the functionality offered by your component. This is known as page level scope.</p>
<p>
For more information on setting scope, see <a href="../../../iis/htm/asp/iiwatop.htm"><b>Web Applications</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
