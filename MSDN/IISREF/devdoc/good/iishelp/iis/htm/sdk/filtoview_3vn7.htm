<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Developing ISAPI Filters</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_in_developing_isapi_filters"></a>Developing ISAPI Filters</h1>
<p>
You can use an ISAPI filter to receive notifications of various events during the processing of HTTP requests. Filters are similar to extensions in that they are implemented as DLLs and run in the same process as IIS. The fundamental difference between filters and extensions is that extensions are only loaded when they are requested by a client. Filters are loaded when you start IIS, and are kept in memory until you shut IIS down. Once a filter is loaded, it indicates the events that IIS should send notification about. Subsequently, IIS will notify the filter each time one of the registered events occurs.</p>
<p>
This section contains the following: 
<ul>
<li>
<a href="filtoview_2odj.htm">Filter Event Processing</a></li>
<li>
<a href="filtoview_7qwb.htm">Basic Filter Framework</a></li>
<li>
<a href="filtoview_9svb.htm">Summary of Event Ordering</a></li>
<li>
<a href="filtoview_9mb7.htm">Obtaining Server Variables</a></li>
<li>
<a href="filtoview_4ucy.htm">Adding to a Response Header</a></li>
<li>
<a href="filtoview_2lki.htm">Adding a Filter</a></li>
<li>
<a href="filtoview_6y2b.htm">Developer notes for ISAPI filters</a></li>
</ul>
<p>&nbsp;</p></body>
</HTML>
