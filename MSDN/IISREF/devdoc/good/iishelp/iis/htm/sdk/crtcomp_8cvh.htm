<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRequestDictionary::get_Item</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_irequestdictionary_get_item"></a>IRequestDictionary::get_Item</h1>
<p>
The <b>IRequestDictionary::get_Item</b> method retrieves the specified item from a <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_request_object">
</object><a href=JavaScript:alink_1.Click()><b>Request</b></a> object dictionary.</p>
<pre><code><b>HRESULT get_Item(
  VARIANT</b><i> Var</i><b>,  </b>//VARIANT that contains the name of the item in the 
                // collection
<b>  VARIANT *</b><i> pVariantReturn</i>
<i>                </i>//pointer to a VARIANT that receives the item value
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Var</i></dt>
<dd>
A variant that contains the name of the item in the collection.</dd>
<dt>
<i>pVariantReturn</i></dt>
<dd>
Points to a variant that receives the item value.</dd>
</dl>
<h4>Remarks</h4>
<p>
Automation objects can specify that one or more variant parameters are optional. This is done by passing the parameter with the type set to VT_ERROR and a value of DISP_E_PARAMNOTFOUND. For example, if you want to do this with the <i>Var</i> parameter, the value it returns will depend on the object's implementation of the <b>IRequestDictionary </b>interface. The <b>QueryString</b> object would then return the entire query string. 
<ul>
<li>
For <b>Request.QueryString</b>, <i>pVariantReturn</i> contains the unparsed query string data.</li>
<li>
For <b>Request.Form</b>, <i>pVariantReturn</i> contains the unparsed form data.</li>
<li>
For <b>Request.Cookies</b>, <i>pVariantReturn</i> contains a URL-encoded list of the cookies.</li>
<li>
For <b>Request.ClientCertificate</b>, <i>pVariantReturn</i> contains a URL-encoded list of the items in the certificate.</li>
<li>
<b>Request.ServerVariables </b>and <b>Response.Cookies </b>do not accept an optional variant parameter, and will raise a COM Automation exception if <i>Var</i> is DISP_E_PARAMNOTFOUND.</li>
</ul>
<p>
If <i>Var</i> is not an optional parameter then it must be a VT_BSTR or a VT_DISPATCH pointer with a default value that can be converted to a BSTR. In this case, the BSTR value of <i>Var</i> is looked up in the appropriate dictionary, and the value of <i>Var</i> is returned. If <i>Var</i> is not in the dictionary, then a VARIANT equal to VT_EMPTY is returned if the <b>IRequestDictionary</b> is covering one of the <b>Request</b> object's collections. If the <b>IRequestDictionary</b> pointer is the <b>Response.Cookies</b> collection, a new cookie with the name of <i>Var</i> is created, and that cookie is returned. If <i>Var</i> is not a BSTR (and not DISP_E_PARAMNOTFOUND), then the <b>get_Item</b> method will raise an OLE Automation exception.</p>
<h4>See Also</h4>
<p>
<a href="crtcomp_435l.htm"><b>IRequestDictionary</b></a></p>
<p>&nbsp;</p></body>
</HTML>
