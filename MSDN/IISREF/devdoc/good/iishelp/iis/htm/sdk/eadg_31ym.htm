<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Anonymous Authentication</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_k2_anonymous_authentication"></a>Anonymous Authentication</h3>
<p>
Setting Anonymous Authentication in IIS Manager means that IIS will not use any HTTP authentication mechanism to control access to resources on the computer. By default, when IIS is installed, it creates a user account called IUSR_&lt;servername&gt;, where &lt;servername&gt; is the name of the server on which IIS is running. This user account is added to the Guests group on the computer, which indicates that its access to resources is limited. When an HTTP request is received by IIS with Anonymous authentication being used, IIS will first impersonate the IUSR_&lt;servername&gt; account before executing any code or accessing any files that are involved in the request. This allows a level of security by limiting the accessibility to such things as system files by an unauthenticated user. IIS is able to impersonate the IUSR_&lt;servername&gt; account because the user name and password credentials for this account are known by IIS. </p>
<p>
You can change the account that is used for anonymous authentication in Internet Service Manager, either at the Web server service level, or for individual virtual directories. You can also change the security privileges for the IUSR_&lt;servername&gt; account in Windows NT User Manager. Any changes to the IUSR_&lt;servername&gt; account will affect every anonymous HTTP request that is serviced by IIS. </p>
<p>
<b>Note</b>&nbsp;&nbsp;Because you can configure IIS to use an anonymous account that is different from the USR_&lt;servername&gt; account, wherever this article refers to the IUSR_&lt;servername&gt; account, you should think of it as a placeholder for the account name configured as the Anonymous Logon account in the Microsoft Management Console.</p>
<p>
The anonymous account configured in Internet Manager must have the user right to log on locally. If the account does not have the Log On Locally permission (not given to guest accounts by default on domain controllers), IIS will not be able to service any anonymous requests. The IIS installation specifically grants the Log On Locally permission to the IUSR_&lt;servername&gt; account. </p>
<p>
Most resources that allow Guest access do so by allowing access to the special group, Everyone. You can set permissions on files and other resources specifically to allow or disallow access by the IUSR_&lt;servername&gt; account, but most people end up managing access by controlling access to the groups Everyone or Guests. </p>
<p>
Before IIS returns a requested page to a client, it first verifies that the client has permission to view the page. Although you can restrict permission to a page by turning off Read and Execute permissions on its virtual root in IIS, the preferred method of restricting access to individual pages is to use NTFS file permissions. </p>
<p>
Before returning a page to the client, IIS checks the NTFS file permissions on the page to see if the current<i> </i>user is allowed access to the file. If the NTFS permissions on the file do not allow IUSR_&lt;servername&gt; access to the requested page, IIS returns an <i>HTTP 401 Unauthorized </i>status code to the browser. </p>
<p>
At this point the browser attempts to authenticate the user using one of the other authentication methods. If Basic authentication is used, the user is prompted for his or her user name and password. If Windows NT Challenge/Response is used, the browser automatically returns the appropriate information to satisfy the authentication request. The user is not prompted for a user name and password unless the server does not recognize the user name provided by Windows NT Challenge/Response. IIS then checks the user's credentials against the access permissions on the requested page, and either returns the page to the browser or returns an Access Denied response. </p>
<p>&nbsp;</p></body>
</HTML>
