<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IReadCookie</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ireadcookie"></a>IReadCookie</h3>
<p>
You can use the <b>IReadCookie</b> interface to access the object returned from the read-only <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_cookies_request">
</object><a href=JavaScript:alink_1.Click()><b>Cookies</b></a> collection. Calling <b>IRequestDictionary::get_Item</b> on the read-only <b>Cookies</b> collection will always return an object that implements the <b>IReadCookie </b>interface.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Method</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="crtcomp_6z3n.htm"><b>IReadCookie::get_HasKeys</b></a></td>
<td width=52%>Retrieves a Boolean indicating whether the cookie has keys.</td>
</tr>
<tr valign=top>
<td width=48%><a href="crtcomp_5tt9.htm"><b>IReadCookie::get_Item</b></a></td>
<td width=52%>Retrieves the specified item from a cookie dictionary.</td>
</tr>
<tr valign=top>
<td width=48%><a href="crtcomp_23zh.htm"><b>IReadCookie::get__NewEnum</b></a></td>
<td width=52%>Retrieves an enumerator for the <b>Cookies</b> collection.</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;<b>IReadCookie</b> and <a href="crtcomp_4dgl.htm"><b>IWriteCookie</b></a> are interfaces for the same object. If you have an <b>IReadCookie</b> pointer, you can use the <b>IUnknown::QueryInterface</b> method on an <b>IWriteCookie</b> pointer.</p>
<p>
This interface also supports the <b>IUnknown</b> and <b>IDispatch </b>interface methods. For more information, see \inetsrv\asp\cmpnts\asptlb.h, the header file installed with ASP.</p>
<h4>See Also</h4>
<p>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_cookies_request">
</object><a href=JavaScript:alink_2.Click()><b>Cookies</b></a></p>
<p>&nbsp;</p></body>
</HTML>
