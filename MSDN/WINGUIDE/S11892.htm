<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering Commands</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>Registering Commands</H2><P>  </P>
<P>Many of the commands found on icons, including Send To, Cut, Copy, Paste, Create Shortcut, Delete, Rename, and Properties, are provided by their container — that is, their containing folder or the desktop. But you must provide support for the icon's primary commands, also referred to as verbs, such as Open, Edit, Play, and Print. You can also register additional commands that apply to your file types, such as a What's This? command and even commands for other file types.</P>
<P>To add these commands, in the <B>HKEY_CLASSES_ROOT</B> key, you register a <B>shell</B> subkey and a subkey for each verb, and a <B>command</B> subkey for each menu command name.</P>
<P CLASS="syn"><B>HKEY_CLASSES_ROOT</B><BR>    <B><I>ApplicationIdentifier</I></B> = <I>Type</I> <I>Name<BR></I>        <B>shell</B> [ = <I>default</I> <I>verb</I> [,<I>verb2</I> [,..]]<I><BR></I>            <B><I>verb</I></B> [ = <I>Menu</I> <I>Command</I> <I>Name</I>]<BR>                <B>command</B> = <I>pathname</I> [<I>parameters</I>]</P>
<P>You can also register a DDE command string for a DDE command.</P>
<P CLASS="syn"><B>HKEY_CLASSES_ROOT</B><BR>    <B><I>ApplicationIdentifier</I></B> = <I>Type</I> <I>Name<BR></I>        <B>shell</B> [ = <I>default</I> <I>verb</I> [,<I>verb2</I> [,..]]<I><BR></I>            <B><I>verb</I></B> [ = <I>Menu</I> <I>Command</I> <I>Name</I>]<BR>                <B>ddeexec</B> = <I>DDE</I> <I>command</I> <I>string<BR></I>                    <B>Application</B> = <I>DDE</I> <I>Application</I> <I>Name</I><BR>                    <B>Topic</B> <I>=</I> <I>DDE</I> <I>topic</I> <I>name</I></P>
<P>A verb is a language-independent name of the command. Applications may use it to invoke a specific command programmatically. The system defines Open, Print, Find, and Explore as standard verbs and automatically provides menu command names and appropriate access key assignments, localized in each international version of Windows. When you supply verbs other than these, provide menu command names localized for the specific version of Windows on which the application is installed. To assign a menu command name for a verb, make it the default value of the verb subkey.</P>
<P>The menu command names corresponding to the verbs for a file type are displayed to the user, either on a folder's File drop-down menu or pop-up menu for a file's icon. These appear at the top of the menu. You define the order of the menu commands by ordering the verbs in the value of the <B>shell</B> key. The first verb becomes the default command in the menu.</P>
<P>By default, capitalization follows how you enter format the menu command name value of the verb subkey. Although the system automatically capitalizes the standard commands (Open, Print, Explore, and Find), you can use the value of the menu command name to format the capitalization differently. Similarly, you use the menu command name value to set the access key for the menu command following normal menu conventions, prefixing the character in the name with an ampersand (&amp;). Otherwise, the system sets the first letter of the command as the access key for that command.</P>
<P>To support user execution of a verb, provide the path for the application or a DDE command string. You can include command-line switches. For paths, include a %1 parameter. This parameter is an operational placeholder for whatever file the user selects.</P>
<P>For example, to register an Analyze command for an application that manages stock market information, the registry entries might look like the following.</P>
<P CLASS="syn"><B>HKEY_CLASSES_ROOT</B><BR>     <B>stockfile</B> = Stock Data<BR>         <B>shell</B> = analyze<BR>             <B>analyze</B> = &amp;Analyze<BR>                 <B>command</B> = C:\Program Files\Stock Analysis\Stock.exe /A</P>
<P>You may have different values for each command. You may assign one application to carry out the Open command and another to carry out the Print command, or use the same application for all commands.</P>
<P> </P></FONT>
	</BODY>

</HTML>
