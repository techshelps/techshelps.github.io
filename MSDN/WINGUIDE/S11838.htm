<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Mouse Selection</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H3>Mouse Selection</H3><P>  </P>
<P>Selection with the mouse relies on the basic actions of clicking and dragging. In general, clicking selects a single item or location, and dragging selects a single range consisting of all objects logically included from the button-down to the button-up location. If you also support dragging for object movement, use keyboard-modified mouse selection or region selection to support multiple selection.</P>
<H4><A NAME="PT2"></A>Basic Selection</H4>
<P>Support user selection using either mouse button. When the user presses the mouse button, establish the starting point, or <I>anchor point</I>, of a selection. If, while pressing the mouse button, the user drags the mouse, extend the selection to the object nearest the hot spot of the pointer. If, while continuing to hold the mouse button down, the user drags the mouse within the selection, reduce the selection to the object now nearest the pointer. Tracking the selection with the pointer while the mouse button continues to be held down allows the user to adjust a range selection dynamically. Use appropriate selection feedback to indicate the objects included in the selection.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information aboutthe appearance of selection feedback, see Chapter 13, "Visual Design."</P>
<P>  </P>
<P>The release of the mouse button ends the selection operation and establishes the <I>active end</I> of the selection. If the user presses mouse button 2 to make a selection, display the contextual pop-up menu for the selected objects when the user releases the mouse button.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about pop-up menus, see Chapter 7, "Menus, Controls, and Toolbars."</P>
<P>  </P>
<P>The most common form of selection optimizes for the selection of a single object or a single range of objects. In such a case, creating a new selection within the scope of an existing selection (for example, within the same area of the window) cancels the selection of the previously selected objects. This allows simple selections to be created quickly and easily.</P>
<P>When using this technique, reset the selection when the user presses the mouse button and the pointer (hot spot) is outside (not on) any existing selection. If the pointer is over a selected item, however, don't cancel the former selection. Instead, determine the appropriate result according to whether the user pressed mouse button 1 or 2.</P>
<P>If the user presses mouse button 1 and the pointer does not move from the button down point, the effect of the release of the mouse button is determined by the context of the selection. You can support whichever of the following best fits the nature of the user's task:</P>
<UL><LI>The result may have no effect on the existing selection. This is the most common and safest effect.</LI><LI>The object under the pointer may receive some special designation or distinction; for example, become the next anchor point or create a subselection.</LI><LI>The selection can be reset to be only the object under the pointer.</LI></UL><P>If the user pressed mouse button 2, the selection is not affected, but you display a pop-up menu for selection.</P>
<P>Although selection is typically done by positioning the pointer over an object, it may be inferred based on the logical proximity of an object to a pointer. For example, when selecting text, the user can place the pointer on the blank area beyond the end of the line and the resulting selection is inferred as being the end of the line.</P>
<H4><A NAME="PT3"></A>Selection Adjustment</H4>
<P>Selections are adjusted (elements added to or removed from the selection) using keyboard modifiers with the mouse. The CTRL key is the disjoint, or toggle, modifier. If the user presses the CTRL key while making a new selection, preserve any existing selection within that scope and reset the anchor point to the new mouse button-down location. Toggle the selection state of the object under the pointer — that is, if it is not selected, select it; if it is already selected, unselect it.</P>
<P>  </P>
<P><B>Note</B>   <img src="NOTE.gif"><BR>Disjoint selection techniques may not apply to all situations where you support selection.</P>
<P>  </P>
<P>If a selection modified by the CTRL key is made by dragging, the selection state is applied for all objects included by the drag operation (from the anchor point to the current pointer location). This means if the first item included during the drag operation is not selected, select all objects included in the range. If the first item included was already selected, unselect it and all the objects included in the range regardless of their original state. </P>
<P>For example, the user can make an initial selection by dragging.</P>
<P>    <img src="05_02.gif"></P>
<P>The user can then press the CTRL key and drag to create a disjoint selection, resetting the anchor point.</P>
<P>    <img src="05_03.gif"></P>
<P>The user must press the CTRL key before using the mouse button for a disjoint (toggle) selection. After a disjoint selection is initiated, it continues until the user releases the mouse button (even if the user releases the CTRL key before the mouse button).</P>
<P>The SHIFT key adjusts (or extends) a single selection or range selection. When the user presses the mouse button while holding down the SHIFT key, reset the active end of a selection from the anchor point to the location of the pointer. Continue tracking the pointer, resetting the active end as the user drags, similar to a simple range drag selection. When the user releases the mouse button, the selection operation ends. You should then set the active end to the object nearest to the mouse button release point. Do not reset the anchor point. It should remain at its current location.</P>
<P>Only the selection made from the current anchor point is adjusted. Any other disjoint selections are not affected unless the extent of the selection overlaps an existing disjoint selection.</P>
<P>The effect on the selection state of a particular object is based on the first item included in the selection range. If the first item is already selected, select (not toggle the selection state of) all objects included in the range; otherwise, unselect (not toggle the selection state of) the objects included.</P>
<P>The user must press and hold down the SHIFT key before pressing the mouse button for the action to be interpreted as adjusting the selection. When the user begins adjusting a selection by pressing the SHIFT key, continue to track the pointer and adjust the selection (even if the user releases the modifier key) until the user releases the mouse button.</P>
<P>Pressing the SHIFT modifier key always adjusts the selection from the current anchor point. This means the user can always adjust the selection range of a single selection or CTRL key–modified disjoint selection. For example, the user can make a range selection by dragging.</P>
<P>    <img src="05_04.gif"></P>
<P>The same result can be accomplished by making an initial selection.</P>
<P>    <img src="05_05.gif"></P>
<P>The user can adjust the selection with the SHIFT key and dragging.</P>
<P>    <img src="05_06.gif"></P>
<P>The following sequence illustrates how the user can use the SHIFT key and dragging to adjust a disjoint selection. The user makes the initial selection by dragging.</P>
<P>    <img src="05_07.gif"></P>
<P>The user presses the CTRL key and drags to create a disjoint selection.</P>
<P>    <img src="05_08.gif"></P>
<P>The user can then extend the disjoint selection using the SHIFT key and dragging. This adjusts the selection from the anchor point to the button down point and tracks the pointer to the button up point.</P>
<P>    <img src="05_09.gif"></P>
<P>Figure 5.2 shows how these same techniques can be applied within a spreadsheet.</P>
<P>    <img src="05_40.gif"></P>
<P><B>Figure 5.2 Selection within a spreadsheet</B></P>
<P>The following summarizes the mouse selection operations.</P>
<P>  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="184pt" VALIGN="TOP"><COL WIDTH="184pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P><B>Operation</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P><B>Mouse action</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Select object (range of objects)</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Click (drag)</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Disjoint selection state of noncontiguous </P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>CTRL+click (drag)object (range of objects)</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Adjust current selection to object </P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>SHIFT+click (drag)(or range of objects)</P></FONT></TD></TR></TBODY></TABLE>
<P><BR></P><P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about the mouse interface, including selection behavior, see Appendix A, "Mouse Interface Summary."</P>
<P>  </P>
<H4><A NAME="PT4"></A>Region Selection</H4>
<P>In Z-ordered, or layered, contexts, in which objects may overlap, user selection can begin on the background (sometimes referred to as <I>white space</I>). To determine the range of the selection in such cases, a bounding outline (sometimes referred to as a marquee) is drawn. The outline is typically a rectangle, but other shapes (including freeform outline) are possible.</P>
<P>When the user presses the mouse button and moves the pointer (a form of selection by dragging), display the bounding outline, as shown in Figure 5.3. You set the selection state of objects included by the outline using the selection guidelines described in the previous sections, including operations that use the SHIFT and CTRL modifier keys.</P>
<P>    <img src="05_41.gif"></P>
<P><B>Figure 5.3 Region selection</B></P>
<P>You can use the context of your application and the user's task to determine whether an object must be totally enclosed or only intersected by the bounding region to be affected by the selection operation. Always provide good selection feedback during the operation to communicate to the user which method you support. When the user releases the mouse button, remove the bounding region, but retain the selection feedback.</P>
<P> </P></FONT>
	</BODY>

</HTML>
