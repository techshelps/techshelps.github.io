<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transferring Objects</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>Transferring Objects</H2><P>  </P>
<P>Transferring objects into a document follows basic command and direct manipulation interaction methods. The following sections provide additional guidelines for these commands when you use them to create OLE embedded or linked objects.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about command transfer and direct manipulation transfer methods, see Chapter 5, "General Interaction Techniques."</P>
<P>  </P>
<H4><A NAME="PT2"></A>The Paste Command</H4>
<P>As a general rule, using the Paste command should result in the most complete representation of a transferred object; that is, the object is embedded. However, containers that directly handle the transferred object can accept it optionally as native data instead of embedding it as a separate object, or as a partial or transformed form of the object if that is more appropriate for the destination container.</P>
<P>Use the format of the Paste command to indicate to the user how a transferred object is incorporated by a container. When the user copies a file object, if the container can embed the object, include the object's filename as a suffix to the Paste command. If the object is only a portion of a file, use the short type name — for example, Paste Worksheet or Paste Recording — as shown in Figure 11.2. A short type name can be derived from information stored in the registry. A Paste command with no name implies that the data will be pasted as native information.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about type names and the system registry, see Chapter 10, "Integrating with the System," and the OLE documentation included in the Microsoft Win32 Software Development Kit (SDK).</P>
<P>  </P>
<P>    <img src="11_02.gif"></P>
<P><B>Figure 11.2 The Paste command with short type name</B></P>
<H4><A NAME="PT3"></A>The Paste Special Command</H4>
<P>Supply the Paste Special command to give the user explicit control over pasting in the data as native information, an OLE embedded object, or an OLE linked object. The Paste Special command displays its associated dialog box, as shown in Figure 11.3. This dialog box includes a list box with the possible formats that the data can assume in the destination container.</P>
<P>    <img src="11_03.gif"></P>
<P><B>Figure 11.3 The Paste Special dialog box</B></P>
<P>  </P>
<P><B>Note</B>   <img src="NOTE.gif"><BR>The Win32 SDK includes the Paste Special dialog box and other OLE-related dialog boxes that are described in this chapter.</P>
<P>  </P>
<P>In the formats listed in the Paste Special dialog box, include the object's full type name first, followed by other appropriate native data forms. When a linked object has been cut or copied, precede its object type by the word "Linked" in the format list. For example, if the user copies a linked Microsoft Excel worksheet, the Paste Special dialog box shows "Linked Microsoft Excel Worksheet" in the list of format options because it inserts an exact duplicate of the original linked worksheet. Native data formats begin with the destination application's name and can be expressed in the same terms the destination identifies in its own menus. The initially selected format in the list corresponds to the format that the Paste command uses. For example, if the Paste command is displayed as Paste <I>Object Filename</I> or Paste <I>Short Type Name</I> because the data to be embedded is a file or portion of a file, this is the format that is initially selected in the Paste Special list box.</P>
<P>To support creation of a linked object, the Paste Special dialog box includes a Paste Link option. Figure 11.4 shows this option.</P>
<P>    <img src="11_04.gif"></P>
<P><B>Figure 11.4 Paste Special dialog box with Paste Link option set</B></P>
<P>A Display As Icon check box allows the user to choose displaying the OLE embedded or linked object as an icon. At the bottom of the dialog box is a section that includes text and pictures that describe the result of the operation. Table 11.1 lists the descriptive text for use in the Paste Special dialog box.</P>
<P><B>Table 11.1 Descriptive Text for Paste Special Command</B></P>
<P>  </P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="184pt" VALIGN="TOP"><COL WIDTH="184pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P><B>Function</B></P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P><B>Resulting text</B></P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as an OLE embedded object.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts the contents of the Clipboard into your document so you that you may activate it using <I>CompanyName</I> <I>ApplicationName</I>."</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as an OLE embedded object so that it appears as an icon.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts the contents of the Clipboard into your document so you that you may activate it using <I>CompanyName ApplicationName</I> application. It will be displayed as an icon."</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as native data.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts the contents of the Clipboard into your document as <I>Native Type Name</I>.<I> </I>[<I>Optional additional Help sentence</I>.]"</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as an OLE linked object.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts a picture of the contents of the Clipboard into your document. Paste Link creates a link to the source file so that changes to the source file will be reflected in your document."</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as an OLE linked object so that it appears as a shortcut icon.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts a Shortcut icon into your document which represents the contents of the Clipboard. A link is created to the source file so that changes to the source file will be reflected in your document."</P></FONT></TD></TR><TR><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>Paste as linked native data.</P></FONT></TD><TD VALIGN="TOP">
	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<P>"Inserts the contents of the Clipboard into your document as <I>Native Type Name</I>. A link is created to the source file so that changes to the source file will be reflected in your document."</P></FONT></TD></TR></TBODY></TABLE>
<P><BR></P><H4><A NAME="PT4"></A>The Paste Link, Paste Shortcut, and Create Shortcut Commands</H4>
<P>If linking is a common function in your application, you can optionally include a command that optimizes this process. Use a Paste Link command to support creating a linked object or linked native data. When using the command to create a linked object, include the name of the object preceded by the word "to" — for example, "Paste Link to Latest Sales." Omitting the name implies that the operation results in linked native data.</P>
<P>Use a Paste Shortcut command to support creation of a linked object that appears as a shortcut icon. You can also include a Create Shortcut command that creates a shortcut icon in the container. Apply these commands to containers where icons are commonly used.</P>
<H4><A NAME="PT5"></A>Direct Manipulation</H4>
<P>You should also support direct manipulation interaction techniques, such as drag and drop, for creating OLE embedded or linked objects. When the user drags a selection into a container, the container application interprets the operation using information supplied by the source, such as the selection's type and format, and by the destination container's own context, such as the container's type and its default transfer operation. For example, dragging a spreadsheet cell selection into a word-processing document can result in an OLE embedded table object. Dragging the same cell selection within the spreadsheet, however, would likely result in simply transferring the data in the cells. Similarly, the destination container in which the user drops the selection can also determine whether the dragging operation results in an OLE linked object.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about using direct manipulation for moving, copying, and linking objects, see Chapter 5, "General Interaction Techniques."</P>
<P>  </P>
<P>For nondefault OLE drag and drop, the container application displays a pop-up menu with appropriate transfer commands at the end of the drag. The choices may include multiple commands that transfer the data in a different format or presentation. For example, as shown in Figure 11.5, a container application could offer the following choices for creating links: Link Here, Link <I>Short Type Name</I> Here, and Create Shortcut Here, respectively resulting in a native data link, an OLE linked object displayed as content, and an OLE linked object displayed as an icon. The choices depends on what the container can support.</P>
<P>    <img src="11_45.gif"></P>
<P><B>Figure 11.5 Containers can offer different OLE link options</B></P>
<P>The default appearance of a transferred object also depends on the destination container application. For most types of documents, make the default command one that results in the data or content presentation of the object (or in the case of an OLE linked object, a representation of the content), rather than as an icon. If the user chooses Create Shortcut Here as the transfer operation, display the transferred object as an icon. If the object cannot be displayed as content — for example, because it does not support OLE — always display the object as an icon.</P>
<H4><A NAME="PT6"></A>Transfer of Data to Desktop</H4>
<P>The system allows the user to transfer data selection within a file to the desktop or folders providing that the application supports the OLE transfer protocol. For move or copy operations — using the Cut, Copy, and Paste commands or direct manipulation — the transfer operation results in a file icon called a <I>scrap</I>. A link operation also results in a shortcut icon that represents a shortcut into a document.</P>
<P>When the user transfers a scrap into a container supported by your application, integrate it as if it were being transferred from its original source. For example, if the user transfers a selected range of cells from a spreadsheet to the desktop, it becomes a scrap. If the user transfers the resulting scrap into a word-processing document, the document should incorporate the scrap as if the cells were transferred directly from the spreadsheet. Similarly, if the user transfers the scrap back into the spreadsheet, the spreadsheet should integrate the cells as if they had been transferred within that spreadsheet. (Typically, internal transfers of native data within a container result in repositioning the data rather than transforming it.)</P>
<P> </P></FONT>
	</BODY>

</HTML>
