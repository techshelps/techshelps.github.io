<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handles</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H3>Handles</H3><P>  </P>
<P>Objects may include special control points, called <I>handles</I>. You can use handles to facilitate certain types of operations, such as moving, sizing, scaling, cropping, shaping, or auto-filling. The type of handle you use depends on the type of object. For example, the title bar acts as a "move handle" for windows. The borders of the window act as "sizing handles." For icons, the selected icon acts as its own "move handle." In pen-enabled controls, special handles may appear for selection and access to the operations available for an object.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about pen handles, see "Pen-Specific Editing Techniques" later in this chapter.</P>
<P>  </P>
<P>A common form of handle is a square box placed at the edge of an object, as shown in Figure 5.6.</P>
<P>    <img src="05_12.gif"></P>
<P><B>Figure 5.6 A graphic object with handles</B></P>
<P>When the handle's interior is solid, the handle implies that it can perform a certain operation, such as sizing, cropping, or scaling. If the handle is "hollow," the handle does not currently support an operation. You can use such an appearance to indicate selection even when an operation is not available.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about the design of handles, see Chapter 13, "Visual Design."</P>
<P>  </P>
<P> </P></FONT>
	</BODY>

</HTML>
