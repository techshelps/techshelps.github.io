<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Properties Command</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>The Properties Command</H2><P>  </P>
<P>Design OLE containers to include a Properties command and property sheets for any OLE objects it contains. If the container application already includes a Properties command for its own native data, you can also use it to support selected OLE embedded or linked objects. Otherwise, add the command to the drop-down and pop-up menu you provide for accessing the other commands for the object, preceded by a menu separator, as shown in Figure 11.29.</P>
<P>    <img src="11_27.gif"></P>
<P><B>Figure 11.29 The Properties command</B></P>
<P>When the user chooses the Properties command, the container displays a property sheet containing all the salient properties and values, organized by category, for the selected object. Figure 11.30 shows examples property sheet pages for an OLE object.</P>
<P>    <img src="11_28.gif"></P>
<P><B>Figure 11.30 OLE embedded object property sheet</B></P>
<P>Follow the format the system uses for property sheets and the conventions outlined in this guide. Use the short type name in the title bar; for an OLE linked object, precede the name with the word "Linked," as in "Linked Worksheet." Include a General property page displaying the icon, name, type, size, and location of the object. Also include a Convert command button to provide access to the type conversion dialog box. On a View page, display properties associated with the view and presentation of the OLE object within the container. These include scaling or position properties and whether to display the object in its content presentation or as an icon. The Display As Icon field includes a Change Icon command button that allows the user to customize the icon presentation of the object. The Change Icon dialog box is shown in Figure 11.31.</P>
<P>    <img src="11_46.gif"></P>
<P><B>Figure 11.31 The Change Icon dialog box</B></P>
<P>For OLE linked objects, also include a Link page in its property sheet containing the essential link parameters and commands, as shown in <BR>Figure 11.32.</P>
<P>    <img src="11_47.gif"></P>
<P><B>Figure 11.32 The Link page for the property sheet of an OLE linked object</B></P>
<P>For the typical OLE link, include the source name, the Update setting (automatic or manual), the Last Update timestamp, and command buttons that provide the following link operations:</P>
<UL><LI>Break Link effectively disconnects the selected link.</LI><LI>Update Now forces the selected link to connect to its sources and retrieve the latest information.</LI><LI>Open Source opens the link source for the selected link.</LI><LI>Change Source invokes a dialog box similar to the common Open dialog box to allow the user to respecify the link source.</LI></UL><P> </P></FONT>
	</BODY>

</HTML>
