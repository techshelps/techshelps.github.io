<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Icon Design</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>Icon Design</H2><P>  </P>
<P>Icons are used throughout the Windows interface to represent objects or tasks. Because the system uses icons to represent your software's objects, it is important to not only supply effective icons, but to design them to effectively communicate their purpose.</P>
<P>When designing icons, design them as a set, considering their relationship to each other and to the user's tasks. Do several sketches or designs and test them for usability.</P>
<H4><A NAME="PT2"></A>Sizes and Types</H4>
<P>Supply icons for your application in all standard sizes: 16 x 16 pixel (16 color), 32 x 32 pixel (16 color), and 48 x 48 pixel (256 color), as shown in Figure 13.25. Although you can also include greater color depth for the smaller sizes, it increases the storage requirements for the icons and may not be displayable on all computer configurations. Therefore, if you choose to provide 256 color icons in the smaller sizes, do so in addition to providing the standard (16 color) format.</P>
<P>  </P>
<P><B>Note</B>   <img src="NOTE.gif"><BR>To display icons at 48-x48-pixel resolution, the registry value Shell Icon Size, must be increased to 48. To display icons in color resolution depth higher than 16 colors, the registry value Shell Icon BPP must be set to 8 or more. These values are stored in <B>HKEY_<BR>CURRENT_USER\<BR>Desktop\Window-Metrics</B>.</P>
<P>  </P>
<P><img src="13_26.gif"></P>
<P><B>Figure 13.25 Three sizes of icons</B></P>
<P>The system automatically maps colors in your icon design for monochrome configurations. However, you should check your icon design in monochrome configuration. If the result is not satisfactory, author and supply monochrome icons as well.</P>
<P>Define icons not only for your application executable file, but also for all data file types supported by your application, as shown in Figure 13.26.</P>
<P><img src="13_27.gif"></P>
<P><B>Figure 13.26 Application and supported document icons</B></P>
<P>Icons for documents and data files should be distinct from the application's icon. Include some common element of the application's icon, but focus on making the document icon recognizable and representative of the file's content.</P>
<P>Register the icons you supply in the system registry. If your software does not register any icons, the system automatically provides one based on your application's icon, as shown in Figure 13.27. However, it is unlikely to be as detailed or distinctive as one you can supply.</P>
<P>  </P>
<P><B>Note</B>   <img src="XREF.gif"><BR>For more information about registering your icons, see Chapter 10, "Integrating with the System."</P>
<P>  </P>
<P><img src="13_28.gif"></P>
<P><B>Figure 13.27 System-generated icon for file type without a registered icon</B></P>
<H4><A NAME="PT3"></A>Icon Style</H4>
<P>When designing your icons, use a common style across all icons. Repeat common characteristics, but avoid repeating unrelated elements.</P>
<P>  </P>
<P><B>Note</B>   <img src="NOTE.gif"><BR>Previous to Microsoft Windows 95, black outlines were recommended for icon design. This style recommendation has been dropped.</P>
<P>  </P>
<P>An illustrative style tends to communicate metaphorical concepts more effectively than abstract symbols. However, in designing an image based on a real-world object, use only the amount of detail that is really necessary for user recognition and recall. Where possible and appropriate, use perspective and dimension (lighting and shadow) to better communicate the real-world representation, as shown in Figure 13.28.</P>
<P><img src="13_25.gif"></P>
<P><B>Figure 13.28 Perspective and dimension improve graphics</B></P>
<P>User recognition and recollection are two important factors to consider in icon design. Recognition means that the icon is identifiable by the user and easily associated with a particular object. Support user recognition by using effective metaphors. Use real-world objects to represent abstract ideas so that the user can draw from previous learning and experiences. Exploit the user's knowledge of the world and allude to the familiar.</P>
<P>To facilitate recollection, design your icons to be simple and distinct. Applying the icon consistently also helps build recollection; therefore, design your small icons to be as similar as possible to their larger counterparts. It is generally best to try to preserve general shape and any distinctive detail. 48 x 48-pixel icons can be rendered in 256 colors. This allows very realistic-looking icons, but focus on simplicity and careful use of color. If your software is targeted at computers that can only display 256 colors, make certain you only use colors from the system's standard 256-color palette. If you aim at computers configured for 65,000 or more colors, you can use any combination of colors.</P>
<P> </P></FONT>
	</BODY>

</HTML>
