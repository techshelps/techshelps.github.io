<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pen-Specific Controls</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>Pen-Specific Controls</H2><P>  </P>
<P>When the user installs a pen input device, single line text boxes and combo boxes automatically display a writing tool button described in Chapter 5, "General Interaction Techniques." In addition, the system provides special controls for supporting pen input.</P>
<H4><A NAME="PT2"></A>Boxed Edit Controls</H4>
<P>A <I>boxed edit</I> control provides the user with a discrete area for entering characters. It looks and operates similarly to a writing tool window without some of the writing tool window's buttons, as shown in Figure 7.30.</P>
<P>    <img src="07_37.gif"></P>
<P><B>Figure 7.30 A single line boxed edit control</B></P>
<P>Both single and multiple line boxed edit controls are supported. Figure 7.31 shows a multiple line boxed edit control.</P>
<P>    <img src="07_38.gif"></P>
<P><B>Figure 7.31 A multiple line boxed edit control</B></P>
<P>Like the writing tool window, these controls provide a pen selection handle for selection of text and an action handle for operations on a selection. They also provide easy correction by overwriting and selecting alternative choices.</P>
<H4><A NAME="PT3"></A>Ink Edit Controls</H4>
<P>The <I>ink edit</I> is a pen control in which the user can create and edit lines drawn as ink; no recognition occurs here. It is a drawing area designed for ink input, as shown in Figure 7.32.</P>
<P>    <img src="07_39.gif"></P>
<P><B>Figure 7.32 An ink edit control</B></P>
<P>The control provides support for an optional grid, optional scroll bars, and optional display of a frame border. Selection is supported using tapping to select a particular stroke; lasso-tapping is also supported for selecting single or multiple strokes. After the user makes a selection, an action handle is displayed. Tapping on the action handle displays a pop-up menu that includes commands for Undo, Cut, Copy, Paste, Delete, Use Eraser, Resize, What's This?, and Properties. Choosing the Properties command displays a property sheet associated with the selection — this allows the user to change the stroke width and color.</P>
<P>If you use an ink edit control, you may also want to include some controls for special functions. For example, a good addition is an Eraser button, as shown in Figure 7.33.</P>
<P>    <img src="07_40.gif"></P>
<P><B>Figure 7.33 The eraser toolbar button</B></P>
<P>Implement the Eraser button to operate as a "spring-loaded" mode; that is, choosing the button causes the pen to act as an eraser while the user presses the pen to the screen. As soon as it is lifted, the pen reverts to its drawing mode.</P>
<P> </P></FONT>
	</BODY>

</HTML>
