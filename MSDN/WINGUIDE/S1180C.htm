<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What's New</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY bgcolor="#FFFFFF" >

	<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

<H2>What's New</H2><P>  </P>
<P>Continuing the direction set by Microsoft OLE, the enhancements in the Windows user interface provide a design evolution from the basic and graphical to the more object oriented — that is, from an application-centered interface to a more data-centered one. In response, developers and designers may need to rethink the interface of their software — the basic components and the respective operations and properties that apply to them. This is important because, from a user's perspective, applications have become less the primary focus and more the engines behind the objects in the interface. Users can now interact with data without having to think about applications, allowing them to better concentrate on their tasks. </P>
<P>When adapting your existing Windows-based software, make certain you consider the following important design aspects: </P>
<UL><LI>Title bar text and icons</LI><LI>Property sheets</LI><LI>Transfer model (including drag and drop)</LI><LI>Pop-up menus</LI><LI>New controls </LI><LI>Integration with the system</LI><LI>Help interface</LI><LI>OLE embedding and OLE linking</LI><LI>Visual design of windows, controls, and icons</LI><LI>Window management</LI><LI>Presentation of minimized windows</LI></UL><P>These elements are covered in depth throughout this guide. </P>
<P> </P></FONT>
	</BODY>

</HTML>
