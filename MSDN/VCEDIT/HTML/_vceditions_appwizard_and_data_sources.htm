<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AppWizard and Data Sources</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_vceditions_appwizard_and_data_sources"></a>AppWizard and Data Sources</h1>
<p>
You can use AppWizard to build a client and to connect to a data source. The second step of MFC AppWizard (exe) allows you to create an application that uses either an ODBC, DAO, or OLE DB data source. The generated code wraps ODBC syntax in MFC C++ classes. If you choose to use to do this, you can refer to the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_core_Databases_Samples">
</object><a href=JavaScript:alink_1.Click()>Databases Samples</a> tutorials to help you with your development process. </p>
<p>
The Help system provides information on using MFC to generate applications that use ODBC, DAO, or OLE DB data sources. To get started, simply pull down the Help menu, choose the <b>Search</b> command, and type in "ODBC" or "DAO."</p>
<p class=indent>
<B><b>Warning</b></B>&nbsp;&nbsp;&nbsp;You cannot use Data View to work with data sources that you specify in AppWizard. Data View works directly with SQL. You can use Data View if you use AppWizard to generate a project and then use the <b>Add Data Source</b> command from the <b>Insert</b> menu to connect to a data source.</p>
<h2>AppWizard, OLE, ActiveX, and COM</h2>
<p>
You can use AppWizard to add MFC-based versions of OLE or ActiveX technologies to your project. You can specify that your application be an OLE server, an OLE container, or both. You can also specify that your application support OLE activation and/or ActiveX controls.</p>
<p>
In addition, AppWizard can generate an .exe or a .dll project from which&nbsp; you can create a COM object using an MFC <b>CCmdTarget</b> class. Read <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_MFCNOTES_TN038">
</object><a href=JavaScript:alink_2.Click()>TN038: MFC/OLE IUnknown Implementation</a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_msdn_mfccom">
</object><a href=JavaScript:alink_3.Click()>Tom’s Handy Dandy MFC/COM/MIDL Recipe Book for Creating Custom Interfaces</a> in the Microsoft Developer Network Library (MSDN).</p>
<p>
Use the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_atl_Using_the_ATL_COM_AppWizard">
</object><a href=JavaScript:alink_4.Click()>ATL COM AppWizard</a>to create a Visual C++ ATL project from which you can create an ActiveX control. For more information on the ATL COM Wizard, see <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_vc_atl_home">
</object><a href=JavaScript:alink_5.Click()>Active Template Library (ATL) Reference</a>.</p>
</font></BODY>
</HTML>
