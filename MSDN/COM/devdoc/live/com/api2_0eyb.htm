<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MoveFileWithProgress</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_movefilewithprogress"></a>MoveFileWithProgress</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Enables applications to move files and update link tracking information.</p>
<pre><code><b>BOOL MoveFileWithProgress(
  LPCTSTR</b><i> lpExistingFileName</i><b>,             </b>//Move source filename
<b>  LPCTSTR</b><i> lpNewFileName</i><b>,                  </b>//Move destination filename
<b>  LPPROGRESS_ROUTINE</b><i> lpProgressRoutine</i><b>,   </b>//Progress routine
<b>  LPVOID</b><i> lpData</i><b>,                          </b>//Parameters for progress routine
<b>  DWORD</b><i> dwFlags</i><b>                           </b>//Flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpExistingFileName</i></dt>
<dd>
Address of a null-terminated string containing the name of the file that is the source of the move.</dd>
<dt>
<i>lpNewFileName</i></dt>
<dd>
Address of a null-terminated string containing the name of the file that is the destination of the move.
<p>
When moving a file, the destination can be on a different file system or drive. If the destination is on another drive, you must set the MOVEFILE_COPY_ALLOWED flag in <i>dwFlags</i>.

<p>
When moving a directory, the destination must be on the same drive.

<p>
If <i>dwFlags</i> specifies MOVEFILE_DELAY_UNTIL_REBOOT, <i>lpNewFileName</i> can be NULL. In this case, this function registers the <i>lpExistingFileName</i> file to be deleted when the system reboots.
</dd>
<dt>
<i>lpProgressRoutine</i></dt>
<dd>
Specifies the address of a callback function of type LPPROGRESS_ROUTINE that is called each time another portion of the file has been copied. This parameter can be NULL. For more information on the progress callback function, see <b>CopyProgressRoutine</b>.
<p>
Address of a callback function that is called each time another portion of the file has been moved. This parameter can be NULL. For more information on the progress callback function, see <b>CopyProgressRoutine</b>.
</dd>
<dt>
<i>lpData</i></dt>
<dd>
Address of parameters for the progress routine. This parameter can be NULL.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
A set of bit flags that specify how to move the file. You can specify any combination of the following values:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Flag</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_REPLACE_EXISTING</td>
<td width=55%>If a file of the name specified by <i>lpNewFileName</i> already exists, the function replaces its contents with those specified by <i>lpExistingFileName</i>.</td>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_COPY_ALLOWED</td>
<td width=55%>If the file is to be moved to a different volume, the function simulates the move by using the <b>CopyFile</b> and <b>DeleteFile</b> functions. Cannot be combined with the MOVEFILE_DELAY_UNTIL_REBOOT flag.</td>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_DELAY_UNTIL_REBOOT</td>
<td width=55%>The function does not move the file until the operating system is restarted. The system moves the file immediately after AUTOCHK is executed, but before creating any paging files. Consequently, this parameter enables the function to delete paging files from previous startups.<p>
This flag can only be used if the process is in the context of a user who belongs to the administrator group or the LocalSystem account. </p>
</td>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_WRITE_THROUGH</td>
<td width=55%>The function does not return until the file has actually been moved on the disk.<p>
Setting this flag guarantees that a move performed as a copy and delete operation is flushed to the disk before the function returns. The flush occurs at the end of the copy operation. </p>
<p>
This flag has no effect if the MOVEFILE_DELAY_UNTIL_REBOOT flag is set. </p>
</td>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_CREATE_HARDLINK</td>
<td width=55%>TBD</td>
</tr>
<tr valign=top>
<td width=45%>MOVEFILE_FAIL_IF_NOT_TRACKABLE</td>
<td width=55%>TBD</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Value</h4>
<p>
If the function succeeds, the return value is TRUE. The source file must have been opened for write access for this call to succeed. </p>
<p>
If the function fails, the return value is FALSE. To get extended error information, call <b>GetLastError</b>. </p>
<h4>Remarks</h4>
<p>
The <b>MoveFileWithProgress</b> function is equivalent to the <b>MoveFileEx</b> function, except that it takes an <i>lpProgressRoutine</i> parameter. This parameter is used exactly like its counterpart in the <b>CopyFileEx</b> function – it provides the caller an opportunity to monitor and control the progress of a move operation. The additional value of this function is that it coordinates with the link tracking service so that moved link sources can be tracked.</p>
<p>
<b>MoveFileWithProgress</b> provides a superset of the capabilities of the <b>MoveFile</b> and <b>MoveFileEx</b> functions. All three of these functions coordinate with the link tracking service, so that link sources may be tracked as they are moved.</p>
<p>
This function is supported only on Windows NT 5.0.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use kernel32.lib.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_8kpx.htm"><b>ITrackFile</b></a> </p>
<p>
</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
