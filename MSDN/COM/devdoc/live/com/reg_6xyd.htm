<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DllSurrogate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_dllsurrogate"></a>DllSurrogate</h2>
<p>
Enables DLL servers to run in a surrogate process. If an empty string is specified, the system-supplied surrogate is used, otherwise the value specifies the path of the surrogate to be used. </p>
<h4>Registry Entry</h4>
<p>
<b>HKEY_LOCAL_MACHINE\SOFTWARE\Classes</b>\<b>APPID\<br>
</b>                                    <b>{</b><i>AppID_value</i><b>}\DllSurrogate = </b><i>surrogate_path</i></p>
<p>
<b>Note</b>&nbsp;&nbsp;<b>HKEY_CLASSES_ROOT </b>is equivalent to  <b>HKEY_LOCAL MACHINE\SOFTWARE\Classes</b>. These keys can be used interchangeably. <b>HKEY_CLASSES_ROOT </b>also provides compatibility with Microsoft® Windows® 3.1 and Windows 95. </p>
<h4>Remarks</h4>
<p>
The <b>DllSurrogate</b> named value specifies that the class is a DLL that is to be activated in a surrogate EXE process, and the surrogate process to be used. The <i>surrogate_</i>path value is of type REG_SZ. To use the system-supplied generic surrogate process, set <i>surrogate_</i>path to an empty string or NULL. To specify another surrogate process, set <i>surrogate_</i>path to the path of the surrogate. As in the specification of the path of an EXE server under the <b>LocalServer32</b> key, a full path specification is not necessary. The surrogate EXE must be written to properly communicate with the DCOM service as described in <a href="comext_2dlx.htm">Writing a Custom Surrogate</a>.</p>
<p>
The DllSurrogate named value must be present for a DLL server to be activated in a surrogate.  Activation refers to a call to <b>CoGetClassObject</b>, <b>CoCreateInstance</b>[<b>Ex</b>], <b>CoGetInstanceFromFile</b>, <b>CoGetInstanceFromIStorage</b>, or <b>IMoniker::BindToObject</b>. DLL servers are easy to write using standard development tools like Microsoft® Visual Basic®, Microsoft® Visual J++™, and Microsoft Developer Studio™. Running DLLs in a surrogate process provides the benefits of an executable implementation, including fault isolation, the ability to serve multiple clients simultaneously, and allowing the server to provide services to remote clients in a distributed environment. </p>
<h4>See Also</h4>
<p>
<a href="reg_33y1.htm">AppID key</a>, <a href="if_r2z_7mn9.htm"><b>ISurrogate</b></a>, <a href="api1_4det.htm"><b>CoRegisterSurrogate</b></a>, <a href="comext_68j7.htm">DLL Surrogates</a>, <a href="comext_8w2t.htm">Using the System-Supplied Surrogate</a>, <a href="comext_3khf.htm">DLL Server Requirements</a>, <a href="comext_7fe6.htm">Registering the DLL Server for Surrogate Activation</a> </p>
<p>&nbsp;</p></body>
</HTML>
