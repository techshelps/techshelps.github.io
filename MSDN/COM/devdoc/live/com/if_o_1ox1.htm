<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleInPlaceObject::UIDeactivate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleinplaceobject_uideactivate"></a>IOleInPlaceObject::UIDeactivate</h2>
<p>
Deactivates and removes the user interface that supports in-place activation.</p>
<pre><b><code>HRESULT UIDeactivate();
 </code></b></pre>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The in-place UI was deactivated and removed.
</dd>
</dl>
<h5>Notes to Callers</h5>
<p>
This method is called by the object's immediate container when, for example, the user has clicked in the client area outside the object. </p>
<p>
If the container has called <b>IOleInPlaceObject::UIDeactivate</b>, it should later call <b>IOleInPlaceObject::InPlaceDeactivate</b> to properly clean up resources. The container can assume that stopping or releasing the object cleans up resources if necessary. The object must be prepared to do so if <b>IOleInPlaceObject::InPlaceDeactivate</b> has not been called. but either <b>IOleInPlaceObject::UIDeactivate</b> or <b>IOleObject::Close</b> has been called. </p>
<h5>Notes to Implementers</h5>
<p>
Resources such as menus and windows can be either cleaned up or kept in a hidden state until your object is completely deactivated by calls to either <b>IOleInPlaceObject::InPlaceDeactivate</b> or <b>IOleObject::Close</b>. The object application must call <b>IOleInPlaceSite::OnUIDeactivate</b> before doing anything with the composite menus so that the container can first be detached from the frame window. On deactivating the in-place object's user interface, the object is left in a ready state so it can be quickly reactivated. The object stays in this state until the undo state of the document changes. The container should then call <b>IOleInPlaceObject::InPlaceDeactivate</b> to tell the object to discard its undo state.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_2rfp.htm"><b>IOleInPlaceObject::InPlaceDeactivate</b></a>, <a href="if_o_9xt1.htm"><b>IOleInPlaceSite::OnUIDeactivate</b></a>, <a href="if_o_9ey7.htm"><b>IOleInPlaceObject::ReactivateAndUndo</b></a>, <a href="if_o_6izq.htm"><b>IOleObject::Close</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
