<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoSetCancelObject</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_cosetcancelobject"></a>CoSetCancelObject</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Sets (registers) or resets (unregisters) a cancel object for use during subsequent cancel operations on the current thread.</p>
<pre><code><b>HRESULT CoSetCancelObject(
</b>  <b>IUnknown *</b><i>pUnk</i>  //Cancel object to be set or reset
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pUnk</i></dt>
<dd>
Pointer to the <b>IUnknown</b> interface on the cancel object to be set or reset on the current thread. If NULL, the topmost cancel object is reset. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_FAIL, E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The cancel object was successfully set or reset.</dd>
<dt>
E_ACCESSDENIED</dt>
<dd>
The cancel object cannot be set or reset at this time because of a block on cancel operations.
</dd>
</dl>
<h4>Remarks</h4>
<p>
For objects that support standard marshaling, the proxy object begins marshaling a method call by calling <b>CoSetCancelObject</b> to register a cancel object for the current thread. </p>
<p>
<b>CoSetCancelObject</b> calls <b>QueryInterface</b> for <b>ICancelMethodCalls</b> on the cancel object. If the cancel object does not implement <b>ICancelMethodCalls</b>, <b>CoSetCancelObject</b> fails with E_NOINTERFACE. To disable cancel operations on a custom-marshaled interface, the implementation of <b>ICancelMethodCalls::Cancel</b> should do nothing but return E_NOTIMPL, E_FAIL, or some other appropriate value. </p>
<p>
Before returning control to the client, the proxy unregisters the cancel object by calling <b>CoSetCancelObject</b> again, passing NULL as the parameter. In this case, <b>CoSetCancelObject</b> unregisters the cancel object and sets the next object in the cancel stack as the topmost cancel object. It is important that <b>CoSetCancelObject</b> be called when a method is called and again when it returns so the stack of cancel objects corresponds to the calling stack on the thread.</p>
<p>
<b>CoSetCancelObject</b> calls <b>IUnknown::AddRef</b> on objects that it registers and <b>Release</b> on objects that it unregisters. </p>
<p>
<b>CoSetCancelObject</b> does not set or reset cancel objects for asynchronous methods.</p>
<p>
</p>
<p>
</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
