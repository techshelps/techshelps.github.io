<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Memory Allocations</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_debugging_memory_allocations"></a>Debugging Memory Allocations</h2>
<p>
COM provides an interface for developers to use to debug their memory allocations: the <a href="if_f2n_60e1.htm"><b>IMallocSpy</b></a> interface. For each method in <a href="if_f2n_5h5v.htm"><b>IMalloc</b></a>, there are two methods in <b>IMallocSpy</b>, a "pre" method and a "post" method. Once a developer implements it and publishes it to the system, the system calls the <b>IMallocSpy</b> "pre" method just before the corresponding <b>IMalloc</b> method, effectively allowing the debug code to "spy" on the allocation operation, and calling the "post" method to release the spy. </p>
<p>
For example, when COM detects that the next call is a call to <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>, it would call <a href="if_f2n_4ysj.htm"><b>IMallocSpy::PreAlloc</b></a>, executing whatever debug operations the developer wants during the <b>Alloc</b> execution, and then, when the <b>Alloc</b> call returns, call <a href="if_f2n_42eb.htm"><b>IMallocSpy::PostAlloc</b></a> to release the spy and return control to the code.</p>
<p>&nbsp;</p></body>
</HTML>
