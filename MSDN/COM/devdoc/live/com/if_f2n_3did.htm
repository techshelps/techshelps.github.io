<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMallocSpy::PreFree</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imallocspy_prefree"></a>IMallocSpy::PreFree</h2>
<p>
Called just before invoking <a href="if_f2n_1smd.htm"><b>IMalloc::Free</b></a> to ensure that the pointer passed to <b>IMalloc::Free</b> points to the beginning of the actual allocation.</p>
<pre><code><b>void * PreFree(
  void *</b><i> pRequest</i><b>,  </b>//Pointer is passing to IMalloc::Free
<b>  BOOL</b><i> fSpyed       </i>//TRUE if this memory was allocated while the 
                    //spy was active
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pRequest</i></dt>
<dd>
[in] Pointer to the block of memory that the caller is passing to <a href="if_f2n_1smd.htm"><b>IMalloc::Free</b></a>.</dd>
<dt>
<i>fSpyed</i></dt>
<dd>
[in] TRUE if the <i>pRequest</i> parameter of <b>IMallocSpy::PreFree</b> was allocated while the spy was installed. This value is also passed to <a href="if_f2n_9m05.htm"><b>IMallocSpy::PostFree</b></a>. 
</dd>
</dl>
<h4>Return Value</h4>
<p>
The actual pointer to pass to <a href="if_f2n_1smd.htm"><b>IMalloc::Free</b></a>. </p>
<h4>Remarks</h4>
<p>
If <b>IMallocSpy::PreAlloc</b> modified the original allocation request passed to <b>IMalloc::Alloc</b> (or <b>IMalloc::Realloc</b>), <b>IMallocSpy::PreFree</b> must supply a pointer to the actual allocation, which COM will pass to <b>IMalloc::Free</b>. For example, if the <b>PreAlloc</b>/<b>PostAlloc</b> pair attached a header used to store debug information to the beginning of the caller's allocation, <b>PreFree</b> must return a pointer to the beginning of this header, so all of the block that was allocated can be freed.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_1smd.htm"><b>IMalloc::Free</b></a>, <a href="if_f2n_9m05.htm"><b>IMallocSpy::PostFree</b></a>, <a href="api1_2r5l.htm"><b>CoRegisterMallocSpy</b></a>, <a href="api1_2ant.htm"><b>CoRevokeMallocSpy</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
