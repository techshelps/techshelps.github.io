<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFillLockBytes - Implementation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ifilllockbytes_implementation"></a>IFillLockBytes - Implementation</h1>
<p>
The system provides an <b>IFillLockBytes</b> implementation as part of its existing implementation of Compound Files. Downloading code can instantiate an asynchronous Compound File object by calling <a href="api4_9i5v.htm"><b>StgOpenAsyncDocFileOnIFillLockBytes</b></a> and can instantiate an asynchronous byte array wrapper object on an existing file or byte array by calling either the <a href="api4_4i91.htm"><b>StgGetIFillLockBytesOnFile</b></a> function or the <a href="api4_27qr.htm"><b>StgGetIFillLockBytesOnILockBytes</b></a> function.</p>
<h4>When to Use</h4>
<p>
Currently, URL monikers are the only users of COM's asynchronous storage implementation.</p>
<h4>Remarks</h4>
<dl>
<dt>
<b>FillAppend</b></dt>
<dd>
Writes a new block of bytes to the end of a byte array.</dd>
<dt>
<b>FillAt</b></dt>
<dd>
The system implementation does not support this method. Returns E_NOTIMPL.</dd>
<dt>
<b>SetFillSize</b></dt>
<dd>
Sets size of byte array. Returns E_FAIL from calls to <a href="if_f2n_9cfo.htm"><b>ILockBytes::ReadAt</b></a> that attempts to access data beyond the upper bound specified</dd>
<dt>
<b>Terminate</b></dt>
<dd>
Informs byte array that a download has been terminated, either successfully or unsuccessfully.</dd>
</dl>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
