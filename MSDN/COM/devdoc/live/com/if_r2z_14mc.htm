<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISequentialStream::Read</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_isequentialstream_read"></a>ISequentialStream::Read</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Reads a specified number of bytes from the stream object into memory starting at the current seek pointer.</p>
<pre><code><b>HRESULT Read(
  void *</b><i> pv</i><b>, </b>//Pointer to buffer into which the stream is read
<b>  ULONG</b><i> cb</i><b>,  </b>//Specifies the number of bytes to read
<b>  ULONG *</b><i> pcbRead</i>
<i>             </i>//Pointer to location that contains actual number of 
             // bytes read
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pv</i></dt>
<dd>
[out] Points to the buffer into which the stream data is read. If an error occurs, this value is NULL.</dd>
<dt>
<i>cb</i></dt>
<dd>
[in] Specifies the number of bytes of data to attempt to read from the stream object.</dd>
<dt>
<i>pcbRead</i></dt>
<dd>
[out] Address of a <b>ULONG</b> variable that receives the actual number of bytes read from the stream object. You can set this pointer to NULL to indicate that you are not interested in this value. In this case, this method does not provide the actual number of bytes read.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Data was successfully read from the stream object.</dd>
<dt>
S_FALSE</dt>
<dd>
The data could not be read from the stream object.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous storage only: Part or all of the data to be read is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and <a href="asyncstg_86cl.htm">Asynchronous Storage</a>. </dd>
<dt>
STG_E_ACCESSDENIED</dt>
<dd>
The caller does not have sufficient permissions for reading this stream object.</dd>
<dt>
STG_E_INVALIDPOINTER</dt>
<dd>
One of the pointer values is invalid.</dd>
<dt>
STG_E_REVERTED</dt>
<dd>
The object has been invalidated by a revert operation above it in the transaction tree.</dd>
</dl>
<h4>Remarks</h4>
<p>
This method reads bytes from this stream object into memory. The stream object must be opened in STGM_READ mode. This method adjusts the seek pointer by the actual number of bytes read.</p>
<p>
The number of bytes actually read is also returned in the <i>pcbRead</i> parameter.</p>
<h5>Notes to Callers</h5>
<p>
The actual number of bytes read can be fewer than the number of bytes requested if an error occurs or if the end of the stream is reached during the read operation.</p>
<p>
Some implementations might return an error if the end of the stream is reached during the read. You must be prepared to deal with the error return or S_OK return values on end of stream reads.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also </h4>
<p>
<a href="if_r2z_3yat.htm"><b>ISequentialStream::Write</b></a>, <a href="enums_5t2d.htm"><b>STGMOVE</b></a>, <a href="if_r2z_7x65.htm"><b>IStorage::OpenStream</b></a>, <a href="if_r2z_4x7x.htm"><b>IStream</b></a>, <a href="if_r2z_459q.htm"><b>IStream - Compound File Implementation</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
