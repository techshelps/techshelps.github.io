<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Property ID 0</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_property_id_0"></a>Property ID 0</h2>
<p>
To enable users of property sets to attach meaning to properties beyond those provided by the type indicator, property ID 0 is reserved for an optional dictionary of displayable names for the property set. </p>
<p>
The dictionary contains a count of entries in the list, followed by a list of dictionary entries.</p>
<pre><code>typedef struct tagDICTIONARY 
{ 
    DWORD  cEntries ;               // Count of entries in the list 
    ENTRY  rgEntry[ cEntries ] ;    // Property ID/String pair 
} DICTIONARY ; 
 </code></pre>
<p>
Each dictionary entry in the list is a Property Identifier/String pair. This can be illustrated using the following pseudo-structure definition for a dictionary entry (it's a pseudo-structure because the sz[] member is variable in size):</p>
<pre><code>typedef struct tagENTRY 
{ 
    DWORD  propid ; // Property ID 
    DWORD  cch ;       // Count of characters in the string 
    char  sz[cch];     // Zero-terminated string 
} ENTRY ; 
 </code></pre>
<p>
Note the following about property set dictionaries:
<ul>
<li>
Property ID 0 does not have a type indicator. The DWORD that indicates the count of entries sits in the type indicator position.</li>
<li>
The count of characters in the string (<i>cch</i>) includes the zero character that terminates the string. When the codepage of the property set is not Unicode, this field is actually a <i>byte</i> count.  This count may not exceed 256.</li>
<li>
The dictionary is entirely optional. Not all the names of properties in the set need appear in the dictionary. Conversely, not all names in the dictionary need to correspond to properties in the set. The dictionary should omit entries for properties assumed to be universally known by clients that manipulate the property set. Typically, names for the base property sets for widely accepted standards are omitted, but special purpose property sets may include dictionaries for use by browsers.</li>
<li>
Property names in the dictionary are stored in the code page indicated by Property ID 1 (see below). For ANSI code pages, each dictionary entry is byte-aligned. Thus, there is no padding between property names with Property ID 0. This is the only case where DWORD values (the property ID and property name length DWORDs) are not required to be aligned on 32-bit boundaries. For Unicode pages, each dictionary entry is 32-bit aligned.</li>
<li>
Property names that begin with the binary Unicode characters 0x0001 through 0x001F are reserved for future use.</li>
<li>
The property name associated with property ID 0 represents the name of the entire property set.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
