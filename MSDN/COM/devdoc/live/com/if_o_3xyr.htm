<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleObject::SetHostNames</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleobject_sethostnames"></a>IOleObject::SetHostNames</h2>
<p>
Provides an object with the name of its container application and the compound document in which it is embedded.</p>
<pre><code><b>HRESULT SetHostNames(
  LPCOLESTR</b><i> szContainerApp</i><b>,  </b>//Pointer to name of container 
                             // application
<b>  LPCOLESTR</b><i> szContainerObj  </i>//Pointer to name of container document
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>szContainerApp</i></dt>
<dd>
[in] Pointer to the name of the container application in which the object is running.</dd>
<dt>
<i>szContainerObj </i></dt>
<dd>
[in] Pointer to the name of the compound document that contains the object. If you do not wish to display the name of the compound document, you can set this parameter to NULL.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Window title information set successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
When a container initializes an embedded object, it calls this function to inform the object of the names of both the container application and container document. When the object is opened for editing, it displays these names in the title bar of its window.</p>
<h5>Notes to Callers</h5>
<p>
Call <b>SetHostNames</b> only for embedded objects, because for linked objects, the link source supplies its own separate editing window and title bar information.</p>
<h5>Notes to Implementers</h5>
<p>
An object's application of <b>SetHostNames</b> should include whatever modifications to its user interface may be appropriate to an object's embedded state. Such modifications typically will include adding and removing menu commands and altering the text displayed in the title bar of the editing window.</p>
<p>
The complete window title for an embedded object in an SDI container application or an MDI application with a maximized child window should appear as follows:</p>
<p>
&lt;<i>object application name</i>&gt; – &lt;<i>object short type</i>&gt; in &lt;<i>container document</i>&gt;</p>
<p>
Otherwise, the title should be:</p>
<p>
&lt;<i>object application name</i>&gt; – &lt;<i>container document</i>&gt;</p>
<p>
The "object short type" refers to a form of an object's name short enough to be displayed in full in a list box.</p>
<p>
Since these identifying strings are not stored as part of the persistent state of the object, <b>IOleObject::SetHostNames</b> must be called each time the object loads or runs.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
