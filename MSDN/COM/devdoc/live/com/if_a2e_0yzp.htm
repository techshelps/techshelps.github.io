<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDataObject::EnumDAdvise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_idataobject_enumdadvise"></a>IDataObject::EnumDAdvise</h2>
<p>
Creates an object that can be used to enumerate the current advisory connections.</p>
<pre><code><b>HRESULT EnumDAdvise(
  IEnumSTATDATA **</b><i> ppenumAdvise  </i>//Address of output variable that 
                                 // receives the IEnumSTATDATA 
                                 // interface pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppenumAdvise</i></dt>
<dd>
[out] Address of <b>IEnumSTATDATA</b>* pointer variable that receives the interface pointer to the new enumerator object. If the implementation sets *<i>ppenumAdvise</i> to NULL, there are no connections to advise sinks at this time.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The enumerator object is successfully instantiated or there are no connections.</dd>
<dt>
OLE_E_ADVISENOTSUPPORTED</dt>
<dd>
Advisory notifications are not supported by this object.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The enumerator object created by this method implements the <a href="if_a2e_0a8x.htm"><b>IEnumSTATDATA</b></a> interface, one of the standard enumerator interfaces that contain the <b>Next</b>, <b>Reset</b>, <b>Clone</b>, and <b>Skip</b> methods. <b>IEnumSTATDATA</b> permits the enumeration of the data stored in an array of <a href="structs_14dd.htm"><b>STATDATA</b></a> structures. Each of these structures provides information on a single advisory connection, and includes <a href="structs_14v7.htm"><b>FORMATETC</b></a> and <a href="enums_923q.htm"><b>ADVF</b></a> information, as well as the pointer to the advise sink and the token representing the connection.</p>
<h5>Notes to Callers</h5>
<p>
After getting a pointer through this method, the data object can call the appropriate enumeration methods. While the enumeration is in progress, the effect of adding more advisory connections on the subsequent enumeration is undefined.</p>
<h5>Notes to Implementers</h5>
<p>
It is recommended that you use the OLE data advise holder object to handle advisory connections. With the pointer obtained through a call to <b>CreateDataAdviseHolder</b>, implementing <b>IDataObject::EnumDAdvise</b> becomes a simple matter of delegating the call to <b>IDataAdviseHolder::EnumAdvise</b>. This creates the enumerator and supplies the pointer to the OLE implementation of <b>IEnumSTATDATA</b>. At that point, you can call its methods to enumerate the current advisory connections.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0a8x.htm"><b>IEnumSTATDATA</b></a>, <a href="if_a2e_76p1.htm"><b>IDataAdviseHolder::EnumAdvise</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
