<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DVTARGETDEVICE</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_dvtargetdevice"></a>DVTARGETDEVICE</h1>
<p>
Use the <b>DVTARGETDEVICE</b> structure to specify information about the target device for which data is being composed. <b>DVTARGETDEVICE</b> contains enough information about a Windows target device so a handle to a device context (hDC) can be created using the Windows <b>CreateDC</b> function. </p>
<pre><code>typedef struct tagDVTARGETDEVICE 
{ 
    DWORD tdSize; 
    WORD  tdDriverNameOffset; 
    WORD  tdDeviceNameOffset; 
    WORD  tdPortNameOffset; 
    WORD  tdExtDevmodeOffset; 
    BYTE  tdData[1]; 
}DVTARGETDEVICE;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>tdSize</b></dt>
<dd>
Size, in bytes, of the <b>DVTARGETDEVICE</b> structure. The initial size is included so the structure can be copied more easily.</dd>
<dt>
<b>tdDriverNameOffset</b></dt>
<dd>
Offset, in bytes, from the beginning of the structure to the device driver name, which is stored as a NULL-terminated string in the <b>tdData</b> buffer.</dd>
<dt>
<b>tdDeviceNameOffset</b></dt>
<dd>
Offset, in bytes, from the beginning of the structure to the device name, which is stored as a NULL-terminated string in the <b>tdData</b> buffer. This value can be zero to indicate no device name.</dd>
<dt>
<b>tdPortNameOffset</b></dt>
<dd>
Offset, in bytes, from the beginning of the structure to the port name, which is stored as a NULL-terminated string in the <b>tdData</b> buffer. This value can be zero to indicate no port name.</dd>
<dt>
<b>tdExtDevmodeOffset</b></dt>
<dd>
Offset, in bytes, from the beginning of the structure to the <b>DEVMODE</b> structure retrieved by calling <b>ExtDeviceMode</b>.</dd>
<dt>
<b>tdData</b></dt>
<dd>
Aray of bytes containing data for the target device. It is not necessary to include empty strings in <b>tdData</b> (for names where the offset value is zero).
</dd>
</dl>
<h4>Remarks</h4>
<p>
Some OLE 1 client applications incorrectly construct target devices by allocating too few bytes in the <b>DEVMODE</b> structure for the OLETARGETDEVICE. They typically only supply the number of bytes in the DEVMODE.<i>dmSize</i> member. The number of bytes to be allocated should be the sum of DEVMODE.<i>dmSize</i> + DEVMODE.<i>dmDriverExtra</i>. When a call is made to the <b>CreateDC</b> function with an incorrect target device, the printer driver tries to access the additional bytes and unpredictable results can occur. To protect against a crash and make the additional bytes available, OLE pads the size of OLE 2 target devices created from OLE 1 target devices.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winbase.h.</p>
<h4>See Also</h4>
<p>
<a href="structs_14v7.htm"><b>FORMATETC</b></a>, <a href="if_a2e_7kyr.htm"><b>IEnumFORMATETC</b></a>, <a href="if_r2z_0n1w.htm"><b>IViewObject</b></a>, <a href="api3_5xk5.htm"><b>OleConvertOLESTREAMToIStorage</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
