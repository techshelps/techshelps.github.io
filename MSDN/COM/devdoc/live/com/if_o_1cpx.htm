<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleObject::EnumAdvise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleobject_enumadvise"></a>IOleObject::EnumAdvise</h2>
<p>
Retrieves a pointer to an enumerator that can be used to enumerate the advisory connections registered for an object, so a container can know what to release prior to closing down.</p>
<pre><code><b>HRESULT EnumAdvise(
  IEnumSTATDATA</b><i> **ppenumAdvise  </i>//Address of output variable that 
                                // receives the IEnumSTATDATA interface 
                                // pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppenumAdvise</i></dt>
<dd>
[out] Address of <b>IEnumSTATDATA</b>* pointer variable that receives the interface pointer to the enumerator object. If the object does not have any advisory connectionsor if an error occurs, the implementation must set *<i>ppenumAdvise</i> to NULL. Each time an object receives a successful call to <b>EnumAdvise</b>, it must increase the reference count on *<i>ppenumAdvise</i>. It is the caller's responsibility to call <b>Release</b> when it is done with the *<i>ppenumAdvise</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_FAIL, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Enumerator returned successfully.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
<b>EnumAdvise</b> is not implemented.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>EnumAdvise</b> method supplies an enumerator that provides a way for containers to keep track of advisory connections registered for their objects. A container normally would call this function so that it can instruct an object to release each of its advisory connections prior to closing down.</p>
<p>
The enumerator to which you get access through <b>IOleObject::EnumAdvise</b> enumerates items of type <a href="structs_14dd.htm"><b>STATDATA</b></a>. Upon receiving the pointer, the container can then loop through <b>STATDATA</b> and call <b>IOleObject::Unadvise</b> for each enumerated connection.</p>
<p>
The usual way to implement this function is to delegate the call to the <b>IOleAdviseHolder</b> interface. Only the <i>pAdvise</i> and <i>dwConnection</i> members of <b>STATDATA</b> are relevant for <b>IOleObject::EnumAdvise</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_1gh1.htm"><b>IOleObject::Advise</b></a>, <a href="if_o_7vol.htm"><b>IOleObject::UnAdvise</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
