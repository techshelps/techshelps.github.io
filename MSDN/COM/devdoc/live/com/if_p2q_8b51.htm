<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPointerInactive::OnInactiveMouseMove</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ipointerinactive_oninactivemousemove"></a>IPointerInactive::OnInactiveMouseMove</h2>
<p>
Notifies the object that the mouse pointer has moved over it so the object can fire mouse events. This method is called by the container on receipt of a WM_MOUSEMOVE method when an inactive object is under the mouse pointer.</p>
<pre><code><b>HRESULT OnInactiveMouseMove(
  LPCRECT</b><i> pRectBounds</i><b>,  </b>//Object bounding rectangle
<b>  LONG</b><i> x</i><b>,               </b>//Horizontal coordinate
<b>  LONG</b><i> y</i><b>,               </b>//Vertical coordinate
<b>  DWORD</b><i> grfKeyState</i>     //
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pRectBounds</i></dt>
<dd>
[in] The object bounding rectangle, in client coordinates of the containing window. This parameter tells the object its exact position and size on the screen when the WM_MOUSEMOVE message was received. This value is specified in units of the client's coordinate system.</dd>
<dt>
<i>x</i></dt>
<dd>
[in] Horizontal coordinate of mouse location in units of the client's containing window.</dd>
<dt>
<i>y</i></dt>
<dd>
[in] Vertical coordinate of mouse location in units of the client's containing window.</dd>
<dt>
<i>grfKeyState</i></dt>
<dd>
[in] Identifies the current state of the keyboard modifier keys on the keyboard. Valid values can be a combination of any of the values MK_CONTROL, MK_SHIFT, MK_ALT, MK_BUTTON, MK_LBUTTON, MK_MBUTTON, and MK_RBUTTON.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_FAIL, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The mouse pointer was successfully set.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The container calls this method to notify the object that the mouse pointer is over the object after checking the object's activation policy by calling the <a href="if_p2q_1xh5.htm"><b>IPointerInactive::GetActivationPolicy</b></a> method. If the object has not requested to be activated in-place through that call, the container dispatches subsequent WM_MOUSEMOVE messages to the inactive object by calling <b>OnInactiveMouseMove</b> as long as the mouse pointer stays over the object. The object can then fire mouse move events.</p>
<p>
To avoid rounding errors and to make the job easier on the object implementer, this method takes window coordinates in the units of its containing client window, that is, the window in which the object is displayed, instead of the usual HIMETRIC units. Thus, the same coordinates and code path can be used when the object is active and inactive. The window coordinates specify the mouse position. The bounding rectangle is also specified in the same coordinate system.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_1xh5.htm"><b>IPointerInactive::GetActivationPolicy</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
