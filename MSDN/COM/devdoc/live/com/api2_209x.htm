<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetClassFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_getclassfile"></a>GetClassFile</h1>
<p>
Supplies the CLSID associated with the given filename.</p>
<pre><code><b>WINOLEAPI GetClassFile(
  LPCWSTR</b><i> szFileName</i><b>,</b> 
                  //Pointer to filename for which you are requesting 
                  // a CLSID
<b>  CLSID *</b><i> pclsid  </i>//Pointer to location for returning the CLSID
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>szFileName</i></dt>
<dd>
[in] Points to the filename for which you are requesting the associated CLSID.</dd>
<dt>
<i>pclsid</i></dt>
<dd>
[out] Points to the location where the associated CLSID is written on return.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK </dt>
<dd>
Indicates the CLSID was successfully supplied.</dd>
<dt>
MK_E_CANTOPENFILE</dt>
<dd>
Indicates unable to open the specified filename. </dd>
<dt>
MK_E_INVALIDEXTENSION</dt>
<dd>
Indicates the specified extension in the registry is invalid.

<p>
<b>Note</b>&nbsp;&nbsp;This function can also return any file system errors.

</dd>
</dl>
<h4>Remarks</h4>
<p>
When given a filename, the <b>GetClassFile</b> function finds the CLSID associated with that file. Examples of its use are in <b>OleCreateFromFile</b>, which is passed a file name and requires an associated CLSID, and in the OLE implementation of <b>IMoniker::BindToObject</b>, which, when a link to a file-based document is activated, calls <b>GetClassFile</b> to locate the object application that can open the file. </p>
<p>
<b>GetClassFile</b> uses the following strategies to determine an appropriate CLSID:
<ol>
<li>
If the file contains a storage object, as determined by a call to the <a href="api4_1eud.htm"><b>StgIsStorageFile</b></a> function, <b>GetClassFile</b> returns the CLSID that was written with the <a href="if_r2z_57sj.htm"><b>IStorage::SetClass</b></a> method.</li>
<li>
If the file is not a storage object, the <b>GetClassFile</b> function attempts to match various bits in the file against a pattern in the registry. A pattern in the registry can contain a series of entries of the form:<pre><code>regdb key = offset, cb, mask, value 
 </code></pre>
<p>
The value of the <i>offset</i> item is an offset from the beginning or end of the file and the <i>cb</i> item is a length in bytes. These two values represent a particular byte range in the file. (A negative value for the <i>offset</i> item is interpreted from the end of the file). The <i>mask</i> value is a bit mask that is used to perform a logical AND operation with the byte range specified by <i>offset</i> and <i>cb</i>. The result of the logical AND operation is compared with the <i>value</i> item. If the <i>mask</i> is omitted, it is assumed to be all ones.
<p>
Each pattern in the registry is compared to the file in the order of the patterns in the database. The first pattern where each of the <i>value</i> items matches the result of the AND operation determines the CLSID of the file. For example, the pattern contained in the following entries of the registry requires that the first four bytes be AB CD 12 34 and that the last four bytes be FE FE FE FE:
<pre><code>HKEY_CLASSES_ROOT 
    FileType 
        {12345678-0000-0001-C000-000000000095} 
            0 = 0, 4, FFFFFFFF, ABCD1234 
            1 = -4, 4, , FEFEFEFE 
 </code></pre>
<p>
If a file contains such a pattern, the CLSID {12345678-0000-0001-C000-000000000095} will be associated with this file.
</li>
<li>
If the above strategies fail, the <b>GetClassFile</b> function searches for the File Extension key in the registry that corresponds to the .<i>ext</i> portion of the filename. If the database entry contains a valid CLSID, this function returns that CLSID.</li>
<li>
If all strategies fail, the function returns MK_E_INVALIDEXTENSION.</li>
</ol>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api4_6smf.htm"><b>WriteClassStg</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
