<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleObject::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleobject_advise"></a>IOleObject::Advise</h2>
<p>
Establishes an advisory connection between a compound document object and the calling object's advise sink, through which the calling object receives notification when the compound document object is renamed, saved, or closed.</p>
<pre><code><b>HRESULT Advise(
  IAdviseSink</b><i> *pAdvSink</i><b>,  </b>//Pointer to advisory sink
<b>  DWORD</b><i> *pdwConnection    </i>//Pointer to a token
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pAdvSink</i></dt>
<dd>
[in] Pointer to the <b>IAdviseSink</b> interface on the advise sink of the calling object.</dd>
<dt>
<i>pdwConnection</i></dt>
<dd>
[out] Pointer to a DWORD token that can be passed to <a href="if_o_7vol.htm"><b>IOleObject::Unadvise</b></a> to delete the advisory connection.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Advisory connection is successfully established.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>Advise</b> method sets up an advisory connection between an object and its container, through which the object informs the container's advise sink of close, save, rename, and link-source change events in the object. A container calls this method, normally as part of initializing an object, to register its advisory sink with the object. In return, the object sends the container compound-document notifications by calling <a href="if_a2e_6pnv.htm"><b>IAdviseSink</b></a> or <a href="if_a2e_9mgi.htm"><b>IAdviseSink2</b></a>.</p>
<p>
If container and object successfully establish an advisory connection, the object receiving the call returns a nonzero value through <i>pdwConnection</i> to the container. If the attempt to establish an advisory connection fails, the object returns zero. To delete an advisory connection, the container calls <b>IOleObject::Unadvise</b> and passes this nonzero token back to the object.</p>
<p>
An object can delegate the job of managing and tracking advisory events to an OLE advise holder,<i> </i>to which you obtain a pointer by calling <a href="api2_0pbm.htm"><b>CreateOleAdviseHolder</b></a>. The returned <b>IOleAdviseHolder</b> interface has three methods for sending advisory notifications, as well as <b>Advise</b>, <b>Unadvise</b>, and <b>EnumAdvise</b> methods that are identical to those for <b>IOleObject</b>. Calls to <b>IOleObject:Advise</b>, <b>Unadvise</b>, or <b>EnumAdvise</b> are delegated to corresponding methods in the advise holder.</p>
<p>
To destroy the advise holder, simply call Release on the <b>IOleAdviseHolder</b> interface.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_0pbm.htm"><b>CreateOleAdviseHolder</b></a>, <a href="if_o_7vol.htm"><b>IOleObject::UnAdvise</b></a>, <a href="if_o_1cpx.htm"><b>IOleObject::EnumAdvise</b></a>, <a href="if_o_9uw5.htm"><b>IOleAdviseHolder::Advise</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
