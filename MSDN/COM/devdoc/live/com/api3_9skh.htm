<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleCreateStaticFromData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olecreatestaticfromdata"></a>OleCreateStaticFromData</h1>
<p>
Creates a static object (containing only a representation, with no native data) from a data transfer object.</p>
<pre><code><b>WINOLEAPI OleCreateStaticFromData(
  LPDATAOBJECT</b><i> pSrcDataObj</i><b>,  </b>//Pointer to the data transfer object
<b>  REFIID</b><i> riid</i><b>,               </b>//Reference to the identifier of the 
                             // interface to be used to communicate 
                             // with the new object
<b>  DWORD</b><i> renderopt</i><b>,           </b>//Value from OLERENDER
<b>  LPFORMATETC</b><i> pFormatEtc</i><b>,    </b>//Depending on renderopt, pointer to 
                             // value from FORMATETC
<b>  LPOLECLIENTSITE</b><i> pClientSite</i><b>,  </b>//Pointer to the interface
<b>  LPSTORAGE</b><i> pStg</i><b>,            </b>//Pointer to store object
<b>  LPVOID FAR*</b><i> ppvObj         </i>//Address of output variable that 
                             // receives the interface pointer 
                             // requested in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pSrcDataObj</i></dt>
<dd>
[in] Pointer to the <b>IDataObject</b> interface on the data transfer object that holds the data from which the object will be created.</dd>
<dt>
<i>riid</i></dt>
<dd>
[in] Reference to the identifier of the interface with which the caller is to communicate with the new object (usually<b> IID_IOleObject</b>, defined in the OLE headers as the interface identifier for <b>IOleObject</b>).</dd>
<dt>
<i>renderopt</i></dt>
<dd>
[in] Value from the enumeration <a href="enums_38s2.htm"><b>OLERENDER</b></a> indicating the locally cached drawing or data-retrieval capabilities that the container wants in the newly created component. It is an error to pass the render options OLERENDER_NONE or OLERENDER_ASIS to this function.</dd>
<dt>
<i>pFormatEtc</i></dt>
<dd>
[in] Depending on which of the <b>OLERENDER </b>flags is used as the value of <i>renderopt</i>, may be a pointer to one of the <a href="structs_14v7.htm"><b>FORMATETC</b></a> enumeration values. Refer to the <b>OLERENDER</b> enumeration for restrictions.</dd>
<dt>
<i>pClientSite</i></dt>
<dd>
[in] Pointer to an instance of <b>IOleClientSite</b>, the primary interface through which the object will request services from its container. May be NULL.</dd>
<dt>
<i>pStg</i></dt>
<dd>
[in] Pointer to the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> interface for storage for the object. This parameter may not be NULL.</dd>
<dt>
<i>ppvObj</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObj</i> contains the requested interface pointer on the newly created object.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The object was successfully created.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>OleCreateStaticFromData</b> function can convert any object, as long as it provides an <a href="if_a2e_24z8.htm"><b>IDataObject</b></a> interface, to a static object. It is useful in implementing the Convert To Picture option for OLE linking or embedding.</p>
<p>
Static objects can be created only if the source supports one of the OLE-rendered clipboard formats: CF_METAFILEPICT, CF_DIB, or CF_ BITMAP, and CF_ENHMF.</p>
<p>
You can also call <b>OleCreateStaticFromData</b> to paste a static object from the clipboard. To determine whether an object is static, call the <a href="api3_5xep.htm"><b>OleQueryCreateFromData</b></a> function, which returns OLE_S_STATIC if one of CF_METAFILEPICT, CF_DIB, or CF_BITMAP is present and an OLE format is not present. This indicates that you should call <b>OleCreateStaticFromData</b> rather than the <a href="api3_1h0h.htm"><b>OleCreateFromData</b></a> function to create the object.</p>
<p>
The new static object is of class CLSID_StaticMetafile (in the case of CF_METAFILEPICT) and CLSID_StaticDib (in the case of CF_DIB or CF_BITMAP). The static object sets the OLEMISC_STATIC and OLE_CANTLINKINSIDE bits returned from <b>IOleObject::GetMiscStatus</b>. The static object will have the aspect DVASPECT_CONTENT and a LINDEX of -1.</p>
<p>
The <i>pDataObject</i> is still valid after <b>OleCreateStaticFromData</b> returns. It is the caller's responsibility to free <i>pDataObject</i> — OLE does not release it.</p>
<p>
There cannot be more than one presentation stream in a static object.</p>
<p>
<b>Note</b>&nbsp;&nbsp;The <b>OLESTREAM</b>&lt;-&gt;<a href="if_r2z_9b8l.htm"><b>IStorage</b></a> conversion functions also convert static objects.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api3_1h0h.htm"><b>OleCreateFromData</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
