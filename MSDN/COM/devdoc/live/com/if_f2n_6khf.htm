<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMultiQI::QueryMultipleInterfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imultiqi_querymultipleinterfaces"></a>IMultiQI::QueryMultipleInterfaces</h2>
<p>
Fills a caller-provided array of structures with pointers to multiple interfaces.Calling this method is equivalent to issuing a series of separate <b>QueryInterface</b> calls except that you do not incur the overhead of a corresponding number of RPC calls. In multithreaded applications and distributed environments, keeping RPC calls to a minimum is essential for optimal performance.</p>
<pre><code><b>HRESULT QueryMultipleInterfaces(
  ULONG</b><i> cMQIs</i><b>,     </b>//Number of structures in array
<b>  MULTI_QI</b><i> *pMQIs  </i>//Pointer to first structure in array
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>cMQIs</i></dt>
<dd>
[in] Pointer to the number of elements in an array of <a href="structs_8y09.htm"><b>MULTI_QI</b></a> structures, each of which contains the IID of a single interface.</dd>
<dt>
<i>pMQIs</i></dt>
<dd>
[in, out] Pointer to the first <b>MULTI_QI</b> strucutre in the array.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Pointers were returned to all requested interfaces.</dd>
<dt>
S_FALSE</dt>
<dd>
Pointers were returned to some, but not all, of the requested interfaces.</dd>
<dt>
E_NOINTERFACE</dt>
<dd>
Pointers were returned to none of the requested interfaces.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>QueryMultipleInterfaces</b> method takes as input an array of <a href="structs_8y09.htm"><b>MULTI_QI</b></a> structures. Each structure specifies an interface IID and contains two additional blank fields for receiving an interface pointer and return value.</p>
<p>
This method obtains as many requested interface pointers as possible directly from the object proxy. For each interface not implemented on the proxy, the method calls the server to obtain a pointer. Upon receiving an interface pointer from the server, the method builds a corresponding interface proxy and returns its pointer along with pointers to the interfaces it already implements.</p>
<h4>Notes to Callers</h4>
<p>
A caller should begin by querying the object proxy for the <b>IMultiQI</b> interface. If the object proxy returns a pointer to this interface, the caller should then create a <b>MULTI_QI</b> structure for each interface it wants to obtain. Each structure should specify an interface IID and set its <i>pItf</i> member to NULL. Failure to set the <i>pItf</i> member to NULL will cause the object proxy to ignore the structure.</p>
<p>
On return, <b>QueryMultipleInterfaces</b> writes the requested interface pointer and a return value into each <b>MULTI_QI</b> structure in the client's array. The <i>pItf</i> field receives the pointer; the <i>hr</i> field receives the return value.</p>
<p>
If the value returned from a call to <b>QueryMultipleInterfaces</b> is S_OK, then pointers were returned for all requested interfaces. If the return value is E_NOINTERFACE, then pointers were returned for none of the requested interfaces. If the return value is S_FALSE, then pointers to one or more requested interfaces were not returned.In this event, the client should check the <i>hr</i> field of each MULTI_QI structure to determine which interfaces were acquired and which were not.</p>
<p>
If a client knows ahead of time that it will be using several of an object's interfaces, it can call <b>QueryMultipleInterfaces</b> up front and then, later, if a <b>QueryInterface</b> is done for one of the interfaces already acquired through <b>QueryMultipleInterfaces</b>, no RPC call will be necessary.</p>
<p>
On return, the caller should check the <i>hr</i> field of each <b>MULTI_QI</b> structure to determine which interface pointers were and were not returned.</p>
<p>
The client is responsible for releasing each of the acquired interfaces by calling <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_9dwu.htm"><b>IUnknown</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
