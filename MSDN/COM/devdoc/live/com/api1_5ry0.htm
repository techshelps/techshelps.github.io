<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoCreateInstanceEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_cocreateinstanceex"></a>CoCreateInstanceEx</h1>
<p>
Creates an instance of a specific class on a specific machine.</p>
<pre><code><b>HRESULT CoCreateInstanceEx(
  REFCLSID</b><i> rclsid</i><b>,             </b>//CLSID of the object to be created
<b>  IUnknown *</b><i>punkOuter</i><b>,         </b>//If part of an aggregate, the 
                               // controlling IUnknown
<b>  DWORD</b><i> dwClsCtx</i><b>,              </b>//CLSCTX values
<b>  COSERVERINFO *</b><i>pServerInfo</i><b>,</b>   //Machine on which the object is to 
                               // be instantiated
<b>  ULONG</b><i> cmq</i><b>,                   </b>//Number of MULTI_QI structures in 
                               // <i>pResults</i>
<b>  MULTI_QI</b><i> </i>*<i>pResults           </i>//Array of MULTI_QI structures
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>rclsid</i></dt>
<dd>
[in] CLSID of the object to be created.</dd>
<dt>
<i>punkOuter</i></dt>
<dd>
[in] When non-NULL, indicates the instance is being created as part of an aggregate, and <i>punkOuter</i> is to be used as the new instance's controlling <b>IUnknown</b>. Aggregation is currently not supported cross-process or cross-machine. When instantiating an object out of process, CLASS_E_NOAGGREGATION will be returned if <i>punkOuter</i> is non-NULL.</dd>
<dt>
<i>dwClsCtx</i></dt>
<dd>
[in] Values taken from the <a href="enums_152w.htm"><b>CLSCTX</b></a> enumeration.</dd>
<dt>
<i>pServerInfo</i></dt>
<dd>
[in] Machine on which to instantiate the object. May be NULL, in which case the object is instantiated on the current machine or at the machine specified in the registry under the class's <a href="reg_7an9.htm"><b>RemoteServerName</b></a> named-value, according to the interpretation of the <i>dwClsCtx</i> parameter. See the <a href="enums_152w.htm"><b>CLSCTX</b></a> documentation for details).</dd>
<dt>
<i>cmq</i></dt>
<dd>
[in] Number of MULTI_QI structures in <i>pResults</i>. Must be greater than zero.</dd>
<dt>
<i>pResults</i></dt>
<dd>
[in] Array of <a href="structs_8y09.htm"><b>MULTI_QI</b></a> structures. Each structure has three members: the identifier for a requested interface (<i>pIID</i>), the location to return the interface pointer (<i>pItf</i>) and the return value of the call to <b>QueryInterface</b> (<i>hr</i>).
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_INVALIDARG, as well as the following:
<dl>
<dt>
S_OK </dt>
<dd>
Indicates success.</dd>
<dt>
CO_S_NOTALLINTERFACES</dt>
<dd>
At least one, but not all of the interfaces requested in the <i>pResults</i> array were successfully retrieved. The <i>hr</i> field of each of the MULTI_QI structures in <i>pResults</i> indicates with S_OK or E_NOINTERFACE whether the specific interface was returned.</dd>
<dt>
E_NOINTERFACE</dt>
<dd>
None of the interfaces requested in the <i>pResults</i> array were successfully retrieved.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>CoCreateInstanceEx</b> creates a single uninitialized object associated with the given CLSID on a specified remote machine. This is an extension of the function <a href="api1_1nad.htm"><b>CoCreateInstance</b></a>, which creates an object on the local machine only. In addition, rather than requesting a single interface and obtaining a single pointer to that interface, <b>CoCreateInstanceEx</b> makes it possible to specify an array of structures, each pointing to an interface identifier (IID) on input, and, on return, containing (if available) a pointer to the requested interface and the return value of the <b>QueryInterface</b> call for that interface. This permits fewer round trips between machines.</p>
<p>
The <b>CoCreateInstanceEx</b> helper function encapsulates three calls: first, to <a href="api1_6yb8.htm"><b>CoGetClassObject</b></a> to connect to the class object associated with the specified CLSID, specifying the machine location of the class; second, to <a href="if_a2e_5k11.htm"><b>IClassFactory::CreateInstance</b></a> to create an uninitialized instance, and finally, to <b>IClassFactory::Release</b>, to release the class object. </p>
<p>
The object so created must still be initialized through a call to one of the initialization interfaces (such as <a href="if_p2q_34pw.htm"><b>IPersistStorage:::Load</b></a>). The two helper functions, <a href="api1_765h.htm"><b>CoGetInstanceFromFile</b></a> and <a href="api1_192d.htm"><b>CoGetInstanceFromIStorage</b></a> encapsulate both the instance creation and initialization from the obvious sources.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_765h.htm"><b>CoGetInstanceFromFile</b></a>, <a href="api1_192d.htm"><b>CoGetInstanceFromIStorage</b></a>, <a href="enums_152w.htm"><b>CLSCTX</b></a>, <a href="structs_34vj.htm"><b>COSERVERINFO</b></a>, <a href="comext_4ws3.htm"><b>Instance Creation Helper Functions</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
