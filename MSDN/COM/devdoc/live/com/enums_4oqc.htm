<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COINIT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_coinit"></a>COINIT</h1>
<p>
A set of values from the COINIT enumeration is passed as the <i>dwCoInit</i> parameter to <b>CoInitializeEx</b>. This value determines the concurrency model used for incoming calls to objects created by this thread. This concurrency model can be either <i>apartment-threaded</i> or<i> multi-threaded</i>. </p>
<p>
The COINIT enumeration is defined as follows:</p>
<pre><code>typedef enum tagCOINIT{
  COINIT_APARTMENTTHREADED = 0x2,  // Apartment model
  COINIT_MULTITHREADED     = 0x0,  // OLE calls objects on any thread.
  COINIT_DISABLE_OLE1DDE   = 0x4,  // Don't use DDE for Ole1 support.
  COINIT_SPEED_OVER_MEMORY = 0x8,  // Trade memory for speed.
} <b>COINIT</b>;
 </code></pre>
<h4>Elements</h4>
<dl>
<dt>
COINIT_MULTITHREADED</dt>
<dd>
Initializes the thread for <i>multi-threaded</i> object concurrency (see Remarks).</dd>
<dt>
COINIT_APARTMENTTHREADED</dt>
<dd>
Initializes the thread for <i>apartment-threaded</i> object concurrency (see Remarks).</dd>
<dt>
COINIT_DISABLE_OLE1DDE</dt>
<dd>
Disables DDE for Ole1 support.</dd>
<dt>
COINIT_SPEED_OVER_MEMORY</dt>
<dd>
Trades memory for speed.
</dd>
</dl>
<h4>Remarks</h4>
<p>
When a thread is initialized through a call to <b>CoInitializeEx</b>, you choose whether to initialize it as apartment-threaded or multi-threaded by designating one of the members of COINIT as its second parameter. This designates how incoming calls to any object created by that thread are handled, that is, the object's concurrency.</p>
<p>
Apartment-threading, the default model for earlier versions of Windows NT, while allowing for multiple threads of execution, serializes all incoming calls by requiring that calls to methods of objects created by this thread always run on the same thread – the apartment/thread that created them. In addition, calls can arrive only at message-queue boundaries (i.e., only during a <b>PeekMessage</b>, <b>SendMessage</b>, <b>DispatchMessage</b>, etc.). Because of this serialization, it is not typically necessary to write concurrency control into the code for the object, other than to avoid calls to <b>PeekMessage</b> and <b>SendMessage</b> during processing that must not be interrupted by other method invocations or calls to other objects in the same apartment/thread.</p>
<p>
Multi-threading (also called free-threading) allows calls to methods of objects created by this thread to be run on any thread. There is no serialization of calls – many calls may occur to the same method or to the same object or simultaneously. Multi-threaded object concurrency offers the highest performance and takes the best advantage of multi-processor hardware for cross-thread, cross-process, and cross-machine calling, since calls to objects are not serialized in any way. This means, however, that the code for objects must enforce its own concurrency model, typically through the use of Win32 synchronization primitives, such as <i>critical sections</i>, <i>semaphores</i>, or <i>mutexes</i>. In addition, because the object doesn't control the lifetime of the threads that are accessing it, no thread-specific state may be stored in the object (in Thread-Local-Storage). </p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. Requires DCOM95. <br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in objbase.h.</p>
<h4>See Also</h4>
<p>
<a href="api1_5iyg.htm"><b>CoInitializeEx</b></a>, <a href="com_98mr.htm"><b>Processes and Threads</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
