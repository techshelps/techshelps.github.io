<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleInPlaceObject::InPlaceDeactivate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleinplaceobject_inplacedeactivate"></a>IOleInPlaceObject::InPlaceDeactivate</h2>
<p>
Deactivates an active in-place object and discards the object's undo state.</p>
<pre><b><code>HRESULT InPlaceDeactivate();
 </code></b></pre>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The object was successfully deactivated.
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes to Callers</h5>
<p>
This method is called by an active object's immediate container to deactivate the active object and discard its undo state.</p>
<h5>Notes to Implementers</h5>
<p>
On return from <b>IOleInPlaceObject::InPlaceDeactivate</b>, the object discards its undo state. The object application should not shut down immediately after this call. Instead, it should wait for an explicit call to <b>IOleObject::Close</b> or for the object's reference count to reach zero.</p>
<p>
Before deactivating, the object application should give the container a chance to put its user interface back on the frame window by calling <b>IOleInPlaceSite::OnUIDeactivate</b>.</p>
<p>
If the in-place user interface is still visible during the call to <b>InPlaceDeactivate</b>, the object application should call its own <b>IOleInPlaceObject::UIDeactivate</b> method to hide the user interface. The in-place user interface can be optionally destroyed during calls to <b>IOleInPlaceObject::UIDeactivate</b> and <b>IOleInPlaceObject::InPlaceDeactivate</b>. But if the user interface has not already been destroyed when the container calls <b>IOleObject::Close</b>, then it <i>must</i> be destroyed during the call to <b>IOleObject::Close</b>.</p>
<p>
During the call to <b>IOleObject::Close</b>, the object should check to see whether it is still active in place. If so, it should call <b>InPlaceDeactivate</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_2sbp.htm"><b>IOleInPlaceSite::OnInPlaceDeactivate</b></a>, <a href="if_o_9xt1.htm"><b>IOleInPlaceSite::OnUIDeactivate</b></a>, <a href="if_o_6izq.htm"><b>IOleObject::Close</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
