<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoInitialize</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_coinitialize"></a>CoInitialize</h1>
<p>
Initializes the COM library on the current apartment and identifies the concurrency model as single-thread apartment (STA). Applications must initialize the COM library before they can call COM library functions other than <a href="api1_2qlf.htm"><b>CoGetMalloc</b></a> and memory allocation functions. </p>
<p>
New applications should call <a href="api1_5iyg.htm"><b>CoInitializeEx</b></a> instead of <b>CoInitialize</b>. </p>
<pre><code><b>HRESULT CoInitialize(
  LPVOID</b><i> pvReserved  </i>//Reserved; must be NULL
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pvReserved</i></dt>
<dd>
[in] Reserved; must be NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK </dt>
<dd>
The COM library was initialized successfully on this apartment.</dd>
<dt>
S_FALSE</dt>
<dd>
The COM library is already initialized on this apartment.</dd>
<dt>
RPC_E_CHANGED_MODE</dt>
<dd>
A previous call to <b>CoInitializeEx</b> specified the concurrency model for this apartment as multithread apartment (MTA). 
</dd>
</dl>
<h4>Remarks</h4>
<p>
<a href="api1_5iyg.htm"><b>CoInitializeEx</b></a> provides the same functionality as <b>CoInitialize</b> and also provides a parameter to explicitly specify the apartment's concurrency model. <b>CoInitialize</b> calls <b>CoInitializeEx</b> and specifies the concurrency model as single-thread apartment. Applications developed today should call <b>CoInitializeEx</b> rather than <b>CoInitialize</b>. </p>
<p>
You need to initialize the COM library on an apartment before you call any of the library functions except <a href="api1_2qlf.htm"><b>CoGetMalloc</b></a>, to get a pointer to the standard allocator, and the memory allocation functions.</p>
<p>
Typically, the COM library is initialized on an apartment only once. Subsequent calls will succeed, as long as they do not attempt to change the concurrency model, but will return S_FALSE. To close the COM library gracefully, each successful call to <b>CoInitialize</b> or <b>CoInitializeEx</b>, including those that return S_FALSE, must be balanced by a corresponding call to <b>CoUninitialize</b>.</p>
<p>
Once the concurrency model for an apartment is set, it cannot be changed. A call to <b>CoInitialize</b> on an apartment that was previously initialized as multithreaded will fail and return RPC_E_CHANGED_MODE. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also </h4>
<p>
<a href="api1_5iyg.htm"><b>CoInitializeEx</b></a>, <a href="api1_7vqd.htm"><b>CoUninitialize</b></a>, <a href="api3_6med.htm"><b>OleInitialize</b></a>, <a href="com_98mr.htm"><b>Processes and Threads</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
