<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleTranslateAccelerator</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_oletranslateaccelerator"></a>OleTranslateAccelerator</h1>
<p>
Called by the object application, allows an object's container to translate accelerators according to the container's accelerator table.</p>
<pre><code><b>WINOLEAPI OleTranslateAccelerator(
  LPOLEINPLACEFRAME</b><i> lpFrame</i><b>,</b>
<b>               </b>//Pointer to send keystrokes
<b>  LPOLEINPLACEFRAMEINFO</b><i> lpFrameInfo</i><b>,</b>
<b>               </b>//Pointer to accelerator table obtained from container
<b>  LPMSG</b><i> lpmsg  </i>//Pointer to structure containing the keystroke
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpFrame</i></dt>
<dd>
[in] Pointer to the <b>IOleInPlaceFrame</b> interface to which the keystroke might be sent.</dd>
<dt>
<i>lpFrameInfo</i></dt>
<dd>
[in] Pointer to an <a href="structs_4inj.htm"><b>OLEINPLACEFRAMEINFO</b></a> structure containing the accelerator table obtained from the container.</dd>
<dt>
<i>lpmsg</i></dt>
<dd>
[in] Pointer to an <b>MSG</b> structure containing the keystroke.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_INVALIDARG and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The keystroke was processed.</dd>
<dt>
S_FALSE</dt>
<dd>
The object should continue processing this message.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Object servers call <b>OleTranslateAccelerator</b> to allow the object's container to translate accelerator keystrokes according to the container's accelerator table, pointed to by <i>lpFrameInfo</i>. While a contained object is the active object, the object's server <i>always</i> has first chance at translating any messages received. If this is not desired, the server calls <b>OleTranslateAccelerator</b> to give the object's container a chance. If the keyboard input matches an accelerator found in the container-provided accelerator table, <b>OleTranslateAccelerator</b> passes the message and its command identifier on to the container through the <b>IOleInPlaceFrame::TranslateAccelerator</b> method. This method returns S_OK if the keystroke is consumed; otherwise it returns S_FALSE.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Accelerator tables for containers should be defined so they will work properly with object applications that do their own accelerator keystroke translations. These tables should take the form: </p>
<pre><code>"char", wID, VIRTKEY, CONTROL
 </code></pre>
<p>
This is the most common way to describe keyboard accelerators. Failure to do so can result in keystrokes being lost or sent to the wrong object during an in-place session.</p>
<p>
Objects can call the <a href="api2_0g1e.htm"><b>IsAccelerator</b></a> function to see whether the accelerator keystroke belongs to the object or the container. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api2_0g1e.htm"><b>IsAccelerator</b></a>,<b> <a href="if_o_9dte.htm">IOleInPlaceFrame::TranslateAccelerator</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
