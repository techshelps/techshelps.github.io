<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IStorage::OpenStorage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_istorage_openstorage"></a>IStorage::OpenStorage</h2>
<p>
Opens an existing storage object with the specified name in the specified access mode.</p>
<pre><code><b>HRESULT OpenStorage(
  const WCHAR *</b><i> pwcsName</i><b>,  </b>//Points to the name of the storage 
                           // object to open
<b>  IStorage *</b><i> pstgPriority</i><b>,  </b>//Points to previous opening of the 
                            // storage object
<b>  DWORD</b><i> grfMode</i><b>,           </b>//Access mode for the new storage object
<b>  SNB</b><i> snbExclude</i><b>,          </b>//Points to a block of stream names in 
                           // the storage object
<b>  DWORD</b><i> reserved</i><b>,          </b>//Reserved; must be zero
<b>  IStorage **</b><i> ppstg        </i>//Points to opened storage object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pwcsName</i></dt>
<dd>
[in] Points to a wide character string that contains the name of the storage object to open. It is ignored if <i>pstgPriority</i> is non-NULL.</dd>
<dt>
<i>pstgPriority</i></dt>
<dd>
[in] If the <i>pstgPriority</i> parameter is not NULL, it is an <b>IStorage</b> pointer to a previous opening of an element of the storage object, usually one that was opened in priority mode. The storage object should be closed and re-opened according to <i>grfMode</i>. When the <b>IStorage::OpenStorage</b> method returns, <i>pstgPriority</i> is no longer valid. Use the value supplied in the <i>ppstg</i> parameter. If the <i>pstgPriority</i> parameter is NULL, it is ignored.</dd>
<dt>
<i>grfMode</i></dt>
<dd>
[in] Specifies the access mode to use when opening the storage object. See the <a href="enums_1ktp.htm"><b>STGM</b></a> enumeration values for descriptions of the possible values. Whatever other modes you may choose, you must at least specify STGM_SHARE_EXCLUSIVE when calling this method.</dd>
<dt>
<i>snbExclude</i></dt>
<dd>
[in] Must be NULL. A non-NULL value will return STG_E_INVALIDPARAMETER.</dd>
<dt>
<i>reserved</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>ppstg</i></dt>
<dd>
[out] When the operation is successful, points to the location of an <b>IStorage</b> pointer to the opened storage object. This parameter is set to NULL if an error occurs.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The storage object was opened successfully.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the storage's data is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and <a href="asyncstg_86cl.htm">Asynchronous Storage</a>.</dd>
<dt>
STG_E_ACCESSDENIED</dt>
<dd>
Insufficient permissions to open storage object.</dd>
<dt>
STG_E_FILENOTFOUND</dt>
<dd>
The storage object with the specified name does not exist. </dd>
<dt>
STG_E_INSUFFICIENTMEMORY</dt>
<dd>
The storage object was not opened due to a lack of memory.</dd>
<dt>
STG_E_INVALIDFLAG</dt>
<dd>
The value specified for the <i>grfMode</i> flag is not a valid <a href="enums_1ktp.htm"><b>STGM</b></a> enumeration value.</dd>
<dt>
STG_E_INVALIDFUNCTION</dt>
<dd>
The specified combination of <i>grfMode</i> flags is not supported.</dd>
<dt>
STG_E_INVALIDNAME</dt>
<dd>
Invalid value for <i>pwcsName</i>.</dd>
<dt>
STG_E_INVALIDPOINTER</dt>
<dd>
The pointer specified for the storage object was invalid.</dd>
<dt>
STG_E_INVALIDPARAMETER</dt>
<dd>
One of the parameters was invalid.</dd>
<dt>
STG_E_REVERTED</dt>
<dd>
The storage object has been invalidated by a revert operation above it in the transaction tree.</dd>
<dt>
STG_E_TOOMANYOPENFILES</dt>
<dd>
The storage object was not created because there are too many open files.</dd>
<dt>
STG_S_CONVERTED</dt>
<dd>
The existing stream with the specified name was replaced with a new storage object containing a single stream called CONTENTS. In direct mode, the new storage is immediately written to disk. In transacted mode, the new storage is written to a temporary storage in memory and later written to disk when it is committed.</dd>
</dl>
<h4>Remarks</h4>
<p>
Storage<b> </b>objects can be opened with STGM_DELETEONRELEASE, in which case the object is destroyed when it receives its final release. This is useful for creating temporary storage objects.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_954e.htm"><b>IStorage - Compound File Implementation</b></a>, <a href="if_r2z_8vfp.htm"><b>IStorage::CreateStorage</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
