<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoLoadLibrary</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_coloadlibrary"></a>CoLoadLibrary</h1>
<p>
Loads a specific DLL into the caller's process. The <a href="api1_6yb8.htm"><b>CoGetClassObject</b></a> function calls <b>CoLoadLibrary</b> internally; applications should not call it directly.</p>
<pre><code><b>HINSTANCE CoLoadLibrary(
  LPOLESTR</b><i> lpszLibName</i><b>,</b>
<b>                  </b>//Pointer to the name of the library to be loaded
<b>  BOOL</b><i> bAutoFree  </i>//Whether library is automatically freed
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszLibName</i></dt>
<dd>
[in] Pointer to the name of the library to be loaded. The use of this name is the same as in the Win32 function <b>LoadLibrary</b>.</dd>
<dt>
<i>bAutoFree</i></dt>
<dd>
[in] If TRUE, indicates that this library is freed when it is no longer needed, through a call to either the <a href="api1_3p2r.htm"><b>CoFreeUnusedLibraries</b></a> or <a href="api1_7vqd.htm"><b>CoUninitialize</b></a> functions. If FALSE, the library should be explicitly freed with the <a href="api1_0ubd.htm"><b>CoFreeLibrary</b></a> function.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
Module Handle</dt>
<dd>
Handle of the loaded library.</dd>
<dt>
NULL</dt>
<dd>
Library could not be loaded.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>CoLoadLibrary</b> function is called internally by the <b>CoGetClassObject</b> function when the class context (<a href="enums_152w.htm">CLSCTX</a>) indicates a DLL. <b>CoLoadLibrary</b> loads a DLL specified by the <i>lpszLibName</i> parameter into the process that called <b>CoGetClassObject</b>. Containers should not call <b>CoLoadLibrary</b> directly.</p>
<p>
Internally, a reference count is kept on the loaded DLL, by using <b>CoLoadLibrary</b> to increment the count and the <b>CoFreeLibrary </b>function<b> </b>to decrement it.</p>
<p>
<b>Windows CE:</b> Passing into this function any invalid and, under some circumstances, NULL pointers will result in unexpected termination of the application. For more information about handling exceptions, see Programming Considerations.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Use version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_8cdv.htm"><b>CoFreeAllLibraries</b></a>, <a href="api1_0ubd.htm"><b>CoFreeLibrary</b></a>, <a href="api1_3p2r.htm"><b>CoFreeUnusedLibraries</b></a>, <a href="api1_6yb8.htm"><b>CoGetClassObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
