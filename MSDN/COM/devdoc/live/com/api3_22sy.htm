<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleCreateDefaultHandler</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olecreatedefaulthandler"></a>OleCreateDefaultHandler</h1>
<p>
Creates a new instance of the default embedding handler. This instance is initialized so it creates a local server when the embedded object enters the running state. </p>
<pre><code><b>WINOLEAPI OleCreateDefaultHandler(
  REFCLSID</b><i> clsid</i><b>,      </b>//OLE server to be loaded
<b>  LPUNKNOWN</b><i> pUnkOuter</i><b>, </b>//Pointer to controlling IUnknown if 
                       // aggregated; else NULL
<b>  REFIID</b><i> riid</i><b>,         </b>//Reference to the identifier of the 
                       // interface for communicating with handler
<b>  LPVOID FAR *</b><i> ppvObj  </i>//Address of output variable that receives 
                       // the interface pointer  requested in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>clsid</i></dt>
<dd>
[in] CLSID identifying the OLE server to be loaded when the embedded object enters the running state.</dd>
<dt>
<i>pUnkOuter</i></dt>
<dd>
[in] Pointer to the controlling <a href="if_r2z_9dwu.htm"><b>IUnknown</b></a> interface if the handler is to be aggregated; NULL if it is not to be aggregated.</dd>
<dt>
<i>riid</i></dt>
<dd>
[in] Reference to the identifier of the interface, usually <b>IID_IOleObject</b>, through which the caller will communicate with the handler.</dd>
<dt>
<i>ppvObj</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObj</i> contains the requested interface pointer on the newly created handler.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
NOERROR</dt>
<dd>
The creation operation was successful.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>OleCreateDefaultHandler</b> creates a new instance of the default embedding handler, initialized so it creates a local server identified by the <i>clsid</i> parameter when the embedded object enters the running state. If you are writing a handler and want to use the services of the default handler, call <b>OleCreateDefaultHandler</b>. OLE also calls it internally when the CLSID specified in an object creation call is not registered.</p>
<p>
If the given class does not have a special handler, a call to <b>OleCreateDefaultHandler</b> produces the same results as a call to the <a href="api1_1nad.htm"><b>CoCreateInstance</b></a> function with the class context parameter assigned the value CLSCTX_INPROC_HANDLER.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_1nad.htm"><b>CoCreateInstance</b></a>,<b> <a href="enums_152w.htm">CLSCTX</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
