<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPerPropertyBrowsing::GetDisplayString</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iperpropertybrowsing_getdisplaystring"></a>IPerPropertyBrowsing::GetDisplayString</h2>
<p>
Returns a text string describing the property identified with <i>dispID</i> in the caller's user interface. In other words, the returned text is a displayable name describing the property and can be displayed in the caller's user interface. The string itself is a BSTR allocated by this method with <b>SysAllocString</b>. Upon return, the string is the responsibility of the caller, which must free it with <b>SysFreeString</b> when it is no longer needed.</p>
<pre><code><b>HRESULT GetDisplayString(
  DISPID</b><i> dispID</i><b>,  </b>//Dispatch identifier for the property
<b>  BSTR</b><i> *pbstr     </i>//Receives a pointer to the displayable string 
                  //describing the property
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dispID</i></dt>
<dd>
[in] Dispatch identifier of the property whose display name is requested.</dd>
<dt>
<i>pbstr</i></dt>
<dd>
[out] Pointer to the BSTR containing the display name for the property identified with <i>dispID</i>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The display name was successfully returned.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
The object does not provide display names for individual properties. The caller has the recourse to check the object's type information for the text name of the object in this case.</dd>
<dt>
E_POINTER</dt>
<dd>
The address in <i>pbstr</i> is not valid. For example, it may be NULL.
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes to Implementers</h5>
<p>
The caller is responsible for freeing the <i>pbstr</i> string with <b>SysFreeString</b> when it is no longer needed.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<p>&nbsp;</p></body>
</HTML>
