<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateOleAdviseHolder</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_createoleadviseholder"></a>CreateOleAdviseHolder</h1>
<p>
Creates an advise holder object for managing compound document notifications. It returns a pointer to the object's OLE implementation of the <b>IOleAdviseHolder</b> interface.</p>
<pre><code><b>WINOLEAPI CreateOleAdviseHolder(
  LPOLEADVISEHOLDER FAR*</b><i> ppOAHolder  </i>//Address of output variable 
                                     // that receives the 
                                     // IOleAdviseHolder interface 
                                     // pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppOAHolder</i></dt>
<dd>
[out] Address of <b>IOleAdviseHolder</b>* pointer variable that receives the interface pointer to the new advise holder object.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The new OLE advise holder returned successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The function <b>CreateOleAdviseHolder</b> creates an instance of an advise holder, which supports the OLE implementation of the <b>IOleAdviseHolder </b>interface. The methods of this interface are intended to be used to implement the advisory methods of <b>IOleObject</b>, and, when advisory connections have been set up with objects supporting an advisory sink, to send notifications of changes in the object to the advisory sink. The advise holder returned by <b>CreateOleAdviseHolder</b> will suffice for the great majority of applications. The OLE-provided implementation does not, however, support <b>IOleAdviseHolder::EnumAdvise,</b> so if you need to use this method, you will need to implement your own advise holder.</p>
<p>
<b>Windows CE:</b> Passing into this function any invalid and, under some circumstances, NULL pointers will result in unexpected termination of the application. For more information about handling exceptions, see Programming Considerations.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Use version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="if_o_1gdu.htm"><b>IOleAdviseHolder</b></a>, <a href="if_o_9778.htm"><b>IOleObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
