<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIDL Compilation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_midl_compilation"></a>MIDL Compilation</h1>
<p>
Given an IDL file such as example2.idl, which defines one or more COM interfaces and a type library, the MIDL compiler (Midl.exe) generates the following files as the default output:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%>Filename</th>
<th align=left width=72%>Description</th>
</tr>
<tr valign=top>
<td width=28%>Example2.h</td>
<td width=72%>The header file, containing type definitions and function declarations for all of the interfaces defined in the IDL file, as well as forward declarations for routines that the stubs call.</td>
</tr>
<tr valign=top>
<td width=28%>Example2_p.c</td>
<td width=72%>The proxy/stub file, which includes the surrogate entry points for both clients and servers.</td>
</tr>
<tr valign=top>
<td width=28%>Example2_i.c</td>
<td width=72%>The interface ID file, which defines the GUID for every interface specified in the IDL file.</td>
</tr>
<tr valign=top>
<td width=28%>Example2.tlb</td>
<td width=72%>A compound document file that contains information about types and objects.</td>
</tr>
<tr valign=top>
<td width=28%>Dlldata.c</td>
<td width=72%>Contains the data you need to create a proxy/stub DLL.</td>
</tr>
</table><br>
<p>
You use the header file and all of the .c files to <a href="custintf_1pm4.htm">create a proxy DLL</a> that can support the interface when used by both client applications and object servers. You use the interface header file (Example2.h)and the interface ID (Example2_i.c) file when creating the executable file for a client application that uses the interface. You can choose to include the type library file as a resource in your EXE or DLL, or ship it as a separate file.</p>
<p>
For more information about these files, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_files_generated_for_a_com_interface">
</object><a href=JavaScript:alink_1.Click()>Files Generated for a COM Interface</a>, in the MIDL Programmer's Guide and Reference.</p>
<p>&nbsp;</p></body>
</HTML>
