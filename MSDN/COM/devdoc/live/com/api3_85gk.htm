<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProgIDFromCLSID</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_progidfromclsid"></a>ProgIDFromCLSID</h1>
<p>
Retrieves the ProgID for a given CLSID.</p>
<pre><code><b>WINOLEAPI ProgIDFromCLSID(
  REFCLSID</b><i> clsid</i><b>,  </b>//CLSID for which the ProgID is requested
<b>  LPOLESTR *</b><i> lplpszProgID</i>
<i>                   </i>//Address of output variable that receives a 
                   // pointer to the requested ProgID string
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>clsid</i></dt>
<dd>
[in] Specifies the CLSID for which the ProgID is requested.</dd>
<dt>
<i>lplpszProgID</i></dt>
<dd>
[out] Address of <b>LPOLESTR</b> pointer variable that receives a pointer to the ProgID string.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The ProgID was returned successfully.</dd>
<dt>
REGDB_E_CLASSNOTREG</dt>
<dd>
Class not registered in the registry.</dd>
<dt>
REGDB_E_READREGDB</dt>
<dd>
Error reading registry.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Every OLE object class listed in the Insert Object dialog box must have a <i>programmatic identifier</i> (ProgID), a string that uniquely identifies a given class, stored in the registry. In addition to determining the eligibility for the Insert Object dialog box, the ProgID can be used as an identifier in a macro programming language to identify a class. Finally, the ProgID is also the class name used for an object of an OLE class that is placed in an OLE 1 container.</p>
<p>
The<b> ProgIDFromCLSID</b> function uses entries in the registry to do the conversion. OLE application authors are responsible for ensuring that the registry is configured correctly in the application's setup program.</p>
<p>
The ProgID string must be different than the class name of any OLE 1 application, including the OLE 1 version of the same application, if there is one. In addition, a ProgID string must not contain more than 39 characters, start with a digit, or, except for a single period, contain any punctuation (including underscores).</p>
<p>
The ProgID must <i>never </i>be shown to the user in the user interface. If you need a short displayable string for an object, call <a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a>.</p>
<p>
Call the <a href="api1_51gk.htm"><b>CLSIDFromProgID</b></a> function to find the CLSID associated with a given ProgID. CLSIDs can be freed with the task allocator (refer to the <a href="api1_2qlf.htm"><b>CoGetMalloc</b></a> function).</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_51gk.htm"><b>CLSIDFromProgID</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
