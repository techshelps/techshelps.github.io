<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RevokeBindStatusCallback</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_revokebindstatuscallback"></a>RevokeBindStatusCallback</h1>
<p>
Revokes a bind status callback interface previously registered on a bind context.</p>
<pre><code><b>HRESULT RevokeBindStatusCallback(
  IBindCtx</b><i> *pbc</i><b>,  </b>//Pointer to the bind context from which the 
                  // callback is to be revoked
<b>  IBindStatusCallback</b><i> *pbsc</i>
<i>                  </i>//Pointer to the callback interface to revoke
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pbc</i></dt>
<dd>
[in] Pointer to the <b>IBindCtx</b> interface for the bind context from which the callback interface is to be revoked.</dd>
<dt>
<i>pbsc</i></dt>
<dd>
[in] Pointer to the <a href="if_a2e_0vxn.htm"><b>IBindStatusCallback</b></a> interface to revoke.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK </dt>
<dd>
The operation was successful.</dd>
<dt>
E_FAIL</dt>
<dd>
The callback interface specified is not registered on the specified bind context.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more parameters are invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>RevokeBindStatusCallback</b> will not succeed if it is made during a bind operation.</p>
<p>
Note that it is not necessary to make this call for every use of a bind context. It is possible (although not recommended) to reuse the same bind context and the same callback for several bind operations. Upon calling <b>IBindCtx::Release</b>, all registered objects on that bind context are revoked, including the callback interfaces. Therefore, releasing a bind context implicitly releases all registered callbacks. However, if one chooses to reuse a bind context, one can use <b>RevokeBindStatusCallback</b> to remove a registered callback so it is not re-used.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in urlmon.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0vxn.htm"><b>IBindStatusCallback</b></a>, <a href="api3_8bvv.htm"><b>RegisterBindStatusCallback</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
