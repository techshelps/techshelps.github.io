<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleUILinkContainer::GetLinkSource</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleuilinkcontainer_getlinksource"></a>IOleUILinkContainer::GetLinkSource</h2>
<p>
Returns information about a link that can be displayed in the UI.</p>
<pre><code><b>HRESULT GetLinkSource(
  DWORD</b><i> dwLink</i><b>,                     </b>//Unique 32-bit link identifier
<b>  LPTSTR FAR*</b><i> lplpszDisplayName</i><b>,    </b>//Address of output variable that 
                                    // receives a pointer to the display 
                                    // name string
<b>  ULONG FAR*</b><i> lplenFileName</i><b>,         </b>//Pointer to length of file name 
                                    // portion
<b>  LPTSTR FAR*</b><i> lplpszFullLinkType</i><b>,   </b>//Address of output variable that 
                                    // receives a pointer to the full 
                                    // link type string
<b>  LPTSTR FAR*</b><i> lplpszShortLinkType</i><b>,  </b>//Address of output variable 
                                    // that receives a pointer to the 
                                    // short link type string
<b>  BOOL FAR*</b><i> lpfSourceAvailable</i><b>,     </b>//Pointer to availability of link
<b>  BOOL FAR*</b><i> lpfIsSelected           </i>//Pointer to indicate that link 
                                    // entry should be selected in listbox
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwLink</i></dt>
<dd>
[in] Container-defined unique 32-bit identifier for a single link. See <a href="if_o_2y97.htm"><b>IOleUILinkContainer::GetNextLink</b></a>.</dd>
<dt>
<i>lplpszDisplayName</i></dt>
<dd>
[out] Address of <b>LPTSTR</b> pointer variable that receives a pointer to the full display name string for the link source. The Links dialog box will free this string.</dd>
<dt>
<i>lplenFileName</i></dt>
<dd>
[out] Pointer to the length of the leading file name portion of the <i>lplpszDisplayName</i> string. If the link source is not stored in a file, then *<i>lplenFileName</i> should be 0. For OLE links, call <a href="if_o_0qat.htm"><b>IOleLink::GetSourceDisplayName</b></a>.</dd>
<dt>
<i>lplpszFullLinkType</i></dt>
<dd>
[out] Address of <b>LPTSTR</b> pointer variable that receives a pointer to the full link type string that is displayed at the bottom of the Links dialog box. The caller allocates this string. The Links dialog box will free this string. For OLE links, this should be the full User Type name. Use <a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a>, specifying USERCLASSTYPE_FULL for <i>dwFormOfType</i>.</dd>
<dt>
<i>lplpszShortLinkType</i></dt>
<dd>
[out] Address of <b>LPTSTR</b> pointer variable that receives a pointer to the short link type string that is displayed in the listbox of the Links dialog box. The caller allocates this string. The Links dialog box will free this string. For OLE links, this should be the short User Type name. Use <b>IOleObject::GetUserType</b>, specifying USERCLASSTYPE_SHORT for <i>dwFormOfType</i>.</dd>
<dt>
<i>lpfSourceAvailable</i></dt>
<dd>
[out] Pointer that returns FALSE if it is known that a link is unavailable since the link is to some known but unavailable document. Certain options, such as Update Now, are disabled (grayed in the UI) for such cases. </dd>
<dt>
<i>lpfIsSelected</i></dt>
<dd>
[out] Pointer to a BOOL variable that tells the Edit Links dialog box that this link's entry should be selected in the dialog's multi-selection listbox. <a href="api3_4yib.htm"><b>OleUIEditLinks</b></a> calls this method at least once for each item to be placed in the links list. If none of them return TRUE, then none of them will be selected when the dialog box is first displayed. If all of them return TRUE, then all will be displayed. That is, it returns TRUE if this link is currently part of the selection in the underlying document, FALSE if not. Any links that are selected in the underlying document are selected in the dialog box; this way, the user can select a set of links and use the dialog box to update them or change their source(s) simultaneously. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
This method supports the standard return values E_FAIL, </dt>
</dl>
<p>
E_INVALIDARG, and E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Successfully returned link information.</dd>
<dt>
E_ACCESSDENIED</dt>
<dd>
Insufficient access permissions. 
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes To Callers</h5>
<p>
Call this method during dialog box initialization, after returning from the Change Source dialog box. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oledlg.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_0qat.htm"><b>IOleLink::GetSourceDisplayName</b></a>, <a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a>, <a href="enums_5085.htm"><b>USERCLASSTYPE</b></a>, <a href="api3_3679.htm"><b>OleUIChangeSource</b></a>, <b><u>OLEUICHANGESOURCE</u></b>_com_OLEUICHANGESOURCE_str </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
