<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IStream::Commit</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_istream_commit"></a>IStream::Commit</h2>
<p>
Ensures that any changes made to a stream object open in transacted mode are reflected in the parent storage. If the stream object is open in direct mode, <b>IStream::Commit</b> has no effect other than flushing all memory buffers to the next level storage object. The COM compound file implementation of streams does not support opening streams in transacted mode.</p>
<pre><code><b>HRESULT Commit(
  DWORD</b><i> grfCommitFlags  </i>//Specifies how changes are committed
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>grfCommitFlags</i></dt>
<dd>
[in] Controls how the changes for the stream object are committed. See the <a href="enums_1ktf.htm"><b>STGC</b></a> enumeration for a definition of these values.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Changes to the stream object were successfully committed to the parent level.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the stream's data is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and <a href="asyncstg_86cl.htm">Asynchronous Storage</a>. </dd>
<dt>
STG_E_MEDIUMFULL</dt>
<dd>
The commit operation failed due to lack of space on the storage device.</dd>
<dt>
STG_E_REVERTED</dt>
<dd>
The object has been invalidated by a revert operation above it in the transaction tree.</dd>
</dl>
<h4>Remarks</h4>
<p>
This method ensures that changes to a stream object opened in transacted mode are reflected in the parent storage. Changes that have been made to the stream since it was opened or last committed are reflected to the parent storage object. If the parent is opened in transacted mode, the parent may still revert at a later time rolling back the changes to this stream object. The compound file implementation does not support opening streams in transacted mode, so this method has very little effect other than to flush memory buffers. For more information, refer to <a href="if_r2z_459q.htm"><b>IStream - Compound File Implementation</b></a>. </p>
<p>
If the stream is open in direct mode, this method ensures that any memory buffers have been flushed out to the underlying storage object. This is much like a flush in traditional file systems.</p>
<p>
The <b>IStream::Commit</b> method is useful on a direct mode stream when the implementation of the <a href="if_r2z_4x7x.htm"><b>IStream</b></a> interface is a wrapper for underlying file system APIs. In this case, <b>IStream::Commit</b> would be connected to the file system's flush call.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_459q.htm"><b>IStream - Compound File Implementation</b></a>, <a href="if_r2z_11h0.htm"><b>IStorage::Commit</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
