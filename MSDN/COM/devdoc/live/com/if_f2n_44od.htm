<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMoniker::Enum</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imoniker_enum"></a>IMoniker::Enum</h2>
<p>
Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.</p>
<pre><code><b>HRESULT Enum(
  BOOL</b><i> fForward</i><b>,  </b>//Specifies direction of enumeration
<b>  IEnumMoniker</b><i> **ppenumMoniker</i>
<i>                  </i>//Address of output variable that receives the 
                  //IEnumMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>fForward</i></dt>
<dd>
[in] If TRUE, enumerates the monikers from left to right. If FALSE, enumerates from right to left.</dd>
<dt>
<i>ppenumMoniker</i></dt>
<dd>
[out] Address of <b>IEnumMoniker</b>* pointer variable that receives the interface pointer to the enumerator object for the moniker. When successful, the implementation must call <a href="if_r2z_3rja.htm"><b>IUnknown::AddRef</b></a> on the enumerator object. It is the caller's responsibility to call <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>. If an error occurs or if the moniker has no enumerable components, the implementation sets *<i>ppenumMoniker</i> to NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The method supports the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Indicates success. This value is returned even if the moniker does not provide an enumerator (if <i>ppenumMoniker</i> equals NULL).
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IMoniker::Enum</b> must supply an <b>IEnumMoniker</b> pointer to an enumerator that can enumerate the components of a moniker. For example, the implementation of the <b>IMoniker::Enum</b> method for a generic composite moniker creates an enumerator that can determine the individual monikers that make up the composite, while the <b>IMoniker::Enum</b> method for a file moniker creates an enumerator that returns monikers representing each of the components in the path. </p>
<h5>Notes to Callers</h5>
<p>
Call this method to examine the components that make up a composite moniker.</p>
<h5>Notes to Implementers</h5>
<p>
If the new moniker class has no discernible internal structure, your implementation of this method can simply return S_OK and set <i>ppenumMoniker</i> to NULL. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_8yns.htm"><b>IEnum<i>XXXX</i></b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
