<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IClientSecurity::SetBlanket</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iclientsecurity_setblanket"></a>IClientSecurity::SetBlanket</h2>
<p>
Sets the authentication information (the security blanket) that will be used to make calls on the specified proxy. This overrides the process default settings for the specified proxy. Calling this method changes the security values for all other users of the specified proxy. </p>
<pre><code><b>HRESULT SetBlanket(
  IUnknown * </b><i>pProxy</i><b>,          </b>//Indicates the interface proxy whose
                              // authentication information will be set
<b>  DWORD </b><i> dwAuthnSvc</i><b>,          </b>//The authentication service to use
<b>  DWORD </b><i> dwAuthzSvc</i><b>,          </b>//The authorization service to use
<b>  OLECHAR *</b><i> pServerPrincName</i><b>, </b>//The server principal name to use with 
                              // the authentication service
<b>  DWORD </b><i> dwAuthnLevel</i><b>,        </b>//The authentication level to use
<b>  DWORD </b><i> dwImpLevel</i><b>,          </b>//The impersonation level to use
<b>  RPC_AUTH_IDENTITY_HANDLE  </b><i>pAuthInfo</i><b>,</b>
<b>                              </b>//The identity of the client
<b>  DWORD </b><i> dwCapabilities </i><b>     </b><i> </i>//The capability flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pProxy</i></dt>
<dd>
[in] Indicates the interface proxy to set.</dd>
<dt>
<i>dwAuthnSvc</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_22yg.htm"><b>RPC_C_AUTHN_<i>xxx</i></b></a> constants indicating the <i>authentication </i>service to use. It may be RPC_C_AUTHN_NONE if no authentication is required. If RPC_C_AUTHN_DEFAULT is specified, COM will pick an authentication service following its normal security blanket negotiation algorithm. </dd>
<dt>
<i>dwAuthzSvc</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_77js.htm"><b>RPC_C_AUTHZ_<i>xxx</i></b></a> constants indicating the <i>authorization </i>service to use. If RPC_C_AUTHZ_DEFAULT is specified, COM will pick an authorization service following its normal security blanket negotiation algorithm. If you are using RPC_C_AUTHN_WINNT, use RPC_C_AUTHZ_NONE.</dd>
<dt>
<i>pServerPrincName</i></dt>
<dd>
[in] Pointer to a WCHAR string that indicates the server principal name to use with the authentication service. If COLE_DEFAULT_PRINCIPAL is specified, COM will pick a principal name following its normal security blanket negotiation algorithm. For Windows NT 5.0, NTLMSSP supports the principal name on the same machine. If using Kerberos, this value must not be NULL. It must be the correct principal name of the server or calls to the server using this proxy will fail.  </dd>
<dt>
<i>dwAuthnLevel</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_3lo8.htm"><b>RPC_C_AUTHN_LEVEL_<i>xxx</i></b></a><b> </b>constants indicating the authentication level to use. If RPC_C_AUTHN_LEVEL_DEFAULT is specified, COM will pick an authentication level following its normal security blanket negotiation algorithm. If this value is set to RPC_C_AUTHN_LEVEL_NONE, the authentication service must be RPC_C_AUTHN_NONE. Each authentication service may choose to use a more secure authentication level than the one specified.</dd>
<dt>
<i>dwImpLevel</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_2jco.htm"><b>RPC_C_IMP_LEVEL_<i>xxx</i></b></a> constants indicating the impersonation level to use. If RPC_C_IMP_LEVEL_DEFAULT is specified, COM will pick an impersonation level following its normal security blanket negotiation algorithm. If you are using NTLMSSP remotely, this value must be RPC_C_IMP_LEVEL_IMPERSONATE or RPC_C_IMP_LEVEL_IDENTIFY. When using NTLMSSP on the same machine, RPC_C_IMP_LEVEL_DELEGATE is also supported. When using SSL, this value must be RPC_C_IMP_LEVEL_IMPERSONATE. For Kerberos, this value can be RPC_C_IMP_LEVEL_IDENTIFY, RPC_C_IMP_LEVEL_IMPERSONATE, or RPC_C_IMP_LEVEL_DELEGATE.</dd>
<dt>
<i>pAuthInfo</i></dt>
<dd>
[in] An RPC_AUTH_IDENTITY_HANDLE value that indicates the identity of the client. This parameter is not used for calls on the same machine. If <i>pAuthInfo</i> is NULL, COM uses the current proxy identity (which is either the process token, the impersonation token, or the authentication identity from <b>CoInitializeSecurity</b>). If the handle is not NULL, that identity is used. The format of the structure referred to by the handle depends on the provider of the authentication service. 
<p>
For NTLMSSP or Kerberos, the structure is a SEC_WINNT_AUTH_IDENTITY_W or SEC_WINNT_AUTH_IDENTITY_EXW (on NT 5) structure. The client must ensure that the memory pointed to by this parameter remains valid and unchanged until a different identity is set on the proxy or until all proxies on the object are released. 

<p>
For SSL, this value may be NULL or a CAPI (Crypto API) handle to a private certificate. If NULL is specified, the client is anonymous. If a CAPI handle is specified, the caller must not free it as long as any proxy to the object exists in the current apartment. 

<p>
When using Snego, this parameter will be NULL or a pointer to a SEC_WINNT_AUTH_IDENTITY_EXW structure. If NULL, Snego will pick a list of authentication services to try based on those available on the client machine. If non-Null, the PackageList member of the structure must point to a comma-separated list of authentication service names. If PackageList is NULL, all calls using Snego will fail. The PackageListLength member indicates the number of bytes in the PackageList string. 

<p>
If COLE_DEFAULT_AUTHINFO is specified, COM will pick the authentication information following its normal security blanket negotiation algorithm. 

<p>
<b>SetBlanket</b> will return an error if both <i>pAuthInfo</i> is set and one of the cloaking flags is set in <i>dwCapabilities</i>. 
</dd>
<dt>
<i>dwCapabilities</i></dt>
<dd>
[in] A DWORD defining flags that specify the capabilities of this proxy. Capability flags are defined in the <a href="enums_92k3.htm">EOLE_AUTHENTICATION_CAPABILITIES</a> enumeration. EOAC_NONE indicates no capability flags are set. EOAC_MUTUAL_AUTH is accepted, but has no effect. EOAC_ANY_AUTHORITY means COM will trust any SSL server certificate even if the top level certificate authority is not trusted. EOAC_DEFAULT means COM will pick the capabilities using its normal security blanket negotation algorithm. Either EOAC_STATIC_CLOAKING or EOAC_DYNAMIC_CLOAKING can be set if <i>pAuthInfo</i> is not set. (See <a href="comext_71lz.htm"><b>Cloaking</b></a> for more information). If any capability flags other than those mentioned here are indicated, <b>SetBlanket</b> will return an error.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Success.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more arguments is invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IClientSecurity::SetBlanket</b> sets the authentication information that will be used to make calls on the specified interface proxy. The values specified here override the values chosen by automatic security. Calling this method changes the security values for all other users of the specified proxy. If you want the changes to apply only to a particular instance of a proxy, call <a href="if_a2e_90qh.htm"><b>IClientSecurity::CopyProxy</b></a> to make a private copy of the proxy and then call <b>SetBlanket</b> on the copy.</p>
<p>
Whenever this method is called, DCOM will set the identity on the proxy, and future calls made using this proxy will use this identity. Calls in progress when <b>SetBlanket</b> is called will use the authentication information on the proxy at the time the call was started. If <i>pAuthInfo</i> is NULL, the proxy identity defaults to the current process token (unless an authentication identity was specified on a call to <b>CoInitializeSecurity</b>). See the <a href="comext_71lz.htm"><b>Cloaking</b></a> section to see how the cloaking flags affect the proxy when <i>pAuthInfo</i> is NULL.</p>
<p>
By default, COM will choose the first available authentication service and authorization service available on both the client and server machines and the principal name that the server registered for that authentication service. Currently, COM will not try another authentication service if the first fails. </p>
<p>
When the default constant for <i>dwImpLevel</i> is specified in <b>SetBlanket</b>, the parameter defaults to the value specified to <a href="api1_8ayh.htm"><b>CoInitializeSecurity</b></a>. If <b>CoInitializeSecurity</b> is not called, it defaults to RPC_C_IMP_LEVEL_IDENTIFY. </p>
<p>
The initial value for <i>dwAuthnLevel</i> on a proxy will be the higher of the value set on the client's call to <b>CoInitializeSecurity</b> and the server's call to <b>CoInitializeSecurity</b>. For any process that did not call <b>CoInitializeSecurity</b>, the default authentication level is RPC_C_AUTHN_CONNECT. </p>
<p>
The default authentication and impersonation level for processes that do not call <b>CoInitializeSecurity</b> can be set with DCOMCNFG. </p>
<p>
If EOAC_DEFAULT is specified for <i>dwCapabilities</i>, the valid capabilities from <b>CoInitializeSecurity</b> will be used. If <b>CoInitializeSecurity</b> was not called, EOAC_NONE will be used for the capabilities flag.  </p>
<p>
If <b>SetBlanket</b> is called simultaneously on two threads on the same proxy, only one set of changes will be applied. If <b>SetBlanket</b> and <b>CRpcOptions::Set</b> are called simultaneously on two threads on the same proxy, both changes may be applied or only one may be applied. </p>
<p>
Security information cannot be set on local interfaces such as the <b>IClientSecurity</b> interface. However, since that interface is only supported locally, there is no need for security. <a href="if_r2z_9dwu.htm"><b>IUnknown</b></a> and <a href="if_f2n_58a1.htm"><b>IMultiQI</b></a> are special cases. The location implementation makes remote calls to support these interfaces. <b>SetBlanket</b> can be used for <b>IUnknown</b>. <b>IMultiQI</b> will use the security settings on <b>IUnknown</b>. For more information, see <a href="comext_9ed5.htm"><b>IUnknown Security</b></a>.</p>
<p>
To change one <b>SetBlanket</b> parameter without having to deal with the others, one can specify the default constants for the other parameters. For example, on NT 5, the authentication service will generally be NTLMSSP on machine local proxies and Kerberos on machine remote proxies. Applications can change a parameter (such as the authentication level) and ignore the other parameters, including the authentication service, by setting all other parameters to the default constants. Note that it is important to set all unused parameters to the default constants because the default value is often not obvious. In particular, if you set the authentication service to the default, you should set the authentication information and principal name to the default. The reasons for this are twofold: First, the type of the authentication information depends on the authentication service DCOM chooses. Second, because DCOM needs to pass some complex authentication information for certain authentication services, if you set the authentication service to default and the authentication information to NULL, you may get a security setting that won't work.</p>
<p>
The default parameters for <b>SetBlanket</b> and the SSL protocol are only valid in Windows NT 5. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api1_9sj8.htm"><b>CoSetProxyBlanket</b></a>, <a href="api1_8hf8.htm"><b>CoQueryProxyBlanket</b></a>, <a href="enums_22yg.htm"><b>RPC_C_AUTHN_xxx</b></a>, <a href="enums_77js.htm"><b>RPC_C_AUTHZ_<i>xxx</i></b></a>, <a href="enums_3lo8.htm"><b>RPC_C_AUTHN_LEVEL_<i>xxx</i></b></a>, <a href="enums_2jco.htm"><b>RPC_C_IMP_LEVEL_<i>xxx</i></b></a>, <a href="comext_3bjg.htm"><b>Setting Security at the Interface Proxy Level</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
