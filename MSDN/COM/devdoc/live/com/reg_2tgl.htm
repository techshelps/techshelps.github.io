<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LocalService</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_localservice"></a>LocalService</h2>
<p>
Allows an object to be installed as a Win32 service. </p>
<h4>Registry Entry</h4>
<p>
<b>HKEY_LOCAL_MACHINE\SOFTWARE\Classes</b>\<b>APPID\<br>
</b>                                    <b>{</b><i>AppID_value</i><b>}\LocalService</b> = <i>service_name</i></p>
<h4>Remarks</h4>
<p>
In addition to running as a <i>local server</i> executable (EXE), a COM object may also choose to package itself to run as a Win32 service when activated by a local or remote client. Win32 services support numerous useful and UI-integrated administrative features, including local and remote starting, stopping, pausing, and restarting, as well as the ability to establish the server to run under a specific user account and Window Station, and optionally interactive with the desktop.</p>
<p>
An object written as a Win32 service is installed for use by COM by establishing a <b>LocalService</b> named-value under its <a href="reg_6vjt.htm"><b>CLSID</b></a> key and performing a standard service installation (refer to the Win32 documentation and the SECSVR distributed COM sample application for more information on writing, installing, and debugging Win32 services.). The <b>LocalService</b> named-value must be set to the service name – as configured in HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services – as the default REG_SZ value.</p>
<p>
Additionally, when <b>LocalService</b> is set, any string assigned to the named REG_SZ value, <a href="reg_9dv7.htm"><b>ServiceParameters</b></a>, will be passed on the command line to the service as it is being launched.</p>
<p>
For example, the following keys register the c:\mydb\mydb.exe executable to launch as the MyDatabase service when activated remotely. When launched as a service, the process receives "-Service" on its command-line.</p>
<pre><code>HKEY_CLASSES_ROOT\APPID\{c5b7ac20-523f-11cf-8117-00aa00389b71}\LocalService = MyDatabase
 
HKEY_CLASSES_ROOT\APPID\{c5b7ac20-523f-11cf-8117-00aa00389b71}\ServiceParameters = -Service
 </code></pre>
<p>
The service configuration is preferred in many situations where the capabilities of the local and remote service management APIs and user interface might be useful for the services that the object provides. For example, if the object is long-lived, or readily supports concepts such as starting, stopping, resetting, or pausing, leveraging the existing administrative framework of the service architecture should be an obvious choice.</p>
<p>
Services can be dynamically configured using the 'Services' application in the Control Panel, and can be configured to run automatically when the machine boots, or to be launched when requested by a client application. </p>
<p>
There are several additional points you should be aware of if you are implementing classes as services:
<ul>
<li>
The <b>LocalService</b> named-value is used in preference to the <a href="reg_95de.htm"><b>LocalServer32</b></a> key for local and remote activation requests – if <b>LocalService</b> exists and refers to a valid service, the <b>LocalServer32</b> key is ignored.</li>
<li>
Currently only a single instance of a Win32 service may be running at a given time on a machine. COM services must therefore register their class objects on launch using REGCLS_MULTIPLEUSE to support multiple clients.</li>
<li>
COM services configured to run automatically when a machine boots must include "RPCSS" in their list of dependent services in order to launch and initialize properly.</li>
<li>
Although services may be configured to interact with the interactive user, they are always run in a separate <i>window-station</i> and <i>desktop</i> from the interactive user. This prevents service processes from being automatically terminated when the interactive user logs off. </li>
</ul>
<h4>See Also</h4>
<p>
<a href="reg_9dv7.htm"><b>ServiceParameters</b></a>, <a href="comext_05pv.htm"><b>Registering COM Servers</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
