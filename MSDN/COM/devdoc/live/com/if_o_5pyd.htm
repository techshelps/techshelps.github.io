<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleUILinkContainer::SetLinkSource</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleuilinkcontainer_setlinksource"></a>IOleUILinkContainer::SetLinkSource</h2>
<p>
Changes the source of a link. </p>
<pre><code><b>HRESULT SetLinkSource(
  DWORD</b><i> dwLink</i><b>,         </b>//Unique 32-bit link identifier
<b>  LPTSTR</b><i> lpszDisplayName</i><b>,  </b>//Pointer to source string to parse
<b>  ULONG FAR*</b><i> lenFileName</i><b>,  </b>//Length of the file name portion
<b>  ULONG FAR*</b><i> pchEaten</i><b>,  </b>//Pointer to number of characters 
                        // successfully parsed
<b>  BOOL</b><i> fValidateSource  </i>//Specifies whether moniker should be 
                        // validated
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwLink</i></dt>
<dd>
[in] Container-defined unique 32-bit identifier for a single link. See <b>IOleUILinkContainer::GetNextLink</b> .</dd>
<dt>
<i>lpszDisplayName</i></dt>
<dd>
[in] Pointer to new source string to be parsed.</dd>
<dt>
<i>lenFileName</i></dt>
<dd>
Length of the leading file name portion of the <i>lpszDisplayName</i> string. If the link source is not stored in a file, then <i>lenFileName</i> should be 0. For OLE links, call <b>IOleLink::GetSourceDisplayName</b>.</dd>
<dt>
<i>pchEaten</i></dt>
<dd>
[out] Pointer to the number of characters successfully parsed in <i>lpszDisplayName</i>.</dd>
<dt>
<i>fValidateSource</i></dt>
<dd>
[in] TRUE if the moniker should be validated; for OLE links, <a href="api2_8hb9.htm"><b>MkParseDisplayName</b></a> should be called. FALSE if the moniker should not be validated. If possible, the link should accept the unvalidated source, and mark itself as unavailable.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
This method supports the standard return values E_FAIL, </dt>
</dl>
<p>
E_INVALIDARG, and E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Successfully changed the links source. </dd>
<dt>
E_ACCESSDENIED</dt>
<dd>
Insufficient access permissions. 
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes To Callers</h5>
<p>
Call this method from the Change Source dialog box, with <i>fValidateSource</i> initially set to TRUE. Change Source can be called directly or from the Links dialog box. If this call to <b>SetLinkSource</b> returns an error (e.g., <a href="api2_8hb9.htm"><b>MkParseDisplayName</b></a> failed because the source was unavailable), then you should display an Invalid Link Source message, and the user should be allowed to decide whether or not to fix the source. If the user chooses to fix the source, then the user should be returned to the Change Source dialog box with the invalid portion of the input string highlighted. If the user chooses not to fix the source, then <b>SetLinkSource</b> should be called a second time with <i>fValidateSource</i> set to FALSE, and the user should be returned to the Links dialog box with the link marked Unavailable.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oledlg.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_8hb9.htm"><b>MkParseDisplayName</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
