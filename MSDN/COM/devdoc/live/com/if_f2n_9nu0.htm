<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMoniker::CommonPrefixWith</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imoniker_commonprefixwith"></a>IMoniker::CommonPrefixWith</h2>
<p>
Creates a new moniker based on the common prefix that this moniker (the one comprising the data of this moniker object) shares with another moniker.</p>
<pre><code><b>HRESULT CommonPrefixWith(
  IMoniker</b><i> *pmkOther</i><b>,    </b>//Pointer to moniker to be used for 
                         //comparison
<b>  IMoniker</b><i> **ppmkPrefix  </i>//Address of output variable that receives 
                         //the IMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pmkOther</i></dt>
<dd>
[in] Pointer to the <b>IMoniker</b> interface on another moniker to be compared with this one to determine whether there is a common prefix.</dd>
<dt>
<i>ppmkPrefix</i></dt>
<dd>
[out] Address of <b>IMoniker</b>* pointer variable that receives the interface pointer to the moniker that is the common prefix of this moniker and <i>pmkOther</i>. When successful, the implementation must call <a href="if_r2z_3rja.htm"><b>IUnknown::AddRef</b></a> on the resulting moniker; it is the caller's responsibility to call <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>. If an error occurs or if there is no common prefix, the implementation should set *<i>ppmkPrefix</i> to NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
The method supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
A common prefix exists that is neither this moniker nor <i>pmkOther</i>.</dd>
<dt>
MK_S_NOPREFIX</dt>
<dd>
No common prefix exists.</dd>
<dt>
MK_S_HIM</dt>
<dd>
The entire <i>pmkOther</i> moniker is a prefix of this moniker.</dd>
<dt>
MK_S_US</dt>
<dd>
The two monikers are identical.</dd>
<dt>
MK_S_ME</dt>
<dd>
This moniker is a prefix of the <i>pmkOther</i> moniker.</dd>
<dt>
MK_E_NOTBINDABLE</dt>
<dd>
This method was called on a relative moniker. It is not meaningful to take the common prefix on a relative moniker.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IMoniker::CommonPrefixWith</b> creates a new moniker that consists of the common prefixes of the moniker on this moniker object and another moniker. If, for example, one moniker represents the path "c:\projects\secret\art\pict1.bmp" and another moniker represents the path "c:\projects\secret\docs\chap1.txt," the common prefix of these two monikers would be a moniker representing the path "c:\projects\secret."</p>
<h5>Notes to Callers</h5>
<p>
The <b>IMoniker::CommonPrefixWith</b> method is primarily called in the implementation of the <a href="if_f2n_30j3.htm"><b>IMoniker::RelativePathTo</b></a> method. Clients using a moniker to locate an object rarely need to call this method.</p>
<p>
Call this method only if <i>pmkOther</i> and this moniker are both absolute monikers. An absolute moniker is either a file moniker or a generic composite whose leftmost component is a file moniker that represents an absolute path. Do not call this method on relative monikers, because it would not produce meaningful results.</p>
<h5>Notes to Implementers</h5>
<p>
Your implementation should first determine whether <i>pmkOther</i> is a moniker of a class that you recognize and for which you can provide special handling (for example, if it is of the same class as this moniker). If so, your implementation should determine the common prefix of the two monikers. Otherwise, it should pass both monikers in a call to the <a href="api2_9l2g.htm"><b>MonikerCommonPrefixWith</b></a> function, which correctly handles the generic case. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_30j3.htm"><b>IMoniker::RelativePathTo</b></a>, <a href="api2_9l2g.htm"><b>MonikerCommonPrefixWith</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
