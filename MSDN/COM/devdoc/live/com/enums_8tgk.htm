<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BINDSPEED</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_bindspeed"></a>BINDSPEED</h1>
<p>
The <b>BINDSPEED</b> enumeration values indicate approximately how long the caller will wait to bind to an object. Callers of the <a href="if_o_9gz8.htm"><b>IOleItemContainer::GetObject</b></a> method specify values from this enumeration, and implementers of that method use these values as a guideline for how quickly they must complete their operation. </p>
<pre><code>typedef enum tagBINDSPEED 
{ 
    BINDSPEED_INDEFINITE   = 1, 
    BINDSPEED_MODERATE     = 2, 
    BINDSPEED_IMMEDIATE    = 3 
} BINDSPEED; 
 </code></pre>
<h4>Elements</h4>
<dl>
<dt>
BINDSPEED_INDEFINITE</dt>
<dd>
There is no time limit on the binding operation. </dd>
<dt>
BINDSPEED_MODERATE</dt>
<dd>
The <b>IOleItemContainer::GetObject</b> operation must be completed in a moderate amount of time. If this flag is specified, the implementation of <b>IOleItemContainer::GetObject</b> should return MK_E_EXCEEEDEDDEADLINE unless the object is one of the following:
<ul>
<li>
Already in the running state</li>
<li>
A pseudo-object (i.e., an object internal to the item container, such as a cell-range in a spreadsheet or a character-range in a word processor).</li>
<li>
An object supported by an in-process server (so it is always in the running state when it is loaded). In this case, <b>IOleItemContainer::GetObject</b> should load the designated object, and, if the <a href="api3_57fr.htm"><b>OleIsRunning</b></a> function indicates that the object is running, return successfully. </li>
</ul>
</dd>
<dt>
BINDSPEED_IMMEDIATE</dt>
<dd>
The caller will wait only a short time. In this case, <b>IOleItemContainer::GetObject</b> should return MK_E_EXCEEEDEDDEADLINE unless the object is already in the running state or is a pseudo-object.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The system-supplied item moniker implementation is the primary caller of <b>IOleItemContainer::GetObject</b>. The <b>BINDSPEED</b> value that it specifies depends on the deadline specified by the caller of the moniker operation. </p>
<p>
The deadline is stored in the <i>dwTickCountDeadline</i> field of the <a href="structs_2b1v.htm"><b>BIND_OPTS</b></a> structure in the bind context passed to the moniker operation. This value is based on the return value of the <b>GetTickCount</b> function. If <i>dwTickCountDeadline</i> is zero, indicating no deadline, the item moniker implementation specifies BINDSPEED_INDEFINITE. (This is the default <i>dwTickCountDeadline</i> value for a bind context returned by the <a href="api2_0ad4.htm"><b>CreateBindCtx</b></a> function.) If the difference between <i>dwTickCountDeadline</i> and the value returned by the <b>GetTickCount</b> function is greater than 2500, the item moniker implementation specifies BINDSPEED_MODERATE. If the difference is less than 2500, the item moniker implementation specifies BINDSPEED_IMMEDIATE. </p>
<p>
Implementations of <b>IOleItemContainer::GetObject</b> can use the <b>BINDSPEED</b> value as a shortcut approximation of the binding deadline, or they can use the <a href="if_a2e_06bc.htm"><b>IBindCtx</b></a> instance parameter to determine the exact deadline.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 3.1 and later. <br>
&nbsp;&nbsp;<b>Windows:</b> Use Windows 95 and later. <br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="structs_2b1v.htm"><b>BIND_OPTS</b></a>, <a href="if_a2e_3mur.htm"><b>IBindCtx::GetBindOptions</b></a>, <a href="if_o_9gz8.htm"><b>IOleItemContainer::GetObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
