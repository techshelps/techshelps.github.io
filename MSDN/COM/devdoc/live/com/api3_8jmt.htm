<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleNoteObjectVisible</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olenoteobjectvisible"></a>OleNoteObjectVisible</h1>
<p>
Increments or decrements an external reference that keeps an object in the running state.</p>
<pre><code><b>WINOLEAPI OleNoteObjectVisible(
  LPUNKNOWN</b><i> pUnknown</i><b>,  </b>//Pointer to the interface on the object in 
                       // question
<b>  BOOL</b><i> fVisible        </i>//Whether object is visible
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pUnknown</i></dt>
<dd>
[in] Pointer to the <a href="if_r2z_9dwu.htm"><b>IUnknown</b></a> interface on the object that is to be locked or unlocked.</dd>
<dt>
<i>fVisible</i></dt>
<dd>
[in] Whether the object is visible. If TRUE, OLE increments the reference count to hold the object visible and alive regardless of external or internal <b>IUnknown::AddRef</b> and <b>IUnknown::Release</b> operations, registrations, or revocation. If FALSE, OLE releases its hold (decrements the reference count) and the object can be closed.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_INVALIDARG, E_OUTOFMEMORY and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Indicates the object was successfully locked or unlocked.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> OleNoteObjectVisible </b>function calls the <a href="api1_5ajw.htm"><b>CoLockObjectExternal</b></a> function. It is provided as a separate function to reinforce the need to lock an object when it becomes visible to the user and to release the object when it becomes invisible. This creates a strong lock on behalf of the user to ensure that the object cannot be closed by its container while it is visible.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_5ajw.htm"><b>CoLockObjectExternal</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
