<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleCreateEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olecreateex"></a>OleCreateEx</h1>
<p>
Extends <a href="api3_6y5h.htm"><b>OleCreate</b></a> functionality by supporting more efficient instantiation of objects in containers requiring caching of multiple presentation formats or data, instead of the single format supported by <b>OleCreate</b>.</p>
<pre><code><b>HRESULT OleCreateEx(
  REFCLSID</b><i> rclsid</i><b>,        </b>//Class of object to create
<b>  REFIID</b><i> riid</i><b>,            </b>//Reference to the identifier of the 
                          // interface of object to return
<b>  DWORD</b><i> dwFlags</i><b>,          </b>//Value from <a href="enums_3vl9.htm">OLECREATE</a> 
                          // enumeration
<b>  DWORD</b><i> renderopt</i><b>,        </b>//Value from <a href="enums_38s2.htm">OLERENDER</a> 
                          // enumeration
<b>  ULONG</b><i> cFormats</i><b>,         </b>//Number of <a href="structs_14v7.htm">FORMATETC</a> 
                          // structures in <i>rgFormatEtc</i>
<b>  DWORD</b><i> rgAdvf</i><b>,           </b>//Points to an array of <i>cFormats</i> DWORD 
                          // elements
<b>  LPFORMATETC</b><i> rgFormatEtc</i><b>,  </b>//Points to an array of <i>cFormats</i> 
                            // FORMATETC structures; NULL otherwise
<b>  LPADVISESINK</b><i> pAdviseSink</i><b>,  </b>//<a href="if_a2e_6pnv.htm">IAdviseSink</a> pointer 
                             // (custom caching); NULL (default 
                             // caching); NULL otherwise
<b>  DWORD*</b><i> rgdwConnection</i><b>,  </b>//Location to return array of <i>dwConnection</i> 
                          // values
<b>  LPOLECLIENTSITE</b><i> pClientSite</i><b>,</b>
<b>                          </b>//Pointer to the primary interface the 
                          // object will use to request services
<b>  LPSTORAGE</b><i> pStg</i><b>,         </b>//Pointer to storage to use for object
<b>  LPVOID FAR*</b><i> ppvObj      </i>//Address of output variable that receives 
                          // the interface pointer requested in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>rclsid</i></dt>
<dd>
Identifies the class of the object to create. </dd>
<dt>
<i>riid</i></dt>
<dd>
Reference to the identifier of the interface of the object to return.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Value taken from the <b>OLECREATE</b> enumeration.</dd>
<dt>
<i>renderopt</i></dt>
<dd>
Value taken from the <b>RENDEROPT</b> enumeration.</dd>
<dt>
<i>cFormats</i></dt>
<dd>
When <i>renderopt</i> is OLERENDER_FORMAT, indicates the number of <b>FORMATETC</b> structures in the <i>rgFormatEtc</i> array, which must be at least one. In all other cases, this parameter must be zero.</dd>
<dt>
<i>rgAdvf</i></dt>
<dd>
When <i>renderopt</i> is OLERENDER_FORMAT, points to an array of <i>cFormats</i> DWORD elements, each of which is a combination of values from the <a href="enums_923q.htm"><b>ADVF</b></a> enumeration. Each element of this array is passed in as the <i>advf</i> parameter to a call to either <a href="if_o_0med.htm"><b>IOleCache::Cache</b></a> or <b>IDataObject::DAdvise</b>, depending on whether <i>pAdviseSink</i> is NULL or non-NULL (see below). In all other cases, this parameter must be NULL.</dd>
<dt>
<i>rgFormatEtc</i></dt>
<dd>
When <i>renderopt</i> is OLERENDER_FORMAT, points to an array of <i>cFormats</i> <b>FORMATETC</b> structures. When <i>pAdviseSink</i> is NULL, each element of this array is passed as the <i>pFormatEtc</i> parameter to a call to the object's <b>IOleCache::Cache</b>. This populates the data and presentation cache managed by the objects in-process handler (typically the default handler) with presentation or other cacheable data. When <i>pAdviseSink</i> is non-NULL, each element of this array is passed as the <i>pFormatEtc</i> parameter to a call to <a href="if_a2e_376t.htm"><b>IDataObject::DAdvise</b></a>. This allows the caller (typically an OLE Container) to do its own caching or processing of data received from the object. In all other cases, this parameter must be NULL.</dd>
<dt>
<i>pAdviseSink</i></dt>
<dd>
When <i>renderopt</i> is OLERENDER_FORMAT, may be either a valid <b>IAdviseSink </b>pointer, indicating custom caching or processing of data advises, or NULL, indicating default caching of data formats. In all other cases, this parameter must be NULL.</dd>
<dt>
<i>rgdwConnection</i></dt>
<dd>
Location to return the array of <i>dwConnection</i> values returned when the <i>pAdviseSink</i> interface is registered for each advisory connection using <b>IDataObject::DAdvise</b>, or NULL if the returned advisory connections are not needed. Must be NULL, if <i>pAdviseSink</i> is NULL.</dd>
<dt>
<i>pClientSite</i></dt>
<dd>
Pointer to the primary interface through which the object will request services from its container. This parameter may be NULL, in which case it is the caller's responsibility to establish the client site as soon as possible using <a href="if_o_771h.htm"><b>IOleObject::SetClientSite</b></a>.</dd>
<dt>
<i>pStg</i></dt>
<dd>
Pointer to the storage to use for the object and any default data or presentation caching established for it. This parameter may not be NULL.</dd>
<dt>
<i>ppvObj</i></dt>
<dd>
Address of output pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObj</i> contains the requested interface pointer on the newly created object.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_INVALIDARG, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Success.</dd>
<dt>
E_NOINTERFACE</dt>
<dd>
The object does not support the <i>riid </i>interface.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The following call to <b>OleCreate</b>:</p>
<pre><code>OleCreate(rclsid, riid, renderopt, pFormatEtc, pClientSite, pStg, ppvObj);
 </code></pre>
<p>
is equivalent to the following call to <b>OleCreateEx</b>:</p>
<pre><code>DWORD    advf = ADVF_PRIMEFIRST;
    OleCreateEx(rclsid, riid, renderopt, 1, &amp;advf, pFormatEtc, NULL, pClientSite, pStg, ppvObj);
 </code></pre>
<p>
Existing instantiation functions, (<a href="api3_6y5h.htm"><b>OleCreate</b></a>, <a href="api3_3eg5.htm"><b>OleCreateFromFile</b></a>, <a href="api3_1h0h.htm"><b>OleCreateFromData</b></a>, <a href="api3_0n3f.htm"><b>OleCreateLink</b></a>, <a href="api3_5v51.htm"><b>OleCreateLinkToFile</b></a>, and <a href="api3_0dsx.htm"><b>OleCreateLinkFromData</b></a>) create only a single presentation or data format cache in the default cache location (within the '\001OlePresXXX' streams of the passed-in <a href="if_r2z_9b8l.htm"><b>IStorage</b></a>), during instantiation. Plus, these caches must be created when the object next enters the running state. Since most applications require caching at least two presentations (screen and printer) and may require caching data in a different format or location from the handler, applications must typically launch and shut down the object server multiple times in order to prime their data caches during object creation, i.e., Insert Object, Insert Object from File, and Paste Object.</p>
<p>
Extended versions of these creation functions solve this problem. <b>OleCreateEx</b>, <a href="api3_21bs.htm"><b>OleCreateFromFileEx</b></a>, <a href="api3_1ut4.htm"><b>OleCreateFromDataEx</b></a>, <a href="api3_7ttk.htm"><b>OleCreateLinkEx</b></a>, <a href="api3_354o.htm"><b>OleCreateLinkToFileEx</b></a>, and <a href="api3_0n5k.htm"><b>OleCreateLinkFromDataEx</b></a> contain the following new parameters: <i>dwFlags</i> to indicate additional options, <i>cFormats</i> to indicate how many formats to cache, <i>rgAdvf</i>, from the <a href="enums_923q.htm"><b>ADVF</b></a> enumeration, to specify the advise flags for each format to be cached, <i>pAdviseSink</i> to indicate whether presentation (default-handler) or data (non-default-handler) caching is required, <i>rgdwConnection</i> to return <b>IDataObject::DAdvise</b> cookies, and <i>pFormatEtc</i>, an array of formats rather than a single format. </p>
<p>
Containers requiring that multiple presentations be cached on their behalf by the object's handler can simply call these functions and specify the number of formats in <i>cFormats</i>, the <b>ADVF</b> flags for each format in <i>rgAdvf</i>, and the set of formats in <i>pFormatEtc</i>. These containers pass NULL for <i>pAdviseSink</i>.</p>
<p>
Containers performing all their own data- or presentation-caching perform these same steps, but pass a non-NULL <i>pAdviseSink</i>. They perform their own caching or manipulation of the object or data during <a href="if_a2e_2tgl.htm"><b>IAdviseSink::OnDataChange</b></a>. Typically such containers never establish the advisory connections with ADVF_NODATA, although they are not prevented from doing so.</p>
<p>
These new functions are for OLE Compound Documents. Using these functions, applications can avoid the repeated launching and initialization steps required by the current functions. They are targeted at OLE Compound Document container applications that use default data- and presentation-caching, and also at applications that provide their own caching and data transfer from the underlying <b>IDataObject::DAdvise</b> support.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api3_6y5h.htm"><b>OleCreate</b></a>, <a href="if_o_0med.htm"><b>IOleCache::Cache</b></a>, <a href="if_a2e_376t.htm"><b>IDataObject::DAdvise</b></a>, <a href="if_o_771h.htm"><b>IOleObject::SetClientSite</b></a>, <a href="if_a2e_2tgl.htm"><b>IAdviseSink::OnDataChange</b></a>, <a href="if_r2z_9b8l.htm"><b>IStorage</b></a>, <a href="enums_38s2.htm"><b>OLERENDER</b></a>, <a href="structs_14v7.htm"><b>FORMATETC</b></a>, <a href="enums_923q.htm"><b>ADVF</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
