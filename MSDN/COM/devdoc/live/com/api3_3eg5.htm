<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleCreateFromFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olecreatefromfile"></a>OleCreateFromFile</h1>
<p>
Creates an embedded object from the contents of a named file.</p>
<pre><code><b>WINOLEAPI OleCreateFromFile(
  REFCLSID</b><i> rclsid</i><b>,         </b>//Reserved. Must be CLSID_NULL
<b>  LPCOLESTR</b><i> lpszFileName</i><b>,  </b>//Pointer to full path of file used to 
                           // create object
<b>  REFIID</b><i> riid</i><b>,             </b>//Reference to the identifier of the 
                           // interface to be used to communicate with 
                           // new object
<b>  DWORD</b><i> renderopt</i><b>,         </b>//Value from OLERENDER
<b>  LPFORMATETC</b><i> pFormatEtc</i><b>,  </b>//Pointer to the FORMATETC structure
<b>  LPOLECLIENTSITE</b><i> pClientSite</i><b>,</b>
<b>                           </b>//Pointer to an interface
<b>  LPSTORAGE</b><i> pStg</i><b>,          </b>//Pointer tothe interface to be used as 
                           // object storage
<b>  LPVOID FAR*</b><i> ppvObj       </i>//Address of output variable that 
                           // receives the interface pointer requested 
                           // in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>rclsid</i></dt>
<dd>
[in] Reserved. Must be CLSID_NULL.</dd>
<dt>
<i>lpszFileName</i></dt>
<dd>
[in] Pointer to a string specifying the full path of the file from which the object should be initialized.</dd>
<dt>
<i>riid</i></dt>
<dd>
[in] Reference to the identifier of the interface the caller later uses to communicate with the new object (usually <b>IID_IOleObject</b>, defined in the OLE headers as the interface ID of <b>IOleObject</b>).</dd>
<dt>
<i>renderopt</i></dt>
<dd>
[in] Value from the enumeration<b> <a href="enums_38s2.htm">OLERENDER</a></b> that indicates the locally cached drawing or data-retrieval capabilities the newly created object is to have. The <b>OLERENDER </b>value chosen affects the possible values for the <i>pFormatEtc</i> parameter.</dd>
<dt>
<i>pFormatEtc</i></dt>
<dd>
[in] Depending on which of the <b>OLERENDER</b> flags is used as the value of <i>renderopt</i>, pointer to one of the <a href="structs_14v7.htm"><b>FORMATETC</b></a> enumeration values. Refer also to the <b>OLERENDER</b> enumeration for restrictions.</dd>
<dt>
<i>pClientSite</i></dt>
<dd>
[in] Pointer to an instance of <b>IOleClientSite</b>, the primary interface through which the object will request services from its container. May be NULL.</dd>
<dt>
<i>pStg</i></dt>
<dd>
[in] Pointer to the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> interface on the storage object. This parameter may not be NULL.</dd>
<dt>
<i>ppvObj</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObj</i> contains the requested interface pointer on the newly created object.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Embedded object successfully created.</dd>
<dt>
STG_E_FILENOTFOUND</dt>
<dd>
File not bound.</dd>
<dt>
OLE_E_CANT_BINDTOSOURCE</dt>
<dd>
Not able to bind to source.</dd>
<dt>
STG_E_MEDIUMFULL</dt>
<dd>
The medium is full.</dd>
<dt>
DV_E_TYMED</dt>
<dd>
Invalid <a href="enums_986c.htm">TYMED</a>.</dd>
<dt>
DV_E_LINDEX</dt>
<dd>
Invalid LINDEX.</dd>
<dt>
DV_E_FORMATETC</dt>
<dd>
Invalid <a href="structs_14v7.htm"><b>FORMATETC</b></a> structure.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>OleCreateFromFile</b> function creates a new embedded object from the contents of a named file. If the ProgID in the registration database contains the PackageOnFileDrop key, it creates a package. If not, the function calls the <a href="api2_209x.htm"><b>GetClassFile</b></a> function to get the CLSID associated with the <i>lpszFileName</i> parameter, and then creates an OLE 2-embedded object associated with that CLSID. The <i>rclsid</i> parameter of <b>OleCreateFromFile</b> will always be ignored, and should be set to CLSID_NULL.</p>
<p>
As for other <b>OleCreate</b><i>Xxx</i> functions, the newly created object is not shown to the user for editing, which requires a <b>DoVerb</b> operation. It is used to implement insert file operations, such as the Create from File command in Word for Windows.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api2_209x.htm"><b>GetClassFile</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
