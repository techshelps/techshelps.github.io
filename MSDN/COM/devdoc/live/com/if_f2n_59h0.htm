<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMarshal::DisconnectObject</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imarshal_disconnectobject"></a>IMarshal::DisconnectObject</h2>
<p>
Forcibly releases all external connections to an object. The object's server calls the object's implementation of this method prior to shutting down.</p>
<pre><code><b>HRESULT DisconnectObject(
  DWORD</b><i> dwReserved  </i>//Reserved for future use
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>dwReserved</i></dt>
<dd>
[in] Reserved for future use; must be zero. To ensure compatibility with future use, <b>DisConnectObject</b> <i>must not</i> check for zero.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The method supports the standard return value E_FAIL, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The object was disconnected successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method is implemented on the object, not the proxy.</p>
<h5>Notes to Callers</h5>
<p>
The usual case in which this method is called occurs when an end user forcibly closes a COM server that has one or more running objects that implement <a href="if_f2n_6sh8.htm"><b>IMarshal</b></a>. Prior to shutting down, the server calls the <a href="api1_4mk4.htm"><b>CoDisconnectObject</b></a> helper function to sever external connections to <i>all</i> its running objects. For each object that implements <b>IMarshal</b>, however, this function calls <a href="#_com_imarshal_disconnectobject"><b>IMarshal::DisconnectObject</b></a>, so that each object that manages its own marshaling can take steps to notify its proxy that it is about to shut down.</p>
<h5>Notes to Implementers</h5>
<p>
As part of its normal shutdown code, a server should call the <b>CoDisconnectObject</b> function, which in turn calls <b>IMarshal::DisconnectObject</b>, on each of its running objects that implements <b>IMarshal</b>.</p>
<p>
The outcome of any implementation of this method should be to enable a proxy to respond to all subsequent calls from its client by returning RPC_E_DISCONNECTED or CO_E_OBJECTNOTCONNECTED rather than attempting to forward the calls on to the original object. It is up to the client, of course, to destroy the proxy.</p>
<p>
If you are implementing this method for an immutable object, such as a moniker, your implementation doesn't need to do anything because such objects are typically copied whole into the client's address space. Therefore, they have neither a proxy nor a connection to the original object. For more information on marshaling immutable objects, see <b>IMarshal</b>, "When to Implement."</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api1_4mk4.htm"><b>CoDisconnectObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
