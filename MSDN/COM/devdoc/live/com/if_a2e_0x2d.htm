<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IBindStatusCallback::OnDataAvailable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ibindstatuscallback_ondataavailable"></a>IBindStatusCallback::OnDataAvailable</h2>
<p>
An asynchronous moniker calls this method to provide data to the client as it becomes available during asynchronous bind operations.</p>
<pre><code><b>HRESULT OnDataAvailable(
  DWORD </b><i> grfBSCF</i><b>,     </b>//BSCF enumeration values
<b>  DWORD </b><i> dwSize</i><b>,      </b>//Length of data in bytes available from 
                      // current bind operation
<b>  FORMATETC</b><i> *pfmtetc</i><b>, </b>//Pointer to FORMATETC structure
<b>  STGMEDIUM</b><i> *pstgmed  </i>//Pointer to STGMEDIUM structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>grfBSCF</i></dt>
<dd>
[in] <b>DWORD v</b>alue taken from the <b>BSCF</b> enumeration indicating the kind of data available.</dd>
<dt>
<i>dwSize</i></dt>
<dd>
[in] Size in bytes of total data available from the current bind operation.</dd>
<dt>
<i>pfmtetc</i></dt>
<dd>
[in] Pointer to the <b>FORMATETC</b> structure that indicates the format of the available data. This parameter is used when the bind operation is a result of <b>IMoniker::BindToStorage</b>. If there is no format associated with the available data, <i>pfmtetc</i> may contain CF_NULL. Each different call to <b>OnDataAvailable</b> may pass in a new value for this parameter, although they all should always point to the same data.</dd>
<dt>
<i>pstgmed</i></dt>
<dd>
[in] Pointer to the <b>STGMEDIUM</b> structure that holds the actual data that is now available. This parameter is used when called as a result of <b>IMoniker::BindToStorage</b>. Each different call to <b>OnDataAvailable</b> will pass in a new value for this parameter, and clients should use each new value as it is available. If the client wishes to keep the data in <i>pstgmed </i>alive, the client should call <b>AddRef</b> on <i>pstgmed-&gt;pUnkForRelease </i>(if the pointer is non-NULL) and eventually use the <b>ReleaseStgMedium</b> function to release the storage. Note that <i>pstgmed</i>-&gt;<i>pUnkForRelease</i> may be NULL indicating that the storage medium cannot be kept alive. For example, this will be the case when using URL monikers to download data that is not being cached.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The operation was successful.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more parameters are invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
During asynchronous <b>IMoniker::BindToStorage</b> bind operations, an asynchronous moniker calls this method to provide data to the client as it becomes available.</p>
<p>
Note that the behavior of the storage returned in <i>pstgmed</i> depends on the <b>BINDF</b> flags returned in <a href="if_a2e_5njj.htm"><b>IBindStatusCallback::GetBindInfo</b></a>. This storage can be asynchronous or blocking, and the bind operation can follow a data pull model or a data push model. Furthermore, it is important to note that for <b>BINDF_PULLDATA</b> bind operations, it is not possible to seek backwards into data streams provided in <b>IBindStatusCallback::OnDataAvailable</b>. On the other hand, for data push model bind operations, it is commonly possible to seek back into a data stream and read any data that has been downloaded for an ongoing <b>IMoniker::BindToStorage</b> operation.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in urlmon.h.</p>
<h4>See Also</h4>
<p>
<a href="enums_6q1y.htm"><b>BINDF</b></a>, <a href="enums_5yue.htm"><b>BSCF</b></a>, <a href="if_a2e_5njj.htm"><b>IBindStatusCallback::GetBindInfo</b></a>, <a href="#_com_ibindstatuscallback_ondataavailable"><b>IBindStatusCallback::OnDataAvailable</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
