<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoQueryClientBlanket</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_coqueryclientblanket"></a>CoQueryClientBlanket</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Called by the server to find out about the client that invoked the method executing on the current thread.</p>
<pre><code><b>HRESULT CoQueryClientBlanket(
  DWORD*</b><i> pAuthnSvc</i><b>, </b>//Pointer to the current authentication service
<b>  DWORD*</b><i> pAuthzSvc</i><b>, </b>//Pointer to the current authorization service
<b>  OLECHAR **</b><i> pServerPrincName</i><b>,</b>
<b>                    </b>//Pointer to the current principal name
<b>  DWORD *</b><i> pAuthnLevel</i><b>,</b>
<b>                    </b>//Pointer to the current authentication level
<b>  DWORD *</b><i> pImpLevel</i><b>,</b>
<b>                    </b>//Reserved for future use; must be NULL
<b>  RPC_AUTHZ_HANDLE *</b><i> pPrivs</i><b>,</b>
<b>                    </b>//Pointer to handle to privilege information
<b>  DWORD **</b><i> pCapabilities</i>
<i>                    </i>//Pointer to flags indicating further 
                    // capabilities of the proxy
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pAuthnSvc</i></dt>
<dd>
[out] Pointer to a DWORD value defining the current <i>authentication</i> service. This will be a single value taken from the list of <a href="enums_22yg.htm"><b>RPC_C_AUTHN_<i>xxx</i></b></a> constants. May be NULL, in which case the current authentication service is not returned.</dd>
<dt>
<i>pAuthzSvc</i></dt>
<dd>
[out] Pointer to a DWORD value defining the current <i>authorization </i>service. This will be a single value taken from the list of <a href="enums_77js.htm"><b>RPC_C_AUTHZ_<i>xxx</i></b></a> constants. May be NULL, in which case the current authorization service is not returned.</dd>
<dt>
<i>pServerPrincName</i></dt>
<dd>
[out] Pointer to the current principal name. The string will be allocated by the callee using <a href="api1_9bj7.htm"><b>CoTaskMemAlloc</b></a> and must be freed by the caller using <a href="api1_63l1.htm"><b>CoTaskMemFree</b></a> when they are done with it. May be NULL, in which case the principal name is not returned. By default, SSL principal names will be in the msstd form. The fullsic form will be returned if EOAC_MAKE_FULLSIC is specified in the <i>pCapabilities</i> parameter. For more information on msstd and fullsic, see the SSL section of <a href="comext_08j7.htm"><b>COM and Security Packages</b></a>.</dd>
<dt>
<i>pAuthnLevel</i></dt>
<dd>
[out] Pointer to a DWORD value defining the current authentication level. This will be a single value taken from the list of <a href="enums_3lo8.htm"><b>RPC_C_AUTHN_LEVEL_<i>xxx</i></b></a> constants. May be NULL, in which case the current authentication level is not returned.</dd>
<dt>
<i>pImpLevel</i></dt>
<dd>
[out] Must be NULL. This parameter is reserved for future use.</dd>
<dt>
<i>pPrivs</i></dt>
<dd>
[out] Pointer to a handle that indicates the privilege information for the client application. The format of the structure that the handle refers to depends on the authentication service. The application should not write or free the memory. The information is only valid for the duration of the current call. NULL may be returned, in which case the privilege information is not returned. For NTLMSSP, Kerberos, and SSL, this is the client's principal name.</dd>
<dt>
<i>pCapabilities</i></dt>
<dd>
[in, out] Pointer to return flags indicating capabilities of the call. May be NULL, in which case the flags indicating capabilities are not returned. To request a fullsic SSL principal name, set the EOAC_MAKE_FULLSIC bit in the *pCapabilities. Notice that since this parameter was previously only an [out] parameter, you may have to clear the EOAC_MAKE_FULLSIC bit in *pCapabilities to get the msstd form. For more information on msstd and fullsic, see the <b>SSL</b> section of <a href="comext_08j7.htm"><b>COM and Security Packages</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Success.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more arguments are invalid.</dd>
<dt>
E_OUTOFMEMORY</dt>
<dd>
Insufficient memory to create the <i>pServerPrincName </i>out-parameter.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>CoQueryClientBlanket</b> is called by the server to get security information about the client that invoked the method executing on the current thread. This function encapsulates the following sequence of common calls (error handling excluded):</p>
<pre><code>CoGetCallContext(IID_IServerSecurity, (void**)&amp;pss);
    pss-&gt;QueryBlanket(pAuthnSvc, pAuthzSvc, pServerPrincName, 
                pAuthnLevel, pImpLevel, pPrivs, pCapabilities);
    pss-&gt;Release();
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_4k38.htm"><b>IServerSecurity::QueryBlanket</b></a>, <a href="comext_47fx.htm"><b>Security in COM</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
