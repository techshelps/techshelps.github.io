<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISurrogate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_isurrogate"></a>ISurrogate</h1>
<p>
<b>ISurrogate</b> defines two methods: one for dynamically loading new DLL servers into an existing surrogate, and one to free the surrogate when it is no longer needed.</p>
<p>
A surrogate is an EXE process into which a DLL server can be loaded to give the DLL server the advantages of an EXE server without the coding overhead. It can also allow independent DLL servers to be located together within a single process, reducing the total number of processes needed. DLL servers are easy to write using standard development tools like Microsoft® Visual Basic®, Microsoft® Visual J++™, and Microsoft Developer Studio™, and running them in a surrogate process provides the benefits of an executable implementation, including fault isolation, the ability to serve multiple clients simultaneously, and allowing the server to provide services to remote clients in a distributed environment.</p>
<h5>When to Implement</h5>
<p>
If you are using the system-supplied surrogate, which implements this interface, you do not need to implement it specifically. All surrogate processes must implement this interface, so if you are writing a custom surrogate, you must implement it along with <b>IUnknown</b>, <b>IClassFactory</b>, and <b>IMarshal</b>. </p>
<h5>When to Use</h5>
<p>
In general, you would not call the methods of <b>ISurrogate</b> directly. COM calls the <b>LoadDllServer</b> method when there is an activation request for a class registered with the <b>DllSurrogate</b> named-value. COM also calls <b>FreeSurrogate</b> when all DLL servers running in the surrogate have terminated.</p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IUnknown Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><b>QueryInterface</b></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><b>AddRef</b></td>
<td width=52%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=48%><b>Release</b></td>
<td width=52%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>ISurrogate Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><b>LoadDllServer</b></td>
<td width=52%>Creates an uninitialized object.</td>
</tr>
<tr valign=top>
<td width=48%><b>FreeSurrogate</b></td>
<td width=52%>Locks object application open in memory.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 SP2 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="comext_2dlx.htm">Writing a Custom Surrogate</a>, <a href="comext_68j7.htm">DLL Surrogates</a>, <a href="if_r2z_8m9e.htm"><b>ISurrogate::LoadDllServer</b></a>, <a href="if_r2z_7ffp.htm"><b>ISurrogate::FreeSurrogate</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
