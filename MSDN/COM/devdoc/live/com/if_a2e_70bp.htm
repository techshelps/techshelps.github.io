<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IBindCtx::GetRunningObjectTable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ibindctx_getrunningobjecttable"></a>IBindCtx::GetRunningObjectTable</h2>
<p>
Provides an interface pointer to the Running Object Table (ROT) for the machine on which this bind context is running.</p>
<pre><code><b>HRESULT GetRunningObjectTable(
  IRunningObjectTable</b><i> **pprot  </i>//Address of output variable that 
                               // receives the IRunningObjectTable 
                               // interface pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pprot</i></dt>
<dd>
[out] Address of <b>IRunningObjectTable</b>* pointer variable that receives the interface pointer to the Running Object Table. If an error occurs, <i>*pprot</i> is set to NULL. If *<i>pprot</i> is non-NULL, the implementation calls <a href="if_r2z_3rja.htm"><b>IUnknown::AddRef</b></a> on the running table object; it is the caller's responsibility to call <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
A pointer to the ROT was returned successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The Running Object Table is a globally accessible table on each machine. It keeps track of all the objects that are currently running on the machine.</p>
<h5>Notes to Callers</h5>
<p>
Typically, those implementing a new moniker class (through an implementation of <a href="if_f2n_8otu.htm"><b>IMoniker</b></a> interface) call <b>IBindCtx::GetRunningObjectTable</b>. It is useful to call this method in an implementation of <a href="if_f2n_7o6s.htm"><b>IMoniker::BindToObject</b></a> or <a href="if_f2n_62g7.htm"><b>IMoniker::IsRunning</b></a> to check whether a given object is currently running. You can also call this method in the implementation of <a href="if_f2n_0k9x.htm"><b>IMoniker::GetTimeOfLastChange</b></a> to learn when a running object was last modified. </p>
<p>
Moniker implementations should call this method instead of using the <a href="api2_38md.htm"><b>GetRunningObjectTable</b></a> function. This makes it possible for future implementations of <a href="if_a2e_06bc.htm"><b>IBindCtx</b></a> to modify binding behavior. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_8otu.htm"><b>IMoniker</b></a>, <a href="if_r2z_8go5.htm"><b>IRunningObjectTable</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
