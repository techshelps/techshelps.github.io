<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleInPlaceSiteWindowless::ScrollRect</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleinplacesitewindowless_scrollrect"></a>IOleInPlaceSiteWindowless::ScrollRect</h2>
<p>
Enables an object to scroll an area within its in-place active image on the screen.</p>
<pre><code><b>HRESULT ScrollRect(
  int</b><i> dx</i><b>,</b>                //Amount to scroll on the x-axis
<b>  int</b><i> dy</i><b>,</b>                //Amount to scroll on the y-axis
<b>  LPCRECT</b><i> pRectScroll</i><b>,</b>   //Rectangle to scroll
<b>  LPCRECT</b><i> pRectClip</i>      //Rectangle to clip
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dx</i></dt>
<dd>
[in] Amount to scroll on the x-axis.</dd>
<dt>
<i>dy</i></dt>
<dd>
[in] Amount to scroll on the y-axis.</dd>
<dt>
<i>pRectScroll</i></dt>
<dd>
[in] Rectangle to scroll, in client coordinates of the containing window. NULL means the full object.</dd>
<dt>
<i>pRectClip</i></dt>
<dd>
[in] Rectangle to clip to as defined for the Windows API function. Only pixels scrolling into this rectangle are drawn. Pixels scrolling out are not. If this parameter is NULL, the rectangle is not clipped.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The rectangle was successfully scrolled.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method should take in account the fact that the caller may be transparent and that there may be opaque or transparent overlapping objects. See Notes to Implementers below for suggestions on algorithms this method can use.</p>
<h5>Note to Implementers</h5>
<p>
Containers can implement this method in a variety of ways. However, all of them should account for the possibility that the object requesting scrolling may be transparent or may not have a solid background. Containers should also take into account that there may be overlapping objects.</p>
<p>
The simplest way to implement this method consists in simply redrawing the rectangle to scroll.</p>
<p>
An added refinement to this simple implementation is to use the <b>ScrollDC</b> Windows API function when the object requesting the scroll is opaque, the object has a solid background, and there are no overlapping objects.</p>
<p>
More sophisticated implementations can use the following procedure:
<ul>
<li>
Check whether the object is opaque and has a solid background, using <b>IViewObjectEx::GetViewStatus</b>. If not, simply invalidate the rectangle to scroll. An added refinement is to check whether the scrolling rectangle is entirely in the opaque region of a partially transparent object.</li>
<li>
Get the window device context.</li>
<li>
Clip out the opaque parts of any overlapping object returned by <b>IViewObjectEx::GetRect</b>.</li>
<li>
Clip out and invalidate the transparent parts of any overlapping object.</li>
<li>
Finally, call the Windows API function <b>ScrollDC</b>.</li>
<li>
Redraw the previously invalidated transparent parts of any overlapping object.</li>
</ul>
<p>
Regardless of the scrolling and clipping rectangle, only pixels contained in the object's site rectangle will be painted. The area uncovered by the scrolling operation is invalidated and redrawn immediately, before this method returns.</p>
<p>
All redraw generated by this method should happen synchronously before this method returns.</p>
<p>
This method should automatically hide the caret during the scrolling operation and should move the caret by the scrolling amounts if it is inside the clip rectangle.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_9m7n.htm"><b>IViewObjectEx::GetViewStatus</b></a>, <a href="if_r2z_6g50.htm"><b>IViewObjectEx::GetRect</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
