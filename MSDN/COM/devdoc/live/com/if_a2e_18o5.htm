<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDataAdviseHolder::Advise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_idataadviseholder_advise"></a>IDataAdviseHolder::Advise</h2>
<p>
Creates a connection between an advise sink and a data object for receiving notifications.</p>
<pre><code><b>HRESULT Advise(
  IDataObject *</b><i> pDataObject</i><b>,  </b>//Pointer to the data object for which 
                              // notifications are requested
<b>  FORMATETC *</b><i> pFormatetc</i><b>,     </b>//Pointer to the description of data to 
                              // the advise sink
<b>  DWORD</b><i> advf</i><b>,                 </b>//Flags that specify how the notification 
                              // takes place
<b>  IAdviseSink *</b><i> pAdvSink</i><b>,     </b>//Pointer to the advise sink requesting 
                              // notification
<b>  DWORD *</b><i> pdwConnection       </i>//Pointer to the connection token
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pDataObject</i></dt>
<dd>
[in] Pointer to the <b>IDataObject</b> interface on the data object for which notifications are requested. If data in this object changes, a notification is sent to the advise sinks that have requested notification.</dd>
<dt>
<i>pFormatetc</i></dt>
<dd>
[in] Pointer to the specified format, medium, and target device that is of interest to the advise sink requesting notification. For example, one sink may want to know only when the bitmap representation of the data in the data object changes. Another sink may be interested in only the metafile format of the same object. Each advise sink is notified when the data of interest changes. This data is passed back to the advise sink when notification occurs.</dd>
<dt>
<i>advf</i></dt>
<dd>
[in] Contains a group of flags for controlling the advisory connection. Valid values are from the enumeration <a href="enums_923q.htm"><b>ADVF</b></a>. However, only some of the possible <b>ADVF</b> values are relevant for this method. The following table briefly describes the relevant values; a more detailed description can be found in the description of the <b>ADVF</b> enumeration.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>ADVF Value</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>ADVF_NODATA</td>
<td width=52%>Asks that no data be sent along with the notification.</td>
</tr>
<tr valign=top>
<td width=48%>ADVF_ONLYONCE</td>
<td width=52%>Causes the advisory connection to be destroyed after the first notification is sent. An implicit call to <a href="if_a2e_04rp.htm"><b>IDataAdviseHolder::Unadvise</b></a> is made on behalf of the caller to remove the connection. </td>
</tr>
<tr valign=top>
<td width=48%>ADVF_PRIMEFIRST</td>
<td width=52%>Causes an initial notification to be sent regardless of whether or not data has changed from its current state.</td>
</tr>
<tr valign=top>
<td width=48%>ADVF_DATAONSTOP</td>
<td width=52%>When specified with ADVF_NODATA, this flag causes a last notification with the data included to be sent before the data object is destroyed. When ADVF_NODATA is not specified, this flag has no effect.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pAdvSink</i></dt>
<dd>
[in] Pointer to the <b>IAdviseSink</b> interface on the advisory sink that receives the change notification.</dd>
<dt>
<i>pdwConnection</i></dt>
<dd>
[out] Pointer to a DWORD token that identifies this connection. The calling object can later delete the advisory connection by passing this token to <a href="if_a2e_04rp.htm"><b>IDataAdviseHolder::Unadvise</b></a>. If this value is zero, the connection was not established.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_INVALIDARG, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The advisory connection was created.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Through the connection established through this method, the advisory sink can receive future notifications in a call to <a href="if_a2e_2tgl.htm"><b>IAdviseSink::OnDataChange</b></a>. </p>
<p>
An object issues a call to <a href="if_a2e_376t.htm"><b>IDataObject::DAdvise</b></a> to request notification on changes to the format, medium, or target device of interest. This data is specified in the <i>pFormatetc</i> parameter. The <b>DAdvise</b> method is usually implemented to call <b>IDataAdviseHolder::Advise</b> to delegate the task of setting up and tracking a connection to the advise holder. When the format, medium, or target device in question changes, the data object calls <a href="if_a2e_13c5.htm"><b>IDataAdviseHolder::SendOnDataChange</b></a> to send the necessary notifications.</p>
<p>
The established connection can be deleted by passing the value in <i>pdwConnection</i> in a call to <a href="if_a2e_04rp.htm"><b>IDataAdviseHolder::Unadvise</b></a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See also</h4>
<p>
<a href="enums_923q.htm"><b>ADVF</b></a>, <a href="api2_2y7m.htm"><b>CreateDataAdviseHolder</b></a>, <a href="structs_14v7.htm"><b>FORMATETC</b></a>, <a href="if_a2e_04rp.htm"><b>IDataAdviseHolder::Unadvise</b></a>, <a href="if_a2e_376t.htm"><b>IDataObject::DAdvise</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
