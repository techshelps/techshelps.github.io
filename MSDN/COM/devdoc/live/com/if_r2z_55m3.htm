<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IStream::Seek</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_istream_seek"></a>IStream::Seek</h2>
<p>
Changes the seek pointer to a new location relative to the beginning of the stream, to the end of the stream, or to the current seek pointer.</p>
<pre><code><b>HRESULT Seek(
  LARGE_INTEGER</b><i> dlibMove</i><b>,  </b>//Offset relative to <i>dwOrigin</i>
<b>  DWORD</b><i> dwOrigin</i><b>,          </b>//Specifies the origin for the offset
<b>  ULARGE_INTEGER *</b><i> plibNewPosition</i>
<i>                           </i>//Pointer to location containing new seek 
                           // pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dlibMove</i></dt>
<dd>
[in] Displacement to be added to the location indicated by <i>dwOrigin</i>. If <i>dwOrigin</i> is STREAM_SEEK_SET, this is interpreted as an unsigned value rather than signed.</dd>
<dt>
<i>dwOrigin</i></dt>
<dd>
[in] Specifies the origin for the displacement specified in <i>dlibMove.</i> The origin can be the beginning of the file, the current seek pointer, or the end of the file. See the <a href="enums_027f.htm"><b>STREAM_SEEK</b></a> enumeration for the values.</dd>
<dt>
<i>plibNewPosition</i></dt>
<dd>
[out] Pointer to the location where this method writes the value of the new seek pointer from the beginning of the stream. You can set this pointer to NULL to indicate that you are not interested in this value. In this case, this method does not provide the new seek pointer.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The seek pointer has been successfully adjusted.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the stream's data is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and <a href="asyncstg_86cl.htm">Asynchronous Storage</a>. </dd>
<dt>
STG_E_INVALIDPOINTER</dt>
<dd>
The value of the <i>plibNewPosition</i> parameter is not valid.</dd>
<dt>
STG_E_INVALIDFUNCTION</dt>
<dd>
The value of the <i>dwOrigin</i> parameter is not valid.</dd>
<dt>
STG_E_REVERTED</dt>
<dd>
The object has been invalidated by a revert operation above it in the transaction tree.</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IStream::Seek</b> changes the seek pointer so subsequent reads and writes can take place at a different location in the stream object. It is an error to seek before the beginning of the stream. It is not, however, an error to seek past the end of the stream. Seeking past the end of the stream is useful for subsequent writes, as the stream will at that time be extended to the seek position immediately before the write is done.</p>
<p>
You can also use this method to obtain the current value of the seek pointer by calling this method with the <i>dwOrigin</i> parameter set to STREAM_SEEK_CUR and the <i>dlibMove</i> parameter set to 0 so the seek pointer is not changed. The current seek pointer is returned in the <i>plibNewPosition</i> parameter.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also<i> </i></h4>
<p>
<a href="if_r2z_459q.htm"><b>IStream - Compound File Implementation</b></a>, <a href="enums_027f.htm"><b>STREAM_SEEK</b></a>, <a href="if_r2z_14mc.htm"><b>ISequentialStream::Read</b></a>, <a href="if_r2z_3yat.htm"><b>ISequentialStream::Write</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
