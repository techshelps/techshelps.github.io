<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STGFMT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_stgfmt"></a>STGFMT</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>STGFMT</b> enumeration values specify the format of a storage object and are used in the <b>StgCreateStorageEx</b> and <b>StgOpenStorageEx</b> functions.</p>
<pre><code>typedef enum tagSTGFMT 
{ 
    STGFMT_STORAGE     = 0, 
    STGFMT_NATIVE      = 1, 
    STGFMT_FILE        = 3, 
    STGFMT_ANY         = 4, 
    STGFMT_DOCFILE     = 5 
} STGFMT; </code></pre>
<h4>Elements</h4>
<dl>
<dt>
STGFMT_STORAGE</dt>
<dd>
Indicates the file can be any structured storage format, NTFS NSS or a compound file. The new storage functions, <b>StgCreateStorageEx</b> and <b>StgOpenStorageEx</b>, try to create or open an NSS format file first and then fall back to a compound file if the NSS attempt fails. To create an NSS format file, use this value with the <b>StgCreateStorageEx</b> function, and specify a file on a Windows NT 5.0 NTFS drive.</dd>
<dt>
STGFMT_NATIVE</dt>
<dd>
Indicates the file can be NTFS NSS format only. The new storage functions, <b>StgCreateStorageEx</b> and <b>StgOpenStorageEx</b> try to create or open an NSS format file only. These functions return an error if you try to create an NSS format file on a FAT partition or a NTFS 4.0 partition.</dd>
<dt>
STGFMT_FILE</dt>
<dd>
Indicates that the file is a flat file containing native NTFS property sets. The <b>StgCreateStorageEx</b> and <b>StgOpenStorageEx</b> functions return an error if you try to create a native NTFS property set file on a FAT partition or a NTFS 4.0 partition.</dd>
<dt>
STGFMT_DOCFILE</dt>
<dd>
Indicates the file uses the structured storage compound file implementation only. The new storage functions, <b>StgCreateStorageEx</b> and <b>StgOpenStorageEx</b>, try to create or open a compound file only.</dd>
<dt>
STGFMT_ANY</dt>
<dd>
Indicates the system will figure out the file type and use the appropriate structured storage implementation. This value can be used to obtain an interface supported by all the storage formats, such as <b>IPropertySetStorage</b>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You use the <b>STGFMT</b> enumeration to specify what type of storage to access. When a file is created or opened, the structured storage implementation that is used depends on what STGFMT flag you specify and on what type of drive the file is stored.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=34%>Flag</th>
<th align=left width=32%>Windows NT 5.0 NTFS drive</th>
<th align=left width=34%>Windows NT 4.0 NTFS or any FAT drive</th>
</tr>
<tr valign=top>
<td width=34%>STGFMT_STORAGE</td>
<td width=32%>NTFS NSS first; then fallback to compound file</td>
<td width=34%>Compound File</td>
</tr>
<tr valign=top>
<td width=34%>STGFMT_NATIVE</td>
<td width=32%>NTFS NSS</td>
<td width=34%>Not allowed</td>
</tr>
<tr valign=top>
<td width=34%>STGFMT_FILE</td>
<td width=32%>NTFS Property Set</td>
<td width=34%>Not allowed</td>
</tr>
<tr valign=top>
<td width=34%>STGFMT_DOCFILE</td>
<td width=32%>Compound File</td>
<td width=34%>Compound File</td>
</tr>
<tr valign=top>
<td width=34%>STGFMT_ANY</td>
<td width=32%>Not allowed during create. During open, NSS will be used for structured storage files, otherwise flat file is used.</td>
<td width=34%>Not allowed during create. During open, Compound File will be used for structured storage files, otherwise Flat File will be used.</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;At the command line prompt, you can run the "<b>chkntfs /e</b>" command to convert an NTFS 4.0 partition to an NTFS 5.0 partition.</p>
<p>
</p>
<p>
The STGFMT flag specified also determines which interfaces can be returned from the storage functions:</p>
<table cellspacing=4 cols=5>
<tr valign=top>
<th align=left width=32%>Flag</th>
<th align=left width=16%>IStorage</th>
<th align=left width=16%>IStream</th>
<th align=left width=19%>IProperty<br>
SetStorage</th>
<th align=left width=17%>Other</th>
</tr>
</table><br>
<table cellspacing=4 cols=5>
<tr valign=top>
<td width=32%>STGFMT_STORAGE</td>
<td width=16%>Yes</td>
<td width=16%>No</td>
<td width=19%>Yes</td>
<td width=17%>No</td>
</tr>
<tr valign=top>
<td width=32%>STGFMT_NATIVE</td>
<td width=16%>Yes</td>
<td width=16%>No</td>
<td width=19%>Yes</td>
<td width=17%>No</td>
</tr>
<tr valign=top>
<td width=32%>STGFMT_FILE</td>
<td width=16%>No</td>
<td width=16%>Yes</td>
<td width=19%>Yes</td>
<td width=17%>No</td>
</tr>
<tr valign=top>
<td width=32%>STGFMT_DOCFILE</td>
<td width=16%>Yes</td>
<td width=16%>No</td>
<td width=19%>Yes</td>
<td width=17%>No</td>
</tr>
<tr valign=top>
<td width=32%>STGFMT_ANY</td>
<td width=16%>Yes</td>
<td width=16%>Yes</td>
<td width=19%>Yes</td>
<td width=17%>Yes</td>
</tr>
</table><br>
<p>
</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 5.0 and later. <br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in oleext.h.</p>
<h4>See Also</h4>
<p>
<a href="api4_9f3s.htm"><b>StgCreateStorageEx</b></a>, <a href="api4_9x2w.htm"><b>StgOpenStorageEx</b></a></p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
