<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISimpleFrameSite::PreMessageFilter</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_isimpleframesite_premessagefilter"></a>ISimpleFrameSite::PreMessageFilter</h2>
<p>
Provides a site with the opportunity to process a message that is received by a control's own window before the control itself does any processing.</p>
<pre><code><b>HRESULT PreMessageFilter(
  HWND</b><i> hWnd</i><b>,          </b>//Handle of window receiving message
<b>  UINT</b><i> msg</i><b>,           </b>//Received message
<b>  WPARAM</b><i> wp</i><b>,          </b>//WPARAM of message
<b>  LPARAM</b><i> lp</i><b>,          </b>//LPARAM of message
<b>  LRESULT*</b><i> plResult</i><b>,  </b>//Pointer to variable to receive result of 
                      //message processing
<b>  DWORD*</b><i> pdwCookie    </i>//Pointer to a variable used later
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
[in] Handle of the control window receiving the message.</dd>
<dt>
<i>msg</i></dt>
<dd>
[in] Message received by the simple frame site.</dd>
<dt>
<i>wp</i></dt>
<dd>
[in] The <b>WPARAM</b> of the message.</dd>
<dt>
<i>lp</i></dt>
<dd>
[in] The <b>LPARAM</b> of the message.</dd>
<dt>
<i>plResult</i></dt>
<dd>
[out] Pointer to the result variable to receive the result of the message processing.</dd>
<dt>
<i>pdwCookie</i></dt>
<dd>
[out] Pointer to the <b>DWORD</b> variable that will be passed to <b>PostMessageFilter</b> if it is called later. This parameter should only contain allocated data if this method returns S_OK so it will also receive a call to <b>PostMessageFilter</b> which can free the allocation. The caller is not in any way responsible for anything returned in this parameter.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The simple frame site will not use the message in this filter so more processing can take place.</dd>
<dt>
S_FALSE</dt>
<dd>
The site has processed the message and no further processing should occur.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
The site does not do any message filtering, indicating that <b>PostMessageFilter</b> need not be called later.</dd>
<dt>
E_POINTER</dt>
<dd>
The addresses in <i>plResult</i>or <i>pdwCookie</i> are not valid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Successful return values indicate whether the site wishes to allow further processing. S_OK indicates further processing, whereas S_FALSE means do not process further. S_OK also indicates that the control must later call <b>ISimpleFrameSite::PostMessageFilter</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_4uk2.htm"><b>ISimpleFrameSite::PostMessageFilter</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
