<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumSTATDATA</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ienumstatdata"></a>IEnumSTATDATA</h1>
<p>
The <b>IEnumSTATDATA</b> interface is used to enumerate through an array of <a href="structs_14dd.htm"><b>STATDATA</b></a> structures, which contain advisory connection information for a data object. <b>IEnumSTATDATA</b> has the same methods as all enumerator interfaces: <b>Next</b>, <b>Skip</b>, <b>Reset</b>, and <b>Clone</b>. For general information on these methods, refer to <a href="if_a2e_8yns.htm"><b>IEnum<i>XXXX</i></b></a>. </p>
<h5>When to Implement</h5>
<p>
<b>IEnumSTATDATA</b> is implemented to enumerate advisory connections. Most applications will not implement this directly, but will use the OLE-provided implementation. Pointers to this implementation are available in two ways:
<ul>
<li>
In a data object, call <b>CreateDataAdviseHolder</b> to get a pointer to the OLE data advise holder object, and then, to implement <b>IDataObject::EnumDAdvise</b>, call <b>IDataAdviseHolder::EnumAdvise</b>, which creates the enumeration object and supplies a pointer to the implementation of <b>IEnumSTATDATA</b>.</li>
<li>
In a compound document object, call <b>CreateOLEAdviseHolder</b> to get a pointer to the OLE advise holder object, and then, to implement <b>IOleObject::EnumAdvise</b>, call <b>IOleAdviseHolder::EnumAdvise</b>, which creates the enumeration object and supplies a pointer to the implementation of <b>IEnumSTATDATA</b>.</li>
</ul>
<h5>When to Use</h5>
<p>
Containers usually call methods that return a pointer to <b>IEnumSTATDATA</b> so the container can use its methods to enumerate the existing advisory connections, and use this information to instruct an object to release each of its advisory connections prior to closing down. <a href="if_a2e_0yzp.htm"><b>IDataObject::EnumDAdvise</b></a>, <a href="if_a2e_76p1.htm"><b>IDataAdviseHolder::EnumAdvise</b></a>, <a href="if_o_1cx1.htm"><b>IOleAdviseHolder::EnumAdvise</b></a>, and <a href="if_o_80v9.htm"><b>IOleCache::EnumCache</b></a> methods all supply a pointer to <b>IEnumSTATDATA</b>. </p>
<p>
The prototypes of the methods are as follows:</p>
<pre><code><b>HRESULT Next(
  ULONG</b><i> celt</i><b>,</b>           
<b>  STATDATA *</b><i> rgelt</i><b>,</b>     
<b>  ULONG *</b><i> pceltFetched  </i>
<b>);</b>
 
<b>HRESULT Skip(</b>
<b>  ULONG</b><i> celt  </i>
<b>);</b>
 
<b>HRESULT Reset(<i>void</i>)</b>
<b> </b>
<b>HRESULT Clone(</b>
<b>  IEnumSTATDATA **</b><i> ppenum  </i>
<b>);</b>
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="structs_14dd.htm"><b>STATDATA</b></a>, <a href="if_a2e_8yns.htm"><b>IEnum<i>XXXX</i></b></a>, <a href="if_o_80v9.htm"><b>IOleCache::EnumCache</b></a>, <a href="if_a2e_0yzp.htm"><b>IDataObject::EnumDAdvise</b></a>, <a href="if_a2e_76p1.htm"><b>IDataAdviseHolder::EnumAdvise</b></a>, <a href="if_o_1cpx.htm"><b>IOleObject::EnumAdvise</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
