<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoSetProxyBlanket</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_cosetproxyblanket"></a>CoSetProxyBlanket</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Sets the authentication information that will be used to make calls on the specified proxy. This is a helper function for <a href="if_a2e_0q0k.htm"><b>IClientSecurity::SetBlanket</b></a>.</p>
<pre><code><b>HRESULT CoSetProxyBlanket(
  IUnknown *</b><i> pProxy</i><b>,         </b>//Indicates the proxy to set
<b>  DWORD</b><i> dwAuthnSvc</i><b>,          </b>//Authentication service to use
<b>  DWORD</b><i> dwAuthzSvc</i><b>,          </b>//Authorization service to use
<b>  WCHAR *</b><i> pServerPrincName</i><b>,  </b>//Server principal name to use with 
                             // the authentication service
<b>  DWORD</b><i> dwAuthnLevel</i><b>,        </b>//Authentication level to use
<b>  DWORD</b><i> dwImpLevel</i><b>,          </b>//Impersonation level to use
<b>  RPC_AUTH_IDENTITY_HANDLE  </b><i> pAuthInfo</i><b>,</b>
<b>                             </b>//Identity of the client
<b>  DWORD</b><i> dwCapabilities       </i>//Capability flags
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pProxy</i></dt>
<dd>
[in] Indicates the proxy to set.</dd>
<dt>
<i>dwAuthnSvc</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_22yg.htm"><b>RPC_C_AUTHN_<i>xxx</i></b></a> constants indicating the <i>authentication </i>service to use. It may be RPC_C_AUTHN_NONE if no authentication is required. If RPC_C_AUTHN_DEFAULT is specified, DCOM will pick an authentication service following its normal security blanket negotiation algorithm.</dd>
<dt>
<i>dwAuthzSvc</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_77js.htm"><b>RPC_C_AUTHZ_<i>xxx</i></b></a> constants indicating the <i>authorization </i>service to use. If RPC_C_AUTHZ_DEFAULT is specified, DCOM will pick an authorization service following its normal security blanket negotiation algorithm. If you are using NTLMSSP, Kerberos, or SSL for the authentication service, use RPC_C_AUTHZ_NONE for the authorization service.</dd>
<dt>
<i>pServerPrincName</i></dt>
<dd>
[in] Pointer to a WCHAR string that indicates the server principal name to use with the authentication service. If COLE_DEFAULT_PRINCIPAL is specified, DCOM will pick a principal name using its security blanket negotiation algorithm. If using Kerberos, this value must not be NULL. It must be the correct principal name of the server or the call will fail. For SSL, this value must be one of the msstd or fullsic forms described in the SSL section of <a href="comext_08j7.htm"><b>COM and Security Packages</b></a> or NULL if you do not want mutual authentication..</dd>
<dt>
<i>dwAuthnLevel</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_3lo8.htm"><b>RPC_C_AUTHN_LEVEL_<i>xxx</i></b></a><b> </b>constants indicating the authentication level to use. If RPC_C_AUTHN_LEVEL_DEFAULT is specified, DCOM will pick an authentication level following its normal security blanket negotiation algorithm. If this value is none, the authentication service must also be none. SSL converts all authentication levels (except none) to encrypt.</dd>
<dt>
<i>dwImpLevel</i></dt>
<dd>
[in] A single DWORD value from the list of <a href="enums_2jco.htm"><b>RPC_C_IMP_LEVEL_<i>xxx</i></b></a> constants indicating the impersonation level to use. If RPC_C_IMP_LEVEL_DEFAULT is specified, DCOM will pick an impersonation level following its normal security blanket negotiation algorithm. If you are using NTLMSSP, this value must be RPC_C_IMP_LEVEL_IMPERSONATE or RPC_C_IMP_LEVEL_IDENTIFY. In NT 5, NTLMSSP supports delegate-level impersonation on the same machine (RPC_C_IMP_LEVEL_DELEGATE). When using SSL, this value must be RPC_C_IMP_LEVEL_IMPERSONATE.</dd>
<dt>
<i>pAuthInfo</i></dt>
<dd>
[in] Pointer to an RPC_AUTH_IDENTITY_HANDLE value that establishes the identity of the client. This parameter is not used for calls on the same machine. It is authentication-service specific. If NULL is specified, DCOM uses the current proxy identity (which is either the process token or the impersonation token). If the handle refers to a structure, that identity is used. The format of the structure referred to by the handle depends on the provider of the authentication service. For NTLMSSP or Kerberos, the structure is a SEC_WINNT_AUTH_IDENTITY_W or SEC_WINNT_AUTH_IDENTITY_EXW (on Windows NT 5) structure. The client must insure that the memory remains valid and unchanged until a different identity is set on th eproxy or all proxies on the object are released. For SSL, this value may be NULL or a CAPI (Crypto API) handle to a private certificate. If NULL is specified, the client is anonymous. If a CAPI handle is specified, the caller must not free it as long as any proxy to the object exists in the current apartment. If COLE_DEFAULT_AUTHINFO is specified, DCOM will pick the authentication information following its normal security blanket negotiation algorithm. <b>CoSetProxyBlanket</b> will return an error if both <i>pAuthInfo</i> is set and one of the cloaking flags is set in <i>dwCapabilities</i>.</dd>
<dt>
<i>dwCapabilities</i></dt>
<dd>
[in] A DWORD defining flags that specify the capabilities of this proxy. Capability flags are defined in the <a href="enums_92k3.htm">EOLE_AUTHENTICATION_CAPABILITIES</a> enumeration. EOAC_MUTUAL_AUTH is accepted, but has no effect. EOAC_ANY_AUTHORITY means DCOM will trust an SSL server certificate if the top level certificate authority is not trusted. EOAC_DEFAULT means DCOM will pick the capabilities using its normal security blanket negotation algorithm. EOAC_NONE indicates no capability flags are set. Either EOAC_STATIC_CLOAKING or EOAC_DYNAMIC_CLOAKING can be set if <i>pAuthInfo</i> is not set. If any capability flags other than those mentioned here are set, <b>CoSetProxyBlanket</b> will return an error.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Success.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more arguments is invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Sets the authentication information that will be used to make calls on the specified proxy. The <b>IClientSecurity::SetBlanket</b> method and <b>CoSetProxyBlanket</b> function return an error if you set any of the following flags in the capabilities: EOAC_SECURE_REFS, EOAC_ACCESS_CONTROL, or EOAC_APPID.</p>
<p>
This function encapsulates the following sequence of common calls (error handling excluded):</p>
<pre><code>pProxy-&gt;QueryInterface(IID_IClientSecurity, (void**)&amp;pcs);
    pcs-&gt;SetBlanket(pProxy, dwAuthnSvc, dwAuthzSvc, pServerPrincName, 
        dwAuthnLevel, dwImpLevel, pAuthInfo, dwCapabilities);
    pcs-&gt;Release();
 </code></pre>
<p>
For more information about how to use this function, see the Remarks section of the <b>IClientSecurity::SetBlanket</b> method.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0q0k.htm"><b>IClientSecurity::SetBlanket</b></a>, <a href="api1_0dro.htm"><b>CoQueryClientBlanket</b></a>, <a href="comext_47fx.htm"><b>Security in COM</b></a>, <a href="comext_3bjg.htm"><b>Setting Security at the Interface Proxy Level</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
