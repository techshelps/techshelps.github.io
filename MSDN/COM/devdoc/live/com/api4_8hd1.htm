<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>StgCreateDocfile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_stgcreatedocfile"></a>StgCreateDocfile</h1>
<p>
Creates a new compound file storage object using the COM-provided compound file implementation for the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> interface.</p>
<pre><code><b>HRESULT StgCreateDocfile(
  const WCHAR *</b><i> pwcsName</i><b>,</b>   //Points to path of compound file to 
                            // create
<b>  DWORD</b><i> grfMode</i><b>,</b>         //Specifies the access mode for opening the 
                         // storage object
<b>  DWORD</b><i> reserved</i><b>,</b>        //Reserved; must be zero
<b>  IStorage **</b><i> ppstgOpen  </i>//Points to location for returning the new 
                         // storage object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pwcsName</i></dt>
<dd>
[in] Points to the path of the compound file to create. It is passed uninterpreted to the file system. This can be a relative name or NULL. If NULL, a temporary compound file is allocated with a unique name.</dd>
<dt>
<i>grfMode</i></dt>
<dd>
[in] Specifies the access mode to use when opening the new storage object. For more information, see the <a href="enums_1ktp.htm"><b>STGM</b></a> enumeration. If the caller specifies transacted mode together with STGM_CREATE or STGM_CONVERT, the overwrite or conversion takes place at the time the storage object is opened and therefore is not revertible.</dd>
<dt>
<i>reserved</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>ppstgOpen</i></dt>
<dd>
[out] Points to the location of the <b>IStorage</b> pointer to the new storage object. </dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Indicates the compound file was successfully created.</dd>
<dt>
STG_E_ACCESSDENIED</dt>
<dd>
Access denied because the caller has insufficient permission, or another caller has the file open and locked.</dd>
<dt>
STG_E_FILEALREADYEXISTS</dt>
<dd>
Indicates the compound file already exists and <i>grfMode</i> is set to STGM_FAILIFTHERE.</dd>
<dt>
STG_E_INSUFFICIENTMEMORY</dt>
<dd>
Indicates the compound file was not created due to a lack of memory.</dd>
<dt>
STG_E_INVALIDFLAG</dt>
<dd>
Indicates bad flag combination in the <i>grfMode</i> pointer.</dd>
<dt>
STG_E_INVALIDNAME</dt>
<dd>
Indicates bad name in the <i>pwcsName</i> parameter.</dd>
<dt>
STG_E_INVALIDPOINTER </dt>
<dd>
Indicates bad pointer in the <i>pwcsName</i> parameter or the <i>ppStgOpen</i> parameter.</dd>
<dt>
STG_E_LOCKVIOLATION</dt>
<dd>
Access denied because another caller has the file open and locked.</dd>
<dt>
STG_E_SHAREVIOLATION</dt>
<dd>
Access denied because another caller has the file open and locked.</dd>
<dt>
STG_E_TOOMANYOPENFILES</dt>
<dd>
Indicates the compound file was not created due to a lack of file handles.</dd>
<dt>
STG_S_CONVERTED</dt>
<dd>
Indicates the specified file was successfully converted to Storage format.</dd>
</dl>
<p>
This function can also return any file system errors or Win32 errors wrapped in an HRESULT.</p>
<h4>Remarks</h4>
<p>
The <b>StgCreateDocfile</b> function creates a new storage object using the COM-provided, compound-file implementation for the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> interface. The name of the open compound file can be retrieved by calling the <a href="if_r2z_3ook.htm"><b>IStorage::Stat</b></a> method.</p>
<p>
<b>StgCreateDocfile</b> creates the file if it does not exist. If it does exist, the use of the STGM_CREATE, STGM_CONVERT, and STGM_FAILIFTHERE flags in the <i>grfMode</i> parameter indicate how to proceed. See the <a href="enums_1ktp.htm"><b>STGM</b></a> enumeration for more information on these values.</p>
<p>
If the compound file is opened in transacted mode (the <i>grfMode</i> parameter specifies STGM_TRANSACTED) and a file with this name already exists, the existing file is not altered until all outstanding changes are committed. If the calling process lacks write access to the existing file (because of access control in the file system), the <i>grfMode</i> parameter can only specify STGM_READ and <i>not</i> STGM_WRITE or STGM_READWRITE. The resulting new open compound file can still be written to, but a subsequent commit operation will fail (in transacted mode, write permissions are enforced at commit time).</p>
<p>
Specifying STGM_SIMPLE provides a much faster implementation of a compound file object in a limited, but frequently-used case. This can be used by applications that require a compound file implementation with multiple streams and no storages. The simple mode does not support all of the methods on <b>IStorage</b>. For more information, refer to the <a href="enums_1ktp.htm"><b>STGM</b></a> enumeration.</p>
<p>
If the <i>grfMode</i> parameter specifies STGM_TRANSACTED and no file yet exists with the name specified by the <i>pwcsName</i> parameter, the file is created immediately. In an access-controlled file system, the caller must have write permissions in the file system directory in which the compound file is created. If STGM_TRANSACTED is not specified, and STGM_CREATE is specified, an existing file with the same name is destroyed before creating the new file.</p>
<p>
<b>StgCreateDocfile</b> can be used to create a temporary compound file by passing a NULL value for the <i>pwcsName</i> parameter. However, these files are temporary only in the sense that they have a system-provided unique name – likely one that is meaningless to the user. The caller is responsible for deleting the temporary file when finished with it, unless STGM_DELETEONRELEASE was specified for the <i>grfMode</i> parameter.</p>
<p>
</p>
<p>
</p>
<p>
</p>
<p>
<b>Windows CE:</b> For the access mode (<i>grfMode</i>), Windows CE supports the following flags:</p>
<p class=indent1>
STGM_DIRECT</p>
<p class=indent1>
STGM_TRANSACTED</p>
<p class=indent1>
STGM_SIMPLE</p>
<p class=indent1>
STGM_READ</p>
<p class=indent1>
STGM_WRITE</p>
<p class=indent1>
STGM_READWRITE</p>
<p class=indent1>
STGM_PRIORITY</p>
<p class=indent1>
STGM_DELETEONRELEASE</p>
<p class=indent1>
STGM_CREATE</p>
<p class=indent1>
STGM_CONVERT</p>
<p class=indent1>
STGM_FAILIFTHERE</p>
<p class=indent1>
STGM_NOSCRATCH</p>
<p>
Passing into this function any invalid and, under some circumstances, NULL pointers will result in unexpected termination of the application. For more information about handling exceptions, see Programming Considerations.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Use version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api4_5ar7.htm"><b>StgCreateDocFileOnILockBytes</b></a> ; <a href="api4_9f3s.htm"><b>StgCreateStorageEx</b></a><b>, <a href="enums_1ktp.htm">STGM</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
