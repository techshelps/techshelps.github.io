<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IGlobalInterfaceTable::RegisterInterfaceInGlobal</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iglobalinterfacetable_registerinterfaceinglobal"></a>IGlobalInterfaceTable::RegisterInterfaceInGlobal</h2>
<p>
<span style=color:#FF0000>[New for Windows NT 4.0 Service Pack 3.]</span> </p>
<p>
Registers a specified interface on an object residing in one apartment of a process as a "global" (process-wide) interface, allowing other apartments access to that interface.</p>
<pre><code><b>HRESULT RegisterInterfaceInGlobal(
  IUnknown</b><i> *pUnk</i><b>,  </b>//Pointer to interface of type <i>riid</i> of object 
                   //containing global interface
<b>  REFIID </b><i> riid</i><b>,    </b>//IID of the interface to be registered
<b>  DWORD</b><i> *pdwCookie </i>//Supplies a pointer to the cookie that provides 
                   //a caller in another apartment access to the 
                   //interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pUnk</i></dt>
<dd>
[in] Interface pointer of type <i>riid</i> on the object on which the interface to be registered as global is implemented.</dd>
<dt>
<i>riid</i></dt>
<dd>
[in] IID of the interface to be registered as global.</dd>
<dt>
<i>pdwCookie</i></dt>
<dd>
[out] Pointer to a dword cookie that can be used by another apartment to get access to a pointer to the interface being registered.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The operation was successful.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more<b> </b>parameters are invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Called by the apartment in which an object resides to register one of the interfaces implemented on it as a "global" (process-wide) interface. This method supplies a pointer to a cookie that other apartments can use in a call to the <b>GetInterfaceFromGlobal</b> method to get a pointer to that interface. This is a very efficient way to do this operation.</p>
<p>
The interface pointer may be a pointer to an in-process object, or it may be a pointer to a proxy for an object residing in another apartment, another process, or another machine.</p>
<p>
The apartment that calls this method must remain alive until the corresponding call to <b>RevokeInterfaceFromGlobal</b> is called.</p>
<p>
Because this method is not available on Windows95 or versions of Windows NT earlier than version 4.0, Service Pack 3, apartments should call <a href="api1_88tp.htm"><b>CoMarshalInterThreadInterfaceInStream</b></a> and <a href="api1_1rjh.htm"><b>CoGetInterfaceAndReleaseStream</b></a> to marshal the pointers on failure of this method.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_8bsc.htm"><b>IGlobalInterfaceTable::RevokeInterfaceFromGlobal</b></a>, <a href="if_f2n_77e4.htm"><b>IGlobalInterfaceTable::GetInterfaceFromGlobal</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
