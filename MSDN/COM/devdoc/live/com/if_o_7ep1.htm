<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleInPlaceUIWindow::SetBorderSpace</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleinplaceuiwindow_setborderspace"></a>IOleInPlaceUIWindow::SetBorderSpace</h2>
<p>
Allocates space for the border requested in the call to <b>IOleInPlaceUIWindow::RequestBorderSpace</b>.</p>
<pre><code><b>HRESULT SetBorderSpace(
  LPCBORDERWIDTHS</b><i> pborderwidths  </i>//Pointer to a structure
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pborderwidths</i></dt>
<dd>
[in] Pointer to a <b>BORDERWIDTHS</b> structure containing the requested width (in pixels) of the tools. It can be NULL, indicating the object does not need any space.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_INVALIDARG and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The requested space has been allocated to the object.</dd>
<dt>
OLE_E_INVALIDRECT</dt>
<dd>
The rectangle does not lie within the specifications returned by <b>IOleInPlaceUIWindow::GetBorder</b>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The object must call <b>IOleInPlaceUIWindow::SetBorderSpace</b>. It can do any one of the following:
<ul>
<li>
Use its own toolbars, requesting border space of a specific size, or, </li>
<li>
Use no toolbars, but force the container to remove its toolbars by passing a valid <b>BORDERWIDTHS</b> structure containing nothing but zeros in the <i>pborderwidths</i> parameter, or,</li>
<li>
Use no toolbars but allow the in-place container to leave its toolbars up by passing NULL as the <i>pborderwidths</i> parameter.</li>
</ul>
<p>
The <b>BORDERWIDTHS</b> structure used in this call would generally have been passed in a previous call to <b>IOleInPlaceUIWindow::RequestBorderSpace</b>, which must have returned S_OK.</p>
<p>
If an object must renegotiate space on the border, it can call <b>SetBorderSpace</b> again with the new widths. If the call to <b>SetBorderSpace</b> fails, the object can do a full negotiation for border space with calls to <b>GetBorder</b>, <b>RequestBorderSpace</b>, and <b>SetBorderSpace</b>.</p>
<p>
<b>Note</b>&nbsp;&nbsp;While executing <b>IOleInPlaceUIWindow::SetBorderSpace</b>, do not make calls to the Windows <b>PeekMessage</b> or <b>GetMessage</b> functions, or a dialog box. Doing so may cause the system to deadlock. There are further restrictions on which OLE interface methods and functions can be called from within <b>SetBorderSpace</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_84he.htm"><b>IOleInPlaceUIWindow::GetBorder</b></a>, <a href="if_o_9zc5.htm"><b>IOleInPlaceUIWindow::RequestBorderSpace</b></a> <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_peekmessage">
</object><a href=JavaScript:alink_1.Click()><b>PeekMessage</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getmessage">
</object><a href=JavaScript:alink_2.Click()><b>GetMessage</b></a> in Win32</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
