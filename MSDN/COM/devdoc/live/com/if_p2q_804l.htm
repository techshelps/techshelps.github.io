<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPerPropertyBrowsing::GetPredefinedValue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iperpropertybrowsing_getpredefinedvalue"></a>IPerPropertyBrowsing::GetPredefinedValue</h2>
<p>
Returns a VARIANT containing the value of the property specified by <i>dispID</i>. This property is associated with a predefined string name as returned from <a href="if_p2q_96pf.htm"><b>IPerPropertyBrowsing::GetPredefinedStrings</b></a>. The predefined string is identified by a token returned from <b>GetPredefinedStrings</b>.</p>
<pre><code><b>HRESULT GetPredefinedValue(
  DISPID dispID</b><i> </i><b>,  </b>//Dispatch identifier for property
<b>  DWORD dwCookie</b><i> </i><b>, </b>//Token returned
<b>  VARIANT</b><i> *pVarOut </i>//Receives a pointer to a VARIANT value for the 
                   //property
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dispID</i></dt>
<dd>
[in] Dispatch identifier of the property for which a predefined value is requested.</dd>
<dt>
<i>dwCookie</i></dt>
<dd>
[in] Token identifying which value to return. The token was previously returned in the <i>pcaCookiesOut</i> array filled by <b>IPerPropertyBrowsing::GetPredefinedStrings</b>.</dd>
<dt>
<i>pVarOut</i></dt>
<dd>
[out] Pointer to the VARIANT value for the property.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
This method supports the standard return values E_INVALIDARG, </dt>
</dl>
<p>
E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The value was returned successfully.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
This object does not support predefined strings or predefined values.</dd>
<dt>
E_POINTER</dt>
<dd>
The address in <i>pVarOut</i> is not valid. For example, it may be NULL.
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes to Callers</h5>
<p>
The caller is responsible for freeing any allocations contained in the VARIANT. Unless the <i>vt</i> field of <b>VARIANT</b> is VT_VARIANT, the caller can free memory using a single call to <b>VariantClear</b>. Otherwise, the caller must recursively free the contained VARIANTs before freeing the outer VARIANT.</p>
<h5>Notes to Implementers</h5>
<p>
Support for predefined names and values is not required. If your object does not support these names, return E_NOTIMPL from this method. If this method is not implemented, <b>IPerPropertyBrowsing::GetPredefinedStrings</b> must not be implemented either.</p>
<p>
This method allocates any memory needed inside the VARIANT.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_96pf.htm"><b>IPerPropertyBrowsing::GetPredefinedStrings</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
