<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Optional Methods</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_optional_methods"></a>Optional Methods</h2>
<p>
An OLE component can implement an interface without implementing all the semantics of every method in the interface, instead returning E_NOTIMPL or S_OK as appropriate. The following table describes those methods that an ActiveX Control container is not required to implement (i.e. the control container can return E_NOTIMPL). </p>
<p>
The table below describes optional methods; note that the method must still exist, but can simply return E_NOTIMPL instead of implementing real semantics. Note that any method from a mandatory interface that is not listed below must be considered mandatory and may not return E_NOTIMPL.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Method</th>
<th align=left width=60%>Comments</th>
</tr>
<tr valign=top>
<td width=40%><b>IOleClientSite</b></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>SaveObject</td>
<td width=60%>Necessary for persistence to be successfully supported.</td>
</tr>
<tr valign=top>
<td width=40%>GetMoniker</td>
<td width=60%>Necessary only if the container supports linking to controls within its own form or document.</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IOleInPlaceSite</b></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>ContextSensitiveHelp</td>
<td width=60%>Optional</td>
</tr>
<tr valign=top>
<td width=40%>Scroll</td>
<td width=60%>May return S_FALSE with no action.</td>
</tr>
<tr valign=top>
<td width=40%>DiscardUndoState</td>
<td width=60%>Can return S_OK with no action.</td>
</tr>
<tr valign=top>
<td width=40%>DeactivateAndUndo</td>
<td width=60%>Deactivation is mandatory; Undo is optional. </td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IOleControlSite</b></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>GetExtendedControl</td>
<td width=60%>Necessary for containers that support extended controls.</td>
</tr>
<tr valign=top>
<td width=40%>ShowPropertyFrame</td>
<td width=60%>Necessary for containers that wish to include their own property pages to handle extended control properties in addition to those provided by a control.</td>
</tr>
<tr valign=top>
<td width=40%>TranslateAccelerator</td>
<td width=60%>May return S_FALSE with no action.</td>
</tr>
<tr valign=top>
<td width=40%>LockInPlaceActive</td>
<td width=60%>Optional</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IDispatch</b> (Ambient properties)</td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>GetTypeInfoCount</td>
<td width=60%>Necessary for containers that support non-standard ambient properties.</td>
</tr>
<tr valign=top>
<td width=40%>GetTypeInfo</td>
<td width=60%>Necessary for containers that support non-standard ambient properties.</td>
</tr>
<tr valign=top>
<td width=40%>GetIDsOfNames</td>
<td width=60%>Necessary for containers that support non-standard ambient properties.</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IDispatch</b> (Event sink)</td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>GetTypeInfoCount</td>
<td width=60%>The control knows its own type information, so it has no need to call this.</td>
</tr>
<tr valign=top>
<td width=40%>GetTypeInfo</td>
<td width=60%>The control knows its own type information, so it has no need to call this.</td>
</tr>
<tr valign=top>
<td width=40%>GetIDsOfNames</td>
<td width=60%>The control knows its own type information, so it has no need to call this.</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IOleInPlaceFrame</b></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>ContextSensitiveHelp</td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>GetBorder</td>
<td width=60%>Necessary for containers with toolbar UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>RequestBorderSpace</td>
<td width=60%>Necessary for containers with toolbar UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>SetBorderSpace</td>
<td width=60%>Necessary for containers with toolbar UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>InsertMenus</td>
<td width=60%>Necessary for containers with menu UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>SetMenu</td>
<td width=60%>Necessary for containers with menu UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>RemoveMenus</td>
<td width=60%>Necessary for containers with menu UI (which is optional)</td>
</tr>
<tr valign=top>
<td width=40%>SetStatusText</td>
<td width=60%>Necessary only for containers that have a status line</td>
</tr>
<tr valign=top>
<td width=40%>EnableModeless</td>
<td width=60%>Optional</td>
</tr>
<tr valign=top>
<td width=40%>TranslateAccelerator</td>
<td width=60%>Optional</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%><b>IOleContainer</b></td>
<td width=60%></td>
</tr>
<tr valign=top>
<td width=40%>ParseDisplayName</td>
<td width=60%>Only if linking to controls or other embeddings in the container is supported, as this is necessary for moniker binding.</td>
</tr>
<tr valign=top>
<td width=40%>LockContainer</td>
<td width=60%>As for <b>ParseDisplayName</b></td>
</tr>
<tr valign=top>
<td width=40%>EnumObjects</td>
<td width=60%>Returns all ActiveX Controls through an enumerator with <b>IEnumUnknown</b>, but not necessarily all objects (since there's no guarantee that all objects are ActiveX Controls; some may be regular Windows controls).</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
