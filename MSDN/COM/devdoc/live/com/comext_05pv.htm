<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering COM Servers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_registering_com_servers"></a>Registering COM Servers</h2>
<p>
After you have defined a class in code (ensuring that it implements <b>IClassFactory</b> or <b>IClassFactory2</b>) and assigned it a CLSID, you need to put information in the registry that will allow COM, on request of a client with the CLSID, to create instances of its objects. This information tells the system, for a given CLSID, where the DLL or EXE code for that class is located, and how it is to be launched. There is more than one way of registering a class in the registry. In addition, there are other ways of "registering" a class with the system when it is running, so the system is aware that a running object is currently in the system. These topics are described in the following sections:
<ul>
<li>
<a href="comext_7ay6.htm"><b>Registering a Class at Installation</b></a> </li>
<li>
<a href="comext_3ktu.htm"><b>Registering a Running EXE Server</b></a> </li>
<li>
<a href="comext_4md0.htm"><b>Registering Objects in the ROT</b></a> </li>
<li>
<a href="comext_5wa6.htm"><b>Self-registration</b></a> </li>
<li>
<a href="comext_47ec.htm"><b>Installing as a Win32 Service or User Account</b></a> </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
