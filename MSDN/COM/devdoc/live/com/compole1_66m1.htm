<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compatibility with OLE 1 and 16:32-Bit Interoperability</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_ole_compatibility_with_ole_1_and_16_32_bit_interoperability"></a>Compatibility with OLE 1 and 16:32-Bit Interoperability</h1>
<p>
<b>Note</b>&nbsp;&nbsp;In moving from OLE 1 to OLE 2, the following changes in terminology were made:
<ul>
<li>
The OLE 1 term "server application" has been changed to "object application."</li>
<li>
The OLE 1 term "client application" has been changed to "container application."</li>
</ul>
<p>
Compatibility implies that an OLE 1 client application can contain OLE 2 embedded and linked objects and that an OLE 1 server application can create objects to be embedded in and linked to by OLE 2 containers. OLE provides these capabilities by means of a built-in compatibility layer in the core code, which includes a set of functions for conversion.</p>
<p>
Interoperability is not the same as OLE 1 to OLE 2 compatibility. Interoperability implies that a 16-bit OLE application can interact with a 32-bit application running on the same system. Interoperability between 16- and 32-bit implementations means that 16-bit and 32-bit implementations can call each other.</p>
<p>&nbsp;</p></body>
</HTML>
