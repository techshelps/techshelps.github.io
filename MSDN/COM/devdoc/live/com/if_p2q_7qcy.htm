<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersistMoniker</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ipersistmoniker"></a>IPersistMoniker</h1>
<p>
Objects, especially asynchronous-aware objects, can expose the <b>IPersistMoniker</b> interface to obtain more control over the way they bind to their persistent data.</p>
<p>
Existing moniker implementations call <b>QueryInterface</b> on the client objectfor persistence interfaces such as <b>IPersistFile</b>, <b>IPersistStream</b>[<b>Init</b>], or <b>IPersistStorage</b> as part of their <b>IMoniker::BindToObject</b> implementation when they are instantiating and initializing the object. The <b>IPersistMoniker</b> interface allows moniker implementations and other applications that instantiate objects from persistent data to give control to the object being instantiated over binding to its persistent data. An object could, for example, implement <b>IPersistMoniker::Load</b> by calling <b>IMoniker::BindToStorage</b> for the interface it prefers: <b>IStorage, IStream</b>, asynchronous binding, etc.</p>
<p>
Unlike some other persistent object interfaces, <b>IPersistMoniker</b> does not include an <b>InitNew</b> method. This means that <b>IPersistMoniker</b> cannot be used to initialize an object to a freshly initialized state. Clients of <b>IPersistMoniker</b> who wish to initialize the object should <b>QueryInterface</b> for a different persistence interface that contains an <b>InitNew</b> method, such as <b>IPersistStreamInit</b>, <b>IPersistMemory</b>, or <b>IPersistPropertyBag</b>. Then, the client can use the <b>InitNew</b> method found in the other persistence interface to initialize the object. The client can still safely used <b>IPersistMoniker</b> to save the persistent state of the object.</p>
<p>
The <b>IPersistMoniker</b> contract inherits its definition from the <b>IPersist</b> interface, and includes the <b>GetClassID</b> method of <b>IPersist</b>.</p>
<h5>When to Implement</h5>
<p>
Implement <b>IPersistMoniker</b> on any object that can be saved persistently to multiple storage mediums or can take advantage of any of the asynchronous stream, storage, or <b>IMoniker::BindToStorage </b>behavior described above.</p>
<h5>When to Use</h5>
<p>
Custom moniker implementations should support <b>IPersistMoniker</b> as the most flexible persistence interface in their implementation of <b>IMoniker::BindToObject</b> if they are instantiating an arbitrary class and need to initialize it from persistent data. Typically, these monikers should use the published persistence interfaces in the following order: <b>IPersistMoniker</b>, <b>IPersistStream[Init]</b>, <b>IPersistStorage</b>, <b>IPersistFile</b>, and <b>IPersistMemory</b>.</p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_r2z_9dwu.htm">IUnknown</a> Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=52%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=52%>Decrements the reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_p2q_3lbo.htm">IPersist</a> Method</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_1yn8.htm"><b>GetClassID</b></a></td>
<td width=52%>Returns the class identifier (CLSID) for the object.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><b>IPersistMoniker Methods</b></td>
<td width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_53p5.htm"><b>IsDirty</b></a></td>
<td width=52%>Checks an object for changes since it was last saved.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_2qhw.htm"><b>Load</b></a></td>
<td width=52%>Loads an object using a specified moniker.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_0v6t.htm"><b>Save</b></a></td>
<td width=52%>Saves the object, specifying a destination moniker.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_4mxw.htm"><b>SaveCompleted</b></a></td>
<td width=52%>Notifies the object that the save operation is complete.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_7ub6.htm"><b>GetCurMoniker</b></a></td>
<td width=52%>Gets the current moniker for the object.</td>
</tr>
</table><br>
<p>
</p>
<p>
</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in urlmon.h.</p>
<p>&nbsp;</p></body>
</HTML>
