<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleClientSite::GetMoniker</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleclientsite_getmoniker"></a>IOleClientSite::GetMoniker</h2>
<p>
Returns a moniker to an object's client site. An object can force the assignment of its own or its container's moniker by specifying a value for <i>dwAssign</i>.</p>
<pre><code><b>HRESULT GetMoniker(
  DWORD</b><i> dwAssign</i><b>,  </b>//Value specifying how moniker is assigned
<b>  DWORD</b><i> dwWhichMoniker</i><b>,</b>
<b>                   </b>//Value specifying which moniker is assigned
<b>  IMoniker **</b><i> ppmk </i>//Address of output variable that receives the 
                   // IMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwAssign</i></dt>
<dd>
[in] Specifies whether to get a moniker only if one already exists, force assignment of a moniker, create a temporary moniker, or remove a moniker that has been assigned. In practice, you will usually request that the container force assignment of the moniker. Values defining these choices are contained in the enumeration <a href="enums_6w4y.htm"><b>OLEGETMONIKER</b></a>.</dd>
<dt>
<i>dwWhichMoniker</i></dt>
<dd>
[in] DWORD that specifies whether to return the container's moniker, the object's moniker relative to the container, or the object's full moniker. In practice, you will usually request the object's full moniker. Values defining these choices are contained in the enumeration <a href="enums_0pij.htm"><b>OLEWHICHMK</b></a>.</dd>
<dt>
<i>ppmk</i></dt>
<dd>
[out] Address of <b>IMoniker</b>* pointer variable that receives the interface pointer to the moniker for the object's client site. If an error occurs, the implementation must set *<i>ppmk</i> to NULL. Each time a container receives a call to <b>IOleClientSite::GetMoniker</b>, it must increase the reference count on the *<i>ppmk</i> pointer it returns. It is the caller's responsibility to call <b>Release</b> when it is done with the pointer.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_FAIL and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Requested moniker returned successfully.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
This container cannot assign monikers to objects. This is the case with OLE 1 containers.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Containers implement <b>IOleClientSite::GetMoniker</b> as a way of passing out monikers for their embedded objects to clients wishing to link to those objects.</p>
<p>
When a link is made to an embedded object or to a pseudo-object within it (a range of cells in a spreadsheet, for example), the object needs a moniker to construct the composite moniker indicating the source of the link. If the embedded object does not already have a moniker, it can call <b>IOleClientSite::GetMoniker</b> to request one.</p>
<p>
Every container that expects to contain links to embeddings should support <b>IOleClientSite::GetMoniker </b>to give out OLEWHICHMK_CONTAINER, thus enabling link tracking when the link client and link source files move, but maintain the same relative position. </p>
<p>
An object must not persistently store its full moniker or its container's moniker, because these can change while the object is not loaded. For example, either the container or the object could be renamed, in which event, storing the container's moniker or the object's full moniker would make it impossible for a client to track a link to the object.</p>
<p>
In some very specialized cases, an object may no longer need a moniker previously assigned to it and may wish to have it removed as an optimization. In such cases, the object can call <b>IOleClientSite::GetMoniker</b> with OLEGETMONIKER_UNASSIGN to have the moniker removed.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_18aa.htm"><b>IOleObject::GetMoniker</b></a>,<b> <a href="if_o_0vjm.htm">IOleObject::SetMoniker</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
