<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMoniker::Inverse</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imoniker_inverse"></a>IMoniker::Inverse</h2>
<p>
Provides a moniker that, when composed to the right of this moniker or one of similar structure, will destroy it (the moniker will compose to nothing).</p>
<pre><code><b>HRESULT Inverse(
  IMoniker</b><i> **ppmk  </i>//Address of output variable that receives the 
                   //IMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppmk</i></dt>
<dd>
[out] Address of <b>IMoniker</b>* pointer variable that receives the interface pointer to a moniker that is the inverse of this moniker. When successful, the implementation must call <a href="if_r2z_3rja.htm"><b>IUnknown::AddRef</b></a> on the new inverse moniker. It is the caller's responsibility to call <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>. If an error occurs, the implementation should set *<i>ppmk</i> to NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The method supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The inverse moniker has been returned successfully.</dd>
<dt>
MK_E_NOINVERSE</dt>
<dd>
The moniker class does not have an inverse.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The inverse of a moniker is analogous to the ".." directory in MS-DOS file systems; the ".." directory acts as the inverse to any other directory name, because appending ".." to a directory name results in an empty path. In the same way, the inverse of a moniker typically is also the inverse of all monikers in the same class. However, it is not necessarily the inverse of a moniker of a different class. </p>
<p>
The inverse of a composite moniker is a composite consisting of the inverses of the components of the original moniker, arranged in reverse order. For example, if the inverse of A is Inv( A ) and the composite of A, B, and C is Comp( A, B, C ), then</p>
<p>
Inv( Comp( A, B, C ) ) </p>
<p>
is equal to</p>
<p>
Comp( Inv( C ), Inv( B ), Inv( A ) ).</p>
<p>
Not all monikers have inverses. Most monikers that are themselves inverses, such as anti-monikers, do not have inverses. Monikers that have no inverse cannot have relative monikers formed from inside the objects they identify to other objects outside.</p>
<h5>Notes to Callers</h5>
<p>
An object that is using a moniker to locate another object usually does not know the class of the moniker it is using. To get the inverse of a moniker, you should always call <b>IMoniker::Inverse</b> rather than the <a href="api2_6vci.htm"><b>CreateAntiMoniker</b></a> function, because you cannot be certain that the moniker you're using considers an anti-moniker to be its inverse. </p>
<p>
The <b>IMoniker::Inverse</b> method is also called by the implementation of the <a href="if_f2n_30j3.htm"><b>IMoniker::RelativePathTo</b></a> method, to assist in constructing a relative moniker. </p>
<h5>Notes to Implementers</h5>
<p>
If your monikers have no internal structure, you can call the <a href="api2_6vci.htm"><b>CreateAntiMoniker</b></a> function in to get an anti-moniker in your implementation of <b>IMoniker::Inverse</b>. In your implementation of <a href="if_f2n_8cx4.htm"><b>IMoniker::ComposeWith</b></a>, you need to check for the inverse you supply in the implementation of <b>IMoniker::Inverse</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_6vci.htm"><b>CreateAntiMoniker</b></a>, <a href="if_f2n_8cx4.htm"><b>IMoniker::ComposeWith</b></a>, <a href="if_f2n_30j3.htm"><b>IMoniker::RelativePathTo</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
