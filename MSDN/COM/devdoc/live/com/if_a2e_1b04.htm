<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IConnectionPointContainer::FindConnectionPoint</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iconnectionpointcontainer_findconnectionpoint"></a>IConnectionPointContainer::FindConnectionPoint</h2>
<p>
Returns a pointer to the <a href="if_a2e_2ar8.htm"><b>IConnectionPoint</b></a> interface of a connection point for a specified IID, if that IID describes a supported outgoing interface.</p>
<pre><code><b>HRESULT FindConnectionPoint(
  REFIID</b><i> riid</i><b>,  </b>//Requested connection point's interface identifier
<b>  IConnectionPoint</b><i> **ppCP</i>
<i>                </i>//Address of output variable that receives the 
                // IConnectionPoint interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>riid</i></dt>
<dd>
[in] Interface identifier of the outgoing interface whose connection point object is being requested.</dd>
<dt>
<i>ppCP</i></dt>
<dd>
[out] Address of <b>IConnectionPoint</b>* pointer variable that receives the interface pointer to the connection point that supports the <i>riid</i> interface. If an error occurs, the implementation sets *<i>ppCP</i> to NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The <i>ppCP</i> pointer has a valid interface pointer.</dd>
<dt>
E_POINTER</dt>
<dd>
The address in <i>ppCP</i> is not valid. For example, it may be NULL.</dd>
<dt>
CONNECT_E_NOCONNECTION</dt>
<dd>
This connectable object does not support the outgoing interface specified by <i>riid</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method is the <b>QueryInterface</b> equivalent for an object's outgoing interfaces, where the outgoing interface is specified with <i>riid</i> and where the interface pointer returned is always that of a connection point.</p>
<h5>Notes to Callers</h5>
<p>
If the call is successful, the caller is responsible for releasing the connection point by calling <code>(*ppCP)-&gt;Release</code> when the connection point is no longer needed.</p>
<h5>Notes to Implementers</h5>
<p>
E_NOTIMPL is not allowed as a return value for this method. Any implementation of <b>IConnectionPointContainer</b> must implement this method for the connectable object's outgoing interfaces.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_2ar8.htm"><b>IConnectionPoint</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
