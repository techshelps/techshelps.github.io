<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RegisterDragDrop</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_registerdragdrop"></a>RegisterDragDrop</h1>
<p>
Registers the specified window as one that can be the target of an OLE drag-and-drop operation and specifies the <a href="if_a2e_2y7o.htm"><b>IDropTarget</b></a> instance to use for drop operations.</p>
<pre><code><b>WINOLEAPI RegisterDragDrop(
  HWND</b><i> hwnd</i><b>,  </b>//Handle to a window that can accept drops
<b>  IDropTarget *</b><i> pDropTarget</i>
<i>              </i>//Pointer to object that is to be target of drop
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hwnd</i></dt>
<dd>
[in] Handle to a window that can be a target for an OLE drag-and-drop operation.</dd>
<dt>
<i>pDropTarget</i></dt>
<dd>
[in] Pointer to the <a href="if_a2e_2y7o.htm"><b>IDropTarget</b></a> interface on the object that is to be the target of a drag-and-drop operation in a specified window. This interface is used to communicate OLE drag-and-drop information for that window.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The application was registered successfully.</dd>
<dt>
DRAGDROP_E_INVALIDHWND</dt>
<dd>
Invalid handle returned in the <i>hwnd</i> parameter.</dd>
<dt>
DRAGDROP_E_ALREADYREGISTERED</dt>
<dd>
The specified window has already been registered as a drop target.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If your application can accept dropped objects during OLE drag-and-drop operations, you must call the <b>RegisterDragDrop</b> function. Do this whenever one of your application windows is available as a potential drop target, i.e., when the window appears unobscured on the screen.</p>
<p>
The <b>RegisterDragDrop</b> function only registers one window at a time, so you must call it for each application window capable of accepting dropped objects.</p>
<p>
As the mouse passes over unobscured portions of the target window during an OLE drag-and-drop operation, the <a href="api2_5now.htm"><b>DoDragDrop</b></a> function calls the specified <a href="if_a2e_8zle.htm"><b>IDropTarget::DragOver</b></a> method for the current window. When a drop operation actually occurs in a given window, the <b>DoDragDrop</b> function calls <a href="if_a2e_9oog.htm"><b>IDropTarget::Drop</b></a>.</p>
<p>
The <b>RegisterDragDrop</b> function also calls the <b>IUnknown::AddRef</b> method on the <b>IDropTarget</b> pointer. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api3_2jow.htm"><b>RevokeDragDrop</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
