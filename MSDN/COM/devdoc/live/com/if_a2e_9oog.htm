<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDropTarget::Drop</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_idroptarget_drop"></a>IDropTarget::Drop</h2>
<p>
Incorporates the source data into the target window, removes target feedback, and releases the data object. </p>
<pre><code><b>HRESULT Drop(
  IDataObject *</b><i> pDataObject</i><b>,</b>
<b>                     </b>//Pointer to the interface for the source data
<b>  DWORD</b><i> grfKeyState</i><b>, </b>//Current state of keyboard modifier keys
<b>  POINTL</b><i> pt</i><b>,         </b>//Pointer to the current cursor coordinates
<b>  DWORD *</b><i> pdwEffect  </i>//Pointer to the effect of the drag-and-drop 
                     // operation
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pDataObject</i></dt>
<dd>
[in] Pointer to the <a href="if_a2e_24z8.htm"><b>IDataObject</b></a> interface on the data object being transferred in the drag-and-drop operation.</dd>
<dt>
<i>grfKeyState</i></dt>
<dd>
[in] Current state of the keyboard modifier keys on the keyboard. Valid values can be a combination of any of the flags MK_CONTROL, MK_SHIFT, MK_ALT, MK_BUTTON, MK_LBUTTON, MK_MBUTTON, and MK_RBUTTON. </dd>
<dt>
<i>pt</i></dt>
<dd>
[in] Pointer to the current cursor coordinates in the coordinate space of the drop target window. </dd>
<dt>
<i>pdwEffect</i></dt>
<dd>
[in, out] Pointer to the current effect flag. Valid values are from the enumeration <a href="enums_6bas.htm"><b>DROPEFFECT</b></a>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The method completed its tasks successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You do not call this method directly. The <a href="api2_5now.htm"><b>DoDragDrop</b></a> function calls this method when the user completes the drag-and-drop operation. </p>
<p>
In implementing <b>IDropTarget::Drop</b>, you must incorporate the data object into the target. Use the formats available in <a href="if_a2e_24z8.htm"><b>IDataObject</b></a>, available through <i>pDataObject</i>, along with the current state of the modifier keys to determine how the data is to be incorporated, such as linking or embedding.</p>
<p>
In addition to incorporating the data, you must also clean up as you do in the <a href="if_a2e_0mw5.htm"><b>IDropTarget::DragLeave</b></a> method:
<ul>
<li>
Remove any target feedback that is currently displayed.</li>
<li>
Release any references to the data object.</li>
</ul>
<p>
You also pass the effect of this operation back to the source application through <a href="api2_5now.htm"><b>DoDragDrop</b></a>, so the source application can clean up after the drag-and-drop operation is complete:
<ul>
<li>
Remove any source feedback that is being displayed.</li>
<li>
Make any necessary changes to the data, such as removing the data if the operation was a move.</li>
</ul>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_5now.htm"><b>DoDragDrop</b></a>, <a href="if_a2e_12jp.htm"><b>IDropSource</b></a>, <a href="if_a2e_2y7o.htm"><b>IDropTarget</b></a>, <a href="api3_9eeo.htm"><b>RegisterDragDrop</b></a>, <a href="api3_2jow.htm"><b>RevokeDragDrop</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
