<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleCache::SetData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iolecache_setdata"></a>IOleCache::SetData</h2>
<p>
Initializes the cache with data in a specified format and on a specified medium. </p>
<pre><code><b>HRESULT SetData(
  FORMATETC *</b><i> pFormatetc</i><b>,  </b>//Pointer to the format of the 
                           // presentation data to be placed in the 
                           // cache
<b>  STGMEDIUM *</b><i> pmedium</i><b>,  </b>//Pointer to the storage medium containing 
                        // the data to be placed in the cache
<b>  BOOL</b><i> fRelease         </i>//Ownership of the storage medium after this 
                        // method is completed
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pFormatetc</i></dt>
<dd>
[in] Pointer to the format of the presentation data being placed in the cache.</dd>
<dt>
<i>pmedium</i></dt>
<dd>
[in] Pointer to the storage medium that contains the presentation data.</dd>
<dt>
<i>fRelease</i></dt>
<dd>
[in] Ownership of the storage medium after completion of the method. If <i>fRelease</i> is TRUE, the cache takes ownership, freeing the medium when it is finished using it. When <i>fRelease</i> is FALSE, the caller retains ownership and is responsible for freeing the medium. The cache can only use the storage medium for the duration of the call.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
The cache was filled.</dd>
<dt>
DV_E_LINDEX</dt>
<dd>
The value is not valid for <i>pFormatetc-&gt;lindex.</i> Currently, only -1 is supported.</dd>
<dt>
DV_E_FORMATETC</dt>
<dd>
The <a href="structs_14v7.htm"><b>FORMATETC</b></a> structure is invalid.</dd>
<dt>
DV_E_TYMED</dt>
<dd>
The value is not valid for<i> pFormatetc-&gt;tymed</i>. </dd>
<dt>
DV_E_DVASPECT</dt>
<dd>
The value is not valid for<i> pFormatetc-&gt;dwAspect</i>.</dd>
<dt>
OLE_E_BLANK</dt>
<dd>
Uninitialized object.</dd>
<dt>
DV_E_TARGETDEVICE</dt>
<dd>
The object is static and <i>pFormatetc-&gt;ptd</i> is non-NULL.</dd>
<dt>
STG_E_MEDIUMFULL</dt>
<dd>
The storage medium is full.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IOleCache::SetData </b>is usually called when an object is created from the Clipboard or through a drag-and-drop operation, and Embed Source data is used to create the object.</p>
<p>
<b>IOleCache::SetData</b> and <a href="if_o_1cdh.htm"><b>IOleCache::InitCache</b></a> are very similar. There are two main differences. The first difference is that while<b> IOleCache::InitCache </b>initializes the cache with the presentation format provided by the data object, <b>IOleCache::SetData</b> initializes it with a single format. Second, the <b>IOleCache::SetData</b> method ignores the ADVF_NODATA flag while <b>IOleCache::InitCache</b> obeys this flag.</p>
<p>
A container can use this method to maintain a single aspect of an object, such as the icon aspect of the object.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_438h.htm"><b>IDataObject::SetData</b></a>,<b> <a href="if_o_0med.htm">IOleCache::Cache</a></b>, <a href="enums_923q.htm">ADVF</a> enumeration</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
