<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OleCreate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_olecreate"></a>OleCreate</h1>
<p>
Creates an embedded object identified by a CLSID. You use it typically to implement the menu item that allows the end user to insert a new object.</p>
<pre><code><b>WINOLEAPI OleCreate(
  REFCLSID</b><i> rclsid</i><b>,  </b>//CLSID of embedded object to be created
<b>  REFIID</b><i> riid</i><b>,      </b>//Reference to the identifier of the interface 
                    // used to communicate with new object
<b>  DWORD</b><i> renderopt</i><b>,  </b>//RENDEROPT value indicating cached capabilities
<b>  FORMATETC *</b><i> pFormatEtc</i><b>,</b>
<b>                    </b>//Pointer to a FORMATETC structure
<b>  IOleClientSite *</b><i> pClientSite</i><b>,</b>
<b>                    </b>//Pointer to request services from the container
<b>  IStorage *</b><i> pStg</i><b>,  </b>//Pointer to storage for the object
<b>  void **</b><i> ppvObject </i>//Address of output variable that receives the 
                    // interface pointer requested in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>rclsid</i></dt>
<dd>
[in] CLSID of the embedded object that is to be created.</dd>
<dt>
<i>riid</i></dt>
<dd>
[in] Reference to the identifier of the interface, usually <b>IID_IOleObject</b> (defined in the OLE headers as the interface identifier for <b>IOleObject</b>), through which the caller will communicate with the new object.</dd>
<dt>
<i>renderopt</i></dt>
<dd>
[in] A value from the enumeration <a href="enums_38s2.htm"><b>OLERENDER</b></a>, indicating the locally cached drawing capabilities the newly created object is to have. The <b>OLERENDER</b> value chosen affects the possible values for the <i>pFormatEtc</i> parameter.</dd>
<dt>
<i>pFormatEtc</i></dt>
<dd>
[in] Depending on which of the <b>OLERENDER</b> flags is used as the value of <i>renderopt</i>, pointer to one of the <a href="structs_14v7.htm"><b>FORMATETC</b></a> enumeration values. Refer to the <b>OLERENDER</b> enumeration for restrictions. This parameter, along with the <i>renderopt</i> parameter, specifies what the new object can cache initially.</dd>
<dt>
<i>pClientSite</i></dt>
<dd>
[in] If you want <b>OleCreate</b> to call <a href="if_o_771h.htm"><b>IOleObject::SetClientSite</b></a>, pointer to the <b>IOleClientSite</b> interface on the container. The value may be NULL, in which case you must specifically call <b>IOleClientSite::SetClientSite</b> before attempting operations.</dd>
<dt>
<i>pStg</i></dt>
<dd>
[in] Pointer to an instance of the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> interface on the storage object. This parameter may not be NULL.</dd>
<dt>
<i>ppvObject</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObject</i> contains the requested interface pointer.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Embedded object created successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The<b> OleCreate</b> function creates a new embedded object, and is typically called to implement the menu item Insert New Object<b>.</b> When <b>OleCreate</b> returns, the object it has created is blank (contains no data), unless <i>renderopt</i> is OLERENDER_DRAW or OLERENDER_FORMAT, and is loaded. Containers typically then call the <a href="api3_1yni.htm"><b>OleRun</b></a> function or <b>IOleObject::DoVerb</b> to show the object for initial editing.</p>
<p>
The <i>rclsid</i> parameter specifies the CLSID of the requested object. CLSIDs of registered objects are stored in the system registry. When an application user selects Insert Object, a selection box allows the user to select the type of object desired from those in the registry. When <b>OleCreate</b> is used to implement the Insert Object menu item, the CLSID associated with the selected item is assigned to the <i>rclsid</i> parameter of <b>OleCreate</b>.</p>
<p>
The <i>riid</i> parameter specifies the interface the client will use to communicate with the new object. Upon successful return, the <i>ppvObject</i> parameter holds a pointer to the requested interface.</p>
<p>
The created object's cache contains information that allows a presentation of a contained object when the container is opened. Information about what should be cached is passed in the <i>renderopt </i>and<i> pFormatetc</i> values. When <b>OleCreate</b> returns, the created object's cache is not necessarily filled. Instead, the cache is filled the first time the object enters the running state. The caller can add additional cache control with a call to <a href="if_o_0med.htm"><b>IOleCache::Cache</b></a> after the return of <b>OleCreate</b> and before the object is run. If <i>renderopt</i> is OLERENDER_DRAW or OLERENDER_FORMAT, <b>OleCreate</b> requires that the object support the <a href="if_o_5tgl.htm"><b>IOleCache</b></a> interface. There is no such requirement for any other value of <i>renderopt</i>.</p>
<p>
If <i>pClientSite</i> is non-NULL, <b>OleCreate</b> calls <a href="if_o_771h.htm"><b>IOleObject::SetClientSite</b></a> through the <i>pClientSite</i> pointer. <b>IOleClientSite</b> is the primary interface by which an object requests services from its container. If <i>pClientSite</i> is NULL, you must make a specific call to <b>IOleObject::SetClientSite</b> before attempting any operations. </p>
<p>
<b>Windows CE:</b> Passing into this function any invalid and, under some circumstances, NULL pointers will result in unexpected termination of the application. For more information about handling exceptions, see Programming Considerations.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.</p>
<h4>See Also</h4>
<p>
<a href="enums_38s2.htm"><b>OLERENDER</b></a>,<b> <a href="structs_14v7.htm">FORMATETC</a></b>,<b> <a href="if_o_444l.htm">IOleClientSite</a></b>, <a href="if_o_9778.htm"><b>IOleObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
