<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAdviseSink2::OnLinkSrcChange</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iadvisesink2_onlinksrcchange"></a>IAdviseSink2::OnLinkSrcChange</h2>
<p>
Notifies the container that registered the advise sink that a link source has changed (either name or location), enabling the container to update the link's moniker.</p>
<pre><code><b>void OnLinkSrcChange(
  IMoniker</b><i> *pmk  </i>//Pointer to the moniker of the new link source
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pmk</i></dt>
<dd>
[in] Pointer to the <b>IMoniker</b> interface identifying the source of a linked object.
</dd>
</dl>
<h4>Remarks</h4>
<p>
A container of linked objects implements this method to receive notification in the event of a change in the moniker of its link source.</p>
<p>
<b>IAdviseSink2::OnLinkSrcChange</b> is called by the OLE link object when it receives the <b>OnRename</b> notification from the link-source (object) application. The link object updates its moniker and sends the <b>OnLinkSrcChange</b> notification to containers that have implemented <a href="if_a2e_9mgi.htm"><b>IAdviseSink2</b></a>.</p>
<h5>Notes to Implementers</h5>
<p>
Nothing prevents a link object from notifying its container of the moniker change by calling <b>IAdviseSink::OnRename</b> instead of <b>OnLinkSrcChange</b>. In practice, however, overloading <b>OnRename</b> to mean either that a link object's moniker has changed or that an embedded object's server name has changed makes it difficult for applications to determine which of these events has occurred. If the two events trigger different processing, as will often be the case, calling a different method for each makes the job of determining which event occurred much easier.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_73fp.htm"><b>IAdviseSink::OnRename</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
