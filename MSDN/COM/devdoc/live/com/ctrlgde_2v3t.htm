<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the Container's Functionality</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_using_the_containers_functionality"></a>Using the Container's Functionality</h2>
<p>
The previous sections have described some of the necessary caller-side support that an ActiveX Control must have in order to access certain features of its container. The following table describes a control's usage of container-side interfaces and when such usage would occur.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=34%>Interface</th>
<th align=left width=20%>Container Object</th>
<th align=left width=46%>Usage</th>
</tr>
<tr valign=top>
<td width=34%><b>IOleClientSite</b></td>
<td width=20%>Site</td>
<td width=46%>Controls that implement <b>IOleObject</b> call <b>IOleClientSite</b> methods as part of the standard OLE embedding protocol, specifically the methods <b>SaveObject</b>, <b>ShowObject</b>, <b>OnShowWindow</b> (only if a separate-window activation state is supported), <b>RequestNewObjectLayout</b>, and <b>GetContainer</b> (if communication with other controls is desired). The <b>GetMoniker</b> method is only used when the control can be linked to externally, that is, the control is not marked with OLEMISC_CANTLINKINSIDE.</td>
</tr>
<tr valign=top>
<td width=34%><b>IOleInPlaceSite</b></td>
<td width=20%>Site</td>
<td width=46%>Controls that have an in-place activate and possibly a UI active state will call <b>IOleInPlaceSite</b> methods (generally all of them with the exception of <b>ContextSensitiveHelp</b>) as part of the standard OLE in-place activation protocol.</td>
</tr>
<tr valign=top>
<td width=34%><b>IAdviseSink</b></td>
<td width=20%>Site</td>
<td width=46%>Control calls <b>OnDataChange</b> if the control supports <b>IDataObject</b>, <b>OnViewChange</b> if the control supports <b>IViewObject2</b>, and <b>OnClose</b>, <b>OnSave</b>, and <b>OnRename</b> if the control supports <b>IOleObject</b>.</td>
</tr>
<tr valign=top>
<td width=34%><b>IOleControlSite</b></td>
<td width=20%>Site</td>
<td width=46%>If supported, control calls <b>OnControlInfoChanged</b> when mnemonics change, <b>LockInPlaceActive</b> and <b>TransformCoords</b> if events are fired (the latter method is only used if coordinates are passed as event arguments), <b>OnFocus</b> and <b>TranslateAccelerator</b> if the control has a UI active state, and <b>GetExtendedControl</b> if the control wants to look at extended-control (container-owned) properties.</td>
</tr>
<tr valign=top>
<td width=34%><b>IDispatch</b> (ambient properties)</td>
<td width=20%>Site</td>
<td width=46%>Used to access ambient properties.</td>
</tr>
<tr valign=top>
<td width=34%><b>IPropertyNotifySink</b></td>
<td width=20%>Varies</td>
<td width=46%>A control must generate <b>OnChanged</b> and <b>OnRequestEdit</b> for any control properties that are marked as <b>[bindable]</b> and <b>[request]</b>, respectively.</td>
</tr>
<tr valign=top>
<td width=34%>Other event sink interfaces</td>
<td width=20%>Varies</td>
<td width=46%>A control that has outgoing interfaces other than <b>IPropertyNotifySink</b> will be handed other interface pointers of the correct IID to the control's <b>IConnectionPoint::Advise</b> implementations (which are usually found in sub-objects of the control). A control always knows how to call its own event interfaces since the control defines those interfaces.</td>
</tr>
<tr valign=top>
<td width=34%><b>IOleInPlaceFrame</b></td>
<td width=20%>Frame</td>
<td width=46%>Used when a control has an in-place UI active state that requires frame-level tools or menu items.</td>
</tr>
<tr valign=top>
<td width=34%><b>IOleInPlaceUIWindow</b></td>
<td width=20%>Document</td>
<td width=46%>Used only when a control has an in-place UI active state that requires document-level or pane-level UI tools. This is rare.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
