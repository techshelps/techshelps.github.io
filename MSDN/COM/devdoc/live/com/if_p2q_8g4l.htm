<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPropertySetStorage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ipropertysetstorage"></a>IPropertySetStorage</h1>
<p>
Creates, opens, deletes, and enumerates property set storages that support instances of the <b>IPropertyStorage</b> interface. The <a href="if_p2q_80md.htm"><b>IPropertyStorage</b></a> interface manages a single property set in a property storage subobject; the <b>IPropertySetStorage</b> interface manages the storage of groups of such property sets. <b>IPropertySetStorage</b> can be supported by any file system entity, and is currently implemented in the OLE compound file object.</p>
<p>
The <b>IPropertySetStorage</b> and <b>IPropertyStorage</b> interfaces provide a uniform way to create and manage property sets, whether or not these sets reside in a storage object that supports <b>IStorage</b>. When called through an object supporting <b>IStorage</b> (such as structured and compound files and directories) or <b>IStream</b>, the property sets created conform to the OLE property set format, described in detail in Appendix C of the OLE Programming Guide. Similarly, properties written using <b>IStorage</b> to the OLE property set format are visible through <b>IPropertySetStorage</b> and <b>IPropertyStorage</b>. <b>IPropertyStorage</b> does not support extensions to the OLE serialized property set format or multiple sections, because you can get equivalent functionality as simply by creating new sets or by adding new properties to existing property sets.</p>
<p>
<b>IPropertySetStorage</b> methods identify property sets through a GUID called a format identifier (FMTID). The FMTID for a property set identifies the set of property identifiers in the property set, their meaning, and any constraints on the values. The format identifier of a property set should also provide the means to manipulate that property set. Only one instance of a given FMTID may exist at a time within a single property storage.</p>
<h5>When to Implement</h5>
<p>
Implement <b>IPropertySetStorage</b> to store persistent properties in the file system. If you are using the OLE compound files implementation, you can use the implementation on the compound file object created through a call to <a href="api4_8hd1.htm"><b>StgCreateDocfile</b></a> or <a href="api4_0hb9.htm"><b>StgOpenStorage</b></a>. Once you have a pointer to any of the interface implementations (such as <b>IStorage</b>) on this object, you can call <b>QueryInterface</b> to get a pointer to the <b>IPropertySetStorage</b> interface implementation.</p>
<h5>When to Use</h5>
<p>
Call <b>IPropertySetStorage</b> methods to create, open, or delete one or more property sets, or to enumerate the property sets contained in this property set storage.</p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>IUnknown Methods</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=55%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=55%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=55%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>IPropertySetStorage Methods</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%><b>Create</b></td>
<td width=55%>Creates a new property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>Open</b></td>
<td width=55%>Opens a previously created property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>Delete</b></td>
<td width=55%>Deletes an existing property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>Enum</b></td>
<td width=55%>Creates and retrieves a pointer to an object that can be used to enumerate property sets.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_80md.htm"><b>IPropertyStorage</b></a>,<b> <a href="if_a2e_317r.htm">IEnumSTATPROPSETSTG</a></b>,<b> <a href="structs_6u07.htm">STATPROPSETSTG</a></b>,<b> <a href="structs_5ppw.htm">PROPVARIANT</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
