<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateILockBytesOnHGlobal</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_createilockbytesonhglobal"></a>CreateILockBytesOnHGlobal</h1>
<p>
Creates a byte array object that allows you use global memory as the physical device underneath a compound file implementation. This object supports an OLE implementation of the <a href="if_f2n_9q9f.htm"><b>ILockBytes</b></a> interface.</p>
<pre><code><b>WINOLEAPI CreateILockBytesOnHGlobal(
  HGLOBAL</b><i> hGlobal</i><b>,</b>       //Memory handle for the byte array object
<b>  BOOL</b><i> fDeleteOnRelease</i><b>,</b>   //Whether to free memory when the object 
                           // is released
<b>  ILockBytes **</b><i> ppLkbyt  </i>//Address of output variable that receives 
                         // the ILockBytes interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hGlobal</i></dt>
<dd>
[in] Memory handle allocated by the <b>GlobalAlloc </b>function. The handle must be allocated as moveable and nondiscardable. If the handle is to be shared between processes, it must also be allocated as shared. New handles should be allocated with a size of zero. If <i>hGlobal</i> is NULL, <b>CreateILockBytesOnHGlobal</b> internally allocates a new shared memory block of size zero.</dd>
<dt>
<i>fDeleteOnRelease</i></dt>
<dd>
[in] IWhether the underlying handle for this byte array object should be automatically freed when the object is released.</dd>
<dt>
<i>ppLkbyt</i></dt>
<dd>
[out] Address of <b>ILockBytes</b>* pointer variable that receives the interface pointer to the new byte array object.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
This function supports the standard return values E_INVALIDARG and </dt>
</dl>
<p>
E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK </dt>
<dd>
The byte array object was created successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>CreateILockBytesOnHGlobal</b> function creates a byte array object based on global memory. This object supports an OLE implementation of the <b>ILockBytes</b> interface, and is intended to be used as the basis for a compound file. You can then use the supplied <b>ILockBytes</b> pointer in a call to the <a href="api4_5ar7.htm"><b>StgCreateDocfileOnILockBytes</b></a> function to build a compound file on top of this byte array object. The <b>ILockBytes</b> instance calls the <b>GlobalReAlloc</b> function to grow the memory block as needed.</p>
<p>
The current contents of the memory block are undisturbed by the creation of the new byte array object. After creating the <b>ILockBytes</b> instance, you can use the <a href="api4_1xdf.htm"><b>StgOpenStorageOnILockBytes</b></a> function to reopen a previously existing storage object already contained in the memory block. You can also call <a href="api2_05df.htm"><b>GetHGlobalFromILockBytes</b></a> to get the global memory handle associated with the byte array object created by <b>CreateILockBytesOnHGlobal</b>.</p>
<p>
<b>Note</b>&nbsp;&nbsp;If you free the <i>hGlobal</i> memory handle, the byte array object is no longer valid. You must call the <b>ILockBytes::Release</b> method before freeing the memory handle.</p>
<p>
The value of the <i>hGlobal</i> parameter can be changed by a subsequent call to the <b>GlobalReAlloc</b> function; thus, you cannot rely on this value after the byte array object is created.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api4_1xdf.htm"><b>StgOpenStorageOnILockBytes</b></a>, <a href="api2_05df.htm"><b>GetHGlobalFromILockBytes</b></a>, <a href="if_f2n_9q9f.htm"><b>ILockBytes</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
