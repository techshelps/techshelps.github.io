<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleItemContainer</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ioleitemcontainer"></a>IOleItemContainer</h1>
<p>
The <b>IOleItemContainer</b> interface is used by item monikers when they are bound to the objects they identify. </p>
<p>
When any container of objects uses item monikers to identify its objects, it must define a naming scheme for those objects. The container's <b>IOleItemContainer</b> implementation uses knowledge of that naming scheme to retrieve an object given a particular name. Item monikers use the container's <b>IOleItemContainer</b> implementation during binding. </p>
<h5>When to Implement</h5>
<p>
You must implement <b>IOleItemContainer</b> if you're a moniker provider handing out item monikers. Being a moniker provider means handing out monikers that identify your objects to make them accessible to moniker clients. You must use item monikers if the objects you're identifying are contained within another object and can be individually identified using a string. </p>
<p>
The most common example of moniker providers are OLE applications that support linking. If your OLE application supports linking to objects smaller than a file-based document, you need to use item monikers. For a server application that allows linking to a portion of a document (such as selections within a document), you use the item monikers to identify those objects. For a container application that allows linking to embedded objects, you use the item monikers to identify the embedded objects. </p>
<p>
You must define a naming scheme for identifying the objects within the container; for example, embedded objects in a document could be identified with names of the form "embedobj1," "embedobj2," and so forth, while ranges of cells in a spreadsheet could be identified with names of the form "A1:E7," "G5:M9," and so forth. (Ranges of cells in a spreadsheet are examples of "pseudo-objects" because they do not have their own persistent storage, but simply represent a portion of the container's internal state.) You create an item moniker that represents an object's name using the <a href="api2_1ktu.htm"><b>CreateItemMoniker</b></a> function and hand it out to a moniker client. When an item moniker is bound, your implementation of <b>IOleItemContainer</b> must be able to take a name and retrieve the corresponding object. </p>
<h5>When to Use</h5>
<p>
Applications typically do not call <b>IOleItemContainer</b> methods directly. The item moniker implementation of <a href="if_f2n_8otu.htm"><b>IMoniker</b></a> is the primary caller of <b>IOleItemContainer</b> methods. </p>
<h4>Methods in VTable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IUnknown Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=52%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=52%>Decrements the reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_p2q_4t5x.htm">IParseDisplayName</a> Method</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_4l5x.htm"><b>ParseDisplayName</b></a> </td>
<td width=52%>Parses object's display name to form moniker.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IOleContainer Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_o_7wj7.htm"><b>EnumObjects</b></a></td>
<td width=52%>Enumerates objects in a container.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_o_8gxe.htm"><b>LockContainer</b></a></td>
<td width=52%>Keeps container running until explicitly released.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IOleItemContainer Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_o_9gz8.htm"><b>GetObject</b></a></td>
<td width=52%>Returns a pointer to a specified object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_o_1nz9.htm"><b>GetObjectStorage</b></a></td>
<td width=52%>Returns a pointer to an object's storage.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_o_499j.htm"><b>IsRunning</b></a></td>
<td width=52%>Checks whether an object is running.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_1ktu.htm"><b>CreateItemMoniker</b></a>, <b><u>IMoniker –</u></b><a href="if_f2n_99ny.htm"><b> Item Moniker Implementation</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
