<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPropertyStorage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ipropertystorage"></a>IPropertyStorage</h1>
<p>
Manages the persistent properties of a single property set. Persistent properties consist of information that can be stored persistently in a property set, such as the summary information associated with a file. This contrasts with run-time properties associated with Controls and Automation, which can be used to affect system behavior. Use the methods of the <b>IPropertySetStorage</b> interface to create or open a persistent property set. An <b>IPropertySetStorage</b> instance can manage zero or more <b>IPropertyStorage</b> instances.</p>
<p>
Each property within a property set is identified by a property identifier, a four-byte ULONG value unique to that set. You can also assign a string name to a property through the <b>IPropertyStorage</b> interface.</p>
<p>
Property identifiers are different from the dispatch identifiers used in Automation <i>dispid</i> property name tags. One difference is that the general-purpose use of property identifier values zero and one is prohibited in <b>IPropertyStorage</b>, while no such restriction exists in <b>IDispatch</b>. In addition, while there is significant overlap in the data types for property values that may be used in <b>IPropertyStorage</b> and <b>IDispatch</b>, the sets are not identical. Persistent property data types used in <b>IPropertyStorage</b> methods are defined in the <a href="structs_5ppw.htm"><b>PROPVARIANT</b></a> structure.</p>
<h5>When to Implement</h5>
<p>
Implement <b>IPropertyStorage</b> when you want to store properties in the file system. If you are using the OLE compound files implementation, the compound file object created through a call to <a href="api4_8hd1.htm"><b>StgCreateDocfile</b></a> includes an implementation of <b>IPropertySetStorage</b>, which allows access to the implementation of <a href="#_com_ipropertystorage"><b>IPropertyStorage</b></a>. Once you have a pointer to any of the interface implementations (such as <b>IStorage</b>) on this object, you can call <b>QueryInterface</b> to get a pointer to the <b>IPropertySetStorage</b> interface implementation, and then call either the <b>Open</b> or <b>Create</b> method, as appropriate to obtain a pointer to the <b>IPropertyStorage</b> interface managing the specified property set.</p>
<h5>When to Use</h5>
<p>
Use IPropertyStorage to create and manage properties that are stored in a given property set. </p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>IUnknown Methods</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=55%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=55%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=45%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=55%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>IPropertyStorage Methods</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%><b>ReadMultiple</b></td>
<td width=55%>Reads property values in a property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>WriteMultiple</b></td>
<td width=55%>Writes property values in a property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>DeleteMultiple</b></td>
<td width=55%>Deletes properties in a property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>ReadPropertyNames</b></td>
<td width=55%>Gets corresponding string names for given property identifiers.</td>
</tr>
<tr valign=top>
<td width=45%><b>WritePropertyNames</b></td>
<td width=55%>Creates or changes string names corresponding to given property identifiers.</td>
</tr>
<tr valign=top>
<td width=45%><b>DeletePropertyNames</b></td>
<td width=55%>Deletes string names for given property identifiers.</td>
</tr>
<tr valign=top>
<td width=45%><b>SetClass</b></td>
<td width=55%>Assigns a CLSID to the property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>Commit</b></td>
<td width=55%>As in <b>IStorage::Commit</b>, flushes or commits changes to the property storage object.</td>
</tr>
<tr valign=top>
<td width=45%><b>Revert</b></td>
<td width=55%>When the property storage is opened in transacted mode, discards all changes since the last commit.</td>
</tr>
<tr valign=top>
<td width=45%><b>Enum</b></td>
<td width=55%>Creates and gets a pointer to an enumerator for properties within this set.</td>
</tr>
<tr valign=top>
<td width=45%><b>Stat</b></td>
<td width=55%>Receives statistics about this property set.</td>
</tr>
<tr valign=top>
<td width=45%><b>SetTimes</b></td>
<td width=55%>Sets modification, creation, and access times for the property set.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_8g4l.htm"><b>IPropertySetStorage</b></a>,<b> <a href="if_a2e_8p9j.htm">IEnumSTATPROPSTG</a></b>,<b> <a href="if_a2e_317r.htm">IEnumSTATPROPSETSTG</a></b>,<b> <a href="structs_10pz.htm">STATPROPSTG</a></b>,<b> <a href="structs_6u07.htm">STATPROPSETSTG</a></b>,<b> <a href="structs_5ppw.htm">PROPVARIANT</a></b> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
