<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Installing as a Win32 Service or User Account</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_com_installing_as_a_win32_service_or_user_account"></a>Installing as a Win32 Service or User Account</h3>
<p>
In addition to running as a <i>local server</i> executable (EXE), a COM object may also package itself to run as a Win32 service when activated by a local or remote client. Win32 services support numerous useful and UI-integrated administrative features, including local and remote starting, stopping, pausing, and restarting, as well as the ability to establish the server to run under a specific user account and Window Station, and optionally to be interactive with the desktop.</p>
<p>
An object written as a Win32 service is installed for use by COM by establishing a <a href="reg_2tgl.htm"><b>LocalService</b></a> named-value under its <a href="reg_33y1.htm"><b>AppID</b></a> key and performing a standard service installation (see the Win32 documentation and the SECSVR distributed COM sample application for more information about installation).</p>
<p>
Classes may also be configured to run under a specific user account when activated by a remote client without being written as a Win32 service. To do this, the class installs a <i>user-name</i> and a <i>password</i> to be used when the SCM launches its <i>local server</i> process.</p>
<p>
When a class is configured in this fashion, calls to <b>CoRegisterClassObject</b> with this CLSID will fail unless the process was launched by COM on behalf of an actual activation request. In other words, classes configured to RunAs a particular user may not be registered under any other identity.</p>
<p>
The user-name is taken from the <a href="reg_7nar.htm"><b>RunAs</b></a> named-value under the class's APPID key. If the user-name is "Interactive User", the class code is run in the security context of the currently logged on user and is connected to the interactive window station.</p>
<p>
Otherwise, the password is retrieved from a secret and safe portion of the registry available only to administrators of the machine and to the system. The user-name and password are then used to create a logon-session in which the class code is run. When launched in this way, the class code runs with its own <i>desktop</i> and <i>window-station</i>, and does not share window-handles, the clipboard, or other UI elements with the interactive user or other classes running in other user accounts.</p>
<p>
A server registered either with <b>LocalService</b> or <b>RunAs</b> can register an object in the running object table to allow any client to connect to it. To do so, the server's call to <a href="if_r2z_33n6.htm"><b>IRunningObjectTable::Register</b></a> must set the ROTFLAGS_ALLOWANYCLIENT flag. A server setting this bit must have its executable name in the <a href="reg_33y1.htm"><b>AppID</b></a> section of the registry that refers to the AppID for the executable. An "activate as activator" server (not registered either as <b>LocalService</b> or <b>RunAs</b>) may not register an object with this flag.</p>
<p>&nbsp;</p></body>
</HTML>
