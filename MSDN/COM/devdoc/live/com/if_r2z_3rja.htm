<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IUnknown::AddRef</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iunknown_addref"></a>IUnknown::AddRef</h2>
<p>
The <b>IUnknown::AddRef</b> method increments the reference count for an interface on an object. It should be called for every new copy of a pointer to an interface on a given object. </p>
<pre><b><code>ULONG AddRef(<i>void</i>);
 </code></b></pre>
<h4>Return Value</h4>
<p>
Returns an integer from 1 to n, the value of the new reference count. This information is meant to be used for diagnostic/testing purposes only, because, in certain situations, the value may be unstable.</p>
<h4>Remarks</h4>
<p>
Objects use a reference counting mechanism to ensure that the lifetime of the object includes the lifetime of references to it. You use <b>IUnknown::AddRef</b> to stabilize a copy of an interface pointer. It can also be called when the life of a cloned pointer must extend beyond the lifetime of the original pointer. The cloned pointer must be released by calling <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>.</p>
<p>
Objects must be able to maintain (2 (31) )-1 outstanding pointer references. Therefore, the internal reference counter that <b>IUnknown::AddRef</b> maintains must be a 32-bit unsigned integer.</p>
<h5>Notes to Callers</h5>
<p>
Call this function for every new copy of an interface pointer that you make. For example, if you are passing a copy of a pointer back from a function, you must call <b>IUnknown::AddRef</b> on that pointer. You must also call <b>IUnknown::AddRef </b>on a pointer before passing it as an in-out parameter to a function; the function will call <b>IUnknown::Release </b>before copying the out-value on top of it. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in unknwn.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a> </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
