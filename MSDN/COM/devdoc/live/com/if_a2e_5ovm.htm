<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDropTarget::DragEnter</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_idroptarget_dragenter"></a>IDropTarget::DragEnter</h2>
<p>
Indicates whether a drop can be accepted, and, if so, the effect of the drop. </p>
<pre><code><b>HRESULT DragEnter(
  IDataObject *</b><i> pDataObject</i><b>,</b>
<b>                     </b>//Pointer to the interface of the source data 
                     // object
<b>  DWORD</b><i> grfKeyState</i><b>, </b>//Current state of keyboard modifier keys
<b>  POINTL</b><i> pt</i><b>,         </b>//Pointer to the current cursor coordinates
<b>  DWORD *</b><i> pdwEffect  </i>//Pointer to the effect of the drag-and-drop 
                     // operation
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pDataObject</i></dt>
<dd>
[in] Pointer to the <a href="if_a2e_24z8.htm"><b>IDataObject</b></a> interface on the data object. This data object contains the data being being transferred in the drag-and-drop operation. If the drop occurs, this data object will be incorporated into the target.</dd>
<dt>
<i>grfKeyState</i></dt>
<dd>
[in] Current state of the keyboard modifier keys on the keyboard. Valid values can be a combination of any of the flags MK_CONTROL, MK_SHIFT, MK_ALT, MK_BUTTON, MK_LBUTTON, MK_MBUTTON, and MK_RBUTTON. </dd>
<dt>
<i>pt</i></dt>
<dd>
[in] Pointer to the current cursor coordinates in the coordinate space of the drop-target window. </dd>
<dt>
<i>pdwEffect</i></dt>
<dd>
[in, out] On entry, pointer to the value of the <i>pdwEffect</i> parameter of the <b>DoDragDrop</b> function. On return, must contain one of the effect flags from the <a href="enums_6bas.htm"><b>DROPEFFECT</b></a> enumeration, which indicates what the result of the drop operation would be.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_OUTOFMEMORY, E_INVALIDARG, and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The method completed its task successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You do not call <b>IDropTarget::DragEnter</b> directly; instead the <a href="api2_5now.htm"><b>DoDragDrop</b></a> function calls it to determine the effect of a drop the first time the user drags the mouse into the registered window of a drop target. </p>
<p>
To implement <b>IDropTarget::DragEnter</b>, you must determine whether the target can use the data in the source data object by checking three things:
<ul>
<li>
The format and medium specified by the data object</li>
<li>
The input value of <i>pdwEffect</i></li>
<li>
The state of the modifier keys</li>
</ul>
<p>
To check the format and medium, use the <b>IDataObject</b> pointer passed in the <i>pDataObject</i> parameter to call <b>IDataObject::EnumFormatEtc</b> so you can enumerate the FORMATETC structures the source data object supports. Then call <b>IDataObject::QueryGetData</b> to determine whether the data object can render the data on the target by examining the formats and medium specified for the data object.</p>
<p>
On entry to <b>IDropTarget::DragEnter</b>, the <i>pdwEffect</i> parameter is set to the effects given to the <i>pdwOkEffect</i> parameter of the <b>DoDragDrop</b> function. The <b>IDropTarget::DragEnter</b> method must choose one of these effects or disable the drop.</p>
<p>
The following modifier keys affect the result of the drop:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=31%>Key Combination</th>
<th align=left width=34%>User-Visible Feedback</th>
<th align=left width=35%>Drop Effect</th>
</tr>
<tr valign=top>
<td width=31%>ctrl + shift</td>
<td width=34%>=</td>
<td width=35%>DROPEFFECT_LINK</td>
</tr>
<tr valign=top>
<td width=31%>ctrl</td>
<td width=34%>+</td>
<td width=35%>DROPEFFECT_COPY</td>
</tr>
<tr valign=top>
<td width=31%>No keys or shift</td>
<td width=34%>None</td>
<td width=35%>DROPEFFECT_MOVE</td>
</tr>
</table><br>
<p>
On return, the method must write the effect, one of the members of the DROPEFFECT enumeration, to the <i>pdwEffect</i> parameter. <a href="api2_5now.htm"><b>DoDragDrop</b></a> then takes this parameter and writes it to its <i>pdwEffect</i> parameter. You communicate the effect of the drop back to the source through <a href="api2_5now.htm"><b>DoDragDrop</b></a> in the <i>pdwEffect</i> parameter. The <b>DoDragDrop</b> function then calls <a href="if_a2e_6lkb.htm"><b>IDropSource::GiveFeedback</b></a> so that the source application can display the appropriate visual feedback to the user through the target window. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_5now.htm"><b>DoDragDrop</b></a>, <a href="if_a2e_12jp.htm"><b>IDropSource</b></a>, <a href="if_a2e_2y7o.htm"><b>IDropTarget</b></a>, <a href="api3_9eeo.htm"><b>RegisterDragDrop</b></a>, <a href="api3_2jow.htm"><b>RevokeDragDrop</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
