<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ILockBytes::ReadAt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ilockbytes_readat"></a>ILockBytes::ReadAt</h2>
<p>
Reads a specified number of bytes starting at a specified offset from the beginning of the byte array object.</p>
<pre><code><b>HRESULT ReadAt(
  ULARGE_INTEGER</b><i> ulOffset</i><b>,</b> 
             //Specifies the starting point for reading data
<b>  void</b><i> *pv</i><b>,  </b>//Points to the buffer into which the data is read
<b>  ULONG</b><i> cb</i><b>,  </b>//Specifies the number of bytes to read
<b>  ULONG</b><i> *pcbRead</i>
<i>             </i>//Pointer to location that contains actual number of 
             //bytes read
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulOffset</i></dt>
<dd>
[in]Specifies the starting point from the beginning of the byte array for reading data.</dd>
<dt>
<i>pv</i></dt>
<dd>
[in]Points to the buffer into which the byte array is read.</dd>
<dt>
<i>cb</i></dt>
<dd>
[in]Specifies the number of bytes of data to attempt to read from the byte array.</dd>
<dt>
<i>pcbRead</i></dt>
<dd>
[out]Pointer to a location where this method writes the actual number of bytes read from the byte array. You can set this pointer to NULL to indicate that you are not interested in this value. In this case, this method does not provide the actual number of bytes read.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Indicates that the specified number of bytes were read, or the maximum number of bytes were read up to the end of the byte array.</dd>
<dt>
E_FAIL</dt>
<dd>
Data could not be read from the byte array.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the data to be read is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and [insert jump to asynchronous storage overview, which is to come].</dd>
<dt>
STG_E_ACCESSDENIED</dt>
<dd>
The caller does not have permission to access the byte array.</dd>
<dt>
STG_E_READFAULT</dt>
<dd>
The number of bytes to be read does not equal the number of bytes that were acutally read.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>ILockBytes::ReadAt</b> reads bytes from the byte array object. It reports the number of bytes that were actually read. This value may be less than the number of bytes requested if an error occurs or if the end of the byte array is reached during the read.</p>
<p>
It is not an error to read less than the specified number of bytes if the operation encounters the end of the byte array. Note that this is the same end-of-file behavior as found in MS-DOS FAT file system files.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_1nhw.htm"><b>ILockBytes::WriteAt</b></a>, <u><b>ILockBytes</b>—</u><a href="if_f2n_3sxa.htm"><b>File-Based Implementation</b></a>, <u><b>ILockBytes</b>—</u><a href="if_f2n_4yem.htm"><b>Global Memory Implementation</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
