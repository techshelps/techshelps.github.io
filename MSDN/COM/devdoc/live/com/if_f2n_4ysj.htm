<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMallocSpy::PreAlloc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imallocspy_prealloc"></a>IMallocSpy::PreAlloc</h2>
<p>
Called just prior to invoking <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>. </p>
<pre><code><b>ULONG PreAlloc(
  ULONG</b><i> cbRequest  </i>//Byte count passed to IMalloc::Alloc
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>cbRequest</i></dt>
<dd>
[in] Number of bytes specified in the allocation request the caller is passing to <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>. 
</dd>
</dl>
<h4>Return Value</h4>
<p>
The byte count actually passed to <b>IMalloc::Alloc</b>, which should be greater than or equal to the value of <i>cbRequest</i>.</p>
<h4>Remarks</h4>
<p>
The <b>IMallocSpy::PreAlloc</b> implementation may extend and/or modify the allocation to store debug-specific information with the allocation. </p>
<p>
<b>PreAlloc</b> can force memory allocation failure by returning 0, allowing testing to ensure that the application handles allocation failure gracefully in all cases. In this case, <b>PostAlloc</b> is not called and <b>Alloc</b> returns NULL. Forcing allocation failure is effective only if <i>cbRequest</i> is not equal to 0. If <b>PreAlloc</b> is forcing failure by returning NULL, <b>PostAlloc</b> is not called. However, if <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a> encounters a real memory failure and returns NULL, <b>PostAlloc</b> is called.</p>
<p>
The call to <b>PreAlloc</b> through the return from <b>PostAlloc</b> is guaranteed to be thread safe. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>, <a href="if_f2n_42eb.htm"><b>IMallocSpy::PostAlloc</b></a>, <a href="api1_2r5l.htm"><b>CoRegisterMallocSpy</b></a>, <a href="api1_2ant.htm"><b>CoRevokeMallocSpy</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
