<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRunningObjectTable::NoteChangeTime</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_irunningobjecttable_notechangetime"></a>IRunningObjectTable::NoteChangeTime</h2>
<p>
Records the time that a running object was last modified. The object must have previously been registered with the Running Object Table (ROT). This method stores the time of last change in the ROT. </p>
<pre><code><b>HRESULT NoteChangeTime(
  DWORD</b><i> dwRegister</i><b>,  </b>//Value identifying registration being updated
<b>  FILETIME</b><i> *pfiletime</i>
<i>                     </i>//Pointer to structure containing object's last 
                     //change time
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwRegister</i></dt>
<dd>
[in] Value identifying the ROT entry of the changed object. This value was previously returned by <a href="if_r2z_33n6.htm"><b>IRunningObjectTable::Register</b></a>.</dd>
<dt>
<i>pfiletime</i></dt>
<dd>
[in] Pointer to a <a href="structs_3vdx.htm"><b>FILETIME</b></a> structure containing the object's last change time.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_INVALIDARG, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The change time was recorded successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The time recorded by this method can be retrieved by calling <a href="if_r2z_3gdh.htm"><b>IRunningObjectTable::GetTimeOfLastChange</b></a>.</p>
<p>
This method is provided to enable a program to check whether a connection between two objects (represented by one object holding a moniker that identifies the other) is up-to-date. For example, if one object is holding cached information about the other object, this method can be used to check whether the object has been modified since the cache was last updated. See <a href="if_f2n_0k9x.htm"><b>IMoniker::GetTimeOfLastChange</b></a>. </p>
<h5>Notes to Callers</h5>
<p>
If you're a moniker provider (that is, you hand out monikers identifying your objects to make them accessible to others), you must call the <b>IRunningObjectTable::NoteChangeTime</b> method whenever your objects are modified. You must have previously called <a href="if_r2z_33n6.htm"><b>IRunningObjectTable::Register</b></a> and stored the identifier returned by that method; you use that identifier when calling <b>IRunningObjectTable::NoteChangeTime</b>.</p>
<p>
The most common type of moniker provider is a compound-document link source. This includes server applications that support linking to their documents (or portions of a document) and container applications that support linking to embeddings within their documents. Server applications that do not support linking can also use the ROT to cooperate with container applications that support linking to embeddings. </p>
<p>
When an object is first registered in the ROT, the ROT records its last change time as the value returned by calling <a href="if_f2n_0k9x.htm"><b>IMoniker::GetTimeOfLastChange</b></a> on the moniker being registered. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_3gdh.htm"><b>IRunningObjectTable::GetTimeOfLastChange</b></a>, <a href="if_f2n_0k9x.htm"><b>IMoniker::GetTimeOfLastChange</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
