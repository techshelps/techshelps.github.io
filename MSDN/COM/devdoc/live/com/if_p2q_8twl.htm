<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersistFile::Save</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ipersistfile_save"></a>IPersistFile::Save</h2>
<p>
Saves a copy of the object into the specified file.</p>
<pre><code><b>HRESULT Save(
  LPCOLESTR</b><i> pszFileName</i><b>,</b>   //Pointer to absolute path of the file 
                           //where the object is saved
<b>  BOOL</b><i> fRemember           </i>//Specifies whether the file is to be the 
                           //current working file or not
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pszFileName</i></dt>
<dd>
[in]Points to a zero-terminated string containing the absolute path of the file to which the object should be saved. If <i>pszFileName</i> is NULL, the object should save its data to the current file, if there is one.</dd>
<dt>
<i>fRemember</i></dt>
<dd>
[in]Indicates whether the <i>pszFileName</i> parameter is to be used as the current working file. If TRUE, <i>pszFileName</i> becomes the current file and the object should clear its dirty flag after the save. If FALSE, this save operation is a "Save A Copy As ..." operation. In this case, the current file is unchanged and the object should not clear its dirty flag. If <i>pszFileName</i> is NULL, the implementation should ignore the <i>fRemember</i> flag.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK </dt>
<dd>
The object was successfully saved.</dd>
<dt>
E_FAIL </dt>
<dd>
The file was not saved.</dd>
<dt>
<b>IPersistFile::Save</b> STG_E_* errors.</dt>
<dd>
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method can be called to save an object to the specified file in one of three ways:
<dl>
<dt>
Save</dt>
<dd>
Call <a href="if_p2q_54dh.htm"><b>IPersistFile::GetCurFile</b></a> first to determine whether the object has an associated filename. If so, call <b>IPersistFile::Save</b> specifying NULL for the <i>pszFileName</i> parameter in this method to indicate that the object should be saved to its current file. Then call <a href="if_p2q_2dno.htm"><b>IPersistFile::SaveCompleted</b></a> to indicate completion.</dd>
<dt>
Save As</dt>
<dd>
Call <b>IPersistFile::Save</b> specifying TRUE in the <i>fRemember</i> parameter and a non-NULL value, indicating the name of the new file the object is to be saved to, for the <i>pszFileName</i> parameter . Then call <b>IPersistFile::SaveCompleted</b> to indicate completion.</dd>
<dt>
Save a Copy As</dt>
<dd>
Call <b>IPersistFile::Save</b> specifying FALSE in the <i>fRemember</i> parameter and a non-NULL value, indicating the name of the new file the object is to be copied to, for the <i>pszFileName</i> parameter.
</dd>
</dl>
<p>
The implementer must detect which type of save operation the caller is requesting. If the <i>pszFileName</i> parameter is NULL, a "Save" is being requested. If the <i>pszFileName</i> parameter is not NULL, use the value of the <i>fRemember</i> parameter to distinguish between a "Save As" and a "Save a Copy As".</p>
<p>
In "Save" or "Save As" operations, <b>IPersistFile::Save</b> clears the internal dirty flag after the save and sends <a href="if_a2e_7s6d.htm"><b>IAdviseSink::OnSave</b></a> notifications to any advisory connections (see also <b>IOleAdviseHolder::SendOnSave</b>). Also, in these operations, the object is in NoScribble mode until it receives an <a href="if_p2q_2dno.htm"><b>IPersistFile::SaveCompleted</b></a> call. In NoScribble mode, the object must not write to the file.</p>
<p>
In the "Save As" scenario, the implementation should also send <a href="if_a2e_73fp.htm"><b>IAdviseSink::OnRename</b></a> notifications to any advisory connections (see also <b>IOleAdviseHolder::SendOnRename</b>).</p>
<p>
In the "Save a Copy As" scenario, the implementation does not clear the internal dirty flag after the save.</p>
<h5>Notes to Callers</h5>
<p>
OLE does not call <b>IPersistFile::Save</b>. Typically, applications would not call it unless they are saving an object to a file directly, which is generally left to the end-user.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_72n9.htm"><b>IOleAdviseHolder::SendOnRename</b></a>, <a href="if_o_36xx.htm"><b>IOleAdviseHolder::SendOnSave</b></a>, <a href="if_p2q_54dh.htm"><b>IPersistFile::GetCurFile</b></a>, <a href="if_p2q_2dno.htm"><b>IPersistFile::SaveCompleted</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
