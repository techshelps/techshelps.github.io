<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Component Objects: C Nested Structures</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_component_objects_c_nested_structures"></a>Component Objects: C Nested Structures</h1>
<p>
C interface implementations comprise data structures nested within the object's data structure. Each interface structure contains a VTBL pointer as its first member (<i>pVtbl</i>), a pointer to the object (<i>pCObj</i>), and a count of the external references to the interface (<i>m_RefCount</i>). The order of the members in the interface structures is identical, to facilitate code sharing.</p>
<pre><code>typedef struct CObj { 
  ULONG            m_ObjRefCount; 
  LPSTORAGE        m_pStg; 
  LPOLEOBJECT      m_pOleObj; 
  struct CDOC    *  m_pCDoc; 
 
  struct InterfaceA  { 
    LPVTBL        pVtbl; 
    struct CObj  *  pCObj; 
    ULONG        m_RefCount; 
  } m_InterfaceA; 
 
  struct InterfaceB { 
    LPVTBL       pVtbl; 
    struct Obj  *    pCObj; 
    ULONG        m_RefCount; 
  } m_InterfaceB; 
 
} COBJ; 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
