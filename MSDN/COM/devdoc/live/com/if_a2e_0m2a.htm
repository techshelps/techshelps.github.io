<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IBindHost::CreateMoniker</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ibindhost_createmoniker"></a>IBindHost::CreateMoniker</h2>
<p>
Provides the caller with a means to turn text string into a moniker such that the caller does not have to interpret the name in any way itself. In many cases, the implementation of <b>IBindHost::CreateMoniker</b> will simply call <b>MkParseDisplayNameEx</b>, but this method gives the implementor of <b>IBindHost</b><i> </i>a chance to catch host-specific strings that <b>MkParseDisplayNameEx</b> would not otherwise recognize. Specifically, <b>IBindHost::CreateMoniker</b> should resolve <i>relative</i> path names into <i>absolute</i> pathnames when interpreting the <i>pszName</i>.</p>
<pre><code><b>HRESULT CreateMoniker(
  LPOLESTR </b><i> pszName</i><b>,  </b>//Pointer to the string to parse
<b>  IMoniker **</b><i> ppmk    </i>//Address of output variable that receives the 
                      // IMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pszName</i></dt>
<dd>
[in] Pointer to the string containing the name to parse.</dd>
<dt>
<i>ppmk</i></dt>
<dd>
[out] Address of <b>IMoniker</b>* pointer variable that receives the interface pointer to the moniker created from <i>pszName</i>. The caller is responsible for calling <b>IMoniker::Release</b> when the moniker is no longer needed.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The moniker was successfully obtained and the caller is responsible for the interface pointer.</dd>
<dt>
E_OUTOFMEMORY</dt>
<dd>
There is insufficient memory to create the moniker.</dd>
<dt>
E_UNEXPECTED</dt>
<dd>
An unexpected error occurred.</dd>
<dt>
MK_E_SYNTAX</dt>
<dd>
The bind host was unable to parse the string into a moniker because the information in the name was unrecognizable.
</dd>
</dl>
<h4>Remarks</h4>
<p>
E_NOTIMPL is not allowed — a bind host is responsible for providing moniker parsing services.</p>
<p>
</p>
<p>
</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in urlmon.h.</p>
<p>&nbsp;</p></body>
</HTML>
