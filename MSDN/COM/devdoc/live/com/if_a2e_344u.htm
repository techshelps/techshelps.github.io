<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IExternalConnection::AddConnection</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iexternalconnection_addconnection"></a>IExternalConnection::AddConnection</h2>
<p>
Increments an object's count of its strong external connections (links).</p>
<pre><code><b>HRESULT AddConnection(
  DWORD</b><i> exconn</i><b>,     </b>//Type of external connection
<b>  DWORD</b><i> dwreserved  </i>//Used by OLE to pass connection information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>exconn</i></dt>
<dd>
[in] Type of external connection to the object. The only type of external connection currently supported by this interface is strong, which means that the object must remain alive as long as this external connection exists. Strong external connections are represented by the value EXTCONN_STRONG = 0x0001, which is defined in the enumeration <b>EXTCONN</b>.</dd>
<dt>
<i>dwreserved</i></dt>
<dd>
[in] Passes information about the connection. This parameter is reserved for use by OLE. Its value can be zero, but not necessarily. Therefore, implementations of <b>AddConnection</b> should not contain blocks of code whose execution depends on whether a zero value is returned.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
<b>DWORD</b> value</dt>
<dd>
The number of reference counts on the object; used for debugging purposes only.
</dd>
</dl>
<h4>Remarks</h4>
<p>
An object created by a EXE object server relies on its stub manager to call <b>IExternalConnection::AddConnection</b> whenever a link client activates and therefore creates an external lock on the object. When the link client breaks the connection, the stub manager calls <a href="if_a2e_0372.htm"><b>IExternalConnection::ReleaseConnection</b></a> to release the lock.</p>
<p>
Since DLL object applications exist in the same process space as their objects, they do not use RPC (remote procedure calls) and therefore do not have stub managers to keep track of external connections. Therefore, DLL servers that support external links to their objects must implement <b>IExternalConnection</b> so link clients can directly call the interface to inform them when connections are added or released.</p>
<p>
The following is a typical implementation for the <b>AddConnection</b> method:</p>
<p>
DWORD XX::AddConnection(DWORD extconn, DWORD dwReserved)<br>
{<br>
    return extconn&amp;EXTCONN_STRONG ? ++m_cStrong : 0;<br>
}</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0372.htm"><b>IExternalConnection::ReleaseConnection</b></a>, <a href="if_r2z_1o4n.htm"><b>IRunnableObject::LockRunning</b></a>, <a href="api3_6yg7.htm"><b>OleLockRunning</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
