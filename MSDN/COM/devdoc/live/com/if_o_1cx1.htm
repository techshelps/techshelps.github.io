<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleAdviseHolder::EnumAdvise</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleadviseholder_enumadvise"></a>IOleAdviseHolder::EnumAdvise</h2>
<p>
Creates an enumerator that can be used to enumerate the advisory connections currently established for an object, and supplies a pointer to its <a href="if_a2e_0a8x.htm"><b>IEnumSTATDATA</b></a> interface.</p>
<pre><code><b>HRESULT EnumAdvise(
  IEnumSTATDATA **</b><i> ppenumAdvise  </i>//Address of output variable that 
                                 // receives the IEnumSTATDATA 
                                 // interface pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppenumAdvise</i></dt>
<dd>
[out] Address of <b>IEnumSTATDATA</b>* pointer variable that receives the interface pointer to the new enumerator. A NULL value for *<i>ppenumAdvise</i> indicates that there are presently no advisory connections on the object, or that an error occurred. The advise holder is responsible for incrementing the reference count on the <b>IEnumSTATDATA</b> pointer this method supplies. It is the caller's responsibility to call <b>IUnknown::Release</b> when it is done with the pointer.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_FAIL, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
Enumerator created successfully.</dd>
<dt>
E_NOTIMPL</dt>
<dd>
<b>EnumAdvise</b> is not implemented.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IOleAdviseHolder::EnumAdvise</b> creates an enumerator that can be used to enumerate an object's established advisory connections. The method supplies a pointer to the <a href="if_a2e_0a8x.htm"><b>IEnumSTATDATA</b></a> interface on this enumerator. Advisory connection information for each connection is stored in the <a href="structs_14dd.htm"><b>STATDATA</b></a> structure, and the enumerator must be able to enumerate these structures, defined as follows:</p>
<pre><code>typedef struct tagSTATDATA { 
    FORMATETC         Formatetc; 
    DWORD             grfAdvf; 
    IAdviseSink *     pAdvise; 
    DWORD             dwConnection; 
    }STATDATA; 
 </code></pre>
<p>
For this method, the only relevant structure members are <i>pAdvise</i> and <i>dwConnection</i>. Other members contain data advisory information. When you call the enumeration methods, and while an enumeration is in progress, the effect of registering or revoking advisory connections on what is to be enumerated is undefined.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_9uw5.htm"><b>IOleAdviseHolder::Advise</b></a>,<b> <a href="if_o_6izp.htm">IOleAdviseHolder::UnAdvise</a></b>,<b> <a href="if_o_1cpx.htm">IOleObject::EnumAdvise</a></b>, <a href="if_a2e_76p1.htm"><b>IDataAdviseHolder::EnumAdvise</b></a>, <a href="structs_14dd.htm"><b>STATDATA</b></a> structure</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
