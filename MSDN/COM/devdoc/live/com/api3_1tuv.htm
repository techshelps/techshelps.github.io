<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReadFmtUserTypeStg</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_readfmtusertypestg"></a>ReadFmtUserTypeStg</h1>
<p>
Returns the clipboard format and user type previously saved with the <a href="api4_4kx3.htm"><b>WriteFmtUserTypeStg</b></a> function.</p>
<pre><code><b>WINOLEAPI ReadFmtUserTypeStg(
  IStorage *</b><i> pStg</i><b>,  </b>//Pointer to storage object holding the values
<b>  CLIPFORMAT *</b><i> pcf</i><b>, </b>//Pointer to return the clipboard format
<b>  LPWSTR *</b><i> lplpszUserType</i>
<i>                    </i>//Address of output variable that receives a 
                    // pointer to the requested user type string
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pStg</i></dt>
<dd>
[in] Pointer to the <b>IStorage</b> interface on the storage object from which the information is to be read.</dd>
<dt>
<i>pcf</i></dt>
<dd>
[out] Pointer to where the clipboard format is to be written on return. It can be NULL, indicating the format is of no interest to the caller.</dd>
<dt>
<i>lplpszUserType</i></dt>
<dd>
[out] Address of <b>LPWSTR</b> pointer variable that receives a pointer to the user type string. The caller can specify NULL for this parameter indicating that the user type is of no interest. This function allocates memory for the string. The caller is responsible for freeing the memory with <b>CoTaskMemFree</b>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_FAIL, E_INVALIDARG, and E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK </dt>
<dd>
The requested information was read successfully.
</dd>
</dl>
<p>
This function also returns any of the error values returned by the <a href="if_r2z_14mc.htm"><b>ISequentialStream::Read</b></a> method.</p>
<h4>Remarks</h4>
<p>
This function returns the clipboard format and the user type string from the specified storage object. The <a href="api4_6smf.htm"><b>WriteClassStg</b></a> function must have been called before calling the <b>ReadFmtUserTypeStg</b> function.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api1_63l1.htm"><b>CoTaskMemFree</b></a>, <a href="api4_4kx3.htm"><b>WriteFmtUserTypeStg</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
