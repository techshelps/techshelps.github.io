<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Turning Off Call Security Using DCOMCNFG</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h4><a name="_com_turning_off_call_security_using_dcomcnfg"></a>Turning Off Call Security Using DCOMCNFG</h4>
<p>
Call security can most easily be turned off by using Dcomcnfg.exe to modify the registry. However, using Dcomcnfg.exe to turn security off will only work if both the client and the server do not call <b>CoInitializeSecurity</b>. The reason for this is that when <b>CoInitializeSecurity</b> is called, DCOM ignores the registry settings and using the values supplied to <b>CoInitializeSecurity</b> instead. </p>
<p>
To turn security off with Dcomcnfg.exe, both the client and the server must set their Authentication Levels to <b>None</b>. The following steps must be completed:
<ol>
<li>
Run Dcomcnfg.exe.</li>
<li>
On the <b>Applications</b> page, select the application that represents the server. Click the <b>Properties</b> button (or double-click the selected application).</li>
<li>
Click the <b>General</b> tab.</li>
<li>
From the <b>Default Authentication Level </b>list box, select (None).</li>
<li>
Click the <b>Apply </b>button to apply changes; however, changes are not applied to any running instances of the application.</li>
<li>
If the client appears on the list on the <b>Applications</b> page, repeat steps 2 through 5, choosing the client instead of the server for step 2. Then click the <b>OK</b> button. <p>
If the client is not on the list, then you have two choices. You can either set the client's Authentication Level to <b>None</b> on a machine-wide basis using Dcomcnfg.exe, or you can set the client's authentication level to <b>None</b> programmatically. To use the first method, follow the step-by-step procedure below. (For more information about the second method, see <a href="comext_28zd.htm"><b>Turning Off Call Security Programmatically</b></a>). 
</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To set the Authentication Level to None on a machine-wide basis:</h5>
<p>
<b>Warning</b>&nbsp;&nbsp;Setting the machine-wide Authentication Level to <b>None</b> is extremely unsecure. </p>
<ol>
<li>
Run Dcomcnfg.exe.</li>
<li>
Choose the <b>Default Properties</b> tab.</li>
<li>
From the <b>Default Authentication Level</b> list box, choose <b>(None)</b>.</li>
<li>
Click the <b>OK</b> button.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
