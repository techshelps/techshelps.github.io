<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IStorage::EnumElements</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_istorage_enumelements"></a>IStorage::EnumElements</h2>
<p>
Retrieves a pointer to an enumerator object that can be used to enumerate the storage and stream objects contained within this storage object.</p>
<pre><code><b>HRESULT EnumElements(
  DWORD</b><i> reserved1</i><b>,  </b>//Reserved; must be zero
<b>  void *</b><i> reserved2</i><b>, </b>//Reserved; must be NULL
<b>  DWORD</b><i> reserved3</i><b>,  </b>//Reserved; must be zero
<b>  IEnumSTATSTG **</b><i> ppenum</i>
<i>                    </i>//Address of output variable that receives the 
                    // IEnumSTATSTG interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>reserved1</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>reserved2</i></dt>
<dd>
[in] Reserved for future use; must be NULL.</dd>
<dt>
<i>reserved3</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>ppenum</i></dt>
<dd>
[out] Address of <b>IEnumSTATSTG</b>* pointer variable that receives the interface pointer to the new enumerator object.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The enumerator object was successfully returned.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the element's data is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and <a href="asyncstg_86cl.htm">Asynchronous Storage</a>. </dd>
<dt>
STG_E_INSUFFICIENTMEMORY</dt>
<dd>
The enumerator object could not be created due to lack of memory.</dd>
<dt>
STG_E_INVALIDPARAMETER</dt>
<dd>
One of the parameters was not valid.</dd>
<dt>
STG_E_REVERTED</dt>
<dd>
The storage object has been invalidated by a revert operation above it in the transaction tree.</dd>
</dl>
<h4>Remarks</h4>
<p>
The enumerator object returned by this method implements the <a href="if_a2e_8ovb.htm"><b>IEnumSTATSTG</b></a> interface, one of the standard enumerator interfaces that contain the <b>Next</b>, <b>Reset</b>, <b>Clone</b>, and <b>Skip</b> methods. <b>IEnumSTATSTG</b> enumerates the data stored in an array of <a href="structs_7x7r.htm"><b>STATSTG</b></a> structures.</p>
<p>
The storage object must be open in read mode to allow the enumeration of its elements.</p>
<p>
The order in which the elements are enumerated and whether the enumerator is a snapshot or always reflects the current state of the storage object, and depends on the <a href="if_r2z_9b8l.htm"><b>IStorage</b></a> implementation. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_954e.htm"><b>IStorage - Compound File Implementation</b></a>, <a href="if_a2e_8yns.htm"><b>IEnumXXXX</b></a>, <a href="if_a2e_8ovb.htm"><b>IEnumSTATSTG</b></a>, <a href="structs_7x7r.htm"><b>STATSTG</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
