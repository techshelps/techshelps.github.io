<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleObject::GetMoniker</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleobject_getmoniker"></a>IOleObject::GetMoniker</h2>
<p>
Retrieves an embedded object's moniker, which the caller can use to link to the object.</p>
<pre><code><b>HRESULT GetMoniker(
  DWORD</b><i> dwAssign</i><b>,  </b>//Specifies how moniker is assigned to object
<b>  DWORD</b><i> dwWhichMoniker</i><b>,</b>
<b>                   </b>//Specifies which moniker is assigned
<b>  IMoniker</b><i> **ppmk  </i>//Address of output variable that receives the 
                   // IMoniker interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwAssign</i></dt>
<dd>
[in] Determines how the moniker is assigned to the object. Depending on the value of <i>dwAssign</i>, <b>IOleObject::GetMoniker</b> does one of the following: 
<ul>
<li>
Obtains a moniker only if one has already been assigned,</li>
<li>
Forces assignment of a moniker, if necessary, in order to satisfy the call, or</li>
<li>
Obtains a temporary moniker.</li>
</ul>

<p>
Values for <i>dwAssign</i> are specified in the enumeration <a href="enums_6w4y.htm"><b>OLEGETMONIKER</b></a>.


<p>
<b>Note</b>&nbsp;&nbsp;You cannot pass OLEGETMONIKER_UNASSIGN when calling <b>IOleObject::GetMoniker</b>. This value is valid only when calling <b>IOleClientSite::GetMoniker</b>.

</dd>
<dt>
<i>dwWhichMoniker</i></dt>
<dd>
[in] Specifies the form of the moniker being requested. Valid values are taken from the enumeration <a href="enums_0pij.htm"><b>OLEWHICHMK</b></a>.</dd>
<dt>
<i>ppmk</i></dt>
<dd>
[out] Address of <b>IMoniker</b>* pointer variable that receives the interface pointer to the object's moniker. If an error occurs, *<i>ppmk</i> must be set to NULL. Each time an object receives a call to <b>GetMoniker</b>, it must increase the reference count on *<i>ppmk</i>. It is the caller's responsibility to call Release when it is done with *<i>ppmk</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>IOleObject::GetMoniker</b> method returns an object's moniker. Like <b>IOleObject::SetMoniker</b>, this method is important only in the context of managing links to embedded objects and even in that case is optional. A potential link client that requires an object's moniker to bind to the object can call this method to obtain that moniker. The default implementation of <b>IOleObject::GetMoniker</b> calls the <b>IOleClientSite::GetMoniker</b>, returning E_UNEXPECTED if the object is not running or does not have a valid pointer to a client site.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_1ktu.htm"><b>CreateItemMoniker</b></a>, <a href="if_o_8o1e.htm"><b>IOleClientSite::GetMoniker</b></a>, <a href="if_o_0vjm.htm"><b>IOleObject::SetMoniker</b></a>, <a href="enums_6w4y.htm"><b>OLEGETMONIKER</b></a>, <a href="enums_0pij.htm"><b>OLEWHICHMK</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
