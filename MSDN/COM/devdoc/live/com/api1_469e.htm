<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BindMoniker</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_bindmoniker"></a>BindMoniker</h1>
<p>
Locates an object by means of its moniker, activates the object if it is inactive, and retrieves a pointer to the specified interface on that object.</p>
<pre><code><b>HRESULT BindMoniker(
  LPMONIKER</b><i> pmk</i><b>,     </b>//Pointer to the object's moniker
<b>  DWORD</b><i> grfOpt</i><b>,      </b>//Reserved
<b>  REFIID</b><i> iidResult</i><b>,  </b>//Interface identifier
<b>  LPVOID FAR</b><i> *ppvResult</i>
<i>                     </i>//Address of output variable that receives the 
                     // interface pointer requested in <i>iidResult</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pmk</i></dt>
<dd>
[in] Pointer to the object's moniker.</dd>
<dt>
<i>grfOpt</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>iidResult</i></dt>
<dd>
[in] Interface identifier to be used to communicate with the object.</dd>
<dt>
<i>ppvResult</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>iidResult</i>. Upon successful return, *<i>ppvResult</i> contains the requested interface pointer. If an error occurs, *<i>ppvResult</i> is NULL. If the call is successful, the caller is responsible for releasing the pointer with a call to the object's <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a>. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The object was located and activated, if necessary, and that a pointer to the requested interface was returned.</dd>
<dt>
MK_E_NOOBJECT</dt>
<dd>
The object that the moniker object identified could not be found. 
</dd>
</dl>
<p>
This function can also return any of the error values returned by the <a href="if_f2n_7o6s.htm"><b>IMoniker::BindToObject</b></a> method.</p>
<h4>Remarks</h4>
<p>
<b>BindMoniker</b> is a helper function supplied as a convenient way for a client that has the moniker of an object to obtain a pointer to one of its interfaces. The <b>BindMoniker</b> function packages the following calls:</p>
<pre><code>CreateBindCtx(0, &amp;pbc); 
pmk-&gt;BindToObject(pbc, NULL, riid, ppvObj); 
 </code></pre>
<p>
<b>CreateBindCtx</b> creates a bind context object that supports the system implementation of <b>IBindContext</b>. The <i>pmk</i> parameter is actually a pointer to the <b>IMoniker</b> implementation on a moniker object. This implementation's <b>BindToObject</b> method supplies the pointer to the requested interface pointer.</p>
<p>
If you have several monikers to bind in quick succession, and if you know that those monikers will activate the same object, it may be more efficient to call the <a href="if_f2n_7o6s.htm"><b>IMoniker::BindToObject</b></a> method directly, which allows you to use the same bind context object for all the monikers. See the <a href="if_a2e_06bc.htm"><b>IBindCtx</b></a> interface for more information.</p>
<p>
Container applications that allow their documents to contain linked objects are a special client that generally does not make direct calls to <b>IMoniker</b> methods. Instead, the client manipulates the linked objects through the <a href="if_o_0r1n.htm"><b>IOleLink</b></a> interface. The default handler implements this interface and calls the appropriate <b>IMoniker</b> methods as needed. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="api2_0ad4.htm"><b>CreateBindCtx</b></a>, <a href="if_f2n_7o6s.htm"><b>IMoniker::BindToObject</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
