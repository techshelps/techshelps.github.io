<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CoInitializeEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_coinitializeex"></a>CoInitializeEx</h1>
<p>
Initializes the COM library for use by the current apartment and specifies the apartment's concurrency model. </p>
<pre><code><b>HRESULT CoInitializeEx(
  void *</b><i> pvReserved</i><b>,  </b>//Reserved
<b>  DWORD</b><i> dwCoInit      </i>//COINIT value
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pvReserved</i></dt>
<dd>
[in] Reserved; must be NULL.</dd>
<dt>
<i>dwCoInit</i></dt>
<dd>
[in] Flags specifying the concurrency model and initialization options for the thread. Values for this parameter are taken from the <a href="enums_4oqc.htm"><b>COINIT</b></a> enumeration. This may contain any combination of values from the COINIT enumeration, except that the COINIT_APARTMENTTHREADED and COINIT_MULTITHREADED flags cannot both be set. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return values E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK </dt>
<dd>
The COM library was initialized successfully.</dd>
<dt>
S_FALSE</dt>
<dd>
The COM library is already initialized.</dd>
<dt>
RPC_E_CHANGED_MODE</dt>
<dd>
A previous call to <b>CoInitializeEx</b> specified a different concurrency model for this thread. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
If neither concurrency model is specified by the <i>dwCoInit </i>parameter, the default is COINIT_APARTMENTTHREADED.</p>
<p>
Objects created on a COM thread in a multithread apartment (MTA) must be able to receive method calls from other threads at any time. You would typically implement some form of concurrency control in a multithreaded object's code using Win32 synchronization primitives such as <i>critical sections</i>, <i>semaphores</i>, or <i>mutexes</i> to protect the object's data. </p>
<p>
Objects created in a single-threaded apartment (STA) receive method calls only from their apartment's thread, so calls are serialized and arrive only at message-queue boundaries (<b>PeekMessage</b>, <b>SendMessage</b>).</p>
<p>
Apartments must call <b>CoInitializeEx</b> or <a href="api1_36qt.htm"><b>CoInitialize</b></a> before calling any other COM library functions except <a href="api1_2qlf.htm"><b>CoGetMalloc</b></a> function and other memory allocation calls (<a href="api1_9bj7.htm"><b>CoTaskMemAlloc</b></a>, <a href="api1_63l1.htm"><b>CoTaskMemFree</b></a>, <a href="api1_3lpf.htm"><b>CoTaskMemReAlloc</b></a>, and the <a href="if_f2n_5h5v.htm"><b>IMalloc</b></a> methods on the task allocator supplied by <b>CoGetMalloc</b>). </p>
<p>
<a href="#_com_coinitializeex"><b>CoInitializeEx</b></a> provides the same functionality as <b>CoInitialize</b> and also provides a parameter to explicitly specify the thread's concurrency model. The current implementation of <b>CoInitialize</b> calls <b>CoInitializeEx</b> and specifies the concurrency model as single-thread apartment. Applications developed today should call <b>CoInitializeEx</b> rather than <b>CoInitialize</b>. </p>
<p>
Typically, <b>CoInitializeEx</b> is called only once by each apartment in the process that uses the COM library. For a multithread apartment, one call is sufficient for all threads in the apartment. </p>
<p>
Multiple calls to <b>CoInitializeEx</b> by the same thread are allowed as long as they pass the same concurrency flag, but subsequent valid calls return S_FALSE. To close the library gracefully, each successful call to <b>CoInitialize</b> or <b>CoInitializeEx</b>, including calls that return S_FALSE, must be balanced by a corresponding call to <a href="api1_7vqd.htm"><b>CoUninitialize</b></a>.</p>
<p>
Once the concurrency model for an apartment is set, it cannot be changed. A call to <b>CoInitializeEx</b> on an apartment that was previously initialized with a different concurrency model will fail and return RPC_E_CHANGED_MODE. </p>
<p>
Because OLE technologies are not thread-safe, the <a href="api3_6med.htm"><b>OleInitialize</b></a> function calls <b>CoInitializeEx</b> with the COINIT_APARTMENTTHREADED flag. As a result, an apartment that is initialized for multithreaded object concurrency cannot use the features enabled by <b>OleInitialize</b>.</p>
<p>
<b>Windows CE:</b> The <b>CoInitializeEx</b> function initializes the Component Object Model (COM), including the OLE library, for use by the current thread. The <i>dwCoInit</i> parameter specifies the type of concurrency control required by objects created by this thread. Windows CE supports only the multi-threaded concurrency control. Thus, COINIT_MULTITHREADED is the only option permitted for the <i>dwCoInit</i> parameter.</p>
<p>
Compound document applications must call <b>CoInitializeEx</b> before calling any other function in the OLE library.</p>
<p>
Windows CE does not support the <b>CoInitialize(</b><i>NULL</i><b>) </b>or <b>OleInitialize</b> function. Use <b>CoInitializeEx</b> instead.</p>
<p>
Passing into this function any invalid and, under some circumstances, NULL pointers will result in unexpected termination of the application. For more information about handling exceptions, see Programming Considerations.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Use version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="enums_4oqc.htm"><b>COINIT</b></a>, <a href="api1_36qt.htm"><b>CoInitialize</b></a>, <a href="com_98mr.htm"><b>Processes and Threads</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
