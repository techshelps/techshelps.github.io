<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IBindStatusCallback::QueryInterface</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ibindstatuscallback_queryinterface"></a>IBindStatusCallback::QueryInterface</h2>
<p>
An asynchronous moniker calls this method to query the client for additional services necessary to complete the bind operation.</p>
<pre><code><b>HRESULT QueryInterface(
  REFIID </b><i> riid</i><b>,  </b>//Interface identifier for the requested service
<b>  void</b><i> **ppvObject</i>
<i>                 </i>//Address of output variable that receives the 
                 // interface pointer requested in <i>riid</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>riid</i></dt>
<dd>
[in] Interface identifier for the requested service.</dd>
<dt>
<i>ppvObjectt</i></dt>
<dd>
[out] Address of pointer variable that receives the interface pointer requested in <i>riid</i>. Upon successful return, *<i>ppvObject</i> contains the interface pointer to the requested service.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The operation was successful. The moniker uses the requested interface to communicate further information about the bind operation.</dd>
<dt>
E_NOINTERFACE</dt>
<dd>
The client does not support the requested interface. Note that if none of the callback interfaces registered for the bind operation can support the requested interface, the bind operation performs a default action.</dd>
<dt>
E_OUTOFMEMORY</dt>
<dd>
The operation ran out of memory and did not complete successfully.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more parameters are not valid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method provides extensibility to the <b>IBindStatusCallback</b> interface by allowing the moniker to query its client for additional callback interfaces to notify the client or query the client for further information.</p>
<p>
The client of an asynchronous moniker can provide additional callback interfaces through the <b>IServiceProvider</b> interface. After the moniker calls <b>IBindStatusCallback::QueryInterface</b> to directly query for an extension interface, the moniker can then query for the <b>IServiceProvider</b> interface and can call <b>IServiceProvider::QueryService</b> to query for the desired extension interface. Because <b>IServiceProvider::QueryService</b> is not restricted by COM identity rules that apply to the <b>IBindStatusCallback::QueryInterface</b> method, the <b>IServiceProvider::QueryService</b> method allows moniker clients to delegate extension services to other objects. Note that if a client is delegating an <b>IServiceProvider::QueryService</b> request to a different callback object, the client should first delegate an interface acquired through the second object's <b>IBindStatusCallback::QueryInterface</b> before querying the second object for <b>IServiceProvider</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in urlmon.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0oyv.htm"><b>IBinding</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
