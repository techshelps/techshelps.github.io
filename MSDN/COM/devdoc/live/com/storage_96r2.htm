<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Code pages: Unicode strings, Macintosh, etc.</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_code_pages_unicode_strings_macintosh_etc."></a>Code pages: Unicode strings, Macintosh, etc.</h2>
<p>
Another consideration is how Unicode property names are stored in the property ID 0 (the property name dictionary), which is not specified per se to use Unicode strings.</p>
<p>
This is straightforward. Unicode officially has a code page value of 1200. To store Unicode values in the property name dictionary, use a code page value of 1200 for the whole property set (in property ID 1, of course), specified by the absence of the PROPSETFLAG_ANSI flag in <a href="if_p2q_1uxx.htm"><b>IPropertySetStorage::Create</b></a>. Note that this has the side effect of storing <i>all</i> string values in the property set in Unicode. In all code pages, the count found at the start of a VT_LPSTR s a <i>byte</i> count, not a character count. This is necessary to provide for smooth interoperability with down-level clients.</p>
<p>
The compound file implementation of <b>IPropertySetStorage</b> creates all <i>new </i>property sets completely either in Unicode (code page 1200) or in the current system ANSI code page. This is controlled by the absence or presence of the PROPSETFLAG_ANSI flag in the <i>grfFlags</i> parameter of <b>IPropertySetStorage::Create</b>.</p>
<p>
It is recommended that property sets be created or opened as Unicode, by not setting the PROPSETFLAG_ANSI flag in the <i>grfFlags</i> parameter of <b>IPropertySetStorage::Create</b>. It is also recommended that you avoid using VT_LPSTR values, and use VT_LPWSTR values instead. When the property set code page is Unicode, VT_LPSTR string values are converted to Unicode when stored, and back to multibyte string values when retrieved. When the code page of the property set is not Unicode, property names, VT_BSTR strings, and non-simple property values are converted to multibyte strings when stored, and converted back to Unicode when retrieved. If the property set code page is Unicode, VT_LPSTR string values are converted to Unicode when stored, and back to multibyte string values when retrieved. </p>
<p>
The setting of the PROPSETFLAG_ANSI flag as reported through a call to <a href="if_p2q_0xmc.htm"><b>IPropertyStorage::Stat</b></a> simply reflects whether the underlying code page is not Unicode or is Unicode. Note, though, property ID 1 can be explicitly read to learn the code page.</p>
<p>
Property ID 1 is accessible through <b>IPropertyStorage::ReadMultiple</b>. However, it is read-only, and may not be updated with <b>WriteMultiple</b>. Further, it may not be deleted with <b>DeleteMultiple</b>.</p>
<p>&nbsp;</p></body>
</HTML>
