<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Monikers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_class_monikers"></a>Class Monikers</h2>
<p>
Although classes are typically identified directly with CLSID's to APIs such as <b>CoCreateInstance</b> or <b>CoGetClassObject</b>, classes may also now be identified with a moniker called a class moniker. Class monikers bind to the class object of the class for which they are created.</p>
<p>
The ability to identify classes with a moniker supports useful operations which are otherwise unweildy. For example, file monikers traditionally only supported rich binding to the class associated with the class of file they referred to – a moniker to an Excel file would bind to an instance of an Excel object, and a moniker to a GIF image would bind to an instance of the currently registered GIF handler. Class moniker allows you to indicate the class you want to use to manipulate a file through composition with a file moniker. A class moniker for a 3D charting class composed with a moniker to an Excel file yields a moniker which binds to an instance of the 3D charting object and initializes the object with the contents of the Excel file.</p>
<p>
Class monikers are therefore most useful in composition with other types of monikers, such as file monikers or item monikers.</p>
<p>
Class monikers may also be composed to the right of monikers supporting binding to the <a href="if_a2e_5wz6.htm"><b>IClassActivator</b></a> interface. When composed in this manner <b>IClassActivator</b> simply gives access to the class object and instances of the class through <a href="if_a2e_8qwk.htm"><b>IClassActivator::GetClassObject</b></a>. Class monikers may be identified through <b>IMoniker::IsSystemMoniker</b> which returns MKSYS_CLASSMONIKER in <i>pdwMkSys</i>.</p>
<p>
Programmers typically create class monikers using the <b>CreateClassMoniker</b> function or through <b>MkParseDisplayName</b> (see <a href="if_f2n_7ir2.htm"><b>IMoniker - Class Moniker Implementation</b></a> about <b>ParseDisplayName</b> for details).</p>
<p>&nbsp;</p></body>
</HTML>
