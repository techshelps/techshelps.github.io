<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProgID Key</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_progid_key"></a>ProgID Key</h1>
<p>
A ProgID, or programmatic identifier, is a registry entry that can be associated with a CLSID. The format of a ProgID is &lt;<i>Vendor</i>&gt;.&lt;<i>Component</i>&gt;.&lt;<i>Version</i>&gt;, separated by periods and with no spaces, as in Word.Document.6. Like the CLSID, the ProgID identifies a class, but with less precision.</p>
<h4>Registry Entry</h4>
<p>
<b>HKEY_LOCAL_MACHINE\SOFTWARE\Classes\&lt;</b><i>ProgID</i><b>&gt; = </b></p>
<p>
You can use a ProgID in programming situations where it is not possible to use a CLSID. ProgIDs should not appear in the user interface. ProgIDs are not guaranteed to be unique so they can be used only where name collisions are manageable. </p>
<p>
The &lt;<i>ProgID</i>&gt; must:
<ul>
<li>
Have no more than 39 characters.</li>
<li>
Contain no punctuation (including underscores) except one or more periods.</li>
<li>
Not start with a digit.</li>
<li>
Be different from the class name of any OLE 1 application, <i>including the OLE 1 version of the same application</i>, if there is one.</li>
</ul>
<p>
Since the &lt;<i>ProgID</i>&gt; should not appear in the user interface, you can obtain a displayable name by calling <a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a>. Also, see <b>OleRegGetUserType</b>&gt;</p>
<p>
The value of the &lt;<i>ProgID</i>&gt; is a human readable name such as Microsoft Word Document, and is displayed in dialog boxes. </p>
<h4>SubKeys and Named Values</h4>
<p>
<b>\&lt;</b><i>ProgID<b>&gt;</b></i><b> = </b>&lt;<i>HumanReadableNamen</i>&gt;</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=28%><pre><b>\<a href="reg_306c.htm">CLSID</a></b> </pre>
</td>
<td width=72%><pre>Object's CLSID</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre><b>\<a href="reg_1cis.htm">Insertable</a></b> </pre>
</td>
<td width=72%><pre>Indicates that class is insertable in OLE 2 containers</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre><b>\<a href="reg_6zhg.htm">Protocol</a></b> </pre>
</td>
<td width=72%><pre>Indicates class is insertable in OLE 1 container</pre>
</td>
</tr>
<tr valign=top>
<td width=28%><pre><b>\<a href="reg_3f8s.htm">Shell</a></b> </pre>
</td>
<td width=72%><pre>Windows 3.1 File Manager information </pre>
</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a>, <a href="api3_8uhx.htm"><b>OleRegGetUserType</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
