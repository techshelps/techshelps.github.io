<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISpecifyPropertyPages::GetPages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ispecifypropertypages_getpages"></a>ISpecifyPropertyPages::GetPages</h2>
<p>
Fills a counted array of GUID values where each GUID specifies the CLSID of each property page that can be displayed in the property sheet for this object.</p>
<pre><code><b>HRESULT GetPages(
  CAUUID</b><i> *pPages  </i>//Pointer to structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pPages</i></dt>
<dd>
[out] Pointer to a caller-allocated <b>CAUUID</b> structure that must be initialized and filled before returning. The <i>pElems</i> field in the <b>CAUUID</b> structure is allocated by the callee with <b>CoTaskMemAlloc</b> and freed by the caller with <b>CoTaskMemFree</b>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_OUTOFMEMORY and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The array was filled successfully.</dd>
<dt>
E_POINTER</dt>
<dd>
The address in <i>pPages</i> is not valid. For example, it may be NULL.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>CAUUID</b> structure is caller-allocated, but is not initialized by the caller. The <b>ISpecifyPropertyPages::GetPages</b> method fills the <i>cElements</i> field in the <a href="structs_8eqs.htm"><b>CAUUID</b></a> structure<b>.</b> This method also allocates memory for the array pointed to by the <i>pElems</i> field in <b>CAUUID</b> using <b>CoTaskMemAlloc</b>. Then, it fills the newly allocated array. After this method returns successfully, the structure contains a counted array of UUIDs, each UUID specifying a property page CLSID.</p>
<h5>Notes to Callers</h5>
<p>
The caller must release the memory pointed to by the <i>pElems</i> field of <b>CAUUID</b>, using <b>CoTaskMemFree</b> when it is no longer needed.</p>
<h5>Notes to Implementers</h5>
<p>
E_NOTIMPL is not allowed as a return value since an object with no property pages should not expose the <b>ISpecifyPropertyPages</b> interface at all.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="structs_8eqs.htm"><b>CAUUID</b></a>, <a href="api1_9bj7.htm"><b>CoTaskMemAlloc</b></a>, <a href="api1_63l1.htm"><b>CoTaskMemFree</b></a>, <a href="api3_81t1.htm"><b>OleCreatePropertyFrame</b></a>, <a href="api3_34tw.htm"><b>OleCreatePropertyFrameIndirect</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
