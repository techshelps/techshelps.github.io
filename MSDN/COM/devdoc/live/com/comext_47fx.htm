<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Security in COM</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_security_in_com"></a>Security in COM</h1>
<p>
Security in COM is firmly based on Windows NT® security and the underlying RPC security mechanisms. COM security relies on <i>authentication </i>(the process of verifying a caller's identity) and <i>authorization </i>(the process of determining whether a caller is authorized to do what it is asking to do). There are two main types of security in COM — <i>activation security</i> and <i>call security</i>. Activation security determines whether a client can launch a server at all. Once a server has been launched, you can use call security to control access to a server's objects. </p>
<p>
Prior to Windows NT 4.0, there was no special support for security in COM beyond that provided by the operating system. Therefore, out-of-process servers had the same permissions as the interactive user, and all activations were done "run as activator" (not "run as interactive user"). In addition, an object instance could be created for any CLSID in the registry, no matter who the user was. </p>
<p>
Windows NT 4.0 introduced security for COM that uses and enhances the underlying Windows NT security model. In this model, servers manage and protect objects, clients get access to objects through servers, and servers can attempt access while impersonating the client. </p>
<p>
Windows NT 5.0 introduces the Kerberos and Secure Sockets Layer (SSL) security packages and adds features such as delegate-level impersonation, mutual authentication (for Kerberos), the ability to set authentication levels for an AppID in the registry, and cloaking. Using COM security, you can implement objects that can perform privileged operations without compromising security. </p>
<p>
Because there is a wide range of COM security features available, it is helpful to initially determine what kind of security your application needs. For most applications, setting an acceptable level of security can be a painless process, but you can also use COM security to support very complex security scenarios. For more information, see <a href="comext_8v03.htm"><b>Determining Your Security Needs</b></a>. </p>
<p>
You can set security process-wide, either by using Dcomcnfg.exe to set the registry or by calling <b>CoInitializeSecurity</b>. Two primary interfaces, <b>IClientSecurity</b> and <b>IServerSecurity</b> (and associated helper functions), allow you to set call-level security within your program. If you already know your security needs, you can jump to one of the following topics to learn more about COM security:
<ul>
<li>
<a href="comext_0icz.htm"><b>COM Security Defaults</b></a> </li>
<li>
<a href="comext_5xd9.htm"><b>Activation Security and Disabling DCOM</b></a> </li>
<li>
<a href="comext_1xwm.htm"><b>Turning Security Off</b></a> </li>
<li>
<a href="comext_4l7r.htm"><b>Enabling COM Security Using DCOMCNFG</b></a> </li>
<li>
<a href="comext_5ppv.htm"><b>Setting Machine-Wide Security Defaults</b></a> </li>
<li>
<a href="comext_6g3d.htm"><b>Setting Process-Wide Security</b></a><b> </b></li>
<li>
<a href="comext_3bjg.htm"><b>Setting Security at the Interface Proxy Level</b></a> </li>
<li>
<a href="comext_2fsp.htm"><b>Server-Side Security</b></a> </li>
<li>
<a href="comext_0dri.htm"><b>Delegation and Impersonation</b></a> </li>
<li>
<a href="comext_08j7.htm"><b>COM and Security Packages</b></a> </li>
<li>
<a href="comext_2wtq.htm"><b>Security Blanket Negotiation</b></a> </li>
<li>
<a href="comext_3gjd.htm"><b>Application Identity</b></a> </li>
<li>
<a href="comext_9ed5.htm"><b>IUnknown Security</b></a> </li>
<li>
<a href="comext_133p.htm"><b>COM Security and Windows 95</b></a> </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
