<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetRunningObjectTable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_getrunningobjecttable"></a>GetRunningObjectTable</h1>
<p>
Supplies a pointer to the <a href="if_r2z_8go5.htm"><b>IRunningObjectTable</b></a> interface on the local Running Object Table (ROT).</p>
<pre><code><b>WINOLEAPI GetRunningObjectTable(
  DWORD</b><i> reserved</i><b>,  </b>//Reserved
<b>  LPRUNNINGOBJECTTABLE</b><i> *pprot</i>
<i>                   </i>//Address of output variable that receives the 
                   // IRunningObjectTable interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>reserved</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>pprot</i></dt>
<dd>
[out] Address of <b>IRunningObjectTable</b>* pointer variable that receives the interface pointer to the local ROT. When the function is successful, the caller is responsible for calling <a href="if_r2z_59np.htm"><b>IUnknown::Release</b></a> on the interface pointer. If an error occurs, *<i>pprot</i> is undefined. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This function supports the standard return value E_UNEXPECTED, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
An <b>IRunningObjectTable</b> pointer was successfully returned.
</dd>
</dl>
<h4>Remarks</h4>
<p>
Each workstation has a local ROT that maintains a table of the objects that have been registered as running on that machine. This function returns an <a href="if_r2z_8go5.htm"><b>IRunningObjectTable</b></a> interface pointer, which provides access to that table. </p>
<p>
Moniker providers, which hand out monikers that identify objects so they are accessible to others, should call <b>GetRunningObjectTable</b>. Use the interface pointer returned by this function to register your objects when they begin running, to record the times that those objects are modified, and to revoke their registrations when they stop running. See the <b>IRunningObjectTable</b> interface for more information.</p>
<p>
Compound-document link sources are the most common example of moniker providers. These include server applications that support linking to their documents (or portions of a document) and container applications that support linking to embeddings within their documents. Server applications that do not support linking can also use the ROT to cooperate with container applications that support linking to embeddings. </p>
<p>
If you are implementing the <a href="if_f2n_8otu.htm"><b>IMoniker</b></a> interface to write a new moniker class, and you need an interface pointer to the ROT, call <a href="if_a2e_70bp.htm"><b>IBindCtx::GetRunningObjectTable</b></a> rather than the <b>GetRunningObjectTable</b> function. This allows future implementations of the <b>IBindCtx</b> interface to modify binding behavior. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objbase.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_70bp.htm"><b>IBindCtx::GetRunningObjectTable</b></a>,<b> <a href="if_f2n_8otu.htm">IMoniker</a></b>, <a href="if_r2z_8go5.htm"><b>IRunningObjectTable</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
