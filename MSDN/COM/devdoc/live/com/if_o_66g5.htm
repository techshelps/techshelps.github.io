<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleUndoManager::Close</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleundomanager_close"></a>IOleUndoManager::Close</h2>
<p>
Closes the specified parent undo unit.</p>
<pre><code><b>HRESULT Close(
  IOleParentUndoUnit*</b><i> pPUU</i><b>,</b> 
                 //Pointer to the currently open parent unit
<b>  BOOL</b><i> fCommit</i>   //Indicates whether to keep or discard the unit
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pPUU</i></dt>
<dd>
[in] Pointer to the currently open parent unit to be closed.</dd>
<dt>
<i>fCommit</i></dt>
<dd>
[in] Indicates whether to keep or discard the unit. If TRUE, the unit is kept in the collection. If FALSE, the unit is discarded. This parameter is used to allow the client to discard an undo unit under construction if an error or a cancellation occurs.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The parent unit had open child units and it was successfully closed. If the undo manager is disabled, it should immediately return S_OK and do nothing else.</dd>
<dt>
S_FALSE</dt>
<dd>
The parent undo unit did not have an open child and it was successfully closed.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
If <i>pPUU</i> does not match the currently open parent undo unit, then implementations of this method should return E_INVALIDARG without changing any internal state unless the parent unit is blocked.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This method is implemented the same as <b>IOleParentUndoUnit::Close</b>. A parent undo unit knows it is being closed when it returns S_FALSE from this method. At that time, it should terminate any communication with other objects which may be giving data to it through private interfaces.</p>
<h5>Note to Implementers</h5>
<p>
To process a <b>Close</b>, a parent undo unit first checks to see if it has an open child unit. If it does not, it returns S_FALSE.</p>
<p>
If it does have a child unit open, it calls the <b>Close</b> method on the child. If the child returns S_FALSE, then the parent undo unit verifies that <i>pPUU</i> points to the child unit, and closes that child undo unit. If the child returns S_OK then it handled the <b>Close</b> internally and its parent should do nothing.</p>
<p>
If the parent unit is blocked, it should check the <i>pPUU</i> parameter to determine the appropriate return code. If <i>pPUU</i> is pointing to itself, then it should return S_FALSE.</p>
<p>
Otherwise, it should return S_OK; the <i>fCommit</i> parameter is ignored; and no action is taken.</p>
<p>
If <i>pPUU</i> does not match the currently open parent undo unit, then implementations of this method should return E_INVALIDARG without changing any internal state. The only exception to this is if the unit is blocked.</p>
<h5>Note to Callers</h5>
<p>
An error return indicates a fatal error condition.</p>
<p>
The parent unit or undo manager must accept the undo unit if <i>fCommit</i> is TRUE.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_5msl.htm"><b>IOleParentUndoUnit::Close</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
