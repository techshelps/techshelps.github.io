<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WriteFmtUserTypeStg</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_writefmtusertypestg"></a>WriteFmtUserTypeStg</h1>
<p>
Writes a clipboard format and user type to the storage object.</p>
<pre><code><b>WINOLEAPI WriteFmtUserTypeStg(
  IStorage *</b><i> pStg</i><b>,</b>       //Points to the IStorage interface on the 
                         // storage object
<b>  CLIPFORMAT</b><i> cf</i><b>,</b>         //Specifies the clipboard format
<b>  LPWSTR *</b><i> lpszUserType  </i>//Points to the current user type
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pStg</i></dt>
<dd>
[in] <b>IStorage</b> pointer to the storage object where the information is to be written.</dd>
<dt>
<i>cf</i></dt>
<dd>
[in] Specifies the clipboard format that describes the structure of the native area of the storage object. The format tag includes the policy for the names of streams and substorages within this storage object and the rules for interpreting data within those streams.</dd>
<dt>
<i>lpszUserType</i></dt>
<dd>
[in] Points to the object's current user type. It cannot be NULL. This is the type returned by the <a href="if_o_0a1x.htm"><b>IOleObject::GetUserType</b></a> method. If this function is transported to a remote machine where the object class does not exist, this persistently stored user type can be shown to the user in dialog boxes.</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK </dt>
<dd>
Indicates the information was written successfully.</dd>
<dt>
STG_E_MEDIUMFULL</dt>
<dd>
Indicates information could not be written due to lack of space on the storage medium.</dd>
</dl>
<p>
<a href="if_r2z_3yat.htm"><b>ISequentialStream::Write</b></a> method error return values.</p>
<h4>Remarks</h4>
<p>
The <b>WriteFmtUserTypeStg</b> function must be called in an object's implementation of the <a href="if_p2q_19et.htm"><b>IPersistStorage::Save</b></a> method. It must also be called by document-level objects that use structured storage for their persistent representation in their save sequence.</p>
<p>
To read the information saved, applications call the <a href="api3_1tuv.htm"><b>ReadFmtUserTypeStg</b></a> function.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ole2.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Included as a resource in ole32.dll.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_19et.htm"><b>IPersistStorage::Save</b></a>, <a href="api3_1tuv.htm"><b>ReadFmtUserTypeStg</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
