<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMallocSpy</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_imallocspy"></a>IMallocSpy</h1>
<p>
The <b>IMallocSpy</b> interface is a debugging interface that allows application developers to monitor (spy on) memory allocation, detect memory leaks and simulate memory failure in calls to <b>IMalloc</b> methods.</p>
<p>
<b>Caution</b>&nbsp;&nbsp;The <b>IMallocSpy</b> interface is intended to be used <b>only</b> to debug application code under development. Do not ship this interface to retail customers of your application, because it causes severe performance degradation and could conflict with user-installed software to produce unpredictable results.</p>
<h5>When to Implement</h5>
<p>
Implement this interface to debug memory allocation during application development.</p>
<h5>When to Use</h5>
<p>
When an implementation of <b>IMallocSpy</b> is registered with <a href="api1_2r5l.htm"><b>CoRegisterMallocSpy</b></a>, COM calls the pair of <b>IMallocSpy</b> methods around the corresponding <a href="if_f2n_5h5v.htm"><b>IMalloc</b></a> method. You would not make direct calls to <b>IMallocSpy</b> methods. The COM SDK contains a sample implementation of <b>IMallocSpy</b>. The call to the pre-method through the return from the corresponding post-method is guaranteed to be thread-safe in multi-threaded operations.</p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=32%><a href="if_r2z_9dwu.htm">IUnknown</a> Methods</th>
<th align=left width=68%>Description</th>
</tr>
<tr valign=top>
<td width=32%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=68%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=68%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=68%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=32%>IMallocSpy Methods</th>
<th align=left width=68%>Description</th>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_4ysj.htm"><b>PreAlloc</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>, and may extend or modify the allocation to store debug information.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_42eb.htm"><b>PostAlloc</b></a></td>
<td width=68%>Called after invoking <b>IMalloc::Alloc</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_3did.htm"><b>PreFree</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_1smd.htm"><b>IMalloc::Free</b></a>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_9m05.htm"><b>PostFree</b></a></td>
<td width=68%>Called after invoking <b>IMalloc::Free</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_9zmr.htm"><b>PreRealloc</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_7qqr.htm"><b>IMalloc::Realloc</b></a>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_45gj.htm"><b>PostRealloc</b></a></td>
<td width=68%>Called after invoking <b>IMalloc::Realloc</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_5p7p.htm"><b>PreGetSize</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_3gbp.htm"><b>IMalloc::GetSize</b></a>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_9v1h.htm"><b>PostGetSize</b></a></td>
<td width=68%>Called after invoking <b>IMalloc::GetSize</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_0iar.htm"><b>PreDidAlloc</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_6per.htm"><b>IMalloc::DidAlloc</b></a>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_6v8j.htm"><b>PostDidAlloc</b></a></td>
<td width=68%>Called after invoking <b>IMalloc::DidAlloc</b>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_6tet.htm"><b>PreHeapMinimize</b></a></td>
<td width=68%>Called before invoking <a href="if_f2n_6per.htm"><b>IMalloc::DidAlloc</b></a>.</td>
</tr>
<tr valign=top>
<td width=32%><a href="if_f2n_4esl.htm"><b>PostHeapMinimize</b></a></td>
<td width=68%>Called after invoking <a href="if_f2n_0sit.htm"><b>IMalloc::HeapMinimize</b></a>.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_5h5v.htm"><b>IMalloc</b></a>, <a href="api1_2qlf.htm"><b>CoGetMalloc</b></a>, <a href="api1_2r5l.htm"><b>CoRegisterMallocSpy</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
