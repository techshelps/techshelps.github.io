<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleObject::EnumVerbs</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleobject_enumverbs"></a>IOleObject::EnumVerbs</h2>
<p>
Exposes a pull-down menu listing the verbs available for an object in ascending order by verb number.</p>
<pre><code><b>HRESULT EnumVerbs(
  IEnumOleVerb</b><i> **ppEnumOleVerb  </i>//Address of output variable that 
                                // receives the IEnumOleVerb interface 
                                // pointer
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>ppEnumOleVerb</i></dt>
<dd>
[out] Address of <b>IEnumOleVerb</b>* pointer variable that receives the interface pointer to the new enumerator object. Each time an object receives a call to <b>EnumVerbs</b>, it must increase the reference count on *<i>ppEnumOleVerb</i>. It is the caller's responsibility to call <b>Release</b> when it is done with *<i>ppEnumOleVerb</i>. If an error occurs, *<i>ppEnumOleVerb</i> must be set to NULL. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Verb(s) enumerated successfully.</dd>
<dt>
OLE_S_USEREG</dt>
<dd>
Delegate to the default handler to use the entries in the registry to provide the enumeration.</dd>
<dt>
OLEOBJ_E_NOVERBS</dt>
<dd>
Object does not support any verbs.
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes to Callers</h5>
<p>
Containers call this method to expose a pull-down menu of the verbs available for their embedded objects. You may want your container to call <b>IOleObject::EnumVerbs</b> each and every time such a menu is selected in order to enable such objects as media clips, whose verbs may change while they are running, to update their menus. The default verb for a media clip, for example, changes from "Play" before it is activated to "Stop" once it is running.</p>
<h5>Notes to Implementers</h5>
<p>
The default handler's implementation of <b>IOleObject::EnumVerbs</b> uses the registry to enumerate an object's verbs. If an object application is to use the default handler's implementation, it should return OLE_S_USEREG.</p>
<p>
The enumeration returned is of type <b>IEnumOLEVERB</b>:</p>
<pre><code>typedef Enum &lt; OLEVERB &gt; IEnumOLEVERB; 
 </code></pre>
<p>
where <a href="structs_6oki.htm"><b>OLEVERB</b></a> is defined as:</p>
<pre><code>typedef struct tagOLEVERB 
{ 
    LONG    iVerb; 
    LPOLESTR   lpszVerbName; 
    DWORD   fuFlags; 
    DWORD   grfAttribs; 
} OLEVERB; 
 </code></pre>
<p>
The following table describes the members of the <a href="structs_6oki.htm"><b>OLEVERB</b></a> structure:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>OLEVERB Member</th>
<th align=left width=69%>Description</th>
</tr>
<tr valign=top>
<td width=31%>iVerb</td>
<td width=69%>Verb number being enumerated. If the object supports OLEIVERB_OPEN, OLEIVERB_SHOW and/or OLEIVERB_HIDE (or another predefined verb), these will be the first verbs enumerated, since they have the lowest verb numbers. </td>
</tr>
<tr valign=top>
<td width=31%>lpszVerbName</td>
<td width=69%>Name of the verb. <p>
In Windows, this value, along with optional embedded ampersand characters to indicate accelerator keys, can be passed to the <b>AppendMenu</b> function.</p>
<p>
On the Macintosh, the following metacharacters may be passed along with this value:</p>
</td>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=69%><font face="Symbol">·</font>   ! marks the menu item with the subsequent character</td>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=69%><font face="Symbol">·</font>   &lt; sets the character style of the item</td>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=69%><font face="Symbol">·</font>   ( disables the item.</td>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=69%>The metacharacters / and ^ are not permitted.</td>
</tr>
<tr valign=top>
<td width=31%>fuFlags</td>
<td width=69%>In Windows, a group of flags taken from the flag constants beginning with MF_ defined in <b>AppendMenu</b>. Containers should use these flags in building an object's verb menu. All Flags defined in <b>AppendMenu</b> are supported except for:</td>
</tr>
<tr valign=top>
<th align=left width=31%></th>
<th align=left width=69%><font face="Symbol">·</font>   MF_BITMAP</th>
</tr>
<tr valign=top>
<th align=left width=31%></th>
<th align=left width=69%><font face="Symbol">·</font>   MF_OWNERDRAW</th>
</tr>
<tr valign=top>
<td width=31%></td>
<td width=69%><font face="Symbol">·</font>   MF_POPUP</td>
</tr>
<tr valign=top>
<td width=31%>grfAttribs</td>
<td width=69%>In Windows, a group of flag bits taken from the enumeration <a href="enums_6psy.htm"><b>OLEVERBATTRIB</b></a>. The flag OLEVERBATTRIB_NEVERDIRTIES indicates that executing this verb will not cause the object to become dirty and is therefore in need of saving to persistent storage.<p>
OLEVERBATTRIB_ONCONTAINERMENU indicates that this verb should be placed on the container's menu of object verbs when the object is selected. OLEIVERB_HIDE, OLEIVERB_SHOW, and OLEIVERB_OPEN never have this value set.</p>
</td>
</tr>
</table><br>
<p>
For more information on the Windows <b>AppendMenu</b> function, see the Microsoft <i>Win32 SDK</i>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_o_8ogy.htm"><b>IOleObject::DoVerb</b></a>, <a href="api3_7f5f.htm"><b>OleRegEnumVerbs</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
