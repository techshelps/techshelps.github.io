<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumHLITEM</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ienumhlitem"></a>IEnumHLITEM</h1>
<p>
The <b>IEnumHLITEM</b> interface is used to enumerate an array of <b>HLITEM</b> structures in a hyperlink browse context navigation stack. <b>IEnumHLITEM</b> has the same methods as all enumerator interfaces: <b>Next</b>, <b>Skip</b>, <b>Reset</b>, <b>Clone</b>. For general information on these methods, refer to <b>IEnum<i>XXXX</i></b>.</p>
<h5>When to Implement</h5>
<p>
<b>IEnumHLITEM</b> must be implemented by all hyperlink browse context objects to support calls to <b>IHlinkBrowseContext::EnumNavigationStack</b>, which supplies a pointer to the enumerator's <b>IEnumHLITEM</b> interface. Because there is a default implementation of <b>IHlinkBrowseContext</b>, you do not normally need to implement this interface.</p>
<h5>When to Use</h5>
<p>
You do not normally need to call this interface directly. The default implementation of <b>IHlinkBrowseContext</b> calls this interface to examine the <b>HLITEM</b> structures in the browse context's navigation stack to determine which hyperlink sources have been previously visited.</p>
<p>
The prototypes of the methods are as follows: </p>
<pre><code><b>HRESULT Next(
  ULONG</b><i> celt</i><b>,  </b>// Number of HLITEM structures returned in <i>rgelt</i>
<b>  HLITEM *</b><i> rgelt</i><b>,</b>
<b>               </b>// Array to receive enumerated HLITEM structures
<b>  ULONG *</b><i> pceltFetched</i>
<i>               </i>// Location for actual number of HLITEM structures
<b>);</b>
 
<b>HRESULT Skip(</b>
<b>  ULONG</b><i> celt  </i>// Number of elements to skip
<b>);</b>
 
<b>HRESULT Reset(void);</b>
 
<b>HRESULT Clone(</b>
<b>  IEnumHLITEM *</b><i> ppienumhlitem  </i>// Location for newly created 
                               // enumerator list
<b>);</b>
 </code></pre>
<h4>Remarks</h4>
<dl>
<dt>
<b>IEnumHLITEM::Next</b></dt>
<dd>
Retrieves the next <i>celt </i><b>HLITEMs</b> in the enumeration sequence. If there are fewer than the requested number of elements left in the sequence, it retrieves the remaining elements. The number of elements actually retrieved is returned through <i>pceltFetched</i>.</dd>
<dt>
<b>IEnumHLITEM::Skip</b></dt>
<dd>
Skips the next <i>celt </i><b>HLITEMs</b> in the enumeration sequence.</dd>
<dt>
<b>IEnumHLITEM::Reset</b></dt>
<dd>
Resets the enumeration sequence to the beginning. There is no guarantee that the same set of elements will be enumerated after the <b>Reset</b>, because it depends on the implementation doing the enumeration. It can be too expensive for some collections to guarantee this condition or it may not be possible due to concurrent access to the same collection by multiple threads or processes.</dd>
<dt>
<b>IEnumHLITEM::Clone</b></dt>
<dd>
Creates another enumerator that contains the same state as the current enumerator to iterate over the same list. Using this function, a client can record a particular point in the enumeration sequence, and then return to that point at a later time.
<p>
The caller must release this new enumerator separately from the first enumerator.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in hlink.h.</p>
<h4>See Also</h4>
<p>
<a href="structs_6ht9.htm"><b>HLITEM</b></a>, <a href="if_f2n_9xyj.htm"><b>IHlinkBrowseContext::EnumNavigationStack</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
