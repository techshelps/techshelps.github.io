<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMallocSpy::PostAlloc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imallocspy_postalloc"></a>IMallocSpy::PostAlloc</h2>
<p>
Called just after invoking <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>, taking as input a pointer to the <b>IMalloc::Alloc</b> caller's allocation, and returning a pointer to the actual allocation.</p>
<pre><code><b>void * PostAlloc(
  void *</b><i> pActual  </i>//Pointer to the allocation actually done by 
                  //IMalloc::Alloc
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pActual</i></dt>
<dd>
[in] Pointer to the allocation done by <a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>. 
</dd>
</dl>
<h4>Return Value</h4>
<p>
A pointer to the beginning of the memory block actually allocated. This pointer is also returned to the caller of <b>IMalloc::Alloc</b>. If debug information is written at the front of the caller's allocation, this should be a forward offset from <i>pActual</i>. The value is the same as <i>pActual</i> if debug information is appended or if no debug information is attached.</p>
<h4>Remarks</h4>
<p>
When a spy object implementing <b>IMallocSpy</b> is registered with <b>CoRegisterMallocSpy</b>, COM calls <b>IMallocSpy::PostAlloc</b> after any call to <b>IMalloc::Alloc</b>. It takes as input a pointer to the allocation done by the call to <b>IMalloc::Alloc</b>, and returns a pointer to the beginning of the total allocation, which could include a forward offset from the other value if <b>IMallocSpy::Prealloc</b> was implemented to attach debug information to the allocation in this way. If not, the same pointer is returned, and also becomes the return value to the caller of <b>IMalloc::Alloc</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_3twj.htm"><b>IMalloc::Alloc</b></a>, <a href="if_f2n_4ysj.htm"><b>IMallocSpy::PreAlloc</b></a>, <a href="api1_2r5l.htm"><b>CoRegisterMallocSpy</b></a>, <a href="api1_2ant.htm"><b>CoRevokeMallocSpy</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
