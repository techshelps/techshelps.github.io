<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IServerSecurity::ImpersonateClient</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iserversecurity_impersonateclient"></a>IServerSecurity::ImpersonateClient</h2>
<p>
Allows a server to impersonate a client for the duration of a call.</p>
<pre><b><code>HRESULT ImpersonateClient( )
 </code></b></pre>
<h4>Return Values</h4>
<p>
This method supports the standard return value E_FAIL, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Success.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IServerSecurity::ImpersonateClient</b> allows a server to impersonate a client for the duration of a call. Normally, a method executes on a thread that uses the access token of the process. However, when impersonating a client, the server runs in the client's security context so that the server has access to the resources that the client has access to. When impersonation is necessary, the server calls the <b>ImpersonateClient</b> method to cause an access token representing the client's credentials to be assigned to the current thread. This thread token is used for access checks. <b>RevertToSelf</b> restores the current thread's access token. </p>
<p>
What the server can do on behalf of the client depends on the impersonation level set by the client, which is specified using one of the <a href="enums_2jco.htm"><b>RPC_C_IMP<i>_</i>LEVEL_<i>xxx</i></b></a> constants. The server may impersonate the client on a secure call at identify, impersonate, or delegate level. For information about these levels of impersonation, see <a href="comext_0ar7.htm"><b>Impersonation Levels</b></a>. </p>
<p>
The identity presented to a server called during impersonation depends on the type of cloaking value, if any, that is set by the client. For more information, see <a href="comext_71lz.htm"><b>Cloaking</b></a>.</p>
<p>
At the end of each method call, COM will call <b>IServerSecurity::RevertToSelf</b> if the application does not. </p>
<p>
Traditionally, impersonation information is not nested – the last call to any Win32 impersonation mechanism overrides any previous impersonation. However, in the apartment model, impersonation is maintained during nested calls. Thus if the server <b><i>A</i></b> receives a call from <b><i>B</i></b>, impersonates, calls <b><i>C</i></b>, receives a call from <b><i>D</i></b>, impersonates, reverts, and receives the reply from <b><i>C</i></b>, the impersonation token will be set back to <b><i>B</i></b>, not <b><i>A</i></b>.</p>
<p>
COM does not automatically pick up the thread token when making a call. Cloaking must be enabled first. <a href="comext_71lz.htm"><b>Cloaking</b></a> is only available for Windows NT 5.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api1_6mwk.htm"><b>CoImpersonateClient</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
