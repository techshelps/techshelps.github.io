<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IEnumXXXX</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ienumxxxx"></a>IEnum<i>XXXX</i></h1>
<p>
To allow you to enumerate the number of items of a given type that an object maintains, OLE provides a set of enumeration interfaces, one for each type of item. </p>
<p>
To use these interfaces, the client asks an object that maintains a collection of items to create an enumerator object. The interface on the enumeration object is one of the enumeration interfaces, all of which have a name of the form <b>IEnum</b><i>Item_name</i>. The only difference between enumeration interfaces is what they enumerate — there must be a separate enumeration interface for each type of item enumerated. All have the same set of methods, and are used in the same way. For example, by repeatedly calling the <b>Next</b> method, the client gets successive pointers to each item in the collection. </p>
<p>
The following table lists the set of enumeration interfaces that OLE defines, and the items enumerated.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Enumeration Interface Name</th>
<th align=left width=52%>Item Enumerated</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_7kyr.htm"><b>IEnumFORMATETC</b></a></td>
<td width=52%>An array of <a href="structs_14v7.htm"><b>FORMATETC</b></a> structures.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_9jqq.htm"><b>IEnumMoniker</b></a></td>
<td width=52%>The components of a moniker, or the monikers in a table.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_7g82.htm"><b>IEnumOLEVERB</b></a></td>
<td width=52%>The different verbs available for an object, in order of ascending verb number.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_0a8x.htm"><b>IEnumSTATDATA</b></a></td>
<td width=52%>An array of <a href="structs_14dd.htm"><b>STATDATA</b></a> structures which contain advisory connection information for a data object.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_8ovb.htm"><b>IEnumSTATSTG</b></a></td>
<td width=52%>An array of <a href="structs_7x7r.htm"><b>STATSTG</b></a> structures, which contain statistical information about a storage, stream, or LockBytes object</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_89uv.htm"><b>IEnumString</b></a></td>
<td width=52%>Strings</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_08tq.htm"><b>IEnumUnknown</b></a></td>
<td width=52%>Enumerates<b> <a href="if_r2z_9dwu.htm">IUnknown</a></b> interface pointers.</td>
</tr>
<tr valign=top>
<td width=48%><b>IEnumVARIANT</b></td>
<td width=52%>A collection of variants. It allows clients to enumerate heterogeneous collections of objects and intrinsic types when the clients cannot or do not know the specific type(s) of elements in the collection.</td>
</tr>
</table><br>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_r2z_9dwu.htm">IUnknown</a> Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=52%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=52%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IEnum<i>XXXX</i> Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_6p6c.htm"><b>Next</b></a></td>
<td width=52%>Retrieves a specified number of items in the enumeration sequence.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_5ar4.htm"><b>Skip</b></a></td>
<td width=52%>Skips over a specified number of items in the enumeration sequence.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_6oc4.htm"><b>Reset</b></a></td>
<td width=52%>Resets the enumeration sequence to the beginning.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_a2e_1rad.htm"><b>Clone</b></a></td>
<td width=52%>Creates another enumerator that contains the same enumeration state as the current one.</td>
</tr>
</table><br>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
