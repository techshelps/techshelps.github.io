<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateAsyncBindCtx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_createasyncbindctx"></a>CreateAsyncBindCtx</h1>
<p>
Creates an asynchronous bind context for use with asynchronous monikers.</p>
<pre><code><b>HRESULT CreateAsyncBindCtx(
  DWORD</b><i> dwReserved</i><b>,  </b>//Reserved for future use; must be zero
<b>  IBindStatusCallback</b><i> *pbsc</i><b>,</b>
<b>                     </b>//Pointer to callback interface
<b>  IEnumFORMATETC</b><i> *penumfmtetc</i><b>,</b>
<b>                     </b>//Pointer to enumerator object for formats
<b>  IBindCtx</b><i> **ppbc    </i>//Address of output variable that receives the 
                     // IBindCtx interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwReserved</i></dt>
<dd>
[in] Reserved for future use; must be zero.</dd>
<dt>
<i>pbsc</i></dt>
<dd>
[in] Pointer to the <b>IBindStatusCallback</b> interface used for receiving data availability and progress notification.</dd>
<dt>
<i>penumfmtetc</i></dt>
<dd>
[in] Pointer to the <b>IEnumFORMATETC</b> interface that can be used to enumerate formats for format negotiation during binding. This parameter can be NULL, in which case the caller is not interested in format negotiation during binding, and the default format of the object will be bound to.</dd>
<dt>
<i>ppbc</i></dt>
<dd>
[out] Address of <b>IBindCtx</b>* pointer variable that receives the interface pointer to the new bind context.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK </dt>
<dd>
The operation completed successfully.</dd>
<dt>
E_OUTOFMEMORY</dt>
<dd>
The method ran out of memory and did not complete.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
One or more parameters are invalid.
</dd>
</dl>
<h4>Remarks</h4>
<p>
This function automatically registers the <a href="if_a2e_0vxn.htm"><b>IBindStatusCallback</b></a> and the <b>IEnumFORMATETC</b> interfaces with the bind context. The <i>grfBSCOption </i>parameter allows the client to specify flags indicating which callback notifications the client is capable of receiving. If the client does not wish to receive certain notification, it can choose to implement those callback methods as empty function stubs (returning E_NOTIMPL), and they should not be called.</p>
<p>
The <b>RegisterBindStatusCallback</b> function can also be used to register callback interfaces in the bind context.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_0vxn.htm"><b>IBindStatusCallback</b></a>, <a href="enums_0svi.htm"><b>BSCO_OPTION</b></a>, <a href="api3_8bvv.htm"><b>RegisterBindStatusCallback</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
