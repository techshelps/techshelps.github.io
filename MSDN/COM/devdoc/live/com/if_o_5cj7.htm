<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleDocument::EnumViews</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioledocument_enumviews"></a>IOleDocument::EnumViews</h2>
<p>
Creates an object that enumerates the views supported by a document object or, if only one view is supported, returns a pointer to that view.</p>
<pre><code><b>HRESULT EnumViews(
  IEnumOleDocumentViews **</b><i> ppEnum</i><b>,</b>
<b>                              </b>//Address of output variable that 
                              // receives the IEnumOleDocumentViews 
                              // interface pointer
<b>  IOleDocumentView **</b><i> ppView  </i>//Address of output variable that 
                              // receives the IOleDocumentView 
                              // interface pointer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ppEnum</i></dt>
<dd>
[out] Address of <b>IEnumOleDocumentViews</b>* pointer variable that receives the interface pointer to the enumerator object.</dd>
<dt>
<i>ppView</i></dt>
<dd>
[out] Address of <b>IOleDocumentView</b>* pointer variable that receives the interface pointer to a single view object.
</dd>
</dl>
<h4>Return Value</h4>
<p>
This method supports the standard return value E_OUTOFMEMORY, as well as the following:
<dl>
<dt>
S_OK</dt>
<dd>
If the object supports multiple views, then <i>*ppEnum </i>contains a pointer to the  enumerator object, and <i>*ppView </i>is NULL. Otherwise, <i>*ppEnum</i> is NULL, and <i>*ppView </i>contains an interface pointer on the single view.</dd>
<dt>
E_POINTER</dt>
<dd>
The address in <i>ppEnum </i>or <i>ppView </i>is invalid. The caller must pass valid pointers for both arguments.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If a document object supports multiple views of its data, it must also implement <b>IEnumOleDocumentViews</b> and pass that interface's pointer in the out parameter <i>*ppEnum</i>. Using this pointer, the container can enumerate the views supported by the document object.</p>
<p>
If the document object supports only a single view, <b>IOleDocument::EnumViews</b> passes that view's <b>IOleDocumentView</b><i> </i>pointer in the out parameter *<i>ppView</i>.</p>
<h4>Notes to Callers</h4>
<p>
Call this method to determine if a document object supports more than one view of its data. If it does, the caller can use the pointer written to *<i>ppEnum</i> to specify which view to activate. When finished with the pointer, the caller must free it by calling <b>Release</b>.</p>
<h4>Notes to Implementers</h4>
<p>
This method must be completely implemented on all document objects; E_NOTIMPL is not an acceptable return value. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in docobj.h.</p>
<h4>See Also</h4>
<p>
<a href="if_a2e_862b.htm"><b>IEnumOleDocumentViews</b></a>, <a href="if_o_3ulz.htm"><b>IOleDocumentView</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
