<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IMessageFilter::HandleInComingCall</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_imessagefilter_handleincomingcall"></a>IMessageFilter::HandleInComingCall</h2>
<p>
An object-based method that provides the ability to filter or reject incoming calls (or call backs) to an object or a process. This method is called prior to each method invocation originating outside the current process. </p>
<pre><code><b>DWORD HandleInComingCall(
  DWORD</b><i> dwCallType</i><b>,      </b>//Type of incoming call
<b>  HTASK</b><i> threadIDCaller</i><b>,  </b>//Task handle calling this task
<b>  DWORD</b><i> dwTickCount</i><b>,     </b>//Elapsed tick count
<b>  LPINTERFACEINFO</b><i> lpInterfaceInfo</i> 
                         //Pointer to INTERFACEINFO structure
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwCallType</i></dt>
<dd>
[in] Kind of incoming call that has been received. Valid values are from the enumeration <a href="enums_6usl.htm"><b>CALLTYPE</b></a>. See the chapter on enumerations for details. </dd>
<dt>
<i>threadIDCaller</i></dt>
<dd>
[in] Handle of the task calling this task.</dd>
<dt>
<i>dwTickCount</i></dt>
<dd>
[in] Elapsed tick count since the outgoing call was made if <i>dwCallType</i> is not CALLTYPE_TOPLEVEL. If <i>dwCallType</i> is CALLTYPE_TOPLEVEL, <i>dwTickCount</i> should be ignored.</dd>
<dt>
<i>lpInterfaceInfo</i></dt>
<dd>
[in] Pointer to an <b>INTERFACEINFO</b> structure, which identifies the object, the interface, and the method making the call. In the case of DDE calls, <i>lpInterfaceInfo</i> can be NULL because the DDE layer does not return interface information. 
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
SERVERCALL_ISHANDLED</dt>
<dd>
The application might be able to process the call.</dd>
<dt>
SERVERCALL_REJECTED</dt>
<dd>
The application cannot handle the call due to an unforeseen problem, such as network unavailability, or if it is in the process of terminating.</dd>
<dt>
SERVERCALL_RETRYLATER</dt>
<dd>
The application cannot handle the call at this time. For example, an application might return this value when it is in a user-controlled modal state.
</dd>
</dl>
<h4>Remarks</h4>
<p>
If implemented,<b> IMessageFilter::HandleInComingCall</b> is called by COM when an incoming COM message is received. </p>
<p>
Depending on an application's current state, a call is either accepted and processed or rejected (permanently or temporarily). If SERVERCALL_ISHANDLED is returned, the application may be able to process the call, though success depends on the interface for which the call is destined. If the call cannot be processed, COM returns RPC_E_CALL_REJECTED. </p>
<p>
Input-synchronized and asynchronous calls are dispatched even if the application returns SERVERCALL_REJECTED or SERVERCALL_RETRYLATER. </p>
<p>
<b>IMessageFilter::HandleInComingCall </b>should not be used to hold off updates to objects during operations such as band printing. For that purpose, use <a href="if_r2z_6lwl.htm"><b>IViewObject::Freeze</b></a>. </p>
<p>
You can also use <b>IMessageFilter::HandleInComingCall </b>to set up the application's state so the call can be processed in the future.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_r2z_6lwl.htm"><b>IViewObject::Freeze</b></a>, <a href="enums_6usl.htm"><b>CALLTYPE</b></a>, <a href="structs_5hbj.htm"><b>INTERFACEINFO</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
