<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ILockBytes::WriteAt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ilockbytes_writeat"></a>ILockBytes::WriteAt</h2>
<p>
Writes the specified number of bytes starting at a specified offset from the beginning of the byte array.</p>
<pre><code><b>HRESULT WriteAt(
  ULARGE_INTEGER</b><i> ulOffset</i><b>,</b> 
                    //Specifies the starting point for writing data
<b>  void const</b><i> *pv</i><b>,</b>   //Points to the buffer containing the data to be 
                    //written
<b>  ULONG</b><i> cb</i><b>,</b>         //Specifies the number of bytes to write
<b>  ULONG</b><i> *pcbWritten </i>//Pointer to location that contains actual 
                    //number of bytes written
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ulOffset</i></dt>
<dd>
[in]Specifies the starting point from the beginning of the byte array for the data to be written.</dd>
<dt>
<i>pv</i></dt>
<dd>
[in]Points to the buffer containing the data to be written.</dd>
<dt>
<i>cb</i></dt>
<dd>
[in]Specifies the number of bytes of data to attempt to write into the byte array.</dd>
<dt>
<i>pcbRead</i></dt>
<dd>
[out]Pointer to a location where this method specifies the actual number of bytes written to the byte array. You can set this pointer to NULL to indicate that you are not interested in this value. In this case, this method does not provide the actual number of bytes written.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
Indicates that the specified number of bytes were written.</dd>
<dt>
E_FAIL</dt>
<dd>
A general failure occurred during the write.</dd>
<dt>
E_PENDING</dt>
<dd>
Asynchronous Storage only: Part or all of the data to be written is currently unavailable. For more information see <a href="if_f2n_5xdf.htm"><b>IFillLockBytes</b></a> and [insert jump to asynchronous storage overview, which is to come].</dd>
<dt>
STG_E_ACCESSDENIED</dt>
<dd>
The caller does not have sufficient permissions for writing this byte array.</dd>
<dt>
STG_E_WRITEFAULT</dt>
<dd>
The number of bytes to be written does not equal the number of bytes that were acutally written.</dd>
<dt>
STG_E_MEDIUMFULL</dt>
<dd>
The write operation was not completed because there is no space left on the storage device. The actual number of bytes written is still returned in <i>pcbWritten</i>.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>ILockBytes::WriteAt</b> writes the specified data at the specified location in the byte array. The number of bytes actually written must always be returned in <i>pcbWritten</i>, even if an error is returned. If the byte count is zero bytes, the write operation has no effect.</p>
<p>
If <i>ulOffset</i> is past the end of the byte array and <i>cb</i> is greater than zero, <b>ILockBytes::WriteAt</b> increases the size of the byte array. The fill bytes written to the byte array are not initialized to any particular value.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_f2n_9cfo.htm"><b>ILockBytes::ReadAt</b></a>, <a href="if_f2n_29gl.htm"><b>ILockBytes::SetSize</b></a>, <u><b>ILockBytes</b>—</u><a href="if_f2n_3sxa.htm"><b>File-Based Implementation</b></a>, <u><b>ILockBytes</b>—</u><a href="if_f2n_4yem.htm"><b>Global Memory Implementation</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
