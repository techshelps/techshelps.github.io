<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRunningObjectTable</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_irunningobjecttable"></a>IRunningObjectTable</h1>
<p>
The <b>IRunningObjectTable</b> interface manages access to the Running Object Table (ROT), a globally accessible look-up table on each workstation. A workstation's ROT keeps track of those objects that can be identified by a moniker and that are currently running on the workstation. When a client tries to bind a moniker to an object, the moniker checks the ROT to see if the object is already running; this allows the moniker to bind to the current instance instead of loading a new one. </p>
<p>
The ROT contains entries of the form:</p>
<pre><code>(pmkObjectName, pUnkObject)
 </code></pre>
<p>
The <i>pmkObjectName</i> element is a pointer to the moniker that identifies the running object. The <i>pUnkObject</i> element is a pointer to the running object itself. During the binding process, monikers consult the <i>pmkObjectName</i> entries in the Running Object Table to see if an object is already running. </p>
<p>
Objects that can be named by monikers must be registered with the ROT when they are loaded and their registration must be revoked when they are no longer running.</p>
<h5>When to Implement</h5>
<p>
You do not need to implement this interface. The system provides an implementation of the Running Object Table that is suitable for all situations. </p>
<h5>When to Use</h5>
<p>
You typically use the ROT if you're a moniker provider (that is, you hand out monikers identifying your objects to make them accessible to others) or if you're writing your own moniker class (that is, implementing the <a href="if_f2n_8otu.htm"><b>IMoniker</b></a> interface). </p>
<p>
If you are a moniker provider, you register your objects with the ROT when they begin running and revoke their registrations when they are no longer running. This enables the monikers that you hand out to be bound to running objects. You should also use the ROT to record the object's last modification time. You can get an <b>IRunningObjectTable</b> interface pointer to the local ROT by calling the <a href="api2_38md.htm"><b>GetRunningObjectTable</b></a> function. </p>
<p>
The most common type of moniker provider is a compound-document link source. This includes server applications that support linking to their documents (or portions of a document) and container applications that support linking to embeddings within their documents. Server applications that do not support linking can also use the ROT to cooperate with container applications that support linking to embeddings. </p>
<p>
If you are writing your own moniker class, you use the ROT to determine whether a object is running and to retrieve the object's last modification time. You can get an <b>IRunningObjectTable</b> interface pointer to the local ROT by calling the <a href="if_a2e_70bp.htm"><b>IBindCtx::GetRunningObjectTable</b></a> method on the bind context for the current binding operation. Moniker implementations should always use the bind context to acquire a pointer to the ROT; this allows future implementations of <b>IBindCtx</b> to modify binding behavior. Note that you must also implement the <a href="if_r2z_1owx.htm"><b>IROTData</b></a> interface on your moniker class in order to allow your monikers to be registered with the ROT. </p>
<h4>Methods in VTable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_r2z_9dwu.htm">IUnknown</a> Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=52%>Increments reference count.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=52%>Decrements reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>IRunningObjectTable Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_33n6.htm"><b>Register</b></a></td>
<td width=52%>Registers an object with the ROT.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_5ew5.htm"><b>Revoke</b></a></td>
<td width=52%>Revokes an object's registration with the ROT.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_64br.htm"><b>IsRunning</b></a></td>
<td width=52%>Checks whether an object is running.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_1c1g.htm"><b>GetObject</b></a></td>
<td width=52%>Returns a pointer to an object given its moniker.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_0xph.htm"><b>NoteChangeTime</b></a></td>
<td width=52%>Notifies the ROT that an object has changed.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3gdh.htm"><b>GetTimeOfLastChange</b></a></td>
<td width=52%>Returns the time an object was last changed.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_6odj.htm"><b>EnumRunning</b></a></td>
<td width=52%>Returns an enumerator for the ROT.</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also </h4>
<p>
<a href="if_a2e_70bp.htm"><b>IBindCtx::GetRunningObjectTable</b></a>, <a href="if_r2z_1owx.htm"><b>IROTData</b></a>, <a href="api2_38md.htm"><b>GetRunningObjectTable</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
