<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IOleInPlaceActiveObject::OnDocWindowActivate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_ioleinplaceactiveobject_ondocwindowactivate"></a>IOleInPlaceActiveObject::OnDocWindowActivate</h2>
<p>
Notifies the active in-place object when the container's document window is activated or deactivated. </p>
<pre><code><b>HRESULT OnDocWindowActivate(
  BOOL</b><i> fActivate  </i>//State of MDI child document window
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>fActivate</i></dt>
<dd>
[in] State of the MDI child document window. It is TRUE if the window is in the act of activating; FALSE if it is in the act of deactivating.
</dd>
</dl>
<h4>Return Value</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The method completed successfully.
</dd>
</dl>
<h4>Remarks</h4>
<h5>Notes to Callers</h5>
<p>
Call <b>IOleInPlaceActiveObject::OnDocWindowActivate</b> when the MDI child document window is activated or deactivated and the object is currently the active object for the document.</p>
<h5>Notes to Implementers</h5>
<p>
You should include code in this method that installs frame-level tools during object activation. These tools include the shared composite menu and/or optional toolbars and frame adornments. You should then take focus. When deactivating, the object should remove the frame-level tools. Note that if you do not call <b>IOleInPlaceUIWindow::SetBorderSpace</b> with <i>pborderwidths</i> set to NULL, you can avoid having to renegotiate border space.</p>
<p>
<b>Note</b>&nbsp;&nbsp;While executing <b>IOleInPlaceActiveObject::OnDocWindowActivate</b>, do not make calls to the Windows <b>PeekMessage</b> or <b>GetMessage</b> functions, or a dialog box. Doing so may cause the system to deadlock. There are further restrictions on which OLE interface methods and functions can be called from within <b>OnDocWindowActivate</b>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_peekmessage">
</object><a href=JavaScript:alink_1.Click()><b>PeekMessage</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getmessage">
</object><a href=JavaScript:alink_2.Click()><b>GetMessage</b></a> in Win32</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
