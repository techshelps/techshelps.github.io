<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IViewObjectEx::QueryHitPoint</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iviewobjectex_queryhitpoint"></a>IViewObjectEx::QueryHitPoint</h2>
<p>
Indicates whether a point is within a given aspect of an object.</p>
<pre><code><b>HRESULT QueryHitPoint(
  DWORD</b><i> dwAspect</i><b>,</b>       //Requested drawing aspect
<b>  LPRECT</b><i> pRectBounds</i><b>,</b>   //Object bounding rectangle
<b>  POINTL</b><i> ptlLoc</i><b>,</b>        //Hit location
<b>  LONG</b><i> lCloseHint</i><b>,</b>      //Suggested distance considered close
<b>  DWORD*</b><i> pHitResult</i>     //Pointer to returned hit information
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwAspect</i></dt>
<dd>
[in] Requested drawing aspect.</dd>
<dt>
<i>pRectBounds</i></dt>
<dd>
[in] Object bounding rectangle in client coordinates of the containing window. This rectangle is computed and passed by the container so that the object can meaningfully interpret the hit location.</dd>
<dt>
<i>ptlLoc</i></dt>
<dd>
[in] Hit location in client coordinates of the containing window.</dd>
<dt>
<i>lCloseHint</i></dt>
<dd>
[in] Suggested distance in HIMETRIC units that the container considers close. This value is a hint, and objects can interpret it in their own way. Objects can also use this hint to roughly infer output resolution to choose expansiveness of hit test implementation.</dd>
<dt>
<i>pHitResult</i></dt>
<dd>
[out] Pointer to returned information about the hit expressed as the <a href="enums_1vck.htm"><b>HITRESULT</b></a> enumeration values.
</dd>
</dl>
<h4>Return Values</h4>
<dl>
<dt>
S_OK</dt>
<dd>
The hit information was successfully returned in <i>pHitResult</i>. </dd>
<dt>
E_FAIL</dt>
<dd>
This method is not implemented for the requested aspect. Use DVASPECT_CONTENT instead.
</dd>
</dl>
<h4>Remarks</h4>
<p>
To support hit detection on non-rectangular objects, the container needs a reliable way to ask an object whether or not a given location is inside one of its drawing aspects. This function is provided by <b>IViewObjectEx::QueryHitPoint</b>.</p>
<p>
Note that since this method is part of the <b>IViewObjectEx</b> interface, the container can figure whether an mouse hit is over an object without having to necessarily launch the server. If the hit happens to be inside the object, then it is likely that the object will be in-place activated and the server started.</p>
<p>
Typically, the container first quickly determines whether a given location is within the rectangular extent of an object. If the location is within the rectangular extent of an object, the container calls <b>IViewObjectEx::QueryHitPoint</b> to get confirmation that the location is actually inside the object. The hit location is passed in client coordinates of the container window. Since the object may be inactive when this method is called, the bounding rectangle of the object in the same coordinate system is also passed to this method, similarly to what happens in <a href="if_p2q_8x82.htm"><b>IPointerInactive::OnInactiveSetCursor</b></a>.</p>
<p>
Possible returned values include:
<ul>
<li>
outside, on a transparent region</li>
<li>
close enough to be considered a hit (may be used by small or thin objects)</li>
<li>
hit</li>
</ul>
<p>
<b>QueryHitPoint</b> is not concerned by the sub-objects of the object it is called for. It merely indicates whether the mouse hit was within the object or not.</p>
<p>
<b>QueryHitPoint</b> can be called for any of the drawing aspects an object supports. It should fail if the it is not supported for the requested drawing aspect.</p>
<p>
Transparent objects may wish to implement a complex hit-detection mechanism where the user can select either the transparent object or an object behind it, depending on where exactly the click happens inside the object. For example, a transparent TextBox showing big enough text may let the user select the object behind, for example, a bitmap, when the user clicks between the characters. For this reason, the information returned by <b>QueryHitPoint</b> includes indication about whether the hit happens on an opaque or transparent region.</p>
<p>
An example of non-rectangular and transparent hit detection is a transparent circle control with an object behind it (a line in the example below):</p>
<p>
<img src="images/exhit.gif" border=0></p>
<p>
The values shown are for hit tests against the circle; gray regions are not part of the control, but are shown here to indicate an area around the image considered close. Each object implements its own definition of close but is assisted by a hint provided by the container so that closeness can be adjusted as images zoom larger or smaller.</p>
<p>
In the picture above, the points marked "Hit", "Close" and "Transparent" would all be hits of varying strength on the circle, with the exception of the one marked "Transparent, (but for the line, close)." This illustrates the effect of the different strength of hits. Since the circle responds "transparent" while the line claims "close," and transparent is weaker than close, the line takes the hit.</p>
<h5>Note to Implementers</h5>
<p>
An object supporting <b>IViewObjectEx</b> is required to implement this method at least for the DVASPECT_CONTENT aspect. The object should not take any other action in response to this method other than to return the information; there should be no side-effects. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. New for OC96.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in ocidl.h.</p>
<h4>See Also</h4>
<p>
<a href="if_p2q_8x82.htm"><b>IPointerInactive::OnInactiveSetCursor</b></a>, <a href="enums_1vck.htm"><b>HITRESULT</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
