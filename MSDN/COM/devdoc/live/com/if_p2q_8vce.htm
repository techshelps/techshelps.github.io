<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPropertySetStorage-Standalone Implementation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ipropertysetstorage_standalone_implementation"></a>IPropertySetStorage-Standalone Implementation</h1>
<p>
The system-provided, standalone implementation of <b>IPropertySetStorage</b> includes an implementation of both <b>IPropertyStorage</b>, the interface that reads and writes properties in a property set storage, and <b>IPropertySetStorage</b>, the interface that creates and opens property sets in a storage. The <b>IEnumSTATPROPSTG</b> and <b>IEnumSTATPROPSETSTG</b> interfaces are also provided in the standalone implementation.</p>
<p>
To use the standalone implementation of <b>IPropertySetStorage</b>, you first obtain a pointer to the system-provided, standalone implementation and associate the system-provided implementation with your storage object. To get a pointer to the standalone implementation of <b>IPropertySetStorage</b>, call the <b>StgCreatePropSetStg</b> function and provide the <i>pStorage</i> parameter specifying the storage object that will contain the property set. This function supplies you with a pointer to the new <b>IPropertySetStorage</b> interface for the specified storage object.</p>
<p>
The standalone implementation of <b>IPropertySetStorage</b> creates property sets on any storage or stream object, not just on compound file storages and streams. The standalone implementation does not depend on compound files and can be used with any implementation of structured storages. See the section <b>IPropertySetStorage-Compound File Implementation</b> in the Object Services section of the Platform SDK for more information on the compound file implementation of this interface.</p>
<h5>When to Use</h5>
<p>
Call the methods of <b>IPropertySetStorage</b> to create, open, and delete property sets in any structured storage. There is also a method that supplies a pointer to the <b>IEnumSTATPROPSETSTG</b> enumerator that can be used to enumerate the property sets in the storage. </p>
<p>
The standalone implementation also provides the <b>StgCreatePropStg</b> and the <b>StgOpenPropStg</b> helper functions in addition to the <b>Create</b> and <b>Open</b> methods to create and open property sets. These two functions add support for the PROPSETFLAG_UNBUFFERED value so you can directly write changes to the property set instead of buffering them in a cache. See the <a href="enums_4exz.htm"><b>PROPSETFLAG</b></a> enumeration for more information on using this value.</p>
<h4>Remarks</h4>
<p>
The standalone implementation of <b>IPropertySetStorage</b> supports the following methods:
<dl>
<dt>
<b>IPropertySetStorage::Create</b> </dt>
<dd>
Creates a new property set in the storage and returns a pointer to the <b>IPropertyStorage</b> interface on the property set.
<p>
If you plan to use the PROPSETFLAG_UNBUFFERED value, use the <b>StgCreatePropStg</b> function instead to create and open the new property set and to obtain a pointer to the standalone implementation for the <b>IPropertyStorage</b> interface on the property set.
</dd>
<dt>
<b>IPropertySetStorage::Open</b> </dt>
<dd>
Opens an existing property set in the storage and returns a pointer to the <b>IPropertyStorage</b> interface on the property set.
<p>
If you plan to use the PROPSETFLAG_UNBUFFERED value, use the <b>StgOpenPropStg</b> function instead to obtain a pointer to the standalone implementation of <b>IPropertyStorage</b> on the specified property set.
</dd>
<dt>
<b>IPropertySetStorage::Delete</b> </dt>
<dd>
Deletes a property set in this property set storage.</dd>
<dt>
<b>IPropertySetStorage::Enum</b> </dt>
<dd>
Creates an object that can be used to enumerate STATPROPSETSTG structures. Each STATPROPSETSTG structure provides information about a single property set.

<p>
<b>Note</b>&nbsp;&nbsp;The DocumentSummaryInformation property set is special, in that it may have two property set sections. This property set is described in the Object Services topic of the Platform SDK in the section titled "The DocumentSummaryInformation Property Set." The second property set is referred to as the User-Defined Properties. Each section is identified with a unique Format ID, for example FMTID_DocumentSummaryInformation and FMTID_UserDefinedProperties.

<p>
When <b>IPropertySetStorage::Create</b> is called to create the User-Defined Property Set, the first section is created automatically. Thus once FMTID_UserDefinedProperties is created, FMTID_DocumentSummaryInformation need not be created, but can be opened with a call to <b>IPropertySetStorage::Open</b>. Note that creating the first section does not automatically create the second section. It is not possible to open both sections simultaneously.

<p>
Alternately, when <b>IPropertySetStorage::Delete</b> is called to delete the <b>first</b> section, both sections are deleted. That is, calling <b>IPropertySetStorage::Delete</b> with FMTID_DocumentSummaryInformation, causes both that section and the FMTID_UserDefinedProperties section to be deleted. Note that deleting the second section does not automatically delete the first section.

<p>
Finally, when <b>IPropertySetStorage::Enum</b> is used to enumerate property sets, the User-Defined Property Set isl not enumerated.

</dd>
</dl>
<h4>Programming Information</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>Windows NT</td>
<td width=52%>4.0/SP2 or with <a href="newgloss_8xvd.htm#_oleglos_redistributable_files">IPROP.DLL</a></td>
</tr>
<tr valign=top>
<td width=48%>Win95</td>
<td width=52%>Yes; requires IPROP.DLL</td>
</tr>
<tr valign=top>
<td width=48%>Win32s</td>
<td width=52%>No</td>
</tr>
<tr valign=top>
<td width=48%>Unicode</td>
<td width=52%>Yes</td>
</tr>
<tr valign=top>
<td width=48%>Import Library</td>
<td width=52%>IPROP.DLL</td>
</tr>
<tr valign=top>
<td width=48%>Header File</td>
<td width=52%>IPROPIDL.H</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="if_p2q_80md.htm"><b>IPropertyStorage</b></a>,<b> <a href="if_p2q_9e0e.htm">IPropertySetStorage - Compound File Implementation</a></b>, <a href="if_p2q_5cq6.htm"><b>IPropertyStorage-Standalone Implementation</b></a>, <a href="structs_6u07.htm"><b>STATPROPSETSTG</b></a>, <a href="enums_4exz.htm"><b>PROPSETFLAG</b></a>, <a href="if_r2z_1rsj.htm"><b>IStorage::EnumElements</b></a>, <a href="enums_1ktp.htm"><b>STGM</b></a>, <a href="api4_59ev.htm"><b>StgCreatePropStg</b></a>, <a href="api4_26hz.htm"><b>StgOpenPropStg</b></a>, <a href="api4_1dd3.htm"><b>StgCreatePropSetStg</b></a> </p>
<p>
<b></b></p>
<p>
<b></b></p>
<p>&nbsp;</p></body>
</HTML>
