<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPersistFile</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_com_ipersistfile"></a>IPersistFile</h1>
<p>
The <b>IPersistFile</b> interface provides methods that permit an object to be loaded from or saved to a disk file, rather than a storage object or stream. Because the information needed to open a file varies greatly from one application to another, the implementation of <b>IPersistFile::Load</b> on the object must also open its disk file.</p>
<p>
The <b>IPersistFile</b> interface inherits its definition from <a href="if_p2q_3lbo.htm"><b>IPersist</b></a>, so all implementations must also include the <b>GetClassID</b> method of <b>IPersist</b>.</p>
<h5>When to Implement</h5>
<p>
Implement <b>IPersistFile</b> when you want to read or write information from a separate file, which could be of any file format.</p>
<p>
This interface should be implemented on any objects that support linking through a file moniker, including the following:
<ul>
<li>
Any object that supports links to its files or to <i>pseudo-objects</i> within its files</li>
<li>
A container application that supports links to objects within its compound file</li>
</ul>
<p>
Typically, you implement the <b>IPersistFile</b> interface as part of an aggregate object that includes other interfaces that are appropriate for the type of moniker binding that is supported.</p>
<p>
For example, in either of the cases mentioned above, the moniker for the linked object can be a composite moniker. In the first case, a composite moniker identifies the pseudo-object contained within the file. In the second case, a composite moniker identifies the embedded object contained within the compound file. In either case of composite monikers, you must implement the <b>IPersistFile</b> interface as part of the same object on which the <b>IOleItemContainer</b> interface is implemented. Then, when the application for the linked object is run, OLE queries for the <b>IOleItemContainer</b> interface to locate the embedded object or the pseudo-object contained in the file.</p>
<p>
As another example, if the moniker is a simple file moniker (i.e., the link is to the entire file), OLE queries for the interface that the initiator of the bind operation requested. Typically, this is one of the compound document interfaces, such as <b>IOleObject</b>, <a href="if_a2e_24z8.htm"><b>IDataObject</b></a>, or <a href="if_p2q_8crp.htm"><b>IPersistStorage</b></a>. </p>
<h5>When to Use</h5>
<p>
Call methods in the <b>IPersistFile</b> interface to load or save a linked object in a specified file.</p>
<p>
When <b>IPersistFile</b> is implemented on an object that supports linking through a file moniker and the application for the linked object is run, OLE calls <a href="if_p2q_0p7o.htm"><b>IPersistFile::Load</b></a>. Once the file is loaded, OLE calls <b>IPersistFile::QueryInterface</b> to get another interface pointer to the loaded object. The <b>IPersistFile</b> interface is typically part of an aggregate object that offers other interfaces.</p>
<p>
In this case, the only <b>IPersistFile</b> method that OLE calls is the <b>Load</b> method to load a file linked to a container, running the application associated with the file. It would also be unusual for applications to call other methods in this case, which support saving an object to a file. Generally, it is left to the end user and the application for the linked object to decide when to save the object. This differs from the situation for an embedded object, in which the container application uses the <a href="if_p2q_8crp.htm"><b>IPersistStorage</b></a> interface to provide the storage and to tell the object when to save itself.</p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_r2z_9dwu.htm">IUnknown</a> Methods</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_7fvp.htm"><b>QueryInterface</b></a></td>
<td width=52%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_3rja.htm"><b>AddRef</b></a></td>
<td width=52%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_r2z_59np.htm"><b>Release</b></a></td>
<td width=52%>Decrements the reference count.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%><a href="if_p2q_3lbo.htm">IPersist</a> Method</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_1yn8.htm"><b>GetClassID</b></a></td>
<td width=52%>Returns the class identifier (CLSID) for the component object.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%><b>IPersistFile Methods</b></td>
<td width=52%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_7nqx.htm"><b>IsDirty</b></a></td>
<td width=52%>Checks an object for changes since it was last saved to its current file.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_0p7o.htm"><b>Load</b></a></td>
<td width=52%>Opens the specified file and initializes an object from the file contents.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_8twl.htm"><b>Save</b></a></td>
<td width=52%>Saves the object into the specified file.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_2dno.htm"><b>SaveCompleted</b></a></td>
<td width=52%>Notifies the object that it can revert from NoScribble mode to Normal mode.</td>
</tr>
<tr valign=top>
<td width=48%><a href="if_p2q_54dh.htm"><b>GetCurFile</b></a></td>
<td width=52%>Gets the current name of the file associated with the object.</td>
</tr>
</table><br>
<p>
</p>
<p>
</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<p>&nbsp;</p></body>
</HTML>
