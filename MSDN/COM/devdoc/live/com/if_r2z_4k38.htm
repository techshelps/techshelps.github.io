<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IServerSecurity::QueryBlanket</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_iserversecurity_queryblanket"></a>IServerSecurity::QueryBlanket</h2>
<p>
Called by the server to find out about the client that invoked one of its methods.</p>
<pre><code><b>HRESULT QueryBlanket(
  DWORD * </b><i> pAuthnSvc</i><b>,     </b>//Pointer to the current authentication 
                          // service
<b>  DWORD * </b><i> pAuthzSvc</i><b>,     </b>//Pointer to the current authorization 
                          // service
<b>  OLECHAR ** </b><i> pServerPrincName</i><b>,</b>
<b>                          </b>//Pointer to the current principal name
<b>  DWORD *</b><i> pAuthnLevel</i><b>,    </b>//Pointer to the current authentication level
<b>  DWORD *</b><i> pImpLevel</i><b>,      </b>//Reserved for future use; must be NULL
<b>  RPC_AUTHZ_HANDLE * </b><i> pPrivs</i><b>,</b>
<b>                          </b>//Pointer to handle to privilege information
<b>  DWORD * </b><i> pCapabilities  </i>//Pointer to flags indicating further 
                          // capabilities 
<b>);</b>
 </code></pre>
<h4>Parameter</h4>
<dl>
<dt>
<i>pAuthnSvc</i></dt>
<dd>
[out] Pointer to the current <i>authentication</i> service. This will be a single value taken from the list of <a href="enums_22yg.htm"><b>RPC_C_AUTHN_xxx</b></a> constants. If the caller specifies NULL, the current authentication service is not retrieved.</dd>
<dt>
<i>pAuthzSvc</i></dt>
<dd>
[out] Pointer to the current <i>authorization </i>service. This will be a single value taken from the list of <a href="enums_77js.htm"><b>RPC_C_AUTHZ_<i>xxx</i></b></a> constants. If the caller specifies NULL, the current authorization service is not retrieved.</dd>
<dt>
<i>pServerPrincName</i></dt>
<dd>
[out] Pointer to the current principal name. The string will be allocated by the callee using <a href="api1_9bj7.htm"><b>CoTaskMemAlloc</b></a>, and must be freed by the caller using <a href="api1_63l1.htm"><b>CoTaskMemFree</b></a> when they are done with it. If the caller specifies NULL, the current principal name is not retrieved. </dd>
<dt>
<i>pAuthnLevel</i></dt>
<dd>
[out] Pointer to the current authentication level. This will be a single value taken from the list of <a href="enums_3lo8.htm"><b>RPC_C_AUTHN_LEVEL_<i>xxx</i></b></a> constants. If the caller specifies NULL, the current authentication level is not retrieved. </dd>
<dt>
<i>pImpLevel</i></dt>
<dd>
[out] Must be NULL. This parameter is reserved for future use.</dd>
<dt>
<i>pPrivs</i></dt>
<dd>
[out] Pointer to a handle to the privilege information for the client application. The format of the structure is authentication service specific. The application should not write or free the memory. The information is only valid for the duration of the current call. If the caller specifies NULL, the current privilege information is not retrieved. For NTLMSSP, Kerberos, and SSL, this is the client's principal name. By default, SSL principal names will be in the msstd form. The fullsic form will be returned if EOAC_MAKE_FULLSIC is specified in the <i>pCapabilities</i> parameter. For more information on msstd and fullsic, see the <b>SSL</b> section of <a href="comext_08j7.htm"><b>COM and Security Packages</b></a>.</dd>
<dt>
<i>pCapabilities</i></dt>
<dd>
[in, out] Pointer to return flags indicating capabilities of the call. If the caller specifies NULL, the current capabilities are not retrieved. For SSL, you can set the EOAC_MAKE_FULLSIC bit in *<i>pCapabilities</i> to request that the privilege information returned in *<i>pPrivs</i> be in fullsic form. Notice that since this parameter was previously only an [out] parameter, you may have to clear the EOAC_MAKE_FULLSIC bit in *<i>pCapabilities</i> to get the msstd form. For more information on msstd and fullsic, see the <b>SSL</b> section of <a href="comext_08j7.htm"><b>COM and Security Packages</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
Success.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>IServerSecurity::QueryBlanket</b> is used by the server to find out about the client that invoked one of its methods. To get a pointer to <b>IServerSecurity</b> for the current call on the current thread, call <a href="api1_2rqs.htm"><b>CoGetCallContext</b></a>, specifying <b>IID_IServerSecurity</b>. This interface pointer may only be used in the same apartment as the call for the duration of the call.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 4.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later. Available as a redistributable for Windows 95.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in objidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api1_2rqs.htm"><b>CoGetCallContext</b></a>, <a href="api1_0dro.htm"><b>CoQueryClientBlanket</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
