<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IDropTarget::DragOver</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_com_idroptarget_dragover"></a>IDropTarget::DragOver</h2>
<p>
Provides target feedback to the user and communicates the drop's effect to the <a href="api2_5now.htm"><b>DoDragDrop</b></a> function so it can communicate the effect of the drop back to the source. </p>
<pre><code><b>HRESULT DragOver(
  DWORD</b><i> grfKeyState</i><b>, </b>//Current state of keyboard modifier keys
<b>  POINTL</b><i> pt</i><b>,         </b>//Pointer to the current cursor coordinates
<b>  DWORD *</b><i> pdwEffect  </i>//Pointer to the effect of the drag-and-drop 
                     // operation
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>grfKeyState</i></dt>
<dd>
[in] Current state of the keyboard modifier keys on the keyboard. Valid values can be a combination of any of the flags MK_CONTROL, MK_SHIFT, MK_ALT, MK_BUTTON, MK_LBUTTON, MK_MBUTTON, and MK_RBUTTON. </dd>
<dt>
<i>pt</i></dt>
<dd>
[in] Pointer to the current cursor coordinates in the coordinate space of the drop-target window.</dd>
<dt>
<i>pdwEffect</i></dt>
<dd>
[in, out] Pointer to the current effect flag. Valid values are from the enumeration <a href="enums_6bas.htm">DROPEFFECT</a>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
This method supports the standard return values E_INVALIDARG, E_OUTOFMEMORY, and E_UNEXPECTED, as well as the following: 
<dl>
<dt>
S_OK</dt>
<dd>
The method completed its task successfully.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You do not call <b>IDropTarget::DragOver</b> directly. The <a href="api2_5now.htm"><b>DoDragDrop</b></a> function calls this method each time the user moves the mouse across a given target window. <b>DoDragDrop</b> exits the loop if the drag-and-drop operation is canceled, if the user drags the mouse out of the target window, or if the drop is completed.</p>
<p>
In implementing <b>IDropTarget::DragOver</b>, you must provide features similar to those in <a href="if_a2e_5ovm.htm"><b>IDropTarget::DragEnter</b></a>. You must determine the effect of dropping the data on the target by examining the <a href="structs_14v7.htm"><b>FORMATETC</b></a> defining the data object's formats and medium, along with the state of the modifier keys. The mouse position may also play a role in determining the effect of a drop. The following modifier keys affect the result of the drop:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=31%>Key Combination</th>
<th align=left width=34%>User-Visible Feedback</th>
<th align=left width=35%>Drop Effect</th>
</tr>
<tr valign=top>
<td width=31%>ctrl + shift</td>
<td width=34%>=</td>
<td width=35%>DROPEFFECT_LINK</td>
</tr>
<tr valign=top>
<td width=31%>ctrl</td>
<td width=34%>+</td>
<td width=35%>DROPEFFECT_COPY</td>
</tr>
<tr valign=top>
<td width=31%>No keys or shift</td>
<td width=34%>None</td>
<td width=35%>DROPEFFECT_MOVE</td>
</tr>
</table><br>
<p>
You communicate the effect of the drop back to the source through <a href="api2_5now.htm"><b>DoDragDrop</b></a> in <i>pdwEffect</i>. The <b>DoDragDrop</b> function then calls <a href="if_a2e_6lkb.htm"><b>IDropSource::GiveFeedback</b></a> so the source application can display the appropriate visual feedback to the user. </p>
<p>
On entry to <b>IDropTarget::DragOver</b>, the <i>pdwEffect</i> parameter must be set to the allowed effects passed to the <i>pdwOkEffect</i> parameter of the <b>DoDragDrop</b> function. The <b>IDropTarget::DragOver</b> method must be able to choose one of these effects or disable the drop. </p>
<p>
Upon return, <i>pdwEffect</i> is set to one of the members of the DROPEFFECT enumeration. This value is then passed to the <i>pdwEffect</i> parameter of <a href="api2_5now.htm"><b>DoDragDrop</b></a>. Reasonable values are DROPEFFECT_COPY to copy the dragged data to the target, DROPEFFECT_LINK to create a link to the source data, or DROPEFFECT_MOVE to allow the dragged data to be permanently moved from the source application to the target.</p>
<p>
You may also wish to provide appropriate visual feedback in the target window. There may be some target feedback already displayed from a previous call to <b>IDropTarget::DragOver</b> or from the initial <a href="if_a2e_5ovm.htm"><b>IDropTarget::DragEnter</b></a>. If this feedback is no longer appropriate, you should remove it.</p>
<p>
For efficiency reasons, a data object is not passed in <b>IDropTarget::DragOver</b>. The data object passed in the most recent call to<b> IDropTarget::DragEnter</b> is available and can be used.</p>
<p>
When <b>IDropTarget::DragOver</b> has completed its operation, the <b>DoDragDrop</b> function calls <a href="if_a2e_6lkb.htm"><b>IDropSource::GiveFeedback</b></a> so the source application can display the appropriate visual feedback to the user. </p>
<h5>Notes to Implementers</h5>
<p>
This function is called frequently during the <a href="api2_5now.htm"><b>DoDragDrop</b></a> loop so it makes sense to optimize your implementation of the <b>DragOver</b> method as much as possible.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Use Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in oleidl.h.</p>
<h4>See Also</h4>
<p>
<a href="api2_5now.htm"><b>DoDragDrop</b></a>, <a href="if_a2e_12jp.htm"><b>IDropSource</b></a>, <a href="if_a2e_2y7o.htm"><b>IDropTarget</b></a>, <a href="api3_9eeo.htm"><b>RegisterDragDrop</b></a>, <a href="api3_2jow.htm"><b>RevokeDragDrop</b></a> </p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
