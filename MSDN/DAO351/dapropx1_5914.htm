<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Property Example (DAO/Microsoft Jet)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="daprofilterx"></a>Filter Property Example</b></p>
<p>
This example uses the <b>Filter</b> property to create a new <b>Recordset</b> from an existing <b>Recordset</b> based on a specified condition. The FilterField function is required for this procedure to run.</p>
<pre><code>Sub FilterX()

   Dim dbsNorthwind As Database
   Dim rstOrders As Recordset
   Dim intOrders As Integer
   Dim strCountry As String
   Dim rstOrdersCountry As Recordset
   Dim strMessage As String

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")
   Set rstOrders = dbsNorthwind.OpenRecordset("Orders", _
      dbOpenSnapshot)

   ' Populate the Recordset.
   rstOrders.MoveLast
   intOrders = rstOrders.RecordCount

   ' Get user input.
   strCountry = Trim(InputBox( _
      "Enter a country to filter on:"))

   If strCountry &lt;&gt; "" Then
      ' Open a filtered Recordset object.
      Set rstOrdersCountry = _
         FilterField(rstOrders, "ShipCountry", strCountry)

      With rstOrdersCountry
         ' Check RecordCount before populating Recordset;
         ' otherwise, error may result.
         If .RecordCount &lt;&gt; 0 Then .MoveLast
         ' Print number of records for the original 
         ' Recordset object and the filtered Recordset 
         ' object.
         strMessage = "Orders in original recordset: " &amp; _
            vbCr &amp; intOrders &amp; vbCr &amp; _
            "Orders in filtered recordset (Country = '" &amp; _
            strCountry &amp; "'): " &amp; vbCr &amp; .RecordCount
         MsgBox strMessage
         .Close
      End With

   End If

   rstOrders.Close

   dbsNorthwind.Close

End Sub

Function FilterField(rstTemp As Recordset, _
   strField As String, strFilter As String) As Recordset

   ' Set a filter on the specified Recordset object and then 
   ' open a new Recordset object.
   rstTemp.<i>Filter</i> = strField &amp; " = '" &amp; strFilter &amp; "'"
   Set FilterField = rstTemp.OpenRecordset

End Function
</code></pre>
<p>
<B><b>Note</b></B> To see the effects of filtering <code>rstOrders</code>, you must set its <b>Filter</b> property, and then open a second <b>Recordset</b> object based on <code>rstOrders</code>.</p>
<p class=indent>
<B><b>Note</b></B> When you know the data you want to select, it's usually more efficient to create a <b>Recordset</b> with an <a href="dadefn02_5gj8.htm">SQL statement</a>. This example shows how you can create just one <b>Recordset</b> and obtain records from a particular country.</p>
<pre><code>Sub FilterX2()

   Dim dbsNorthwind As Database
   Dim rstOrders As Recordset

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")

   ' Open a Recordset object that selects records from a 
   ' table based on the shipping country.
   Set rstOrders = _
      dbsNorthwind.OpenRecordset("SELECT * " &amp; _
      "FROM Orders WHERE ShipCountry = 'USA'", _
      dbOpenSnapshot)

   rstOrders.Close
   dbsNorthwind.Close

End Sub</code></pre>
</font></BODY>
</HTML>
