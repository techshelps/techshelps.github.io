<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Execute Method Example (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="damthexecutex"></a>Execute Method Example</b></p>
<p>
This example demonstrates the <b>Execute</b> method when run from both a <b>QueryDef</b> object and a <b>Database</b> object. The ExecuteQueryDef and PrintOutput procedures are required for this procedure to run.</p>
<pre><code>Sub ExecuteX()

   Dim dbsNorthwind As Database
   Dim strSQLChange As String
   Dim strSQLRestore As String
   Dim qdfChange As QueryDef
   Dim rstEmployees As Recordset
   Dim errLoop As Error

   ' Define two SQL statements for action queries.
   strSQLChange = "UPDATE Employees SET Country = " &amp; _
      "'United States' WHERE Country = 'USA'"
   strSQLRestore = "UPDATE Employees SET Country = " &amp; _
      "'USA' WHERE Country = 'United States'"

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")
   ' Create temporary QueryDef object.
   Set qdfChange = dbsNorthwind.CreateQueryDef("", _
      strSQLChange)
   Set rstEmployees = dbsNorthwind.OpenRecordset( _
      "SELECT LastName, Country FROM Employees", _
      dbOpenForwardOnly)

   ' Print report of original data.
   Debug.Print _
      "Data in Employees table before executing the query"
   PrintOutput rstEmployees
   
   ' Run temporary QueryDef.
   ExecuteQueryDef qdfChange, rstEmployees
   
   ' Print report of new data.
   Debug.Print _
      "Data in Employees table after executing the query"
   PrintOutput rstEmployees

   ' Run action query to restore data. Trap for errors,
   ' checking the Errors collection if necessary.
   On Error GoTo Err_Execute
   dbsNorthwind.Execute strSQLRestore, dbFailOnError
   On Error GoTo 0

   ' Retrieve the current data by requerying the recordset.
   rstEmployees.Requery

   ' Print report of restored data.
   Debug.Print "Data after executing the query " &amp; _
      "to restore the original information"
   PrintOutput rstEmployees

   rstEmployees.Close
   
   Exit Sub
   
Err_Execute:

   ' Notify user of any errors that result from
   ' executing the query.
   If DBEngine.Errors.Count &gt; 0 Then
      For Each errLoop In DBEngine.Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; vbCr &amp; _
            errLoop.Description
      Next errLoop
   End If
   
   Resume Next

End Sub

Sub ExecuteQueryDef(qdfTemp As QueryDef, _
   rstTemp As Recordset)

   Dim errLoop As Error
   
   ' Run the specified QueryDef object. Trap for errors,
   ' checking the Errors collection if necessary.
   On Error GoTo Err_Execute
   qdfTemp.Execute dbFailOnError
   On Error GoTo 0

   ' Retrieve the current data by requerying the recordset.
   rstTemp.Requery
   
   Exit Sub

Err_Execute:

   ' Notify user of any errors that result from
   ' executing the query.
   If DBEngine.Errors.Count &gt; 0 Then
      For Each errLoop In DBEngine.Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; vbCr &amp; _
            errLoop.Description
      Next errLoop
   End If
   
   Resume Next

End Sub

Sub PrintOutput(rstTemp As Recordset)

   ' Enumerate Recordset.
   Do While Not rstTemp.EOF
      Debug.Print "&nbsp; " &amp; rstTemp!LastName &amp; _
         ", " &amp; rstTemp!Country
      rstTemp.MoveNext
   Loop

End Sub</code></pre>
</font></BODY>
</HTML>
