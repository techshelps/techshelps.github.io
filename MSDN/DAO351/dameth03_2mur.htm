<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetRows Method (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<h1><a name="damthgetrows"></a>GetRows Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="damthGetRowsC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="damthGetRowsX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="damthGetRowsA">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="damthGetRowsS">
</object> </p>
<p>
Retrieves multiple rows from a <a href="dadobj03_0tdg.htm">Recordset</a> object.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>Set</b><i> varArray</i> = <i>recordset</i>.<b>GetRows (</b><i>numrows</i><b>)</b></p>
<p>
The <b>GetRows</b> method syntax has the following parts.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows width=587>
<tr valign=top>
<td class=label width=25%><b>Part</b></td>
<td class=label width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%><i>varArray</i></td>
<td width=75%>A <a href="dadefn02_282t.htm">Variant</a> that stores the returned data.</td>
</tr>
<tr valign=top>
<td width=25%><i>recordset</i></td>
<td width=75%>An <a href="dadefn02_3h7p.htm">object variable</a> that represents a <b>Recordset</b> object. </td>
</tr>
<tr valign=top>
<td width=25%><i>numrows</i></td>
<td width=75%>A <b>Variant</b> that is equal to the number of rows to retrieve.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Use the <b>GetRows</b> method to copy records from a <b>Recordset</b>. <b>GetRows</b> returns a two-dimensional <a href="dadefn03_5veh.htm">array</a>. The first subscript identifies the field and the second identifies the row number. For example, <code>intField</code> represents the field, and <code>intRecord</code> identifies the row number:</p>
<pre><code>avarRecords(intField, intRecord)</code></pre>
<p>
To get the first field value in the second row returned, use code like the following:</p>
<pre><code>field1 = avarRecords(0,1)</code></pre>
<p>
To get the second field value in the first row, use code like the following:</p>
<pre><code>field2 = avarRecords(1,0)</code></pre>
<p>
The <code>avarRecords</code> variable automatically becomes a two-dimensional array when <b>GetRows</b> returns data. </p>
<p>
If you request more rows than are available, then <b>GetRows</b> returns only the number of available rows. You can use the Visual Basic for Applications <b>UBound</b> function to determine how many rows <b>GetRows</b> actually retrieved, because the array is sized to fit the number of returned rows. For example, if you returned the results into a <b>Variant</b> called <code>varA</code>, you could use the following code to determine how many rows were actually returned:</p>
<pre><code>numReturned = UBound(varA,2) + 1</code></pre>
<p>
You need to use <code>"+ 1"</code> because the first row returned is in the 0 element of the array. The number of rows that you can retrieve is constrained by the amount of available memory. You shouldn't use <b>GetRows</b> to retrieve an entire table into an array if it is large.</p>
<p>
Because <b>GetRows</b> returns all fields of the <b>Recordset</b> into the array, including Memo and Long Binary fields, you might want to use a query that restricts the fields returned.</p>
<p>
After you call <b>GetRows</b>, the current record is positioned at the next unread row. That is, <b>GetRows</b> has the same effect on the current record as <b>Move</b> <i>numrows</i>.</p>
<p>
If you are trying to retrieve all the rows by using multiple <b>GetRows</b> calls, use the <a href="daprop01_1hnq.htm">EOF</a> property to be sure that you're at the end of the <b>Recordset</b>. <b>GetRows</b> returns less than the number requested if it's at the end of the <b>Recordset</b>, or if it can't retrieve a row in the range requested. For example, if you're trying to retrieve 10 records, but you can't retrieve the fifth record, <b>GetRows</b> returns four records and makes the fifth record the current record. This will not generate a <a href="dadefn02_9376.htm">run-time error</a>. This might occur if another user deletes a record in a dynaset-type <b>Recordset</b>. See the example for a demonstration of how to handle this.</p>
</font></BODY>
</HTML>
