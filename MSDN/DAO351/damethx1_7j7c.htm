<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateRelation Method Example (DAO/Microsoft Jet)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="damthcreaterelationx"></a>CreateRelation Method Example</b></p>
<p>
This example uses the <b>CreateRelation</b> method to create a <b>Relation</b> between the Employees <b>TableDef</b> and a new <b>TableDef</b> called Departments. This example also demonstrates how creating a new <b>Relation</b> will also create any necessary <b>Indexes</b> in the <a href="dadefn01_8o2t.htm">foreign table</a> (the DepartmentsEmployees <b>Index</b> in the Employees table).</p>
<pre><code>Sub CreateRelationX()

   Dim dbsNorthwind As Database
   Dim tdfEmployees As TableDef
   Dim tdfNew As TableDef
   Dim idxNew As Index
   Dim relNew As Relation
   Dim idxLoop As Index

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")

   With dbsNorthwind
      ' Add new field to Employees table.
      Set tdfEmployees = .TableDefs!Employees
      tdfEmployees.Fields.Append _
         tdfEmployees.CreateField("DeptID", dbInteger, 2)

      ' Create new Departments table.
      Set tdfNew = .CreateTableDef("Departments")

      With tdfNew
         ' Create and append Field objects to Fields
         ' collection of the new TableDef object.
         .Fields.Append .CreateField("DeptID", dbInteger, 2)
         .Fields.Append .CreateField("DeptName", dbText, 20)

         ' Create Index object for Departments table.
         Set idxNew = .CreateIndex("DeptIDIndex")
         ' Create and append Field object to Fields 
         ' collection of the new Index object.
         idxNew.Fields.Append idxNew.CreateField("DeptID")
         ' The index in the primary table must be Unique in
         ' order to be part of a Relation.
         idxNew.Unique = True
         .Indexes.Append idxNew
      End With

      .TableDefs.Append tdfNew

      ' Create EmployeesDepartments Relation object, using 
      ' the names of the two tables in the relation.
      Set relNew = .CreateRelation("EmployeesDepartments", _
         tdfNew.Name, tdfEmployees.Name, _
         dbRelationUpdateCascade)

      ' Create Field object for the Fields collection of the 
      ' new Relation object. Set the Name and ForeignName 
      ' properties based on the fields to be used for the 
      ' relation.
      relNew.Fields.Append relNew.CreateField("DeptID")
      relNew.Fields!DeptID.ForeignName = "DeptID"
      .Relations.Append relNew

      ' Print report.
      Debug.Print "Properties of " &amp; relNew.Name &amp; _
         " Relation"
      Debug.Print "&nbsp; Table = " &amp; relNew.Table
      Debug.Print "&nbsp; ForeignTable = " &amp; _
         relNew.ForeignTable
      Debug.Print "Fields of " &amp; relNew.Name &amp; " Relation"

      With relNew.Fields!DeptID
         Debug.Print "&nbsp; " &amp; .Name
         Debug.Print "&nbsp;&nbsp;&nbsp; Name = " &amp; .Name
         Debug.Print "&nbsp;&nbsp;&nbsp; ForeignName = " &amp; .ForeignName
      End With

      Debug.Print "Indexes in " &amp; tdfEmployees.Name &amp; _
         " TableDef"
      For Each idxLoop In tdfEmployees.Indexes
         Debug.Print "&nbsp; " &amp; idxLoop.Name &amp; _
            ", Foreign = " &amp; idxLoop.Foreign
      Next idxLoop

      ' Delete new objects because this is a demonstration.
      .Relations.Delete relNew.Name
      .TableDefs.Delete tdfNew.Name
      tdfEmployees.Fields.Delete "DeptID"
      .Close
   End With

End Sub</code></pre>
</font></BODY>
</HTML>
