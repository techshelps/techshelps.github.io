<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LockEdits Property Example (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="daprolockeditsx"></a>LockEdits Property Example</b></p>
<p>
This example demonstrates <a href="dadefn02_4zvn.htm">pessimistic locking</a> by setting the <b>LockEdits</b> property to <b>True</b>, and then demonstrates <a href="dadefn02_1der.htm">optimistic locking</a> by setting the <b>LockEdits</b> property to <b>False</b>. It also demonstrates what kind of error handling is required in a multiuser database environment in order to modify a field. The PessimisticLock and OptimisticLock functions are required for this procedure to run.</p>
<pre><code>Sub LockEditsX()

   Dim dbsNorthwind As Database
   Dim rstCustomers As Recordset
   Dim strOldName As String

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")
   Set rstCustomers = _
      dbsNorthwind.OpenRecordset("Customers", _
      dbOpenDynaset)

   With rstCustomers
      ' Store original data.
      strOldName = !CompanyName

      If MsgBox("Pessimistic locking demonstration...", _
            vbOKCancel) = vbOK Then

         ' Attempt to modify data with pessimistic locking 
         ' in effect.
         If PessimisticLock(rstCustomers, !CompanyName, _
               "Acme Foods") Then
            MsgBox "Record successfully edited."

            ' Restore original data...
            .Edit
            !CompanyName = strOldName
            .Update
         End If

      End If

      If MsgBox("Optimistic locking demonstration...", _
            vbOKCancel) = vbOK Then

         ' Attempt to modify data with optimistic locking 
         ' in effect.
         If OptimisticLock(rstCustomers, !CompanyName, _
               "Acme Foods") Then
            MsgBox "Record successfully edited."

            ' Restore original data...
            .Edit
            !CompanyName = strOldName
            .Update
         End If

      End If

      .Close
   End With

   dbsNorthwind.Close

End Sub

Function PessimisticLock(rstTemp As Recordset, _
   fldTemp As Field, strNew As String) As Boolean

   dim ErrLoop as Error

   PessimisticLock = True

   With rstTemp
      .<i>LockEdits</i> = True

      ' When you set LockEdits to True, you trap for errors 
      ' when you call the Edit method.
      On Error GoTo Err_Lock
      .Edit
      On Error GoTo 0

      ' If the Edit is still in progress, then no errors
      ' were triggered; you may modify the data.
      If .EditMode = dbEditInProgress Then
         fldTemp = strNew
         .Update
         .Bookmark = .LastModified
      Else
         ' Retrieve current record to see changes made by
         ' other user.
         .Move 0
      End If

   End With
   
   Exit Function
   
Err_Lock:

   If DBEngine.Errors.Count &gt; 0 Then
      ' Enumerate the Errors collection.
      For Each errLoop In DBEngine.Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; _
            vbCr &amp; errLoop.Description
      Next errLoop
      PessimisticLock = False
   End If
   
   Resume Next

End Function

Function OptimisticLock(rstTemp As Recordset, _
   fldTemp As Field, strNew As String) As Boolean

   dim ErrLoop as Error

   OptimisticLock = True

   With rstTemp
      .<i>LockEdits</i> = False
      .Edit
      fldTemp = strNew

      ' When you set LockEdits to False, you trap for errors 
      ' when you call the Update method.
      On Error GoTo Err_Lock
      .Update
      On Error GoTo 0

      ' If there is no Edit in progress, then no errors were
      ' triggered; you may modify the data.
      If .EditMode = dbEditNone Then
         ' Move current record pointer to the most recently
         ' modified record.
         .Bookmark = .LastModified
      Else
         .CancelUpdate
         ' Retrieve current record to see changes made by
         ' other user.
         .Move 0
      End If

   End With
   
   Exit Function
   
Err_Lock:

   If DBEngine.Errors.Count &gt; 0 Then
      ' Enumerate the Errors collection.
      For Each errLoop In DBEngine.Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; _
            vbCr &amp; errLoop.Description
      Next errLoop
      OptimisticLock = False
   End If
   
   Resume Next

End Function</code></pre>
</font></BODY>
</HTML>
