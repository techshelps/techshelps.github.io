<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Relation Object, Relations Collection Example (DAO/Microsoft Jet)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="daobjrelationx"></a>Relation Object, Relations Collection Example</b></p>
<p>
This example shows how an existing <b>Relation</b> object can control data entry. The procedure attempts to add a record with a deliberately incorrect CategoryID; this triggers the error-handling routine.</p>
<pre><code>Sub RelationX()

   Dim dbsNorthwind As Database
   Dim rstProducts As Recordset
   Dim prpLoop As Property
   Dim fldLoop As Field
   Dim errLoop As Error

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")
   Set rstProducts = dbsNorthwind.OpenRecordset("Products")

   ' Print a report showing all the different parts of
   ' the relation and where each part is stored.
   With dbsNorthwind.Relations!CategoriesProducts
      Debug.Print "Properties of " &amp; .Name &amp; " Relation"
      Debug.Print "&nbsp; Table = " &amp; .Table
      Debug.Print "&nbsp; ForeignTable = " &amp; .ForeignTable
      Debug.Print "Fields of " &amp; .Name &amp; " Relation"
      With .Fields!CategoryID
         Debug.Print "&nbsp; " &amp; .Name
         Debug.Print "&nbsp;&nbsp;&nbsp; Name = " &amp; .Name
         Debug.Print "&nbsp;&nbsp;&nbsp; ForeignName = " &amp; .ForeignName
      End With
   End With

<b>   </b>' Attempt to add a record that violates the relation.
   With rstProducts
      .AddNew
      !ProductName = "Trygve's Lutefisk"
      !CategoryID = 10
      On Error GoTo Err_Relation
      .Update
      On Error GoTo 0
      .Close
   End With

   dbsNorthwind.Close
   
   Exit Sub
   
Err_Relation:

   ' Notify user of any errors that result from
   ' the invalid data.
   If DBEngine.Errors.Count &gt; 0 Then
      For Each errLoop In DBEngine.Errors
         MsgBox "Error number: " &amp; errLoop.Number &amp; _
            vbCr &amp; errLoop.Description
      Next errLoop
   End If
   
   Resume Next

End Sub</code></pre>
</font></BODY>
</HTML>
