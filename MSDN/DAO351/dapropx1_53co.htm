<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Property Example (DAO)</title>
<link disabled rel=stylesheet href=msdn_ie3.css>
<style type="text/css">
@import url(msdn_ie4.css);
</style>
</HEAD>
<BODY>
<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">

	<!--TOOLBAR_START-->
	<!--TOOLBAR_EXEMPT-->
	<!--TOOLBAR_END-->


<p class=label>
<b><a name="daprotypex"></a>Type Property Example</b></p>
<p>
This example demonstrates the <b>Type</b> property by returning the name of the constant corresponding to the value of the <b>Type</b> property of four different <b>Recordsets</b>. The RecordsetType function is required for this procedure to run.</p>
<pre><code>Sub TypeX()

   Dim dbsNorthwind As Database
   Dim rstEmployees As Recordset

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")

   ' Default is dbOpenTable.
   Set rstEmployees = _
      dbsNorthwind.OpenRecordset("Employees")
   Debug.Print _
      "Table-type recordset (Employees table): " &amp; _
      RecordsetType(rstEmployees.<i>Type</i>)
   rstEmployees.Close

   Set rstEmployees = _
      dbsNorthwind.OpenRecordset("Employees", _
      dbOpenDynaset)
   Debug.Print _
      "Dynaset-type recordset (Employees table): " &amp; _
      RecordsetType(rstEmployees.<i>Type</i>)
   rstEmployees.Close

   Set rstEmployees = _
      dbsNorthwind.OpenRecordset("Employees", _
      dbOpenSnapshot)
   Debug.Print _
      "Snapshot-type recordset (Employees table): " &amp; _
      RecordsetType(rstEmployees.<i>Type</i>)
   rstEmployees.Close

   Set rstEmployees = _
      dbsNorthwind.OpenRecordset("Employees", _
      dbOpenForwardOnly)
   Debug.Print _
      "Forward-only-type recordset (Employees table): " &amp; _
      RecordsetType(rstEmployees.<i>Type</i>)
   rstEmployees.Close

   dbsNorthwind.Close

End Sub

Function RecordsetType(intType As Integer) As String

   Select Case intType
      Case dbOpenTable
         RecordsetType = "dbOpenTable"
      Case dbOpenDynaset
         RecordsetType = "dbOpenDynaset"
      Case dbOpenSnapshot
         RecordsetType = "dbOpenSnapshot"
      Case dbOpenForwardOnly
         RecordsetType = "dbOpenForwardOnly"
   End Select

End Function
</code></pre>
<p>
This example demonstrates the <b>Type</b> property by returning the name of the constant corresponding to the value of the <b>Type</b> property of all the <b>Field</b> objects in the Employees table. The FieldType function is required for this procedure to run.</p>
<pre><code>Sub TypeX2()

   Dim dbsNorthwind As Database
   Dim fldLoop As Field

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")

   Debug.Print "Fields in Employees TableDef:"
   Debug.Print "&nbsp; Type - Name"

   ' Enumerate Fields collection of Employees table.
   For Each fldLoop In _
      dbsNorthwind.TableDefs!Employees.Fields
      Debug.Print "&nbsp;&nbsp;&nbsp; " &amp; FieldType(fldLoop.<i>Type</i>) &amp; _
         " - " &amp; fldLoop.Name
   Next fldLoop

   dbsNorthwind.Close

End Sub

Function FieldType(intType As Integer) As String

   Select Case intType
      Case dbBoolean
         FieldType = "dbBoolean"
      Case dbByte
         FieldType = "dbByte"
      Case dbInteger
         FieldType = "dbInteger"
      Case dbLong
         FieldType = "dbLong"
      Case dbCurrency
         FieldType = "dbCurrency"
      Case dbSingle
         FieldType = "dbSingle"
      Case dbDouble
         FieldType = "dbDouble"
      Case dbDate
         FieldType = "dbDate"
      Case dbText
         FieldType = "dbText"
      Case dbLongBinary
         FieldType = "dbLongBinary"
      Case dbMemo
         FieldType = "dbMemo"
      Case dbGUID
         FieldType = "dbGUID"
   End Select

End Function
</code></pre>
<p>
This example demonstrates the <b>Type</b> property by returning the name of the constant corresponding to the value of the <b>Type</b> property of all the <b>QueryDef</b> objects in Northwind. The QueryDefType function is required for this procedure to run.</p>
<pre><code>Sub TypeX3()

   Dim dbsNorthwind As Database
   Dim qdfLoop As QueryDef

   Set dbsNorthwind = OpenDatabase("Northwind.mdb")

   Debug.Print "QueryDefs in Northwind Database:"
   Debug.Print "&nbsp; Type - Name"

   ' Enumerate QueryDefs collection of Northwind database.
   For Each qdfLoop In dbsNorthwind.QueryDefs
      Debug.Print "&nbsp;&nbsp;&nbsp; " &amp; _
         QueryDefType(qdfLoop.<i>Type</i>) &amp; " - " &amp; qdfLoop.Name
   Next qdfLoop

   dbsNorthwind.Close

End Sub

Function QueryDefType(intType As Integer) As String

   Select Case intType
      Case dbQSelect
         QueryDefType = "dbQSelect"
      Case dbQAction
         QueryDefType = "dbQAction"
      Case dbQCrosstab
         QueryDefType = "dbQCrosstab"
      Case dbQDelete
         QueryDefType = "dbQDelete"
      Case dbQUpdate
         QueryDefType = "dbQUpdate"
      Case dbQAppend
         QueryDefType = "dbQAppend"
      Case dbQMakeTable
         QueryDefType = "dbQMakeTable"
      Case dbQDDL
         QueryDefType = "dbQDDL"
      Case dbQSQLPassThrough
         QueryDefType = "dbQSQLPassThrough"
      Case dbQSetOperation
         QueryDefType = "dbQSetOperation"
      Case dbQSPTBulk
         QueryDefType = "dbQSPTBulk"
   End Select

End Function</code></pre>
</font></BODY>
</HTML>
