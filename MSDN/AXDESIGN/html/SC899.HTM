<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Providing Services Through a Site</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H3>Providing Services Through a Site</H3><P>Services are groups of related interfaces. Typically, a service is defined for actions that are performed by a site. The service itself is defined by the site, but the interfaces that make up the service may be implemented by other objects on the site.</P>
<P>The service architecture provides a flexible, general means of making features accessible to contained objects. The flexibility comes from several important aspects of the design:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Interfaces that are part of a service may be implemented on the site object or on a different object.</LI><LI CLASS="ULI1">The object that implements a service may implement other interfaces in addition to those that are part of the service.</LI><LI CLASS="ULI1">The same interface may be part of more than one service.</LI><LI CLASS="ULI1">Services may designate some interfaces as optional. </LI></UL></SPAN><P>The following figure shows a hypothetical service implementation.</P>
<P>    <img src="abdes029.gif"></P>
<P>The figure shows four interfaces. The <B>IServiceProvider</B> interface provides access to services. All sites that support services implement this interface. ActiveX designers and other contained objects call the <B>QueryService </B>method of <B>IServiceProvider </B>to get pointers to the interfaces they want to use. </P>
<P>The other three interfaces illustrate hypothetical service implementations. The table shows the various combinations of services that can be defined. Each service has a unique service identifier (SID), similar to an interface identifier (IID). The SID is a globally unique identifier (GUID) that identifies the service in calls to <B>QueryService</B>.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="112pt" VALIGN="TOP"><COL WIDTH="141pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><BR><B>Service</B></P></TD><TD VALIGN="TOP"><P><B>Service and Interface Identifiers</B></P></TD><TD VALIGN="TOP"><P><BR><B>Description</B></P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>Montana service</P></TD><TD VALIGN="TOP"><P>SID_SMontana</P></TD><TD VALIGN="TOP"><P>Provides access to the Montana interfaces.</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>IID_IMontana</P></TD><TD VALIGN="TOP"><P>Montana interface.</P></TD></TR><TR><TD VALIGN="TOP"><P>Washington service</P></TD><TD VALIGN="TOP"><P>SID_SWashington</P></TD><TD VALIGN="TOP"><P>Provides access to the Washington interfaces.</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>IID_IWashington</P></TD><TD VALIGN="TOP"><P>Original Washington interface.</P></TD></TR><TR><TD VALIGN="TOP"><P>Washington2 service</P></TD><TD VALIGN="TOP"><P>SID_SWashington2</P></TD><TD VALIGN="TOP"><P>Second version of the Washington service.</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>IID_IWashington</P></TD><TD VALIGN="TOP"><P>Original Washington interface. Same as IID_IWashington in SID_SWashington.</P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P>IID_IWashington2</P></TD><TD VALIGN="TOP"><P>Second version of the Washington interface, with different features.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>In the figure, the Montana service is implemented on the site object, and the two Washington services are implemented on a separate object. The following configurations are also possible:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">All three services can be on the site object.</LI><LI CLASS="ULI1">All three services can be on the same helper object. </LI><LI CLASS="ULI1">The Montana service can be on one helper object and the Washington services can be on a different helper object.</LI></UL></SPAN><P>Because the IWashington interface is the same in both SWashington and SWashington2, both of these services can be implemented on the same object. </P>
<P>This design allows ActiveX designers and other embedded objects straightforward access to useful features of their containers. The container, in turn, can configure these features efficiently. All configurations are transparent to the ActiveX designer, and different containers may organize the services differently.</P></FONT>
</BODY>
</HTML>
