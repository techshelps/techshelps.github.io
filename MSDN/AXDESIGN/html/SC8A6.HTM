<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering an ActiveX Designer</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>Registering an ActiveX Designer</H2><P>ActiveX designers provide the <B>DLLRegisterServer </B>and <B>DLLUnregisterServer</B> entry points for use with the registry. <B>DLLRegisterServer</B> stores information about the visual designer and run-time object in the registry. <B>DLLUnregisterServer</B> removes information from the registry. </P>
<P>Registering an ActiveX designer is much like registering an ActiveX control. With the following exceptions, designers register the same information as controls:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Designers register CATID_Designer in the <B>Implemented Categories</B> subkey of the <B>CLSID </B>key. The value of CATID_Designer is defined in the header file Designer.h.</LI><LI CLASS="ULI1">Designers register the CLSID of the run-time object under the <B>Instance CLSID </B>subkey of the <B>CLSID</B> key. Registering the CLSID of the run-time object is required only if the run-time object is different from the visual designer. </LI><LI CLASS="ULI1">Designers omit the <B>Control</B> subkey of the <B>CLSID </B>key.</LI></UL></SPAN><P>ActiveX designers register with <B>Component Categories</B>, using the <B>ICatRegister</B> interface. The following example registers CATID_Designer and the designer's CLSID:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">hr = CoCreateInstance (CLSID_StdComponentCategoriesMgr, NULL,
                          CLSCTX_INPROC_SERVER, IID_ICatRegister,
                          (void **)&amp;pCatRegister);
if (SUCCEEDED(hr)) {
                      pCatRegister-&gt;RegisterClassImplCategories(
                    CLSID_DifferentDesigner, 1, (GUID *)&amp;CATID_Designer
                    );
                     pCatRegister-&gt;Release();
};
</font></pre>
<P>The example calls <B>CoCreateInstance</B> to create an instance of the component categories manager and get pCatRegister, a pointer to the <B>ICatRegister</B> interface. It then calls the <B>RegisterClassImplCategories</B> method, passing the CLSID of the designer and CATID_Designer, to register the designer under the <B>Implemented Categories</B> subkey. Finally, the example releases its reference to the <B>ICatRegister</B> interface.</P>
<P>In addition, if the run-time object is different from the visual designer, its CLSID must be registered under the <B>Instance CLSID</B> subkey of the <B>CLSID</B> key. You use the <B>RegSetValue</B> API for this task, as the following example shows:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">l = RegSetValue (HKEY_CLASSES_ROOT, szInstanceInfo, REG_SZ, szInstCLSID,
                 sizeof(szInstCLSID));
</font></pre>
<P>In the example, HKEY_CLASSES_ROOT indicates where the information should be stored. The REG_SZ parameter denotes the type of information being supplied, and must always be REG_SZ. The szInstanceInfo and szInstanceCLSID parameters give the subkey and the value to be stored for it. In the example, these parameters have been defined to contain the <B>Instance CLSID</B> subkey and the CLSID of the run-time object, as follows:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">static char szInstanceInfo [] = 
    "CLSID\\{d342aea0-97d0-11cf-a0d2-00aa0062be57}\\Instance CLSID";
static char szInstCLSID [] = "{fdc139b0-9800-11cf-a0d2-00aa0062be57}";
</font></pre>
<P>The function returns l, a long integer indicating success or failure.</P>
<P>The example is not licensed. If it were, it would register a license under the <B>Licenses </B>key. </P>
<P>Including the information registered by ActiveX controls, designers must register the following:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The CLSID of the visual designer.</LI><LI CLASS="ULI1">The value of CATID_Designer<B> </B>under the <B>Implemented Categories</B> subkey.</LI><LI CLASS="ULI1">The CLSID of the runtime object (if different from the visual designer) under the <B>Instance CLSID</B> subkey.</LI><LI CLASS="ULI1">The license key (if a license is required) under the <B>Licenses</B> key. </LI><LI CLASS="ULI1">The <B>Apartment</B> threading model in the <B>Threading Model</B> subkey.</LI><LI CLASS="ULI1">The OLE miscellaneous status flags for the visual designer under the <B>MiscStatus </B>subkey.</LI></UL></SPAN><P>Under the <B>MiscStatus</B> key, the DVASPECT flag should be 1, to indicate DVASPECT_CONTENT. If the run-time object does not have a visual interface, you should include OLEMISC_INVISIBLEATRUNTIME with the miscellaneous status flags. </P></FONT>
</BODY>
</HTML>
