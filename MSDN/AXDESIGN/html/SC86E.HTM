<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Designers and the Component Object Model</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>ActiveX Designers and the Component Object Model</H2><P>COM, on which ActiveX and OLE technologies are based, is a standard that defines how applications expose objects. Using this standard, you can create classes that comply with the model. ActiveX compound documents (formerly OLE compound documents) and ActiveX controls are two such classes; ActiveX designers represent a third. </P>
<P>Because ActiveX designers are based on COM, they provide several significant benefits:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">They fit neatly into the existing architecture.</LI><LI CLASS="ULI1">They make it easy for programmers to create classes that comply with the COM standard.</LI><LI CLASS="ULI1">They simplify and streamline the development process by hiding complexity from the programmer. </LI></UL></SPAN><P>The following figureshows how ActiveX designers fit into COM:</P>
<P>    <img src="abdes001.gif"></P></FONT>
</BODY>
</HTML>
