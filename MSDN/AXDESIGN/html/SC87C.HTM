<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the Run-Time Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H3>Creating the Run-Time Object</H3><P>When the end user wants to compile or run the application, the ActiveX designer creates a run-time object. First, Visual Basic calls <B>IProvideClassInfo</B> or <B>IProvideDynamicClassInfo</B> to get the type information it needs to create the object. </P>
<P>Before compiling the application or shifting into run mode, Visual Basic asks the ActiveX designer to save the prototypical instance state for the run-time object. If the visual designer implements the <B>IActiveDesigner</B> interface, Visual Basic calls its <B>SaveRuntimeState</B> method to save the data. If not, Visual Basic uses the <B>Save </B>method of the visual designer's persistence interface, in the following order of preference:</P>
<UL><LI><B>IPersistStreamInit</B></LI></P>
<LI><B>IPersistStream</B></LI></P>
<LI><B>IPersistStorage</B></LI></UL></P>
<P></P>
<P>Persistence and the <B>IActiveDesigner</B> interface are described in greater detail in Chapter 7, "<A class="normal" href="SC849.HTM">Retaining Persistent Data and Saving the Run-Time Object</A>."</P>
<P>Finally, at execution time, Visual Basic takes the following steps, shown in the figure, to create the ActiveX designer's run-time object. It calls: </P>
<OL><LI><B>CoCreateInstance</B>, passing the CLSID saved with the persistent data. The class factory for the run-time object ensures that it is properly licensed.</LI></P>
<P><LI><B>Load</B> method of the persistence interface to load persistent data for the new object.</LI></P>
<P><LI><B>IConnectionPointContainer</B> or <B>IConnectionPoint </B>to connect run-time events with the event handlers defined in the ActiveX designer. Run-time objects must support events. </LI></OL></P>
<P></P>
<P>    <img src="abdes009.gif"></P>
<P>An end user can create additional instances of a class defined by an ActiveX designer by using the <B>New</B> operator in Visual Basic code. Like form classes, but unlike ActiveX controls and public class modules, the classes produced by ActiveX designers are private classes. Accoringly, users of the Professional or Enterprise editions of Visual Basic who create ActiveX components cannot declare public methods that use these classes as argument types or return types. </P></FONT>
</BODY>
</HTML>
