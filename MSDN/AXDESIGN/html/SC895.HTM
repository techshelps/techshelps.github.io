<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Removing a Type Description</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H4>Removing a Type Description</H4><P>When the end user deletes a method or property, you use the <B>DeleteFuncDesc </B>(or <B>DeleteFuncDescByMemId</B>) or <B>DeleteVarDesc </B>(or <B>DeleteVarDescByMemId</B>) method in the <B>ICreateTypeInfo2</B> interface to remove its type description These methods are described in the&nbsp;<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"
	width=0 height=0 hspace=0>
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_oa96_introduction">
</object><a href=JavaScript:alink_1.Click()>Automation Programmer's Reference</A>.</P>
<P>If you know the index for the property or method in the type information, use <B>DeleteFuncDesc </B>or<B> DeleteVarDesc</B>. These methods take one parameter, <I>index</I>, which supplies the index into the type information.</P>
<P>If you don't know the index but know the name of the property or method, you can use <B>DeleteFuncDescByMemId</B> or <B>DeleteVarDescByMemId</B> instead. These two methods require the member identifier (MEMBERID) of the property or method and its INVKIND, which is either INVOKE_PROPERTYGET or INVOKE_FUNC.</P>
<P>The MEMBERID is available through the object's <B>ITypeComp </B>interface, as in the following example. (Error handling is omitted for brevity.)</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">hr = m_pRuntimeTypeInfo-&gt;QueryInterface(IID_ITypeInfo, 
                                       (void **)&amp;ptiTemp);
hr = ptiTemp-&gt;GetTypeComp(&amp;pTypeComp);
</font></pre>
<P>After getting a pointer to the object's <B>ITypeComp</B> interface, you use the <B>Bind </B>method to map the subobject's name to its type information. In the following code fragment, the variable pwsz represents the name of the subobject.  </P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">hr = pTypeComp-&gt;Bind(pwsz, LHashValOfNameSys(SYS_WIN32,
                     g_lcidLocale, pwsz), INVOKE_PROPERTYGET,
                     &amp;ptiTemp, &amp;dk, &amp;bp);
</font></pre>
<P>Next, get the MEMBERID from the function descriptor and release the reference to <B>ITypeComp</B>:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">memid = bp.lpfuncdesc-&gt;memid;
pTypeComp-&gt;Release();
</font></pre>
<P>Finally, with the MEMBERID in memid, call <B>DeleteFuncDescByMemId</B> to delete the function.</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">hr = m_pRuntimeTypeInfo-&gt;DeleteFuncDescByMemId(memid,
                                               INVOKE_PROPERTYGET);
</font></pre></FONT>
</BODY>
</HTML>
