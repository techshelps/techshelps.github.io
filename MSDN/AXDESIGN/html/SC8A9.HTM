<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Licensing in the Visual Designer</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H3>Licensing in the Visual Designer</H3><P>At design-time, license verification proceeds as shown in the following figure:</P>
<P>        <img src="abdes023.gif"></P>
<P>When a programmer loads the ActiveX designer, the host calls <B>GetLicInfo</B> to verify that the appropriate license is present. If the license is not present, the method returns E_NOTLICENSED<I> </I>and the visual designer is not created. If a license is present or if no license is required, the method creates an instance and returns S_OK. </P>
<P>The following code sample shows how <B>GetLicInfo </B>might be implemented:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">STDMETHODIMP CClassFactory::GetLicInfo
(
    LICINFO *pLicInfo
)
{
    CHECK_POINTER(pLicInfo);

    pLicInfo-&gt;cbLicInfo = sizeof(LICINFO);

    // If true, RequestLicKey will work.
    pLicInfo-&gt;fRuntimeKeyAvail = g_fMachineHasLicense;

    // If true, the standard CreateInstance will work.
    pLicInfo-&gt;fLicVerified = g_fMachineHasLicense;

    return S_OK;
}</font></pre>
<P></P>
<P>After construction of the application is complete, the programmer selects <B>Build </B>or <B>Run</B>. </P>
<P>During this process, the host calls <B>RequestLicKey</B> to get a key to embed into the resulting application. The following sample shows one approach to implementing this method:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">STDMETHODIMP CClassFactory::RequestLicKey
(
    DWORD  dwReserved,
    BSTR  *pbstr
)
{
    // If the machine isn't licensed, don't give this.
    if (!g_fMachineHasLicense)
        return CLASS_E_NOTLICENSED;

    *pbstr = SysAllocString(g_wszLicenseKey);
    return (*pbstr) ? S_OK : E_OUTOFMEMORY;
}
</font></pre>
<P>As with <B>GetLicInfo</B>, <B>RequestLicKey</B> returns CLASS_E_NOTLICENSED if the license key is not valid.</P></FONT>
</BODY>
</HTML>
