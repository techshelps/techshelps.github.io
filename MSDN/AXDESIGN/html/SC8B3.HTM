<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IProvideDynamicClassInfo::GetDynamicClassInfo</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H3>IProvideDynamicClassInfo::GetDynamicClassInfo</H3><P>Returns the current dynamic type description for an object, including any changes that have been made dynamically. </P>
<P><B>HRESULT GetDynamicClassInfo(<BR>    ITypeInfo **</B><I> ppTI</I>, <B><BR>    DWORD * </B><I>pdwCookie</I><BR><B>)</B>;</P>
<P><B>Parameters</B></P>
<P><I>ppTI</I></P>
<P>[out] Indirect pointer to the current type information for the object. </P>
<P><I>pdwCookie</I></P>
<P>[out] Cookie to be used as a flag.</P>
<P></P>
<P><B>Return Values</B></P>
<P>The return value obtained from the HRESULT is one of the following:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="150pt" VALIGN="TOP"><COL WIDTH="198pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>Return Value</B></P></TD><TD VALIGN="TOP"><P><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP"><P></P></TD><TD VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>S_OK</P></TD><TD VALIGN="TOP"><P>Success.</P></TD></TR><TR><TD VALIGN="TOP"><P>E_FAIL</P></TD><TD VALIGN="TOP"><P>The method failed for an unknown reason.</P></TD></TR><TR><TD VALIGN="TOP"><P>E_OUTOFMEMORY</P></TD><TD VALIGN="TOP"><P>Out of memory.</P></TD></TR><TR><TD VALIGN="TOP"><P>E_UNEXPECTED</P></TD><TD VALIGN="TOP"><P>The method is implemented, but an unexpected error occurred.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P></P>
<P><B>Note</B></P>
<P>This method can also return any of the TYPE_E errors.</P>
<P></P>
<P><B>Comments</B></P>
<P>The <B>GetDynamicClassInfo</B> method returns an object's dynamic type information object. The dynamic type information changes as users change the object's properties, events, and methods and write code attached to the object. </P>
<P>Each object has only one dynamic type information object (that is, one <B>ITypeInfo</B> that points to dynamic type information) throughout its lifetime. Although the type information itself changes, the type information object retains its identity.</P>
<P>The <B>ITypeInfo</B> returned by this method must describe a component object class (coclass)(TKIND_COCLASS).</P>
<P>The <I>pdwCookie </I>value is saved by the host to determine whether the newly loaded object has the same type information as when it was last saved. The <B>Save</B> method of the visual designer's persistence interface should set the value of the cookie each time it saves the persistent data. The host checks the cookie when it gets the dynamic type information to see if the type information has changed.</P>
<P><B>Example</B></P>
<P>The following example returns a dynamic type information object:</P>

<PRE><FONT FACE="COURIER, COURIER NEW" SIZE="2">STDMETHODIMP CMyDesigner::GetDynamicClassInfo
(
    ITypeInfo **ppTypeInfoOut,
    DWORD      *pdwCookie
)
{
    HRESULT hr;

    if (pdwCookie)
        *pdwCookie = m_dwTICookie;

    if (!ppTypeInfoOut)
        return S_OK;

return GetMyDynamicTypeInfo(ppTypeInfoOut);
}
</font></pre>
<P>The value of pdwCookie is set in the persistence methods for the visual designer. This value should be part of the data you save with the <B>Save</B> method of your persistence interfaces. </P>
<P>The example calls the local function GetMyDynamicTypeInfo, which creates the type information if necessary. You can either load a static type information object and copy it, or call <B>CreateTypeLib2</B> to create a new type information object in a new format type library. For a detailed explanation, see "Providing Type Information" in Chapter 5, "<A class="normal" href="SC837.HTM">Type Information and Extended Objects</A>."</P>
<P></P></FONT>
</BODY>
</HTML>
