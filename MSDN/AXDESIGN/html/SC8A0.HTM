<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Overview of Persistence Requirements</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>Overview of Persistence Requirements</H2><P>Through the persistence interfaces, the ActiveX Designer can save information for use at two different times:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">To reestablish the visual designer (the design-time object) the next time it is loaded. </LI><LI CLASS="ULI1">To create and load the run-time object. </LI></UL></SPAN><P></P>
<P>The persistent data might include type information, properties, and global variables such as time-out values and flags that the user has already set. If your visual designer supports dynamic type information, its persistent data should include the cookie value (<I>pdwCookie</I>) returned from <B>GetDynamicClassInfo</B>. The <B>InitNew </B>method of the persistence interfaces should reset the cookie to zero each time a new visual designer is created.</P>
<P>If the visual designer implements <B>IActiveDesigner</B>, the host uses the <B>SaveRuntimeState </B>method to save persistent data for the run-time object. Without <B>IActiveDesigner</B>, however, the run-time object must be able to load itself from the visual designer's persistent data. </P>
<P>Regardless of how data are saved, the run-time object must implement the same persistence interfaces as the visual designer so that the host can load the data at run time.</P></FONT>
</BODY>
</HTML>
