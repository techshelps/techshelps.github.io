<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Handling Events</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>Handling Events</H2><P>ActiveX Designers handle events of several types. The most common involves a user clicking the mouse on an object presented at design time, typically to change its properties or attach code. At run time, the designer must also be prepared to handle events.</P>
<P>ActiveX Designers use the standard ActiveX event handling mechanism, supporting the <B>IConnectionPoint </B>and <B>IConnectionPointContainer </B>interfaces, along with interfaces for each type of event to be handled. The figure shows the basic approach to event handling.</P>
<P>    <img src="abdes022.gif"></P>
<P><B>IConnectionPoint </B>allows the designer to expose an outgoing pointer to an object, typically an event sink. <B>IConnectionPointContainer</B> enumerates the connection points supported by an object, so that a caller can find the right connection point. When an event occurs, the ActiveX Designer uses a connection between the event <I>source</I>, which calls the interface that handles events of that type, and the event <I>sink</I>, which implements the interface. The sink implements the member functions for a set of events. </P>
<P>At design time, the host enumerates the set of events an object can trigger by inspecting the type information for the object's event set. To allow users of ActiveX Designers to write event handlers, the host can check the parameters of the events, and from them create a stub event handler for the user to fill in. </P>
<P>For property changes, ActiveX Designers implement a standard sink interface called <B>IPropertyNotifySink</B>. </P></FONT>
</BODY>
</HTML>
