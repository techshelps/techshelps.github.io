<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Features of an ActiveX Designer</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">


<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<H2>Features of an ActiveX Designer</H2><P>An ActiveX designer can be as simple as an object that makes itself visible at design time, or as complex as a form that hosts controls. </P>
<P>ActiveX designers and ActiveX controls share the following characteristics:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">They can have different behavior at design-time and run-time. An ActiveX designer need not have a visible user interface at run time.</LI><LI CLASS="ULI1">They can be attached to code that is written by an end user. </LI><LI CLASS="ULI1">They can be compiled into an executable application.</LI></UL></SPAN><P>By adding code to register itself appropriately, an ActiveX control can become an ActiveX designer. This is possible because ActiveX designers rely on previously defined technology wherever possible. </P></FONT>
</BODY>
</HTML>
