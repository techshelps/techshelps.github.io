<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Building Applications Using WIN32.MAK</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_building_applications_using_win32.mak_pt"></a>Building Applications Using WIN32.MAK</h1>
<p>
The makefiles that accompany code samples in the Platform SDK give good examples of build processes that rely on NMake.exe. Each of them includes WIN32.MAK, which defines many common macros you can use to build 32-bit applications for Windows NT and Windows 95. </p>
<p>
This section describes how 32-bit applications and dynamic-link libraries (DLLs) for Windows can be built using the Platform SDK and your development tools. It describes makefile components you may need and includes information on using the C run-time libraries.</p>
<h4>WIN32.MAK</h4>
<p>
The WIN32.MAK file defines macros that can be used to simplify your own makefiles for use with Microsoft development tools. These macros help assure that you have chosen the correct options for the following tasks: 
<ul>
<li>
<a href="buildw_5mno.htm">Setting Targets</a></li>
<li>
<a href="buildw_556c.htm">Compiling Source Files</a></li>
<li>
<a href="buildw_5304.htm">Linking</a> </li>
<li>
<a href="buildw_8mpg.htm">Building DLLs</a></li>
<li>
<a href="buildw_7htg.htm">Using the C Run-Time Library</a></li>
</ul>
<p>
WIN32.MAK should be included in your makefile as follows: </p>
<pre><code>!include &lt;win32.mak&gt;
</code></pre>
<p>
You can learn a good deal by examining the contents of WIN32.MAK, located in the MSTOOLS\INCLUDE subdirectory. </p>
<p>
The following table summarizes the steps used to build a Win32-based application or DLL:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Step</th>
<th align=left width=50%>Tool</th>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Compile C and C++ source-language files into object files.</td>
<td width=50%>C/C++ compiler included with your development tools.</td>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Create and edit resources. Doing so may also create include (.H) files which define useful constants.</td>
<td width=50%>Dialog Editor, Image Editor, and Font Editor included with the SDK or equivalent development tools.</td>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Compile resource scripts into linkable resource files.</td>
<td width=50%>Resource Compiler included with the SDK or your development tools.</td>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Create import libraries for each DLL.</td>
<td width=50%>Library manager included with your development tools.</td>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Link the object modules, resources, standard libraries, and import libraries (for an executable using DLLs) to produce an executable module.</td>
<td width=50%>Linker included with your development tools.</td>
</tr>
<tr valign=top>
<td class=indent1 width=50%>Tune your application.</td>
<td width=50%>Performance tools and Working Set Tuner included with the SDK.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
