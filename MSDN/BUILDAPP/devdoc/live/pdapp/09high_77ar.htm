<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Managing Graphics</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_tools_managing_graphics"></a>Managing Graphics</h1>
<p>
Whenever possible be sure to use <b>PolyTextOut</b>, <b>PolyPolyline</b>, <b>PolylineTo</b>, <b>PolyDraw</b>, <b>PolyBezier</b>, and <b>PolyBezierTo</b> functions. These functions exploit the fact that many drawing calls use identical attributes, and so multiple items can be drawn in a single call once the brushes, pens, colors, and fonts have been selected. For example, the console window uses <b>PolyTextOut</b>. This change reduced scrolling time in a console window by 30% when it was implemented during the development of Windows NT. </p>
<p>
If you are writing an application that draws on the display, then the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createdibsection">
</object><a href=JavaScript:alink_1.Click()><b>CreateDIBSection</b></a> function can improve performance. This function allows you to share a memory section directly with the system, and thus avoid having it copied from your process to the system each time there is a change. Previously, a common practice was to call the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getdibits">
</object><a href=JavaScript:alink_2.Click()><b>GetDIBits</b></a> function, make the required changes, then call the <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_setdibits">
</object><a href=JavaScript:alink_3.Click()><b>SetDIBits</b></a> function. These steps were often repeated on different scan lines of the bitmap before the image was ready for updating. Using <b>CreateDIBSection</b> is much simpler. </p>
<p>
One word of caution if you decide to use <b>CreateDIBSection</b>. You need to be sure that any calls that might affect your bitmap have completed before you start to draw in it. This is because the batching of GDI calls may cause their delayed execution. For example, suppose you make a <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_patblt">
</object><a href=JavaScript:alink_4.Click()><b>PatBlt</b></a> call to clear your bitmap, then you start to change the bits in your DIB section. If the <b>PatBlt</b> call was batched, it might not actually execute until after you start to make the bitmap changes. So, before you make changes to your DIB section, be sure to call <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_gdiflush">
</object><a href=JavaScript:alink_5.Click()><b>GdiFlush</b></a> if you have made changes to the bitmap with earlier GDI calls. </p>
<p>&nbsp;</p></body>
</HTML>
