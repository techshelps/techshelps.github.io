<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynamic Control of HTML Attributes with Microsoft Internet Explorer 4.0</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_dynacont"></a>Dynamic Control of HTML Attributes with Microsoft Internet Explorer 4.0</h1>
<p>
Michael Wallent</p>
<p>
July 15, 1997<br>
Revised September 30, 1997</p>
<p>
<i>Michael Wallent is Microsoft's lead program manager for Dynamic HTML.</i></p>
<h2>Make Your Styles Dynamic</h2>
<p>
With the advent of cascading style sheets (CSS) in Microsoft® Internet Explorer 3.0, Web authors received unprecedented control over the look of all the Hypertext Markup Language (HTML) elements on a page. Microsoft Internet Explorer 4.0 brings this technology a step further, providing the ability to dynamically change any attribute, at any time, on any element. And yes, all other HTML attributes (such as <i>src</i> on an <i>img</i>) can be changed dynamically as well.</p>
<h3>Dynamic Styles Are Really Easy</h3>
<p>
You might be asking: "OK, what new HTML tags do I need to use this Dynamic Styles stuff?"</p>
<p>
Answer: "None."</p>
<p>
In this example, as the mouse moves over the H1 heading, the color changes to red:</p>
<pre><code>&lt;H1 onmouseover="this.style.color = 'red';"&gt;Make me red&lt;/H1&gt;
</code></pre>
<p>
In this example, as the mouse moves over the image, its source changes from before.gif to after.gif:</p>
<pre><code>&lt;IMG src="before.gif" onmouseover="this.src = 'after.gif';"&gt;
</code></pre>
<p>
Regular HTML attributes are accessed as properties on each element. CSS attributes can be set from the style subobject.</p>
<h3>The Document Is a Dynamic Thing</h3>
<p>
When the color of an element is changed dynamically, it still fits into the same space as it did before the color changed. This is a relatively basic operation. However, there are other styles, such as <i>fontSize</i> or <i>fontFamily</i>, which, when changed, actually change the size of the element. Microsoft Internet Explorer 4.0 handles each such change automatically for you. It will automatically reflow a document to ensure that all the elements fit perfectly.</p>
<p>
For example:</p>
<pre><code>&lt;html&gt;
&lt;body&gt;
This is some text.
&lt;span style="color: blue" onclick="

this.style.fontSize = '30'"&gt;This is more text.&lt;/span&gt;
This is even more text.
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>
Initially, the document looks like this:</p>
<p>
<img src="dynaco01.gif" border=0></p>
<p>
After clicking on "This is more text," the document then looks like this:</p>
<p>
<img src="dynaco02.gif" border=0></p>
<h2>Some Powerful Attributes</h2>
<p>
Because Microsoft Internet Explorer 4.0 automatically reflows the document when attribute values change, some very powerful functionality can be built with very small amounts of code. For example, using the <b>display</b> attribute, you can make elements on the page disappear, and treat them as if they were never on the page.</p>
<p>
For example:</p>
<pre><code>&lt;html&gt;
&lt;body&gt;
&lt;div style="cursor: hand" onclick="toggle(document.all.HideShow);"&gt;
Click Here&lt;/div&gt;
&lt;span style="color: blue" id=HideShow&gt;This will go away&lt;/span&gt;&lt;br&gt;
This is some text
&lt;script&gt;
function toggle(e) {
  if (e.style.display == "none") {
 &nbsp;&nbsp;&nbsp; e.style.display = "";
  } else {
 &nbsp;&nbsp;&nbsp; e.style.display = "none";
  }
}
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>
This HTML code displays three lines. When the user clicks on the line "Click Here," the &lt;span&gt; tag with the text "This will go away" will be set to <b>display: none</b>. When clicked again, it will be reset.</p>
<p>
Notice that simply by setting <b>display: none</b> on an element, it disappears, and the browser automatically reclaims the space it occupied. This mechanism can be used to have pages that display new types of information on demand, without having to revisit the server. The two supported values for the <b>display</b> property are <i>none</i> and <i>""</i> (or null).</p>
<p>
This sample also makes use of the <b>cursor</b> CSS attribute. The <b>cursor</b> attribute allows a Web author to specify what cursor will be shown when it is over an element. In this case, we chose the hand cursor to indicate that the text titled "Click Here" would perform an action when clicked. The use of the <b>cursor</b> attribute obviates the need to wrap elements in an anchor in order to have the cursor change to a hand, an effect you would use to indicate that something will happen if the user clicks.</p>
<p>
The set of valid values for the <b>cursor</b> property are: <i>crosshair, default, hand, move, e-resize, ne-resize, nw-resize, n-resize, se-resize, sw-resize, s-resize, w-resize, text, wait, </i>and<i> help.</i></p>
<p>
While the <b>display</b> property makes an element invisible and allows the browser to reclaim the space that it occupied, the <b>visibility</b> property can be used simply to make an element disappear but still reserve its space in the document.</p>
<p>
The following example is identical to the above example, except it uses the <b>visibility</b> property instead of the <b>display</b> property.</p>
<pre><code>&lt;html&gt;
&lt;body&gt;
&lt;div style="cursor: hand" onclick="toggle(document.all.HideShow);"&gt;
Click Here&lt;/div&gt;
&lt;span style="color: blue" id=HideShow&gt;This will go away&lt;/span&gt;&lt;br&gt;
This is some text
&lt;script&gt;
function toggle(e) {
  if (e.style.visibility == "hidden") {
 &nbsp;&nbsp;&nbsp; e.style.visibility = "visible";
  } else {
 &nbsp;&nbsp;&nbsp; e.style.visibility = "hidden";
  }
}
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>
Watch in this example how the line will become invisible, but its space will not be reclaimed.</p>
<h2>Special Considerations</h2>
<p>
You might have noticed that many CSS properties have a dash in their name (such as <b>background-color</b>). The dash, as you may know, isn't a valid character for identifiers in most scripting languages. To get around this little problem, continue to use the dashed name when specifying the CSS attribute in HTML or in a style sheet, but when accessing it in a script, remove the dash, and capitalize the next letter. For example:</p>
<p>
<b>background-color</b> becomes <b>backgroundColor</b></p>
<p>
<b>border-left</b> becomes <b>borderLeft</b></p>
<p>
<b>margin-bottom</b> becomes <b>marginBottom</b></p>
<p>
Also notice that while any CSS property can be set at any time, using the current settings on the STYLE object will only indicate its inline styles, and not any inherited styles or styles obtained by setting the class of an element.</p>
<p>
For example:</p>
<pre><code>&lt;html&gt;
&lt;head&gt;
&lt;style&gt;
.class1 {font-family: arial}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=SetByClass class=Class1&gt;Set By Class&lt;/div&gt;
&lt;div style="font-family: arial"&gt;
 &nbsp;&nbsp;&nbsp;&nbsp; &lt;div id=Inherited&gt;Inherited&lt;/div&gt;
&lt;/div&gt;
&lt;div id=DirectlySet style="font-family: arial"&gt;Directly Set&lt;/div&gt;
&lt;div id=SetWithScript&gt;Set with Script&lt;/div&gt;
&lt;script&gt;
 &nbsp;&nbsp;&nbsp;&nbsp; alert(SetByClass.style.fontFamily);
 &nbsp;&nbsp;&nbsp;&nbsp; alert(Inherited.style.fontFamily);
 &nbsp;&nbsp;&nbsp;&nbsp; alert(DirectlySet.style.fontFamily);
 &nbsp;&nbsp;&nbsp;&nbsp; SetWithScript.style.fontFamily = "arial";
 &nbsp;&nbsp;&nbsp;&nbsp; alert(SetWithScript.style.fontFamily);
&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre>
<p>
When this document loads, four alert dialogs will pop up successively. The first two will be blank, while the next two will contain the text "arial." While all of the text on the document is Arial, referencing <i>style.fontFamily</i> will show "arial" only on the &lt;div&gt; tag that had the <b>font-family</b> property set with an inline style or previously set with script.</p>
<h2>Summary</h2>
<p>
With Microsoft Internet Explorer 4.0, page authors have total control over all attributes of all page elements at any time. Changes made to attributes that cause the page to change shape are handled automatically, with no additional script intervention by the author.</p>
</BODY>
</HTML>
