<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Six Steps to Signing Your Code</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_sixsteps"></a>Six Steps to Signing Your Code</h1>
<p>
Microsoft Corporation</p>
<p>
Updated October 21, 1996</p>
<p>
Through Microsoft® Internet Explorer version 3.0, Microsoft Authenticode™ technology allows end users, before downloading software from the Internet, identify who published the software and verify that no one has tampered with it . Authenticode provides accountability for code available over the Internet similar to that of a shrink-wrapped software box. Once they have applied for and received their digital certificate, the Microsoft ActiveX™ software development kit (SDK) provides software publishers with the tools they need to sign their code using industry standard digital signature technology. </p>
<p>
For software publishers, code signing requires only six steps: 
<ol>
<li>
<b>Download the latest version of Internet Explorer 3.0 </b><p class=tl>
Go to <a href="http://www.microsoft.com/ie/download/">http://www.microsoft.com/ie/download/</a> and get the latest version of Internet Explorer. You will need Internet Explorer 3.0 build 1154 or later to apply for your credentials and view your signed code.</P></li>
<li>
<b>Apply for credentials from a Certificate Authority</b><p class=tl>
Go to <a href="http://www.microsoft.com/workshop/prog/security/authcode/certs-f.htm">http://www.microsoft.com/workshop/prog/security/authcode/certs-f.htm</a> for instructions on obtaining a Software Publisher's certificate from a Certificate Authority (CA). From there visit the CA's Web site for an online certificate application and fill in the requisite information. </P><p class=tl>
You will have the option of applying for an Individual or a Commercial Software Publisher certificate. If you are a commercial organization, please apply for the Commercial Software Publisher certificate; otherwise, apply for the Individual Software Publisher certificate. </P><p class=tl>
Once you have completed the application, it will take approximately one week for the CA to verify your information. At the end of this process, you will have <i>credentials</i> issued by the CA and a <i>private key</i> that you must store securely. You will need both to sign your code. </P></li>
<li>
<b>Get the latest version of the ActiveX SDK</b><p class=tl>
Go to <a href="http://www.microsoft.com/intdev/sdk/">http://www.microsoft.com/intdev/sdk/</a> and download the latest version of the ActiveX SDK. The tools to sign your code are in the SDK. Consult the code signing documentation provided in the SDK for additional information on using these tools. </P></li>
<li>
<b>Prepare your files to be signed</b><p class=tl>
If you are building any portable executable (PE) files (.EXE, .OCX, .DLL, or other), you need not do anything special. For cab files, you need to add the following entry to your .DDF file before creating the cab file.</P><pre><code>.Set ReservePerCabinetSize=6144 
</code></pre>
</li>
<li>
<b>Sign your files</b><p class=tl>
You can now sign your .EXE, or .CAB, .OCX, or .DLL file. (Currently, only 32-bit files can be signed.) Here is an example of how to sign: </P><pre><code>signcode -prog myfilename -name displayname -info &lt;a href=""&gt;http://www.mycompany.com&lt;/a&gt; -spc mycredentials.spc -pvk myprivatekey.pvk
</code></pre>
<p class=tl>
<i>myfilename</i> is the name of the file that needs to be signed </P><p class=tl>
<i>displayname</i> is the description of the file that will show up in the certificate </P><p class=tl>
&lt;a href=""&gt;http://example.microsoft.com&lt;/a&gt; should provide the user with more information about the file being downloaded </P><p class=tl>
<i>mycredentials</i> is the credentials file that was obtained from the CA </P><p class=tl>
<i>myprivatekey</i> is the private key that was generated during the application process with the CA </P><p class=tl>
(Note that if you run <b>signcode</b> without any parameters, it will invoke a wizard that will step you through the signing process.)</P></li>
<li>
<b>Test your signature</b><p class=tl>
To test a signed .EXE, .DLL, or .OCX file, run <b>chktrust</b> <i>filename</i></P><p class=tl>
To test a signed cab file, run <b>chktrust -c</b><i> cabfilename.cab</i></P><p class=tl>
If your signing process worked, this will bring up a certificate. </P><p class=tl>
Voila! You have just digitally signed your file. When this file is downloaded from a Web site by Internet Explorer, it will display the same certificate to the user. If the file is tampered with in any way after it has been signed, the user will be notified of the same and given the option of not installing it on his/her machine. </P></li>
</ol>
<p>
Software developers who have more questions should contact Microsoft Product Support Services or check the Web site <a href="http://www.microsoft.com/workshop/prog/security/authcode/certs-f.htm">http://www.microsoft.com/workshop/prog/security/authcode/certs-f.htm.</a> </p>
</BODY>
</HTML>
