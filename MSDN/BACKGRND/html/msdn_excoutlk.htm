<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Microsoft Exchange and Microsoft Outlook Data Using Visual Basic</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_excoutlk"></a>Accessing Microsoft Exchange and Microsoft Outlook Data Using Microsoft Visual Basic</h1>
<p>
Microsoft Corporation</p>
<p>
March 1997</p>
<h2>Introduction</h2>
<p>
To use Data Access Objects (DAO) methods and objects with Microsoft® Visual Basic® for Applications in Microsoft Access in order to link or import data from Microsoft Exchange or the Microsoft Outlook™ desktop information manager, you must have the Jet Exchange installable ISAM (Msexch35.dll) installed. The Jet Exchange installable ISAM is a driver that allows you to access data that is stored remotely on a Microsoft Exchange Server or that is stored locally in offline folder (.ost), personal folder (.pst), or personal address book (.pab) files.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;If you have set up Outlook to use an offline folder file, the offline folder file is a file stored on your hard disk that "mirrors" the folder structure and data stored on your Microsoft Exchange Server. Data from your Exchange Server is copied into the offline folder file whenever you synchronize folders (manually or at a scheduled time). When you start Outlook it gives you the option to connect to your server or work offline. If you choose to connect, you are viewing data directly from the server; if you choose to work offline, you are viewing data from the offline folder.</p>
<p class=indent>
For this reason, how you are logged on to Outlook determines whether the Jet Exchange installable ISAM (indexed sequential access method) reads data from the offline folder file or from the Exchange Server. For example, if you initially define a link to your Inbox folder while you are working offline in Outlook, the Jet Exchange installable ISAM reads the data from your offline folder file. However, if you open the same database later while Outlook is connected to your Exchange Server, the data will be read from the Inbox folder on the server.</p>
<p>
Using the Jet Exchange installable ISAM to access Exchange and Outlook data is primarily useful for reading information from message folders, public folders, address books, and other Outlook items. You can't modify any existing items. And, while it is possible to write new items to Exchange and Outlook message stores, not all fields are available or updatable, which limits your ability to create some items. For more information on these issues, see the "Constraints" section later in this article. If you need more flexibility when working with Outlook objects from Access, you should use Automation interfaces to work with Outlook instead. For more information, see the Outlook section of the Microsoft Office Developer Forum Web site (<a href="http://www.microsoft.com/outlookdev/">http://www.microsoft.com/outlookdev/</a>).</p>
<h2>Installing the Microsoft Jet Exchange Installable ISAM Driver</h2>
<p>
Before you can use DAO to gain access to Exchange Client or Outlook data, you must install the Jet Exchange installable ISAM. While you can install the Microsoft Jet Exchange installable ISAM using the Dataacc.exe file that is included in the Office 97 Value Pack, that version of the driver does not register itself, and has certain limitations. To install the most current version of the driver, download and run Wzmapi80.exe from the article entitled "Spotlight on Interoperability: Importing and Linking Microsoft Exchange and Microsoft Outlook Data to Microsoft Access" on the Microsoft Office Developer Forum Web site at (<a href="http://www.microsoft.com/AccessDev/Articles/ExchWiz.htm">http://www.microsoft.com/AccessDev/Articles/ExchWiz.htm</a>). This will install and register the most current version of Msexch35.dll so that you can use it from DAO, and also installs the Microsoft Exchange and Outlook Wizard so that you can import and link Exchange and Outlook data using the Access user interface.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You must have a copy of Microsoft Access 97 installed before you can install the Microsoft Exchange and Outlook Wizard. The Setup program does not provide a way to install only the Microsoft Jet Exchange driver; you must install the wizard components as well.</p>
<h2>Using DAO to Open, Link, and Import Microsoft Exchange and Outlook Data</h2>
<p>
The procedures for importing and linking Exchange and Outlook data with DAO are similar to the procedures used for importing and linking the other external data sources, such as Microsoft FoxPro® and Microsoft Excel data. Special considerations and examples are provided in the following sections.</p>
<h3>Connection Information</h3>
<p>
When specifying the connection string for Exchange and Outlook data, use the parameters, separated by semicolons, as specified in Table 1.</p>
<p class=label>
<b>Table 1. Connection Parameters</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=50%><b>To specify this element</b></td>
<td class=label width=50%><b>Use this parameter</b></td>
</tr>
<tr valign=top>
<td width=50%>Source database type</td>
<td width=50%>Exchange 4.0 (required)<br>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>This setting also works with Microsoft Exchange version 4.x and 5.0 data.</td>
</tr>
<tr valign=top>
<td width=50%>Table name</td>
<td width=50%>MAPILEVEL=<i>storage</i>|<i>folders</i><br>
where <i>storage</i> is the exact name of a mailbox on a server, a personal folder, or public folder, and <i>folders</i> is the name of one or more nested folders within <i>storage</i>. When listing nested folders, each folder name is separated by the backslash ( \ ) character. (required)</td>
</tr>
<tr valign=top>
<td width=50%>Source table type</td>
<td width=50%>TABLETYPE=0 (for folders)<br>
TABLETYPE=1 (for address books; required)</td>
</tr>
<tr valign=top>
<td width=50%>Database name</td>
<td width=50%>DATABASE=<i>path</i> <br>
where <i>path</i> is the path to a Microsoft Access database (*.mdb) in which to store system tables used by the driver (usually the current database; required)</td>
</tr>
<tr valign=top>
<td width=50%>Profile name</td>
<td width=50%>PROFILE=<i>profile</i> <br>
where profile is the name of the profile to use. (optional; if not specified, the default profile is used)</td>
</tr>
<tr valign=top>
<td width=50%>Password</td>
<td width=50%>PWD=<i>password</i> <br>
where <i>password</i> is the logon password. (optional; not required if your network logon password is passed to your Microsoft Exchange Server)</td>
</tr>
</table><br>
<h3>Connecting to a Microsoft Exchange Server Folder</h3>
<p>
To gain access to messages in an Exchange Client or Outlook folder, you must specify the path to the folder just above the folder you want use. You do this with the connection string keyword, MAPILEVEL=. For example, to gain access to a folder named "Barbara" in the "Important" subfolder in the "People" folder in the mailbox "Mailbox - Dave Jones", first specify the path to the "Important" folder, using the following connection string:</p>
<pre><code>"Exchange 4.0;MAPILEVEL=Mailbox - Dave Jones|People\Important;"
</code></pre>
<p>
Then use the <b>SourceTableName</b> property in your DAO code to specify the folder named "Barbara":</p>
<pre><code>tdf.SourceTableName = "Barbara"
</code></pre>
<p>
You can specify any valid mailbox name to the left of the pipe symbol ( | ) in the connection string, but the mailbox name must be specified exactly as it appears in the left pane of the Exchange Client or Outlook application window. Any spaces and capitalization in the name must be preserved.</p>
<h3>Connecting to a Personal Folder</h3>
<p>
In addition to specifying an Exchange Server mailbox name to the left of the pipe symbol ( | ) in the connection string, you can specify the name of a local personal folder file (if you are using one) exactly as it appears in the left pane of the Exchange Client or Outlook application window. Note that this name is not necessarily the same name as the .pst file itself and does not include the file extension. To determine how a personal folder name is mapped to the .pst file name where its information is stored, click <b>Services</b> on the <b>Tools</b> menu in the Microsoft Client or Outlook to display the <b>Services</b> dialog box. On the <b>Services</b> tab, click the name of a personal folder, and then click <b>Properties</b>. In the <b>Personal Folders</b> dialog box, the information in the <b>Name</b> dialog box is the name to specify in your connection string. The information in the <b>Path</b> dialog box specifies the path to the .pst file where mail data is stored.</p>
<p>
For example, to gain access to a folder named "ToDo" in the Inbox folder in the personal folder named "Local Folders", use the following connection string:</p>
<pre><code>"Exchange 4.0;MAPILEVEL=Local Folders|Inbox;"
</code></pre>
<p>
And then use the <b>SourceTableName</b> property in your DAO code to specify the folder named "ToDo":</p>
<pre><code>tdf.SourceTableName = "ToDo"
</code></pre>
<h4>Supplying a profile name and password</h4>
<p>
If you have defined multiple profiles for your Exchange or Outlook installation, or have defined a password that is required to use your profile, you can supply the profile name and password with the keywords PROFILE= and PWD= in the connection string. For example:</p>
<pre><code>"Exchange 4.0;MAPILEVEL=Mailbox - Dave Jones|People\Important;PROFILE=DaveJ;PWD=Cisco;"
</code></pre>
<p>
To determine the names of profiles on a computer, open the <b>Control Panel</b> and double-click <b>Mail And Fax</b>, and then click <b>Show Profiles</b>. If you don't specify a profile name in your connection string, the default profile (displayed in the <b>When starting Microsoft Windows Messaging, use this</b> dialog box) is used. </p>
<p>
If you don't specify a password in your code, and your network doesn't use your network logon password for this purpose, you will be prompted to enter your password when connecting to your Exchange data.</p>
<h4>Specifying the DATABASE=<i>parameter</i></h4>
<p>
When specifying the connection string to open a folder in an Exchange Client or Outlook mailbox, you must supply a hard-coded path and name of an existing Microsoft Access database using the DATABASE=<i>parameter</i>:</p>
<pre><code>"DATABASE="C:\My Documents\Outlook Data.mdb;"
</code></pre>
<p>
Or use the <b>Name</b> property to refer to the current database in code:</p>
<pre><code>"DATABASE=" &amp; dbs.Name &amp; ";"
</code></pre>
<p>
The Microsoft Messaging driver creates system tables in this database to store information about the structure of the Exchange Client or Outlook folders, including any new fields you have appended to these folders. Although it is possible to specify a database other than the current database, it is preferable to specify the current database for this purpose. If you specify a separate database and that database is deleted, or if the system tables named ExchangeTable<i>nnn</i> in any database you specify are deleted, all the information about the structure of the folders is lost and must be recreated.</p>
<h3>Opening Microsoft Exchange or Outlook Folders</h3>
<p>
You can open an Exchange or Outlook folder directly by using the <b>OpenDatabase</b> method and specifying the appropriate connection string. You must also specify an existing Access database that will contain the system tables required to maintain the connection when doing so. The <b>OpenDatabase</b> method is useful if you want to simply read information and don't require a persistent connection saved in a database. If you need to create a persistent connection to a folder, you should link it as described in the "Linking Microsoft Exchange or Outlook Folders" section later in this article. The following code example opens a personal folder storage, opens each top-level folder and prints information about the contents of the folder in the <b>Debug Window</b> (Microsoft Access) or <b>Immediate Pane</b> (Visual Basic and Visual Basic for Applications in Microsoft Word, Excel, and Microsoft PowerPoint®).</p>
<pre><code>Sub OpenExchange()
 &nbsp;&nbsp; Dim wks As Workspace
 &nbsp;&nbsp; Dim dbs As Database
 &nbsp;&nbsp; Dim rst As Recordset
 &nbsp;&nbsp; Dim strConnect As String
 &nbsp;&nbsp; Dim i As Integer
 &nbsp;&nbsp; Set wks = CreateWorkspace("wks", "admin", "", dbUseJet)
 &nbsp;&nbsp; strConnect = "Exchange 4.0;MAPILEVEL=Personal Folders|;"
 &nbsp;&nbsp; Set dbs = wks.OpenDatabase("c:\My Documents\Exchange.mdb", 0, 0, strConnect)
 &nbsp;&nbsp; On Error GoTo Open_Err
 &nbsp;&nbsp; 'Open Each top-level folder and print the first three records.
 &nbsp;&nbsp; For Each tbl In dbs.TableDefs
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set rst = dbs.OpenRecordset(tbl.Name, dbOpenDynaset, 0, dbOptimistic)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print "Records in Folder: " &amp; tbl.Name
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print "----------------------------------"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; While Not rst.EOF And (i &lt; 4)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print i, rst!Subject
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i = i + 1
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rst.MoveNext
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Wend
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rst.Close
Open_Err:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; If (Err) Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Debug.Print "*****" &amp; tbl.Name, Err, Err.Description
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Err.Clear
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End If
 &nbsp;&nbsp; Next tbl
 &nbsp;&nbsp; Debug.Print "Done"
 &nbsp;&nbsp; dbs.Close
 &nbsp;&nbsp; wks.Close
End Sub
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;This code example explicitly creates a new workspace using the <b>OpenWorkspace</b> method. This isn't required if you are using this code within Access, which automatically creates a default workspace when it is running. This is required if you want to use this code in the Visual Basic programming system, or using Visual Basic for Applications in Word, Excel, or the PowerPoint. Additionally, to use the Jet Exchange installable ISAM from those programs, you must use the <b>References</b> dialog box (in the <b>Tools</b> menu in the Microsoft Office Visual Basic Editor, and in the <b>Project</b> menu in Visual Basic) to establish a reference to Microsoft DAO 3.5 Object Library. A reference to this object library is established by default in Access 97. The code examples in the following sections assume that you are using them in Access and do not create a new workspace.</p>
<h3>Linking Microsoft Exchange or Outlook Folders</h3>
<p>
You can gain access to a folder within an Exchange Client or Outlook mailbox by creating a link to the folder within an Access database. When you link a folder, the folder is treated as a linked table. There are a number of constraints when working with linked folders. For more information see "Constraints" and "Microsoft Exchange and Outlook Table Formats" later in this article. The following DAO code links an Exchange or Outlook folder to an Access database.</p>
<pre><code>Sub LinkExchangeFolder()
 &nbsp;&nbsp; Dim dbs As Database
 &nbsp;&nbsp; Dim tdf As TableDef
 &nbsp;&nbsp; Dim str As String
 &nbsp;&nbsp; Const conTableExists = 3012
 &nbsp;&nbsp; On Error GoTo Link_Err
 &nbsp;&nbsp; 'Set a reference to the current database.
 &nbsp;&nbsp; Set dbs = CurrentDb
 &nbsp;&nbsp; 'Build the connection string.
 &nbsp;&nbsp; str = "Exchange 4.0;MAPILEVEL=Mailbox - Dave Jones" _
 &nbsp;&nbsp; &amp; "|People\Important;TABLETYPE=0;" _
 &nbsp;&nbsp; &amp; "DATABASE=" &amp; dbs.Name &amp; ";" _
 &nbsp;&nbsp; &amp; "PROFILE=DaveJ;PWD=Cisco;"
 &nbsp;&nbsp; 'Create a TableDef object. The name specified for the
 &nbsp;&nbsp; 'TableDef object is displayed as the name of the link
 &nbsp;&nbsp; 'in the Database window.
 &nbsp;&nbsp; Set tdf = dbs.CreateTableDef("Linked Exchange Folder")
 &nbsp;&nbsp; 'Set connection information and specify a personal address book.
 &nbsp;&nbsp; tdf.Connect = str
 &nbsp;&nbsp; tdf.SourceTableName = "Barbara"
 &nbsp;&nbsp; 'Append the TableDef object to create the link.
 &nbsp;&nbsp; dbs.TableDefs.Append tdf
 &nbsp;&nbsp; 'Refresh the database window and clear the database object variable.
 &nbsp;&nbsp; RefreshDatabaseWindow
Link_Exit:
 &nbsp;&nbsp; dbs.Close
 &nbsp;&nbsp; Set dbs = Nothing
 &nbsp;&nbsp; Exit Sub
Link_Err:
 &nbsp;&nbsp; If Err = conTableExists Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "The table you are trying to create already exists. "
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Resume Link_Exit
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Error: " &amp; Err.Number &amp; ": " &amp; Err.Description
 &nbsp;&nbsp; End If
End Sub
</code></pre>
<p>
You can link an address book using the same code by specifying TABLETYPE=1 in the connection string, and then specifying the name of the address book with the <b>SourceTableName</b> property:</p>
<pre><code>tdf.SourceTableName = "Personal Address Book"
</code></pre>
<p>
If you want to add records to a linked folder or address book, you use the same methods used with native Access tables. For example, the following code opens the current database and adds a new record to a previously linked address book named tblMyAddressBook:</p>
<pre><code>Function AddRecord()
 &nbsp;&nbsp; Dim dbs As Database
 &nbsp;&nbsp; Dim rst As Recordset
 &nbsp;&nbsp; Set dbs = CurrentDb
 &nbsp;&nbsp; Set rst = dbs.OpenRecordset("tblMyAddressBook", dbOpenDynaset)
 &nbsp;&nbsp; With rst
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AddNew
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ![First] = "Nancy"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ![Last] = "Davolio"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ![Phone] = "555-5555"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ![Home Phone] = "555-1212"
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Update
 &nbsp;&nbsp; End With
 &nbsp;&nbsp; dbs.Close
 &nbsp;&nbsp; rst.Close
End Function
</code></pre>
<h3>Importing Microsoft Exchange or Outlook Folders</h3>
<p>
To import Exchange or Outlook folders, your code first needs to create a new table that contains the fields you want to import. For information on the fields available to you, see "Microsoft Exchange and Outlook Table Formats" later in this article. Once you've created the new table, establish a temporary link to the folder you want to import from, and then run an append query to add records to the new table.</p>
<pre><code>Sub ImportExchangeData()
 &nbsp;&nbsp; Dim dbs As Database
 &nbsp;&nbsp; Dim tdfImport As TableDef
 &nbsp;&nbsp; Dim tdfTemp As TableDef
 &nbsp;&nbsp; Dim fldImportance As Field
 &nbsp;&nbsp; Dim fldPriority As Field
 &nbsp;&nbsp; Dim fldSubject As Field
 &nbsp;&nbsp; Dim fldFrom As Field
 &nbsp;&nbsp; Dim fldTo As Field
 &nbsp;&nbsp; Dim fldCC As Field
 &nbsp;&nbsp; Dim fldSize As Field
 &nbsp;&nbsp; Dim fldBody As Field
 &nbsp;&nbsp; Dim fldReceived As Field
 &nbsp;&nbsp; Dim strConnect As String
 &nbsp;&nbsp; Const conTableExists = 3012
 &nbsp;&nbsp; On Error GoTo Import_Err
 &nbsp;&nbsp; 'Set a reference to the current database.
 &nbsp;&nbsp; Set dbs = CurrentDb
 &nbsp;&nbsp; 'Create a TableDef object to contain the definition the new table.
 &nbsp;&nbsp; Set tdfImport = dbs.CreateTableDef("tblImportMessages")
With tdfImport
 &nbsp;&nbsp; 'Create the fields you want to include in the new table.
 &nbsp;&nbsp; Set fldImportance = .CreateField("Importance", dbLong, 4)
 &nbsp;&nbsp; Set fldPriority =.CreateField("Priority", dbLong, 4)
 &nbsp;&nbsp; Set fldSubject =.CreateField("Subject", dbText)
 &nbsp;&nbsp; Set fldFrom =.CreateField("From", dbText)
 &nbsp;&nbsp; Set fldTo =.CreateField("To", dbText)
 &nbsp;&nbsp; Set fldCC =.CreateField("CC", dbText)
 &nbsp;&nbsp; Set fldSize =.CreateField("Message Size", dbLong, 4)
 &nbsp;&nbsp; Set fldBody =.CreateField("Body", dbMemo)
 &nbsp;&nbsp; Set fldReceived =.CreateField("Received", dbDate)
End With
 &nbsp;&nbsp; 'Add the fields you want to include in the new table by appending
 &nbsp;&nbsp; 'them to the Fields collection.
 &nbsp;&nbsp; With tdfImport.Fields
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldImportance
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldPriority
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldSubject
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldFrom
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldTo
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldCC
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldSize
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldBody
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Append fldReceived
 &nbsp;&nbsp; End With
 &nbsp;&nbsp; 'Create the new table by appending it to the database's TableDefs collection.
 &nbsp;&nbsp; dbs.TableDefs.Append tdfImport
 &nbsp;&nbsp; 'Build the connection string.
 &nbsp;&nbsp; strConnect = "Exchange 4.0;MAPILEVEL=Personal Folders" _
 &nbsp;&nbsp; &amp; "|Inbox;TABLETYPE=0;" _
 &nbsp;&nbsp; &amp; "DATABASE=dbs.Name;" _
 &nbsp;&nbsp; &amp; "PROFILE=DaveJ;PWD=Cisco;"
 &nbsp;&nbsp; 'Create a TableDef object that will be used to temporarily link
 &nbsp;&nbsp; 'the folder.
 &nbsp;&nbsp; Set tdfTemp = dbs.CreateTableDef("tblTemp")
 &nbsp;&nbsp; 'Set Connection Information.
 &nbsp;&nbsp; tdfTemp.Connect = strConnect
 &nbsp;&nbsp; tdfTemp.SourceTableName = "Barbara"&nbsp;&nbsp;&nbsp; 
 &nbsp;&nbsp; 'Append the TableDef object to create the link.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; dbs.TableDefs.Append tdfTemp
 &nbsp;&nbsp; 'Create the SQL statements that define the append query.
 &nbsp;&nbsp; strSQL = "INSERT INTO tblImportMessages"
 &nbsp;&nbsp; strSQL = strSQL &amp; "( Importance, Priority, Subject, "
 &nbsp;&nbsp; strSQL = strSQL &amp; "[From], To, CC, [Message Size], Body, Received ) "
 &nbsp;&nbsp; strSQL = strSQL &amp; "SELECT tblTemp.Importance, tblTemp.Priority, "
 &nbsp;&nbsp; strSQL = strSQL &amp; "tblTemp.[Normalized Subject], tblTemp.From, tblTemp.To, "
 &nbsp;&nbsp; strSQL = strSQL &amp; "tblTemp.CC, tblTemp.[Message Size], tblTemp.Body, "
 &nbsp;&nbsp; strSQL = strSQL &amp; "tblTemp.Received "
 &nbsp;&nbsp; strSQL = strSQL &amp; "FROM tblTemp;"
 &nbsp;&nbsp; 'Execute the append query.
 &nbsp;&nbsp; dbs.Execute strSQL
 &nbsp;&nbsp; 'Delete the link and refresh the database window.
 &nbsp;&nbsp; dbs.TableDefs.Delete "tblTemp"
 &nbsp;&nbsp; RefreshDatabaseWindow
'Clear the database object variable and exit sub.
Import_Exit:
 &nbsp;&nbsp; dbs.Close
 &nbsp;&nbsp; Set dbs = Nothing
 &nbsp;&nbsp; Exit Sub
Import_Err:
 &nbsp;&nbsp; If Err = conTableExists Then
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "The table you are trying to create already exists. "
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Resume Import_Exit
 &nbsp;&nbsp; Else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MsgBox "Error: " &amp; Err.Number &amp; ": " &amp; Err.Description
 &nbsp;&nbsp; End If
End Sub
</code></pre>
<p>
If you want to import all of the fields of an Exchange or Outlook table at once, you can use code to run a query like the following:</p>
<pre><code>Function SimpleImport()
 &nbsp;&nbsp; Dim dbs As Database
 &nbsp;&nbsp; Dim strConnect As String
 &nbsp;&nbsp; Dim strSQL As String
 &nbsp;&nbsp; Set dbs = CurrentDB
 &nbsp;&nbsp; 'Build the connection string.
 &nbsp;&nbsp; strConnect = "Exchange 4.0;MAPILEVEL=Mailbox - KiraR|Inbox;DATABASE=" _
 &nbsp;&nbsp; &amp; dbs.Name &amp; ";"
 &nbsp;&nbsp; 'Build the SQL statement.
 &nbsp;&nbsp; strSQL = "SELECT * INTO ImportTable FROM [" &amp; strConnect &amp; "].MyMessages;"
 &nbsp;&nbsp; 'Run the query.
 &nbsp;&nbsp; dbs.Execute strSQL
 &nbsp;&nbsp; 'Refresh the database window and clear database object variable.
 &nbsp;&nbsp; RefreshDatabaseWindow
 &nbsp;&nbsp; dbs.Close
 &nbsp;&nbsp; dbs = Nothing
End Function
</code></pre>
<h4>Constraints</h4>
<p>
You can't select which fields are available to you in opened and linked folders; a subset of the total number of Exchange Client or Outlook fields are available, and they are preprogrammed in the Jet Exchange installable ISAM. For information on which fields are available, see "Microsoft Exchange and Outlook Table Formats" later in this article. For linked tables, however, you can rearrange or hide the fields in the <b>Datasheet View</b> of the table to customize its appearance.</p>
<h4>Adding records</h4>
<p>
You can't modify any records in a linked folder or address book. You can delete records and add new records to a linked folder or address book. However, when adding new records, only certain fields will accept data. For information on which fields will accept data when adding new records, see the tables in the "Microsoft Exchange and Outlook Table Formats" section later in this article. Additionally, you can't use the <b>Seek</b> method, because the Jet Exchange installable ISAM does not support indexing.</p>
<p>
If items in the linked Outlook folder use a special form, you must enter the correct form type in the <b>Message Class</b> field when you add new records to the table. If you do not specify a Message Class, Outlook uses the default mail form to display your data. The Message Classes for the standard Outlook folders are listed in Table 2.</p>
<p class=label>
<b>Table 2. Message Classes</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=45%><b>Folder</b></td>
<td class=label width=55%><b>Message Class</b></td>
</tr>
<tr valign=top>
<td width=45%>Calendar</td>
<td width=55%>IPM.Appointment</td>
</tr>
<tr valign=top>
<td width=45%>Contacts</td>
<td width=55%>IPM.Contact</td>
</tr>
<tr valign=top>
<td width=45%>Inbox</td>
<td width=55%>IPM.Note</td>
</tr>
<tr valign=top>
<td width=45%>Journal</td>
<td width=55%>IPM.Activity</td>
</tr>
<tr valign=top>
<td width=45%>Notes</td>
<td width=55%>IPM.StickyNote</td>
</tr>
<tr valign=top>
<td width=45%>Tasks</td>
<td width=55%>IPM.Task</td>
</tr>
</table><br>
<h2>Microsoft Exchange and Outlook Table Formats</h2>
<p>
The Jet Exchange driver makes available the table formats listed in the follow sections. You can't modify any records in a linked folder. When adding new records, you can only enter data in the fields marked as Updatable in the tables that follow. Once you save a new record, it can't be modified.</p>
<h3>Message Table Format</h3>
<p>
The Message Table format, specified as TABLETYPE=0 in the <b>Connect</b> property in code, applies to Exchange and Outlook Message and Public folders, and to Outlook Calendar (Appointment), Contacts, Journal, Notes, and Tasks folders. Contacts folders include additional fields in a slightly different order, as listed Table 3.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When opening Public Folders, any custom fields that are defined for the folder are not available.</p>
<p>
Table 3 lists the fields in the order they are displayed in a linked message folder.</p>
<p class=label>
<b>Table3. Message Table Format</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=32%><b>Field Name</b></td>
<td class=label width=28%><b>Type</b></td>
<td class=label width=17%><b>Size</b></td>
<td class=label width=23%><b>Updatable</b></td>
</tr>
<tr valign=top>
<td width=32%>Importance</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Message Class</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Priority</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Subject</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>From</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Message To Me</td>
<td width=28%>Yes/No</td>
<td width=17%>1</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Message CC to Me</td>
<td width=28%>Yes/No</td>
<td width=17%>1</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Sender Name</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>CC</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>To</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Received</td>
<td width=28%>Date/Time</td>
<td width=17%>8</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Message Size</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Body</td>
<td width=28%>Memo</td>
<td width=17%>-</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Display Name</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Creation Time</td>
<td width=28%>Date/Time</td>
<td width=17%>8</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Last Modification Time</td>
<td width=28%>Date/Time</td>
<td width=17%>8</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Subject Prefix</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Has Attachments</td>
<td width=28%>Yes/No</td>
<td width=17%>1</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Normalized Subject</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Row Type</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Instance Key</td>
<td width=28%>OLE Object</td>
<td width=17%>-</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Object Type</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>EntryId</td>
<td width=28%>OLE Object</td>
<td width=17%>-</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Depth</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Content Unread</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>Yes</td>
</tr>
</table><br>
<h3>Contacts Table Format</h3>
<p>
A Contacts table is specified as TABLETYPE=0 in the <b>Connect</b> property in code, but contains a slightly different list of fields than other Message Table Format tables.</p>
<p class=label>
<b>Table 4. Contacts Table Format</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Field Name</b></td>
<td class=label width=29%><b>Type</b></td>
<td class=label width=17%><b>Size</b></td>
<td class=label width=23%><b>Updatable</b></td>
</tr>
<tr valign=top>
<td width=31%>Has Attachments</td>
<td width=29%>Yes/No</td>
<td width=17%>1</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Received</td>
<td width=29%>Date/Time</td>
<td width=17%>8 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Message Class</td>
<td width=29%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Subject Prefix</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Normalized Subject</td>
<td width=29%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Importance</td>
<td width=29%>Number (Long)</td>
<td width=17%>4 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Message To Me</td>
<td width=29%>Yes/No</td>
<td width=17%>1 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Message CC to Me</td>
<td width=29%>Yes/No</td>
<td width=17%>1 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Creation Time</td>
<td width=29%>Date/Time</td>
<td width=17%>8 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Last Modification Time</td>
<td width=29%>Date/Time</td>
<td width=17%>8 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Body</td>
<td width=29%>Memo</td>
<td width=17%>- </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>To</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>CC</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Sender Name</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Priority</td>
<td width=29%>Number (Long)</td>
<td width=17%>4 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Last</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>First</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Company</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>From</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Message Size</td>
<td width=29%>Number (Long)</td>
<td width=17%>4 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Display Name</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Mobile Phone</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Home Phone</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Phone</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Alias</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Initials</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Title</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Department</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Country</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>City</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>State</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Address</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Zip code</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=31%>Subject</td>
<td width=29%>Text</td>
<td width=17%>255 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Object Type</td>
<td width=29%>Number (Long)</td>
<td width=17%>4 </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>EntryId</td>
<td width=29%>OLE Object</td>
<td width=17%>- </td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=31%>Instance Key</td>
<td width=29%>OLE Object</td>
<td width=17%>- </td>
<td width=23%>No</td>
</tr>
</table><br>
<h3>Address Book Format</h3>
<p>
The Address Book format, specified as TABLETYPE=1 in the <b>Connect</b> property in code, applies to Exchange and Outlook Address Book folders. You can't modify any records in a linked address book. When adding new records, you can only enter data in the fields marked as Updatable in the tables that follow. Once you save a new record, it can't be modified. Table 5 lists the fields in the order in which they appear in a linked address book.</p>
<p class=label>
<b>Table 5. Address Book Format</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=32%><b>Field Name</b></td>
<td class=label width=28%><b>Type</b></td>
<td class=label width=17%><b>Size</b></td>
<td class=label width=23%><b>Updatable</b></td>
</tr>
<tr valign=top>
<td width=32%>Object Type</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Display Name</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>E-mail Type</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>E-mail Address</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Notes</td>
<td width=28%>Memo</td>
<td width=17%>-</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Creation Time</td>
<td width=28%>Date/Time</td>
<td width=17%>8</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Last Modification Time</td>
<td width=28%>Date/Time</td>
<td width=17%>8</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Display Type</td>
<td width=28%>Number (Long)</td>
<td width=17%>4</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Alias</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>First</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Home Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Initials</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Common Name</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Last</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Company</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Title</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Department</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Office</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Primary</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Business2 Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Mobile Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Transmit Name</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Pager Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Fax Number</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Country</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>City</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>State</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Address</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Zip code</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Post Office Box</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Telex Number</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Assistant Phone Number</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Home2 Phone</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Assistant</td>
<td width=28%>Text</td>
<td width=17%>255</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>Send Rich Text</td>
<td width=28%>Yes/No</td>
<td width=17%>1</td>
<td width=23%>Yes</td>
</tr>
<tr valign=top>
<td width=32%>EntryId</td>
<td width=28%>OLE Object</td>
<td width=17%>-</td>
<td width=23%>No</td>
</tr>
<tr valign=top>
<td width=32%>Instance Key</td>
<td width=28%>OLE Object</td>
<td width=17%>-</td>
<td width=23%>No</td>
</tr>
</table><br>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;The structure of the tables previously listed may not correspond exactly to the tables available on your Exchange Server offline folder (.ost), personal folder (.pst), or personal address book (.pab) files. The Jet Exchange installable ISAM does not determine the structure of linked tables, and they may vary depending on the version of Exchange or Outlook that you are using. To check the structure of your tables, link a table and then run code like the following:</p>
<pre><code>Function ListFormat()
Dim dbs As Database
Dim tdf As TableDef
Dim fld As Field
Set dbs = CurrentDb
Set tdf = dbs.TableDefs!tblMyTable
For Each fld In tdf.Fields
 &nbsp;&nbsp; Debug.Print "Name: " &amp; fld.Name &amp; vbTab &amp;_
 &nbsp;&nbsp; " Type: " &amp; fld.Type &amp; vbTab &amp;_
 &nbsp;&nbsp; " Updatable: " &amp; fld.DataUpdatable
Next fld
End Function
</code></pre>
</BODY>
</HTML>
