<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Windows NT, Windows for Workgroups, and Windows NT Advanced Server in a Novell NetWare Environment</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_nwinteg"></a>Windows NT, Windows for Workgroups, and Windows NT Advanced Server in a Novell NetWare Environment</h1>
<p>
Technical Backgrounder</p>
<p>
Created: October 1993</p>
<p>
The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication.&nbsp; Because Microsoft must respond to changing market conditions, it should not be interpreted to be a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication.<br>
This paper is for informational purposes only. Microsoft makes no warranties, express or implied, in this summary.<br>
© 1993 Microsoft Corporation. All rights reserved.<br>
Microsoft, MS-DOS, and Win32 are registered trademarks and Windows, Windows NT, and the Windows logo are trademarks of Microsoft Corporation.<br>
Macintosh is a registered trademark of Apple Computer Company. Banyan and VINES are registered trademarks of Banyan Systems, Inc. CompuServe is a registered trademark of CompuServe Inc. ArcNet is a registered trademark of Datapoint Corp. DEC and VMS are registered trademarks and Alpha AXP, DECnet, and Pathworks are trademarks of Digital Equipment Corporation. SQLBase is a registered trademark of Gupta Technologies, Inc. Informix is a registered trademark of Informix Software, Inc. Ingres is a registered trademark of Ingres Corp. IBM and OS/2 are registered trademarks of International Business Machines Corporation. Lotus and Notes are registered trademarks of the Lotus Corp. MIPS is a registered trademark of MIPS Computer Systems, Inc. Novell and NetWare are registered trademarks of Novell, Inc. Oracle is a registered trademark of Oracle Corporation. SYBASE is a registered trademark of Sybase, Inc. UNIX is a registered trademark of UNIX Systems Laboratories.</p>
<h2>Abstract</h2>
<p>
The Microsoft® Windows™ family of operating systems is designed with interoperability in mind. Increasingly, customers are demanding flexible, open networking capabilities as basic components in operating systems.&nbsp; Microsoft meets these needs today with the Windows for Workgroups operating system with integrated networking, the Windows NT™ operating system, and the Windows NT Advanced Server, all incorporating networking capabilities as integral components.</p>
<p>
The Microsoft family of operating systems supports interoperability with the Novell® NetWare® network operating systems. Windows for Workgroups and Windows NT can be configured to access data and printers on Novell NetWare servers. The Windows NT Advanced Server operating system allows existing NetWare clients to access server-based applications as they continue to access NetWare file and print servers. You can add these Windows family operating systems into your existing environments and be assured of compatibility, interoperability, and protection of your investment in existing NetWare servers.</p>
<h2>Microsoft Networking in a NetWare Environment</h2>
<p>
Computers running the Microsoft® Windows™ family operating systems can easily be integrated into a predominantly Novell® NetWare® environment, making the benefits of Windows operating systems available to an existing network:
<ul type=disc>
<li>
<b>Windows NT™.</b> As customers deploy the Windows NT operating system on their advanced desktops, they still need to access existing data or applications that reside on NetWare servers. Customers can run 32-bit Windows-based applications and enjoy the other benefits of Windows NT (for example, built-in security, preemptive multitasking, virtual memory, and so on) while retaining connectivity to their current NetWare servers. Windows NT–based clients connected to NetWare servers can also act as gateways from Windows SMB-based networking to NetWare NCP-based networking.<br><br></li>
<li>
<b>Windows for Workgroups 3.11.</b> This is an operating system that adds integrated networking functionality to the familiar Microsoft Windows operating system, simplifying the process of connecting individual personal computers, servers, and printers. It offers the complete solution for customers who need both Microsoft Windows 3.1 and networking software for their personal computers (PCs), and now includes improved functionality and 32-bit performance. Windows for Workgroups 3.11 integrates with server-based systems, such as Windows NT Advanced Server and Novell NetWare, allowing users to access file and print resources on mixed networks.<br><br></li>
<li>
<b>Windows NT Advanced Server.</b> As customers begin building and deploying client-server applications, many are turning to platforms such as Windows NT Advanced Server, a platform that provides portability, scalability, and stability (that is, application protection). Many customers are adding Windows NT Advanced Server into their existing environments to serve as a database server or other application server, while using existing NetWare servers for NOS (file and print) functions. These customers can use their existing MS-DOS®, Windows (all types), and OS/2®–based clients to communicate with database servers running on Windows NT Advanced Server using a variety of common communications mechanisms.</li>
</ul>
<p>
The networking architectures of Windows for Workgroups and Windows NT play an important role in making them powerful members of many different types of networks. The architectures themselves are protocol-independent, providing standard interfaces for applications (such as Windows Sockets, RPC, and NetBIOS) and device drivers (such as NDIS). This architecture allows computers to run multiple protocols on a single network adapter card, as well as run a single protocol on multiple network adapter cards simultaneously. This makes it easy to incorporate computers running Windows for Workgroups or Windows NT into existing networks so you can take advantage of their ease of use and advanced features without disrupting your enterprise.</p>
<p>
A network administrator considering a mixed network environment is naturally concerned about how the various components will be able to communicate with each other. In the case of a mixed Microsoft Networking and NetWare environment, the network administrator wants to ensure that Windows-based workstations added to the network are able to use file and print resources on existing NetWare servers, and that existing NetWare clients can access client-server applications running on Windows NT Advanced Servers.</p>
<p>
This section presents an overview of how Windows for Workgroups–based and Windows NT–based computers can effectively function as clients of NetWare servers, and how Windows NT Advanced Servers can function as application servers for NetWare clients.</p>
<p>
Figure 1 shows the key components and protocols used in a mixed Windows and NetWare–based network.</p>
<p>
<img src="nwinteg_1.gif" border=0></p>
<p class=label>
<b>Figure 1. Components and protocols in a mixed Windows NT and NetWare environment</b></p>
<h3>Windows NT–Based Clients on a NetWare Network</h3>
<p>
Because it was designed to be on a network, Windows NT makes an excellent network client. Its open design enables network redirectors to integrate seamlessly with the operating system. To facilitate easy access to data and printers on NetWare servers, Microsoft is developing a NetWare-compatible redirector for Windows NT, called NetWare Workstation Compatible Service (NWCS). This redirector is now in beta testing, and current plans call for it to be completed during the first quarter of 1994. Using NWCS, you can access data and printers on a NetWare network as easily as you can use other native networking capabilities of Windows NT.</p>
<p>
Novell is also developing a NetWare-compatible redirector for Windows NT, called the NetWare Client for Windows NT. This redirector is now in beta, and is widely anticipated by users and developers. (Novell has not announced a completion date for this product.) When available, NetWare Client will allow a Windows NT–based computer to access file and print resources on NetWare servers.</p>
<p>
Therefore, there will be at least two solutions available for providing Windows NT–based machines client capabilities to NetWare servers (and possibly more, if other third-party solutions become available). The open architecture of Windows NT also makes it easy for third parties to develop redirectors. These clients will doubtless differ in features, performance, price, availability, and so forth.</p>
<p>
Because NetWare connectivity is so important to many of our customers, we are increasingly building solid NetWare connectivity right into Microsoft operating systems (for example, NWCS for Windows NT, and enhanced built-in NetWare connectivity in Windows for Workgroups 3.11). In addition, we will provide timely support for NWCS on all Windows NT supported platforms (currently X86, MIPS®, and Alpha AXP™), support that is important to our customers.</p>
<p>
<img src="nwinteg_2.gif" border=0></p>
<p class=label>
<b>Figure 2. Windows NT–based computers as NetWare clients or application servers</b></p>
<p>
The Windows NT architecture includes an open interface incorporating two key components—the multiple provider router (MPR) and the multiple UNC provider (MUP)—that together enable consistent access to third-party network file systems. The MPR supports browsing and connection to other (non-Microsoft Windows) networks. The MUP makes all file systems, regardless of type and physical location, accessible through the same set of file-system APIs (using UNC names).</p>
<p>
Applications make file-system requests through the Win32® API in Windows NT. The capabilities of the MPR and MUP ensure that requests are performed on the proper file system: Local file requests are sent to the local disk, remote requests to Windows-based servers are sent to the appropriate server by the Windows redirector, and requests to NetWare servers are sent to the appropriate server by the NetWare Client for Windows NT.</p>
<p>
For example, File Manager allows users to browse and connect to any NetWare or Windows-based server on the net. Because built-in networking in Windows NT is independent of the underlying net, the same user interface and tools work with all networks that run on Windows NT.</p>
<p>
The Microsoft NWCS is a fully native implementation of a 32-bit Windows redirector, utilizing all the built-in networking capabilities (for example, NDIS and TDI interfaces) of Windows NT. This provides a wide choice of compatible network cards and the ability to easily run multiple protocols and services over the same network card simultaneously. It also provides features such as MP-safety and the best portability among different Windows NT–supported platforms (currently X86, MIPS, and Alpha AXP).</p>
<p>
The NetWare Client only partially reflects the Windows NT network architecture. For example, it relies on ODI device drivers rather than the NDIS standard used by most Windows NT–based network software. This will adversely affect the number of network cards that the NetWare client can support, and may affect portability to SMP or non-X86 Windows NT–based platforms.</p>
<h3>Windows for Workgroups Clients on a NetWare Network</h3>
<p>
Windows for Workgroups 3.11 is an operating system that adds integrated networking functionality to the familiar Microsoft Windows operating system, simplifying the process of connecting individual personal computers, servers, and printers. Windows for Workgroups version 3.11 provides significantly enhanced network integration with Novell NetWare by interoperating better with Novell NetWare configurations. The Novell NetWare–related improvements in Windows for Workgroups 3.11 focus on allowing Windows for Workgroups to work better with Novell NetWare drivers. These enhancements include:
<ul type=disc>
<li>
<b>Support for running on top of Novell network card driver models.</b> In addition to supporting NDIS drivers for native Windows for Workgroups network configurations, Windows for Workgroups 3.11 now has the ability to run on top of Open Data-link Interface (ODI) MAC-Layer Interface Drivers (MLIDs) as well as monolithic IPX drivers. This allows Windows for Workgroups to work when installed on a NetWare client without requiring changes to the client's configuration. Using ODI drivers, Windows for Workgroups 3.11 also now supports peer network services along with NetWare integration on ArcNet®-based networks.<br><br></li>
<li>
<b>Support for Windows for Workgroups network services over IPX.</b> Windows for Workgroups 3.11 now fully supports the utilization of the IPX protocol and supports peer file and printer sharing, as well as Network DDE, with other Windows for Workgroups–based computers using IPX. The native use of IPX provides support for a routable network transport protocol and allows Windows for Workgroups–based workstations to communicate on either side of an IPX router. Support for IPX also allows workstations running Windows for Workgroups to communicate with Windows NT and Windows NT Advanced Server using the IPX protocol (instead of NetBEUI) to access shared resources.<br><br></li>
<li>
A 32-bit, protected-mode implementation of the IPX network transport protocol that also provides NetBIOS services on a NetWare network. Windows for Workgroups 3.11 provides NWLink, a 32-bit routable network transport protocol that is fully IPX-compatible and can be used to communicate between workstations running Windows for Workgroups. The 32-bit protected-mode implementation of NWLink provides improved performance for IPX/SPX applications. NWLink allows Windows for Workgroups–based workstations to communicate with client-server solutions that recognize IPX/SPX as the communication protocol, such as Microsoft SQL Server, Lotus® Notes, and Btrieve®.<p class=tl>
NWNBLink is a NetBIOS version 3 provider that runs in conjunction with NWLink and uses the Novell NetBIOS frame format to provide full compatibility with Novell's NetBIOS version 1 implementation. It provides support using NetBIOS for interoperating with other Windows for Workgroups and Windows NT–based machines, and with machines running Novell's NetBIOS driver. The use of NWNBLink provides application connectivity to NetBIOS-based environments such as Lotus Notes, without loading the Novell NETBIOS.EXE driver, saving as much as 40K of conventional memory.</P><p class=tl>
The combination of NWLink and NWNBLink allows Windows for Workgroups–based workstations to support file and printer peer networking over the IPX/SPX-compatible transport to Windows NT and Windows NT Advanced Server.</P><p class=tl>
NWLink is the ideal transport protocol to use where Windows for Workgroups–based workstations need to communicate with other computers on an IPX backbone. Note that in order for a Windows for Workgroups–based workstation to access files and printers residing on a NetWare server, the NetWare redirector (either 3.x or 4.x) and real-mode IPX transport protocol are still required.</P></li>
</ul>
<h3>Windows NT Advanced Servers on a NetWare Network</h3>
<p>
Many organizations today are seeking solutions for downsizing or reengineering existing applications that run on minicomputers or mainframes. Many of these are NetWare networks. NetWare servers are designed to function primarily as file and print servers, and therefore do not support business-critical applications well. NetWare servers do not feature preemptive multitasking or protected virtual memory, essential features for client-server applications. On the other hand, Windows NT Advanced Server makes an ideal platform for demanding applications because of its scalability, fault tolerance, 32-bit architecture, and threaded, preemptive multitasking with full memory protection.</p>
<p>
Administrators can take advantage of the advanced features of Windows NT Advanced Server on an existing NetWare network without interfering with client systems' access to file and printer resources on NetWare servers. For example, an administrator can add Windows NT Advanced Server computers running SQL Server to the network (so client workstations can take advantage of a distributed high-performance relational database system) and still be able to use files and printers shared by their usual NetWare servers. This solution requires no additional hardware or software to provide the necessary connectivity.</p>
<p>
MS-DOS, Windows (all types), and OS/2–based clients use a variety of mechanisms to communicate with back-end server applications running on Windows NT Advanced Server. These mechanisms include Sockets, Remote Procedure Calls (RPC), and Novell NetBIOS. Windows Sockets, Microsoft's enhanced implementation of the Berkeley-compatible sockets mechanism, is particularly powerful, since Sockets are a common tool for communicating with NetWare NLMs. Customers who have implemented client-server solutions using NLMs can port them to Windows NT Advanced Server, while retaining compatibility on their clients. All these mechanisms run over NWLink, Windows NT Advanced Server's built-in IPX/SPX-compatible protocol stack. Because NWLink is NDIS-compliant, the Windows NT computer can simultaneously run other protocol stacks (such as TCP/IP) over the same network adapter cards, allowing them to simultaneously communicate with non-NetWare computers.</p>
<h3>Additional Considerations</h3>
<p>
Before adding computers running Windows NT (or other non-NetWare operating systems) to a NetWare network, an administrator should anticipate some potential areas of concern. </p>
<p>
Administrators should be aware that Windows NT–based clients on NetWare do not run NetWare logon scripts. However, the ability of Windows NT to run its own logon scripts and maintain persistent connections provides much the same functionality as NetWare logon scripts in many instances. Windows NT Advanced Server also supports the notion of user profiles, which allows customization of user desktops at logon time.</p>
<p>
Another area of difficulty is backing up Windows NT–based clients on NetWare. Novell servers cannot provide tape backup services for Windows NT–based computers. However, a Windows NT–based computer equipped with a supported tape drive can back up other Windows NT–based computers, as well as NetWare servers and computers running Windows networking software.</p>
<p>
Finally, Windows NT can act as a client for NetWare 2.2-4.x servers (4.x supported with bindery emulation turned on). Currently, NWCS does not support NetWare 4.x-specific directory services and authentication.</p>
<p>
The following sections discuss in greater detail how Windows for Workgroups, Windows NT, and Windows NT Advanced Server can be integrated into environments with NetWare servers.</p>
<h2>Windows NT 3.1 as a Client in NetWare Environments</h2>
<p>
This section discusses the three major software components for integrating Windows NT into Novell NetWare environments—NWLink protocol, Microsoft's NetWare Workstation Compatible Service (NWCS), and Novell's NetWare Client for Windows NT.</p>
<h3>NWLink Protocol</h3>
<p>
NWLink is an IPX/SPX-compatible transport protocol for Windows NT. It can be used to establish connections between Windows NT–based computers and MS-DOS–based, OS/2–based, Windows-based, or other Windows NT–based computers via a variety of communications mechanisms. Probably the most widely supported and versatile is Windows Sockets, since sockets are a common tool for communicating with NetWare NLMs. Customers who may have implemented client-server solutions using NLMs can port them to Windows NT Advanced Server, while retaining much compatibility on their clients. Other mechanisms, including RPC and Novell NetBIOS, are also possible.</p>
<p>
NWLink is simply a transport protocol. By itself, it does not allow a Windows NT–based computer to access files or printers on a Novell NetWare server or to act as a server to a NetWare client. To access files or printers on a NetWare server, you need to use a redirector: either Microsoft's NWCS or Novell's NetWare Client for Windows NT.</p>
<p>
NWLink is useful if you have NetWare client applications that use sockets or NetBIOS over the IPX/SPX protocol. NWLink can also serve as the protocol used by the default redirector and server for Windows NT and Windows NT Advanced Server, which use Server Message Blocks (SMBs) to communicate with Microsoft network clients. Customers can, if they choose, perform all their networking using IPX/SPX, including all traffic among clients, NetWare servers, and Windows NT Advanced Servers supporting applications such as Microsoft SNA Server or Microsoft SQL Server for Windows NT.</p>
<p>
Because NWLink uses Streams, which in turn uses NDIS 3.0, the NWLink protocol can be run on any network adapter card that uses an NDIS-compatible driver.</p>
<p>
<img src="nwinteg_3.gif" border=0></p>
<p class=label>
<b>Figure 3. NWLink, NWNBLink, and Streams</b></p>
<h4>NetBIOS and Windows Sockets</h4>
<p>
User-mode applications can use RPC, NetBIOS APIs, or Windows Sockets APIs to access the network via NWLink or other IPX/SPX protocol drivers. Both NetBIOS and Windows Sockets are supported in the Windows 32-bit, Windows 16-bit, and MS-DOS environments. Programs that run in the OS/2 environment can use NetBIOS and Novell's IPX/SPX support for OS/2, but not Windows Sockets APIs. All subsystems and VDMs can use logical drives that are established by the redirector via NWLink.</p>
<p>
<img src="nwinteg_4.gif" border=0></p>
<p class=label>
<b>Figure 4. Communication via NetBIOS, Sockets, and RPC</b></p>
<h4>NetBIOS over IPX</h4>
<p>
The NetBIOS over IPX is compatible with the NetBIOS support provided by Novell. In addition, NWNBLink includes certain enhancements to improve performance when using NetBIOS. </p>
<p>
These performance enhancements include acknowledgment of previous frames included in response frames (called PiggyBackAck). They also include use of a "sliding window" acknowledgment mechanism. These performance enhancements are used only when communicating with NWNBLink computers. </p>
<p>
When a Windows NT–based computer communicates with a computer using NetWare NetBIOS, the Windows NT–based computer must also use Novell NetBIOS. The NetBIOS provided by Novell acknowledges each frame received. This amount of precaution is unnecessary overhead where a highly reliable medium such as a local area network (LAN) is used, or where higher-level protocols already contain end-to-end acknowledgments.</p>
<h3>NWLink and Network Topologies</h3>
<p>
NWLink can be run on Ethernet, Token Ring, FDDI, and ArcNet topologies. Each topology requires a different frame formats. Ethernet supports Ethernet_II, raw 802.3, 802.2, or SNAP frame formats. Token Ring and FDDI supports 802.2 and SNAP. ArcNet supports raw ArcNet framing only. </p>
<p>
<i>It is important to make sure that the NWLink on the Windows NT–based computers is using the same framing used by the client computer.</i> On Ethernet networks, the standard frame format for NetWare 2.2 and NetWare 3.1 is 802.3. Starting with NetWare 4.0, the default frame format is 802.2. You can determine the frame protocol on your Windows NT–based computer by viewing the configuration settings for NWLink through Network Control Panel.</p>
<h3>NetWare Workstation Compatible Service for Windows NT</h3>
<p>
The NetWare Workstation Compatible Service (NWCS) is Microsoft's solution for allowing Microsoft Windows NT–based workstations to access files, directories, and printers on Novell NetWare servers. Large-scale beta testing of NWCS began in the fourth quarter of 1993, and its current development schedule calls for completion during 1994. Early experience with NWCS has been excellent—it has been very well received by customers who have been waiting for this solution.</p>
<p>
Because NWCS uses the IPX protocol, the NetWare Link (NWLink) transport must be installed before you install NWCS. After NWCS is installed, you can choose to configure the service, or you can start accessing the files, directories and print queues that reside on NetWare 2.x, 3.x and 4.0 (with bindery emulation) file servers.</p>
<h4>NWCS: A fully native Windows NT–based solution</h4>
<p>
NWCS is a fully native implementation of a NetWare redirector for Windows NT. It is implemented as native 32-bit Windows NT code, and includes both a service and a device driver. NWCS takes full advantage of the advanced communications architecture of Windows NT. Because it was implemented within the framework of Windows NT (as a native Windows NT networking application), it provides a well-integrated, seamless, and natural extension of the Windows NT native networking environment.</p>
<p>
<img src="nwinteg_5.gif" border=0></p>
<p class=label>
<b>Figure 5. NetWare compatible service for Windows NT architecture</b></p>
<h4>Installing NWCS</h4>
<p>
Installing NWCS is simple and straightforward—simply use the "Add Software" option in the Network applet of Control Panel. <i>(Users must be sure that they install any required updates to their release of Windows NT when installing NWCS.)</i> When NWCS is installed, an icon labeled NWC is created in Control Panel. This application can be used to select defaults for NetWare server and for printing services via NetWare print queues. Once NWCS has been installed, authorized access to files, directories and printers on the NetWare network can begin.</p>
<h4>NetWare authentication using NWCS</h4>
<p>
Before users can access files, applications, or print queues on a NetWare server, they must have authorization to do so from the administrator. Each user's username and password on the NetWare system constitute that user's NetWare <i>credentials</i>. </p>
<p>
The NetWare server authenticates the credentials supplied by each user when prompted, or when the user logs on to Windows NT, by checking that the credentials match those for the user's account on the NetWare server. The user is prompted to supply a new password only if that user's credentials on the NetWare server are not the same as his or her credentials in Windows NT.</p>
<p>
It is best to keep your username and password on NetWare servers the same as those you use when logging on to Windows NT. This allows you to use NetWare servers without having to supply another username and password. It also makes it easier for network administrators to coordinate user accounts. </p>
<h4>Selecting a preferred server</h4>
<p>
NWCS uses the NetWare notion of preferred server. This is the NetWare server that is queried for information about available network resources. The preferred server also authenticates users' credentials. The username and password that the preferred server authenticates are the default credentials. NWCS allows you to select or change your preferred server at any time.</p>
<h4>Using NetWare resources with NWCS</h4>
<p>
NWCS allows users to access resources on NetWare servers, including directories, files, and printers. NetWare server volumes, directories, and print queues are represented by their universal naming convention (UNC) names. (UNC names begin with two backslashes (\\) followed by the remote server name, and then the names of the volume or directory points on the server separated by single backslashes.) NetWare syntax is also supported.</p>
<p>
Users can connect to directories on NetWare file servers using File Manager or the <b>net</b> command at the command prompt. Users can print to NetWare print queues by connecting to the print queue in Print Manager. Once a user has connected to a print queue, he or she can also print to it using the <b>net</b> command. Users can also display NetWare servers and volumes using the <b>net</b> command.</p>
<p>
Another command that is supported in this version of NWCS is <b>setpass</b>, which can be used to change your password on NetWare servers. However, <b>setpass</b> is the only NetWare utility that is supported in the current release. Administrators should review the NWCS release notes regarding support for specific 16-bit utilities or NetWare APIs. NetWare-aware applications and Novell login scripts are not supported.</p>
<h4>Connecting to NetWare resources through File Manager</h4>
<p>
With File Manager, users can browse and connect to resources on both Microsoft and NetWare networks. Once connected to a NetWare drive, users can simply drag and drop directories and files between Windows NT, Windows for Workgroups, and LAN Manager servers and NetWare servers.</p>
<p>
On NetWare networks, the servers, volumes and directories are organized in a tree structure. Both volumes and directories are represented by the shared directory icon. Users can simply choose an item to expand the list. For example, users simply choose a directory to display its subdirectories. </p>
<p>
When a user selects the name of a NetWare volume, the NetWare server authenticates the user before allowing him or her to see directories. If the server cannot authenticate the user, Windows NT displays the Enter Network Credential dialog box so that the user can provide a username and a password for the server. </p>
<p>
Users can specify the order in which networks are searched for disk and print resources when they are using File Manager or Print Manager. By default, the NetWare network is first in the search order, which speeds up the search for NetWare resources.</p>
<h4>Using a NetWare print queue</h4>
<p>
To send data to a NetWare print queue, the user must first use Print Manager to connect to the print queue. Then, at the command prompt, the <b>net use </b>command is used to redirect output to the queue. For example, to redirect output from LPT1: to the print queue called MEMOS on the server NETWARE311, type:</p>
<pre><code>net use lpt1 \\netware311\memos
</code></pre>
<p>
This is equivalent to the NetWare <b>capture</b> command:</p>
<pre><code>CAPTURE Q=MEMOS S=NETWARE311 L=1.
</code></pre>
<p>
After redirecting output using the <b>net use</b> command, using the <b>copy</b> command allows users to send preformatted output files to LPT1: or directly to the print queue.</p>
<p>
To print to a NetWare print queue, users connect to it using Print Manager. If the NetWare network is first in the network search order for print providers, the list of servers on the NetWare network is displayed automatically in the Shared Printers box. After connecting, users can print to the NetWare print queue just as they would to a Windows NT–based printer.</p>
<p>
The printing options that are supported for NetWare print queues include settings for form feeds, print notification, and banner pages. Printing options are set for the user who is logged on to Windows NT. Settings affect all NetWare print queues used from a given Windows NT–based computer. The options are equivalent to those available through the <b>capture</b> utility on NetWare workstations running MS-DOS.</p>
<h4>Maintaining NetWare login script functionality </h4>
<p>
Both Windows NT and NetWare support predefining actions and system behavior to take place when users log on.</p>
<h4>NetWare login scripts</h4>
<p>
NetWare has three different levels of login scripts:
<ul type=disc>
<li>
The <i>default</i> login script, which executes when a specific user login script does not exist, is used to establish the default drive mappings and search mappings. (A search mapping works similarly to the PATH command.) The default login script runs from code contained in LOGIN.EXE.<br><br></li>
<li>
The <i>system</i> login script, which always runs for every user who logs in, usually contains system-wide mappings and variables established by the system administrator (or supervisor, in NetWare terminology). The system login script runs from the NET$LOG.DAT file in SYS:\PUBLIC. Typically, the administrator uses SYSCON to create and maintain the NET$LOG.DAT login script. However, it is just a text file, so any editor can be used.<br><br></li>
<li>
The <i>user</i> login script sets specific mappings and variables for individual users' needs. It customizes the user's environment according to individual preferences, and runs from the LOGIN file in the user's mail directory.</li>
</ul>
<p>
Login script execution follows the following algorithm:
<ol>
<li>
If there is a System script then execute.<br><br></li>
<li>
If there is a User Login Script then execute.<br><br></li>
<li>
If there is no User Login Script or the file is empty then execute the Default Login Script.</li>
</ol>
<p>
When a server is first installed, NetWare executes a default login script that maps the appropriate directories so that the administrator can access the NetWare utilities.</p>
<p>
Based on feedback from customers of NWCS, the most typical scenario is for a network administrator to set up a system login script that is used for creating consistent connections, as well as setting up printing redirection. An example of a typical login script is:</p>
<pre><code>if member of "DALY" then begin
 attach T0500/HI10186
 map root N:=T0500/sys:public\apps\modasst
end
if member of "ANNUITY" then begin
 #capture q=annuity ff nb nt ti=10 lpt1
 #capture q=annuity ff nb nt ti=10 lpt2
 #capture q=ann_paintjet ff nb nt ti=50 lpt3
end
fdisplay z:\public\net\system.msg
pause
</code></pre>
<p>
This script shows the most common use of login scripts: to connect to shares based on user or group affiliation, set print queues for the client, and display messages.</p>
<h4>Windows NT login scripts and user profiles</h4>
<p>
With Windows NT, you can set each user to have a login script that is run when the user logs on. This is typically a .BAT batch file. For example, you may wish to reestablish connections (mappings) to resources with the NET USE command. Login scripts are set from the User Manager. You cannot set a login script for a group, but the User Manager tool allows you to select all users in a group and then you can set them all to have the same login script. Use the 'Select Users' menu item to select the users in a group; then to set the actual script, go to User Properties Dialog, Profiles Button. Login scripts can be defined by individual users or by administrators.</p>
<p>
With Windows NT Advanced Server, each user can also have a user-modifiable or a read-only profile. The profile represents the "state" of the desktop for the user, including groups, what connections to restore, and so on. This is independent of any connections made by logon scripts from Windows NT. To create the profile, use UPEDIT.EXE and then save it as a .USR file for user-modifiable profile, or .MAN file for a mandatory read-only profile. Then from User Manager, set the profiles for the users. The same group restriction as Login Scripts apply. You cannot set it for a group, but the User Manager tool allows you to set for all users in a group. If you do NOT specify a user to use a named profile, that user will have his/her own profile on any machine he or she logs on to. In other words, the user will still have persistent state, but it will be one per machine. This is the default scenario. Note that user profile requires the use of Windows NT Advanced Server.</p>
<p>
As indicated above, the user's profile includes what network connections to reestablish. To make a connection permanent, check the 'Restore at Logon' checkbox when making the connection from File Manager. If using the command line, make sure the PERSISTENT switch is on:</p>
<pre><code>NET USE /PERSISTENT:YES
</code></pre>
<p>
User-modifiable profiles give users the most flexibility, while logon scripts and mandatory profiles give the supervisor the most control.</p>
<h4>Monitoring performance of NWCS and NWLink</h4>
<p>
Both users and administrators can use Performance Monitor, located in the Administrative Tools program group, to monitor the NWLink IPX, NWLink SPX, and NWLink NetBIOS objects. Each of these objects can return information on packets sent and received. Which one you use depends on the application that is using NWLink. For example, if you are interested in data relevant to Windows NT–based networking, use the NWLink NetBIOS object. NWCS uses NWLink IPX. SQL Server uses NWLink SPX.</p>
<h3>Novell's NetWare Client for Windows NT</h3>
<p>
Novell's NetWare Client for Windows NT is another tool providing access to NetWare servers. As of October 1993, NetWare Client for Windows NT is approaching beta-level. Although it is a 32-bit Windows NT–based application, Novell has chosen not to use native Windows NT capabilities such as its built-in IPX/SPX protocol (NWLink) or its NDIS layer. (NDIS enables communications capabilities to work well with other Windows NT–based networking software, and provides a very wide range of device driver support under Windows NT.)</p>
<p>
<img src="nwinteg_6.gif" border=0></p>
<p class=label>
<b>Figure 6. NetWare Client for Windows NT architecture</b></p>
<p>
The NetWare Client for Windows NT includes a printer provider in user-mode memory (which allows the Windows NT printer system to use a NetWare server's printer), as well as the NetWare Redirector, the NetWare Provider, and the ODINSUP converter device driver.</p>
<h4>NetWare Redirector</h4>
<p>
The NetWare Redirector, along with the NetWare Provider, supports file and print services from NetWare Client for Windows NT, NetWare 2.x, 3.x, and 4.x servers. The Redirector can support an unlimited number of connections. The auto-reconnect feature is also supported so that users don't need to remember previously established connections.</p>
<p>
Like the default Windows NT Redirector, the NetWare Redirector is implemented as a file system driver. This allows the NetWare Redirector to access to the other file system drivers such as FAT and NTFS. As of this writing, it is not clear to what extent Windows NT file system services, such as cache management, will be effectively utilized by the NetWare Client. Readers interested in using the NetWare Client should verify with Novell the feature set and functionality currently available.</p>
<p>
The Redirector communicates with transport protocols through the Transport Device Interface (TDI). The NetWare Client for Windows NT supports both IPX and SPX II protocols. Unlike the default protocols provided with Windows NT (including TCP/IP, NBF, and DLC), the IPX and SPX protocols use the Open Device Interface (ODI) in place of NDIS. Therefore, not all the Windows NT–supported network adapter cards will be supported by the NetWare client.</p>
<h4>NetWare Provider</h4>
<p>
NetWare Provider resides in user mode and provides an interface for user interaction with the network. This component creates extensions in File Manager, allowing users to manage connections and mappings made with NetWare server. NetWare Provider also allows users to browse NetWare resources on the network. </p>
<p>
NetWare Provider creates extensions in Control Panel, allowing users to collect information about connections and to manage NetWare Client for Windows NT servers. NetWare Provider works with the MPR to accept and run WNet API calls from Win32 and Windows–based 16-bit applications.</p>
<p>
NetWare Provider communicates with the Win32 subsystem via the Multiple Provider Router (MPR). Programmatic interfaces for the MS-DOS, Windows 16-bit, and OS/2 environments are also provided. </p>
<p>
<b>ODINSUP Converter</b></p>
<p>
To allow NDIS-based protocol stacks access to the network adapter card via the ODI MAC-level driver, the NetWare Client for Windows NT provides a converter driver called ODINSUP. With this device driver, users can simultaneously run NetWare Client for Windows NT and TCP/IP, NBF or DLC on the same network adapter card.</p>
<p>
<img src="nwinteg_7.gif" border=0></p>
<p class=label>
<b>Figure 7. ODI and ODINSUP converter</b></p>
<p>
As mentioned previously, the IPX and SPX protocols provided with the NetWare Redirector use ODI to communicate to the network adapter card. Since only one device driver can be bound to a network adapter card at a time, this presents a problem for users who want to use both the NetWare Redirector with IPX/SPX to communicate with NetWare servers and the default TCP/IP protocol stack to communicate with UNIX® hosts. To allow this type of configuration, a converter driver, ODINSUP, is provided with the NetWare Redirector. This driver translates from NDIS to ODI and vice versa. This allows NDIS protocol drivers to be bound to network adapter cards via ODI-compliant MAC-level device drivers.</p>
<h3>Using Windows NT as an NCP Gateway</h3>
<p>
Windows NT can be configured with the ability to reshare redirected drives that point to networks that are not Windows-based. In other words, logical drives on a Windows NT–based machine that are connected to remote resources such as NetWare servers can be reshared via the built-in server capabilities in Windows NT. This capability allows Windows NT to act as a nondedicated gateway to foreign file systems for any SMB-based client (including Windows for Workgroups, Windows NT, and MS-DOS–based LAN Manager clients).</p>
<h4>Configuring the gateway</h4>
<p>
Windows NT can serve as a gateway between SMB-based networks and NCP-based networks. In the example below, both Windows (LAN Manager) clients as well as Windows for Workgroups–based clients can easily access remote NetWare-based file and print services via the Windows NT–based gateway machine.</p>
<p>
<img src="nwinteg_8.gif" border=0></p>
<p class=label>
<b>Figure 8. Windows NT as an NCP gateway</b></p>
<p>
To enable resharing of redirected drives, use regedt32.exe and navigate down the Registry tree to the key:</p>
<pre><code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\LanManServer\Parameters
</code></pre>
<p>
At this location, add the EnableSharedNetDrives variable (of type REG_DWORD) and set its value to 1. Then reboot the machine (or stop and restart the Server service). This will enable resharing of redirected drives.</p>
<h4>Benefits and functionality</h4>
<p>
This scenario provides a number of capabilities and benefits to customers:
<ul type=disc>
<li>
Users of networked Windows operating systems can access existing applications and data on NetWare networks without having to replicate the applications or data on an SMB-based server.<br><br></li>
<li>
Access to NetWare servers can be provided at remote locations by locating the Windows-based network and gateway at remote sites. In a NetWare-only network, NetWare servers have to be located at each site (which is more expensive and more difficult to maintain) because NetWare requires local authentication of users before those users can access resources across a WAN.<br><br></li>
<li>
Users of networked Windows operating systems can seamlessly print to NetWare-based printer networks (both server-attached printers or remote print servers).<br><br></li>
<li>
Administration of the Windows-based network is easier than NetWare-based networks. Expanding a NetWare network via this method provides both access to existing resources and simplified network administration. (Users can be added just once to the Windows-based network, and do not need separate account administration on the remote NetWare servers.)<br><br></li>
<li>
Users get access to the Windows NT built-in Remote Access Service (RAS). RAS is a much more cost-effective and high-performance solution than NetWare's Access Server, and does not require a dedicated machine. RAS is especially good at supporting remote users of Windows-based applications.<br><br></li>
<li>
The Windows NT–based computer functions as a true nondedicated gateway. While performing its gateway function, it still serves as a secure and powerful workstation for MS-DOS, 16-bit, and 32-bit Windows-based applications.</li>
</ul>
<h4>NCP server capabilities</h4>
<p>
In this section, we have concentrated on the use of Windows NT as a client to NetWare servers for file and print services. Several third parties are working on add-ons for Windows NT that will provide NCP server capabilities as well, enabling Windows NT to act as a file and print server for <i>existing NetWare clients</i>. This will enable Windows NT to provide a true superset of NetWare functionality, combining superior application server capabilities as well as NetWare-compatible file and print services. As of this writing, Beame and Whiteside (Toronto, Canada) is about to enter beta testing for its NCP server.</p>
<h3>Summary</h3>
<p>
This section has shown how customers can deploy Windows NT on their advanced desktops, while retaining access to existing data or applications that may reside on in-place NetWare servers. It has also discussed how Windows NT–based clients can act as gateways from Windows SMB-based networking to NetWare NCP-based networking.</p>
<h2>Windows for Workgroups 3.11 as a Client in NetWare Environments</h2>
<p>
Windows for Workgroups 3.11 features improved operability and compatibility with Novell NetWare environments. This section discusses the improved support and describes special information to assist in configuring and integrating Windows for Workgroups with Novell NetWare.</p>
<p>
In an existing NetWare environment where Windows 3.1 is being used along with the NetWare client software, the incorporation of Windows NT and Windows NT Advanced Server requires that the Windows-based workstation run Microsoft network client software to access resources on a computer running Windows NT. Windows for Workgroups 3.11 is a compelling platform to use in this environment as it requires only approximately 5 KB of conventional memory to support concurrent connectivity to both NetWare and Windows NT Advanced Server servers over the memory requirements used by Windows 3.1 and the NetWare client software. The small memory footprint due to the 32-bit networking components allows MS-DOS–based machines to continue to access their NetWare resources, and also to leverage the computing power and server-platform for client-server applications that Windows NT Advanced Server offers.</p>
<h3>Overview of Enhancements to Novell NetWare Support</h3>
<p>
Windows for Workgroups 3.11 greatly enhances the interoperability with Novell NetWare over the support provided by Windows for Workgroups 3.1. The additional support for integrating with NetWare includes the following.</p>
<p>
<b>Improved NetWare network adapter card driver support</b>
<ul type=disc>
<li>
The ability to install Windows for Workgroups networking components on top of Open Datalink Interface (ODI) network adapter card driver<br><br></li>
<li>
The ability to install Windows for Workgroups networking components on top of IPX monolithic protocol stack (IPX.COM)<br><br></li>
<li>
Support for Windows for Workgroups and NetWare interoperability when using ArcNet </li>
</ul>
<p>
<b>Improved network redirector support</b>
<ul type=disc>
<li>
Support for running Windows for Workgroups in conjunction with the NetWare 3.x or 4.x workstation shell</li>
</ul>
<p>
<b>Improved networking support and functionality</b>
<ul type=disc>
<li>
Support for Windows for Workgroups network services over IPX, allowing Windows for Workgroups–based computers to interoperate across an IPX router<br><br></li>
<li>
32-bit protected-mode implementation of an IPX/SPX-compatible protocol, providing network connectivity to other Windows for Workgroups 3.11-based computers, as well as network connectivity to Windows NT and Windows NT Advanced Server<br><br></li>
<li>
32-bit protected-mode implementation of NetBIOS services over IPX to provide better performance than Novell's real-mode NetBIOS driver while eliminating the conventional memory footprint, including support for Network DDE<br><br></li>
<li>
Connectivity to Windows NT and Windows NT Advanced Server in an IPX environment by using the provided 32-bit IPX/SPX Compatible Transport with NetBIOS (NWLink and NWNBLink) protocol<br><br></li>
<li>
Improved virtualization of the IPX protocol when the 32-bit IPX/SPX compatible protocol provided with Windows for Workgroups is used</li>
</ul>
<h3>32-Bit IPX/SPX-Compatible Transport with NetBIOS</h3>
<p>
Windows for Workgroups 3.11 includes NWLink, a 32-bit IPX/SPX-compatible protocol. NWLink is an NDIS 3.0-compliant protocol allowing Windows for Workgroups 3.11–based workstations to communicate over a routable IPX-compatible protocol.</p>
<p>
Although Windows for Workgroups 3.11 can run natively on a real-mode IPX protocol, the NWLink protocol provides the following additional benefits:
<ul type=disc>
<li>
<b>Improved virtualization of the IPX protocol. </b>When the 32-bit IPX/SPX-compatible protocol is installed, virtualization of the IPX protocol is handled by the NWLink.386 protocol. The NWLink protocol is responsible for ensuring that IPX/SPX traffic is sent to the appropriate process. This improves system stability when using IPX in the Windows environment. Because the NWLink.386 driver handles the virtualization of IPX, it is not necessary to load the Novell VIPX.386 driver.<br><br></li>
<li>
<b>32-bit protected-mode NetBIOS support (installation option). </b>The 32-bit NetBIOS support provider, NWNBLink.386, is compatible with Novell's NetBIOS support driver and includes enhancements to provide improved performance. When the 32-bit NetBIOS driver is installed, the Novell NETBIOS.EXE TSR can be removed, saving approximately 30K of conventional memory.</li>
</ul>
<p>
On a computer configured with the NetWare client software, the NWLink protocol processes all <br>
non-NetWare Core Protocol (NCP) IPX traffic. The Windows for Workgroups components do not process NCP traffic that is used by the NetWare redirector to communicate with a NetWare server for file and printer services. In order to support file and printer services from NetWare servers, the NetWare redirector and real-mode IPX protocol must be loaded.</p>
<p>
The example below illustrates the flow of information from applications running under the Windows for Workgroups environment.</p>
<p>
<img src="nwinteg_9.gif" border=0></p>
<p class=label>
<b>Figure 9. Flow of IPX information when the NWLink protocol is used along with the NetWare redirector and real-mode IPX protocol</b></p>
<p>
A computer can install both protected-mode and real-mode IPX drivers on the same adapter running ODI or NDIS.</p>
<h4>Choosing your IPX/SPX compatible transport </h4>
<p>
Depending on the functionality you want, you should choose the appropriate 32-bit protected-mode implementation of the IPX/SPX Compatible Transport (NWLink) with or without NetBIOS services. The following table provides a matrix showing when the "IPX/SPX Compatible Transport" and when the "IPX/SPX Compatible Transport with NetBIOS" should be installed.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b><br>
Functionality Wanted</b></td>
<td class=label width=26%><b>IPX/SPX Compatible Transport (NWLink)</b></td>
<td class=label width=38%><b>IPX/SPX Compatible Transport with NetBIOS (NWLink/NWNBLink)</b></td>
</tr>
<tr valign=top>
<td width=36%>NetBIOS support</td>
<td width=26%></td>
<td width=38%>X</td>
</tr>
<tr valign=top>
<td width=36%>Connectivity to Windows NT or Windows NT Advanced Server</td>
<td width=26%></td>
<td width=38%>X</td>
</tr>
<tr valign=top>
<td width=36%>Connectivity with Windows for Workgroups</td>
<td width=26%>X</td>
<td width=38%>X<br>
(if Network DDE is wanted)</td>
</tr>
<tr valign=top>
<td width=36%>Network DDE over IPX</td>
<td width=26%></td>
<td width=38%>X</td>
</tr>
</table><br>
<h4>Novell NetWare connectivity</h4>
<p>
Microsoft's IPX/SPX protocol, NWLink, conforms to the IPX specification which dictates for it to provide routable datagram packets. The routable feature of IPX and its implementation across the majority of network environments are the reasons Microsoft implemented an NDIS 3.0 model of this protocol. NWLink can use Novell NetWare servers configured as routers (and other IPX routers) to transfer its packets across LANs to access the resources of other Windows for Workgroups 3.11 computers.</p>
<p>
Since NWLink is protected-mode, Novell NetWare's shell, NETX.EXE, will not load unless a real-mode IPX protocol driver is also installed. NETX.EXE is required to access Novell NetWare's file server resources.</p>
<h3>NetBIOS Services over IPX</h3>
<p>
NetBIOS is a high-level interface used by applications to communicate with other NetBIOS-compliant protocols. The NetBIOS interface is responsible for establishing logical names on the network, establishing connections (called sessions) between two logical names on the network, and supporting reliable data transfer between computers that have established a session.</p>
<p>
Novell provides a TSR NetBIOS driver called NETBIOS.EXE which is a Level 1 NetBIOS provider and consumes approximately 40K of conventional memory. Novell's NetBIOS driver acknowledges each frame received, thus increasing the amount of traffic generated when NetBIOS is used.</p>
<p>
Windows for Workgroups 3.11 provides a 32-bit, protected-mode, NetBIOS driver that provides NetBIOS services on top of IPX, called NWNBLink. NWNBLink is compatible with Novell's NetBIOS support driver and provides enhancements to improve performance when using NetBIOS in conjunction with IPX. These performance enhancements include acknowledgment of previous frames in response frames (called PiggyBackAck). They also include a "sliding window" acknowledgment mechanism. These performance enhancements for NetBIOS are used only when communicating with other computers using the NWNBLink NetBIOS driver, including other computers running Windows for Workgroups 3.11 and Windows NT.</p>
<p>
When Windows for Workgroups supports peer services on top of IPX, NetBIOS is necessary to support Network DDE services. Network DDE uses NetBIOS to communicate between other workstations.</p>
<p>
NWNBLink is required for Windows for Workgroups 3.11-based computers to communicate with Windows NT–based computers that are using the NWLink protocol and NWNBLink support driver. Users of Windows for Workgroups 3.11 must install for IPX/SPX Compatible Transport with NetBIOS. The IPX/SPX protocol option in Windows NT automatically installs the NetBIOS component. </p>
<p>
To add the NWNBLink driver to your system, choose the IPX/SPX Compatible Transport with NetBIOS protocol from the Add Network Protocol dialog box from Network setup. If you do not need NetBIOS services over IPX, choose the IPX/SPX Compatible Transport as the protocol to use.</p>
<p>
By default, the NWNBLink driver is installed in a monolithic IPX configuration when the user selects the IPX Support Driver (Monolithic) with NetBIOS transport from the Add Network Adapter dialog box.</p>
<p>
It is important to understand when it will be necessary to add the NetBIOS layer, NWNBLink, when installing IPX/SPX (or NWLink). The two most common requirements are:
<ul type=disc>
<li>
Connecting to Windows NT servers configured without NetBEUI<br><br></li>
<li>
Using NetBIOS applications, such as Lotus Notes, on a NetWare server</li>
</ul>
<p>
NWNBLink is not necessary for Windows for Workgroups 3.11–based computers to communicate with other Windows for Workgroups 3.11–based computers. The Windows for Workgroups 3.11 redirector and server have additional code that allows them to communicate with the IPX protocol without using NetBIOS.</p>
<h3>Installing Support for Novell NetWare</h3>
<p>
To support Novell NetWare integration with Windows for Workgroups, the workstation on which you are installing Windows for Workgroups should be properly configured to connect to a NetWare server. This requires that the workstation is configured with either the monolithic IPX driver (IPX.COM), or an ODI driver in addition to either a NetWare 3.x or 4.x workstation shell to access file or print services from a NetWare server. Novell recommends that NetWare users use ODI-based drivers rather than the monolithic IPX driver.</p>
<p>
If the workstation is preconfigured with the Novell drivers, the Windows for Workgroups 3.11 setup program will detect these drivers and will automatically configure Novell NetWare support in addition to installing the Windows for Workgroups 3.11 networking components.</p>
<p>
If the workstation is not correctly configured with the necessary Novell drivers, this must be done as described in the NetWare documentation before installing Windows for Workgroups 3.11.</p>
<p>
Note that Windows for Workgroups 3.11 does not support NetWare interoperability using NDIS NIC drivers, nor do any NetWare components ship with Windows for Workgroups 3.11. Information on obtaining the necessary Novell files (or updates for the Novell files) is discussed later in this section.</p>
<h4>Required NetWare support files for Windows</h4>
<p>
In addition to the base Novell NetWare client software, which consists of the NetWare redirector and IPX protocol, there are some additional NetWare support files necessary for the Novell components to work properly in the Windows environment. These files are written and provided by Novell with your NetWare system:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>File(s)</b></td>
<td class=label width=81%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%>netware.drv, netware.hlp</td>
<td width=81%>Windows network driver and associated help file to provide access to network redirector functionality from Windows File Manager.</td>
</tr>
<tr valign=top>
<td width=19%>nwpopup.exe</td>
<td width=81%>NetWare messaging utility. Receives messages or alerts from a NetWare server.</td>
</tr>
<tr valign=top>
<td width=19%>vnetware.386</td>
<td width=81%>Virtual device driver providing virtualization services for NetWare redirector for Windows environment and across MS-DOS virtual machines.</td>
</tr>
<tr valign=top>
<td width=19%>vipx.386</td>
<td width=81%>Virtual device driver providing virtualization services for NetWare IPX protocol for Windows environment and across MS-DOS virtual machines.</td>
</tr>
</table><br>
<p>
When Windows for Workgroups 3.11 is configured to support Novell NetWare in addition to Windows for Workgroups network functionality, Setup checks for these files in the Windows directory. If the files are not found, Setup will prompt the user for a disk or network drive location for these files.</p>
<h4>Obtaining required NetWare and support files</h4>
<p>
If your workstation is not configured with the necessary NetWare client software, or if you don't have the Windows support files that Windows for Workgroups Setup requires to properly configure your workstation, several sources are available from which they may be obtained.</p>
<p>
<i>It is highly recommended that you use the latest version of Novell driver files that are available. </i>As of October 1, 1993, Novell was offering the following files on the Novell Files forum (NOVFILES) on CompuServe®:
<ul type=disc>
<li>
DOSUP7.EXE, dated 8/18/93, containing updated MS-DOS–based client files<br><br></li>
<li>
WINUP7.EXE, dated 8/18/93, containing updated Windows-based client files<br><br></li>
<li>
VLMUP1.EXE, dated 6/29/93, containing updated Virtual Loadable Module (VLM) components (v1.02) to work with NetWare 4.0 and above</li>
</ul>
<h4>Configuring Windows for Workgroups with NetWare</h4>
<p>
If NetWare client software is loaded and running at the time Windows for Workgroups is installed, Setup will detect this and automatically select Novell NetWare as an additional network.</p>
<p>
If the NetWare client software is not running at the time Windows for Workgroups is installed, it is necessary to configure Windows for Workgroups to work in conjunction with the NetWare client software. To do this, choose the appropriate network option to match the version of the Novell NetWare Workstation Shell you are using. Windows for Workgroups supports Workstation Shells version 3.x, and version 4.0 and above.</p>
<p>
<img src="nwinteg_10.gif" border=0></p>
<p class=label>
<b>Figure 10. Windows for Workgroups 3.11 Networks setup dialog box used to configure additional network support.</b></p>
<p>
Once Windows for Workgroups Setup is run and "Novell NetWare (Workstation Shell 3.x)" or "Novell NetWare (Workstation Shell 4.0 and above)" is selected as an additional network (in conjunction with the Microsoft Windows-based network), the network detection code will attempt to determine the NetWare driver model you are using. If it cannot autodetect in your particular configuration, then choose the appropriate selection manually ("IPXODI.COM and LSL.COM (recommended)" or "IPX.COM"). The proper selection is important for installation of the necessary support files for each driver model.</p>
<h3>Installing for Open Datalink Interface Configuration</h3>
<p>
The Open Datalink Interface (ODI) specification was defined by Novell Corporation and Apple Computer Corporation to simplify driver development and to provide support for multiple protocols on a single network adapter. Similar to NDIS in many respects, ODI provides a protocol, a consistent API to communicate with a network adapter card driver, and supports the use of multiple protocols on a network adapter card driver. Novell recommends using ODI-based client software rather than dedicated IPX drivers. To provide the most flexibility in Windows for Workgroups 3.11 for other protocol support along with NetWare integration, ODI drivers should be used.</p>
<p>
<img src="nwinteg_11.gif" border=0></p>
<p class=label>
<b>Figure 11. ODI driver model</b></p>
<p>
ODI consists of three main components:
<ul type=disc>
<li>
The Link Support Layer (LSL), LSL.COM, provides a foundation for network adapter card drivers to communicate with multiple protocol drivers, and for protocol drivers to communicate with multiple network adapter card drivers. LSL.COM performs functions similar to the protocol manager in LAN Manager and Windows for Workgroups 3.1x.<br><br></li>
<li>
The Multiple Link Interface Driver (MLID) is the ODI-compliant network adapter card driver created by the adapter card manufacturer. This component usually identifies the name of the supported adapter in the filename (for example, NE2000.COM for the Novell NE-2000 card).<br><br></li>
<li>
The ODI-compliant version of the IPX/SPX protocol, IPXODI.COM, is used in place of the monolithic IPX.COM driver on a workstation configured with ODI drivers. This serves as the network protocol for communicating between a NetWare client and a NetWare server.</li>
</ul>
<h4>Before installing Windows for Workgroups on ODI drivers</h4>
<p>
It is important that the real-mode ODI IPX network be configured and working properly <i>before</i> installing Windows for Workgroups 3.11. Before installing Windows for Workgroups 3.11, test to confirm that there are no errors when loading LSL.COM, IPXODI.COM, MLID, and NETX.EXE, or when accessing resources on NetWare servers.</p>
<p>
If the NetWare ODI drivers are installed and running on the computer when Windows for Workgroups 3.11 is installed, Setup detects that ODI drivers are being used and will automatically identify the network adapter card and configure Windows for Workgroups to run on top of the ODI drivers.</p>
<p>
If Windows for Workgroups is unable to identify the ODI MLID being used, it may be necessary to manually configure the network adapter. In this case, the appropriate IPXODI Support Driver should be chosen to match the type of network adapter card you are using. For example, if you use Ethernet, choose the "IPXODI Support Driver (Ethernet)" as your network adapter.</p>
<p>
When Windows for Workgroups 3.11 is installed over ODI drivers, the IPX/SPX compatible transport with NetBIOS is installed by default from the Protocol Setup dialog box. This provides the 32-bit implementation of the IPX/SPX compatible transport and loads the NetBIOS service provider support.</p>
<h4>Components of the default IPX ODI stack</h4>
<p>
The driver configuration of Windows for Workgroups 3.11 installed over ODI:</p>
<p>
<img src="nwinteg_12.gif" border=0></p>
<p class=label>
<b>Figure 12. Driver configuration in the default ODI IPX configuration</b></p>
<p>
The driver files used are:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Novell Drivers</b></td>
<td class=label width=65%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%>NE2000.COM—MLID driver</td>
<td width=65%>ODI MLID driver from NIC vendor or Novell </td>
</tr>
<tr valign=top>
<td width=35%>LSL.COM</td>
<td width=65%>Link Support Layer (LSL) driver from Novell</td>
</tr>
<tr valign=top>
<td width=35%>IPXODI.COM</td>
<td width=65%>Real-mode IPX protocol for use with Novell's redirector</td>
</tr>
<tr valign=top>
<td width=35%>NETX.EXE</td>
<td width=65%>NetWare redirector from Novell</td>
</tr>
<tr valign=top>
<td width=35%>VNETWARE.386</td>
<td width=65%>NetWare redirector virtual device driver from Novell</td>
</tr>
<tr valign=top>
<td class=label width=35%><b>Microsoft Drivers</b></td>
<td class=label width=65%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=35%>ODIHLP.EXE</td>
<td width=65%>Real-mode stub for ODI support layer</td>
</tr>
<tr valign=top>
<td width=35%>MSODISUP.386</td>
<td width=65%>NDIS to ODI Mapping Support layer</td>
</tr>
<tr valign=top>
<td width=35%>NDIS.386</td>
<td width=65%>NDIS Support layer</td>
</tr>
<tr valign=top>
<td width=35%>NWLink.386</td>
<td width=65%>32-bit IPX/SPX compatible protocol virtual device driver</td>
</tr>
<tr valign=top>
<td width=35%>NWNBLink.386</td>
<td width=65%>NetBIOS services provider virtual device driver for NWLink </td>
</tr>
<tr valign=top>
<td width=35%>*VNETBIOS</td>
<td width=65%>Virtual device driver for virtualizing NetBIOS services</td>
</tr>
<tr valign=top>
<td width=35%>VREDIR.386</td>
<td width=65%>Windows for Workgroups 3.11 protected-mode redirector</td>
</tr>
<tr valign=top>
<td width=35%>VSERVER.386</td>
<td width=65%>Windows for Workgroups 3.11 protected-mode server</td>
</tr>
</table><br>
<p>
When Windows for Workgroups is installed over ODI, the NetBEUI NDIS 3.0 and IPX/SPX Compatible Transport with NetBIOS protocols are installed by default.</p>
<h4>Windows for Workgroups ODI support files</h4>
<p>
An NDIS 3.0 protocol driver (such as NWLINK.386 or NETBEUI.386) can bind to an ODI driver with the help of two support files:
<ul type=disc>
<li>
MSODISUP.386 is the ODI support layer that maps NDIS 3.0 protocols to an ODI MLID. <br><br></li>
<li>
ODIHLP.EXE is the real-mode stub that allows LSL to complete its binding process in real mode. It acts as a default stack for all frame types.</li>
</ul>
<p>
With LSL 2.01 or later, multiple default stacks, called default chained stacks, are supported. ODIHLP.EXE will bind as a default chained stack on current LSL versions. If another ODI-compliant protocol loads and is registered as a default stack, then ODIHLP.EXE loads after that protocol.</p>
<p>
Make sure that you have the latest NetWare drivers and files, including the latest version of the ODI MLID driver for your network adapter card.</p>
<h3>Installing for Monolithic IPX Configuration</h3>
<p>
The monolithic/dedicated implementation of the IPX protocol, IPX.COM, is used by many of the installed base of NetWare workstations. IPX.COM is called <i>monolithic</i> because it contains the NetWare IPX/SPX protocol stack and the network adapter card driver for communicating with the network adapter in one code module or driver file.</p>
<p>
When Windows for Workgroups is configured to run on top of a monolithic/dedicated IPX driver, NetBIOS is used to support Windows for Workgroups peer services over real mode IPX. Support for peer sharing over IPX requires NetBIOS when using monolithic IPX drivers.</p>
<p>
<img src="nwinteg_13.gif" border=0></p>
<p class=label>
<b>Figure 13. Monolithic IPX model</b></p>
<p>
IPX.COM is generated from the IPX.OBJ file and a particular network adapter card driver file (<i>net</i>_<i>card</i>.OBJ) using the NetWare SHGEN or WSGEN programs. IPX.COM must be configured for each individual workstation based on the individual network adapter card and its hardware configuration (IRQ, I/O address, RAM address in the upper memory area and DMA channel).</p>
<h4>Installing Windows for Workgroups with monolithic IPX</h4>
<p>
It is important that the real-mode monolithic IPX network be configured and working properly <i>before</i> installing Windows for Workgroups 3.11. Confirm first that there are no errors when loading IPX.COM and NETX.EXE or when accessing resources on NetWare servers from MS-DOS.</p>
<h4>Components of the default monolithic IPX stack</h4>
<p>
The driver configuration of Windows for Workgroups running over monolithic IPX:</p>
<p>
<img src="nwinteg_14.gif" border=0></p>
<p class=label>
<b>Figure 14. Driver configuration in the default monolithic IPX configuration</b></p>
<p>
The required driver files are:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>Novell Driver</b></td>
<td class=label width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%>IPX.COM</td>
<td width=75%>Monolithic IPX driver from Novell</td>
</tr>
<tr valign=top>
<td width=25%>NETX.EXE</td>
<td width=75%>NetWare redirector from Novell</td>
</tr>
<tr valign=top>
<td width=25%>VNETWARE.386</td>
<td width=75%>NetWare redirector virtual device driver from Novell</td>
</tr>
<tr valign=top>
<td width=25%>VIPX.386</td>
<td width=75%>NetWare IPX virtual device driver from Novell</td>
</tr>
<tr valign=top>
<td width=25%>Microsoft Drivers</td>
<td width=75%>Description</td>
</tr>
<tr valign=top>
<td width=25%>NWSUP.386</td>
<td width=75%>Supports the Windows for Workgroups network redirector and network server on top of monolithic IPX</td>
</tr>
<tr valign=top>
<td width=25%>NWNBLink.386</td>
<td width=75%>NetBIOS services provider virtual device driver for NetBIOS on top of IPX protocol from Windows for Workgroups 3.11</td>
</tr>
<tr valign=top>
<td width=25%>*VNETBIOS</td>
<td width=75%>Virtual device driver for virtualizing NetBIOS services in Windows and across MS-DOS virtual machines</td>
</tr>
<tr valign=top>
<td width=25%>VREDIR.386</td>
<td width=75%>Windows for Workgroups 3.11 protected-mode redirector</td>
</tr>
<tr valign=top>
<td width=25%>VSERVER.386</td>
<td width=75%>Windows for Workgroups 3.11 protected-mode server</td>
</tr>
</table><br>
<h3>Workstation Configuration Files</h3>
<p>
On each NetWare client, two ASCII configuration files—SHELL.CFG or NET.CFG—are used for the setup and configuration of a workstation's network environment. These are ASCII files specifying custom workstation parameters for NETX, IPX, NetBIOS or the general NetWare environment.</p>
<p>
NetWare began using SHELL.CFG as the configuration file name with monolithic IPX, but now NET.CFG is the preferred file name to use with ODI. If both SHELL.CFG and NET.CFG exist, both are processed (first SHELL.CFG, then NET.CFG). If these files do not exist, default settings are used.</p>
<p>
Since an ODI workstation can have multiple MLIDs and multiple protocols loaded and bound, ODI uses the NET.CFG configuration file to identify the network adapter card and protocol configuration and binding information. NET.CFG for ODI is similar to the PROTOCOL.INI file used for NDIS.</p>
<p>
Monolithic IPX does not require a settings file because there is only one protocol and one NIC driver and they are bound together in a specific way. IPX.COM contains the network adapter card configuration information, including the interrupt and base memory address used by the card.</p>
<p>
Refer to your Novell NetWare documentation for more information regarding processing order and specific settings in the .CFG and MLID files.</p>
<h3>NDIS 2.0 Protocols on ODI Drivers</h3>
<p>
Windows for Workgroups 3.11 provides support for mapping NDIS 3.0 protocols to run on top of ODI; however, support for NDIS 2.0 protocols on top of ODI is not directly provided by Windows for Workgroups. If you want to use NDIS 2.0 in a NetWare environment where ODI drivers are being used, Novell offers the ODINSUP driver to map NDIS 2.0 protocols to ODI network adapter card drivers (MLIDs). The Novell ODINSUP driver allows NDIS 2.0 protocol stacks to run over the ODI LSL and talk to an ODI MLID. For example, the ODINSUP driver can be used to allow Microsoft NDIS-based protocols on top of an ODI configuration.</p>
<p>
<img src="nwinteg_15.gif" border=0></p>
<p class=label>
<b>Figure 15. ODINSUP configuration supporting NDIS 2.0 protocols on ODI drivers</b></p>
<p>
For more information about ODINSUP, see the ODINSUP.DOC file provided as part of the Novell NetWare DOS client software set. For support assistance concerning Novell's ODINSUP.COM, contact Novell Technical Support.</p>
<h3>Summary</h3>
<p>
Windows for Workgroups 3.11 offers the complete solution for customers who need both Microsoft Windows 3.1 and networking software for their PCs. This section has shown how Windows for Workgroups 3.11 integrates into a mixed network environment, allowing users to access file and print resources on existing Novell NetWare servers.</p>
<h2>Windows NT as an Application Server in NetWare Environments</h2>
<p>
The ability to access data that resides on different hardware platforms, different operating systems, different network operating systems, and different database management systems (DBMSs) is a fundamental need for client-server computing. Microsoft Windows NT is an ideal platform for DBMSs. This platform provides a high level of performance, scalable hardware, and a secure foundation for distributed computing. Features such as preemptive multitasking, multithreading, fault tolerance, and security help meet the growing demands of client-server computing.</p>
<p>
Windows NT provides a full 32-bit architecture with a flat memory model, which does away with managing memory in segments, for increased performance. Windows NT and the Win32 API allow for programs, such as DBMSs, that deal with large amounts of data by providing access to 2 GB of address space. The operating system and other processes have their own protected memory spaces so that one process cannot bring another process down.</p>
<p>
With preemptive scheduling and an asynchronous input/output model, the operating system, rather than the application, is in control. Windows NT automatically gives high priority to applications running in the foreground and to processes receiving input or completing input/output operations. Multiple threads of execution allow applications to be more powerful and responsive. An application does not have the ability to tie up the system, even when the application is loading, processing data, printing, and so on. The system is always available to the user.</p>
<p>
Windows NT was designed from the ground up to support symmetric multiprocessing. The operating system can allocate application and system threads within the same process to different processors. The net benefit is improved performance and transparent scalability of your corporate DBMS.</p>
<p>
These features within Windows NT provide a powerful platform for mission-critical database applications. Each DBMS for Windows NT implements this architecture differently and may or may not use all of the features available within Windows NT.</p>
<p>
The purpose of this section is to discuss specifically how client workstations communicate with Windows NT databases—including details about MS-DOS, Windows, Windows NT, and OS/2–based client workstations.</p>
<p>
At least 16 database vendors have announced support for the Windows NT platform. Client-server databases that are either available now or will be soon available for Windows NT include Microsoft SQL Server, Ingres Server, Oracle® Server, Informix® Server, SQLBase®, and Versant. This section provides a general guideline for implementing client-server databases using Windows NT in a NetWare environment by using Microsoft SQL Server as an illustrative example. For detailed information on how to integrate other database servers into a NetWare environment, contact the vendor of the database server you wish to use.</p>
<h3>SQL Server for Windows NT</h3>
<p>
Microsoft SQL Server version 4.2 for Windows NT extends intelligent client-server database management to your corporate network, offering a powerful platform for the delivery of critical business applications. Microsoft SQL Server has been completely reengineered for Windows NT, including the following enhancements and performance improvements that were not part of the previous versions of SQL Server: 
<ul type=disc>
<li>
A new Symmetric Server architecture supports symmetric multiprocessing, dynamically balancing the processor load across multiple CPUs and providing a preemptive multithreaded design for improved performance and reliability.<br><br></li>
<li>
SQL Server fully utilizes the advanced capabilities of Windows NT, including preemptive scheduling, virtual paged memory management, symmetric multiprocessing, and asynchronous I/O. Integration with the Windows NT operating system improves operational control and ease of use. Administrators can manage multiple SQL Servers across distributed networks using graphical tools for configuration, security, database administration, performance monitoring, event notification, and unattended backup.<br><br></li>
<li>
Unified logon security with Windows NT security means that users do not have to maintain separate SQL Server logon passwords and or separately log on to SQL Server. SQL Server applications benefit from Windows NT security features, including encrypted passwords, password aging, domain-wide user accounts, and Windows-based user administration.<br><br></li>
<li>
Windows NT provides an ideal platform for building powerful 32-bit client-server applications for Microsoft SQL Server. The <i>SQL Server Programmer's Toolkit for Windows NT</i> contains a 32-bit Win32-based version of DB-Library™.<br><br></li>
<li>
SQL Server for Windows NT is fully interoperable with Microsoft SQL Server for OS/2 as well as SYBASE® SQL Server for the UNIX and VMS® operating systems. Existing applications will work unchanged. SQL Server on OS/2 database file formats are identical, allowing easy migration of corporate data to the Windows NT platform. SQL Server for Windows NT operates across all corporate network environments, including Novell NetWare and TCP/IP-based LANs.</li>
</ul>
<p>
The key to enterprise interoperability is network independence. SQL Server for Windows NT can support clients communicating over multiple heterogeneous networks simultaneously, with no need for additional integration products. SQL Server communicates on named pipes (over either NetBEUI or TCP/IP network protocols) with Windows, Windows NT, MS-DOS, and OS/2–based clients. </p>
<p>
In addition, SQL Server for Windows NT can simultaneously support TCP/IP Sockets for communication with Macintosh®, UNIX, or VMS clients and SPX Sockets for communications in a Novell NetWare environment. SQL Server for Windows NT is planned to support Banyan® VINES® in the first quarter of 1994. Microsoft SQL Server for Windows NT leverages the power, ease of use, and scalability offered by the Windows NT operating system to manage large databases for mission-critical applications.</p>
<h3>Data Access Mechanisms</h3>
<p>
The key interfaces used to access data in a Microsoft SQL Server client-server environment include application programming interfaces (APIs), data stream protocols, interprocess communication (IPC) mechanisms, and network protocols.</p>
<p>
<img src="nwinteg_16.gif" border=0></p>
<p class=label>
<b>Figure 16. SQL Server for Windows NT architecture</b></p>
<h4>Application programming interfaces</h4>
<p>
Each back-end database typically has its own API through which it communicates with clients. A client application needing to access multiple back-end databases must be able to transform requests and data transfers into each of the corresponding API interfaces. Client-server applications communicate with SQL Server for Windows NT through two APIs—Open Database Connectivity (ODBC) and DB-Library.</p>
<p>
ODBC is an API for generic database connectivity for Windows, Windows NT, and, in the future, Macintosh platforms. It is designed to be a general-purpose call-level interface (CLI) for any database back-end, including nonrelational DBMSs. The ODBC interface provides the needed functionality for applications that must access multiple DBMSs from different vendors. Application developers can develop, compile, and ship an application without targeting a specific DBMS, provided that DBMS-specific features are not used. ODBC ensures interoperability by forcing all clients to adhere to a standard interface. The ODBC driver automatically interprets a command for a specific data source.</p>
<p>
DB-Library is a set of API calls designed specifically for SQL Server and allows applications to interact with SQL Server. DB-Library provides connectivity between multiplatform clients and SQL Server. DB-Library provides the needed functionality for applications requiring client support for MS-DOS and/or OS/2. DB-Library is also equivalent to the SYBASE Open Client interface on UNIX, VMS, and Macintosh systems.</p>
<h4>Data stream protocols</h4>
<p>
Every DBMS uses a data stream protocol that enables the transfer of requests, data, status, error messages, and so on, between the DBMS and its clients. This can be thought of as a "logical" protocol. The API uses interprocess communication (IPC) mechanisms supported by the operating system and network to package and transport this logical protocol. </p>
<p>
The Microsoft SQL Server data stream protocol is called Tabular Data Stream (TDS). TDS is also used by Open Data Services and SYBASE software to transfer requests and responses between the client and the server. TDS is a logical data stream protocol and must be supported by physical network IPC mechanisms. The Net-Library architecture (described later in this chapter) provides a method of sending TDS across a physical network connection.</p>
<p>
Each database's data stream protocol is typically a proprietary one that is developed and optimized to work exclusively with that DBMS. This means that an application accessing multiple databases must be able to use multiple data stream protocols. Using ODBC helps resolve this problem for application developers.</p>
<p>
With ODBC, the data stream protocol differences are resolved at the driver level. That is, each driver emits the data stream using the protocol established by the server. The SQL Server ODBC driver emits TDS directly—it does not translate or otherwise encapsulate DB-Library function calls.</p>
<p>
Efforts are underway to establish common data stream protocols. IBM® DRDA architecture has defined a data stream protocol known as FD:OCA. The International Standard Organization (ISO) has proposed another data stream standard, RDA (ISO RDA).</p>
<h4>Interprocess communication mechanisms</h4>
<p>
The choice of IPC mechanism is constrained by the operating system and network being used. For example, Microsoft SQL Server on OS/2 uses named pipes as its IPC mechanism, SYBASE SQL Server on UNIX uses sockets over TCP/IP or IPX/SPX sockets, and SYBASE on VMS uses DECnet™ Sockets. In a heterogeneous environment, multiple IPC mechanisms may be used on a single computer.</p>
<p>
SQL Server for Windows NT has the ability to communicate over multiple IPC mechanisms. SQL Server communicates on named pipes (over either NetBEUI or TCP/IP network protocols) with Windows, Windows NT, MS-DOS, and OS/2–based clients. It can also simultaneously support TCP/IP Sockets for communication with Macintosh, UNIX, or VMS clients and SPX sockets for communications in a Novell NetWare environment. SQL Server for Windows NT is planned to support Banyan VINES in the first quarter of 1994 as well.</p>
<h4>Network protocols</h4>
<p>
A network protocol is used to transport the data stream protocol over a network. It can be considered as the "plumbing" that supports the IPC mechanisms used to implement the data stream protocol, as well as supporting basic network operations such as file transfers and print sharing.</p>
<p>
A back-end database can reside on a LAN that connects it with the client application, or it can reside at a remote site, connected via a wide-area network (WAN) and/or gateway. In both cases, it is possible that the network protocol(s) and/or physical network supported by the various back-end databases are different from that supported by the client or each other. In these cases, a client application must use different network protocols to communicate with various back-end databases.</p>
<p>
The network transport protocols supported within SQL Server for Windows NT include NetBEUI, TCP/IP, SPX/IPX using NWLink, and VINES IP.</p>
<h3>Net-Library Architecture</h3>
<p>
Microsoft SQL Server Net-Library architecture for client-server applications is based on the Net-Library concept that abstracts the client and server applications from the underlying network protocols being used. The figure below shows how SQL Server and related products can be accessed from practically any network environment.</p>
<p>
<img src="nwinteg_17.gif" border=0></p>
<p class=label>
<b>Figure 17. Net-Library architecture</b></p>
<p>
The Net-Library architecture provides a method of sending TDS (used by Microsoft SQL Server, Open Data Services, and SYBASE) across a physical network connection. The Net-Library architecture also provides a transparent interface to the DB-Library APIs and the SQL Server driver for ODBC.</p>
<p>
Net-Libraries are linked dynamically at run-time. With the Microsoft Windows NT, Windows, and OS/2 operating systems, Net-Libraries are implemented as DLLs, and multiple Net-Libraries can be loaded simultaneously. With MS-DOS, Net-Libraries are implemented as terminate-and-stay-resident (TSR) programs, and only one can be loaded at a time. </p>
<p>
The Net-Library architecture can be divided into two components—server-side Net-Libraries and client-side Net-Libraries.</p>
<h4>Server-Side Net-Library architecture</h4>
<p>
Server-side Net-Libraries were first introduced with Microsoft SQL Bridge. They are also used by Network Manager in the <i>Microsoft SQL Server Network Integration Kit for Novell NetWare Networks</i> and in the <i>Microsoft SQL Server Network Integration Kit for Banyan VINES Networks</i>. SQL Server on the Windows NT platform uses this same architecture and has the ability to accept client requests across multiple network protocols at the same time.</p>
<p>
The diagram below illustrates the integration of server-side Net-Libraries with the various SQL Server–based products on the Windows NT platform. The default Net-Library is named pipes. </p>
<p>
<img src="nwinteg_18.gif" border=0></p>
<p class=label>
<b>Figure 18. Server-Side Net-Library Architecture on the Windows NT platform</b></p>
<p>
When a server-side Net-Library is loaded by an application such as SQL Server for Windows NT, Net-Library implements a network-specific way of establishing communication with clients and, in some cases, registers itself on the network. SQL Server looks at the Windows NT Registry to determine which Net-Library to load on startup and which parameters to pass them. The SQL Server Monitor process also uses server-side Net-Library to communicate with clients and to search the Registry (HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQL Server) for network-specific parameters.</p>
<p>
At startup, SQL Server will search for values of the <b>ListenOn </b>and <i>connection_string</i> Registry entries under the Server subkey. Each <i>connection_string</i> Registry value is read and passed on to the associated Net-Library (for example, named pipes) that is listed in the <b>ListenOn </b>field in the Server subkey. Each Net-Library acts upon the <i>connection_string</i> differently.</p>
<p>
By default, SQL Server always listens on named pipes, allowing (at minimum) access from client applications running on the same machine. If desired, named pipes access can be turned off by using the Registry Editor to explicitly delete the named pipes entry from the SQL#Server\Server subkey.</p>
<p>
Remote stored procedure calls and the Microsoft SQL Administrator tool also use the DB-Library/Net-Library architecture under Windows NT.</p>
<h4>Client-side Net-Library architecture</h4>
<p>
When a call is made to open a connection to SQL Server, the API involved (DB-Library or the SQL Server driver for ODBC) determines which client-side Net-Library should be loaded to communicate with SQL Server or Open Data Services. (This is described in more detail below.) </p>
<p>
The diagram below shows client-side Net-Libraries used to communicate with SQL Server for Windows NT on the server side.</p>
<p>
<img src="nwinteg_19.gif" border=0></p>
<p class=label>
<b>Figure 19. Client-side Net-Library architecture</b></p>
<h3>Configuration of the Net-Library Architecture</h3>
<p>
The Net-Library DLLs and IPCs for each network protocol supported by SQL Server for Windows NT are listed in the following table. These files are installed automatically using the SQL Server Setup utility on the server side and the SQL Client Configuration Utility on the Windows, Windows NT, and OS/2–based client side. The AUTOEXEC.BAT file is used to load the MS-DOS client Net-Library.</p>
<p>
The server-side Net-Library is used by SQL Server and ODS applications. If SQL Server and ODS are on the same computer, ODS uses an alternate pipe.</p>
<table border=1 cellpadding=5 cols=6 frame=below rules=rows>
<tr valign=top>
<td class=label width=11%><b><br>
Interface</b></td>
<td class=label width=12%><b><br>
Protocol</b></td>
<td class=label width=17%><b>Clients Supported</b></td>
<td class=label width=23%><b><br>
Client Net-Lib</b></td>
<td class=label width=17%><b><br>
Server Net-Lib</b></td>
<td class=label width=20%><b><br>
Comments</b></td>
</tr>
<tr valign=top>
<td width=11%>Named Pipes</td>
<td width=12%>NetBEUI or TCP/IP</td>
<td width=17%>LAN Manager, Windows for Workgroups, and Windows NT–based clients</td>
<td width=23%>DBNMPIPE.EXE (MS-DOS), DBNMP3.DLL (Windows), DBNMPP.DLL (OS/2), DBNMPNTW.DLL (Windows NT)</td>
<td width=17%>SSNMPNTW.DLL</td>
<td width=20%>This network setup will provide SQL Server Integrated Security with the Windows NT User Account Database.</td>
</tr>
<tr valign=top>
<td width=11%></td>
<td width=12%>NWLink</td>
<td width=17%>Windows NT–based clients</td>
<td width=23%>DBNMPNTW.DLL (Windows NT)</td>
<td width=17%>SSNMPNTW.DLL</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=11%>Windows Sockets</td>
<td width=12%>TCP/IP</td>
<td width=17%>UNIX and MAC clients</td>
<td width=23%>Part of SYBASE Open Client</td>
<td width=17%>SSMSSOCN.DLL</td>
<td width=20%>This configuration provides multiple vendor integration.</td>
</tr>
<tr valign=top>
<td width=11%></td>
<td width=12%></td>
<td width=17%>PC clients: e.g., FTP PC/TCP, Novell LAN WorkPlace, Sun PC-NFS, DEC® Pathworks™, TCP/IP for LAN Manager</td>
<td width=23%>SYBASE Net-Libraries</td>
<td width=17%>SSMSSOCN.DLL</td>
<td width=20%>with SYBASE. The corresponding Net-Libraries are available from SYBASE.</td>
</tr>
<tr valign=top>
<td width=11%>Windows Sockets</td>
<td width=12%>NWLink (IPX/SPX)</td>
<td width=17%>NetWare 3.10+ (MS-DOS and Windows) and OS/2 clients</td>
<td width=23%>DBMSSPX.EXE (DOS), DBMSSPX3.DLL (Windows), DBMSSPXP.DLL (OS/2)</td>
<td width=17%>Novell: SSMSSPXN.DLL</td>
<td width=20%>The servername is registered with the Novell bindery service.</td>
</tr>
<tr valign=top>
<td width=11%></td>
<td width=12%></td>
<td width=17%>NWLink</td>
<td width=23%>DBMSSPXN.DLL (Windows NT)</td>
<td width=17%></td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=11%>Vines Sockets</td>
<td width=12%>Vines IP</td>
<td width=17%>Banyan Vines, 4.11 (rev.5)+ and Windows NT clients</td>
<td width=23%>DBMSVINE.EXE (DOS), DBMSVIN3.DLL (Windows), DBMSVINP.DLL (OS/2), DBMSVINN.DLL (Windows NT)</td>
<td width=17%>Banyan VINES: SSMSVINN.DLL</td>
<td width=20%>Registers to Street talk as the given service. Banyan VINES will automatically handle look-ups of partial names or nicknames.</td>
</tr>
</table><br>
<p>
Using NetBEUI as the network protocol, the client workstation always uses a broadcast to locate the SQL Server(s) on the network. Also, with TCP/IP the client workstation always uses a broadcast to locate the SQL Server(s), provided that the servername and IP address are not located in the LMHOST file on the workstations.</p>
<h4>Configuring SQL Server for NetWare clients</h4>
<p>
As shown by the preceding table, in a Novell NetWare environment, SQL Server for Windows NT requires NWLink (installed through Network Control Panel) and the SSMSSPXN.DLL. This DLL is automatically installed on the server side, with the appropriate Registry entries, when you use SQL Server Setup and choose Change Network Support, then NWLink IPX/SPX.</p>
<p>
The following is a sample of what is added to the Registry for SQL Server for Windows NT on a Novell Network:</p>
<pre><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer\Server
ListenOn: REG_MULTI_SZ: SSNMPNTW, \\.\pipe\sql\query SSMSSPXN, CORAL (<i>computername</i>)
</code></pre>
<p>
Windows and OS/2-based client workstations require the Novell NetWare 3.10 or higher level of IPX. The SQL Client Configuration Utility that ships with SQL Server for Windows NT is used to specify the default network that the Windows and OS/2-based clients will use. By choosing Novell IPX/SPX, the required DBMSSPX3.DLL is automatically installed on the Windows-based client side, and BMSSPXP.DLL is installed on the OS/2 client side. This will add the appropriate entries in the WIN.INI file or the OS/2.INI file, respectively.</p>
<p>
The following is a sample of what is added to the WIN.INI for Windows-based clients communicating with SQL Server for Windows NT on a Novell Network:</p>
<pre><code>[SQLSERVER]
DSQUERY=DBMSSPX3
</code></pre>
<p>
MS-DOS-based clients require the same level of IPX that the Windows-based workstations do. DBMSSPX.EXE must be installed on the MS-DOS computer. This TSR can be loaded either manually or from AUOTEXEC.BAT.</p>
<p>
Windows NT–based client workstations use NWLink, which is installed through Network Control Panel. After installation, use the Client Configuration Utility to specify that the default network is Novell IPX/SPX. This, in turn, installs the required DBMSSPXN.DLL on the Windows NT–based client side.</p>
<p>
The following is a sample Registry entry for Windows NT–based clients communicating with SQL Server for Windows NT on a Novell Network:</p>
<pre><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SQLServer\Client\ConnectTo
DSQUERY: REG_SZ: DBMSSPXN
</code></pre>
<h3>Summary</h3>
<p>
This section has shown how Windows NT Advanced server can be integrated into existing environments to serve as a database server, while using existing NetWare servers for NOS (file and print) functions. Customers can use their existing MS-DOS, Windows (all types), and OS/2–based clients to communicate with database servers running on Windows NT Advanced Server using a variety of common communications mechanisms.</p>
<h2>Conclusion</h2>
<p>
Windows NT–based computers can easily be integrated into a predominantly NetWare environment, making the benefits of an advanced operating system available to an existing network. This paper has presented an overview of how Windows NT–based computers can effectively function either as a client of NetWare servers or as an application server for NetWare.</p>
</BODY>
</HTML>
