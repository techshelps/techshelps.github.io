<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Integrated Development Environment (IDE) Integration</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_ide"></a>Integrated Development Environment (IDE) Integration</h1>
<p>
Microsoft Corporation</p>
<p>
Updated September 3, 1996</p>
<h2>Abstract</h2>
<p>
Microsoft® Visual SourceSafe™ version control software provides integration with the Microsoft Visual Basic® Enterprise and Professional Edition programming systems and with the Microsoft Developer Studio, so you can enjoy the advantages of source code control—team coordination and version tracking—without having to leave your IDE.</p>
<h2>Microsoft Visual SourceSafe and Microsoft Visual Basic</h2>
<p>
Microsoft Visual Basic is rapidly moving from being a simple stand-alone development tool to being a powerful client-server corporate application development environment. And with that growth come new needs: the need to coordinate large teams of programmers working together; the need to track Visual Basic code like any other mission-critical data that runs a company; in short, the need for version control.</p>
<p>
At the same time, of course, Visual Basic has built its reputation around an interface that is easy to learn and easy to use. If version control adds a new burden to developers, many of them simply will not use it and there will be no benefits at all! That's why checking forms in and out of Visual SourceSafe has to be just as easy as modifying those forms in Visual Basic. And that's why Microsoft Visual SourceSafe version 4.0 integrates into the Visual Basic integrated development environment (IDE) (Figure 1).</p>
<p>
<img src="ide_1.gif" border=0></p>
<p class=label>
<b>Figure 1. Microsoft Visual SourceSafe integrates into Microsoft Visual Basic</b></p>
<p>
Without leaving Visual Basic, you can check a form out, modify that form, and check it back in. Without ever looking at the Visual SourceSafe Explorer, you can view the changes you made to a form, view the history of a basic module, or even see a list of all the projects that are sharing a Visual Basic class. And of course, if you check out an .FRM file, the .FRX file "tags along" automatically: so, as always, you don't need to worry about it.</p>
<p>
Of course, the Visual SourceSafe Explorer is still available for advanced features such as branching and merging. But most users will never have to leave Visual Basic to enjoy all the benefits of coordinated team development and version tracking.</p>
<h2>Visual SourceSafe and Microsoft Developer Studio</h2>
<p>
The Microsoft Developer Studio is the new IDE that combines award-winning products such as Microsoft Visual C++®, Visual Test, and Microsoft Fortran PowerStation. Users of these products not only enjoy the fastest path to Microsoft Windows® development, powerful automated testing, and Microsoft technical information, but they also receive the benefit of using all these products inside one integrated shell (Figure 2). And now, with Visual SourceSafe 4.0, the ability to check your source files in and out is literally "at your fingertips" in that same common shell!</p>
<p>
<img src="ide_2.gif" border=0></p>
<p class=label>
<b>Figure 2. The Microsoft Developer Studio integrated shell</b></p>
<p>
As an example, imagine running the Visual C++ debugger to track down a problem reported by a tester or customer. From the <b>Tools</b> menu, you choose <b>Get</b> from <b>SourceControl</b> and get all the files in the project just to make sure you are up-to-date with everyone's changes. Then you debug and find the problem. You right-click the file and choose <b>Check</b> <b>Out</b> to tell Visual SourceSafe you will be making changes. You edit the file, fix the problem, and use the right mouse-button again to choose <b>Check</b> <b>In</b> and publish your changes for the rest of the group.</p>
<p>
But why was this problem not caught? Switching to Microsoft Visual Test, you use the Visual SourceSafe <b>Get</b> command again to get the test scripts, and you discover a missing test case. So you create the new test case and add it to Visual SourceSafe along with a comment explaining the bug that this test will trap. During this entire session, you have not left the Developer Studio window.</p>
<p>
Visual SourceSafe 4.0 integrates with Developer Studio and with Visual Basic 4.0 Professional and Enterprise Editions. Visual SourceSafe is not a part of most of these products (it is a part of Visual Basic Enterprise Edition), and must be acquired separately. Visual SourceSafe can also be used with many other development environments, including (but not limited to) the Microsoft Visual FoxPro™ database management system and Microsoft Office, by performing all Visual SourceSafe commands directly in the Visual SourceSafe Explorer.</p>
</BODY>
</HTML>
