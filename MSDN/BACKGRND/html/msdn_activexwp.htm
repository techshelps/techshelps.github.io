<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft ActiveX: Developing Exciting Content and Applications for the Internet and Intranets</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_activexwp"></a>Microsoft ActiveX: Developing Exciting Content and Applications for the Internet and Intranets</h1>
<p>
Microsoft Corporation</p>
<h2>Introduction</h2>
<p>
While the World Wide Web currently provides a way to see documents across the world, its future capabilities range far beyond this one function. The Web's promise as a mechanism for distributing software will drive the creation of new categories of applications for entertainment, self-improvement, and all types of commerce. Businesses are pursuing these opportunities by setting up Internet sites that provide end users with an engaging interactive experience that attracts and retains "viewership." Many companies are also exploring the use of Web-based technologies to provide internal information and software applications to their employees. Businesses can use internal Webs, also known as <i>intranets</i>, for applications in areas such as software distribution, customer support, human resources, and finance.</p>
<p>
Microsoft® ActiveX™ is a set of technologies that lets you build real business applications for the Internet and intranets that run across multiple platforms. Developers can write such applications using the programming languages C, C++, and Java™ and run these applications across platforms such as the Microsoft Windows® family, Macintosh®, and UNIX. Embracing both Java and OLE object technology, ActiveX provides promising new Internet and intranet capabilities while extending and capitalizing upon existing customer investments.</p>
<p>
For example, a corporate developer can create an application to retrieve employee information by writing a Java applet for the user interface and by using functionality from an existing software component that interfaces with a back-end database. </p>
<p>
With ActiveX, developers and Web producers can create compelling, interactive content with a wide variety of tools from dozens of tool vendors. ActiveX provides interoperability on the client and the server between development tools, authoring tools, database products, and networking technologies. ActiveX embraces Internet standards and moves the Internet beyond static documents to provide users with a more interactive, exciting, and useful experience. ActiveX will give developers and Web producers a rich platform for innovative applications on the Internet, while preserving their investments in applications, tools, and source code.</p>
<p>
Microsoft Internet Explorer 3.0 will debut ActiveX, bringing the power of ActiveX to end users and enabling them to view and run rich, powerful content and applications. Because ActiveX is also supported in Netscape Navigator (although it requires the ActiveX plug-in for Netscape Navigator, available from <a href="http://www.microsoft.com/">http://www.microsoft.com/</a>), producers building ActiveX content can be ensured of the largest possible target audience. </p>
<p>
With ActiveX, the following types of people benefit in these ways:
<ul type=disc>
<li>
<b>End users</b> gain exciting and powerful applications for the Internet and intranets with Internet Explorer.<br><br></li>
<li>
<b>Developers</b> can create powerful applications using existing and new tools and languages. <br><br></li>
<li>
<b>Web producers</b> can create exciting content for the Internet and intranets using simple tools and ensure that their content reaches the widest audience. <br><br></li>
<li>
<b>MIS decision makers</b> gain an open platform that enables choice and leverages existing investments. </li>
</ul>
<h2>What Is ActiveX?</h2>
<p>
The past few years have seen the rapid growth of the Internet with increasing numbers of people using the World Wide Web for document retrieval. At the same time, powerful desktop and server personal computers have become less and less expensive, driving a revolution in productivity for individuals and businesses. ActiveX combines the benefits of the World Wide Web and the personal computer to enable interactive distributed applications and richer communications between users. </p>
<p>
ActiveX also addresses an issue shared by many businesses that are increasingly looking to use Internet-based technologies for internal applications in areas such as software distribution, customer support, human resources, and finance. These applications require a "platform" that provides application developers a rich set of interoperable tools and components coupled with robust networking capabilities to enable seamless communication with Internet resources.</p>
<p>
Microsoft ActiveX is an open integration platform that provides developers and Web producers the fastest and easiest way to create exciting interactive applications and content for the Internet and intranets<i>.</i></p>
<h3>ActiveX Combines the Best of the Personal Computer and the Web</h3>
<p>
Because ActiveX embraces existing desktop technologies, as well as new Web-based technologies such as Java, customers get the best of both the personal computer and the Web. Some specific benefits gained through this combination of technologies are:
<ul type=disc>
<li>
<b>Rich Interactive Content and Applications:</b> ActiveX leverages the full power of the computer to provide unique Web sites and applications. Because of the range of tools, languages, and components supported, Web producers can differentiate content, providing a unique and memorable experience that will attract and retain users.<br><br></li>
<li>
<b>Reach:</b> ActiveX is supported in Internet Explorer and Netscape Navigator. The vast majority of Web users have the capability today (on their desktops) to view and use ActiveX content. Users can run ActiveX applications from different operating systems such as the Windows family of operating systems or the Macintosh. End users, developers, and Webmasters can select hardware architecture from several manufacturers for running ActiveX applications.<br><br></li>
<li>
<b>High-Quality Tools and Enabling Technologies:</b> ActiveX provides developers, end users, and Webmasters a wide choice of existing technologies and applications that can be used for the Internet/intranets as well as new technologies such as Java. Developers get a wide selection of tools and languages to choose from in order to develop Internet/intranet applications. For example, developers can build Internet/intranet applications using Microsoft Visual C++®, Microsoft's Java development tool Visual J++™, Borland C++, Symantec C++, and the next version of Microsoft Visual Basic®. Webmasters can choose from several authoring tools to develop powerful content including applications, while Web producers have a choice of over 1,000 shrink-wrapped components, available today, to add interactivity to their Web sites. <br><br></li>
<li>
<b>Standards-Based Compatibility:</b> ActiveX is compatible with existing investments in software, hardware, and human resources. For example, developers can leverage their existing knowledge of Microsoft Visual C++ to develop applications for the Internet and intranets using the same tool. Visual Basic developers can leverage their existing Visual Basic knowledge to develop scripts for the Internet using Visual Basic Scripting Edition (VB Script), an open scripting language for the Internet. With Visual Basic, developers can use their existing knowledge and code to develop Internet and intranet applications. Java developers can write applications in Java that expose Component Object Model (COM) interfaces and that use COM interfaces, building upon existing investments in components and knowledge. ActiveX also provides support for a wide selection of networking protocols and standards such as TCP/IP, HTTP, NNTP and SMTP.</li>
</ul>
<h3>ActiveX Is an Open Platform for Internet/Intranet Applications </h3>
<p>
As seen in Figure 1, ActiveX consists of a client-side platform, a server-side platform, development tools, authoring tools, and networking technologies. ActiveX will provide users, Webmasters, and developers with a rich platform for innovative applications on the Internet, while preserving their investments in applications, tools, knowledge, and code. </p>
<p>
<img src="activexwp_1.gif" border=0></p>
<p class=label>
<b>Figure 1. Microsoft ActiveX is an open platform for Internet/intranet applications.</b></p>
<h4>ActiveX on the client</h4>
<p>
ActiveX on the client is the client-side platform that enables applications and content to be run and viewed on an end user's system. Applications and content can be either present on the client system itself or automatically downloaded from the server and viewed and run on the client. ActiveX on the client consists of: 
<ul type=disc>
<li>
Microsoft Internet Explorer, which brings the benefits of ActiveX to end users and enables them to run Java applets and ActiveX controls written in Java, Visual C++, and other languages.<br><br></li>
<li>
Scripting engines for running scripts written in VB Script and JavaScript.<br><br></li>
<li>
ActiveX controls bundled with Internet Explorer for viewing and editing different kinds of content such as ActiveVRML™ (for 3D virtual reality modeling), ActiveMovie™ (for audio/video), and more.</li>
</ul>
<p>
With ActiveX on the client, users can run ActiveX controls written in different languages, such as Java, Visual C++, Visual Basic, and others. ActiveX on the client supports HTML 3.0 content, including support for frames, stylesheets, and tables.</p>
<h4>ActiveX on the server</h4>
<p>
ActiveX on the server is the server-side platform that provides clients with Internet services, applications, data, and content. Applications and content can be hosted on the same server that runs the Web Server or on other systems. Data can be hosted in any SQL database or any database that supports Open Database Connectivity (ODBC). With ActiveX on the server, developers can write Common Gateway Interface (CGI) applications, Internet Server application programming interface (ISAPI) Dynamic Link Libraries (DLLs) that run on the server side, and scripts. ActiveX on the Server consists of: 
<ul type=disc>
<li>
Microsoft Internet Information Server, which supports CGI applications, ISAPI DLLs, connectivity to databases, and so forth. <br><br></li>
<li>
Server side scripting, code named Denali.<br><br></li>
<li>
Transactions, code named Viper.<br><br></li>
<li>
Message Queuing, code named Falcon.</li>
</ul>
<p>
For more detailed information on ActiveX on the Server, please refer to the section <a href="#serverapps">"Writing Server Side Applications."</a></p>
<h4>ActiveX development/authoring Tools</h4>
<p>
Software developers can use ActiveX development tools to create exciting and powerful applications for the Internet and intranets. ActiveX development tools include new products such as Microsoft Visual J++, as well as established&nbsp; ones such as Microsoft Visual C++ and Visual Basic. This flexibility gives developers a wide selection of development tools and languages to create applications for the Internet and intranets.</p>
<p>
ActiveX authoring tools enable Webmasters to develop exciting content for the Internet and intranets. These authoring tools are very simple to use and do not require extensive technical knowledge. Webmasters can use Microsoft FrontPage™ to create effective HTML content and to manage Web sites. For instance, a Web producer can, with a few "point and clicks", create a form in a Web page for getting feedback information. </p>
<h3>ActiveX Is Cross-Platform</h3>
<p>
Microsoft is currently working with Metrowerks Inc. to provide ActiveX on the Macintosh. Developers who write ActiveX controls in Java can be assured that their controls will run seamlessly on both Windows and the Macintosh through Internet Explorer. In addition, Macintosh developers will be able to write native Macintosh ActiveX controls in languages such as C++ using Metrowerks CodeWarrior development tools, and be assured that these ActiveX controls will run on Internet Explorer for the Macintosh. ActiveX on the client will be available on the Macintosh and end users will be able to run ActiveX controls written in Java, Visual C++, and Visual Basic using Internet Explorer for the Macintosh. Developers will also be able to write scripts in VB Script that will run on Internet Explorer for the Macintosh. </p>
<p>
UNIX support is also provided. Developers can write ActiveX controls that run on all major UNIX systems today using software from Bristol Technology, Inc. and Mainsoft Corporation. </p>
<h3>ActiveX Is Open and Based on Standards </h3>
<p>
ActiveX provides choice in software, hardware, networking technologies, development tools, languages, and more to customers. ActiveX technologies are based on industry and organizational standards such as HTTP, TCP/IP, and OLE. Microsoft regularly previews ActiveX technologies to independent software vendors (ISVs) for feedback on design issues and incorporates this feedback into ActiveX technologies. <a href="#mislev">MIS Decision Makers: Leverage Existing Investments</a>, later in this paper, includes a partial listing of standards supported in ActiveX.</p>
<h2>End Users: Run Powerful Applications and View Exciting Content with Internet Explorer</h2>
<p>
Internet Explorer 3.0 will debut ActiveX and bring the power of ActiveX to end users. Users can download Internet Explorer 3.0 today from <a href="http://www.microsoft.com/ie/">http://www.microsoft.com/ie/</a> free of cost. Internet Explorer supports HTML as well as interactive multimedia content such as ActiveVRML and ActiveMovie. With Internet Explorer, end users will be able to run ActiveX controls created in languages such as Java, Visual C++, and Visual Basic, as well as Java applets. The Java support in Internet Explorer provides good Java performance and security to users. Users will be able to use Internet Explorer to seek information, do business, or just have fun on the Internet. Business users will be able to use Internet Explorer in areas such as human resources, customer support, finance, and accounting. </p>
<h3>Running Applications Securely</h3>
<p>
End users are protected from malicious applications because Internet Explorer ensures that only safe applications run on end-user systems. ActiveX controls that are hosted on Web sites trusted by the user can be downloaded and run on the end-user's system using all the features of the operating system. Users accept such <i>trusted</i> ActiveX controls just as they trust shrink-wrapped applications today for the desktop. Because ActiveX will not run the trusted control if it is modified after leaving the trusted Web site, the user is protected against malicious modification of applications during download. </p>
<p>
On the other hand, ActiveX controls and Java applets on Web sites that are not trusted by an end user are not permitted to use all the features of the operating system. Because these <i>untrusted</i> ActiveX controls and Java applets are downloaded from a Web site and are limited to using a safe set of operating system features on the end-user system, they cannot compromise the security of the end-user system. Internet Explorer ensures that Java applets and untrusted ActiveX controls do not use the underlying operating system.</p>
<p>
Internet Explorer supports trusted ActiveX controls that are written in languages such as Java, Visual C++, and Visual Basic. ActiveX supports those untrusted ActiveX controls written in the Java programming language.</p>
<h2>Web Producers and Developers: Create Content with Impact</h2>
<p>
While Internet Explorer has made viewing exciting content very simple for the end user, ActiveX allows developers to provide this content with relative ease and speed.</p>
<h3>Creating High-Impact Content and Applications</h3>
<p>
Developers will be able to write applications that run on ActiveX on the client by writing ActiveX controls in languages such as Java, Visual C++ and Visual Basic. ActiveX controls can work with other ActiveX controls or any COM object (see Figure 2). For instance, an ActiveX control written in Java can either expose COM interfaces or invoke a COM interface on another ActiveX control. Developers who write simple Java applets can be assured that these applets will work and interoperate seamlessly with other ActiveX components. Developers can also write scripts using VB Script or JavaScript that run on ActiveX on the client. ActiveX will be available on the Windows family and the Macintosh, and Microsoft plans to make it available on UNIX systems as well. </p>
<p>
<img src="activexwp_2.gif" border=0></p>
<p class=label>
<b>Figure 2. ActiveX runs ActiveX controls written in different languages, such as Visual C++ and Java.</b></p>
<p>
Developers can take full advantage of the features provided by the targeted operating system with ActiveX controls written in many different languages. When a user clicks on a Web page that references an ActiveX control, that control is downloaded from the server and runs on the end-user's system. For instance, a developer could write a button ActiveX control that presents a dialog box asking the user for information.</p>
<h4>World-class tools support ActiveX </h4>
<p>
Developers can choose from several tools such as Microsoft Visual C++, Borland C++, Symantec C++, and Microsoft's Java-based development tool, Visual J++. The next version of Microsoft Visual Basic—Visual Basic version 5.0—will enable developers to write ActiveX controls very easily. Developers will be able to convert existing Visual Basic code to ActiveX controls with simple point-and-click operations.</p>
<h4>Writing ActiveX controls in Java</h4>
<p>
The Java reference implementation in Windows enables developers to run ActiveX controls in Java by writing .java<i> </i>files and exposing COM interfaces from Java classes using a type library. These .java files can then be compiled to generate .class files in the Java byte code format. The .class files then run on the Java reference implementation in Windows by first passing through a byte code verifier that ensures security for the end user. The .class code is then compiled with a Just-In-Time (JIT) compiler that is part of the reference implementation, which generates native code that runs on the user's system. This process is illustrated in Figure 3.</p>
<p>
Microsoft is also publishing the interfaces for enabling other tool vendors to "plug in" their JIT compilers to the reference implementation, providing choice to developers and users. All the major tool vendors will enable this Java-ActiveX integration in their Java development tools.</p>
<p>
In addition, Microsoft is working with Metrowerks to provide the same Java implementation on the Macintosh as well, so developers who write ActiveX controls in Java can be assured that their ActiveX controls will also run seamlessly on the Macintosh. In addition, Macintosh developers can use Metrowerks CodeWarrior tools to develop ActiveX controls in Java on the Macintosh. These ActiveX controls will work with other ActiveX controls written in the same or different languages.</p>
<p>
<img src="activexwp_3.gif" border=0></p>
<p class=label>
<b>Figure 3. Architecture for the Java reference implementation in Windows</b></p>
<p>
With the Java implementation in Windows, developers get the following benefits:
<ul type=disc>
<li>
<b>Rich, powerful functionality:</b> Because the reference implementation of Java in Windows supports Java interoperability with other ActiveX controls, developers can take full advantage of the features of the underlying operating system. <br><br></li>
<li>
<b>Compatibility:</b> With Microsoft's Java implementation, developers can leverage existing ActiveX controls, development tools, and development languages for creating ActiveX controls that work with other ActiveX controls written in languages such as Java. Developers thus maintain compatibility with existing investments while still leveraging new Internet technologies such as Java.</li>
</ul>
<h4>ActiveX controls run across platforms</h4>
<p>
ActiveX controls will run on ActiveX on the client for multiple operating systems such as the Windows family, Macintosh, and UNIX. Developers can choose to use Java to create one platform-independent ActiveX control binary that runs on multiple platforms or write native versions of ActiveX controls optimized for different target operating systems.</p>
<p>
<b>Writing platform-independent ActiveX controls </b></p>
<p>
Developers who are interested in writing a single platform-independent ActiveX control binary that runs on multiple operating systems can do this by writing ActiveX controls using Java development tools such as Microsoft Visual J++. The resulting binary can be placed on a Web site. When an end user with a browser clicks on a page referencing this ActiveX control, the control is downloaded and executed on the end-user's system.</p>
<p>
<b>Writing native ActiveX controls</b></p>
<p>
Developers interested in high-performance applications that use specific features on the underlying operating system can write "native" ActiveX controls for different operating systems, such as the Windows family, Macintosh, and UNIX. Developers can then compile these controls to generate different binaries and put these on a Web site. When an end user with a browser clicks on a page referencing an ActiveX control, the appropriate ActiveX control for that platform is downloaded and executed on the end-user system. </p>
<p>
Because both "platform-independent" and "native" ActiveX controls will run on Internet Explorer 3.0 as well as on Netscape Navigator, developers can be assured that their ActiveX controls written in different languages will run on most Internet users' systems. Microsoft will make Internet Explorer available on the Macintosh later this year and is looking at ways to make it available on all the major UNIX systems.</p>
<h4>ActiveX controls are secure</h4>
<p>
Developers can ensure security for end users on the Internet and intranets either by writing untrusted ActiveX controls in Java that are limited to using a safe set of operating system features or by writing trusted ActiveX controls that use the rich features of an underlying operating system. Developers can use Java, Visual C/C+, Visual Basic, or other programming languages and <i>sign</i> trusted ActiveX controls as being safe. </p>
<p>
<b>Writing untrusted ActiveX controls</b></p>
<p>
ActiveX controls on Web sites not trusted by an end user are not permitted to use all the features of the operating system. Because these ActiveX controls running on ActiveX are downloaded from a Web site and are limited to using a safe set of operating system features on the end-user system, they cannot compromise the security of the end-user system. ActiveX guarantees that such untrusted ActiveX controls do not use the underlying operating system to compromise security. Developers can write such untrusted ActiveX controls using Java through Java development tools such as Microsoft Visual J++.</p>
<p>
<b>Writing trusted ActiveX controls</b></p>
<p>
ActiveX controls that are hosted on Web sites trusted by the user can be downloaded and run on the end-user's system using all the features of the operating system. ActiveX will run trusted applications only if they have not been modified after they leave the trusted Web site, thus providing protection against malicious modification of code during download. </p>
<p>
Microsoft is part of a digital signature initiative in the WWW Consortium that allows signed ActiveX controls to be downloaded and run on users' systems. <i>Digital signatures</i> are the online analog of shrink-wrapped applications, where users trust the vendor of the shrink-wrapped application and thereby feel comfortable running that application on their systems. Developers who need to put up trusted ActiveX controls on Web sites can obtain a certificate and sign their code with a digital signature. By affixing a digital signature to the ActiveX control, the developer is guaranteeing that the code is not malicious. When an end user clicks on a page that references a trusted ActiveX control, the signature is downloaded and verified by ActiveX on the client. The verification helps ensure that the code originated from an authorized developer with a valid certificate and that the code has not been modified since the download began. After the verification is complete, the ActiveX control code is enabled so that it runs safely on ActiveX on the client.</p>
<p>
The technology for signatures is based on PKCS#7 and X.509 standards. Microsoft is working with VeriSign and over 50 other vendors to deliver this technology to developers. Developers who need to sign their code can get a certificate from one of several certificate-issuing authorities. ActiveX will securely run trusted ActiveX controls that are written in languages such as Java, Visual C++, and Visual Basic. ActiveX will securely run untrusted ActiveX controls written in Java. </p>
<h4>Scripting ActiveX controls with VB Script</h4>
<p>
Developers who need to respond rapidly to changing business requirements need a quick way to change the behavior of applications for the Internet and intranets. Developers writing ActiveX controls also need a way to programmatically coordinate many ActiveX controls referred to from a Web page. While ActiveX controls are easy to write and modify, they are still compiled and stored in binary form.</p>
<p>
Developers can meet these needs by using VB Script to script ActiveX controls. With VB Script, developers can trap events from ActiveX controls, invoke methods, modify properties of ActiveX controls, and more. Because VB Script code is very simple to write and is always maintained in source code form in the Web page itself, it is very easy to modify and is the best way to coordinate activity across ActiveX controls. With VB Script, developers get the following benefits:</p>
<p>
<b>Safety: </b>VB Script includes only simple functionality for operations, message boxes, error messages, and so on. It does not allow functionality such as file input/output (I/O) or graphics, which could compromise the security of an end-user's system.</p>
<p>
<b>Ease of code development: </b>VB Script is an easy-to-learn scripting language. It is a subset of Microsoft Visual Basic, a language that many developers are already familiar with.</p>
<p>
<b>Cross-platform code: </b>Developers can enable their VB Script code to run on multiple operating systems because the VB Script engine will work on ActiveX on the client for the Windows family, the Macintosh, and all major UNIX systems. Microsoft will ship the VB Script engine with Internet Explorer for both Windows and the Macintosh. Microsoft has licensed VB Script technology to other vendors, such as Bristol Technology and Mainsoft, to enable VB Script on all major UNIX systems.</p>
<p>
<b>Compatibility: </b>VB Script is compatible with existing investments in Visual Basic because it is a proper subset of Visual Basic for Applications. It leverages existing code and knowledge of Visual Basic.</p>
<p>
<b>Open Script: </b>Developers can use VB Script to script ActiveX controls written in languages such as Java, Visual C++, and Visual Basic. Microsoft will make the VB Script engine source code available under license free of cost to browser vendors and application vendors who want to support VB Script in their applications. Microsoft also plans to enable VB Script code to run in other browsers, including Netscape Navigator, through a plug-in.</p>
<h4>Scripting ActiveX controls and Java applets with JavaScript</h4>
<p>
Microsoft will enable JavaScript scripts to run in Internet Explorer 3.0 through a JavaScript engine. Unlike VB Script, JavaScript code and technology specifications are not available freely, and hence, Microsoft is working on a JavaScript-compatible interpreter that will ship with Internet Explorer. </p>
<h4>Inserting ActiveX controls into an HTML page</h4>
<p>
Developers can insert ActiveX controls into a Web page by using the &lt;OBJECT&gt; tag in the HTML page and referring to the <b>ClassId</b> of the ActiveX control. When a user clicks on a page with an OBJECT tag and a <b>ClassId</b>, ActiveX on the client looks up the client systems registry to find the ActiveX control code referred to with the <b>ClassId</b>. If the relevant ActiveX control is already present on the client system, that code is invoked and executed on the client. If the ActiveX control code is not already present on the client system, it is downloaded from the server, installed on the client after checking for security, and then invoked on the client. ActiveX will also provide versioning support by enabling the option to download the latest version of an ActiveX control. More information on this is available in the ActiveX SDK.</p>
<h4>Running ActiveX controls on Netscape Navigator</h4>
<p>
Developers writing ActiveX controls can be assured of a wide end user audience for these controls because ActiveX controls will run on Internet Explorer 3.0, as well as Netscape Navigator (through a Netscape plug-in). </p>
<h3><a name="serverapps"></a>Writing Server-Side Applications </h3>
<p>
ActiveX server technologies consist of server-side scripting support (Denali), server side transactions (Viper), and message queuing (Falcon). By combining component software, mission critical services, and Internet protocols, Microsoft is delivering a server platform that will enable companies to lower their development costs, leverage their existing systems, and quickly deploy scalable applications for the Internet.</p>
<h4>Writing applications with Internet Information Server</h4>
<p>
With Microsoft's Internet Information Server, developers can write server side applications for the Internet or intranets. These applications are written using the CGI, enables browser users to send data to the server and run an application on the server and receive data back. Developers can also use Internet Information Server to write PERL scripts that run on the server. </p>
<p>
Developers write powerful, high-performance, server-side applications by way of Internet Service API (ISAPI). With ISAPI, developers can write server-side applications using different languages and enable browser users to run those programs on the server. Because ISAPI applications run in the same process as Internet Information Server, good performance is assured. Multiple ISAPI applications can run on the server at the same time using the same thread pool, thus enabling efficient system resource usage. Developers can write ISAPI applications for forms processing, gateways, statistics gathering, custom authentication, data translations, and more. With the Internet Information Server, developers can write server side "filters" by using the ISAPI Filter APIs provided. With such filters, developers can provide custom authentication, encryption, compression, and other features based on filters such as URL addresses. </p>
<h4>Writing server-side scripts and ActiveX controls</h4>
<p>
Denali enables developers to build and run business applications without complex programming.
<ul type=disc>
<li>
Developers can build applications by embedding scripts—JavaScript, VB Script, Perl, or REXX—directly into HTML pages, avoiding the need to combine HTML layout directly with low-level system software APIs.<br><br></li>
<li>
Denali scripts invoke prebuilt ActiveX controls or Java applets that manage business functions such as order entry, inventory management, and customer tracking. These components can be built-in house or purchased from third parties. <br><br></li>
<li>
Denali executes scripts on the server, tracking customer state and user status even as the user browses through an application involving multiple Web pages, server components, and databases.</li>
</ul>
<h4>Writing transaction applications</h4>
<p>
Viper enables multiple server tasks such as credit check, order entry, and inventory management to execute as a single logical transaction when invoked from a browser. This ensures correct results for complex business applications on the Web.
<ul type=disc>
<li>
Viper combines features from TP Monitors—including thread, process, and session management—to achieve scalability with features from object request brokers (ORBs) to enable component integration and rapid development.<br><br></li>
<li>
Viper applications automatically execute under transaction control, with full rollback and recovery, to ensure correct behavior. Viper supports integration with UNIX and MVS transaction systems through XA and LU 6.2 protocols.<br><br></li>
<li>
Viper applications are easily built from ActiveX components and server scripts, including Denali scripts. Viper provides the millions of existing developers with component security, configuration, packaging, and deployment services.</li>
</ul>
<h4>Writing message queue applications</h4>
<p>
Network failure for static Web applications often means a page cannot be viewed by a user. Network failure for Internet/intranet applications means that business is not conducted. Falcon guarantees delivery of work between servers despite network failures, as follows:
<ul type=disc>
<li>
Falcon handles server-to-server communications—transactions, invoices, and database updates—as <i>messages</i> using store-and-forward <i>message queues</i> to ensure reliable delivery between servers that are temporarily disconnected.<br><br></li>
<li>
Falcon applications scale to support thousands of servers. Businesses can dynamically add and remove Falcon servers without having to reconfigure Falcon applications.<br><br></li>
<li>
Falcon services can be invoked from Denali and Viper applications or directly from Falcon APIs. Falcon supports integration with UNIX and mainframe transaction and messaging systems through the XA protocol and third-party gateways.</li>
</ul>
<h3>Choosing from Many Development Tools </h3>
<p>
Developers can choose from several existing development tools, as well as new Java tools, to write applications for ActiveX, thus leveraging their existing knowledge and expertise. For instance, developers can write ActiveX controls using tools such as Microsoft Visual C++, Borland C++, Symantec C++, Microsoft Visual J++, Metrowerks CodeWarrior. Developers will also be able to choose from Java development tools from Borland, Symantec, Microsoft, the Powersoft division of Sybase, and other companies to write applications that run on the Java reference implementation in Windows. With the next release of Microsoft Visual Basic, developers will be able to write ActiveX controls using Visual Basic or modify their existing Visual Basic applications to become ActiveX controls. </p>
<h2><a name="mislev"></a>MIS Decision Makers: Leverage Existing Investments</h2>
<h3>ActiveX Is Open</h3>
<p>
Microsoft has developed ActiveX by incorporating extensive customer and industry feedback through its open design process. ActiveX provides choice in hardware, development tools, platforms, networking technologies, and more. Developers can write ActiveX applications that will run across operating systems, and they can choose from many different tools. Webmasters can create content easily from many available authoring tools. Administrators can choose from many different networking technologies and hardware to enable Internet/intranet applications and content on ActiveX.</p>
<p>
Microsoft believes that the essential feature of open systems is choice to the customer—choice in hardware, software, networking technologies, price, and performance. In the future, ActiveX technologies will provide a huge choice of applications to customers. More than 1,000 ActiveX controls already exist in the market today and many more are under development. ActiveX is available on many different hardware architectures, for both the server and client sides provided by several hardware companies. ActiveX also includes a wide choice of networking technologies including TCP/IP, HTTP, SMTP, NNTP, and IPX/SPX (see the partial listing of ActiveX supported standards in the table later in this section). With ActiveX, developers can choose from a wide selection of tools to create effective new content and applications for the Internet. </p>
<p>
Microsoft has worked with organizations like the Internet Engineering Task Force (IETF) to develop new Internet standards such as DHCP, IP next generation (Ipng), and more.</p>
<p>
Microsoft ActiveX technologies are based on both <i>de jure</i> and <i>de facto</i> standards. The following table shows a partial list of standards supported by Microsoft ActiveX.</p>
<p class=label>
<b>Microsoft ActiveX supported standards</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>Area</b></td>
<td class=label width=70%><b>Standards and Technologies in ActiveX (partial listing)</b></td>
</tr>
<tr valign=top>
<td width=30%>Networking</td>
<td width=70%>TCP/IP, IPX/SPX, PPP, SLIP, DNS, RIP, PPTP, DHCP, WINS, IPng, SSL</td>
</tr>
<tr valign=top>
<td width=30%>Web</td>
<td width=70%>HTTP, HTML, VRML</td>
</tr>
<tr valign=top>
<td width=30%>Communication</td>
<td width=70%>RTP, T.120, T.127, H.323, RSVP</td>
</tr>
<tr valign=top>
<td width=30%>Messaging</td>
<td width=70%>SMTP, X.400, MIME, POP3</td>
</tr>
<tr valign=top>
<td width=30%>Databases</td>
<td width=70%>ODBC (ISO 9942), SQL</td>
</tr>
<tr valign=top>
<td width=30%>Programming Languages</td>
<td width=70%>ANSI C (ISO 9899), ANSI C++, Java, Basic </td>
</tr>
<tr valign=top>
<td width=30%>Directory</td>
<td width=70%>X.500</td>
</tr>
<tr valign=top>
<td width=30%>Miscellaneous</td>
<td width=70%>FTP, Gopher, Telnet</td>
</tr>
</table><br>
<h3>Accommodating Business Needs Easily</h3>
<p>
With ActiveX, developers can create ActiveX controls or Java applets using one of many easy-to-use development tools. Because over 1,000 shrink-wrapped ActiveX controls available in the market today can be scripted using VB Script or JavaScript, MIS managers can develop software quickly&nbsp; by leveraging existing shrink-wrapped ActiveX controls. With the next release of Visual Basic, developers can create ActiveX controls very easily by using the graphical Visual Basic development environment. </p>
<h2>For More Information</h2>
<p>
Further information on topics related to this white paper can be obtained through these sources:
<ul type=disc>
<li>
For generic information on Web development: <a href="http://www.microsoft.com/sitebuilder/">http://www.microsoft.com/sitebuilder/</a><br><br></li>
<li>
For information on ActiveX: <a href="http://www.microsoft.com/intdev/">http://www.microsoft.com/intdev/</a><br><br></li>
<li>
For developer information: <a href="http://www.microsoft.com/devonly/">http://www.microsoft.com/devonly/</a><br><br></li>
<li>
For information on Visual Basic Scripting Edition: <a href="http://www.microsoft.com/vbscript/">http://www.microsoft.com/vbscript/</a><br><br></li>
<li>
For information on the Internet Control Pack: <a href="http://www.microsoft.com/icp/">http://www.microsoft.com/icp/</a></li>
</ul>
<p>
Other material for developers is available through the following Microsoft sources:
<ul type=disc>
<li>
Microsoft Solutions Development Kit (MSDK): Jumpstart toolkit for developing applications with Microsoft Office and Microsoft BackOffice<br><br></li>
<li>
Microsoft Mastering Series: Self-paced training titles for developing solutions with Microsoft Visual Tools</li>
</ul>
<p>
For additional developer information, send electronic mail to <a href="mailto:devwire@microsoft.nwnet.com">devwire@microsoft.nwnet.com</a> with the words "Subscribe DevWire" in the message body.</p>
</BODY>
</HTML>
