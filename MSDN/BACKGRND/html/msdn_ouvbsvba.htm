<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Automating Microsoft Outlook Using Visual Basic Scripting Edition or Visual Basic for Applications</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_ouvbsvba"></a>Automating Microsoft Outlook Using Visual Basic Scripting Edition or Visual Basic for Applications</h1>
<p>
Microsoft Corporation</p>
<p>
May 5, 1997</p>
<h4>Contents</h4>
<p>
<a href="#ouvbsvba_intro">Introduction</a><br>
<a href="#ouvbsvba_choose">Choosing Between VBScript and Visual Basic for Your Outlook Solution</a><br>
<a href="#ouvbsvba_diff">Differences Between VBScript and VBA</a><br>
<a href="#ouvbsvba_use">Using VBScript to Program Outlook Objects from Outlook</a><br>
<a href="#ouvbsvba_use2">Using Visual Basic to Automate Outlook from Other Applications</a><br>
<a href="#ouvbsvba_auto">Automating Other Applications from Outlook</a></p>
<h2><a name="ouvbsvba_intro"></a>Introduction</h2>
<p>
The first part of this article describes the differences between using Microsoft® Visual Basic® Scripting Edition (VBScript) code to automate Microsoft Outlook™ objects from within Outlook, and using Microsoft Visual Basic for Applications (VBA) to automate Outlook from another Microsoft Office 97 application. The second part of the article describes how to automate other Office 97 applications from within Outlook.</p>
<h2><a name="ouvbsvba_choose"></a>Choosing Between VBScript and VBA for Your Outlook Solution</h2>
<p>
Both VBScript and VBA are members of the Visual Basic language family. VBScript is a subset of VBA that you can use within Outlook. VBA is the programming language that you can use within the other Office 97 applications. All VBScript code will run in VBA, but all VBA code will not run in VBScript.</p>
<p>
You can use either VBScript or VBA to program Outlook objects, but keep the following points in mind when you are choosing where to write your code:
<ul type=disc>
<li>
Event procedures that respond to events on either Outlook items or controls on Outlook items must be written in VBScript in Outlook.<br><br></li>
<li>
If you are writing a cross-application solution involving one primary application and one or more secondary ones, you probably want to write and run your code from the primary application.<p class=tl>
For example, if your solution is primarily a Microsoft Excel solution that uses some of the functionality of Outlook, write VBA code in Microsoft Excel to automate Excel and Outlook. If your solution is primarily an Outlook solution that uses some of the functionality of Microsoft Excel, write VBScript code in Outlook to automate Outlook and Excel.</P></li>
<li>
If you write VBA code that automates Outlook from another Office 97 application, you can take advantage of the richer programming environment in the controller application.</li>
</ul>
<h2><a name="ouvbsvba_diff"></a>Differences between VBScript and VBA</h2>
<p>
The following table summarizes the differences between writing code to control Outlook in VBScript and writing code to control Outlook in Visual Basic for Applications. For more information, see "Microsoft Outlook Objects" (MSDN Library, Microsoft Office Development), or read <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="Msdn_vbsfaq">
</object><a href=JavaScript:alink_1.Click()>"Microsoft Visual Basic Scripting Edition: Frequently Asked Questions."</a></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=49%><b>VBA</b></td>
<td class=label width=51%><b>VBScript</b></td>
</tr>
<tr valign=top>
<td width=49%>You can use all the built-in constants that come with a type library.</td>
<td width=51%>You must use the numeric equivalents for the built-in type-library constants.</td>
</tr>
<tr valign=top>
<td width=49%>You can use sophisticated programming structures such as <b>With</b>&nbsp;.&nbsp;.&nbsp;.&nbsp;<b>End&nbsp;With</b> and <b>For&nbsp;Each</b>&nbsp;.&nbsp;.&nbsp;.&nbsp;<b>Next</b>.</td>
<td width=51%>Some sophisticated programming structures are not available.</td>
</tr>
<tr valign=top>
<td width=49%>You must establish a reference to the Outlook object library and then use <b>CreateObject</b>, <b>GetObject</b>, or <b>Set</b> and <b>New</b> to get a reference to the Outlook <b>Application</b> object. From there you can drill down to objects that represent other Outlook elements, such as folders and items. </td>
<td width=51%>You use the <b>Application</b> property to return a reference to the Outlook <b>Application</b> object. To do this, use an <b>Item</b> within an event procedure to return a reference to the object that represents the Outlook item where the event was triggered.</td>
</tr>
<tr valign=top>
<td width=49%>You can't write event procedures that respond to Outlook items and control events.</td>
<td width=51%>All the code you write should be in either an Outlook item or control event procedure, or in a standard procedure that is called from an event procedure.</td>
</tr>
<tr valign=top>
<td width=49%>You can call procedures written in Visual Basic in many ways, including clicking command bar buttons or commands, using shortcut keys, using the <b>Macros</b> dialog box, or triggering events that have event procedures associated with them.</td>
<td width=51%>Procedures written in VBScript are only called in response to events that have event procedures associated with them. This is no other way to run these procedures.</td>
</tr>
<tr valign=top>
<td width=49%>Code is written in a module in the Visual Basic Editor</td>
<td width=51%>Code is written in the Script Editor.</td>
</tr>
</table><br>
<h2><a name="ouvbsvba_use"></a>Using VBScript to Program Outlook Objects from Outlook</h2>
<p>
To automate Outlook objects using VBScript code that runs from Outlook itself, you add event procedures and standard procedures to your custom forms. An event procedure can be triggered by events on either the item created from the form or on controls on the item.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In Outlook, code runs only in response to events. Therefore, you can write <b>Sub</b> and <b>Function</b> procedures that don't respond to events, but there is no way to call these procedures directly. The only way to run a procedure that isn't associated with an event is to call it from a valid event procedure.</p>
<h3>Creating an Item Event Procedure</h3>
<p>
In form event procedures, you use <b>Item</b> to refer to the item or form where the event occurred. This means that all form event procedure names are composed of the word "Item" followed by an underscore character (_) and the name of the event (for example, <b>Item_Open</b>). In addition, within the event procedure, you use <b>Item</b> to refer to the object that represents the Outlook item where the event occurred. </p>
<p>
The following example adds the date and time that the Outlook item was opened to the end of the item's subject line.</p>
<pre><code>Function Item_Open()
 &nbsp;&nbsp; Item.Subject = Item.Subject &amp; " [opened " &amp; Now &amp; "]"
End Function
</code></pre>
<p>
To add an empty form event procedure to your script in the Script Editor, on the <b>Script</b> menu click <b>Event</b>, then click an event name in the list, and then click <b>Add</b>. The appropriate <b>Sub . . . End Sub</b> or <b>Function . . . End Function</b> statement is inserted with its arguments (if any) specified. </p>
<h3>Creating a Control Event Procedure</h3>
<p>
To create a <b>Click</b> event procedure for a control on an item, add a procedure whose name is composed of the name of the control followed by an underscore character (_) and the word "Click" to your code in the Script Editor. You must type the complete <b>Sub . . . End Sub</b> statement.</p>
<p>
The following procedure disables the <b>ReplyAll</b> function for an item when the button named <b>cmdNoReplyAll</b> is clicked.</p>
<pre><code>Sub cmdNoReplyAll_Open()
 &nbsp;&nbsp; Item.Actions("Reply to All").Enabled = False
End Function
</code></pre>
<h3>Using Numeric Values Instead of Built-in Outlook Constants in VBScript</h3>
<p>
Unlike Visual Basic, VBScript does not support the built-in constants supplied by the Outlook type library. Therefore, when you automate Outlook by using VBScript, you must use the numeric values that the built-in constants represent.</p>
<p>
If you write your Outlook code in one of the other Office 97 applications to take advantage of the development environment, be sure to replace the constants that are automatically supplied for you with their numeric equivalents when you paste the code into the Script Editor. You can look up the numeric values of built-in Outlook constants using the <b>Object</b> browser, or you can consult the following tables. These tables can also be found under "Microsoft Outlook Constants" in Microsoft Outlook Visual Basic Help.</p>
<p class=label>
<b>OlActionCopyLike</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olReply</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olReplyAll</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olForward</b></td>
<td width=48%>2</td>
</tr>
<tr valign=top>
<td width=52%><b>olReplyFolder</b></td>
<td width=48%>3</td>
</tr>
<tr valign=top>
<td width=52%><b>olRespond</b></td>
<td width=48%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlActionReplyStyle</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olOmitOriginalText</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olEmbedOriginalItem</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olIncludeOriginalText</b></td>
<td width=48%>2</td>
</tr>
<tr valign=top>
<td width=52%><b>olIndentOriginalText</b></td>
<td width=48%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlActionResponseStyle</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olOpen</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olSend</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olPrompt</b></td>
<td width=48%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlActionShowOn</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olDontShow</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olMenu</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olMenuAndToolbar</b></td>
<td width=48%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlAttachmentType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olByValue</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olByReference</b></td>
<td width=48%>4</td>
</tr>
<tr valign=top>
<td width=52%><b>olEmbeddedItem</b></td>
<td width=48%>5</td>
</tr>
<tr valign=top>
<td width=52%><b>olOLE</b></td>
<td width=48%>6</td>
</tr>
</table><br>
<p class=label>
<b>OlBusyStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olFree</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olTentative</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olBusy</b></td>
<td width=48%>2</td>
</tr>
<tr valign=top>
<td width=52%><b>olOutOfOffice</b></td>
<td width=48%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlDaysOfWeek</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olSunday</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olMonday</b></td>
<td width=48%>2</td>
</tr>
<tr valign=top>
<td width=52%><b>olTuesday</b></td>
<td width=48%>4</td>
</tr>
<tr valign=top>
<td width=52%><b>olWednesday</b></td>
<td width=48%>8</td>
</tr>
<tr valign=top>
<td width=52%><b>olThursday</b></td>
<td width=48%>16</td>
</tr>
<tr valign=top>
<td width=52%><b>olFriday</b></td>
<td width=48%>32</td>
</tr>
<tr valign=top>
<td width=52%><b>olSaturday</b></td>
<td width=48%>64</td>
</tr>
</table><br>
<p class=label>
<b>OlDefaultFolders</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderDeletedItems</b></td>
<td width=48%>3</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderOutbox</b></td>
<td width=48%>4</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderSentMail</b></td>
<td width=48%>5</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderInbox</b></td>
<td width=48%>6</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderCalendar</b></td>
<td width=48%>9</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderContacts</b></td>
<td width=48%>10</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderJournal</b></td>
<td width=48%>11</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderNotes</b></td>
<td width=48%>12</td>
</tr>
<tr valign=top>
<td width=52%><b>olFolderTasks</b></td>
<td width=48%>13</td>
</tr>
</table><br>
<p class=label>
<b>OlFlagStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=52%><b>Constant</b></td>
<td class=label width=48%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=52%><b>olNoFlag</b></td>
<td width=48%>0</td>
</tr>
<tr valign=top>
<td width=52%><b>olFlagComplete</b></td>
<td width=48%>1</td>
</tr>
<tr valign=top>
<td width=52%><b>olFlagMarked</b></td>
<td width=48%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlFolderDisplayMode</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olFolderDisplayNormal</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olFolderDisplayFolderOnly</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olFolderDisplayNoNavigation</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlFormRegistry</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olDefaultRegistry</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olPersonalRegistry</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olFolderRegistry</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olOrganizationRegistry</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlGender</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olUnspecified</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olFemale</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olMale</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlImportance</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olImportanceLow</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olImportanceNormal</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olImportanceHigh</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlInspectorClose</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olSave</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olDiscard</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olPromptForSave</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlItems</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olMailItem</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olAppointmentItem</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olContactItem</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskItem</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olJournalItem</b></td>
<td width=47%>4</td>
</tr>
<tr valign=top>
<td width=53%><b>olNoteItem</b></td>
<td width=47%>5</td>
</tr>
<tr valign=top>
<td width=53%><b>olPostItem</b></td>
<td width=47%>6</td>
</tr>
</table><br>
<p class=label>
<b>OlJournalRecipientType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olAssociatedContact</b></td>
<td width=47%>1</td>
</tr>
</table><br>
<p class=label>
<b>OlMailingAddress</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olNone</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olHome</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olBusiness</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olOther</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlMailRecipientType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olOriginator</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olTo</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olCC</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olBCC</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlMeetingRecipientType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olOrganizer</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olRequired</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olOptional</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olResource</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlMeetingResponse</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olMeetingTentative</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olMeetingAccepted</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olMeetingDeclined</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlMeetingStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olNonMeeting</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olMeeting</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olMeetingReceived</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olMeetingCanceled</b></td>
<td width=47%>5</td>
</tr>
</table><br>
<p class=label>
<b>OlNoteColor</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olBlue</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olGreen</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olPink</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olYellow</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olWhite</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlRecurrenceType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursDaily</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursWeekly</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursMonthly</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursMonthNth</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursYearly</b></td>
<td width=47%>5</td>
</tr>
<tr valign=top>
<td width=53%><b>olRecursYearNth</b></td>
<td width=47%>6</td>
</tr>
</table><br>
<p class=label>
<b>OlRemoteStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olRemoteStatusNone</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olUnMarked</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olMarkedForDownload</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olMarkedForCopy</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olMarkedForDelete</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlResponseStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseNone</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseOrganized</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseTentative</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseAccepted</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseDeclined</b></td>
<td width=47%>4</td>
</tr>
<tr valign=top>
<td width=53%><b>olResponseNotResponded</b></td>
<td width=47%>5</td>
</tr>
</table><br>
<p class=label>
<b>OlSaveAsType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olTXT</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olRTF</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olTemplate</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olMSG</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olDoc</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlSensitivity</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olNormal</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olPersonal</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olPrivate</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olConfidential</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlTaskDelegationState</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskNotDelegated</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskDelegationUnknown</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskDelegationAccepted</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskDelegationDeclined</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlTaskOwnership</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olNewTask</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olDelegatedTask</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olOwnTask</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlTaskRecipientType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olUpdate</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olFinalStatus</b></td>
<td width=47%>2</td>
</tr>
</table><br>
<p class=label>
<b>OlTaskResponse</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskSimple</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskAssign</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskAccept</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskDecline</b></td>
<td width=47%>3</td>
</tr>
</table><br>
<p class=label>
<b>OlTaskStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskNotStarted</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskInProgress</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskComplete</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskWaiting</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olTaskDeferred</b></td>
<td width=47%>4</td>
</tr>
</table><br>
<p class=label>
<b>OlTrackingStatus</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingNone</b></td>
<td width=47%>0</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingDelivered</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingNotDelivered</b></td>
<td width=47%>2</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingNotRead</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingRecallFailure</b></td>
<td width=47%>4</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingRecallSuccess</b></td>
<td width=47%>5</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingRead</b></td>
<td width=47%>6</td>
</tr>
<tr valign=top>
<td width=53%><b>olTrackingReplied</b></td>
<td width=47%>7</td>
</tr>
</table><br>
<p class=label>
<b>OlUserPropertyType</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=53%><b>Constant</b></td>
<td class=label width=47%><b>Value</b></td>
</tr>
<tr valign=top>
<td width=53%><b>olText</b></td>
<td width=47%>1</td>
</tr>
<tr valign=top>
<td width=53%><b>olNumber</b></td>
<td width=47%>3</td>
</tr>
<tr valign=top>
<td width=53%><b>olDateTime</b></td>
<td width=47%>5</td>
</tr>
<tr valign=top>
<td width=53%><b>olYesNo</b></td>
<td width=47%>6</td>
</tr>
<tr valign=top>
<td width=53%><b>olDuration</b></td>
<td width=47%>7</td>
</tr>
<tr valign=top>
<td width=53%><b>olKeywords</b></td>
<td width=47%>11</td>
</tr>
<tr valign=top>
<td width=53%><b>olPercent</b></td>
<td width=47%>12</td>
</tr>
<tr valign=top>
<td width=53%><b>olCurrency</b></td>
<td width=47%>14</td>
</tr>
<tr valign=top>
<td width=53%><b>olFormula</b></td>
<td width=47%>18</td>
</tr>
<tr valign=top>
<td width=53%><b>olCombination</b></td>
<td width=47%>19</td>
</tr>
</table><br>
<h2><a name="ouvbsvba_use2"></a>Using Visual Basic to Automate Outlook from Other Applications</h2>
<p>
To control Outlook objects from outside Outlook, you must establish a reference to the Outlook object library from the project in which you are writing your code. To do this, use the <b>References</b> dialog box on the <b>Tools</b> menu in the Visual Basic Editor. Then write code that returns a reference to the Outlook <b>Application</b> object. Through this reference, your code has access to all the objects, properties, methods, and constants defined in the Outlook type library.</p>
<p>
There are several ways to return a reference to the Outlook <b>Application</b> object. </p>
<p>
You can use the <b>CreateObject</b> function to start a new session of Outlook and return a reference to the <b>Application</b> object that represents the new session.</p>
<p>
You can use the <b>GetObject</b> function to return a reference to the <b>Application</b> object that represents a session that's already running. </p>
<p>
You can use the <b>New</b> keyword in several types of statements to implicitly create a new instance of the Outlook <b>Application</b> object. You can use the <b>New</b> keyword with the <b>Set</b> statement to set an object variable to the new instance of the <b>Application</b> object. You can also use the <b>New</b> keyword with the <b>Dim</b>, <b>Private</b>, <b>Public</b>, or <b>Static</b> statement to declare an object variable. (The new instance of the <b>Application </b>object is created on the first reference to the variable.)</p>
<p>
The following example, run from Microsoft Excel, sets the <b>myOlApp</b> object variable to a new instance of the Outlook <b>Application</b> object using the <b>Set</b> statement and <b>CreateObject</b> function. The code then uses the <b>CreateItem</b> method of the <b>Application</b> object within a <b>For Each</b> . . . <b>Next</b> loop to create one <b>ContactItem</b> object for each row in the specified range on the Contacts worksheet and to set properties for the item, using values from cells in the row.</p>
<pre><code>Sub WriteContactInfo()
 &nbsp;&nbsp; Dim myOlApp As Outlook.Application
 &nbsp;&nbsp; Dim w As Workbook
 &nbsp;&nbsp; Dim s As Worksheet
 &nbsp;&nbsp; Dim c As Range

 &nbsp;&nbsp; Set s = Worksheets("Contacts")
 &nbsp;&nbsp; Set myOlApp = CreateObject("Outlook.Application")
 &nbsp;&nbsp; For i = 1 To s.Range("a1").CurrentRegion.Rows.Count
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set c = s.Cells(i, 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set myItem = myOlApp.CreateItem(olContactItem)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; With myItem
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .FullName = c.Value
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Birthday = c.Offset(0, 1).Value
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Children = c.Offset(0, 2).Value
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Spouse = c.Offset(0, 4).Value
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Save
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; End With
 &nbsp;&nbsp; Next
End Sub
</code></pre>
<p>
The following example, run from Microsoft Access, sets the <b>myOlApp</b> object variable to an instance of the Outlook <b>Application</b> object using the <b>Set</b> statement and the <b>New</b> keyword. The rest of the code goes to the Contacts folder, adds a new item, and sets the item's properties to values in a Microsoft Access form.</p>
<pre><code>Sub AddNewContact
 &nbsp;&nbsp; Set myOlApp = New Outlook.Application
 &nbsp;&nbsp; Set myOlNameSpace = myOlApp.GetNamespace("MAPI")
 &nbsp;&nbsp; Set objFolder = myOlNameSpace.GetDefaultFolder(olFolderContacts)
 &nbsp;&nbsp; Set objForm = Forms!Customers
 &nbsp;&nbsp; Set objNewContact&nbsp; = objFolder.Items.Add
 &nbsp;&nbsp; With objNewContact
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Set prpUserProp = .UserProperties.Add("Priority", olText)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; prpUserProp.Value = objForm!Priority
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .FirstName = Left(objForm!ContactName, InStr(objForm!ContactName, " ") - 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .LastName = Mid(objForm!ContactName, InStr(objForm!ContactName, " ") + 1)
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .CompanyName = Nz(objForm!CompanyName, "")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .JobTitle = Nz(objForm!ContactTitle, "")
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .Save
 &nbsp;&nbsp; End With
End Sub
</code></pre>
<h2><a name="ouvbsvba_auto"></a>Automating Other Applications from Outlook</h2>
<p>
To automate other applications using Outlook VBScript code, use the <b>CreateObject</b> method of the <b>Application</b> object. The following VBScript example, which is run by clicking the <b>cmdToXL</b> button on an item, reads information about the current item and writes it to a Microsoft Excel worksheet. The form from which the current item was created must be based on the <b>Contact</b> item form.</p>
<pre><code>Sub cmdToXL_click()
 &nbsp;&nbsp; Set myXLApp = Item.Application.CreateObject("Excel.Application")
 &nbsp;&nbsp; myXLApp .Visible = True
 &nbsp;&nbsp; Set c = myXLApp.Workbooks.Add.Worksheets(1).Range("a1")
 &nbsp;&nbsp; c.Value = Item.FullName
 &nbsp;&nbsp; c.Offset(0, 1).Value = Item.HomeAddressStreet
 &nbsp;&nbsp; c.Offset(0, 2).Value = Item.HomeAddressCity
 &nbsp;&nbsp; c.Offset(0, 3).Value = Item.HomeAddressState
 &nbsp;&nbsp; c.Offset(0, 4).Value = Item.HomeAddressPostalCode
End Sub
</code></pre>
<p>
This document is for informational purposes only.</p>
</BODY>
</HTML>
