<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Certificate Server</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_certserv"></a>Microsoft Certificate Server</h1>
<p>
Microsoft Corporation</p>
<p>
April 17, 1997 </p>
<h3><a name="certserv_contents"></a>Contents</h3>
<p>
<a href="#certserv_intro">Introduction</a><br>
<a href="#certserv_usage">Microsoft Certificate Server Usage Scenarios</a><br>
<a href="#certserv_benefits">Microsoft Certificate Server Benefits</a><br>
<a href="#certserv_archit">Microsoft Certificate Server Architecture</a><br>
<a href="#certserv_gloss">Glossary of Terms</a><br>
<a href="#certserv_further">Further Reading</a></p>
<p class=indent>
<B><b>Note&nbsp;&nbsp;&nbsp;</b></B>The information contained in this document represents the current view of Microsoft Corporation on the issues discussed as of the date of publication. Because Microsoft must respond to changing market conditions, this document should not be interpreted as a commitment on the part of Microsoft, and Microsoft cannot guarantee the accuracy of any information presented after the date of publication. Companies, names, and data used in examples herein are fictitious unless otherwise noted. This document is for informational purposes only. Microsoft makes no warranties, express or implied, in this document.</p>
<h2><a name="certserv_intro"></a>Introduction</h2>
<p>
The Internet has opened up new ways for organizations to communicate, both internally and externally. Better communication between employees, vendors, and customers enables an organization to cut costs, bring products to market faster, and build stronger customer relationships. This improved communication requires—at times—transmitting sensitive information over the Internet and intranets. It thus becomes imperative to be able to conduct private, tamperproof communication with known parties. To bring this about, organizations can build a secure infrastructure based on public-key cryptography by using digital certificates with technologies such as Secure Sockets Layer (SSL) and Secure Multipurpose Internet Mail Extensions (S/MIME).</p>
<p>
With certificates, clients can be assured of a server's identity—the server proves its identity by presenting a certificate. A user who connects to a Web site that has a server certificate signed by a trusted authority can be confident that the server is actually operated by the company identified in the certificate.</p>
<p>
Similarly, certificates enable servers to be confident of a client’s identity. When a user connects to a Web site, the server can be assured of the user’s identity if the server receives the client certificate.</p>
<p>
Certificates form the basis for secure authenticated communication and access control on the Internet and the intranet. They provide:
<ul type=disc>
<li>
<b>A high level of security. </b>Certificate-based authentication reduces security risks because the user does not have to send user names and passwords over insecure networks. Certificates, which are both public and tamperproof, can be sent over insecure networks. Certificate-based authentication is stronger than traditional methods of user authentication because digital certificates use public-key cryptography, which uses stronger encryption.<br><br></li>
<li>
<b>A single log on. </b>Certificates make it easy for users to log on to multiple sites on the Internet or an intranet. Users do not have to remember multiple user names and passwords for each site. Users log on once, and their browser presents their certificate to sites as needed. Single log ons are also easier to administer because there is no need to maintain user account databases on every server.</li>
</ul>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
<h2><a name="certserv_usage"></a>Certificate Server Usage Scenarios</h2>
<p>
Microsoft® Certificate Server can simplify the management of security and lower the cost of extending your corporate network. Here are just a few examples of how Certificate Server might be used:</p>
<h3>Corporate Extra-Networking</h3>
<p>
A company wants to provide current and former employees with access to their 401(k) information through the corporate intranet (for current employees) and over the Internet (for former employees). When employees want to review the current status of their retirement account or make changes to their fund allocations, they simply access a Web site that authenticates them—and they can view and change their personal information securely.
<ul type=disc>
<li>
The company issues certificates to employees and former employees.<br><br></li>
<li>
Employees access the 401(k) Web site (over the Internet using SSL or over the intranet) and present their certificates for authentication.<br><br></li>
<li>
A single password and log on provides employees access to company Web sites.</li>
</ul>
<h3>Managing Vendors and Supplier Communications</h3>
<p>
An organization works closely with vendors and wants to securely and selectively share information with them. Each vendor needs controlled access to information on the corporate intranet.
<ul type=disc>
<li>
Vendors are assigned to a Microsoft Windows NT® user group with specific access privileges.<br><br></li>
<li>
Certificate Server issues certificates for vendors, which are mapped to their Windows NT account.<br><br></li>
<li>
Vendors log on to the corporate intranet and are authenticated by presenting their certificates (usually the certificate presentation is done automatically by the browser or client application in use).<br><br></li>
<li>
The Web server maps certificates to vendor accounts—vendors can access only resources specified by the privileges assigned to their Windows NT accounts.</li>
</ul>
<h3>Customer Registration</h3>
<p>
An organization sells subscription services over the Internet to users who have visited its Web site.
<ul type=disc>
<li>
A potential customer goes to a Web site and fills out a request form for a subscription.<br><br></li>
<li>
Certificate Server’s entry module (a fully customizable component) processes the request. Certificate Server then issues the certificate to the customer and logs the user and policy information into a corporate database.<br><br></li>
<li>
The user can now go to the Web site, present the certificate, be authenticated, and access the service.<br><br></li>
<li>
If the user no longer wants to subscribe or if the service or subscription is misused, the administrator can revoke the user’s certificate and deny access.</li>
</ul>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
<h2><a name="certserv_benefits"></a>Microsoft Certificate Server Benefits</h2>
<h3>Complete Control over Policy and Auditing</h3>
<p>
Certificate Server enables an organization to easily manage the issuance, renewal and revocation of certificates without having to rely on external certificate authorities. With Certificate Server, an organization also has full control over the policies associated with the issuance, management, and revocation of certificates, as well as the format and contents of the certificates themselves. In addition, Certificate Server logs all transactions, which enables the administrator to track, audit, and manage certificate requests. The default policy automatically grants certificates to a trusted set of users based on a preset Windows NT user group of administrators, accounts, and servers. It can authenticate a user based on that user’s Windows NT log on and enables an administrator to directly approve or deny a certificate request.</p>
<p>
An Automation (formerly OLE Automation) interface for writing custom policy modules is provided with the Microsoft Certificate Server and enables the use of any programming language such as Microsoft Visual Basic®, Java, or C/C++. With this interface, an administrator can implement any policy needed. Other sample policies are also included with Certificate Server.</p>
<h3>Complete Control over Certificates</h3>
<p>
Administrators can issue certificates in standard formats (X.509 versions 1 and 3) as well as add extensions to certificates as needed. Certificate Server:
<ul type=disc>
<li>
Accepts standard PKCS #10 certificate requests.<br><br></li>
<li>
Issues X.509 version 1 and version 3 certificates in PKCS #7 format.<br><br></li>
<li>
Issues SSL client and server certificates.<br><br></li>
<li>
Issues S/MIME certificates.<br><br></li>
<li>
Issues SET-compliant certificates.<br><br></li>
<li>
Supports open interfaces that enable writing of modules to support custom formats.</li>
</ul>
<h3>High Reliability and Scalability</h3>
<p>
Certificate Server uses the reliability and scalability features of Microsoft Windows NT Server. It can be deployed on multiple servers in large organizations that need the flexibility of more than one certificate authority. Certificate Server is a multithreaded service on Windows NT and takes full advantage of the Windows NT multiprocessor capabilities. Certificate Server:
<ul type=disc>
<li>
Runs as a Windows NT service and is tightly integrated with the operating system.<br><br></li>
<li>
Offers high performance, multithreaded certificate processing.<br><br></li>
<li>
Uses CryptoAPI 2.0, which provides the flexibility to choose the level of encryption and device (hardware device or in software).</li>
</ul>
<h3>Integration with Other BackOffice Products</h3>
<p>
Certificate Server easily integrates with other products in the Microsoft BackOffice® family such as the Microsoft Exchange Server and the Microsoft SQL Server™. The Microsoft Exchange Server includes Key Manager, a tightly integrated certificate-issuing server that provides Microsoft Exchange users with the ability to send signed and encrypted e-mail to other Microsoft Exchange users. In a future release of the Microsoft Exchange Server, administrators will have the option to use Microsoft Certificate Server in place of the Key Manager server. </p>
<h3>Seamless Integration with Existing Infrastructure</h3>
<p>
Certificate Server works with Microsoft and non-Microsoft clients, browsers, and Web servers. You can choose to distribute and request certificates in many ways, including transport mechanisms that you can customize to your needs. The server can post certificates back to the user in e-mail, a light directory access protocol–based (LDAP-based) directory service, or any other custom mechanism. With Certificate Server, you can:
<ul type=disc>
<li>
Use any open database connectivity–compliant (ODBC-compliant) database, such as the Microsoft SQL Server, as a repository for all certificates and certificate revocation lists (CRLs) issued by a certificate authority (CA).<br><br></li>
<li>
Issue the certificate to any LDAP-compliant directory.</li>
</ul>
<h3>Easy Administration</h3>
<p>
Administrators can easily install and manage Certificate Server using the point-and-click user-friendly graphical user interface of Microsoft Windows NT. Administrators don’t have to learn a new administration tool—they can employ their knowledge of Windows NT. The Microsoft Certificate Server administration tools:
<ul type=disc>
<li>
Run in Microsoft Management Console.<br><br></li>
<li>
Can directly manage the Certificate Server queue for a specific server. For example, an administrator can view the list of certificate requests in the queue or view a specific request and approve, deny, or cancel it.<br><br></li>
<li>
Can query the certificate repository and perform specific operations on a certificate in the repository (view, revoke, and so forth).<br><br></li>
<li>
Use the event log to track certificate requests and other certificate operations.<br><br></li>
<li>
Use performance counters to track the number of certificates issued, the number of certificate requests in the queue, and other statistical information.</li>
</ul>
<h3>Installation and Configuration</h3>
<p>
Certificate Server is easy to install and configure. It can:
<ul type=disc>
<li>
Be installed and configured by using a wizard that prompts the user for CA information (Domain Name, Common Name, key storage, and so on).<br><br></li>
<li>
Set up distributed CA hierarchies. <br><br></li>
<li>
Generate a CA certification request (enables a CA to join a CA hierarchy).<br><br></li>
<li>
Distribute the CA root certificate to end users.</li>
</ul>
<h3>Revocation</h3>
<p>
Certificate revocation is fully controllable, automatically or with administrator intervention. The system administrator can:
<ul type=disc>
<li>
Revoke a certificate at any time.<br><br></li>
<li>
Automatically accept a revocation request from an end user.<br><br></li>
<li>
Produce nested certificate revocation lists (CRLs).<br><br></li>
<li>
Post CRLs to the certificate repository or LDAP directory.</li>
</ul>
<h3>Flexible Certificate Request (Entry) Modules</h3>
<p>
An administrator can fully customize how certificate requests are handled. The Entry module’s open interfaces give administrators the flexibility to generate keys on the server or on the client. </p>
<p>
Certificate Server offers many out-of-the-box solutions:
<ul type=disc>
<li>
A remote procedure call (RPC) entry module.<br><br></li>
<li>
A Hypertext Transfer Protocol/Hypertext Markup Language–based (HTTP/HTML-based) enrollment process.<br><br></li>
<li>
The ability to accept supplemental data with a certificate request for processing by the policy module.<br><br></li>
<li>
An Automation/COM interface for customizing the entry module.</li>
</ul>
<h3>Flexible Certificate Issuance (Exit) Modules</h3>
<p>
As with Certificate Server’s entry modules, the exit modules are also fully customizable. You can:
<ul type=disc>
<li>
Use the provided RPC exit module.<br><br></li>
<li>
Use HTTP and HTML to issue certificates.<br><br></li>
<li>
Issue certificates via e-mail.<br><br></li>
<li>
Add custom extensions to certificates.<br><br></li>
<li>
Store certificates in a certificate repository, ODBC database, or any LDAP-based directory.</li>
</ul>
<h3>Standards-Based, Open Technologies</h3>
<p>
Certificate Server is built on industry standards and open technologies. It includes support for:
<ul type=disc>
<li>
X.509 version 3 certificates with customizable extensions.<br><br></li>
<li>
RSA and PKCS standards.<br><br></li>
<li>
Both software and hardware signing, as well as choice of key lengths and cryptographic algorithms provided by the open cryptographic application programming interface (CryptoAPI).<br><br></li>
<li>
HTML, HTTP, SSL, LDAP, Active Directory Service Interfaces (ADSI), S/MIME, COM, Distributed COM (DCOM), ODBC, C/C++, Microsoft Visual Basic, and Java.</li>
</ul>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
<h2><a name="certserv_archit"></a>Microsoft Certificate Server Architecture</h2>
<p>
Microsoft Certificate Server runs as a service on Microsoft Windows NT and handles all certificate requests, issuances, and CRLs. It tracks the status of each certificate operation by using a transaction queue. When done with an operation, it writes the complete transaction in a log for later auditing by an administrator.</p>
<p>
The following diagram shows the main Certificate Server components. The Certificate Server engine, queue, and log all run as a single Windows NT service. Entry, exit, and policy modules and the administration tools run in separate processes. The numbered arrows in Figure 1 show the stages of a certificate request. Each of the following numbered sections of text describes how each component works, following the progress of the certificate request.</p>
<p>
<img src="certse01.gif" border=0></p>
<p class=label>
<b>Figure 1. Certificate Server components</b></p>
<p>
<b>1. Client and entry modules</b></p>
<p>
A certificate request originates with a client application. This can be any application that supports digital certificates—a Web server or browser, an e-mail client, or a shopping front end for an online store. Certificate Server offers a flexible entry point, called an entry module, which can be designed to take requests in many standard formats. Entry modules perform two main functions: they understand the protocol or transport mechanism used by the requesting application and they handle the communication with the Certificate Server when new certificate requests need to be submitted. If you have specific needs not met by one of the provided entry modules, you can write your own entry module using the open COM interface that Certificate Server provides. The open interfaces in the entry module give the administrator the flexibility to generate a key pair on the client or the server.</p>
<p>
<b>2. and 3. Queue and policy modules</b></p>
<p>
The entry module passes the certificate request to the Certificate Server engine. The engine enters the request in the queue and passes it on to the policy module. The policy module determines whether to grant the certificate and combines any extra information in the request with the certificate. The policy module, like the entry module, is fully customizable.</p>
<p>
When making the grant determination, the policy module can look at external databases, checking information in the request against other sources for verification, such as a directory service, legacy database, credit information from an outside credit authority, and so forth. The policy module can also send alerts to the appropriate administrators if manual (offline) approval of the request is required.</p>
<p>
The policy module then packages the information in the request as specified by the administrator. The policy module can be instructed to insert any certificate extensions that might be required by a client application. For example, the information could include a job title and a signing limit—used by an online purchasing form to determine whether the user can sign for the amount requested. In this way, certificates enable authentication requirements to be easily distributed.</p>
<p>
<b>4. Certificate creation and logging</b></p>
<p>
When the policy module passes the granted certificate request back to the Certificate Server engine, the engine updates the queue, encodes and digitally signs the certificate, and logs the completed transaction. The log tracks all requests and whether they were granted or denied. It also stores all published certificates and certificate revocation lists for auditing purposes.</p>
<p>
<b>5. and 6. Exit module</b></p>
<p>
Certificate Server passes the certificate to the exit module, which packages it in the appropriate transport mechanism or protocol. It can send it in e-mail, over the network, or post the certificate in a directory service such as the Active Directory.</p>
<p>
Like the entry module, the exit module is fully customizable. Moreover, a single server can have multiple exit modules so that it can both send the certificate to the client application and store it in a separate database or certificate repository. Others can use the certificate repository to look up a user’s certificate information for verification.</p>
<p>
The exit module is also responsible for delivering CRLs. Because the exit module is already handling certificate repository updates, CRLs are automatically delivered to wherever certificates are stored.</p>
<h3>Administration Tools</h3>
<p>
Certificate Server provides a group of administration tools for configuring, monitoring, and controlling the operations of the server. In addition to modifying policies and adding new entry and exit modules, administrators can also view the Certificate Server queue directly (with appropriate access permissions). An administrator can look at the queue and deny a certificate request (or grant one), and can also force the immediate delivery of a high-priority CRL.</p>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
<h2><a name="certserv_gloss"></a>Glossary of Terms</h2>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=24%>CA</td>
<td width=76%>Certificate Authority. An entity that issues, manages, and revokes certificates.</td>
</tr>
<tr valign=top>
<td width=24%>CRL</td>
<td width=76%>Certificate Revocation List. A document maintained and published by a CA that lists certificates that have been revoked by the CA.</td>
</tr>
<tr valign=top>
<td width=24%>client certificate</td>
<td width=76%>Refers to the use of a certificate for client authentication. For example, a Web browser can be considered the client of a Web server. When a Web browser attempts to access a secured Web server, it would send its certificate to the server for verification of the client’s identity.</td>
</tr>
<tr valign=top>
<td width=24%>CryptoAPI</td>
<td width=76%>Microsoft Cryptographic API. An application programming interface providing services for authentication, encoding, and encryption in Microsoft Win32®-based applications.</td>
</tr>
<tr valign=top>
<td width=24%>DLL</td>
<td width=76%>Dynamic-link library. A code module that is not itself an executable program, but can be loaded and shared by one or more executable programs.</td>
</tr>
<tr valign=top>
<td width=24%>HTML</td>
<td width=76%>Hypertext Markup Language. A tag-based presentation language used to create Web pages.</td>
</tr>
<tr valign=top>
<td width=24%>HTTP</td>
<td width=76%>Hypertext Transfer Protocol. A communications protocol used to transfer information over Transport Control Protocol/Internet Protocol (TCP/IP) networks such as corporate intranets and the Internet.</td>
</tr>
<tr valign=top>
<td width=24%>Internet</td>
<td width=76%>A global network of computers that communicate using a set of common protocols including HTTP and TCP/IP.</td>
</tr>
<tr valign=top>
<td width=24%>intranet</td>
<td width=76%>Refers to any TCP/IP network that is not connected to the Internet but uses Internet communications standards and tools to provide information to users on a private network.</td>
</tr>
<tr valign=top>
<td width=24%>LDAP</td>
<td width=76%>Lightweight directory access protocol. </td>
</tr>
<tr valign=top>
<td width=24%>ODBC</td>
<td width=76%>Open Database Connectivity. A database connectivity standard that enables applications to communicate with database back ends without writing to a specific database management system (DBMS).</td>
</tr>
<tr valign=top>
<td width=24%>PKCS</td>
<td width=76%>Public-Key Cryptography Standards.</td>
</tr>
<tr valign=top>
<td width=24%>RPC</td>
<td width=76%>Remote procedure call. A widely used standard defined by the Open Software Foundation (OSF) for distributed computing. The RPC transport enables one process to make calls to functions that are part of another process. The other process can be on the same computer or on a different computer on the network.</td>
</tr>
<tr valign=top>
<td width=24%>SSL</td>
<td width=76%>Secure Sockets Layer. A standard protocol for secure network communication using public-key technology.</td>
</tr>
<tr valign=top>
<td width=24%>server certificate</td>
<td width=76%>Refers to the use of a certificate for server authentication. For example, a Web server would send its server certificate to a Web browser to enable the Web browser to verify the server’s identity.</td>
</tr>
<tr valign=top>
<td width=24%>TCP/IP</td>
<td width=76%>Transmission Control Protocol/Internet Protocol. A standard networking protocol used by the Internet and by intranets.</td>
</tr>
<tr valign=top>
<td width=24%>X.509</td>
<td width=76%>Standard certificate format supported by Certificate Server.</td>
</tr>
</table><br>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
<h2><a name="certserv_further"></a>Further Reading</h2>
<p>
The following are additional documents that will help you understand certificates, authentication, and the associated security issues:</p>
<p>
CCITT. <i>Recommendation X.509: The Directory-Authentication Framework</i>. 1989.</p>
<p>
RSA Laboratories. <i>PKCS #7: Cryptographic Message Syntax Standard</i>. Version 1.5, November, 1993.</p>
<p>
Schneier, Bruce. <i>Applied Cryptography</i>. 2d ed. New York, NY: John Wiley &amp; Sons, 1996.</p>
<p>
For information about Microsoft security technologies, the Microsoft CryptoAPI, and other Microsoft technologies, see the Microsoft Security Advisor Web site (<a href="http://www.microsoft.com/security/">http://www.microsoft.com/security/</a>).</p>
<p>
<a href="#certserv_contents">Return to Contents</a></p>
</BODY>
</HTML>
