<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding ODBC and OLE</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_underodbc.doc"></a>Understanding ODBC and OLE </h1>
<p>
Microsoft Corporation</p>
<p>
1997</p>
<p>
There has been some confusion lately regarding the relationship of ODBC and OLE. Some people have been hearing that ODBC is being dropped in favor of OLE while others see them as separate and complementary technologies. This document describes the two technologies and how they work together to provide OLE applications with access to SQL data. </p>
<h2>Open Database Connectivity (ODBC) for Database Connectivity </h2>
<p>
Open Database Connectivity (ODBC) technology provides a common interface for accessing heterogeneous SQL databases. ODBC is based on Structured Query Language (SQL) as a standard for accessing data. This interface provides maximum interoperability: a single application can access different SQL Database Management Systems (DBMS) through a common set of code. This enables a developer to build and distribute a client/server application without targeting a specific DBMS. Database drivers are then added to link the application to the user's choice of DBMS. </p>
<p>
ODBC's flexibility is illustrated by the following features: 
<ul type=disc>
<li>
Applications are not tied to a proprietary vendor API. <br><br></li>
<li>
SQL statements can be explicitly included in source code or constructed on the fly at run time. <br><br></li>
<li>
An application can ignore the underlying data communications protocols. <br><br></li>
<li>
Data can be sent and received in a format that is convenient to the application. <br><br></li>
<li>
ODBC is designed in conjunction with the emerging international ISO Call-Level Interface standard. <br><br></li>
<li>
There are ODBC database drivers available today for 55 of the most popular databases. </li>
</ul>
<h2>OLE for Designing Reusable Component Software </h2>
<p>
OLE is an object-oriented technology that enables development of reusable software components. The OLE component object model paradigm represents a fundamental shift in the way applications are written. Instead of traditional procedural programming in which each component implements the functionality it requires, the OLE architecture allows applications to use shared objects that provide specific functionality. Things like text documents, charts, spreadsheet tables, mail messages, graphics, and sound clips all appear as objects to the OLE application. </p>
<p>
OLE objects are supported on the Windows® and Macintosh® platforms today and are the foundation of future Windows operating systems. </p>
<h2>ODBC and OLE Working Together </h2>
<p>
As part of our commitment to OLE, Microsoft has defined a set of data objects, collectively known as "OLE DB," which allow OLE-oriented applications to share and manipulate sets of data as objects. This technology includes an ODBC Provider that exposes OLE DB objects over any ODBC driver. This allows any OLE DB application to access SQL data exposed through ODBC drivers, and opens the door to a whole new class of clients for ODBC drivers. </p>
<p>
For more information on OLE DB, go to <a href="http://www.microsoft.com/data/">http://www.microsoft.com/data/</a>. </p>
</BODY>
</HTML>
