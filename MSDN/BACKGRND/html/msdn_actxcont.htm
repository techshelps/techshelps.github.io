<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveX Controls Overview</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_actxcont"></a><sup></sup>ActiveX Controls Overview</h1>
<p>
Nancy Cluts<br>
Developer Technology Engineer<br>
Microsoft Corporation</p>
<p>
Last updated: June 24, 1997</p>
<h4>What is an "ActiveX control"?</h4>
<p>
ActiveX™ controls, formerly known as <i>OLE controls</i> or <i>OCX controls</i>, are components (or objects) you can insert into a Web page or other application to reuse packaged functionality someone else programmed. For example, the ActiveX controls that are included with Microsoft® Internet Explorer version 3.<i>x</i> allow you to enhance your Web pages with sophisticated formatting features and animation.</p>
<p>
A key advantage of ActiveX controls over Java™ applets and Netscape plug-ins is that ActiveX controls can <i>also</i> be used in applications written in many programming languages, including all of the Microsoft programming and database languages.</p>
<p>
There are literally hundreds of ActiveX controls available today with functionality ranging from a timer control (which simply notifies its container at a particular time) to full-featured spreadsheets and word processors. If you can imagine it, you can do it with an ActiveX control.</p>
<p>
You can add ActiveX controls to your Web pages by using the standard HTML &lt;OBJECT&gt; tag. The &lt;OBJECT&gt; tag includes a set of parameters that you use to specify which data the control should use and to control the appearance and behavior of the control.</p>
<p>
Microsoft Internet Explorer version 3.<i>x</i> comes with a set of ActiveX controls that it uses. With some of these controls, you can:
<ul type=disc>
<li>
Simplify and automate your authoring tasks (for example, display "NEW!" images for new items on your site with a date specification; after that date, the images will automatically become invisible).<br><br></li>
<li>
Display data in ways other than text and tables (for example, charts or text displayed at different angles).<br><br></li>
<li>
Add functionality to your pages (for example, timers, animation, and background downloading).</li>
</ul>
<p>
The ActiveX controls that are provided with Internet Explorer 3.<i>x</i> are installed automatically when the user installs Internet Explorer 3.<i>x</i>. Once installed, ActiveX controls run automatically when a Web page containing them is displayed—users do not need to download any additional files.</p>
<p>
If you're a Web author, you can take advantage of the ready-to-use ActiveX controls listed below. If you're a programmer, you can write your own controls using Visual C++® and one of the ActiveX control frameworks: the Microsoft Foundation Class Library (MFC), the ActiveX Template Library (ATL), or the BaseCtl framework.</p>
<h4>Microsoft ActiveX controls</h4>
<p>
Along with Internet Explorer version 3.<i>x</i>, Microsoft has provided controls such as Chart, Label, Preloader, and Timer. You can easily add these controls to your Web pages with the &lt;OBJECT&gt; tag. See the Microsoft ActiveX Controls programming reference page at <a href="http://www.microsoft.com/workshop/prog/controls/ctrlref.htm">http://www.microsoft.com/workshop/prog/controls/ctrlref.htm</a> for detailed descriptions and full syntax for these controls.</p>
<h4>How to start writing ActiveX controls</h4>
<p>
ActiveX controls are OLE controls that have been extended for the Internet environment. The specs in the Microsoft ActiveX SDK (available in the MSDN Library) provide background information on ActiveX controls and some preliminary information on writing controls. If you are developing ActiveX controls for Internet Explorer 3.<i>x</i>, use the ActiveX SDK; if, however, you are developing ActiveX controls for Internet Explorer 4.0, you should use the Internet Client SDK (INet SDK). The INet SDK is backward-compatible with the ActiveX SDK, and contains information and tools for applications and controls targeted to Internet Explorer 4.0.</p>
<p>
There are three basic ways to write ActiveX controls today:</p>
<p>
If you are already a proficient C/C++ OLE developer, the easiest method is probably to use the OLE control development facilities built into Visual C++ and MFC. This technology allows you to create control executables that are pretty small (so they download faster); however, it requires the correct MFC dynamic-link library (DLL) to be installed on the user’s system. This DLL is quite large—nearly a megabyte. But even so, it needs to be installed only once on each user’s system and shouldn’t take more than 10 minutes or so to download, even at 14.4 Kbps. The good news is that this DLL most likely already resides on your computer (or your user’s computer) and will not need to be downloaded.</p>
<p>
The Microsoft Internet Explorer developers included a sample called BaseCtl in the ActiveX SDK. This sample comprises the FrameWrk, ToDoSvr, and WebImage examples. Writing your controls in this style gives you the smallest possible controls; however, it also requires intimate knowledge of OLE Component Object Model (COM) and ActiveX control architecture—so it’s not for the faint-of-heart.</p>
<p>
Finally, the Visual C++ team has created the ActiveX Template Library (ATL), which includes the library plus the Beeper and Labrador samples (go to <a href="http://www.microsoft.com/visualc/prodinfo/default.htm">http://www.microsoft.com/visualc/prodinfo/default.htm</a>). This is a library of C++ templates that allows you to create very fast and small controls—in fact, you can even avoid linking in the C run-time library. The templates also do some of the grunge work of OLE for you, but they still require a pretty intimate knowledge of COM and ActiveX control architecture—so they’re for those who aren’t timid, but would like to have some of the tedious OLE work done for them.</p>
<p>
Here are some good technical articles and samples that can help you through the process of learning about ActiveX controls:
<ul type=disc>
<li>
"ActiveX Tutorial Samples" at <a href="http://www.microsoft.com/workshop/prog/activex/tutorial">http://www.microsoft.com/workshop/prog/activex/tutorial</a>.<br>
A Web-based tutorial that covers the foundations of ActiveX technology with complete code samples. The tutorial consists of over 20 lessons and includes a download file that contains the complete set of code samples. <br><br></li>
<li>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_ctrlfmk">
</object><a href=JavaScript:alink_1.Click()>"ActiveX Controls Framework: Sample Code for Authoring Non-MFC Controls"</a><br>
This document presents information on using the ActiveX Controls Framework to author new ActiveX controls. <br><br></li>
<li>
<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_creaactx">
</object><a href=JavaScript:alink_2.Click()>"Creating ActiveX Components in C++"</a><br>
This article walks you through the basic steps of creating a simple ActiveX control and explains how you can embed this control in a Visual Basic application or use the control directly from Internet Explorer 3.<i>x</i>. <br><br></li>
<li>
<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_iknctrl2">
</object><a href=JavaScript:alink_3.Click()>"The Site Builder Network Navigation Bar"</a><br>
Sue Ledoux conducts a step-by-step code review of the Microsoft Site Builder Network navigation bar, which provides Windows-style pop-up, cascading menus for the Site Builder Network site. <br><br></li>
<li>
<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_actmovie1">
</object><a href=JavaScript:alink_4.Click()>"Using the ActiveMovie Control in Web Pages, Part I: HTML Tags"</a><br>
This first installment of a two-part series discusses the HTML tags you can use with the ActiveMovie control. <br><br></li>
<li>
<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_actmovie2">
</object><a href=JavaScript:alink_5.Click()>"Using the ActiveMovie Control in Web Pages, Part II: Scripting"</a><br>
This second installment of a two-part series describes how to use scripting with the ActiveMovie control. <br><br></li>
<li>
<object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_abcsmfc">
</object><a href=JavaScript:alink_6.Click()>"The ABCs of MFC ActiveX Controls"</a><br>
This technical article takes an in-depth, step-by-step look at building ActiveX controls, using the StopLite control as an example. <br><br></li>
<li>
<object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="msdn_signmark">
</object><a href=JavaScript:alink_7.Click()>"Signing and Marking ActiveX Controls"</a><br>
This article covers the whys and hows of signing ActiveX controls and marking them safe for initializing and safe for scripting.</li>
</ul>
<p>
<i>Did you find this article useful? Gripes? Compliments? Suggestions for other articles? Drop me a line at </i>nancycl@microsoft.com<i> and let me know.</i></p>
</BODY>
</HTML>
