<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Application Foundation Classes: Frequently Asked Questions</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_afcfaq"></a>Microsoft Application Foundation Classes: Frequently Asked Questions</h1>
<p>
Microsoft Corporation</p>
<p>
January 21, 1997</p>
<h4>What are the Application Foundation Classes? </h4>
<p>
AFC is a rich suite of graphics, user interface and multimedia capabilities, written entirely in Java, that build on top of the basic Java AWT library to provide a powerful set of building blocks for Internet and Java application developers. </p>
<h4>Is AFC cross platform and cross browser? </h4>
<p>
Because AFC is written completely in Java, it is completely cross platform. It will run on any Java-capable browser or computing platform. </p>
<h4>How does AFC relate to the basic Java AWT class library? </h4>
<p>
AFC is built on top of the basic Java AWT library and provides full compatibility with the AWT programming model. Developers can leverage their existing investment in AWT knowledge and code when using AFC. </p>
<h4>How does AFC help developers write cooler and more sophisticated apps? </h4>
<p>
AFC has been carefully designed to make it easy and intuitive for people to build up their user interfaces for their applications in a natural yet powerful way, using sophisticated user interface elements. A wide variety of pre-built and easily customizable components saves developers considerable time. Developers do not have to create their user interface elements from scratch. </p>
<h4>What do user interfaces built with AFC look like? </h4>
<p>
Developers can use the familiar Windows look and feel or they can easily customize the controls to whatever look and feel they desire. Because AFC is written entirely in Java, it can be easily modified incrementally (subclassed) without having to reimplement a particular control from scratch. </p>
<h4>How does AFC speed the development process? </h4>
<p>
With a wide variety of sophisticated, pre-built user interface elements ranging from buttons all the way through tool and command bars, treeview, and listview controls, developers can mix, match, and customize these controls to create compelling user interfaces for their Java applications. Moreover, these controls offer state-of-the-art features like hot tracking and incremental type searching. </p>
<h4>How easy is AFC to use? </h4>
<p>
We have designed AFC to be as flexible and powerful as possible. The controls build from each other in an intuitive, natural way, enabling developers to quickly and easily create effective user interfaces for their applications. </p>
<h4>Will tools vendors support AFC? </h4>
<p>
Leading tools vendors are committing to support AFC. So far, Borland, Metrowerks and Microsoft have announced that they will be supporting AFC in their development tools. We expect all major tools vendors will fully support AFC. </p>
<h4>When will you deliver AFC on which platforms? </h4>
<p>
AFC is on the same schedule as Internet Explorer 4.0, both betas and the final ship. The first beta will be in the first quarter, with final shipment later this year. Because it is written in Java, it will be available for all Java-capable platforms and browsers immediately when it ships, not just Windows. Customers can begin development immediately with the beta release. </p>
<h4>How do developers get AFC? </h4>
<p>
AFC will ship with a variety of third party and Microsoft products, including future versions of Internet Explorer, Visual J++ and the Microsoft SDK for Java. The class libraries will also be available for free redistribution with Java products on any platform. </p>
<h4>Does AFC require the Microsoft virtual machine? </h4>
<p>
No, it can run on any reasonable implementation of Java. Like most code written in Java, it will execute faster and more reliably when run on the Microsoft virtual machine. </p>
<h4>Does AFC run better on Windows than on other platforms? </h4>
<p>
We certainly hope so. We have invested a lot of time and effort to make Java run better on Windows than any other platform. </p>
<h4>Is Microsoft writing any applications in Java? </h4>
<p>
Yes, although we are not prepared to comment on these unannounced products specifically. The reason we developed AFC is that our internal Java application efforts quickly discovered there were no good "industrial strength" class libraries on the market, so building on our extensive Windows experience, we developed AFC and decided to make them available to all developers. </p>
<h4>Is AFC a replacement for MFC? </h4>
<p>
No. MFC is designed for C++ programmers, AFC has been designed from the ground up for Java programmers. </p>
<h4>Should MFC developers use AFC? </h4>
<p>
Only if they are starting to do development in Java. AFC is not accessible to C++ developers and MFC is not accessible to Java developers. </p>
<h4>How does AFC relate to other class libraries for Java? </h4>
<p>
AFC is faster, smaller, offers richer functionality and is more flexible. Moreover, unlike other class libraries that force developers to choose between AWT and another class library, AFC is fully compatible with the AWT programming model. </p>
</BODY>
</HTML>
