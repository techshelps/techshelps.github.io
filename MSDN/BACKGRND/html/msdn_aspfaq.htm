<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Active Server Pages: Frequently Asked Questions</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_aspfaq"></a>Microsoft Active Server Pages: Frequently Asked Questions</h1>
<p>
Microsoft Corporation</p>
<h2>Product Overview</h2>
<h4>What is Active Server Pages?</h4>
<p>
Microsoft® Active Server Pages (ASP) is the server-side execution environment in Microsoft Internet Information Server (IIS) 3.0 that enables you to run ActiveX™ scripts and ActiveX server components on the server. By combining scripts and components, developers can create dynamic content and powerful Web-based applications easily.</p>
<h4>What is dynamic content?</h4>
<p>
Web pages that are customized for each user on the fly, based upon their actions or requests. For example, new visitors to your site can be shown a different welcome page than returning users see, or pages in an online catalog can be queries to a database so customers always see the most current information and availability.</p>
<h4>Who should use Active Server Pages?</h4>
<p>
Organizations will use the Active Server Pages technology to put a Web front end on existing business solutions, or to create entirely new Web-based applications. Since ASP provides a very open development environment, with support for both Microsoft Visual Basic®, Scripting Edition (VBScript) and JScript™, organizations can leverage the investments they already have in these scripting languages.</p>
<h4>Who can create dynamic content with Active Server Pages? </h4>
<p>
Webmasters, information systems (IS) professionals, and programmers familiar with Hypertext Markup Language (HTML) and languages such as Microsoft Visual Basic, JavaScript, PERL, REXX, or C++.</p>
<h4>What do I need to run Active Server Pages?</h4>
<p>
The Active Server Pages feature of IIS 3.0 requires Microsoft Windows NT® Server 4.0 running IIS 2.0 or Windows NT Workstation 4.0 running Peer Web Services.</p>
<p>
The ASP feature does not require Service Pack 2 for Windows NT 4.0, although it is recommended that all Windows NT systems receive the Service Pack 2 updates. The ASP feature contains a subset of the updates found in Service Pack 2.</p>
<p>
Installation of ASP will upgrade IIS version 2.0 to version 3.0. The other IIS 3.0 features—Index Server 1.1, Microsoft NetShow™, FrontPage® 97 Server Extensions, and Crystal Reports—add significant functionality to IIS, but are not required to take advantage of ASP.</p>
<h4>How much will Active Server Pages cost?</h4>
<p>
Active Server Pages is a component of IIS 3.0, which is a free, downloadable, and integrated feature of Windows NT Server 4.0.</p>
<h2>Features</h2>
<h4>What can Active Server Pages do for my business?</h4>
<p>
Active Server Pages can develop a new generation of Web-based applications, including extending sales and customer service to the Web, and providing access to corporate databases and applications to any browser on an intranet. </p>
<h4>What ActiveX Server Components are supported?</h4>
<p>
Active Server Pages allows organizations to extend the power of scripting on the server with ActiveX server components. These components can be created using Microsoft Visual Basic, Visual C++®, Java, and other languages.</p>
<h4>What scripting languages does Active Server Pages support? </h4>
<p>
Active Server Pages provides native support for both Microsoft JScript and VBScript. ActiveX scripting plug-ins are available for REXX, PERL, and Python.</p>
<h4>What browsers does Active Server Pages support?</h4>
<p>
Active Server Pages can work with any Web browser. The output of an ASP file is plain HTML, the content of which can be customized for the capabilities of the client.</p>
<h4>Does Active Server Pages maintain state for me?</h4>
<p>
Yes. Active Server Pages allows you to define application and session variables that can be carried across multiple pages in a Web site. This can be as simple as remembering a user's name, and it is necessary in applications such as online shopping to track product selections.</p>
<h4>What about legacy data?</h4>
<p>
Active Server Pages makes it easy to bring legacy database applications to the Web. </p>
<h2>Implementation Questions</h2>
<h4>On which platforms does Active Server Pages run? </h4>
<p>
Active Server Pages will run on Microsoft Windows NT Server 4.0, Windows NT Workstation 4.0 with Peer Web Services, and Microsoft Windows® 95 with Personal Web Server. Windows NT 3.51 is NOT supported. Windows NT 4.0 on MIPS is also not supported by ASP.</p>
<h4>Is Active Server Pages secure?</h4>
<p>
Yes. Active Server Pages is a component of Internet Information Server, and thus uses Windows NT Security. ASP files can be easily restricted to just certain users through secure Windows NT authentication, basic Web authentication, or client-side certificates. For additional security, all client-to-server communications can be secured with Secure Sockets Layer (SSL).</p>
<h4>What data sources can my Web application integrate with?</h4>
<p>
An Active Server Pages application can integrate with any ODBC-compliant databases including Microsoft SQL Server™, Oracle, Sybase, Informix, and DB2 databases. Any OLE 2 application, such as Lotus Notes or Microsoft Excel, can also be scripted to access or process information. You can also write components to access online data feeds and legacy mainframes.</p>
<h4>How does Active Server Pages compare to CGI?</h4>
<p>
Active Server Pages provides all of the functionality of CGI applications in an easier-to-use and more robust environment. </p>
<p>
ASP is an easier way for your server to access information in a form not readable by the client (such as an SQL database) and then act as a gateway between the two to produce information that the client can view and use.</p>
<p>
With CGI, the server creates as many processes as the number of client requests received. The more concurrent requests there are, the more concurrent processes created by the server. However, creating a process for every request is time-consuming and requires large amounts of server RAM. In addition, this can restrict the resources available for sharing from the server application itself, slowing down performance and increasing wait times on the Web.</p>
<p>
Active Server Pages runs in the same process as the Web Server, handling client requests faster and more efficiently. It is much easier to develop dynamic content and Web applications with ASP.</p>
<h4>How does Active Server Pages compare to ISAPI applications?</h4>
<p>
ISAPI applications require all of the programming and layout to be contained in a .dll file written in C++. ISAPI applications are thus more difficult to create and maintain. With ASP files, an HTML writer can script an external component and format the output. ASP separates the layout and design from the business logic.</p>
<h4>How does Active Server Pages compare to PERL?</h4>
<p>
PERL and other scripting languages are not robust development tools by themselves. Active Server Pages provides a familiar framework and objects for building complex applications that require data from relational databases and legacy sources.</p>
<p>
ASP supports virtually any scripting language to build these applications. Third parties are currently developing additional scripting engines, such as PERL, which we will announce when they are ready.</p>
<h4>Can Active Server Pages use Java?</h4>
<p>
Yes. Active Server Pages supports ActiveX server components written in any language, including Java. In addition, ASP includes the Microsoft Windows reference standard Java Virtual Machine.</p>
<h4>Can I use existing Automation servers?</h4>
<p>
There really are no minimum requirements for a component, beyond supporting Automation through <b>IDispatch</b>. You can optionally provide the following two methods on <b>IDispatch</b>:
<ol>
<li>
<b>OnStartPage</b><br><br></li>
<li>
<b>OnEndPage</b></li>
</ol>
<p>
Refer to "Creating ASP Components" in the Programmer's Reference for more details.</p>
<h2>Competition</h2>
<h4>What does Active Server Pages do better than other Web application tools?</h4>
<p>
Active Server Pages allows you to quickly bring your existing skills and knowledge, data sources, components, and applications to the Web. Other tools create either static HTML or lock you into a non-standard programming model or language. ASP is based upon the leading industry standards, making it easy to build, maintain, and evolve powerful interactive Web applications.</p>
<h4>How does Active Server Pages compare to Netscape LiveWire?</h4>
<p>
Netscape LiveWire requires the use of JavaScript, while Active Server Pages supports the use of virtually any scripting language, with native support for VBScript and JScript. ASP supports components written in any language, while LiveWire supports only Java components.</p>
<p>
LiveWire applications must be manually compiled after each change, and then the application stopped and restarted. Active Server Pages recognizes when an ASP file changes and automatically recompiles the application at the next request.</p>
</BODY>
</HTML>
