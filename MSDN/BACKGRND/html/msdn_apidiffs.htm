<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differences in Win32 API Implementations Among Windows Operating Systems</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_apidiffs"></a>Differences in Win32 API Implementations Among Windows Operating Systems </h1>
<p>
Noel Nyman</p>
<p>
Created: October 10, 1996<br>
Revised: December 12, 1996</p>
<h2>Windows API Implementations</h2>
<p>
The Microsoft® Windows® platform continues to evolve, responding to new developments in hardware and software technologies. Microsoft offers two mainstream, modern 32-bit desktop operating systems: Windows NT® Workstation version 4.0 and Microsoft Windows 95. </p>
<p>
Microsoft Windows 95 OEM Service Release 2 (OSR 2), an update to Microsoft Windows 95, adds support for new and emerging hardware. This release includes updates to Windows 95 that have previously been available separately. Most computer manufacturers who pre-installed Windows 95 on new PCs began using OSR 2 in the fourth quarter of 1996. Many components of OSR 2 are available for download from Microsoft at <a href="http://www.microsoft.com/windows/">http://www.microsoft.com/windows/</a>.</p>
<p>
Windows 95, Windows 95 OSR 2, and Windows NT use the same Win32® application programming interface (API). However, Windows 95 and Windows NT are different operating systems with different capabilities. OSR 2 adds functionality to Windows 95. Each operating system uses technology that is not present in the other. As a result, some of the functions of the Win32 API may require different parameters or calling conventions on each platform. Other functions are not implemented on all platforms. This white paper describes Win32 API differences among the platforms, allowing developers to make appropriate design decisions and create applications that make effective use of the functionality available on Windows platforms.</p>
<h2>Overview</h2>
<p>
Microsoft Windows 95, Windows 95 OSR 2, and Windows NT 4.0 are all 32-bit operating systems that use the same Win32 API. Although the API has changed and expanded to encompass new features, programs will, in most cases, work without modification on all three operating systems. For more information on the API, see "Introduction to the Win32 Application Programming Interface" (MSDN Library Archive, Backgrounders).</p>
<p>
There are some differences between Windows 95, Windows 95 OSR 2, and Windows NT 4.0 that applications must accommodate to run successfully on two or more of those platforms. This white paper discusses several categories of those differences:
<ul type=disc>
<li>
<b>Windows 95–specific APIs</b>—Functions that are built-in components of Windows 95 (and Windows 95 OSR 2), but are not available on Windows NT 4.0.<br><br></li>
<li>
<b>Windows 95 OSR 2–specific APIs</b>—Functions that are built-in components of Windows 95 OSR 2, but are not available on Windows 95 or Windows NT 4.0.<br><br></li>
<li>
<b>Using Windows 95 OSR 2 features with Windows 95</b>—Notes for using Windows 95 OSR 2 functions with Windows 95.<br><br></li>
<li>
<b>Redistributable APIs</b>—Functions that are built-in components of Windows NT 4.0 or Windows 95 OSR 2 and may be used on Windows 95 if redistributable dynamic-link libraries (DLLs) are installed.<br><br></li>
<li>
<b>Common APIs</b> <b>with calling differences</b>—Functions that are built-in components of Windows 95 and Windows NT 4.0, but require different calling parameters or return different information on each operating system.<br><br></li>
<li>
<b>Windows NT 4.0–specific APIs</b>—Functions that are built-in components of Windows NT 4.0, but are not available on Windows 95 or Windows 95 OSR 2.</li>
</ul>
<h2>Windows 95–Specific APIs</h2>
<h3>Independent Color Matching</h3>
<p>
The following API functions are not supported in Windows NT 4.0:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=50%><b>CheckColorsInGamut</b></td>
<td width=50%><b>ColorMatchToTarget</b></td>
</tr>
<tr valign=top>
<td width=50%><b>CreateColorSpace</b></td>
<td width=50%><b>DeleteColorSpace</b></td>
</tr>
<tr valign=top>
<td width=50%><b>EnumICMProfiles</b></td>
<td width=50%><b>FreeImageColorMatcher</b></td>
</tr>
<tr valign=top>
<td width=50%><b>GetColorSpace</b></td>
<td width=50%><b>GetDeviceGammaRamp</b></td>
</tr>
<tr valign=top>
<td width=50%><b>GetICMProfile</b></td>
<td width=50%><b>GetLogColorSpace</b></td>
</tr>
<tr valign=top>
<td width=50%><b>LoadImageColorMatcher</b></td>
<td width=50%><b>SetColorSpace</b></td>
</tr>
<tr valign=top>
<td width=50%><b>SetDeviceGammaRamp</b></td>
<td width=50%><b>SetICMMode</b></td>
</tr>
<tr valign=top>
<td width=50%><b>SetICMProfile</b></td>
<td width=50%><b>UpdateICMRegKey</b></td>
</tr>
</table><br>
<h3>Plug and Play</h3>
<p>
Plug and Play is not supported on Windows NT 4.0. Microsoft has committed to providing this functionality with the next major release of Windows NT Workstation. The ICOPEN.dnDevNode structure is not supported in Windows NT 4.0.</p>
<p>
RT_PLUGPLAY is not supported in Windows NT 4.0 as a resource type for these API functions.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=46%><b>EnumResLangProc</b></td>
<td width=54%><b>EnumResNameProc</b></td>
</tr>
<tr valign=top>
<td width=46%><b>EnumResTypeProc</b></td>
<td width=54%><b>EnumResourceLanguages</b></td>
</tr>
<tr valign=top>
<td width=46%><b>EnumResourceNames</b></td>
<td width=54%></td>
</tr>
</table><br>
<h3>Flat Thunks</h3>
<p>
Windows NT 4.0 and Windows 95 use different thunking models. Windows NT 4.0 supports generic thunks that allow 16-bit code to call functions implemented in 32-bit code. Although Windows 95 supports generic thunks, it does not support the underlying process model used by Windows NT 4.0. This means that generic thunking code might not work identically under Windows 95 and Windows NT 4.0. For more information on thunking and Windows 95, see "Thunk Compiler" (MSDN Library, Platform SDK).</p>
<p>
Windows 95 implements its own thunking model, called <i>flat thunks</i>. Flat thunks allow 32-bit code to call functions implemented in 16-bit code. They also allow 16-bit code to call functions implemented in 32-bit code. However, applications that use flat thunks cannot run on Windows NT 4.0 unless the thunking code is isolated into platform-specific DLLs.</p>
<h3>Pen API for Windows</h3>
<p>
The Pen API is not supported in Windows NT 4.0.</p>
<h2>Windows 95 OSR 2–Specific APIs</h2>
<h3>FAT32 File System</h3>
<p>
Windows 95 OSR 2 incorporates the FAT32 file system. FAT32 is an enhancement of the file allocation table (FAT) file system. FAT32 supports large drives with improved disk space efficiency.</p>
<p>
General-purpose applications are fully compatible with FAT32, and most Win32 applications do not need to be revised for FAT32. Only applications that use low-level disk structures, or in other ways depend on the on-disk format of data, will need revision. For more information, see "FAT32 File System" (MSDN Library, Platform SDK).</p>
<h3>GetDiskFreeSpaceEx</h3>
<p>
In Windows 95, the existing Win32 function <b>GetDiskFreeSpace</b> may obtain incorrect values for volumes that are larger than 2 gigabytes (GB). In OSR 2, the function <b>GetDiskFreeSpace</b> has been modified to cap the value returned and never reports volume sizes greater than 2 GB. On very large empty volumes, existing applications will see only 2 GB free. If less than 2 GB are free, the correct amount will be returned. For more information, see "GetDiskFreeSpace" (MSDN Library, Platform SDK).</p>
<p>
Windows 95 OSR 2 and Windows NT 4.0 support the <b>GetDiskFreeSpaceEx</b> function. <b>GetDiskFreeSpaceEx</b> obtains correct values on all platforms for all volumes, including those that are larger than 2 GB. New applications should use the <b>GetDiskFreeSpaceEx</b> function instead of the <b>GetDiskFreeSpace</b> function.</p>
<p>
Applications that need to maintain backward compatibility with earlier Win32 implementations should be prepared to fall back to the <b>GetDiskFreeSpace</b> function.</p>
<h2>Windows 95 OSR 2– and Windows NT 4.0–Specific APIs </h2>
<h3>Detecting OSR 2</h3>
<p>
You can use the <b>GetVersionEx</b> function (available on all Win32 platforms) to determine that a system is running Windows 95 OSR 2 or a later release of the Windows 95 operating system.</p>
<p>
The <b>GetVersionEx</b> function fills in the members of an <b>OSVERSIONINFO</b> data structure. If the <b>dwPlatformId</b> member of that structure is <b>VER_PLATFORM_WIN32_WINDOWS</b>, and the low word of the <b>dwBuildNumber</b> member is “1111,” the system is Windows 95 OSR 2. For Windows 95 and Windows 95 OSR 2, the <b>dwMajorVersion</b> element returns "4" and <b>dwMinorVersion</b> returns "0." Future versions or OSRs of Windows 95 will have higher build numbers. They may also have higher major/minor version numbers.</p>
<p>
MS-DOS applications can check for an MS-DOS version number of 7.1 or higher to determine whether a system is running either Windows 95 OSR 2 or a later release of Windows 95.</p>
<h3>Using Windows 95 OSR 2 Functionality</h3>
<p>
Some Windows 95 OSR 2 functions can be called directly. For others, you need to call the LoadLibrary or <b>LoadLibraryEx</b> function to load the appropriate .dll file and then call the <b>GetProcAddress</b> function to obtain an address for the function.</p>
<p>
Applications that attempt to use Windows 95 OSR 2 functionality should be prepared to fall back to earlier Windows 95 functionality.</p>
<h2>Redistributable APIs with Windows 95</h2>
<h3>Imagehlp</h3>
<p>
<b>Imagehlp</b> API functions provide access to portable executable (PE) images. <b>Imagehlp</b> is a built-in component of the Windows NT 4.0 operating system. <b>Imagehlp</b> is supported on Windows 95 by shipping Imagehlp.dll as a redistributable file. For more information, see "Portable Executable File Manipulation" and other articles by querying on “Imagehlp” in the Platform SDK documentation located in the MSDN Library.</p>
<h3>OpenGL</h3>
<p>
OpenGL is a built-in component of Windows NT 4.0 and Windows 95 OSR 2. OpenGL is supported on Windows 95 by shipping it as a redistributable component.</p>
<h3>Direct3D</h3>
<p>
DirectDraw®, DirectPlay®, DirectSound®, DirectInput™, and Direct3D™ are provided as redistributable dynamic-link libraries (DLLs) for Windows 95. DirectDraw, DirectPlay, DirectSound, and DirectInput are built-in components of OSR 2 and Windows NT 4.0. Direct 3D is not available for Windows NT 4.0.</p>
<p>
Applications may prefer to use the redistributable components on all platforms to guarantee compatibility.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=17%><b>Functionality</b></td>
<td class=label width=27%><b>Windows 95 and OSR 2</b></td>
<td class=label width=27%><b>Windows 95 OSR 2</b></td>
<td class=label width=29%><b>Windows NT 4.0</b></td>
</tr>
<tr valign=top>
<td width=17%>DirectDraw</td>
<td width=27%>Provided as redistributable</td>
<td width=27%>Built into operating system</td>
<td width=29%>Built into operating system</td>
</tr>
<tr valign=top>
<td width=17%>DirectPlay</td>
<td width=27%>Provided as redistributable</td>
<td width=27%>Built into operating system</td>
<td width=29%>Built into operating system</td>
</tr>
<tr valign=top>
<td width=17%>DirectSound</td>
<td width=27%>Provided as redistributable</td>
<td width=27%>Built into operating system</td>
<td width=29%>Built into operating system, runs in emulation mode only</td>
</tr>
<tr valign=top>
<td width=17%>DirectInput</td>
<td width=27%>Provided as redistributable</td>
<td width=27%>Built into operating system</td>
<td width=29%>Built into operating system</td>
</tr>
<tr valign=top>
<td width=17%>Direct3D</td>
<td width=27%>Provided as redistributable</td>
<td width=27%>Built into operating system</td>
<td width=29%>Not available</td>
</tr>
</table><br>
<h3>Cryptographic API</h3>
<p>
Windows 95 OSR 2 and Windows NT 4.0 support the Cryptographic Application Programming Interface (CryptoAPI), a set of functions allowing applications to encrypt or digitally sign data in a flexible manner, while providing protection for the user's sensitive private key data. The CryptoAPI is also available on Windows 95 if Internet Explorer 3.0 is installed. An application can provide the CryptoAPI on Windows 95 by installing Internet Explorer 3.0 as an add-on.</p>
<h2>APIs with Different Implementations on Windows 95 and Windows NT 4.0</h2>
<h3>Unicode</h3>
<p>
On Windows NT 4.0, all functions that accept strings as parameters have both an American National Standards Institute (ANSI) and a wide-character version. The functions are postfixed by "A" and "W." For example, <b>TextOutA</b> accepts an ANSI string and <b>TextOutW</b> accepts a Unicode (wide) string. The wide-character versions of most Win32 API functions are generally not supported on Windows 95.</p>
<p>
The following functions are exceptions that are supported on both Windows NT 4.0 and Windows 95:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=35%><b>MultiByteToWideChar</b></td>
<td width=65%><b>WideCharToMultiByte</b></td>
</tr>
<tr valign=top>
<td width=35%><b>EnumResourceLanguages</b></td>
<td width=65%><b>EnumResourceNames</b></td>
</tr>
<tr valign=top>
<td width=35%><b>EnumResourceTypes</b></td>
<td width=65%><b>ExtTextOut</b></td>
</tr>
<tr valign=top>
<td width=35%><b>FindResource</b></td>
<td width=65%><b>FindResourceEx</b></td>
</tr>
<tr valign=top>
<td width=35%><b>GetCharWidth</b></td>
<td width=65%><b>GetCommandLine</b></td>
</tr>
<tr valign=top>
<td width=35%><b>GetTextExtentExPoint</b></td>
<td width=65%><b>GetTextExtentPoint32</b></td>
</tr>
<tr valign=top>
<td width=35%><b>GetTextExtentPoint</b></td>
<td width=65%><b>lstrlen</b></td>
</tr>
<tr valign=top>
<td width=35%><b>MessageBoxEx</b></td>
<td width=65%><b>MessageBox</b></td>
</tr>
<tr valign=top>
<td width=35%><b>TextOut</b></td>
<td width=65%></td>
</tr>
</table><br>
<h3>Security Attributes</h3>
<p>
Some API functions require a pointer to a <b>SECURITY_ATTRIBUTES</b> structure that determines whether the returned handle can be inherited by child processes. Calls from Windows NT 4.0 use the <b>lpSecurityDescriptor</b> member of the structure to specify a security descriptor. Windows 95 ignores the <b>lpSecurityDescriptor</b> member of the structure. The following functions take a <b>SECURITY_ATTRIBUTES</b> structure pointer:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=37%><b>CreateConsoleScreenBuffer</b></td>
<td width=63%><b>CreateDirectory</b></td>
</tr>
<tr valign=top>
<td width=37%><b>CreateDirectoryEx</b></td>
<td width=63%><b>CreateEvent</b></td>
</tr>
<tr valign=top>
<td width=37%><b>CreateFile</b></td>
<td width=63%><b>CreateFileMapping</b></td>
</tr>
<tr valign=top>
<td width=37%><b>CreateMailslot</b></td>
<td width=63%><b>CreateMutex</b></td>
</tr>
<tr valign=top>
<td width=37%><b>CreatePipe</b></td>
<td width=63%><b>CreateProcess</b></td>
</tr>
<tr valign=top>
<td width=37%><b>CreateSemaphore</b></td>
<td width=63%><b>CreateThread</b></td>
</tr>
</table><br>
<h3>TAPI</h3>
<p>
The Telephony API (TAPI) version 1.4 is supported on Windows 95 and Windows 95 OSR 2. TAPI version 2.0 is a built-in component of Windows NT 4.0 and will be available soon as an add-on for Windows 95. See "What's New for TAPI Version 2.0" (MSDN Library, Platform SDK) for information on TAPI features new to version 2.0.</p>
<h3>Different Parameters</h3>
<p>
The following functions either require different parameters when called on Windows 95 and Windows NT 4.0, return different information, or return similar information in different ways. A few functions ignore parameters on one platform that are required on the other. Developers should review the Platform SDK descriptions for any functions on this list that they use in Windows 95 or Windows NT 4.0 applications.</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=38%><b>ActivateKeyboardLayout</b></td>
<td width=31%><b>AddPrinter</b></td>
<td width=31%><b>Arc</b></td>
</tr>
<tr valign=top>
<td width=38%><b>Beep</b></td>
<td width=31%><b>BeginPath</b></td>
<td width=31%><b>BroadcastSystemMessage</b></td>
</tr>
<tr valign=top>
<td width=38%><b>ChangeMenu</b></td>
<td width=31%><b>CharLower</b></td>
<td width=31%><b>CharLowerBuff</b></td>
</tr>
<tr valign=top>
<td width=38%><b>CharUpper</b></td>
<td width=31%><b>CharUpperBuff</b></td>
<td width=31%><b>CreateDC</b></td>
</tr>
<tr valign=top>
<td width=38%><b>CreateDialogIndirect</b></td>
<td width=31%><b>CreateDialogIndirectParam</b></td>
<td width=31%><b>CreateFont</b></td>
</tr>
<tr valign=top>
<td width=38%><b>DebugActiveProcess</b></td>
<td width=31%><b>DialogBoxIndirect</b></td>
<td width=31%><b>DlgDirListComboBox</b></td>
</tr>
<tr valign=top>
<td width=38%><b>DrawIcon</b></td>
<td width=31%><b>EditWordBreakProc</b></td>
<td width=31%><b>EndPage</b></td>
</tr>
<tr valign=top>
<td width=38%><b>EnumFontFamExProc</b></td>
<td width=31%><b>EnumPrinters</b></td>
<td width=31%><b>ExitWindows</b></td>
</tr>
<tr valign=top>
<td width=38%><b>ExitWindowsEx</b></td>
<td width=31%><b>ExtCreatePen</b></td>
<td width=31%><b>FindFirstFile</b></td>
</tr>
<tr valign=top>
<td width=38%><b>FlushFileBuffers</b></td>
<td width=31%><b>GetAsyncKeyState</b></td>
<td width=31%><b>GetAsyncKeyState</b></td>
</tr>
<tr valign=top>
<td width=38%><b>GetClipboardData</b></td>
<td width=31%><b>GetConsoleCP</b></td>
<td width=31%><b>GetConsoleOutputCP</b></td>
</tr>
<tr valign=top>
<td width=38%><b>GetCurrentHwProfile</b></td>
<td width=31%><b>GetDIBits</b></td>
<td width=31%><b>GetFileAttributes</b></td>
</tr>
<tr valign=top>
<td width=38%><b>GetGraphicsMode</b></td>
<td width=31%><b>GetGraphicsMode</b></td>
<td width=31%><b>GetPrinter</b></td>
</tr>
<tr valign=top>
<td width=38%><b>GetPrivateProfileSection</b></td>
<td width=31%><b>GetPrivateProfileString</b></td>
<td width=31%><b>GetProcessAffinityMask</b></td>
</tr>
<tr valign=top>
<td width=38%><b>GetProfileSection</b></td>
<td width=31%><b>GetProfileString</b></td>
<td width=31%><b>GetStockObject</b></td>
</tr>
<tr valign=top>
<td width=38%><b>LoadImage</b></td>
<td width=31%><b>LoadKeyboardLayout</b></td>
<td width=31%><b>LoadLibrary</b></td>
</tr>
<tr valign=top>
<td width=38%><b>LoadLibraryEx</b></td>
<td width=31%><b>LoadModule</b></td>
<td width=31%><b>MapViewOfFile</b></td>
</tr>
<tr valign=top>
<td width=38%><b>MapViewOfFileEx</b></td>
<td width=31%><b>MessageBoxIndirect</b></td>
<td width=31%><b>mouse_event</b></td>
</tr>
<tr valign=top>
<td width=38%><b>MoveFileEx</b></td>
<td width=31%><b>NetServerEnum</b></td>
<td width=31%><b>OpenFile</b></td>
</tr>
<tr valign=top>
<td width=38%><b>OpenFileMapping</b></td>
<td width=31%><b>RasCreatePhonebookEntry</b></td>
<td width=31%><b>RasDial</b></td>
</tr>
<tr valign=top>
<td width=38%><b>RasEditPhonebookEntry</b></td>
<td width=31%><b>RasEnumEntries</b></td>
<td width=31%><b>RasGetEntryDialParams</b></td>
</tr>
<tr valign=top>
<td width=38%><b>RasGetProjectionInfo</b></td>
<td width=31%><b>RasSetEntryDialParams</b></td>
<td width=31%><b>ReadFile</b></td>
</tr>
<tr valign=top>
<td width=38%><b>ReadFileEx</b></td>
<td width=31%><b>RegCreateKeyEx</b></td>
<td width=31%><b>RegDeleteKey</b></td>
</tr>
<tr valign=top>
<td width=38%><b>RegisterClassEx</b></td>
<td width=31%><b>RegLoadKey</b></td>
<td width=31%><b>RegQueryInfoKey</b></td>
</tr>
<tr valign=top>
<td width=38%><b>RegReplaceKey</b></td>
<td width=31%><b>RegSaveKey</b></td>
<td width=31%><b>RegSaveKey</b></td>
</tr>
<tr valign=top>
<td width=38%><b>SearchPath</b></td>
<td width=31%><b>SetBrushOrgEx</b></td>
<td width=31%><b>SetClipboardData</b></td>
</tr>
<tr valign=top>
<td width=38%><b>SetComputerName</b></td>
<td width=31%><b>SetFileAttributes</b></td>
<td width=31%><b>SetGraphicsMode</b></td>
</tr>
<tr valign=top>
<td width=38%><b>SetJob</b></td>
<td width=31%><b>SetLocalTime</b></td>
<td width=31%><b>SetPrinter</b></td>
</tr>
<tr valign=top>
<td width=38%><b>SetSystemTime</b></td>
<td width=31%><b>SetThreadAffinityMask</b></td>
<td width=31%><b>ShellProc</b></td>
</tr>
<tr valign=top>
<td width=38%><b>StartDocPrinter</b></td>
<td width=31%><b>StartPage</b></td>
<td width=31%><b>SystemParametersInfo</b></td>
</tr>
<tr valign=top>
<td width=38%><b>SystemTimeToTzSpecificLocalTime</b></td>
<td width=31%><b>UnloadKeyboardLayout</b></td>
<td width=31%><b>UnmapViewOfFile</b></td>
</tr>
<tr valign=top>
<td width=38%><b>WriteFile</b></td>
<td width=31%><b>WriteFileEx</b></td>
<td width=31%></td>
</tr>
</table><br>
<h2>Windows NT 4.0–Specific APIs</h2>
<h3>Unicode</h3>
<p>
On Windows NT 4.0, all functions that accept strings as parameters have both an ANSI and a wide-character version. The functions are postfixed by "A" and "W." For example, <b>TextOutA</b> accepts an ANSI string and <b>TextOutW</b> accepts a Unicode (wide) string. The wide-character versions of most Win32 API functions are generally not supported on Windows 95. For a list of API string functions that <i>are</i> supported in the same way on both Windows NT 4.0 and Windows 95, see the preceding "Unicode" section under "APIs with Different Implementations on Windows 95 and Windows NT 4.0."</p>
<h3>Security</h3>
<p>
The following Windows NT 4.0 security API functions are not supported on Windows 95 nor on Windows 95 OSR 2:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=33%><b>AccessCheck</b></td>
<td width=33%><b>AccessCheckAndAuditAlarm</b></td>
<td width=34%><b>AddAccessAllowedAce</b></td>
</tr>
<tr valign=top>
<td width=33%><b>AddAccessDeniedAce</b></td>
<td width=33%><b>AddAce</b></td>
<td width=34%><b>AddAuditAccessAce</b></td>
</tr>
<tr valign=top>
<td width=33%><b>AdjustTokenGroups</b></td>
<td width=33%><b>AdjustTokenPrivileges</b></td>
<td width=34%><b>AllocateAndInitializeSid</b></td>
</tr>
<tr valign=top>
<td width=33%><b>AllocateLocallyUniqueId</b></td>
<td width=33%><b>AreAllAccessesGranted</b></td>
<td width=34%><b>AreAnyAccessesGranted</b></td>
</tr>
<tr valign=top>
<td width=33%><b>CopySid</b></td>
<td width=33%><b>CreatePrivateObjectSecurity</b></td>
<td width=34%><b>DdeImpersonateClient</b></td>
</tr>
<tr valign=top>
<td width=33%><b>DeleteAce</b></td>
<td width=33%><b>DestroyPrivateObjectSecurity</b></td>
<td width=34%><b>DuplicateToken</b></td>
</tr>
<tr valign=top>
<td width=33%><b>EqualPrefixSid</b></td>
<td width=33%><b>EqualSid</b></td>
<td width=34%><b>FindFirstFreeAce</b></td>
</tr>
<tr valign=top>
<td width=33%><b>FreeSid</b></td>
<td width=33%><b>GetAce</b></td>
<td width=34%><b>GetAclInformation</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetFileSecurity</b></td>
<td width=33%><b>GetKernelObjectSecurity</b></td>
<td width=34%><b>GetLengthSid</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetPrivateObjectSecurity</b></td>
<td width=33%><b>GetProcessWindowStation</b></td>
<td width=34%><b>GetSecurityDescriptorControl</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetSecurityDescriptorDacl</b></td>
<td width=33%><b>GetSecurityDescriptorGroup</b></td>
<td width=34%><b>GetSecurityDescriptorLength</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetSecurityDescriptorOwner</b></td>
<td width=33%><b>GetSecurityDescriptorSacl</b></td>
<td width=34%><b>GetSidIdentifierAuthority</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetSidLengthRequired</b></td>
<td width=33%><b>GetSidSubAuthority</b></td>
<td width=34%><b>GetSidSubAuthorityCount</b></td>
</tr>
<tr valign=top>
<td width=33%><b>GetTokenInformation</b></td>
<td width=33%><b>GetUserObjectSecurity</b></td>
<td width=34%><b>ImpersonateNamedPipeClient</b></td>
</tr>
<tr valign=top>
<td width=33%><b>ImpersonateSelf</b></td>
<td width=33%><b>InitializeAcl</b></td>
<td width=34%><b>InitializeSecurityDescriptor</b></td>
</tr>
<tr valign=top>
<td width=33%><b>InitializeSid</b></td>
<td width=33%><b>IsValidAcl</b></td>
<td width=34%><b>IsValidSecurityDescriptor</b></td>
</tr>
<tr valign=top>
<td width=33%><b>IsValidSid</b></td>
<td width=33%><b>LookupAccountName</b></td>
<td width=34%><b>LookupAccountSid</b></td>
</tr>
<tr valign=top>
<td width=33%><b>LookupPrivilegeDisplayName</b></td>
<td width=33%><b>LookupPrivilegeName</b></td>
<td width=34%><b>LookupPrivilegeValue</b></td>
</tr>
<tr valign=top>
<td width=33%><b>MakeAbsoluteSD</b></td>
<td width=33%><b>MakeSelfRelativeSD</b></td>
<td width=34%><b>MapGenericMask</b></td>
</tr>
<tr valign=top>
<td width=33%><b>ObjectCloseAuditAlarm</b></td>
<td width=33%><b>ObjectOpenAuditAlarm</b></td>
<td width=34%><b>ObjectPrivilegeAuditAlarm</b></td>
</tr>
<tr valign=top>
<td width=33%><b>OpenProcessToken</b></td>
<td width=33%><b>OpenThreadToken</b></td>
<td width=34%><b>PrivilegeCheck</b></td>
</tr>
<tr valign=top>
<td width=33%><b>PrivilegedServiceAuditAlarm</b></td>
<td width=33%><b>RevertToSelf</b></td>
<td width=34%><b>SetAclInformation</b></td>
</tr>
<tr valign=top>
<td width=33%><b>SetFileSecurity</b></td>
<td width=33%><b>SetKernelObjectSecurity</b></td>
<td width=34%><b>SetPrivateObjectSecurity</b></td>
</tr>
<tr valign=top>
<td width=33%><b>SetSecurityDescriptorDacl</b></td>
<td width=33%><b>SetSecurityDescriptorGroup</b></td>
<td width=34%><b>SetSecurityDescriptorOwner</b></td>
</tr>
<tr valign=top>
<td width=33%><b>SetSecurityDescriptorSacl</b></td>
<td width=33%><b>SetThreadToken</b></td>
<td width=34%><b>SetTokenInformation</b></td>
</tr>
<tr valign=top>
<td width=33%><b>SetUserObjectSecurity</b></td>
<td width=33%></td>
<td width=34%></td>
</tr>
</table><br>
<h3>Event Logging</h3>
<p>
The following event logging API functions are not supported on Windows 95 nor on Windows 95 OSR 2:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=55%><b>BackupEventLog</b></td>
<td width=45%><b>ClearEventLog</b></td>
</tr>
<tr valign=top>
<td width=55%><b>CloseEventLog</b></td>
<td width=45%><b>DeregisterEventSource</b></td>
</tr>
<tr valign=top>
<td width=55%><b>GetNumberOfEventLogRecords</b></td>
<td width=45%><b>GetOldestEventLogRecord</b></td>
</tr>
<tr valign=top>
<td width=55%><b>NotifyChangeEventLog</b></td>
<td width=45%><b>OpenBackupEventLog</b></td>
</tr>
<tr valign=top>
<td width=55%><b>OpenEventLog</b></td>
<td width=45%><b>ReadEventLog</b></td>
</tr>
<tr valign=top>
<td width=55%><b>RegisterEventSource</b></td>
<td width=45%><b>ReportEvent</b></td>
</tr>
</table><br>
<h3>Service Control Manager</h3>
<p>
The following service control manager API functions are not supported on Windows 95 nor on Windows 95 OSR 2:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=39%><b>ChangeServiceConfig</b></td>
<td width=61%><b>CloseServiceHandle</b></td>
</tr>
<tr valign=top>
<td width=39%><b>ControlService</b></td>
<td width=61%><b>CreateService</b></td>
</tr>
<tr valign=top>
<td width=39%><b>DeleteService</b></td>
<td width=61%><b>EnumDependentServices</b></td>
</tr>
<tr valign=top>
<td width=39%><b>EnumServicesStatus</b></td>
<td width=61%><b>GetServiceDisplayName</b></td>
</tr>
<tr valign=top>
<td width=39%><b>GetServiceKeyName</b></td>
<td width=61%><b>LockServiceDatabase</b></td>
</tr>
<tr valign=top>
<td width=39%><b>NotifyBootConfigStatus</b></td>
<td width=61%><b>OpenSCManager</b></td>
</tr>
<tr valign=top>
<td width=39%><b>OpenService</b></td>
<td width=61%><b>QueryServiceConfig</b></td>
</tr>
<tr valign=top>
<td width=39%><b>QueryServiceLockStatus</b></td>
<td width=61%><b>QueryServiceObjectSecurity</b></td>
</tr>
<tr valign=top>
<td width=39%><b>QueryServiceStatus</b></td>
<td width=61%><b>RegisterServiceCtrlHandler</b></td>
</tr>
<tr valign=top>
<td width=39%><b>ServiceMain</b></td>
<td width=61%><b>SetServiceBits</b></td>
</tr>
<tr valign=top>
<td width=39%><b>SetServiceObjectSecurity</b></td>
<td width=61%><b>SetServiceStatus</b></td>
</tr>
<tr valign=top>
<td width=39%><b>StartService</b></td>
<td width=61%><b>StartServiceCtrlDispatcher</b></td>
</tr>
<tr valign=top>
<td width=39%><b>UnlockServiceDatabase</b></td>
<td width=61%></td>
</tr>
</table><br>
<h3>Multiple Desktops</h3>
<p>
The following multiple desktops API functions are not supported on Windows 95 nor on Windows 95 OSR 2:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=50%><b>CloseDesktop</b></td>
<td width=50%><b>CreateDesktop</b></td>
</tr>
<tr valign=top>
<td width=50%><b>Create WindowStation</b></td>
<td width=50%><b>EnumDesktops</b></td>
</tr>
<tr valign=top>
<td width=50%><b>EnumDesktopWindows</b></td>
<td width=50%><b>OpenDesktop</b></td>
</tr>
<tr valign=top>
<td width=50%><b>OpenInputDesktop</b></td>
<td width=50%><b>SwitchDesktop</b></td>
</tr>
<tr valign=top>
<td width=50%><b>GetDesktopWindow</b></td>
<td width=50%><b>GetThreadDesktop</b></td>
</tr>
<tr valign=top>
<td width=50%><b>SetThreadDesktop</b></td>
<td width=50%></td>
</tr>
</table><br>
<h3>Server-Side Named Pipes</h3>
<p>
Server-side named pipes are not supported on Windows 95 nor on Windows 95 OSR 2. <i>Client-side</i> named pipes are supported on Windows 95, Windows 95 OSR 2, and Windows NT 4.0.</p>
<h3>Server-Oriented Sockets</h3>
<p>
Server-oriented socket calls are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>AcceptEx<br>
GetAcceptExSockaddrs<br>
TransmitFile</b></p>
<h3>Dynamic PE Updating</h3>
<p>
Dynamic updating of the resources in portable executable (PE) files is not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>BeginUpdateResource<br>
EndUpdateResource<br>
UpdateResource</b></p>
<h3>I/O Completion Ports</h3>
<p>
I/O completion ports are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>CreateIoCompletionPort<br>
GetQueuedCompletionStatus<br>
PostQueuedCompletionStatus</b></p>
<h3>World Transforms</h3>
<p>
Certain world-transform functions are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>CombineTransform<br>
GetWorldTransform<br>
ModifyWorldTransform<br>
SetWorldTransform</b></p>
<h3>Advanced Blt Functions </h3>
<p>
Certain advanced <b>Blt</b> functions are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>MaskBlt<br>
PlgBlt</b></p>
<h3>Printer Forms</h3>
<p>
Printer forms print-spooler functions are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>AddForm<br>
DeleteForm<br>
EnumForms<br>
GetForm<br>
SetForm</b></p>
<h3>Printer Change Notification</h3>
<p>
Printer change notification print-spooler functions are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>FindClosePrinterChangeNotification<br>
FindFirstPrinterChangeNotification<br>
FindNextPrinterChangeNotification<br>
WaitForPrinterChange</b></p>
<h3>WinSpool Functions</h3>
<p>
The following WinSpool functions are not supported on Windows 95 nor on Windows 95 OSR 2.</p>
<p>
<b>PrinterMessageBox<br>
ResetPrinter</b></p>
<h3>Fibers</h3>
<p>
Fiber functions are not supported on Windows 95 nor on Windows 95 OSR 2. The following functions are not supported:</p>
<p>
<b>ConvertThreadToFiber<br>
CreateFiber<br>
DeleteFiber<br>
GetCurrentFiber<br>
GetFiberData<br>
SwitchToFiber</b></p>
<h3>32-Bit LAN Manager</h3>
<p>
The Windows NT 32-bit LAN Manager Unicode functions exported from Netapi32.dll are not supported on Windows 95 nor on Windows 95 OSR 2. Windows 95 supports a subset of LAN Manager ANSI string functions exported from Svrapi.dll. For more information, see Knowledge Base article number Q125700, titled "Windows 95 Support for Net Function Calls” (MSDN Library).</p>
<p>
The following functions are not supported (the <b>bold</b> functions have ANSI string Windows 95 equivalents exported from Svrapi.dll):</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td width=38%><b>MultinetGetConnectionPerformance</b></td>
<td width=29%>NetAlertRaise</td>
<td width=33%>NetAlertRaiseEx</td>
</tr>
<tr valign=top>
<td width=38%><b>NetApiBufferAllocate</b></td>
<td width=29%>NetApiBufferFree</td>
<td width=33%>NetApiBufferReallocate</td>
</tr>
<tr valign=top>
<td width=38%><b>NetApiBufferSize</b></td>
<td width=29%>NetFileEnum</td>
<td width=33%>NetFileGetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetGetAnyDCName</b></td>
<td width=29%>NetGetDCName</td>
<td width=33%>NetGetDisplayInformationIndex</td>
</tr>
<tr valign=top>
<td width=38%><b>NetQueryDisplayInformation</b></td>
<td width=29%>NetGroupAdd</td>
<td width=33%>NetGroupAddUser</td>
</tr>
<tr valign=top>
<td width=38%><b>NetGroupDel</b></td>
<td width=29%>NetGroupDelUser</td>
<td width=33%>NetGroupEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetGroupGetInfo</b></td>
<td width=29%>NetGroupGetUsers</td>
<td width=33%>NetGroupSetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetGroupSetUsers</b></td>
<td width=29%>NetHandleGetInfo</td>
<td width=33%>NetHandleSetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetLocalGroupAdd</b></td>
<td width=29%>NetLocalGroupAddMembers</td>
<td width=33%>NetLocalGroupDel</td>
</tr>
<tr valign=top>
<td width=38%><b>NetLocalGroupDelMembers</b></td>
<td width=29%>NetLocalGroupEnum</td>
<td width=33%>NetLocalGroupGetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetLocalGroupGetMembers</b></td>
<td width=29%>NetLocalGroupSetInfo</td>
<td width=33%>NetLocalGroupSetMembers</td>
</tr>
<tr valign=top>
<td width=38%><b>NetMessageBufferSend</b></td>
<td width=29%>NetMessageNameAdd</td>
<td width=33%>NetMessageNameDel</td>
</tr>
<tr valign=top>
<td width=38%><b>NetMessageNameEnum</b></td>
<td width=29%>NetMessageNameGetInfo</td>
<td width=33%>NetRemoteTOD</td>
</tr>
<tr valign=top>
<td width=38%><b>NetReplExportDirAdd</b></td>
<td width=29%>NetReplExportDirDel</td>
<td width=33%>NetReplExportDirEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetReplExportDirGetInfo</b></td>
<td width=29%>NetReplExportDirLock</td>
<td width=33%>NetReplExportDirSetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetReplExportDirUnlock</b></td>
<td width=29%>NetReplGetInfo</td>
<td width=33%>NetReplImportDirAdd</td>
</tr>
<tr valign=top>
<td width=38%><b>NetReplImportDirDel</b></td>
<td width=29%>NetReplImportDirEnum</td>
<td width=33%>NetReplImportDirGetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetReplImportDirLock</b></td>
<td width=29%>NetReplImportDirUnlock</td>
<td width=33%>NetReplSetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetScheduleJobAdd</b></td>
<td width=29%>NetScheduleJobDel</td>
<td width=33%>NetScheduleJobEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetScheduleJobGetInfo</b></td>
<td width=29%>NetServerDiskEnum</td>
<td width=33%>NetServerEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetServerGetInfo</b></td>
<td width=29%>NetServerSetInfo</td>
<td width=33%>NetServerTransportAdd</td>
</tr>
<tr valign=top>
<td width=38%><b>NetServerTransportDel</b></td>
<td width=29%>NetServerTransportEnum</td>
<td width=33%>NetSessionDel</td>
</tr>
<tr valign=top>
<td width=38%><b>NetSessionEnum</b></td>
<td width=29%>NetSessionGetInfo</td>
<td width=33%>NetShareAdd</td>
</tr>
<tr valign=top>
<td width=38%><b>NetShareCheck</b></td>
<td width=29%>NetShareDel</td>
<td width=33%>NetShareGetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetShareSetInfo</b></td>
<td width=29%>NetStatisticsGet2</td>
<td width=33%>NetUserAdd</td>
</tr>
<tr valign=top>
<td width=38%><b>NetUserChangePassword</b></td>
<td width=29%>NetUserDel</td>
<td width=33%>NetUserEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetUserGetGroups</b></td>
<td width=29%>NetUserGetInfo</td>
<td width=33%>NetUserGetLocalGroups</td>
</tr>
<tr valign=top>
<td width=38%><b>NetUserSetGroups</b></td>
<td width=29%>NetUserSetInfo</td>
<td width=33%>NetUserModalsGet</td>
</tr>
<tr valign=top>
<td width=38%><b>NetUserModalsSet</b></td>
<td width=29%>NetWkstaGetInfo</td>
<td width=33%>NetWkstaSetInfo</td>
</tr>
<tr valign=top>
<td width=38%><b>NetWkstaTransportAdd</b></td>
<td width=29%>NetWkstaTransportDel</td>
<td width=33%>NetWkstaTransportEnum</td>
</tr>
<tr valign=top>
<td width=38%><b>NetWkstaUserGetInfo</b></td>
<td width=29%>NetWkstaUserSetInfo</td>
<td width=33%>NetWkstaUserEnum</td>
</tr>
</table><br>
<h3>GDI</h3>
<p>
The following GDI functions are not supported on Windows 95 nor on Windows 95 OSR 2:</p>
<p>
<b>AngleArc<br>
ArcTo</b></p>
<h3>CancelDC</h3>
<p>
The <b>CancelDC</b> function is not supported on Windows 95 nor on Windows 95 OSR 2.</p>
<h2>Summary</h2>
<p>
This white paper has discussed some of the API differences between the three Windows 32-bit operating systems. Microsoft continues to publish additional information to help application developers take advantage of the latest functionality provided by the Windows family of operating systems. Updated information is made available through MSDN and on the Internet at <a href="http://www.microsoft.com/">http://www.microsoft.com/</a>.</p>
<h2>Additional Resources</h2>
<p>
Related information can be found in the following resources:
<ul type=disc>
<li>
General API descriptions and details on using individual functions are available in the Platform SDK documentation in the MSDN Library.<br><br></li>
<li>
Methods for implementing specific Windows NT functionality can be found in the <i>Microsoft</i> <i>Windows NT Resource Kit, version 4.0</i> (Microsoft Press, 1996).<br><br></li>
<li>
Solutions to specific problems and code examples can be found in the Microsoft Knowledge Base in the MSDN Library or at <a href="http://www.microsoft.com/kb/">http://www.microsoft.com/kb/</a>.</li>
</ul>
</BODY>
</HTML>
