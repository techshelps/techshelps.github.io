<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Exchange Server: Using Industry Standards for Greater Compatibility</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>
<h1>Microsoft Exchange Server: Using Industry Standards for Greater Compatibility</h1>
<p>
Microsoft Corporation</p>
<p>
August 1, 1995</p>
<h2>Abstract</h2>
<p>
Standards in messaging are vital. Without them, the chances of having different messaging systems communicate and share information are slim. This article discusses how Microsoft® Exchange Server uses four messaging standards—X.400, X.500, the simple mail transfer protocol (SMTP), and the messaging application programming interface (MAPI)—to achieve compatibility with other messaging and information systems.</p>
<h2>Introduction</h2>
<p>
E-mail systems are nearly as ubiquitous in companies as telephone systems. Yet, unlike the telephone, your e-mail system might not make it easy—or even possible—to send mail to a person on a different kind of e-mail system. </p>
<p>
Customers have been clear—they have told us they want a powerful, manageable corporate messaging system to improve all forms of business communications within and beyond the enterprise. And because business communications take all shapes and sizes, and come from all type of systems (from PCs to mainframes, fax machines to voice mail machines, and so on), the only way to ensure interoperability is through standards.</p>
<p>
Standards are vital and the design of a standards-based system that enables communications and information sharing with other messaging systems is also essential. </p>
<p>
This paper describes how Microsoft® Exchange Server incorporates four important standards to help ensure the widest possible compatibility with other messaging and information systems. These four standards are:
<ul type=disc>
<li>
X.400, the messaging standard recognized as the framework for global messaging. X.400 is an important standard for companies with more than one kind of e-mail system, as well as those who want to communicate with business partners and associates through public carriers.<br><br></li>
<li>
X.500, the directory service standard designed to provide a global directory that defines the global directory structure and directory access.<br><br></li>
<li>
SMTP, which defines how Internet mail is transferred. The Internet has long utilized several e-mail standards that are published as request for comments (RFCs). This paper will discuss Microsoft Exchange Server's support of RFC 821 (which defines how Internet mail is transferred), RFC 822 (which defines the message content for plain text messages), RFC 1521 (which extends the definition of message content to include multi-part textual and non-textual body parts) and RFC 1154 (which defines how the message format is created by the Microsoft Mail gateway to SMTP).<br><br></li>
<li>
MAPI, the application programming interface (API) that lets applications and messaging clients interact with many different Microsoft and third-party messaging and information systems through the use of a single interface.</li>
</ul>
<h2>Microsoft Exchange Server and X.400</h2>
<p>
X.400 is widely recognized and accepted by the messaging industry as the framework for global messaging. A core component of the Microsoft Exchange Server, the message transfer agent (MTA), is a conformant implementation of the 1988 X.400 MTA standard.</p>
<h3>X.400 Overview</h3>
<p>
The X.400 standard is a set of recommendations for computer-based handling of electronic messages. It was developed by the International Consultative Committee on Telephony and Telegraphy (CCITT)—an agency of the United Nations—based on the Open Systems Interconnection (OSI) reference model and the protocols defined by the International Organization for Standardization (ISO). (CCITT is now a sub-delegation of the International Telegraph Union [TU] which was established in 1992.)</p>
<p>
The goal of the X.400 recommendations is to enable electronic mail users to exchange messages no matter which computer-based messaging system they may use. Today, most messaging pundits would agree that X.400 has succeeded in this goal. </p>
<h4>Why X.400?</h4>
<p>
Because X.400 is based on the store-and-forward message-transfer model, people and applications do not need to perform any coordinated, simultaneous actions to share information.</p>
<p>
Other advantages of X.400 are as follows:
<ul type=disc>
<li>
X.400 is a widely recognized and accepted international standard used by most public e-mail carriers and by the majority of post, telephone, and telegraph authorities (PTTs) throughout the world.<br><br></li>
<li>
Many X.400 gateways are available to connect diverse messaging systems and to provide access to public services.<br><br></li>
<li>
X.400 delivers a higher quality of service than the Internet, and OSI network security not offered by the Internet.</li>
</ul>
<p>
As mentioned earlier, these advantages are important for companies who have more than one kind of e-mail system, as well as those who want to communicate with business partners and associates through public carriers. X.400 is especially important where hardware, network, and communication standards have not been enforced, and the only opportunity for interoperability exists in standards such as X.400.</p>
<h3>The Use of X.400 Within Microsoft Exchange Server</h3>
<h4>Transports</h4>
<p>
Microsoft Exchange Server supports X.400 over the following OSI transports:
<ul type=disc>
<li>
TP0/X.25<br><br></li>
<li>
TP4/(CLNP)<br><br></li>
<li>
TP0/RFC 1006 to TCP/IP</li>
</ul>
<p>
By supporting a full suite of the more popular, reliable, and secure networking transports, Microsoft Exchange Server lets customers choose the transport that best meets their needs. Companies can communicate with sites that are geographically dispersed and with companies that use different networking protocols.</p>
<p>
Microsoft Exchange Server also allows customers to configure different transports on the same server. Customers get the flexibility to install their choice of transports on a single Microsoft Exchange Server to simultaneously support a wide array of messaging options.</p>
<h4>Content body parts</h4>
<p>
Microsoft Exchange Server supports the following textual body parts:
<ul type=disc>
<li>
International IA5 (United States, German, Norwegian, Swedish)<br><br></li>
<li>
T.61 (Teletex)<br><br></li>
<li>
ISO 6937<br><br></li>
<li>
ISO 8857-1</li>
</ul>
<p>
Customers will benefit from the textual body part support that Microsoft Exchange Server offers, because it makes it possible for most language characters to be used and transferred. This allows for seamless interoperability between different mail systems across national boundaries.</p>
<p>
Microsoft Exchange Server supports the following binary body parts: 
<ul type=disc>
<li>
BP9, which provides support for embedding messages and forwarding messages based on the X.400 standard<br><br></li>
<li>
BP14 (1984 specification), which provides support for the simple transfer of binary attachments.<br><br></li>
<li>
BP 15, which provides support for the 1988 X.400 standard for sending attachments.<br><br></li>
<li>
File Transfer Body Part (1992 specification) (includes file name, size, properties, and so on.)<br><br></li>
<li>
Other X.400 body parts are converted to MAPI binary attachments.</li>
</ul>
<p>
With binary body part support, Microsoft Exchange Server gives customers options for:
<ul type=disc>
<li>
Transferring data files<br><br></li>
<li>
Transferring MAPI properties<br><br></li>
<li>
Interoperability with other 1988 X.400 MHS mail systems that support binary attachments<br><br></li>
<li>
Interoperability with other 1988 X.400 MHS mail systems that support the file transfer body part</li>
</ul>
<p>
A single Microsoft Exchange Server provides compatibility with 1984, 1988, and future MTAs, and the administrator can select the body part conversion for each MTA connection. This gives you the flexibility to communicate via X.400 with companies that are in different stages of X.400 technology implementation.</p>
<h4>X.400 addressing</h4>
<p>
Microsoft Exchange Server supports both the sending and receiving of messages from other X.400 mail systems that act as a relay MTA. It can act as a private management domain (PRMD)-to-PRMD MTA, providing rich backboning functionality for customers. This removes the requirement to subscribe to a public X.400 service to transfer information between two different companies or from two different geographic locations of the same company.</p>
<p>
Microsoft Exchange Server has two convenient ways to make foreign addresses available to users:
<ul type=disc>
<li>
With the bulk import utility, addresses from a foreign X.400 mail system can be imported in bulk into Microsoft Exchange Server as custom recipients. These addresses can be seamlessly merged into the Microsoft Exchange Server address list. Users can then select the addresses from the global address list.<br><br></li>
<li>
Users can also add their own X.400 addresses to their personal address books through an X.400 template (see Figure 1 below).</li>
</ul>
<p>
<img src="stan10_1.gif" border=0></p>
<p class=label>
<b>Figure 1. From Microsoft Exchange Server Beta 1: X.400 Addressing Template</b></p>
<p>
To receive X.400 messages from someone on another X.400 system, you need to supply the sender with the following information:
<ul type=disc>
<li>
Your name (surname and given name)<br><br></li>
<li>
Organization (your Microsoft Exchange Server site)<br><br></li>
<li>
PRMD (your Microsoft Exchange Server organization)<br><br></li>
<li>
Administration management domain (DMD)—space by default<br><br></li>
<li>
Country code</li>
</ul>
<p>
These fields make up the default mapping of your X.400 address. However, because these fields can be customized, your specific address may not map exactly to the example shown in Figure 1, above. Your specific X.400 address can be found under the E-Mail Addresses property page in your Microsoft Exchange client address book.</p>
<h3>X.400 Conformance and Interoperability Testing</h3>
<p>
It's one thing to claim that you're designing a product to an industry standard; it's another thing to prove through rigorous testing and government-approved test suites that the product actually conforms with the standard. </p>
<p>
Test suites for testing X.400 conformance and interoperability have been developed by a number of organizations (principally government agencies in various countries). Vendors who want to sell their products to governments must pass a battery of stringent, government-run conformance tests. Although these tests are not mandatory for selling to private corporations, everyone benefits from the knowledge that an MTA has met the standards test for conformance. The following section describes the conformance and interoperability testing that Microsoft Exchange Server will undergo before its final release.</p>
<h4>Conformance testing</h4>
<p>
Microsoft already has much experience in the area of conformance testing. With the release of the Microsoft Mail Gateway to X.400, we achieved OSTC P1 and RTS conformance and Afnor certification.</p>
<p>
Conformance testing verifies that an X.400 implementation meets the ISO and CCITT standards. Conformance testing must be done on a country-by-country basis because each country can choose to implement its own subset of the ISO and CCITT standards. Through a process called <i>profiling</i>, a government-established standards consortium determines what subset of the ISO and CCITT standards are required to meet its country's needs, and then develops its own conformance tests. Any X.400 vendor who wants to do business with a country's government must be certified by its standards consortium. </p>
<p>
Conformance testing is therefore important for both government and corporate customers because it helps ensure that the X.400 product meets a high level of fidelity with the standards. We plan for Microsoft Exchange Server to be certified by the most important standards consortiums in the world, as shown in the following table.</p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Standards Consortium</b></td>
<td class=label width=17%><b>Standard</b></td>
<td class=label colspan=2 width=50%><b>Testing Status (as of the time of this report)</b></td>
</tr>
<tr valign=top>
<td width=33%>U.S. Government Open Systems Interconnection Profiles (GOSIP) 2.0</td>
<td width=17%>MHS 1984 <sup>1</sup></td>
<td colspan=2 width=50%>Conformance achieved in October 1994.</td>
</tr>
<tr valign=top>
<td width=33%>U.S. GOSIP</td>
<td width=17%>MHS 1988 <sup>2</sup></td>
<td colspan=2 width=50%>Testing to be completed by the final release date of Microsoft Exchange Server.</td>
</tr>
<tr valign=top>
<td width=33%>Open Systems Testing Consortium (OSTC)—European standard</td>
<td width=17%>MHS 1988</td>
<td colspan=2 width=50%>Testing to be completed by the final release date of Microsoft Exchange Server.</td>
</tr>
<tr valign=top>
<td width=33%>United Kingdom GOSIP</td>
<td width=17%>MHS 1988</td>
<td colspan=2 width=50%>Testing to be completed by the final release date of Microsoft Exchange Server.</td>
</tr>
<tr valign=top>
<td colspan=3 width=98%></td>
</tr>
<tr valign=top>
<td colspan=3 width=98%><sup>1</sup> 84 MTA conformance includes: P1, RTS, Session, and TP0.<br>
<sup>2</sup> 88 MTA conformance includes: P1+X.410, RTSE, ACSE, Presentation, and Session. </td>
</tr>
</table><br>
<h4>Interoperability testing—products and services</h4>
<p>
In the area of interoperability testing, Microsoft already has much experience. With the Microsoft Mail gateway to X.400, we performed interoperability testing with several X.400 vendors, including Data General, NCR, Touch, Digital Equipment, Retix, Unisys, Hewlett-Packard, Soft-Switch, Northern Telecom, and Tandem. We were also certified for interoperability with a number of X.400 mail systems, including Arcom 400 (Swiss PTT—Switzerland), AT&amp;T Mail (AT&amp;T—U.S.), Atlas 400 (TRANSPAC—France), EasyLink (AT&amp; T—U.S.), Envoy 100 (Telecom Canada—Canada), MCI Mail (MCI—U.S.), Notice 400 (Infonet—US), Quickcomm (G.E. Information Services—U.S.), Sprintmail (U.S. Sprint Communications— U.S.), Telebox 400 (German PTT—Germany), Telemail (Sprint International—U.K.), Dutch PTT (Netherlands), and Telecom Australia (Australia).</p>
<p>
Because it is done on a country-by-country basis, conformance testing alone does not verify that different X.400 implementations will interoperate with each other. Interoperability testing is required to ensure that different X.400 MTAs communicate with one another.</p>
<p>
Using the OSINET (North America) and EUROSINET (Europe) interoperability test suites for the 1984 and 1988 versions of the X.400 standard, Microsoft will evaluate the interoperability between Microsoft Exchange Server MTA and the following X.400 mail systems:
<ul type=disc>
<li>
DEC™ MRX (1984)<br><br></li>
<li>
Retix® Open Server (1984)<br><br></li>
<li>
Microsoft Mail 3.2 X.400 Gateway (1984)<br><br></li>
<li>
Soft-Switch™ Central (1984)<br><br></li>
<li>
Isocor Isoplex 800 MTA (1988)<br><br></li>
<li>
HP® OpenMail (1988)<br><br></li>
<li>
Lotus® Message Switch (formerly Soft-Switch EMX) (1988)<br><br></li>
<li>
Control Data X.400 mail system (1988)<br><br></li>
<li>
DEC Mailworks (1988)<br><br></li>
<li>
Infonet (1988)<br><br></li>
<li>
Novell® MAWG X.400 Gateway (1988)</li>
</ul>
<p>
(If your system isn't listed, this does not necessarily mean that it will not interoperate with Microsoft Exchange Server. It does mean, though, that we are not planning interoperability testing for that system in our system test labs. However, many of our customers are testing other X.400 MTAs not listed here. Our extensive conformance and interoperability testing give us a high degree of confidence that our MTA will work with most other "compliant" X.400 MTAs.)</p>
<p>
The test suites will cover the following test protocols and scenarios:</p>
<p>
<b>Protocol 1 (P1) Interop</b>—This protocol contains the envelope of the message—information about the message's originator and intended recipients. This protocol is used to verify that we can communicate with other X.400 MTAs and interchange the MTA name, password, and OSI addressing information. The testing scenarios are:
<ul type=disc>
<li>
P1 Interop between Microsoft Exchange Server and an X.400 1984 MTA.<br><br></li>
<li>
P1 Interop between Microsoft Exchange Server and an X.400 1988 MTA.<br><br></li>
<li>
P1 Interop between Microsoft Exchange Server and an X.400 1984 MTA using the X.410 dialogue mode.</li>
</ul>
<p>
<b>Protocol 2 (P2) and Protocol 22 (P22) Interop</b>—These protocols cover the content of the message. The P2 protocol is for X.400 MHS 1984 mail systems, while P22 is for X.400 MHS 1988 mail systems. Both protocols cover all interpersonal messaging (IPM) body parts or attachments sent by the originator of the message, including the text of the message. Depending on whether we are using the 1984 version or the 1988 version, Microsoft will verify that Microsoft Exchange Server can generate and accept body part 14 and body part 15, and the file transfer body part. We will verify that we can receive and originate both textual and binary body parts such as T.61 (Teletex), ISO 6937, ISO 8857-1, and body part 9. The testing scenarios are:
<ul type=disc>
<li>
P2 Interop between Microsoft Exchange Server and an X.400 1984 MTA.<br><br></li>
<li>
P22 Interop between Microsoft Exchange Server and an X.400 1988 MTA.<br><br></li>
<li>
P2 Interop between Microsoft Exchange Server and an X.400 1984 MTA using the X.410 dialogue mode.<br><br></li>
<li>
P2 and P22 body part interoperability between Microsoft Exchange Server and an X.400 1988 and 1984 MTA.<br><br></li>
<li>
P2 and P22 interoperability between Microsoft Exchange Server and an X.400 1988 and 1984 MTA.</li>
</ul>
<p>
<b>OSI Transports and Network Configuration Testing</b>—Microsoft Exchange Server can operate with other X.400 mail systems by using any one of the three more popular OSI transport and network configurations. These configurations are: TP0/X.25, TP4/CLN, and TP0/RFC1006 to TCP/IP.</p>
<p>
We will evaluate the interoperability of the Microsoft Exchange Server with the following versions of these transport and network configurations:
<ul type=disc>
<li>
Digital Equipment Corporation OS TCP/IP and TP4/CLNP<br><br></li>
<li>
Hewlett-Packard OS TCP/IP, TP4/CLNP, and TP0/X.25<br><br></li>
<li>
Retix® TP4/CLNP, TP0/X.25<br><br></li>
<li>
Isocor TP0/X.25<br><br></li>
<li>
Isocor UNIX® version using SCO UNIX TCP/IP &amp; TP0/X.25<br><br></li>
<li>
Sun Microsystems® OSI TP4/CLNP and TP0/RFC1006 to TCP/IP products<br><br></li>
<li>
Sprint X.25 public services<br><br></li>
<li>
AT&amp;T® X.25 public services</li>
</ul>
<p>
<b>PTT Interop Testing—</b>PTTs are the post, telephone, and telegraph authorities responsible for providing OSI services. In the X.400 world, these are known as administrative management domains (ADMDs). We expect Microsoft Exchange Server to be certified by the PTTs for PRMD interoperability support using their X.400 and OSI Services. We will test with the following major PTTs in the U.S. and around the world:
<ul type=disc>
<li>
AT&amp;T X.400 and X.25 services (U.S. and Europe)<br><br></li>
<li>
MCI X.400 and X.25 services (U.S.)<br><br></li>
<li>
Sprint X.400 and X.25 services (U.S.)<br><br></li>
<li>
Northern Telecom X.400 services (Europe)<br><br></li>
<li>
British Telecom X.400 and X.25 services (Europe)<br><br></li>
<li>
NTT X.400 services (Japan)<br><br></li>
<li>
Australian Telecom X.400 and X.25 services (Australia)<br><br></li>
<li>
Swedish Telecom X.400 services (Sweden)<br><br></li>
<li>
Infonet X.400 services (U.S.)</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;French, German, and other European PTTs are covered by OSTC conformance testing standards.</p>
<h3>Customer Scenarios</h3>
<h4>Connecting an existing Microsoft Mail Server to X.400</h4>
<p>
Microsoft Mail Server users connect to the Microsoft Exchange Server via the Microsoft Mail Connector, which then connects to a private or a public X.400 mail system through the native Microsoft Exchange Server X.400 MTA (see Figure 2 below).</p>
<p>
<img src="stan10_2.gif" border=0></p>
<p class=label>
<b>Figure 2. This figure illustrates how Microsoft Mail users can connect to an X.400 mail system via the Microsoft Exchange Server.</b></p>
<h4>Connecting a Microsoft Exchange Server site to an X.400 messaging system</h4>
<p>
The Microsoft Exchange Server X.400 MTA connects an Exchange Server site to private and public X.400 mail systems. As shown in Figure 2 above, Microsoft Mail Server users connected to the Microsoft Exchange Server site via the Microsoft Mail Connector can also connect to the public X.400 mail system. This is done through the native Microsoft Exchange Server X.400 MTA.</p>
<p>
<img src="stan10_3.gif" border=0></p>
<p class=label>
<b>Figure 3. This figure illustrates how users of Microsoft Exchange Server and Microsoft Mail Server can connect to any other mail system with X.400 connectivity.</b></p>
<h4>Connecting two Microsoft Exchange Server sites (backboning)</h4>
<p>
The Microsoft Exchange Server X.400 MTA can also connect two (or more) Exchange Server sites through a private or public X.400 mail system. As shown in Figure 4, two Microsoft Exchange Server sites are connected and users are given access to the X.400 messaging system. Each of the Microsoft Exchange Server systems being connected must use its own Exchange Server X.400 MTA.</p>
<p>
<img src="stan10_4.gif" border=0></p>
<p class=label>
<b>Figure 4. This figure illustrates how X.400 is used to provide WAN connectivity between two Microsoft Exchange Server sites, a process known as <i>backboning</i>.</b></p>
<h4>Connecting a Microsoft Exchange Server site and a Microsoft Mail Server post office</h4>
<p>
Companies can use the Microsoft Exchange Server X.400 MTA and the Microsoft Mail Gateway to X.400 to connect Exchange Server sites to a Microsoft Mail Server post office. As shown in Figure 5 below, Microsoft Exchange Server users are given access to the X.400 messaging system, the Microsoft Mail Server post office, and any foreign messaging systems that are accessible through the post office.</p>
<p>
<img src="stan10_5.gif" border=0></p>
<p class=label>
<b>Figure 5. This figure illustrates how X.400 is used to provide connectivity between geographically dispersed Microsoft Exchange Servers and Microsoft Mail Servers.</b></p>
<h3>Going Beyond X.400 in Microsoft Exchange Server</h3>
<p>
In the purest sense, X.400 specifies a user agent, message store, and MTA, and the means by which each component interacts with the other. There are messaging companies that provide a pure X.400 environment from the user agent on down to the MTA. However, we believe that the primary benefit of using X.400 as a standard for corporate messaging is its ability to allow disparate mail systems to communicate with one another. </p>
<p>
To meet the needs of our customers, Microsoft has gone beyond the X.400 specification for the user agent and message store in many areas. The following is just a sampling of these areas:</p>
<h4>Requirement for a rich message store</h4>
<p>
In addition to electronic mail messages, Microsoft Exchange Server must store heterogeneous object types such as Schedule+ meeting requests, electronic forms, documents, and so on. Microsoft Exchange Server therefore requires a rich message store that goes beyond the message store specified by the 1988 X.400 standard.</p>
<h4>Requirement for delegate access</h4>
<p>
X.400 implementations generally assume a one-user to one-mailbox relationship. Microsoft Exchange Server must support a many-to-one mailbox relationship for features such as delegate access (the ability for more than one person to access the same mailbox).</p>
<h4>Requirement for replicated public folders</h4>
<p>
Because the 1988 X.400 message store provides no specifications for the support of public folders, it does not support discussion, bulletin board, or threaded conversation applications. Customers have asked for these applications, and now they can build them with Microsoft Exchange Server public folders. </p>
<h4>Requirement for rich distribution list support</h4>
<p>
Although X.400 supports distribution lists, it provides no specification for support or management once the distribution lists are created. With Microsoft Exchange Server, users can manage distribution lists and reduce the administrative overhead these lists can create. Also, in a pure X.400 system, if distribution lists are nested, a user will receive one copy of a message each time it appears in the nested lists. With Microsoft Exchange Server, the recipient receives only one message, even though that message may appear in many nested lists.</p>
<h4>Requirement for effective interoperability and functionality between client and server</h4>
<p>
With 200 function calls and a subsystem that interfaces with both the client and server, MAPI provides a rich vendor-to-vendor interoperability that is independent of the underlying messaging service. Much of this richness is not supported by X.400.</p>
<h3>About Electronic Data Interchange (EDI)</h3>
<p>
Electronic data interchange (EDI) is a natural and attractive complement to electronic mail, especially as companies strive for paperless operation. However, most current EDI applications are complex, proprietary, and highly customized for particular industries. Standards for EDI are evolving rapidly. The X.435 standard specified in 1990 and the use of the P2 Interop are two examples of this recent evolution. The X.435 standard defines the methods by which EDI processes can transmit documents over an X.400 transport. The P2 Interop is the content type for X.400 messages and is being widely used in Europe for EDI.</p>
<p>
EDI is a complex issue that involves both messaging and security. But because Microsoft Exchange Server is an X.400 messaging system, it can act as the transport infrastructure for the delivery of EDI documents. Third-party EDI vendors are working on solutions that will take advantage of Microsoft Exchange Server's rich messaging functionality in the near future. </p>
<h2>Microsoft Exchange Server and the X.500 Directory Service Standard</h2>
<p>
The 1988 and 1993 X.500 directory service standards were designed to provide a global directory. Although it has received much press, X.500 has yet to be implemented by many customers.</p>
<p>
In simplifying the X.500 model, we can divide X.500 into two requirements: one that defines the <i>directory structure</i> and one that defines <i>directory access</i>. The X.500 directory structure outlines the logical directory object schema, each object's attributes, and how each object relates to one another. Directory access refers to how these objects can be queried and replicated with other X.500 directory systems. </p>
<p>
Microsoft Exchange Server supports a rich X.500 object schema that is described later in this section. Standards-based directory querying and replication across different e-mail systems however will not be feasible until other vendors support X.500 querying and updating. (Customers who want to synchronize their e-mail directories with Microsoft Exchange Server will be able to do so via the directory interface agent provided in the Microsoft Exchange Software Development Kit.) Because managing directories is such a difficult task, we envision that directory services, such as those defined by the X.500 standard, will become a cornerstone component of most messaging systems in the future.</p>
<p>
This section will provide an overview of the X.500 standard and describe how this standard is used by Microsoft Exchange Server.</p>
<h3>X.500 Overview</h3>
<p>
In the article "Focus: The X.500 Market" in <i>The Messaging Technology Report</i>, <i>Volume 3, Number One</i> (January 1994), Dr. Sara Radicatti states that the X.500 has grown in popularity because it meets the main needs of customers. Many industry pundits would agree with this assessment. The following customer needs are among those addressed by X.500:
<ul type=disc>
<li>
<i>Universal access</i>: Users and applications need to be able to get information from a single enterprise-wide directory service.<br><br></li>
<li>
<i>Definable attributes</i>: Corporate users want to store a variety of information—not just general business information such as phone numbers, fax numbers, e-mail names, postal addresses, and so on—but also more personal information, such as employees' job titles and descriptions, and the reporting structure of their organization. With X.500's attribute structure, users can design databases that store all employee and company network resource information in one logical place. And because directory object attributes can be customized, X.500 makes it possible for organizations to structure the database as needed to meet their specific information requirements.<br><br></li>
<li>
<i>Directory manageability:</i> Network administrators should be able to easily add or modify data stored in the directory. The reporting capabilities of X.500 make that possible, and its directory synchronization methods ensure that multiple instances of directory databases remain consistent with each other.<br><br></li>
<li>
<i>An international standard</i>: Users are guaranteed that the specifications for X.500 will be in the public domain, unlike most proprietary directory services, which do not publish specifications.<br><br></li>
<li>
<i>Scalability</i>: As the network expands, users can easily add directory servers to support hundreds of directory services.<br><br></li>
<li>
<i>Multi-part naming hierarchy</i>: With multi-part naming, it's easier to make the mail system fit complex organizations in which two, three, or more administrative layers need to be reflected in the naming structure. Multi-part naming improves the scalability of the system.</li>
</ul>
<p>
Most analysts agree, however, that large challenges still must be overcome before X.500 will meet the needs of most customers. Although Microsoft Exchange uses an X.500 object schema, the initial release will not support directory inquiry or updating through the directory access protocol (DAP) or the Directory Service Protocol (DSP). The Microsoft Exchange directory service agent (DSA) handles directory distribution and replication within Microsoft Exchange while the Microsoft Exchange directory synchronization agent (DXA) handles directory synchronization with other e-mail systems.</p>
<h3>X.500 and Microsoft Exchange Server Today</h3>
<p>
The 1988 X.500 directory service recommendations form the basis of the directory service in Microsoft Exchange Server. This directory service stores all objects that conform to the X.500 object classes in an X.500 schema.</p>
<p>
The table below illustrates how the X.500 name space maps to Microsoft Exchange Server directory objects.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>X.500</b></td>
<td class=label width=70%><b>Microsoft Exchange Server</b></td>
</tr>
<tr valign=top>
<td width=30%>Country</td>
<td width=70%>Country</td>
</tr>
<tr valign=top>
<td width=30%>Organization</td>
<td width=70%>Organization</td>
</tr>
<tr valign=top>
<td width=30%>Organizational unit</td>
<td width=70%>Site name</td>
</tr>
<tr valign=top>
<td width=30%>Common name</td>
<td width=70%>Microsoft Exchange Server recipient container</td>
</tr>
<tr valign=top>
<td width=30%>Common name</td>
<td width=70%>Microsoft Exchange Server recipient.</td>
</tr>
</table><br>
<p>
Figure 6, below, illustrates the Microsoft Exchange Server directory schema as it relates to X.500 object classes.</p>
<p>
<img src="stan10_6.gif" border=0></p>
<p class=label>
<b>Figure 6. The Microsoft Exchange Server directory schema</b></p>
<p>
The object classes provided by X.500 are not sufficient for Microsoft Exchange Server functionality, so Exchange Server defines and supports additional object classes and attributes. For example, Microsoft Exchange Server also supports:
<ul type=disc>
<li>
Titles<br><br></li>
<li>
Organization chart information<br><br></li>
<li>
Additional phone number information<br><br></li>
<li>
Arbitrary attributes created by the administrator<br><br></li>
<li>
Alternate recipients</li>
</ul>
<p>
Much of the complexity of X.500 is shielded from the administrator and user. To the administrator, the object classes are exposed through easy-to-navigate property pages that are part of the Microsoft Exchange Server administration program. The mapping between the X.500 object and the X.400 proxy addresses for routing purposes is handled automatically by Microsoft Exchange Server. There is no reason for users to be aware of directories as a separate function. Looking at the address book is just a normal part of the client function.</p>
<h3>A Look at the Future</h3>
<p>
The 1993 X.500 directory service recommendations for directory access (DAP/DSP) will be available in future releases of Microsoft Exchange Server. With our X.500 directory schema in the initial release of Microsoft Exchange Server, we are well-positioned to provide rich directory access services in the future. Our goal is to unify the Microsoft Exchange Server directory with the name spaces in the operating system, file system, Exchange Server public folder hierarchy, security database, and so on.</p>
<h2>Microsoft Exchange Server and SMTP, MIME, and Internet Mail</h2>
<h3>SMTP, MIME, and the Internet</h3>
<p>
The Internet has long used several e-mail standards published as RFCs: RFC 821, which defines the SMTP, defines how Internet mail is transferred; RFC 822 defines the message content for plain text messages; and RFC 1521 (multipurpose Internet mail extensions [MIME]), extends the definition of message content to include multi-part textual and non-textual body parts. Microsoft Exchange Server supports these RFCs through the Exchange Server Internet Mail Connector, an important component for customers who rely on SMTP connectivity.</p>
<h3>RFC Support—RFC 821, RFC 822, RFC 1521 (MIME), and RFC 1154</h3>
<p>
(RFC 1154 is an experimental protocol that enables the mailing of multi-part, multi-structured messages.)</p>
<p>
The Microsoft Exchange Server Internet Mail Connector connects Exchange Server to other mail systems that use SMTP (RFC 821) to transfer mail. This component is called the <i>Internet</i> Mail Connector because it refers to the format of the Internet messages that are sent over the SMTP transport. The Internet message is defined by RFC 822 (the message format). RFC 822 can be supplemented by RFC 1521 (MIME), which enables structured message bodies in Internet mail. In addition to RFC 822 and RFC 1521, the Internet Mail Connector supports RFC 1154, which is used by the existing Microsoft Mail gateway to SMTP.</p>
<p>
The table below includes more specific descriptions of the RFCs that Microsoft Exchange Server supports.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=25%><b>RFC</b></td>
<td class=label width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%>RFC 821 (STD10)</td>
<td width=75%>RFC 821 describes the sequence of control messages that are passed between computers to effect the transfer of a mail message. RFC 821 defines the SMPT.</td>
</tr>
<tr valign=top>
<td width=25%>RFC 822 (STD 11)</td>
<td width=75%>RFC 822 defines the message format, including headers (to, from.....) and the plain (7-bit U.S. ASCII) unstructured text message. All parts of the message body are concatenated,&nbsp; with no distinct headings separating the different body parts or specifying content types, encodings, attachment attributes, or other properties. One attachment follows the next and consecutive text attachments can be combined into a single part. The most common way of handling non-text attachments is by encoding and decoding them with UUENCODE and UUDECODE. If there is any non-text data in the message body, the entire message is encoded with UUENCODE or decoded with UUDECODE.</td>
</tr>
<tr valign=top>
<td width=25%>RFC 1521 (MIME)</td>
<td width=75%>RFC 1521 defines the actual message body parts and allows different kinds of data to be sent as different body parts (such as images, sound, video, and different types of text). RFC 1521 specifies how to tag each of the body parts so that each one can be identified.</td>
</tr>
<tr valign=top>
<td width=25%>RFC 1154<br>
(for support of the Microsoft Mail version 3.2 message format)</td>
<td width=75%>This message format is created by the Microsoft Mail gateway to SMTP. The first body part is always text; it contains references to the attachments. The attachments are appended after the first body part. Non-text attachments are encoded with UUENCODE. The additional message header, X-MS-Attachment, itemizes each attachment by its name, attributes, and creation date and time.</td>
</tr>
</table><br>
<h3>Customer Scenarios</h3>
<h4>Connecting an existing Microsoft Mail Server to the Internet</h4>
<p>
Microsoft Mail users can access the Internet via the Microsoft Exchange Server Internet Mail Connector. Messages pass through the Exchange Server's Microsoft Mail Connector to the Internet.</p>
<p>
<img src="stan10_7.gif" border=0></p>
<p class=label>
<b>Figure 7. This figure illustrates how Microsoft Mail users can connect to the Internet via Microsoft Exchange Server.</b></p>
<p>
<b>Connecting a Microsoft Exchange Server site to an SMTP messaging system</b></p>
<p>
The Microsoft Exchange Server Internet Mail Connector connects an Exchange Server site to the Internet or another system that uses SMTP for message exchange. As shown above, Microsoft Mail Server users connected to the Microsoft Exchange Server site with the Microsoft Mail Connector can also connect to the SMTP messaging system through the Exchange Server Internet Mail Connector.</p>
<p>
<img src="stan10_8.gif" border=0></p>
<p class=label>
<b>Figure 8. This figure illustrates how users of Microsoft Exchange Server and Microsoft Mail Server can connect to any other mail system with SMTP connectivity.</b></p>
<h4>Connecting two Microsoft Exchange Server sites (backboning)</h4>
<p>
The Microsoft Exchange Server Internet Mail Connector can also connect two (or more) Microsoft Exchange Server sites through the Internet or another system that uses SMTP for message exchange. This scenario connects the two Microsoft Exchange Server sites and gives Exchange Server users access to the SMTP messaging system. Each of the Microsoft Exchange Server systems being connected is required to use its own Microsoft Exchange Server Internet Mail Connector.</p>
<p>
<img src="stan10_9.gif" border=0> </p>
<p class=label>
<b>Figure 9. This figures illustrates the use of SMTP for connectivity between two geographically dispersed Microsoft Exchange Server sites (backboning).</b></p>
<h4>Connecting a Microsoft Exchange Server Site and a Microsoft Mail Server post office</h4>
<p>
Companies can use the Microsoft Exchange Server Internet Mail Connector and the Microsoft Mail Gateway to SMTP to connect Exchange Server sites to a Microsoft Mail Server post office. This gives Microsoft Exchange Server users access to the SMTP messaging system, the Microsoft Mail Server post office, and any foreign messaging systems that are accessible through the post office.</p>
<p>
<img src="stan10_10.gif" border=0></p>
<p class=label>
<b>Figure 10. This figure illustrates how SMTP is used to provide connectivity between geographically dispersed Microsoft Exchange Servers and Microsoft Mail Servers.</b></p>
<h4>Connecting a Microsoft Exchange Server Site and a Windows 95 user through the Internet</h4>
<p>
Microsoft Windows® 95 includes the Microsoft Exchange client, a universal inbox with direct access to the Internet via a MAPI-based Internet Mail provider (see MAPI section). The Internet Mail provider will be available through Microsoft Plus! for Windows 95. Through this provider, an individual using Windows 95 can send and receive Internet Mail with others on the Internet. This includes Microsoft Exchange Server users who send and receive Internet mail through the Internet Mail Connector.</p>
<p>
<img src="stan10_11.gif" border=0></p>
<p class=label>
<b>Figure 11. This figure illustrates how a Windows 95 user can use the Internet independent of Microsoft Exchange to communicate with other mail systems, including Microsoft Exchange Server. </b></p>
<h3>Features of the Internet Mail Connector</h3>
<h4>Administration</h4>
<p>
The Microsoft Exchange Server Internet Mail Connector is very easy to install, setup and administer. It is an integral component of Microsoft Exchange Server that is installed with the Exchange Server setup program and is administered through the Exchange Server Administrative program. Because it is an Microsoft Exchange Server service, it can be monitored, stopped and started, and managed like any other Windows NT service.</p>
<p>
The Internet Mail Connector provides a number of administrative options that will help the administrator manage and control their company's Internet traffic. Examples of these controls include:
<ul type=disc>
<li>
<i>Unread limit (msgs)</i> sets the maximum number of messages that can be in the Internet Mail Connector queue at any one time.<br><br></li>
<li>
<i>Unread time</i> sets the maximum length of time a message can remain in the Internet Mail Connector queue before it is returned to the sender.<br><br></li>
<li>
<i>Message transfer quota</i> is the maximum amount of disk storage that can be used by the Internet Mail Connector database.<br><br></li>
<li>
<i>Maximum message size</i> is the maximum size of a message that the Internet Mail Connector will send. Messages that exceed the maximum are returned as undeliverable.</li>
</ul>
<h4>Message format</h4>
<p>
The Internet Mail Connector provides flexible interoperability between existing Microsoft Mail Server users, e-mail systems that support just the RFC 822 message format, and those that support the MIME extensions. This is important because you may need to communicate with companies over the Internet that are at different stages of technology implementation.</p>
<p>
The Internet Mail Connector supports the following three message formats: RFC 822, RFC 1521 (MIME), and RFC 1154 (Microsoft Mail 3.2 compatibility mode). Administrators can set defaults for the Internet Mail Connector and override the default behavior based on addresses.</p>
<h4>Content types</h4>
<p>
Different language characters can be supported and transferred using one of these international content types:
<ul type=disc>
<li>
Swedish and Norwegian IA5<br><br></li>
<li>
ISO 8859-1 (Western Europe support)<br><br></li>
<li>
ISO 2022-JP (Japanese)<br><br></li>
<li>
ISO 2022-KR (Korean)<br><br></li>
<li>
RFC 1522 (extended characters in headers)</li>
</ul>
<h4>Inbound/outbound connections</h4>
<p>
The Internet Mail Connector will support multiple simultaneous inbound and outbound connections. Administrators can control the number of simultaneous connections in and out of the Internet Mail Connector.</p>
<p>
The complexity of encoded Internet messages is hidden from the user. Inbound messages are automatically resolved, whether they are sent as an RFC 822, RFC 1521, or RFC 1154 message. UUENCODE, Base 64, and Quoted Printable encoding are automatically decoded. For outbound messages, administrators can set defaults. </p>
<p>
Because the Internet Mail Connector can also be configured to accept connections only from known IP addresses, it can be used to set up a private messaging network on the Internet.</p>
<h4>Domain Name Service (DNS) Resolver</h4>
<p>
The Domain Name Service (DNS) Resolver can resolve Internet addresses from a DNS service and route them from the Internet address information. It can query a DNS server and route on the information received. For this reason, the Internet Mail Connector does not require additional computers for routing purposes.</p>
<p>
<img src="stan10_12.gif" border=0></p>
<p class=label>
<b>Figure 12. Internet Mail Connector configuration property pages from Microsoft Exchange Server Beta 1</b></p>
<h2>The Client-to-Server Interface—MAPI</h2>
<p>
MAPI is a key industry-standard API because it lets Windows-based applications interact with many different messaging services by using a single interface. The MAPI architecture defines the way in which MAPI applications and messaging clients, such as the Microsoft Exchange client, interact with various messaging services such as Microsoft Mail; Microsoft Exchange Server; MSN, The Microsoft Network; CompuServe®; and the Internet. The MAPI architecture is shown in the following figure below:</p>
<p>
<img src="stan10_13.gif" border=0></p>
<p class=label>
<b>Figure 13. The MAPI architecture</b></p>
<p>
MAPI divides messaging applications into four components: MAPI applications and messaging clients, MAPI subsystem, MAPI service providers, and messaging services. </p>
<h3>MAPI Applications and Messaging Clients</h3>
<p>
MAPI applications and messaging clients communicate with MAPI service providers through MAPI interfaces. MAPI client applications can be divided into three general categories, as follows:
<ul type=disc>
<li>
<i>Messaging-enabled applications</i>. A messaging-enabled application includes messaging functions as an added but not required feature. These functions support the application's main purpose. An example of a messaging-enabled application is Microsoft Word, which can add messaging functions by adding a Send command to its File menu.<br><br></li>
<li>
<i>Messaging-aware applications</i>. A messaging-aware application requires some form of messaging functionality to meet the application's main purpose. Examples of messaging-aware applications are the Microsoft Exchange client, Microsoft Mail client, and cc:Mail™.<br><br></li>
<li>
<i>Messaging-based workgroup applications</i>. These are more complex types of applications that go beyond basic electronic mail. They require full access to all the messaging services, including the message store providers, address book providers, and transport providers. Examples of this type of application include Microsoft Schedule+ and the public folders on a Microsoft Exchange Server.</li>
</ul>
<h3>MAPI Subsystem</h3>
<p>
MAPI applications and messaging clients communicate with service providers through the MAPI subsystem. The client interface interacts with the MAPI subsystem to access MAPI-compliant service providers. Through Microsoft's broad publication of its messaging APIs, and because of the robust messaging and groupware functionality defined therein, MAPI has become the de facto industry standard for messaging and groupware clients and providers.</p>
<p>
Figure 13 (above) illustrates how MAPI clients and applications span a broad range of messaging and groupware-based applications. As can be inferred from the figure, neither the client nor the service provider must be provided by Microsoft. Because MAPI is an openly defined and distributed standard, any third party can write its own MAPI-compliant client or service provider. The advantage in doing so is obvious. Just as applications that use the Windows printing subsystem do not have to have drivers for each printer on the market, so too can applications access the service provider functionality needed without having to have a specific interface for each provider. </p>
<p>
Messaging applications that require messaging services can use any of four MAPI subsystem interfaces: sMAPI (Simple MAPI), common messaging calls (CMC), OLE Messaging (an OLE Automation interface to MAPI), or MAPI itself. Client requests for messaging services are processed by the MAPI subsystem either as function interface calls, as in the case of sMAPI or CMC, or as manipulations of MAPI objects, as in the case of OLE Messaging or MAPI itself, and passed on to the appropriate MAPI-compliant service provider. The MAPI service providers then perform the requested actions for the client and pass back action through the MAPI subsystem to the MAPI client. </p>
<p>
Each MAPI subsystem interface has its uses. The sMAPI interface contains 12 Windows-based function calls that let messaging-enabled applications perform basic messaging tasks such as sending e-mail, resolving e-mail names, and so on. The CMC interface is an API layer defined by the X.400 API Association (XAPIA). (With Microsoft Mail 3.2, Microsoft was the first company to support and ship CMC.) This interface provides virtually identical function call interfaces as sMAPI, but has been designed to support cross-platform scenarios. OLE Messaging is an OLE Automation Idispatch interface (object oriented) to MAPI that will allow Visual Basic®, C, or C++ developers to leverage much of the messaging and groupware functionality inherent in MAPI. MAPI itself is an object-oriented C or C++ interface that allows MAPI objects such as messages, forms, and folders to be manipulated. It is designed to be used by more complex messaging-based and groupware applications, such as Microsoft Exchange public folder applications.</p>
<h3>MAPI Service Providers</h3>
<p>
MAPI defines three types of service providers: 
<ul type=disc>
<li>
<i>Message store providers</i> supply message storage, organization, and retrieval facilities to a messaging system. <br><br></li>
<li>
<i>Address book providers</i> supply message addressing and distribution list facilities to the messaging client. <br><br></li>
<li>
<i>Messaging transport providers</i> move messages between messaging clients or messaging stores. </li>
</ul>
<p>
All service providers share a single Windows-based user interface. For example, the Microsoft Exchange client can receive messages from a fax, a bulletin board system, and an electronic mail system. Messages from all these systems, each with a different transport service provider, can arrive in the Microsoft Exchange universal inbox. Similarly, MAPI selects between message store and transport providers, as necessary, and merges the address books presented to it, so that the client application sees one combined address book interface. </p>
<p>
Other vendors can add or replace messaging service providers to enable the Microsoft Exchange client to work with their mail systems, workflow systems, database storage systems, or directory services. </p>
<h3>Messaging Services</h3>
<p>
Messaging services have evolved to encompass much more than just electronic mail. Today, messaging services include fax and voice support, Internet mail, rich information sharing applications such as Microsoft Exchange Server and network based information services such as MSN. Through MAPI, MAPI applications and messaging clients can take advantage of the growing number of these messaging services.</p>
<h2>Conclusion</h2>
<p>
When messaging systems are able to communicate and share information with one another, it will be because they were designed to conform with industry standards. In our desire to deliver a powerful, yet manageable corporate messaging system, one of our most important development goals was to ensure that Microsoft Exchange Server would be a great messaging product that adheres closely to industry standards. We have made great strides in these areas with the 1988 X.400 MTA, Internet Mail Connector, X.500-based directory service, and MAPI support, and we have designed the product so that customers can choose which of these standards they want to implement within their organizations. We trust you will find that the Microsoft Exchange Server, with its wide range of standards options, is the right product for your current and future messaging needs.</p>
</BODY>
</HTML>
