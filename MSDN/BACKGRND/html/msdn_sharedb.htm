<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sharing Databases with Users of Previous Versions of Microsoft Access</title>
                <style>@import url(msdn_ie4.css);</style>
	<link disabled rel="stylesheet" href="msdn_ie3.css">
</HEAD>
<BODY>

<h1><a name="msdn_sharedb"></a>Sharing Databases with Users of Previous Versions of Microsoft Access </h1>
<p>
Mark Roberts<br>
Microsoft Corporation</p>
<p>
Updated 31 January 1997&nbsp; </p>
<h2>Introduction</h2>
<p>
When users of your database applications created in previous version of Microsoft® Access upgrade to Microsoft Access 97, you have three options:
<ul type=disc>
<li>
Convert your database application.<br><br></li>
<li>
Open the database application in its existing format, which is called <i>enabling</i> your database application.<br><br></li>
<li>
Split your database into a front-end/back-end application, that is, create a front-end database in Microsoft Access 97 linked to table data in a previous version back-end database.</li>
</ul>
<p>
If all users that will work with your application have upgraded to Microsoft Access 97, your choice is easy—you can convert the application. When you convert a database from a previous version of Microsoft Access to Microsoft Access 97, users of your application can use all of the new features available in Microsoft Access 97. However, keep in mind that this is a "one-way trip"—after a database is converted, the new database created by the conversion process cannot be opened in previous versions of Microsoft Access, nor can it be converted back to an earlier format. </p>
<p>
For information on how to convert a database, see "converting databases" in Microsoft Access 97 Help. For additional information on conversion issues, see the Microsoft Access 97 Conversion Whitepaper on the Web at http://www.microsoft.com/ACCESSDEV/ACCWHITE/ACC97CNV.HTM, and Chapter 11, "Upgrading from Previous Versions of Microsoft Access" in the Microsoft Office 97 Resource Kit in the MSDN Library.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You can export tables from a Microsoft Access 97 database to an existing database created with a previous version. However, the functionality of certain field data types will be lost. For example, Hyperlink fields are supported only in Microsoft Access 97. Hyperlink field data will be exported to tables in all previous versions as Memo fields. Also, the functionality of Autonumber fields with the <b>NewValues</b> property set to Random, and Lookup Wizard fields are supported only in Microsoft Access 97 and 95. Only the data from these fields will be exported to previous versions. </p>
<p>
However, if users of previous versions of Microsoft Access must use your database application, do not convert it. The following sections describe the two methods you can use to share a database application across multiple versions of Microsoft Access. </p>
<h2>Sharing Databases with Microsoft Access 1.<i>x</i>, 2.0, or 95</h2>
<p>
If the workgroup that is using your database application is upgrading gradually to Microsoft Access 97, your application may need to be shared by users of Microsoft Access 1.<i>x</i>, 2.0, or 95. There are two strategies for sharing databases between different versions of Microsoft Access. You can enable the database, or you can create a front-end database in Microsoft Access 97 format linked to table data in a back-end database from a previous version of Microsoft Access. </p>
<p>
The following table summarizes the advantages and disadvantages of each strategy. </p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=33%><b>Strategy</b></td>
<td class=label width=33%><b>Advantages</b></td>
<td class=label width=34%><b>Disadvantages</b></td>
</tr>
<tr valign=top>
<td width=33%>Enable previous-version databases.</td>
<td width=33%>All Microsoft Access users can open databases and add, edit, or delete data. Any additional development can be made in one file. </td>
<td width=34%>Database file size can increase substantially. Microsoft Access 97 users cannot modify or add new objects, or take advantage of many features unique to Microsoft Access 97. Requires some additional memory, particularly when running code. </td>
</tr>
<tr valign=top>
<td width=33%>Create a front-end database in Microsoft Access 97 format linked to table data in a back-end database from a previous version of Microsoft Access.</td>
<td width=33%>All Microsoft Access users can open databases and add, edit, or delete data. Microsoft Access 97 users can modify or add new objects (except tables) and can take advantage of features unique to Microsoft Access 97 (except for new table features). </td>
<td width=34%>Additional development of the front-end databases must be synchronized across versions. Changes made to the design of the back-end database may require changes in multiple front-end databases. New table features unique to Microsoft Access 97 are not supported in the previous version back-end database. </td>
</tr>
</table><br>
<p>
The following sections provide additional detail to help you decide the best strategy for your situation. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When using either of these strategies, you may encounter some of the same issues involved in converting a database. For example, the version of Visual Basic® that is used by Microsoft Access 97 contains some new reserved keywords. If the database you are trying to enable contains Access Basic or Visual Basic code that contains these keywords, Microsoft Access 97 displays the following message: "There were compilation errors during the conversion or enabling of this database." For more information on troubleshooting conversion problems, see the Microsoft Access 97 Conversion Whitepaper on the Web at http://www.microsoft.com/ACCESSDEV/ACCWHITE/ACC97CNV.HTM and Chapter 11, "Upgrading from Previous Versions of Microsoft Access" in the Microsoft Office 97 Resource Kit in the MSDN Library.</p>
<h2>Enabling a Database</h2>
<p>
Enabling a database keeps the format intact so it can be shared by users of different versions of Microsoft Access. When a Microsoft Access 97 user enables a Microsoft Access 1.<i>x</i>, 2.0, or 95 database, other users can browse the database and add, delete, or modify records; but they cannot switch to Design view on any objects. To modify the design of existing objects or to add new objects, the database must be opened in the version of Microsoft Access used to create it. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Before you enable a database, make sure it is not open in a previous version of Microsoft Access. If the database is located on a server or shared folder, make sure no one else has it open. </p>
<p>
<b>To enable a Microsoft Access 1.<i>x</i>, 2.0, or 95 database in Microsoft Access 97:</b>
<ol>
<li>
Start Microsoft Access 97.<br><br></li>
<li>
On the <b>File</b> menu, click <b>Open Database</b>.<br><br></li>
<li>
In the <b>Open</b> dialog box, select a database.<br><br></li>
<li>
The first time a database from a previous version of Microsoft Access is opened, Microsoft Access 97 displays the <b>Convert/Open Database</b> dialog box.<br><br></li>
<li>
Click <b>Open Database</b> to open the database without converting it. </li>
</ol>
<p>
If the database contains forms, reports, and modules, Microsoft Access 97 creates separate copies of these objects and their Access Basic (Microsoft Access 1.<i>x</i> or 2.0) or Visual Basic (Microsoft Access 95) code so that they can run under Microsoft Access 97. This information is stored in a hidden table named MSysModules2. Depending on the size of the forms, reports, and modules in the database, the addition of the MSysModules2 table can as much as double the file size. If a Microsoft Access 1.<i>x</i> or 2.0 database has been enabled previously by Microsoft Access 95, it has a similar table named MSysModules, which further increases the size of the database. </p>
<p>
Microsoft Access 97 does not display the <b>Convert/Open Database</b> dialog box the next time the database is opened unless a change is made to code in modules, forms, or reports in the previous version of Microsoft Access. If a change has been made to the code, you must enable the database again. </p>
<p>
You can speed up the process of enabling a large database created with Microsoft Access 1.<i>x</i> or 2.0 by increasing the maximum buffer size beyond the default. To change this setting, modify the Windows® registry by setting the MaxBufferSize value to 4096, decimal base in the key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Jet\3.5\Engines\Jet 2.<i>x</i>. For more information about editing the Windows registry, see Microsoft Access 97 Help. </p>
<h2>Creating a Front-end Database Linked to Table Data in a Previous Version Back-end Database</h2>
<p>
Enabling a database as described in the previous section places limitations on Microsoft Access 97 users, increases the size of the database, and requires additional memory, particularly when running code. As an alternative, you can split the database into a Microsoft Access 97 front-end database that contains all objects other than tables, and then link this database to a shared back-end database in the older version format. The back-end database contains the tables. </p>
<p>
In general, it is good practice for developers to keep application code and objects in a separate database from the tables. This allows administrators to convert a copy of the front-end database to Microsoft Access 97 format while leaving the back-end database containing the tables in the previous version format until all users have upgraded to Microsoft Access 97. In this way, the converted copy of the front-end database gains all the features and functionality of Microsoft Access 97, yet the back-end database containing the tables is still available to all users. </p>
<p>
Many developers who use previous versions of Microsoft Access organize shared databases as front-end/back-end databases. If this is the case for you, convert a copy of the front-end database and distribute it to all Microsoft Access 97 users, and then use the <b>Linked Table Manager</b> (<b>Tools</b> menu, <b>Add-ins</b> submenu) to relink the tables in the back-end database. </p>
<p>
If the current database has not been split in the previous version, you can use Microsoft Access 97 to split the database and link to the older version tables. In Microsoft Access 97, first convert the database, and then split it using the Database Splitter Wizard. Finally, use the <b>Linked Table Manager</b> (<b>Tools</b> menu, <b>Add-ins</b> submenu) to relink the original tables in the previous version database. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Before you create and link a front-end database, make sure the linked database is not open in a previous version of Microsoft Access. If the database is located on a server or shared folder, make sure no one else has it open. </p>
<p>
<b>To create a Microsoft Access 97 front-end database:</b>
<ol>
<li>
In <b>Microsoft Access 97, point to Database Utilities on the Tools menu, and then click Convert Database</b>.<br><br></li>
<li>
In the <b>Database to Convert From</b> dialog box, select the database, and then click <b>Convert</b>. <br><br></li>
<li>
In the <b>Convert Database Into</b> dialog box, type a new name (without the .mdb extension) for the Microsoft Access 97 database. <p class=tl>
<i>or </i></P><p class=tl>
Keep the same name and select a different location for the Microsoft Access 97 database. </P></li>
<li>
Click <b>Save</b>. </li>
</ol>
<p>
Microsoft Access creates a converted copy of the database in Microsoft Access 97 format without altering the original database. Then you can link the copy of the database to the original table data. </p>
<p>
<b>To link a front-end database to tables in a back-end database from a previous version:</b>
<ol>
<li>
On the <b>Tools</b> menu, point to <b>Add-ins</b>, and then click <b>Database Splitter</b>.<br><br></li>
<li>
Follow the instructions in the <b>Database Splitter Wizard</b>.<br><br></li>
<li>
Delete the back-end database created by the <b>Database Splitter Wizard</b>, and then open the converted front-end database.<br><br></li>
<li>
On the <b>Tools</b> menu, point to <b>Add-ins</b>, and then click <b>Linked Table Manager</b>.<br><br></li>
<li>
Select the <b>Always Prompt For New Location</b> check box.<br><br></li>
<li>
Select the check boxes for all the tables, and then click <b>OK</b>.<br><br></li>
<li>
In the <b>Select New Location Of<i> table name</i></b> dialog box, specify the location of the previous version database, click <b>Open</b>, and then click <b>OK</b>. </li>
</ol>
<p>
Alternatively, you can create a front-end/back-end application by importing database objects except tables into a new, blank database created in Microsoft Access 97, and then linking the back-end tables from the previous version database. </p>
<p>
<b>To create a Microsoft Access 97 front-end database by importing and linking:</b>
<ol>
<li>
In Microsoft Access 97, click <b>New Database</b> on the <b>File</b> menu, and then double-click <b>Blank Database</b>.<br><br></li>
<li>
Specify a name and location for the database and click <b>Create</b>.<br><br></li>
<li>
On the <b>File</b> menu, point to <b>Get External Data</b>, and then click <b>Import</b>. Specify the name and location of the previous version database.<br><br></li>
<li>
In the <b>Import Objects</b> dialog box, for each tab except the <b>Tables</b> tab, click the tab and then click <b>Select All</b>. Click <b>OK</b> to convert and import application objects. This creates your front-end database.<br><br></li>
<li>
On the <b>File</b> menu, point to <b>Get External Data</b>, and then click <b>Link Tables</b>. Specify the name and location of the previous version database.<br><br></li>
<li>
In the <b>Link Tables</b> dialog box, click the <b>Tables</b> tab, and then click <b>Select All</b>. Click <b>OK</b> to link the tables in the back-end database.<br><br></li>
</ol>
</BODY>
</HTML>
