<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIInputEvent</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIInputEvent.htm#com_000300120c010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIInputEvent.htm#com_000300120c020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIInputEvent.htm#com_000300120c030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIFocusEvent.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_uevt.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIItemAdapter.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui.event</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIInputEvent</H2>
<PRE><FONT FACE="Courier" SIZE="2">public abstract class UIInputEvent extends <A HREF="UIEvent.htm">UIEvent</A>
{
  // Fields
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030001">ALT_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030002">BUTTON1_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030003">BUTTON2_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030004">BUTTON3_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030005">CTRL_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030006">META_MASK</A>;
  public static final int <A HREF="UIInputEvent.htm#com_000300120c030007">SHIFT_MASK</A>;

  // Constructors
  public <A HREF="UIInputEvent.htm#com_000300120c010100">UIInputEvent</A>(IUIComponent source,int id,long when,
        int modifiers);

  // Methods
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020100">consume</A>();
  public int <A HREF="UIInputEvent.htm#com_000300120c020200">getModifiers</A>();
  public long <A HREF="UIInputEvent.htm#com_000300120c020300">getWhen</A>();
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020400">isAltDown</A>();
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020500">isConsumed</A>();
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020600">isControlDown</A>();
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020700">isMetaDown</A>();
  public boolean <A HREF="UIInputEvent.htm#com_000300120c020800">isShiftDown</A>();
}
</FONT></PRE>
<P>This is the root event class for all component-level input events. Input events are delivered to listeners before they are processed normally by the source where they originated. This allows listeners and component subclasses to consume the event so that the source will not process them in their default manner. All of the constant values defined match the AWT event definitions. 
<P><B>UIInputEvent</B> also allows a <B>Listener</B> to "consume" an input (key or mouse) event before passing it to the underlying <A HREF="UIComponent.htm">UIComponent</A>. 

<P>Also see <A HREF="UIInputEvent.htm#com_000300120c020100">consume</A>, <B>UIinputEvent</B>
<PRE><FONT FACE="Courier" SIZE="2"><B>EventObject</B>
  |
  +--<A HREF="UIBaseEvent.htm">UIBaseEvent</A>
    |
    +--<A HREF="UIEvent.htm">UIEvent</A>
      |
      +--<B>UIInputEvent</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300120c010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300120c010100">UIInputEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIInputEvent(IUIComponent source,int id,long when, int modifiers);
</FONT></PRE>
<P><P>Creates a <A HREF="UIInputEvent.htm">UIInputEvent</A> object with the specified source <A HREF="IUIComponent.htm">IUIComponent</A>, modifiers, and type. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object where the event originated. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>when</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The time the event occurred. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>modifiers</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The modifier keys down while event occurred. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300120c020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300120c020100">consume</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean consume();
</FONT></PRE>
<P><P>Consumes the input event so its not processed by the underlying <A HREF="IUIComponent.htm">IUIComponent</A>. This is implemented for the <A HREF="UIEdit.htm">UIEdit</A> control. Key and mouse events may also be consumed by other <A HREF="def_ui.htm">com.ms.ui</A> components, but not always consistently. This is because some components pass events to other, underlying components, which handle the event. 

<P><B>Return Value:</B> <P>Returns true if the event is not passed to the underlying component. 

<P><B>See Also:</B> <A HREF="UIInputEvent.htm#com_000300120c020500">isConsumed</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020200">getModifiers</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getModifiers();
</FONT></PRE>
<P><P>Retrieves the modifiers flag of the event. 

<P><B>Return Value:</B> <P>Returns the modifiers flag of the event. This can be one or a combination of the following. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030007">SHIFT_MASK</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030005">CTRL_MASK</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030006">META_MASK</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030001">ALT_MASK</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030002">BUTTON1_MASK</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030003">BUTTON2_MASK</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIInputEvent.htm#com_000300120c030004">BUTTON3_MASK</A>
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020300">getWhen</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public long getWhen();
</FONT></PRE>
<P><P>Retrieves the timestamp of the event. 

<P><B>Return Value:</B> <P>Returns the timestamp of the event. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020400">isAltDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isAltDown();
</FONT></PRE>
<P><P>Returns whether the ALT key is pressed for this event. 

<P><B>Return Value:</B> <P>Returns true if the ALT key is pressed. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020500">isConsumed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isConsumed();
</FONT></PRE>
<P><P>Determines the current consume state of the input event. 

<P><B>Return Value:</B> <P>Returns true if the event is not passed to the underlying component; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIInputEvent.htm#com_000300120c020100">consume</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020600">isControlDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isControlDown();
</FONT></PRE>
<P><P>Returns whether the CTRL key is pressed for this event. 

<P><B>Return Value:</B> <P>Returns true if the CTRL key is pressed. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020700">isMetaDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isMetaDown();
</FONT></PRE>
<P><P>Returns whether the Meta modifier is pressed for this event. 

<P><B>Return Value:</B> <P>Returns true if the Meta modifier is pressed. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300120c020800">isShiftDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isShiftDown();
</FONT></PRE>
<P><P>Determines whether the SHIFT key is pressed for this event. 

<P><B>Return Value:</B> <P>Returns true if the SHIFT key is pressed. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300120c030000">Fields</A></H3><DL>
<DT><B><A NAME="com_000300120c030001">ALT_MASK</A></B>
</DT><DD>The ALT key modifier constant. 

</DD><DT><B><A NAME="com_000300120c030002">BUTTON1_MASK</A></B>
</DT><DD>The left mouse button modifier constant. 

</DD><DT><B><A NAME="com_000300120c030003">BUTTON2_MASK</A></B>
</DT><DD>The right mouse button modifier constant. 

</DD><DT><B><A NAME="com_000300120c030004">BUTTON3_MASK</A></B>
</DT><DD>The third mouse button modifier constant. 

</DD><DT><B><A NAME="com_000300120c030005">CTRL_MASK</A></B>
</DT><DD>The CONTROL key modifier constant. 

</DD><DT><B><A NAME="com_000300120c030006">META_MASK</A></B>
</DT><DD>The Meta key modifier constant. 

</DD><DT><B><A NAME="com_000300120c030007">SHIFT_MASK</A></B>
</DT><DD>The SHIFT key modifier constant. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
