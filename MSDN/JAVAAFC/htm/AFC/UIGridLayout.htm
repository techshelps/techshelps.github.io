<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIGridLayout</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIGridLayout.htm#com_0003001153010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIGridLayout.htm#com_0003001153020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIGridBagLayout.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIGroup.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIGridLayout</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIGridLayout extends <A HREF="UILayoutManager.htm">UILayoutManager</A>
{
  // Constructors
  public <A HREF="UIGridLayout.htm#com_0003001153010100">UIGridLayout</A>(int rows, int cols);
  public <A HREF="UIGridLayout.htm#com_0003001153010200">UIGridLayout</A>(int rows, int cols, int hgap, int vgap);

  // Methods
  public boolean <A HREF="UIGridLayout.htm#com_0003001153020100">continueInvalidate</A>(IUIContainer parent,
        IUIComponent check);
  public Dimension <A HREF="UIGridLayout.htm#com_0003001153020200">getMinimumSize</A>(IUIContainer parent);
  public Dimension <A HREF="UIGridLayout.htm#com_0003001153020300">getPreferredSize</A>(IUIContainer parent);
  public boolean <A HREF="UIGridLayout.htm#com_0003001153020400">isOverlapping</A>();
  public void <A HREF="UIGridLayout.htm#com_0003001153020500">layout</A>(IUIContainer parent, Rectangle bounds);
  public IUIComponent <A HREF="UIGridLayout.htm#com_0003001153020600">navigate</A>(IUIContainer parent,
        IUIComponent comp, int dir, boolean keyable);
}
</FONT></PRE>
<P>This class implements an extended grid layout manager. <B>UIGridLayout</B> lays out components in a two-dimensional grid, similar to the AWT <B>GridLayout</B> class. The container is divided into rows and columns, where each component has the same width and height. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UILayoutManager.htm">UILayoutManager</A>
  |
  +--<B>UIGridLayout</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001153010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001153010100">UIGridLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIGridLayout(int rows, int cols);
</FONT></PRE>
<P><P>Creates a grid layout manager using the specified number of rows and columns. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rows</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of rows in the grid. If zero, the grid consists of one column, and the number of rows is determined from the number of components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cols</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns in the grid. If zero, the grid consists of one row, and the number of columns is determined from the number of components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the horizontal and vertical gaps (used for spacing between components) are 0 pixels each. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153010200">UIGridLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIGridLayout(int rows, int cols, int hgap, int vgap);
</FONT></PRE>
<P><P>Creates a grid layout manager using the specified number of rows and columns, and the specified horizontal and vertical gaps. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rows</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of rows in the grid. If zero, the grid consists of one column, and the number of rows is determined from the number of components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cols</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns in the grid. If zero, the grid consists of one row, and the number of columns is determined from the number of components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hgap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels used for horizontal spacing between components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vgap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels used for vertical spacing between components. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001153020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001153020100">continueInvalidate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean continueInvalidate(IUIContainer parent, IUIComponent check);
</FONT></PRE>
<P><P>Determines whether the container should be invalidated when the specified child component is invalidated. 

<P><B>Return Value:</B> <P>Returns false, indicating the container should not be invalidated. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>check</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being invalidated. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010300">continueInvalidate(IUIContainer,IUIComponent)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153020200">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>getMinimumSize</B> method. The width of the returned <B>Dimension</B> object is the largest of the widths of each row. The width of each row is the sum of the minimum widths of the components in the row, plus the horizontal gaps around components. 
<P>Similarly, the returned <B>Dimension</B> object's height is the largest of the heights of each column. The height of each column is the sum of the minimum heights of the components in the column, plus the vertical gaps around components. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010800">getMinimumSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIGridLayout.htm#com_0003001153020300">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153020300">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>getPreferredSize</B> method. The width of the returned <B>Dimension</B> object is the largest of the widths of each row. The width of each row is the sum of the preferred widths of the components in the row, plus the horizontal gaps around components. 
<P>Similarly, the returned <B>Dimension</B> object's height is the largest of the heights of each column. The height of each column is the sum of the preferred heights of the components in the column, plus the vertical gaps around components. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010900">getPreferredSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIGridLayout.htm#com_0003001153020200">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153020400">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>Determines if the layout manager lays out its children so that they overlap either completely or partially; otherwise, false. Returning false also means that only the sibling floater window, if one exists, needs to be clipped by the manager. 

<P><B>Return Value:</B> <P>Returns true if the children overlap; otherwise, returns false. (The default is true.) 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010d00">isOverlapping()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153020500">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout(IUIContainer parent, Rectangle bounds);
</FONT></PRE>
<P><P>Lays out the components in the specified container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container being laid out. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle in which to lay out the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>layout</B> method. <B>layout</B> divides the space in the bounding rectangle equally into rows and columns. This grid is then filled by row. Each component has the same width and height, and is separated by the horizontal and vertical gaps. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010f00">layout(IUIContainer,Rectangle)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001153020600">navigate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent navigate(IUIContainer parent, IUIComponent comp,
        int dir, boolean keyable);
</FONT></PRE>
<P><P>Navigates from the specified component to another component in the specified direction. 
<P><B>Return Value:</B> <P>Returns the component navigated to (if a component in the specified direction exists); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container where the navigation is occurring. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to navigate from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the <B>NAVDIR</B> values defined in the <A HREF="IUIAccessible.htm">IUIAccessible</A> interface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, only components that are able to receive keyboard input can be navigated to; otherwise, all components can be navigated to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method handles keyboard navigation in the container. When a component in the container has focus and a key is pressed, <B>navigate</B> is called to move focus to another item in the container. 
<P>The following table shows the keys that have corresponding <A HREF="IUIAccessible.htm">IUIAccessible</A> directions. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Key
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUIAccessible direction
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b02000c">NAVDIR_UP</A>, <A HREF="IUIAccessible.htm#com_000300118b020005">NAVDIR_DOWN</A>, <A HREF="IUIAccessible.htm#com_000300118b020008">NAVDIR_LEFT</A>, and <A HREF="IUIAccessible.htm#com_000300118b02000b">NAVDIR_RIGHT</A>, respectively. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HOME and END
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b020006">NAVDIR_FIRST</A> and <A HREF="IUIAccessible.htm#com_000300118b020007">NAVDIR_LAST</A>, respectively. 
</FONT></TD>
</TR>
</TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011000">navigate(IUIContainer,IUIComponent,int,boolean)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
