<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIContainer</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIContainer.htm#com_0003001143010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIContainer.htm#com_0003001143020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIComponent.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIContextMenu.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIContainer</H2>
<PRE><FONT FACE="Courier" SIZE="2">abstract public class UIContainer extends <A HREF="UIComponent.htm">UIComponent</A>
             implements <A HREF="IUIContainer.htm">IUIContainer</A>
{
  // Constructors
  public <A HREF="UIContainer.htm#com_0003001143010100">UIContainer</A>();
  public <A HREF="UIContainer.htm#com_0003001143010200">UIContainer</A>(int edge);

  // Methods
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020100">add</A>(IUIComponent comp);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020200">add</A>(IUIComponent comp, int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020300">add</A>(IUIComponent comp, Object constraints);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020400">add</A>(IUIComponent comp, Object constraints,
        int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020500">add</A>(String name, IUIComponent comp);
  public void <A HREF="UIContainer.htm#com_0003001143020600">addContainerListener</A>(IUIContainerListener l);
  public void <A HREF="UIContainer.htm#com_0003001143020700">addFocusListener</A>(IUIFocusListener l);
  public void <A HREF="UIContainer.htm#com_0003001143020800">addKeyListener</A>(IUIKeyListener l);
  public void <A HREF="UIContainer.htm#com_0003001143020900">addMouseListener</A>(IUIMouseListener l);
  public void <A HREF="UIContainer.htm#com_0003001143020a00">addMouseMotionListener</A>(IUIMouseMotionListener l);
  public void <A HREF="UIContainer.htm#com_0003001143020b00">addNotify</A>();
  public void <A HREF="UIContainer.htm#com_0003001143020c00">adjustLayoutSize</A>(IUIComponent comp,
        Dimension oldSize, Dimension newSize);
  public boolean <A HREF="UIContainer.htm#com_0003001143020d00">continueInvalidate</A>(IUIComponent comp);
  public boolean <A HREF="UIContainer.htm#com_0003001143020e00">ensureVisible</A>(int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143020f00">getChild</A>(int index);
  public Rectangle <A HREF="UIContainer.htm#com_0003001143021000">getChildBounds</A>(IUIComponent child);
  public Rectangle <A HREF="UIContainer.htm#com_0003001143021100">getChildBounds</A>(int index);
  public int <A HREF="UIContainer.htm#com_0003001143021200">getChildCount</A>();
  public int <A HREF="UIContainer.htm#com_0003001143021300">getChildIndex</A>(IUIComponent comp);
  public Point <A HREF="UIContainer.htm#com_0003001143021400">getChildLocation</A>(IUIComponent child);
  public Point <A HREF="UIContainer.htm#com_0003001143021500">getChildLocation</A>(int index);
  public Dimension <A HREF="UIContainer.htm#com_0003001143021600">getChildSize</A>(IUIComponent child);
  public Dimension <A HREF="UIContainer.htm#com_0003001143021700">getChildSize</A>(int index);
  public Rectangle <A HREF="UIContainer.htm#com_0003001143021800">getClientRect</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143021900">getComponent</A>(int x, int y);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143021a00">getComponent</A>(Point point);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143021b00">getComponent</A>(int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143021c00">getComponent</A>(IUIComponent comp);
  public int <A HREF="UIContainer.htm#com_0003001143021d00">getComponentCount</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143021e00">getComponentFromID</A>(int id);
  public int <A HREF="UIContainer.htm#com_0003001143021f00">getComponentIndex</A>(IUIComponent comp);
  public IUIComponent[] <A HREF="UIContainer.htm#com_0003001143022000">getComponents</A>();
  public int <A HREF="UIContainer.htm#com_0003001143022100">getEdge</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143022200">getFloater</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143022300">getFocusComponent</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143022400">getHeader</A>();
  public int <A HREF="UIContainer.htm#com_0003001143022500">getID</A>();
  public Insets <A HREF="UIContainer.htm#com_0003001143022600">getInsets</A>();
  public IUILayoutManager <A HREF="UIContainer.htm#com_0003001143022700">getLayout</A>();
  public Dimension <A HREF="UIContainer.htm#com_0003001143022800">getMinimumSize</A>();
  public String <A HREF="UIContainer.htm#com_0003001143022900">getName</A>();
  public Dimension <A HREF="UIContainer.htm#com_0003001143022a00">getPreferredSize</A>(Dimension size);
  public Dimension <A HREF="UIContainer.htm#com_0003001143022b00">getPreferredSize</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143022c00">gotFocus</A>(Event e, Object o);
  public boolean <A HREF="UIContainer.htm#com_0003001143022d00">invalidateAll</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143022e00">isHeightRelative</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143022f00">isOverlapping</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143023000">isWidthRelative</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143023100">keyDown</A>(Event e, int key);
  public void <A HREF="UIContainer.htm#com_0003001143023200">layout</A>();
  public boolean <A HREF="UIContainer.htm#com_0003001143023300">lostFocus</A>(Event e, Object o);
  public boolean <A HREF="UIContainer.htm#com_0003001143023400">mouseEnter</A>(Event e, int x, int y);
  public boolean <A HREF="UIContainer.htm#com_0003001143023500">mouseExit</A>(Event e, int x, int y);
  public boolean <A HREF="UIContainer.htm#com_0003001143023600">move</A>(IUIComponent comp, IUIComponent before);
  public boolean <A HREF="UIContainer.htm#com_0003001143023700">move</A>(int from, int to);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143023800">navigate</A>(IUIComponent comp, int direction,
        boolean keyable);
  public void <A HREF="UIContainer.htm#com_0003001143023900">notifyEvent</A>(UINotifyEvent e);
  public void <A HREF="UIContainer.htm#com_0003001143023a00">paint</A>(FxGraphics g);
  public void <A HREF="UIContainer.htm#com_0003001143023b00">paintAll</A>(FxGraphics g);
  public void <A HREF="UIContainer.htm#com_0003001143023c00">paintComponents</A>(FxGraphics g);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143023d00">passFocus</A>(int dir);
  public void <A HREF="UIContainer.htm#com_0003001143023e00">printAll</A>(FxGraphics g);
  public void <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>(int index);
  public void <A HREF="UIContainer.htm#com_0003001143024000">remove</A>(IUIComponent comp);
  public void <A HREF="UIContainer.htm#com_0003001143024100">removeAll</A>();
  public void <A HREF="UIContainer.htm#com_0003001143024200">removeAllChildren</A>();
  public void <A HREF="UIContainer.htm#com_0003001143024300">removeContainerListener</A>(IUIContainerListener l);
  public void <A HREF="UIContainer.htm#com_0003001143024400">removeFocusListener</A>(IUIFocusListener l);
  public void <A HREF="UIContainer.htm#com_0003001143024500">removeKeyListener</A>(IUIKeyListener l);
  public void <A HREF="UIContainer.htm#com_0003001143024600">removeMouseListener</A>(IUIMouseListener l);
  public void <A HREF="UIContainer.htm#com_0003001143024700">removeMouseMotionListener</A>(IUIMouseMotionListener l);
  public void <A HREF="UIContainer.htm#com_0003001143024800">removeNotify</A>();
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143024900">replace</A>(IUIComponent comp, IUIComponent old);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143024a00">replace</A>(IUIComponent comp, int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143024b00">replace</A>(IUIComponent comp,
        Object constraints, IUIComponent old);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143024c00">replace</A>(IUIComponent comp,
        Object constraints, int index);
  public IUIComponent <A HREF="UIContainer.htm#com_0003001143024d00">replace</A>(IUIComponent comp,
        Object constraints);
  public void <A HREF="UIContainer.htm#com_0003001143024e00">setChildBounds</A>(IUIComponent child, int x, int y,
        int width, int height);
  public void <A HREF="UIContainer.htm#com_0003001143024f00">setChildBounds</A>(IUIComponent child, Rectangle rect);
  public void <A HREF="UIContainer.htm#com_0003001143025000">setChildBounds</A>(int index, int x, int y, int width,
        int height);
  public void <A HREF="UIContainer.htm#com_0003001143025100">setChildBounds</A>(int index, Rectangle rect);
  public void <A HREF="UIContainer.htm#com_0003001143025200">setChildLocation</A>(IUIComponent child, int x, int y);
  public void <A HREF="UIContainer.htm#com_0003001143025300">setChildLocation</A>(IUIComponent child, Point point);
  public void <A HREF="UIContainer.htm#com_0003001143025400">setChildLocation</A>(int index, int x, int y);
  public void <A HREF="UIContainer.htm#com_0003001143025500">setChildLocation</A>(int index, Point point);
  public void <A HREF="UIContainer.htm#com_0003001143025600">setChildSize</A>(IUIComponent child, int width,
        int height);
  public void <A HREF="UIContainer.htm#com_0003001143025700">setChildSize</A>(IUIComponent child, Dimension size);
  public void <A HREF="UIContainer.htm#com_0003001143025800">setChildSize</A>(int index, int width, int height);
  public void <A HREF="UIContainer.htm#com_0003001143025900">setChildSize</A>(int index, Dimension size);
  public void <A HREF="UIContainer.htm#com_0003001143025a00">setComponent</A>(int index, IUIComponent comp);
  public void <A HREF="UIContainer.htm#com_0003001143025b00">setEdge</A>(int edge);
  public void <A HREF="UIContainer.htm#com_0003001143025c00">setHeader</A>(IUIComponent header);
  public void <A HREF="UIContainer.htm#com_0003001143025d00">setID</A>(int id);
  public void <A HREF="UIContainer.htm#com_0003001143025e00">setLayout</A>(IUILayoutManager lm);
  public void <A HREF="UIContainer.htm#com_0003001143025f00">setLocation</A>(int x, int y);
  public void <A HREF="UIContainer.htm#com_0003001143026000">setName</A>(String name);
  public void <A HREF="UIContainer.htm#com_0003001143026100">setSize</A>(int width, int height);
  public void <A HREF="UIContainer.htm#com_0003001143026200">update</A>(FxGraphics g);
}
</FONT></PRE>
<P>This class implements a stateless container. <B>UIContainer</B> is the base class for all containers in AFC, and allows you to create lightweight controls without the overhead of managing an object's states. Although most containers in AFC are not stateless, <B>UIContainer</B> provides the option of creating a container that has no states. 
<P><B>Note</B>  AFC extends <A HREF="UIStateContainer.htm">UIStateContainer</A> from <B>UIContainer</B> to implement a container having states. 
<P>A container in AFC is a <A HREF="UIComponent.htm">UIComponent</A> object that holds a collection of other <B>UIComponent</B> objects. Some containers hold multiple child components and an optional header component. Others contain only a header component. Header components are used to represent the container itself; for example, the text displayed on a button is used as its header component. 
<P><B>UIContainer</B> provides methods that operate either on the entire collection of components, or on the collection of child components that excludes the header. For example, <A HREF="UIContainer.htm#com_0003001143021d00">getComponentCount</A> returns the total number of child and header components in the container, while <A HREF="UIContainer.htm#com_0003001143021200">getChildCount</A> strictly returns the number of child components, excluding the header component. 
<P><B>UIContainer</B> implements the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<B>UIContainer</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001143010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001143010100">UIContainer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIContainer();
</FONT></PRE>
<P><P>Creates a stateless container with no edge. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143010200">UIContainer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIContainer(int edge);
</FONT></PRE>
<P><P>Creates a stateless container with the specified edge. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>edge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the container's edge. Edge styles can be one of the following values: 
<UL><LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010004">IFxGraphicsConstants.BDR_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010007">IFxGraphicsConstants.BDR_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010003">IFxGraphicsConstants.BDR_OUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010002">IFxGraphicsConstants.BDR_INNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010006">IFxGraphicsConstants.BDR_RAISEDOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010005">IFxGraphicsConstants.BDR_RAISEDINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010009">IFxGraphicsConstants.BDR_SUNKENOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010008">IFxGraphicsConstants.BDR_SUNKENINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010001">IFxGraphicsConstants.BDR_FLAT</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010021">IFxGraphicsConstants.EDGE_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010022">IFxGraphicsConstants.EDGE_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010020">IFxGraphicsConstants.EDGE_ETCHED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_000300082401001f">IFxGraphicsConstants.EDGE_BUMP</A> 
<LI>0 (No edge style) 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the <I>edge</I> parameter is ignored. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001143020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001143020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified component to the end of the container. 
<P><B>Return Value:</B> <P>Returns the component that was added if successful; otherwise, returns null. (The default return value is null.) 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>add</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers that override this method should return the component that was added, if successful, or null otherwise. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020200">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, int index);
</FONT></PRE>
<P><P>Adds the specified component to the container at the specified index. 
<P><B>Return Value:</B> <P>Returns the component that was added if successful; otherwise, returns null. (The default return value is null.) 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to insert the component. If the container has a header component, the header is at index 0, and the first child begins at index 1; otherwise, the first child begins at index 0. To add the component at the end of the container, pass -1 as the index. (For more information about header components, see the <A HREF="UIContainer.htm">UIContainer</A> overview.) 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>add</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers that override this method should return the component that was added, if successful, or null otherwise. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020300">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints);
</FONT></PRE>
<P><P>Adds the specified component to the container, according to the specified constraints. 
<P><B>Return Value:</B> <P>Returns the component that was added if successful; otherwise, returns null. (The default return value is null.) 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints, which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>add</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers that override this method should return the component that was added, if successful, or null otherwise. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020400">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints, int index);
</FONT></PRE>
<P><P>Adds the specified component to the container, according to the specified constraints and index. 
<P><B>Return Value:</B> <P>Returns the component that was added if successful; otherwise, returns null. (The default return value is null.) 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints, which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to insert the component. If the container has a header component, the header is at index 0, and the first child begins at index 1; otherwise, the first child begins at index 0. To add the component at the end of the container, pass -1 as the index. (For more information about header components, see the <A HREF="UIContainer.htm">UIContainer</A> overview.) 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>add</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers that override this method should return the component that was added, if successful, or null otherwise. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020500">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(String name, IUIComponent comp);
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <B>add(IUIComponent comp, Object constraints)</B>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020600">addContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addContainerListener(IUIContainerListener l);
</FONT></PRE>
<P><P>Adds the specified container listener. The listener receives all container events generated for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>addContainerListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024300">removeContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020700">addFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Adds the specified focus listener. The listener receives all focus events generated for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>addFocusListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024400">removeFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020800">addKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Adds the specified key listener. The listener receives all key events generated for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>addKeyListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024500">removeKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020900">addMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Adds the specified mouse listener. The listener receives all mouse events generated for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>addMouseListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024600">removeMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020a00">addMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMouseMotionListener(IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Adds the specified mouse motion listener. The listener receives all mouse motion events generated for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>addMouseMotionListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024700">removeMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020b00">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method invokes <B>addNotify</B> for each component in the container.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142010600">addNotify()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024800">removeNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020c00">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustLayoutSize(IUIComponent comp, Dimension oldSize,
        Dimension newSize);
</FONT></PRE>
<P><P>Adjusts the layout size of the specified component. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being sized. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>adjustLayoutSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. <B>adjustLayoutSize</B> is automatically invoked when the specified component's size has changed. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020d00">continueInvalidate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean continueInvalidate(IUIComponent comp);
</FONT></PRE>
<P><P>Determines whether the container should be invalidated when the specified child component is invalidated. 
<P><B>Return Value:</B> <P>Returns true if the container should be invalidated; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being invalidated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>continueInvalidate</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020e00">ensureVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean ensureVisible(int index);
</FONT></PRE>
<P><P>Brings the component at the specified index into view. 
<P><B>Return Value:</B> <P>Returns true if any window was moved or resized to make the specified component visible; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be made visible in the container. If the container has a header component, the header is at index 0, and the first child begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>ensureVisible</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143020f00">getChild</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getChild(int index);
</FONT></PRE>
<P><P>Retrieves the child component at the specified index. This method cannot retrieve the header component. 
<P><B>Return Value:</B> <P>Returns null, indicating the specified component cannot be found. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be retrieved. Regardless of whether the container has a header component, pass 0 to indicate the first child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChild</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021900">getComponent</A>, <A HREF="UIContainer.htm#com_0003001143021200">getChildCount</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021000">getChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getChildBounds(IUIComponent child);
</FONT></PRE>
<P><P>Retrieves the bounding rectangle of the specified component. 
<P><B>Return Value:</B> <P>Returns the result of calling <B>getChildBounds</B> with the <I>index</I> parameter. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024e00">setChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021100">getChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getChildBounds(int index);
</FONT></PRE>
<P><P>Retrieves the bounding rectangle of the component at the specified index. 
<P><B>Return Value:</B> <P>Returns null, indicating the bounding rectangle cannot be retrieved. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, then the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024e00">setChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021200">getChildCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getChildCount();
</FONT></PRE>
<P><P>Retrieves the number of child components in the container, excluding the header component. 
<P><B>Return Value:</B> <P>Returns the number of components or 0, indicating that the container has no child components. 

<P><B>Remarks:</B> <P>This method implements <B>getChildCount</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021d00">getComponentCount</A>, <A HREF="UIContainer.htm#com_0003001143020f00">getChild</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021300">getChildIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getChildIndex(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the index of the specified child component. 
<P><B>Return Value:</B> <P>Returns the zero-based index of the component (if the component belongs to the container); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to retrieve the index for. This component must be a child component and not the header component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildIndex</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Regardless of whether the container has a header component, index 0 indicates the first child component. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021f00">getComponentIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021400">getChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getChildLocation(IUIComponent child);
</FONT></PRE>
<P><P>Retrieves the location of the specified component. 
<P><B>Return Value:</B> <P>Returns the result of calling <B>getChildLocation</B> with the <I>index</I> parameter. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025200">setChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021500">getChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getChildLocation(int index);
</FONT></PRE>
<P><P>Retrieves the location of the component at the specified index. 
<P><B>Return Value:</B> <P>Returns null, indicating the location cannot be retrieved. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025200">setChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021600">getChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getChildSize(IUIComponent child);
</FONT></PRE>
<P><P>Retrieves the size of the specified component. 
<P><B>Return Value:</B> <P>Returns the result of calling <B>getChildSize</B> with the <I>index</I> parameter. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025600">setChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021700">getChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getChildSize(int index);
</FONT></PRE>
<P><P>Retrieves the size of the component at the specified index. 
<P><B>Return Value:</B> <P>Returns null, indicating the size cannot be retrieved. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025600">setChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021800">getClientRect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getClientRect();
</FONT></PRE>
<P><P>Retrieves the client rectangle of the container. The client rectangle is the area that remains after the container's bounding rectangle is reduced by the size of its insets. 
<P><B>Return Value:</B> <P>Returns the bounding rectangle of the container's client area, in the container's coordinate space. 

<P><B>Remarks:</B> <P>This method implements <B>getClientRect</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. The height of the client rectangle is the height of the container minus its top and bottom insets. Similarly, the width of the client rectangle is the width of the container minus its left and right insets. (The width and height are given in pixels.) 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021900">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(int x, int y);
</FONT></PRE>
<P><P>Retrieves the component that contains the point identified by the specified coordinates. The header component or any child component can be retrieved. 
<P><B>Return Value:</B> <P>Returns the component containing the point (if the point lies within the container); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the point, in the container's coordinate space. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the point, in the container's coordinate space. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the point lies within the container's boundaries, this method enumerates the container's child components to find the first component containing the point. If no child contains the point, the container itself is returned. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142011400">getComponent(int,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021a00">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(Point point);
</FONT></PRE>
<P><P>Retrieves the component that contains the specified point. The header component or any child component can be retrieved. 
<P><B>Return Value:</B> <P>Returns the component containing the point (if the point lies within the container); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point, whose coordinates are given in the container's coordinate space. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the point lies within the container's boundaries, this method enumerates the container's child components to find the first component containing the point. If no child contains the point, the container itself is returned. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142011500">getComponent(Point)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021b00">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(int index);
</FONT></PRE>
<P><P>Retrieves the component that lies at the specified index. The header component or any child component can be retrieved. 
<P><B>Return Value:</B> <P>Returns null, indicating no component was found at the specified index. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be retrieved. If the container has a header component, the header is at index 0, and the first child begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getComponent</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021c00">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the component in the container that is the ancestor of the specified component. The header component or any child component can be retrieved. 
<P><B>Return Value:</B> <P>Returns the container's immediate child or header component that is the ancestor of the specified component. If the specified component is itself an immediate child (or header) of the container, this component is returned. If the container is not an ancestor of the specified component, null is returned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to find the ancestor for. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getComponent</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021d00">getComponentCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getComponentCount();
</FONT></PRE>
<P><P>Retrieves the number of components in the container, including the header component. 
<P><B>Return Value:</B> <P>Returns the number of components or 0, indicating that the container has no components. 

<P><B>Remarks:</B> <P>This method implements <B>getComponentCount</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021200">getChildCount</A>, <A HREF="UIContainer.htm#com_0003001143021900">getComponent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021e00">getComponentFromID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponentFromID(int id);
</FONT></PRE>
<P><P>Retrieves the component with the specified identifier. 

<P><B>Return Value:</B> <P>Returns the component; returns null if no component with the specified identifier was found. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The ID of the component to be retrieved. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025d00">setID</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143021f00">getComponentIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getComponentIndex(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the index of the specified component. 
<P><B>Return Value:</B> <P>Returns the zero-based index of the component (if the component belongs to the container); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to retrieve the index for. This component can be the header component or any child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getComponentIndex</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. If the container has a header component, the header is at index 0, and the first child begins at index 1; otherwise, the first child begins at index 0. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021300">getChildIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022000">getComponents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent[] getComponents();
</FONT></PRE>
<P><P>Retrieves all components in the container. 
<P><B>Return Value:</B> <P>Returns an array of the container's components. If the container has a header, the first item in the array is the header component; otherwise, the first item is the first child component. 

<P><B>Remarks:</B> <P>This method implements <B>getComponents</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022100">getEdge</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getEdge();
</FONT></PRE>
<P><P>Retrieves the style of the container's edge. 
<P><B>Return Value:</B> <P>Returns 0, indicating the container has no edge style. 

<P><B>Remarks:</B> <P>This method implements <B>getEdge</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025b00">setEdge</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022200">getFloater</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getFloater();
</FONT></PRE>
<P><P>Retrieves the floating component in this container, if there is one. The floating component is the component that is superceding the standard z-order of the container's children by being first in the z-order. This is most commonly used when a component is being dragged across the screen, such as a column header or a scroll thumb. 

<P><B>Return Value:</B> <P>Returns the current floating component; returns null if there is none. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022300">getFocusComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getFocusComponent();
</FONT></PRE>
<P><P>Retrieves the component of the container that currently has input focus. 
<P><B>Return Value:</B> <P>Returns the component that either itself has focus or is the ancestor of the component that has focus. If no descendant of the container currently has focus, null is returned. 

<P><B>Remarks:</B> <P>This method implements <B>getFocusComponent</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. The returned component is either a direct child of the container or the header component. For example, the container has a child component that is itself a container and a component within this child container has focus. Then, <B>getFocusComponent</B> returns the child container. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022400">getHeader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getHeader();
</FONT></PRE>
<P><P>Retrieves the container's header component. 
<P><B>Return Value:</B> <P>Returns null, indicating the container has no header. 

<P><B>Remarks:</B> <P>This method implements <B>getHeader</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. For more information about header components, see the <A HREF="UIContainer.htm">UIContainer</A> overview.
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025c00">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022500">getID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getID();
</FONT></PRE>
<P><P>Retrieves the container's identifier. 

<P><B>Return Value:</B> <P>Returns the integer associated with the container; returns null if the container has no identifier. 

<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142012100">getID()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025d00">setID</A>, <A HREF="UIContainer.htm#com_0003001143022900">getName</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022600">getInsets</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Insets getInsets();
</FONT></PRE>
<P><P>Retrieves the container's insets (in pixels), which identify the nonclient area of the container. 
<P><B>Return Value:</B> <P>Returns an <B>Insets</B> object containing the container's insets. 

<P><B>Remarks:</B> <P>This method implements <B>getInsets</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. The container's insets are based on the style of its edges. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022100">getEdge</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022700">getLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUILayoutManager getLayout();
</FONT></PRE>
<P><P>Retrieves the layout manager of the container. 
<P><B>Return Value:</B> <P>Returns null, indicating the container has no layout manager. 

<P><B>Remarks:</B> <P>This method implements <B>getLayout</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143025e00">setLayout</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022800">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize();
</FONT></PRE>
<P><P>Retrieves the minimum size of the container. The minimum size specifies the smallest dimensions (in pixels) that will allow the container and its components to be displayed. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum size. 

<P><B>Remarks:</B> <P>If the container has a layout manager, the layout manager's <B>getMinimumSize</B> method is called to determine the container's minimum size. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142012800">getMinimumSize()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022a00">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022900">getName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getName();
</FONT></PRE>
<P><P>Retrieves the container's name. 

<P><B>Return Value:</B> <P>Returns the <B>String</B> that displays the container's associated name; returns null if the container has no name. 

<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142012900">getName()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143026000">setName</A>, <A HREF="UIContainer.htm#com_0003001143022500">getID</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022a00">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(Dimension size);
</FONT></PRE>
<P><P>Retrieves the preferred layout size of the container (in pixels). The <B>Dimension</B> parameter that's passed is used to force the returned preferred size to be larger on a particular axis. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object with a width and height of 0 pixels. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Dimension</B> to coerce the preferred size to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>getPreferredSize</B> in the <A HREF="IUIComponent.htm">IUIComponent</A> interface. Components should override this method if their size is dependent upon a possible size constraint.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142012d00">getPreferredSize(Dimension)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022800">getMinimumSize</A>, <A HREF="UIComponent.htm#com_0003001142012700">getMaximumSize</A>, <A HREF="UIComponent.htm#com_0003001142013000">getSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022b00">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred dimensions (in pixels) for displaying the container and its components. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><B>Remarks:</B> <P>If the container has a layout manager, the layout manager's <B>getPreferredSize</B> method is called to determine the container's preferred size. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142012c00">getPreferredSize()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022800">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022c00">gotFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean gotFocus(Event e, Object o);
</FONT></PRE>
<P><P>Responds to the control receiving input focus. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event (typically null). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIComponent.htm#com_0003001142013500">UIComponent.gotFocus</A>.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142013500">gotFocus(Event,Object)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022d00">invalidateAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean invalidateAll();
</FONT></PRE>
<P><P>Invalidates the container and all its components. 

<P><B>Return Value:</B> <P>Returns true if the container and its children were invalidated; otherwise, returns false. 

<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142013900">invalidateAll()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022e00">isHeightRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHeightRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the height of the container to lay out its children. 

<P><B>Return Value:</B> <P>Returns true if this layout manager uses the container's height to lay out the children; otherwise, returns false. (The default is true.) Returning false also means that the container's <A HREF="UIContainer.htm#com_0003001143023200">layout</A> method doesn't need to be called on a horizontal resizing. 

<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142013e00">isHeightRelative()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023000">isWidthRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143022f00">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>Determines if this layout manager lays out its children so they overlap either completely or partially. 

<P><B>Return Value:</B> <P>Returns true if the children overlap; otherwise, returns false. (The default is true.) Returning false also means that only the sibling floater window, if one exists, needs to be clipped by the manager. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023000">isWidthRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isWidthRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the width of the container to lay out its children. 

<P><B>Return Value:</B> <P>Returns true if this layout manager uses the container's width to lay out the children; otherwise, returns false. (The default is true.) Returning false also means that the container's <A HREF="UIContainer.htm#com_0003001143023200">layout</A> method doesn't need to be called on a vertical resizing. 

<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142014d00">isWidthRelative()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022e00">isHeightRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023100">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event e, int key);
</FONT></PRE>
<P><P>Handles keyboard navigation in the container. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the container. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that was pressed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called when the container (or a component in the container) has focus and a key is pressed. <B>keyDown</B> navigates to another component in the container based on the following <I>key</I> values: 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Key
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Component navigated to
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HOME
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first component in the container 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">END
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The last component in the container 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">UP ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component above 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">DOWN ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component below 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">LEFT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to the left 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">RIGHT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to the right 
</FONT></TD>
</TR>
</TABLE>
<P>The component navigated to receives the focus. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142014e00">keyDown(Event,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023800">navigate</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023200">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout();
</FONT></PRE>
<P><P>Lays out the container and its components. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>If the container has a layout manager, the layout manager's <B>layout</B> method is called to lay out the container. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015000">layout()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023300">lostFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean lostFocus(Event e, Object o);
</FONT></PRE>
<P><P>Responds to the control losing input focus. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event (typically null). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIComponent.htm#com_0003001142015100">UIComponent.lostFocus</A>.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015100">lostFocus(Event,Object)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023400">mouseEnter</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseEnter(Event e, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse entering the control. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIComponent.htm#com_0003001142015500">UIComponent.mouseEnter</A>. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015500">mouseEnter(Event,int,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023500">mouseExit</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023500">mouseExit</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseExit(Event e, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse leaving the control. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIComponent.htm#com_0003001142015600">UIComponent.mouseExit</A>. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015600">mouseExit(Event,int,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023400">mouseEnter</A>, <A HREF="UIComponent.htm#com_0003001142015700">mouseMove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023600">move</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean move(IUIComponent comp, IUIComponent before);
</FONT></PRE>
<P><P>Moves a component in the container before the specified component. 
<P><B>Return Value:</B> <P>Returns false, indicating the component was not moved. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to move. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>before</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to move <I>comp</I> before. If null, <I>comp</I> is placed at the end of the container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>move</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023700">move</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean move(int from, int to);
</FONT></PRE>
<P><P>Moves a component in the container, according to the specified indices. 
<P><B>Return Value:</B> <P>Returns false, indicating the component was not moved. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>from</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to move. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>to</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the position to move the component in front of. If -1, the component is placed at the end of the container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>move</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P>If the container has a header component, the header is at index 0 and the first child begins at index 1; otherwise, the first child begins at index 0. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023800">navigate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent navigate(IUIComponent comp, int direction,
        boolean keyable);
</FONT></PRE>
<P><P>Navigates from the specified component to another component in the specified direction. 
<P><B>Return Value:</B> <P>Returns the component navigated to (if a component in the specified direction exists); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to navigate from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>direction</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the <B>NAVDIR</B> values defined in the <A HREF="IUIAccessible.htm">IUIAccessible</A> interface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, only components that are able to receive keyboard input can be navigated to; otherwise, all components can be navigated to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>navigate</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. If the container has a layout manager, then the layout manager's <B>navigate</B> method is called. Otherwise this method returns null. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015900">navigate(IUIComponent,int,boolean)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023900">notifyEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void notifyEvent(UINotifyEvent e);
</FONT></PRE>
<P><P>Passes event notification to any children who have requested notification. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015a00">notifyEvent(UINotifyEvent)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023a00">paint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paint(FxGraphics g);
</FONT></PRE>
<P><P>Draws the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the container has a layout manager, the layout manager's <B>paintContainer</B> method is also invoked. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015b00">paint(FxGraphics)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023b00">paintAll</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023b00">paintAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintAll(FxGraphics g);
</FONT></PRE>
<P><P>Draws the container and its components. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the container has the redrawing state set, this method draws the container and its components by calling <A HREF="UIContainer.htm#com_0003001143026200">update</A> and <A HREF="UIContainer.htm#com_0003001143023c00">paintComponents</A>. For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142015c00">paintAll(FxGraphics)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023a00">paint</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023c00">paintComponents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintComponents(FxGraphics g);
</FONT></PRE>
<P><P>Draws all the components in the container. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>paintComponents</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and is invoked by <A HREF="UIContainer.htm#com_0003001143023b00">paintAll</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023d00">passFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent passFocus(int dir);
</FONT></PRE>
<P><P>Retrieves the component that should receive input focus when navigating to the container in the specified direction. 
<P><B>Return Value:</B> <P>Returns the component, or the container itself, that should receive input focus. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the <B>NAVDIR</B> values defined in the <A HREF="IUIAccessible.htm">IUIAccessible</A> interface. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>passFocus</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023800">navigate</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023e00">printAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void printAll(FxGraphics g);
</FONT></PRE>
<P><P>Prints the control and all of its child components, using the specified graphics context. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIContainer.htm#com_0003001143026200">update</A> and <B>printComponents</B>. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142016100">printAll(FxGraphics)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIComponent.htm#com_0003001142016000">print</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143023f00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(int index);
</FONT></PRE>
<P><P>Removes the component at the specified index from the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be removed. If the container has a header component, the header is at index 0 and the first child begins at index 1; otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>remove</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024100">removeAll</A>, <A HREF="UIContainer.htm#com_0003001143024200">removeAllChildren</A>, <A HREF="UIContainer.htm#com_0003001143020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024000">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The header or child component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>remove</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the specified component does not belong to the container. 


<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143024100">removeAll</A>, <A HREF="UIContainer.htm#com_0003001143024200">removeAllChildren</A>, <A HREF="UIContainer.htm#com_0003001143020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024100">removeAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeAll();
</FONT></PRE>
<P><P>Removes all components from the container, including the header component. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method implements <B>removeAll</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>, <A HREF="UIContainer.htm#com_0003001143024200">removeAllChildren</A>, <A HREF="UIContainer.htm#com_0003001143020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024200">removeAllChildren</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeAllChildren();
</FONT></PRE>
<P><P>Removes all child components from the container. The header component is not removed. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method implements <B>removeAllChildren</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>, <A HREF="UIContainer.htm#com_0003001143024100">removeAll</A>, <A HREF="UIContainer.htm#com_0003001143020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024300">removeContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeContainerListener(IUIContainerListener l);
</FONT></PRE>
<P><P>Removes the specified container listener. The listener no longer receives the container's container events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>removeContainerListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020600">addContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024400">removeFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Removes the specified focus listener. The listener no longer receives the container's focus events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>removeFocusListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020700">addFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024500">removeKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Removes the specified key listener. The listener no longer receives the container's key events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>removeKeyListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020800">addKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024600">removeMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Removes the specified mouse listener. The listener no longer receives the container's mouse events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>removeMouseListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020900">addMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024700">removeMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeMouseMotionListener(IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Removes the specified mouse motion listener. The listener no longer receives the container's mouse motion events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>removeMouseMotionListener</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020a00">addMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024800">removeNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeNotify();
</FONT></PRE>
<P><P>Called when the graphics context first becomes unavailable. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method invokes <B>removeNotify</B> for each component in the container.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142016700">removeNotify()</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020b00">addNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024900">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, IUIComponent old);
</FONT></PRE>
<P><P>Adds the specified component to the container, replacing the specified component. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>old</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be replaced. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020100">add</A>, <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024a00">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, int index);
</FONT></PRE>
<P><P>Adds the specified component to the container, replacing the specified component. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the component to be replaced. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020100">add</A>, <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024b00">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, Object constraints,
        IUIComponent old);
</FONT></PRE>
<P><P>Adds the specified component to the container with the specified constraints, replacing the specified component. 

<P><B>Return Value:</B> <P>Returns the component added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints, which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>old</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be replaced. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020100">add</A>, <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024c00">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, Object constraints,
        int index);
</FONT></PRE>
<P><P>Adds the specified component to the container with the specified constraints, replacing the specified component. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints, which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the component to be replaced. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020100">add</A>, <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024d00">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, Object constraints);
</FONT></PRE>
<P><P>Adds the specified component to the container, replacing the component with the specified constraints. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints of the component to be replaced (as well as the component to be added), which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143020100">add</A>, <A HREF="UIContainer.htm#com_0003001143023f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024e00">setChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildBounds(IUIComponent child, int x, int y, int width, int
        height);
</FONT></PRE>
<P><P>Sets the bounds of the specified component, according to the specified coordinates and dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width for the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height for the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021000">getChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143024f00">setChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildBounds(IUIComponent child, Rectangle rect);
</FONT></PRE>
<P><P>Sets the bounds of the specified component, according to the specified <B>Rectangle</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle for the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021000">getChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025000">setChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildBounds(int index, int x, int y, int width, int height);
</FONT></PRE>
<P><P>Sets the bounds of the component at the specified index, according to the specified coordinates and dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, then the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width for the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height for the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021000">getChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025100">setChildBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildBounds(int index, Rectangle rect);
</FONT></PRE>
<P><P>Sets the bounds of the component at the specified index, according to the specified <B>Rectangle</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, then the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle for the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildBounds</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021000">getChildBounds</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025200">setChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildLocation(IUIComponent child, int x, int y);
</FONT></PRE>
<P><P>Sets the location of the specified component, according to the specified coordinates. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021400">getChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025300">setChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildLocation(IUIComponent child, Point point);
</FONT></PRE>
<P><P>Sets the location of the specified component, according to the specified <B>Point</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left corner of the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021400">getChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025400">setChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildLocation(int index, int x, int y);
</FONT></PRE>
<P><P>Sets the location of the component at the specified index, according to the specified coordinates. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021400">getChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025500">setChildLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildLocation(int index, Point point);
</FONT></PRE>
<P><P>Sets the location of the component at the specified index, according to the specified <B>Point</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left corner of the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildLocation</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021400">getChildLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025600">setChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildSize(IUIComponent child, int width, int height);
</FONT></PRE>
<P><P>Sets the size of the specified component, according to the specified dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width for the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height for the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021600">getChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025700">setChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildSize(IUIComponent child, Dimension size);
</FONT></PRE>
<P><P>Sets the size of the specified component, according to the specified <B>Dimension</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>child</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component. Specify either the container's header component or any child component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The dimensions for the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021600">getChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025800">setChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildSize(int index, int width, int height);
</FONT></PRE>
<P><P>Sets the size of the component at the specified index, according to the specified dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, then the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width for the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height for the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021600">getChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025900">setChildSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChildSize(int index, Dimension size);
</FONT></PRE>
<P><P>Sets the location of the component at the specified index, according to the specified <B>Dimension</B> object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component. If the container has a header component, then the header is at index 0 and the first child component begins at index 1; otherwise, the first child begins at index 0. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The dimensions for the component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setChildSize</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143021600">getChildSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025a00">setComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setComponent(int index, IUIComponent comp);
</FONT></PRE>
<P><P>Adds the component to the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index in the container where the component will be inserted. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be inserted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025b00">setEdge</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setEdge(int edge);
</FONT></PRE>
<P><P>Sets the style of the container's edge. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>edge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the container's edge. Edge styles can be one of the following values: 
<UL><LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010004">IFxGraphicsConstants.BDR_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010007">IFxGraphicsConstants.BDR_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010003">IFxGraphicsConstants.BDR_OUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010002">IFxGraphicsConstants.BDR_INNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010006">IFxGraphicsConstants.BDR_RAISEDOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010005">IFxGraphicsConstants.BDR_RAISEDINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010009">IFxGraphicsConstants.BDR_SUNKENOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010008">IFxGraphicsConstants.BDR_SUNKENINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010001">IFxGraphicsConstants.BDR_FLAT</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010021">IFxGraphicsConstants.EDGE_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010022">IFxGraphicsConstants.EDGE_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010020">IFxGraphicsConstants.EDGE_ETCHED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_000300082401001f">IFxGraphicsConstants.EDGE_BUMP</A> 
<LI>0 (No edge style) 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setEdge</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022100">getEdge</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025c00">setHeader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHeader(IUIComponent header);
</FONT></PRE>
<P><P>Sets the header component for the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>header</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be used as the container's header component. For more information about headers, see the <A HREF="UIContainer.htm">UIContainer</A> overview. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setHeader</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns null. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022400">getHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025d00">setID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setID(int id);
</FONT></PRE>
<P><P>Sets the container's identifier. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value to be associated with the container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To set the identifier, the container must have a header component. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142017800">setID(int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022500">getID</A>, <A HREF="UIContainer.htm#com_0003001143026000">setName</A>, <A HREF="UIContainer.htm#com_0003001143022400">getHeader</A>, <A HREF="UIContainer.htm#com_0003001143025c00">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025e00">setLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLayout(IUILayoutManager lm);
</FONT></PRE>
<P><P>Sets the layout manager of the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout manager to be used. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setLayout</B> in the <A HREF="IUIContainer.htm">IUIContainer</A> interface, and by default, simply returns false. Containers should override this method. 
<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022700">getLayout</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143025f00">setLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLocation(int x, int y);
</FONT></PRE>
<P><P>Sets the location of the control, relative to its parent. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the control, relative to the parent. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the control, relative to the parent. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setLocation</B> in the <A HREF="IUIComponent.htm">IUIComponent</A> interface.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142017c00">setLocation(int,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIComponent.htm#com_0003001142012400">getLocation</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143026000">setName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setName(String name);
</FONT></PRE>
<P><P>Sets the container's name. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name to be associated with the container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To set the name, the container must have a header component. 
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142017e00">setName(String)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143022900">getName</A>, <A HREF="UIContainer.htm#com_0003001143025d00">setID</A>, <A HREF="UIContainer.htm#com_0003001143022400">getHeader</A>, <A HREF="UIContainer.htm#com_0003001143025c00">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143026100">setSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSize(int width, int height);
</FONT></PRE>
<P><P>Sets the size of the control, according to the specified dimensions. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width for the control (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new height for the control (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setSize</B> in the <A HREF="IUIComponent.htm">IUIComponent</A> interface.
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142018300">setSize(int,int)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIComponent.htm#com_0003001142013000">getSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001143026200">update</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void update(FxGraphics g);
</FONT></PRE>
<P><P>Updates the container by filling it with the background color and redrawing the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UIComponent.htm#com_0003001142018900">update(FxGraphics)</A> in <A HREF="UIComponent.htm">UIComponent</A>.

<P><B>See Also:</B> <A HREF="UIContainer.htm#com_0003001143023b00">paintAll</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
