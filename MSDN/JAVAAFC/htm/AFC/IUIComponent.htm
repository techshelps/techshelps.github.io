<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface IUIComponent</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="IUIComponent.htm#com_000300118d010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="IUIBand.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="IUIContainer.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Interface IUIComponent</H2>
<PRE><FONT FACE="Courier" SIZE="2">public interface IUIComponent
{
  // Methods
  public boolean <A HREF="IUIComponent.htm#com_000300118d010100">action</A>(Event evt, Object what);
  public void <A HREF="IUIComponent.htm#com_000300118d010200">addFocusListener</A>(IUIFocusListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d010300">addKeyListener</A>(IUIKeyListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d010400">addMouseListener</A>(IUIMouseListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d010500">addMouseMotionListener</A>(IUIMouseMotionListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d010600">addNotify</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d010700">adjustLayoutSize</A>(Dimension oldSize,
        Dimension newSize);
  public boolean <A HREF="IUIComponent.htm#com_000300118d010800">contains</A>(int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d010900">contains</A>(Point point);
  public Image <A HREF="IUIComponent.htm#com_000300118d010a00">createImage</A>(ImageProducer ip);
  public Image <A HREF="IUIComponent.htm#com_000300118d010b00">createImage</A>(int width, int height);
  public void <A HREF="IUIComponent.htm#com_000300118d010c00">deliverEvent</A>(Event e);
  public void <A HREF="IUIComponent.htm#com_000300118d010d00">doLayout</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d010e00">ensureVisible</A>(Rectangle rect);
  public Color <A HREF="IUIComponent.htm#com_000300118d010f00">getBackground</A>();
  public Rectangle <A HREF="IUIComponent.htm#com_000300118d011000">getBounds</A>();
  public Rectangle <A HREF="IUIComponent.htm#com_000300118d011100">getBounds</A>(IUIComponent comp);
  public IUIComponent <A HREF="IUIComponent.htm#com_000300118d011200">getComponent</A>(int x, int y);
  public IUIComponent <A HREF="IUIComponent.htm#com_000300118d011300">getComponent</A>(Point point);
  public IUIComponent <A HREF="IUIComponent.htm#com_000300118d011400">getComponentAt</A>(int x, int y);
  public IUIComponent <A HREF="IUIComponent.htm#com_000300118d011500">getComponentAt</A>(Point pt);
  public Cursor <A HREF="IUIComponent.htm#com_000300118d011600">getCursor</A>();
  public int <A HREF="IUIComponent.htm#com_000300118d011700">getFlags</A>();
  public Font <A HREF="IUIComponent.htm#com_000300118d011800">getFont</A>();
  public FontMetrics <A HREF="IUIComponent.htm#com_000300118d011900">getFontMetrics</A>(Font f);
  public Color <A HREF="IUIComponent.htm#com_000300118d011a00">getForeground</A>();
  public FxGraphics <A HREF="IUIComponent.htm#com_000300118d011b00">getGraphics</A>();
  public int <A HREF="IUIComponent.htm#com_000300118d011c00">getID</A>();
  public int <A HREF="IUIComponent.htm#com_000300118d011d00">getIndex</A>();
  public Point <A HREF="IUIComponent.htm#com_000300118d011e00">getLocation</A>();
  public Point <A HREF="IUIComponent.htm#com_000300118d011f00">getLocation</A>(IUIComponent comp);
  public Point <A HREF="IUIComponent.htm#com_000300118d012000">getLocationOnScreen</A>();
  public Dimension <A HREF="IUIComponent.htm#com_000300118d012100">getMaximumSize</A>();
  public Dimension <A HREF="IUIComponent.htm#com_000300118d012200">getMinimumSize</A>();
  public String <A HREF="IUIComponent.htm#com_000300118d012300">getName</A>();
  public IUIContainer <A HREF="IUIComponent.htm#com_000300118d012400">getParent</A>();
  public ComponentPeer <A HREF="IUIComponent.htm#com_000300118d012500">getPeer</A>();
  public Dimension <A HREF="IUIComponent.htm#com_000300118d012600">getPreferredSize</A>();
  public Dimension <A HREF="IUIComponent.htm#com_000300118d012700">getPreferredSize</A>(Dimension size);
  public IUIRootContainer <A HREF="IUIComponent.htm#com_000300118d012800">getRoot</A>();
  public Dimension <A HREF="IUIComponent.htm#com_000300118d012900">getSize</A>();
  public Toolkit <A HREF="IUIComponent.htm#com_000300118d012a00">getToolkit</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d012b00">gotFocus</A>(Event evt, Object what);
  public boolean <A HREF="IUIComponent.htm#com_000300118d012c00">handleEvent</A>(Event evt);
  public void <A HREF="IUIComponent.htm#com_000300118d012d00">invalidate</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d012e00">invalidateAll</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d012f00">isChecked</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013000">isEnabled</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013100">isEnabled</A>(boolean recurse);
  public boolean <A HREF="IUIComponent.htm#com_000300118d013200">isFocused</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013300">isHeightRelative</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013400">isHot</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013500">isIndeterminate</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013600">isInvalidating</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013700">isKeyable</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013800">isKeyable</A>(boolean recurse);
  public boolean <A HREF="IUIComponent.htm#com_000300118d013900">isNotified</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013a00">isPressed</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013b00">isRedrawing</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013c00">isSelectable</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013d00">isSelected</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013e00">isShowing</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d013f00">isValid</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d014000">isVisible</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d014100">isVisible</A>(boolean recurse);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014200">isWidthRelative</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d014300">keyDown</A>(Event evt, int key);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014400">keyUp</A>(Event evt, int key);
  public void <A HREF="IUIComponent.htm#com_000300118d014500">layout</A>();
  public boolean <A HREF="IUIComponent.htm#com_000300118d014600">lostFocus</A>(Event evt, Object what);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014700">mouseClicked</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014800">mouseDown</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014900">mouseDrag</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014a00">mouseEnter</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014b00">mouseExit</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014c00">mouseMove</A>(Event evt, int x, int y);
  public boolean <A HREF="IUIComponent.htm#com_000300118d014d00">mouseUp</A>(Event evt, int x, int y);
  public void <A HREF="IUIComponent.htm#com_000300118d014e00">paint</A>(FxGraphics g);
  public void <A HREF="IUIComponent.htm#com_000300118d014f00">paintAll</A>(FxGraphics g);
  public boolean <A HREF="IUIComponent.htm#com_000300118d015000">postEvent</A>(Event e);
  public boolean <A HREF="IUIComponent.htm#com_000300118d015100">prepareImage</A>(Image image, ImageObserver observer);
  public boolean <A HREF="IUIComponent.htm#com_000300118d015200">prepareImage</A>(Image image, int width, int height,
        ImageObserver observer);
  public void <A HREF="IUIComponent.htm#com_000300118d015300">print</A>(FxGraphics g);
  public void <A HREF="IUIComponent.htm#com_000300118d015400">printAll</A>(FxGraphics g);
  public void <A HREF="IUIComponent.htm#com_000300118d015500">relayout</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d015600">removeFocusListener</A>(IUIFocusListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d015700">removeKeyListener</A>(IUIKeyListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d015800">removeMouseListener</A>(IUIMouseListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d015900">removeMouseMotionListener</A>(IUIMouseMotionListener l);
  public void <A HREF="IUIComponent.htm#com_000300118d015a00">removeNotify</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d015b00">repaint</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d015c00">repaint</A>(long time);
  public void <A HREF="IUIComponent.htm#com_000300118d015d00">repaint</A>(int x, int y, int width, int height);
  public void <A HREF="IUIComponent.htm#com_000300118d015e00">repaint</A>(long tm, int x, int y, int width, int height);
  public void <A HREF="IUIComponent.htm#com_000300118d015f00">requestFocus</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d016000">setBackground</A>(Color color);
  public void <A HREF="IUIComponent.htm#com_000300118d016100">setBounds</A>(int x, int y, int width, int height);
  public void <A HREF="IUIComponent.htm#com_000300118d016200">setBounds</A>(Rectangle r);
  public void <A HREF="IUIComponent.htm#com_000300118d016300">setChecked</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016400">setCursor</A>(Cursor cursor);
  public void <A HREF="IUIComponent.htm#com_000300118d016500">setEnabled</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016600">setFlags</A>(int flags);
  public void <A HREF="IUIComponent.htm#com_000300118d016601">setFocused</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016700">setFont</A>(Font font);
  public void <A HREF="IUIComponent.htm#com_000300118d016800">setForeground</A>(Color color);
  public void <A HREF="IUIComponent.htm#com_000300118d016900">setHot</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016a00">setID</A>(int id);
  public void <A HREF="IUIComponent.htm#com_000300118d016b00">setIndeterminate</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016c00">setIndex</A>(int index);
  public void <A HREF="IUIComponent.htm#com_000300118d016d00">setInvalidating</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d016e00">setLocation</A>(int x, int y);
  public void <A HREF="IUIComponent.htm#com_000300118d016f00">setLocation</A>(Point point);
  public void <A HREF="IUIComponent.htm#com_000300118d017000">setName</A>(String name);
  public void <A HREF="IUIComponent.htm#com_000300118d017100">setParent</A>(IUIContainer parent);
  public void <A HREF="IUIComponent.htm#com_000300118d017200">setPressed</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d017300">setRedrawing</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d017400">setSelected</A>(boolean on);
  public void <A HREF="IUIComponent.htm#com_000300118d017500">setSize</A>(int width, int height);
  public void <A HREF="IUIComponent.htm#com_000300118d017600">setSize</A>(Dimension size);
  public void <A HREF="IUIComponent.htm#com_000300118d017700">setValid</A>(boolean valid);
  public void <A HREF="IUIComponent.htm#com_000300118d017800">setVisible</A>(boolean show);
  public String <A HREF="IUIComponent.htm#com_000300118d017900">toString</A>();
  public void <A HREF="IUIComponent.htm#com_000300118d017a00">update</A>(FxGraphics g);
  public void <A HREF="IUIComponent.htm#com_000300118d017b00">validate</A>();
}
</FONT></PRE>
<P>This interface defines methods associated with an AFC component. <A HREF="UIComponent.htm">UIComponent</A> implements <B>IUIComponent</B>. 
<P><B>Note</B>  The hot-track color is the same color as the button text color. As a result, hot-tracking does not appear to be functional. 
<H3 STYLE="color:#333366"><A NAME="com_000300118d010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300118d010100">action</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean action(Event evt, Object what);
</FONT></PRE>
<P><P>Responds to an action that has occurred within the control (or any of its descendants). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>what</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010200">addFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Adds the specified focus listener. The listener receives all focus events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010300">addKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Adds the specified key listener. The listener receives all key events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010400">addMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Adds the specified mouse listener. The listener receives all mouse events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010500">addMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addMouseMotionListener(IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Adds the specified mouse motion listener. The listener receives all mouse motion events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010600">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010700">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustLayoutSize(Dimension oldSize, Dimension newSize);
</FONT></PRE>
<P><P>Invalidates the control and adjusts its layout size. In the event of an actual change to preferred size, the parent's <B>adjustLayoutSize</B> is called with this component and it's change in preferred size. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010800">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean contains(int x, int y);
</FONT></PRE>
<P><P>Determines whether the control contains the point identified by the specified coordinates. 

<P><B>Return Value:</B> <P>Returns true if the control contains the point; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the point's location in the control's coordinate space. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the point's location in the control's coordinate space. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010900">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean contains(Point point);
</FONT></PRE>
<P><P>Determines whether the control contains the specified point. 

<P><B>Return Value:</B> <P>Returns true if the control contains the point; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The location of the point in the control's coordinate space (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010a00">createImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image createImage(ImageProducer ip);
</FONT></PRE>
<P><P>Creates an image from the specified image producer. 

<P><B>Return Value:</B> <P>Returns the created image. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ip</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image producer that will generate the image. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010b00">createImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image createImage(int width, int height);
</FONT></PRE>
<P><P>Creates an off-screen image of the specified dimensions. 

<P><B>Return Value:</B> <P>Returns the created image. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the image (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the image (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010c00">deliverEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void deliverEvent(Event e);
</FONT></PRE>
<P><P>Delivers an event to the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010d00">doLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void doLayout();
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d014500">layout</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010e00">ensureVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean ensureVisible(Rectangle rect);
</FONT></PRE>
<P><P>Brings the area identified by the specified rectangle into view. 

<P><B>Return Value:</B> <P>Returns true if any component was moved or resized to make the rectangle visible; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle identifying the area to be made visible. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d010f00">getBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Color getBackground();
</FONT></PRE>
<P><P>Retrieves the background color of the control, moving up the parent chain as needed, until a background color is found. 

<P><B>Return Value:</B> <P>Returns a <B>Color</B> object that specifies the background color. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011000">getBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getBounds();
</FONT></PRE>
<P><P>Retrieves the bounding rectangle of the control. The coordinates and dimensions of the rectangle are relative to the control's parent. 

<P><B>Return Value:</B> <P>Returns a <B>Rectangle</B> object identifying the control's bounding area in terms of its parent's coordinate space. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011100">getBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getBounds(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the bounding rectangle of the control. The coordinates and dimensions of the rectangle are relative to the specified component. 

<P><B>Return Value:</B> <P>Returns a <B>Rectangle</B> object identifying the control's bounding area, in terms of the coordinate space of the specified component. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference component. The coordinates of the returned <B>Rectangle</B> object are relative to this component. If null, screen coordinates are used. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011200">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(int x, int y);
</FONT></PRE>
<P><P>Retrieves the component that contains the point identified by the specified coordinates. 

<P><B>Return Value:</B> <P>Returns the control itself, if it contains the point; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the point's location in the control's coordinate space. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the point's location in the control's coordinate space. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011300">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(Point point);
</FONT></PRE>
<P><P>Retrieves the component that contains the specified point. 

<P><B>Return Value:</B> <P>Returns the control itself, if it contains the point; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The location of the point in the control's coordinate space. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011400">getComponentAt</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponentAt(int x, int y);
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d011200">getComponent</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011500">getComponentAt</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponentAt(Point pt);
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d011200">getComponent</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011600">getCursor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Cursor getCursor();
</FONT></PRE>
<P><P>Retrieves the control's cursor, moving up the parent chain as needed, until a cursor is found. 

<P><B>Return Value:</B> <P>Returns a <B>Cursor</B> object containing the cursor. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011700">getFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getFlags();
</FONT></PRE>
<P><P>Retrieves the user-defined bits currently set for the control. 

<P><B>Return Value:</B> <P>Returns an integer that specifies the user-defined settings. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011800">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Font getFont();
</FONT></PRE>
<P><P>Retrieves the font of the control, moving up the parent chain as needed, until a font is found. 

<P><B>Return Value:</B> <P>Returns a <B>Font</B> object that specifies the font. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011900">getFontMetrics</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FontMetrics getFontMetrics(Font f);
</FONT></PRE>
<P><P>Retrieves the font metrics for the specified font. 

<P><B>Return Value:</B> <P>Returns the font metrics. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>f</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011a00">getForeground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Color getForeground();
</FONT></PRE>
<P><P>Retrieves the foreground color of the control, moving up the parent chain as needed, until a foreground color is found. 

<P><B>Return Value:</B> <P>Returns a <B>Color</B> object that specifies the foreground color. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011b00">getGraphics</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxGraphics getGraphics();
</FONT></PRE>
<P><P>Retrieves the graphics context of the control. 

<P><B>Return Value:</B> <P>Returns the graphics context if it is available; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011c00">getID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getID();
</FONT></PRE>
<P><P>Retrieves the control's identifier. 

<P><B>Return Value:</B> <P>Returns the integer associated with the control. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011d00">getIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getIndex();
</FONT></PRE>
<P><P>Retrieves the index of the control within its parent container. 

<P><B>Return Value:</B> <P>Returns the control's index. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011e00">getLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getLocation();
</FONT></PRE>
<P><P>Retrieves the location of the control, relative to its parent. 

<P><B>Return Value:</B> <P>Returns a <B>Point</B> object that specifies the location of the upper-left corner of the control in its parent's coordinate space. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d011f00">getLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getLocation(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the location of the control, relative to the specified component. 

<P><B>Return Value:</B> <P>Returns a <B>Point</B> object that specifies the location of the upper-left corner of the control, in the coordinate space of the specified component. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference component. The coordinates of the returned <B>Point</B> object are relative to this component. If null, screen coordinates are used. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012000">getLocationOnScreen</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getLocationOnScreen();
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d011e00">getLocation</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012100">getMaximumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMaximumSize();
</FONT></PRE>
<P><P>Retrieves the maximum dimensions (in pixels) for displaying the control. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the maximum size. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012200">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize();
</FONT></PRE>
<P><P>Retrieves the minimum size of the control. The minimum size specifies the smallest dimensions (in pixels) that will enable the control to be displayed. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum size. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012300">getName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getName();
</FONT></PRE>
<P><P>Retrieves the control's name. 

<P><B>Return Value:</B> <P>Returns a string containing the name of the control. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012400">getParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIContainer getParent();
</FONT></PRE>
<P><P>Retrieves the control's parent. 

<P><B>Return Value:</B> <P>Returns the parent container if the control has a parent; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012500">getPeer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public ComponentPeer getPeer();
</FONT></PRE>
<P><P>Retrieves the peer of the control's root container. 

<P><B>Return Value:</B> <P>Returns the root container's peer. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012600">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred dimensions (in pixels) for displaying the control. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012700">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(Dimension size);
</FONT></PRE>
<P><P>Retrieves the preferred layout size of the control (in pixels). The <B>Dimension</B> parameter that is passed is used to force the returned preferred size to be larger on a particular axis. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">if either width or height is -1, this axis is not to be constrained. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012800">getRoot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIRootContainer getRoot();
</FONT></PRE>
<P><P>Retrieves the first component in the control's chain that implements the <A HREF="IUIRootContainer.htm">IUIRootContainer</A> interface. 

<P><B>Return Value:</B> <P>Returns the root container, if successful; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012900">getSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getSize();
</FONT></PRE>
<P><P>Retrieves the size (in pixels) of the control. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the control's size. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012a00">getToolkit</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Toolkit getToolkit();
</FONT></PRE>
<P><P>Retrieves the toolkit associated with the control. 

<P><B>Return Value:</B> <P>Returns the associated toolkit. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012b00">gotFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean gotFocus(Event evt, Object what);
</FONT></PRE>
<P><P>Responds to the control (or any of its descendants) receiving input focus. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>what</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event (typically null). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012c00">handleEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean handleEvent(Event evt);
</FONT></PRE>
<P><P>Responds to events occurring within the control. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012d00">invalidate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void invalidate();
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d017700">setValid</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012e00">invalidateAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean invalidateAll();
</FONT></PRE>
<P><P>Invalidates the control and all its child components. 

<P><B>Return Value:</B> <P>Returns true if the control and its children were invalidated; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d012f00">isChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isChecked();
</FONT></PRE>
<P><P>Determines whether the control's checked state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is checked; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013000">isEnabled</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isEnabled();
</FONT></PRE>
<P><P>Determines whether the control's enabled state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is enabled; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013100">isEnabled</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isEnabled(boolean recurse);
</FONT></PRE>
<P><P>Determines whether the enabled state of the control or of all its ancestors is set. 

<P><B>Return Value:</B> <P>Returns true if the control and all of its ancestors are enabled (if <I>recurse</I> is true) or if the control alone is enabled (if <I>recurse</I> is false); otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>recurse</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, this method checks the enabled state of the control and each of its ancestors. If false, only the control itself is checked. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013200">isFocused</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isFocused();
</FONT></PRE>
<P><P>Determines whether the control's focus state is set. 

<P><B>Return Value:</B> <P>Returns true if the control has focus; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013300">isHeightRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHeightRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the height of the container to lay out its children. 

<P><B>Return Value:</B> <P>Returns true if this layout manager uses the container's height to lay out its children; otherwise, returns false. The default is true. Returning false also means that the container's <A HREF="IUIComponent.htm#com_000300118d014500">layout</A> method doesn't need to be called on a vertical resizing. 

<P><B>See Also:</B> <A HREF="IUIComponent.htm#com_000300118d014200">isWidthRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013400">isHot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHot();
</FONT></PRE>
<P><P>Determines whether the control's hot-tracked state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is hot-tracked; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013500">isIndeterminate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isIndeterminate();
</FONT></PRE>
<P><P>Determines whether the control's indeterminate state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is indeterminate; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013600">isInvalidating</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isInvalidating();
</FONT></PRE>
<P><P>Gets the current invalidating state of this object. 

<P><B>Return Value:</B> <P>Returns true if this object has invalidating enabled; otherwise, returns false (which means it will ignore requests to invalidate). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013700">isKeyable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isKeyable();
</FONT></PRE>
<P><P>Sets or clears the focus state of the control. This is called when a component receives input focus. 
<P>
<P><B>Note</B>  This method should not be used. To give a component input focus, call <A HREF="IUIComponent.htm#com_000300118d015f00">requestFocus</A>. 
<P><B>Return Value:</B> <P>No return value. public void setFocused(boolean on); /** Determines whether the control can receive keyboard input. 
true if the control can receive keyboard input; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013800">isKeyable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isKeyable(boolean recurse);
</FONT></PRE>
<P><P>Determines whether the control and all its ancestors can receive keyboard input. 

<P><B>Return Value:</B> <P>Returns true if the control and all its ancestors can receive keyboard input (if <I>recurse</I> is true) or if the control alone can receive keyboard input (if <I>recurse</I> is false); otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>recurse</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, this method checks whether the control and each of its ancestors can receive keyboard input. If false, only the control itself is checked. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013900">isNotified</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isNotified();
</FONT></PRE>
<P><P>Determines whether the control's notified state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is notified; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013a00">isPressed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isPressed();
</FONT></PRE>
<P><P>Determines whether the control's pressed state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is pressed; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013b00">isRedrawing</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isRedrawing();
</FONT></PRE>
<P><P>Determines whether the control will be redrawn when a paint request is made. 

<P><B>Return Value:</B> <P>Returns true if the redrawing state is set; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013c00">isSelectable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isSelectable();
</FONT></PRE>
<P><P>Determines whether the control's selected state can be set. 

<P><B>Return Value:</B> <P>Returns true if the control can be selected; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013d00">isSelected</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isSelected();
</FONT></PRE>
<P><P>Determines whether the control's selected state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is selected; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013e00">isShowing</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isShowing();
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d014000">isVisible</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d013f00">isValid</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isValid();
</FONT></PRE>
<P><P>Determines whether the control is valid. 

<P><B>Return Value:</B> <P>Returns true if the control is valid; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014000">isVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isVisible();
</FONT></PRE>
<P><P>Determines whether the control's visible state is set. 

<P><B>Return Value:</B> <P>Returns true if the control is visible; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014100">isVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isVisible(boolean recurse);
</FONT></PRE>
<P><P>Determines whether the visible state of the control or of all its ancestors is set. 

<P><B>Return Value:</B> <P>Returns true if the control and all of its ancestors are visible (if <I>recurse</I> is true) or if the control alone is visible (if <I>recurse</I> is false); otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>recurse</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, this method checks the visible state of the control and each of its ancestors. If false, only the control itself is checked. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014200">isWidthRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isWidthRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the width of the container to lay out its children. 

<P><B>Return Value:</B> <P>Returns true if this layout manager uses the container's width to lay out the children; otherwise, returns false. (The default is true.) Returning false also means that the container's <A HREF="IUIComponent.htm#com_000300118d014500">layout</A> method doesn't need to be called on a horizontal resizing. 

<P><B>See Also:</B> <A HREF="IUIComponent.htm#com_000300118d013300">isHeightRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014300">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event evt, int key);
</FONT></PRE>
<P><P>Responds to a key being pressed when the component (or any of its descendants) has the input focus. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that was pressed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014400">keyUp</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyUp(Event evt, int key);
</FONT></PRE>
<P><P>Responds to a key being released when the control (or any of its descendants) has the input focus. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that was released. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014500">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout();
</FONT></PRE>
<P><P>Lays out the control. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014600">lostFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean lostFocus(Event evt, Object what);
</FONT></PRE>
<P><P>Responds to the control (or any of it's descendants) losing input focus. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>what</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event (typically null). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014700">mouseClicked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseClicked(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the control (or any of its descendants) being clicked with the mouse. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014800">mouseDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseDown(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse button being pressed over the control (or any of its descendants). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014900">mouseDrag</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseDrag(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse being dragged into or out of the control (or any of its descendants), while the mouse button is pressed. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014a00">mouseEnter</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseEnter(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse pointer entering the control (or any of its descendants). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014b00">mouseExit</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseExit(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse pointer leaving the control (or any of its descendants). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014c00">mouseMove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseMove(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse pointer moving within the control, or any of the component's descendants, (with the mouse button unpressed). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014d00">mouseUp</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseUp(Event evt, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse button being released over the control (or any of its descendants). 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014e00">paint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paint(FxGraphics g);
</FONT></PRE>
<P><P>Draws the control in the specified graphics context. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d014f00">paintAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintAll(FxGraphics g);
</FONT></PRE>
<P><P>Draws the control and all its child components, using the specified graphics context. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015000">postEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean postEvent(Event e);
</FONT></PRE>
<P><P>Posts an event to the control. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015100">prepareImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean prepareImage(Image image, ImageObserver observer);
</FONT></PRE>
<P><P>Prepares an image for this component. 

<P><B>Return Value:</B> <P>Returns true if the image has already been fully prepared; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to prepare for component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>observer</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The observer notified of the image's preparation. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015200">prepareImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean prepareImage(Image image, int width, int height,
        ImageObserver observer);
</FONT></PRE>
<P><P>Prepares an image of the specified dimension for this component. 

<P><B>Return Value:</B> <P>Returns true if the image has already been fully prepared; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to prepare for component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the image (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the image (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>observer</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The observer notified of the image's preparation. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015300">print</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void print(FxGraphics g);
</FONT></PRE>
<P><P>Prints the control in the specified graphics context. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015400">printAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void printAll(FxGraphics g);
</FONT></PRE>
<P><P>Prints the control and all its child components using the specified graphics context. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015500">relayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void relayout();
</FONT></PRE>
<P><P>Schedules the control to be laid out as soon as possible. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015600">removeFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Removes the specified focus listener. The listener no longer receives the control's focus events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015700">removeKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Removes the specified key listener. The listener no longer receives the control's key events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015800">removeMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Removes the specified mouse listener. The listener no longer receives the control's mouse events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015900">removeMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeMouseMotionListener(IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Removes the specified mouse motion listener. The listener no longer receives the control's mouse motion events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015a00">removeNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeNotify();
</FONT></PRE>
<P><P>Called when the graphics context is first unavailable. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015b00">repaint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void repaint();
</FONT></PRE>
<P><P>Schedules the control to be redrawn as soon as possible. 
<P><B>Note</B>  This is method is synchronous. 
<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015c00">repaint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void repaint(long time);
</FONT></PRE>
<P><P>Not currently implemented. Call <B>repaint</B>. Schedules the control to be redrawn after the specified amount of time. 
<P><B>Note</B>  This is method is synchronous. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>time</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of milliseconds after which the control is redrawn. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015d00">repaint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void repaint(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Not currently implemented. Call <B>repaint</B>. Schedules the specified rectangle within the control to be redrawn as soon as possible. 
<P><B>Note</B>  This is method is synchronous. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the upper-left corner of the rectangle to be redrawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the upper-left corner of the rectangle to be redrawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the rectangle to be redrawn (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the rectangle to be redrawn (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015e00">repaint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void repaint(long tm, int x, int y, int width, int height);
</FONT></PRE>
<P><P>Not currently implemented. Call <B>repaint</B>. Schedules the specified rectangle within the control to be redrawn after the specified amount of time. 
<P><B>Note</B>  This is method is synchronous. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of milliseconds after which the rectangle is redrawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the upper-left corner of the rectangle to be redrawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the upper-left corner of the rectangle to be redrawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the rectangle to be redrawn (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the rectangle to be redrawn (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d015f00">requestFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void requestFocus();
</FONT></PRE>
<P><P>Requests that the control receive the input focus. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016000">setBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBackground(Color color);
</FONT></PRE>
<P><P>Sets the control's background color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>color</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The background color for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016100">setBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBounds(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Sets the bounding rectangle of the control according to the specified coordinates and dimensions. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the control, relative to the parent. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the control, relative to the parent. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width of the control (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new height of the control (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016200">setBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBounds(Rectangle r);
</FONT></PRE>
<P><P>Sets the bounding rectangle of the control according to the specified <B>Rectangle</B> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle identifying the coordinates for the control's upper-left corner and the control's new width and height (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016300">setChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChecked(boolean on);
</FONT></PRE>
<P><P>Sets or clears the checked state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the checked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016400">setCursor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCursor(Cursor cursor);
</FONT></PRE>
<P><P>Sets the control's cursor. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cursor</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The cursor for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016500">setEnabled</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setEnabled(boolean on);
</FONT></PRE>
<P><P>Sets or clears the enabled state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the enabled state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016600">setFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFlags(int flags);
</FONT></PRE>
<P><P>Sets the user-defined bits for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The user-defined settings for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300118d016601">setFocused</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFocused(boolean on);
</FONT></PRE>
<P><P>Sets or clears the focus state of the control. 

<P><B>Return Value:</B> <P>Returns true if the focus state was successfully set or cleared; otherwise, returns false.

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the focus state is set; otherwise, it is cleared.

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>


<H4 STYLE="color:#333366"><A NAME="com_000300118d016700">setFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFont(Font font);
</FONT></PRE>
<P><P>Sets the control's font. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>font</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016800">setForeground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setForeground(Color color);
</FONT></PRE>
<P><P>Sets the control's foreground color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>color</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The foreground color for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016900">setHot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHot(boolean on);
</FONT></PRE>
<P><P>Sets or clears the hot-tracked state of the control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the hot-tracked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the system when the component should change its hot state. Normally, this is not called directly from applications.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016a00">setID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setID(int id);
</FONT></PRE>
<P><P>Sets the control's identifier. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value to be associated with the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016b00">setIndeterminate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setIndeterminate(boolean on);
</FONT></PRE>
<P><P>Sets or clears the indeterminate state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the indeterminate state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016c00">setIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setIndex(int index);
</FONT></PRE>
<P><P>Sets the index of the control within its parent container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016d00">setInvalidating</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setInvalidating(boolean on);
</FONT></PRE>
<P><P>Sets the invalidating state of this object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The invalidating state setting. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is useful when a large number of changes are being made at the same time to a container. The following sample code demonstrates this usage. 
<PRE><FONT FACE="Courier" SIZE="2">
//Turn off invalidating only if it's not already off.
boolean on = isInvalidating();
if (on)
    setInvalidating (false);
//Make all the necessary changes to the container.
if (on)
    setInvalidating (true);
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016e00">setLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLocation(int x, int y);
</FONT></PRE>
<P><P>Sets the location of the control, relative to its parent. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate for the upper-left corner of the control, relative to the parent. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate for the upper-left corner of the control, relative to the parent. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d016f00">setLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLocation(Point point);
</FONT></PRE>
<P><P>Sets the location of the control, relative to its parent. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>point</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left corner of the control, relative to the parent. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017000">setName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setName(String name);
</FONT></PRE>
<P><P>Sets the control's name. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name to be associated with the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017100">setParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setParent(IUIContainer parent);
</FONT></PRE>
<P><P>Sets the control's parent. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new parent container of the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017200">setPressed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPressed(boolean on);
</FONT></PRE>
<P><P>Sets or clears the pressed state of the control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the pressed state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the system when the component should change its pressed state. Normally, this is not called directly from applications. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017300">setRedrawing</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setRedrawing(boolean on);
</FONT></PRE>
<P><P>Sets or clears the redrawing state of the control. If the redrawing state is set, the control will be redrawn when a paint request is made. If the redrawing state is cleared, the control will not be redrawn. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the redrawing state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017400">setSelected</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelected(boolean on);
</FONT></PRE>
<P><P>Sets or clears the selected state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the selected state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017500">setSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSize(int width, int height);
</FONT></PRE>
<P><P>Sets the size of the control, according to the specified dimensions. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width for the control (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new height for the control (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017600">setSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSize(Dimension size);
</FONT></PRE>
<P><P>Sets the size of the control, according to the specified <B>Dimension</B> object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width and height for the control (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017700">setValid</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValid(boolean valid);
</FONT></PRE>
<P><P>Sets or clears the valid state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>valid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the control is validated; otherwise, the control is invalidated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017800">setVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVisible(boolean show);
</FONT></PRE>
<P><P>Sets or clears the visible state of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>show</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the visible state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017900">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String toString();
</FONT></PRE>
<P><P>Retrieves a text description of the control. 

<P><B>Return Value:</B> <P>Returns a string that contains the name of the control's class and the control's name. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017a00">update</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void update(FxGraphics g);
</FONT></PRE>
<P><P>Updates the control by filling it with the background color and redrawing the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300118d017b00">validate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void validate();
</FONT></PRE>
<P><P><P><B>Note</B>  This method is replaced by <A HREF="IUIComponent.htm#com_000300118d017700">setValid</A>. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
