<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class FxOutlineFont</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxOutlineFont.htm#com_0003000813010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxOutlineFont.htm#com_0003000813020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxOutlineFont.htm#com_0003000813030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="FxMapFontMappingSection.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="FxPen.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class FxOutlineFont</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class FxOutlineFont extends <A HREF="FxFont.htm">FxFont</A>
{
  // Fields
  protected Color <A HREF="FxOutlineFont.htm#com_0003000813030001">backColor</A>;
  protected Color <A HREF="FxOutlineFont.htm#com_0003000813030002">color</A>;

  // Constructors
  public <A HREF="FxOutlineFont.htm#com_0003000813010100">FxOutlineFont</A>();
  public <A HREF="FxOutlineFont.htm#com_0003000813010200">FxOutlineFont</A>(String name, int style, int size);
  public <A HREF="FxOutlineFont.htm#com_0003000813010300">FxOutlineFont</A>(String name, int style, int size, int flags);

  // Methods
  public boolean <A HREF="FxOutlineFont.htm#com_0003000813020100">drawBytesCallback</A>(FxGraphics g, byte data[],
        int offset, int length, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[]);
  public boolean <A HREF="FxOutlineFont.htm#com_0003000813020200">drawCharsCallback</A>(FxGraphics g, char data[],
        int offset, int length, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[]);
  public boolean <A HREF="FxOutlineFont.htm#com_0003000813020300">drawOutlineChar</A>(FxGraphics g, int xOrig,
        int yOrig, GlyphOutline go);
  public boolean <A HREF="FxOutlineFont.htm#com_0003000813020400">drawStringCallback</A>(FxGraphics g, String str,
        int x, int y, Rectangle optionRect, int options,
        int dx[], int dy[]);
  public static String[] <A HREF="FxOutlineFont.htm#com_0003000813020500">getAttributeList</A>();
  public static String[] <A HREF="FxOutlineFont.htm#com_0003000813020600">getAttributeList</A>(String faceName);
  public static int <A HREF="FxOutlineFont.htm#com_0003000813020700">getFlagsVal</A>(String face, String attribute);
  public static Font <A HREF="FxOutlineFont.htm#com_0003000813020800">getFont</A>(String face, Vector v, int size);
  public static Font <A HREF="FxOutlineFont.htm#com_0003000813020900">getFont</A>(String face, int style, int size,
        int flags);
  public static String[] <A HREF="FxOutlineFont.htm#com_0003000813020a00">getFontList</A>();
  public GlyphOutline <A HREF="FxOutlineFont.htm#com_0003000813020b00">getGlyphOutlineCallback</A>(FxGraphics g,
        char ch);
  public static int <A HREF="FxOutlineFont.htm#com_0003000813020c00">getStyleVal</A>(String face, String attribute);
  public void <A HREF="FxOutlineFont.htm#com_0003000813020d00">setBackgroundCallback</A>(Color c);
  public void <A HREF="FxOutlineFont.htm#com_0003000813020e00">setColorCallback</A>(Color c);
}
</FONT></PRE>
<P>This class produces user-defined outline font objects. <B>FxOutlineFont</B> specifically uses <A HREF="GlyphMetrics.htm">GlyphMetrics</A>, <A HREF="GlyphOutline.htm">GlyphOutline</A>, <A HREF="OutlineCurve.htm">OutlineCurve</A>, and <A HREF="OutlinePolygon.htm">OutlinePolygon</A> objects to perform its operations on fonts. 
<P><B>Note</B>  <B>FxOutlineFont</B> is derived from <A HREF="FxFont.htm">FxFont</A> and may be selected into a graphics context the same way that a <B>Font</B> is selected. Like other extended objects in the com.ms.fx package, <B>FxOutlineFont</B> performs all its operations for an <A HREF="FxGraphics.htm">FxGraphics</A> object internally by using callback methods. For more information on the <A HREF="def_pfx.htm#commsfx_ovr_0003000801020000">callback methods</A> in this documentation, see the beginning of this package. 
<PRE><FONT FACE="Courier" SIZE="2"><B>Font</B>
  |
  +--<A HREF="FxFont.htm">FxFont</A>
    |
    +--<B>FxOutlineFont</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003000813010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000813010100">FxOutlineFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxOutlineFont();
</FONT></PRE>
<P><P>Constructs a generic font. 
<P>This is the constructor used by JavaBeans objects. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813010200">FxOutlineFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxOutlineFont(String name, int style, int size);
</FONT></PRE>
<P><P>Creates an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object with the specified style and size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's style. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's size (in points). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813010300">FxOutlineFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxOutlineFont(String name, int style, int size, int flags);
</FONT></PRE>
<P><P>Creates an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object with the specified style, size, and flags. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's style. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's size (in points). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This parameter can be one or a combination of the following flags: 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>OUTLINE</B> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxFont.htm#com_000300080c030004">STRIKEOUT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxFont.htm#com_000300080c030005">UNDERLINE</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>ROTATABLE</B> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxFont.htm#com_000300080c030001">ANTIALIAS</A>
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000813020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000813020100">drawBytesCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawBytesCallback(FxGraphics g, byte data[], int offset, int
        length, int x, int y, Rectangle optionRect, int options, int dx[],
        int dy[]);
</FONT></PRE>
<P><P>Draws an array of bytes when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <B>drawBytes</B> is called and an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. This method is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object to use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of bytes. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>offset</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset to use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>length</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the array used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The options used for this method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dy values. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020100">drawBytesCallback(FxGraphics,byte[],int,int,int,int,Rectangle,int,int[],int[])</A> in <A HREF="FxFont.htm">FxFont</A>.

<P><B>See Also:</B> <A HREF="FxFont.htm#com_000300080c020100">com.ms.fx.FxFont.drawBytesCallback</A>, <B>com.ms.fx.FxGraphics.drawBytes</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020200">drawCharsCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawCharsCallback(FxGraphics g, char data[], int offset, int
        length, int x, int y, Rectangle optionRect, int options, int dx[],
        int dy[]);
</FONT></PRE>
<P><P>Draws an array of characters when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810010400">drawChars</A> is called and an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of characters. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>offset</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>length</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the array used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the characters are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the characters are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The options used for this method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dy values. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="FxFont.htm#com_000300080c020200">com.ms.fx.FxFont.drawCharsCallback</A>, <A HREF="FxGraphics.htm#com_0003000810010400">com.ms.fx.FxGraphics.drawChars</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020300">drawOutlineChar</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawOutlineChar(FxGraphics g, int xOrig, int yOrig,
        GlyphOutline go);
</FONT></PRE>
<P><P>Draws an outline character. 

<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>xOrig</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location to draw the character. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>yOrig</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location to draw the character. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>go</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The outline character to draw. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020400">drawStringCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawStringCallback(FxGraphics g, String str, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[]);
</FONT></PRE>
<P><P>Draws a string when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810010f00">drawString</A> is called and an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>str</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string to draw. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The options used for this method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of dy values. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020400">drawStringCallback(FxGraphics,String,int,int,Rectangle,int,int[],int[])</A> in <A HREF="FxFont.htm">FxFont</A>.

<P><B>See Also:</B> <A HREF="FxFont.htm#com_000300080c020400">com.ms.fx.FxFont.drawStringCallback</A>, <A HREF="FxGraphics.htm#com_0003000810010f00">com.ms.fx.FxGraphics.drawString</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020500">getAttributeList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getAttributeList();
</FONT></PRE>
<P><P>Retrieves a list of the generic attributes that the font supports. 

<P><B>Return Value:</B> <P>Returns the list of attributes that the font supports. 

<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020500">getAttributeList()</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020600">getAttributeList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getAttributeList(String faceName);
</FONT></PRE>
<P><P>Retrieves a list of the attributes that the font supports. 
<P><B>Return Value:</B> <P>Returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>faceName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's name. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020600">getAttributeList(String)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020700">getFlagsVal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int getFlagsVal(String face, String attribute);
</FONT></PRE>
<P><P>Retrieves a value of the flags of the given face name. 
<P><B>Return Value:</B> <P>Returns 0. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>attribute</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string that contains the attributes of the font (for example, "Rotatable"). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020900">getFlagsVal(String,String)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020800">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Font getFont(String face, Vector v, int size);
</FONT></PRE>
<P><P>Retrieves a font if an exact match is made when given the face, vector, and size. 
<P><B>Return Value:</B> <P>Returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's face name ("Helvetica", for example). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A list of style names. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font (in points). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020a00">getFont(String,Vector,int)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020900">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Font getFont(String face, int style, int size, int flags);
</FONT></PRE>
<P><P>Retrieves a font if an exact match is made when given the face, style, size and flags. 

<P><B>Return Value:</B> <P>Returns a <B>Font</B> object that matches the given parameters. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's face name ("Helvetica", for example). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's style. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font (in points). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's flags. This parameter can be one or a combination of the following: <B>EMBEDDED</B>, <B>STRIKEOUT</B>, or <B>UNDERLINE</B>. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020b00">getFont(String,int,int,int)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020a00">getFontList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getFontList();
</FONT></PRE>
<P><P>Retrieves a list of the faces that the font supports. 
<P><B>Return Value:</B> <P>Returns null. 

<P><B>Remarks:</B> <P>Currently, this method is not implemented.
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020c00">getFontList()</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020b00">getGlyphOutlineCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public GlyphOutline getGlyphOutlineCallback(FxGraphics g, char ch);
</FONT></PRE>
<P><P>Retrieves a glyph outline of the character. 
<P><B>Note</B>  The callback methods are used internally and are not intended to be called by applications. They are made public so that derived classes may extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns a character <A HREF="GlyphOutline.htm">GlyphOutline</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object to use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ch</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The character, whose outline is requested. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020e00">getGlyphOutlineCallback(FxGraphics,char)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020c00">getStyleVal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int getStyleVal(String face, String attribute);
</FONT></PRE>
<P><P>Retrieves a value for the style flags of the given face name. 
<P><B>Return Value:</B> <P>Returns 0. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's name. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>attribute</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string that contains the attributes of the font (for example, "Rotatable"). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c020f00">getStyleVal(String,String)</A> in <A HREF="FxFont.htm">FxFont</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020d00">setBackgroundCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBackgroundCallback(Color c);
</FONT></PRE>
<P><P>Sets the text background color when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <B>setTextBackground</B> is called and an <A HREF="FxOutlineFont.htm">FxOutlineFont</A>(IntelliFont) object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The background color. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c021000">setBackgroundCallback(Color)</A> in <A HREF="FxFont.htm">FxFont</A>.

<P><B>See Also:</B> <B>com.ms.fx.FxGraphics.setTextBackground</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000813020e00">setColorCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColorCallback(Color c);
</FONT></PRE>
<P><P>Sets the foreground color of the font when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810012300">setColor</A> is called and an <A HREF="FxOutlineFont.htm">FxOutlineFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The foreground color. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="FxFont.htm#com_000300080c021100">setColorCallback(Color)</A> in <A HREF="FxFont.htm">FxFont</A>.

<P><B>See Also:</B> <A HREF="FxGraphics.htm#com_0003000810012300">java.awt.Graphics.setColor</A>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000813030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000813030001">backColor</A></B>
</DT><DD>The background color. 

</DD><DT><B><A NAME="com_0003000813030002">color</A></B>
</DT><DD>The foreground color. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
