<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class FxComponentImage</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxComponentImage.htm#com_0003000807010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxComponentImage.htm#com_0003000807020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxComponentImage.htm#com_0003000807030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="FxColor.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="FxComponentTexture.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class FxComponentImage</H2>
<PRE><FONT FACE="Courier" SIZE="2">public abstract class FxComponentImage extends <A HREF="FxStateConfigurableUIImage.htm">FxStateConfigurableUIImage</A>
{
  // Fields
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030001">CHECK_BOX</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030002">DOWN_ARROW</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030003">EXPAND_BOX</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030004">LEFT_ARROW</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030005">RADIO_BUTTON</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030006">RIGHT_ARROW</A>;
  public final static int <A HREF="FxComponentImage.htm#com_0003000807030007">UP_ARROW</A>;

  // Constructors
  public <A HREF="FxComponentImage.htm#com_0003000807010100">FxComponentImage</A>(int states[]);

  // Methods
  public void <A HREF="FxComponentImage.htm#com_0003000807020100">drawChar</A>(Graphics g, String s, int x, int y,
        int size);
  public static FxComponentImage <A HREF="FxComponentImage.htm#com_0003000807020200">getFactory</A>(int idx);
  public Image <A HREF="FxComponentImage.htm#com_0003000807020300">getImage</A>(Dimension size, int state);
  public Image <A HREF="FxComponentImage.htm#com_0003000807020400">getImage</A>(Dimension size, IUIComponent comp);
  public Image <A HREF="FxComponentImage.htm#com_0003000807020500">getImage</A>(Dimension size, int state, Color backColor,
        Color foreColor);
  public int <A HREF="FxComponentImage.htm#com_0003000807020600">getStateID</A>(int state);
  public Font <A HREF="FxComponentImage.htm#com_0003000807020700">getWidgetFont</A>(int c);
  public static void <A HREF="FxComponentImage.htm#com_0003000807020800">setFactory</A>(int idx, FxComponentImage factory);
}
</FONT></PRE>
<P>This class is a class factory that provides a set of consistent, cross-platform images that are used by the <A HREF="def_ui.htm">com.ms.ui</A> classes for Graphical User Interface(GUI) display components. The class provides a consistent set of images, regardless of the underlying platform, but can be configured to the underlying platform (if required). 
<P>The following example shows how to create an <B>FxComponentImage</B> class factory, and then associate it with a component image. 
<PRE><FONT FACE="Courier" SIZE="2">// Create an object that contains images for the 
various states of a 
// check box component image. 
int states[] = { FxStateConfigurableUIImage.CHECKED,
                 FxStateConfigurableUIImage.INDETERMINATE };
FxComponentImage fxci = new FxComponentImage(states);

// You must specify what type of component image you want
// to create the class factory for, with the <A HREF="FxComponentImage.htm#com_0003000807020800">setFactory</A> method.
fxci.setFactory (FxComponentImage.CHECK_BOX, this);
</FONT></PRE>
<P>By default, the <B>FxComponentImage</B> class creates seven kinds of image class factories. The following table lists these factory styles. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030005">RADIO_BUTTON</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030001">CHECK_BOX</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030003">EXPAND_BOX</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030004">LEFT_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030006">RIGHT_ARROW</A> 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030007">UP_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030002">DOWN_ARROW</A> 
</FONT></TD>
</TR>
</TABLE>
<P>The <B>FxComponentImage</B> objects provide a set of state-dependant images for each component image, depending on what states the image may have. For example, a <A HREF="FxComponentImage.htm#com_0003000807030004">LEFT_ARROW</A> component image cannot have an <A HREF="FxStateConfigurableUIImage.htm#com_0003000817030004">INDETERMINATE</A> state, so an image for this state is not provided in the <B>LEFT_ARROW</B> class factory. 
<P>You can use the static <A HREF="FxComponentImage.htm#com_0003000807020200">getFactory</A> method to get the default class factory for an image that the <B>FxComponentImage</B> class provides. You can use the <A HREF="FxComponentImage.htm#com_0003000807020300">getImage</A> method to retrieve the image for a specified state. The following example shows how to create a default factory for a <A HREF="FxComponentImage.htm#com_0003000807030001">CHECK_BOX</A> image. 
<PRE><FONT FACE="Courier" SIZE="2">FxToolkit.getSystemInterface() ; // Initialize <B>FxToolkit</B>.

// Retrieve the default class factory for CHECK_BOX provided by FxComponentImage.
FxComponentImage fxi = FxComponent.getFactory(FxComponentImage.CHECK_BOX);

// Retrieve the image with dimension 20x20 of a selected check box.
Image checkedImg = 
     fxi.getImage(new Dimension(20, 20), FxStateConfigurableUIImage.CHECKED);

// This will draw a selected check box at (50,50) with dimension 20x20.
g.drawImage( checkedImg, 50, 50, this );
</FONT></PRE>
<PRE><FONT FACE="Courier" SIZE="2"><A HREF="FxStateConfigurableImage.htm">FxStateConfigurableImage</A>
  |
  +--<A HREF="FxStateConfigurableUIImage.htm">FxStateConfigurableUIImage</A>
    |
    +--<B>FxComponentImage</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003000807010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000807010100">FxComponentImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxComponentImage(int states[]);
</FONT></PRE>
<P><P>Creates an <A HREF="FxComponentImage.htm">FxComponentImage</A> class factory using the specified array of component states. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>states</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component states. This can be one or an array of the following states, depending on the image. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030003">HOT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030005">PRESSED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030001">CHECKED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030004">INDETERMINATE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030002">ENABLED</A>
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000807020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000807020100">drawChar</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void drawChar(Graphics g, String s, int x, int y, int size);
</FONT></PRE>
<P><P>Draws a character using the graphics object's current font and color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object to use. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string to draw. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the string should be drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the string should be drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the character (in points). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020200">getFactory</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static FxComponentImage getFactory(int idx);
</FONT></PRE>
<P><P>Retrieves the <A HREF="FxComponentImage.htm">FxComponentImage</A> object associated with the component image at the specified index. 

<P><B>Return Value:</B> <P>Returns the texture factory associated with the component image. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the component image. This can be any one of the following images. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030005">RADIO_BUTTON</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030001">CHECK_BOX</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030003">EXPAND_BOX</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030004">LEFT_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030006">RIGHT_ARROW</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030007">UP_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030002">DOWN_ARROW</A> 
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>ArrayIndexOutOfBoundsException</B>
 if the index of the component image <I>idx</I> is not valid. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020300">getImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image getImage(Dimension size, int state);
</FONT></PRE>
<P><P>Retrieves a system image with the specified <B>Dimension</B> and state. 

<P><B>Return Value:</B> <P>Returns the <B>Image</B> object that corresponds to the specified state. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the image. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>state</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image is associated with a specific state. This may be one of the following states. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030003">HOT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030005">PRESSED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030001">CHECKED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030004">INDETERMINATE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030002">ENABLED</A>
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020400">getImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image getImage(Dimension size, IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves a system image from a component, with the specified <B>Dimension</B>. The image retrieved depends on the foreground, background, and state of the component. 

<P><B>Return Value:</B> <P>Returns the requested system image. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image size. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to obtain the image from. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020500">getImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image getImage(Dimension size, int state, Color backColor,
        Color foreColor);
</FONT></PRE>
<P><P>Retrieves a system image with the specified <B>Dimension</B>, state, and user-specified colors. 

<P><B>Return Value:</B> <P>Returns the <B>Image</B> object that corresponds to the specified state. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the image. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>state</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image is associated with a specific state. This may be one of the following states. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030003">HOT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030005">PRESSED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030001">CHECKED</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030004">INDETERMINATE</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxStateConfigurableUIImage.htm#com_0003000817030002">ENABLED</A>
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>backColor</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The specified background color of the image. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>foreColor</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The specified foreground color of the image. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020600">getStateID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getStateID(int state);
</FONT></PRE>
<P><P>Retrieves the state's array index for the specified state. This method is used by the <A HREF="FxComponentImage.htm#com_0003000807020300">getImage</A> method. 

<P><B>Return Value:</B> <P>Returns either the <B>HOT</B> or <B>ENABLED</B> state identifier, or a combination of the two. This method is used specifically for these two states, and other states are masked in the return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>state</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The state to retrieve the array index for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020700">getWidgetFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Font getWidgetFont(int c);
</FONT></PRE>
<P><P>Retrieves the font the <A HREF="FxComponentImage.htm">FxComponentImage</A> image set uses, if available, to cleanly draw scalable images. If the font is not available, the method calls back to the class (by default, there is no widget font except for the system defined images, which use the Marlett font). 

<P><B>Return Value:</B> <P>Returns the font that the image set uses. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the requested font. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000807020800">setFactory</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static void setFactory(int idx, FxComponentImage factory);
</FONT></PRE>
<P><P>Sets an <A HREF="FxComponentImage.htm">FxComponentImage</A> factory for the specified component image. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component image or images to set the factory for. This can be any one of the following images. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030005">RADIO_BUTTON</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030001">CHECK_BOX</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030003">EXPAND_BOX</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030004">LEFT_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030006">RIGHT_ARROW</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030007">UP_ARROW</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="FxComponentImage.htm#com_0003000807030002">DOWN_ARROW</A> 
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>factory</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="FxComponentImage.htm">FxComponentImage</A> class factory to associate with the component image. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>ArrayIndexOutOfBoundsException</B>
 if the index of the component image <I>idx</I> is not valid. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000807030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000807030001">CHECK_BOX</A></B>
</DT><DD>A check box image. 

</DD><DT><B><A NAME="com_0003000807030002">DOWN_ARROW</A></B>
</DT><DD>A down-arrow glyph used in a scroll bar or combo box drop-down button. 

</DD><DT><B><A NAME="com_0003000807030003">EXPAND_BOX</A></B>
</DT><DD>An expanding box image. 

</DD><DT><B><A NAME="com_0003000807030004">LEFT_ARROW</A></B>
</DT><DD>A left-arrow glyph used in horizontal scroll bars. 

</DD><DT><B><A NAME="com_0003000807030005">RADIO_BUTTON</A></B>
</DT><DD>A radio button image. 

</DD><DT><B><A NAME="com_0003000807030006">RIGHT_ARROW</A></B>
</DT><DD>A right-arrow glyph used in horizontal scroll bars. 

</DD><DT><B><A NAME="com_0003000807030007">UP_ARROW</A></B>
</DT><DD>An up-arrow glyph used in a scroll bar or combo box drop-down button. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
