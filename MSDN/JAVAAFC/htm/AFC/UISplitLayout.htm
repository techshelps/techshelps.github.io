<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UISplitLayout</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UISplitLayout.htm#com_0003001174010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UISplitLayout.htm#com_0003001174020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UISplitLayout.htm#com_0003001174030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UISpinnerEdit.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UISplitViewer.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UISplitLayout</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UISplitLayout extends <A HREF="UILayoutManager.htm">UILayoutManager</A>
{
  // Fields
  public static final int <A HREF="UISplitLayout.htm#com_0003001174030001">HORIZONTAL</A>;

  // Constructors
  public <A HREF="UISplitLayout.htm#com_0003001174010100">UISplitLayout</A>();
  public <A HREF="UISplitLayout.htm#com_0003001174010200">UISplitLayout</A>(int flags);
  public <A HREF="UISplitLayout.htm#com_0003001174010300">UISplitLayout</A>(int flags, int pos);

  // Methods
  public void <A HREF="UISplitLayout.htm#com_0003001174020100">addLayoutComponent</A>(IUIContainer parent,
        IUIComponent comp, Object constraints);
  public Dimension <A HREF="UISplitLayout.htm#com_0003001174020200">adjustLayoutSize</A>(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp,
        Dimension oldSize, Dimension newSize);
  public IUIComponent <A HREF="UISplitLayout.htm#com_0003001174020300">getComponent</A>(IUIContainer parent,
        Object constraints);
  public Dimension <A HREF="UISplitLayout.htm#com_0003001174020400">getMinimumSize</A>(IUIContainer target);
  public int <A HREF="UISplitLayout.htm#com_0003001174020500">getPos</A>();
  public Dimension <A HREF="UISplitLayout.htm#com_0003001174020600">getPreferredSize</A>(IUIContainer target);
  public boolean <A HREF="UISplitLayout.htm#com_0003001174020700">isOverlapping</A>();
  public void <A HREF="UISplitLayout.htm#com_0003001174020800">layout</A>(IUIContainer target, Rectangle bounds);
  public IUIComponent <A HREF="UISplitLayout.htm#com_0003001174020900">navigate</A>(IUIContainer cont,
        IUIComponent comp, int dir, boolean keyable);
  public void <A HREF="UISplitLayout.htm#com_0003001174020a00">removeLayoutComponent</A>(IUIContainer target,
        IUIComponent comp);
  public void <A HREF="UISplitLayout.htm#com_0003001174020b00">setPos</A>(int pos);
}
</FONT></PRE>
<P>This class implements a layout manager for a split viewer control. <A HREF="UISplitViewer.htm">UISplitViewer</A> uses <B>UISplitLayout</B> for its default layout manager. <B>UISplitLayout</B> creates either a vertical split (the default) or a horizontal split, and manages the following layout components. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Component
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"nw"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component in the top (north) pane if the split is horizontal, or the left (west) pane if the split is vertical. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"se"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component in the bottom (south) pane if the split is horizontal, or the right (east) pane if the split is vertical. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Use "0" for a vertical split, <A HREF="UISplitLayout.htm#com_0003001174030001">HORIZONTAL</A> for a horizontal split.
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that divides the two panes. 
</FONT></TD>
</TR>
</TABLE>
<P><B>UISplitLayout</B> manages the split position for the split viewer control. A negative split position means the height or width of the "nw" component is a percentage of the split viewer's total height or width. A positive split position specifies the height or width as an absolute value, in pixels. You can initially set the split position in the constructor (the default value is -50), as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Specify a horizontal split and a split position of 150. 
// This means the "nw" component will be 150 pixels in height.
// The remainder of the split viewer's content area will be 
// filled with the splitter component and the "se" component.
UISplitLayout sl = new UISplitLayout(UISplitLayout.HORIZONTAL, 150);
</FONT></PRE>
<P><B>UISplitLayout</B> also defines the <A HREF="UISplitLayout.htm#com_0003001174020500">getPos</A> and <A HREF="UISplitLayout.htm#com_0003001174020b00">setPos</A> methods to retrieve and set the split position. The split position cannot be less than -100. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UILayoutManager.htm">UILayoutManager</A>
  |
  +--<B>UISplitLayout</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001174010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001174010100">UISplitLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UISplitLayout();
</FONT></PRE>
<P><P>Creates a split layout manager. 
<P><B>Remarks:</B> <P>By default, the layout manager uses a vertical split and an initial split position of -50. For more information about split positions, see the <A HREF="UISplitLayout.htm">UISplitLayout</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174010200">UISplitLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UISplitLayout(int flags);
</FONT></PRE>
<P><P>Creates a split layout manager with the specified style flags. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the layout manager. Possible values include <A HREF="UISplitLayout.htm#com_0003001174030001">HORIZONTAL</A> for a horizontal split, or 0 for a vertical split. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the initial split position is -50. For more information about split positions, see the <A HREF="UISplitLayout.htm">UISplitLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174010300">UISplitLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UISplitLayout(int flags, int pos);
</FONT></PRE>
<P><P>Creates a split layout manager with the specified style flags and split position. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the layout manager. Possible values include <A HREF="UISplitLayout.htm#com_0003001174030001">HORIZONTAL</A> for a horizontal split, or 0 for a vertical split. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The initial split position. A negative split position means the height or width of the "nw" component is a percentage of the split viewer's total height or width. A positive split position specifies the height or width as an absolute value in pixels. For more information, see the <A HREF="UISplitLayout.htm">UISplitLayout</A> overview. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified or the split position was less than -100. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001174020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001174020100">addLayoutComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addLayoutComponent(IUIContainer parent, IUIComponent comp,
        Object constraints);
</FONT></PRE>
<P><P>Adds the specified component to the container, according to the specified constraints. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Identifies where the component will be added. You can pass a <B>String</B> or <B>Integer</B> value, as described in the Remarks section. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>add</B> method. The following table lists possible values for the <I>constraints</I> parameter. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>String value
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Integer value
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Location of the component
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"nw"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The top (north) or left (west) pane of the container.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"se"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bottom (south) or right (east) pane of the container.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"splitter"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Between the two panes.
</FONT></TD>
</TR>
</TABLE>
<P><B>Note</B>  The <B>String</B> values are not case-sensitive. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010100">addLayoutComponent(IUIContainer,IUIComponent,Object)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined constraint was specified. 


<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020300">getComponent</A>, <A HREF="UISplitLayout.htm#com_0003001174020a00">removeLayoutComponent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020200">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension adjustLayoutSize(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp, Dimension oldSize,
        Dimension newSize);
</FONT></PRE>
<P><P>Called to adjust the layout size of the specified component in the specified container. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the new preferred size of the container. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldParentSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the container. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being sized. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the component. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010200">adjustLayoutSize(IUIContainer,Dimension,IUIComponent,Dimension,Dimension)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020300">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(IUIContainer parent, Object constraints);
</FONT></PRE>
<P><P>Retrieves a component from the container, according to the specified constraints. 
<P><B>Return Value:</B> <P>Returns the specified component, if found; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Identifies the component to be retrieved. You can pass a <B>String</B> or <B>Integer</B> value, as described in the Remarks section. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The following table lists possible values for the <I>constraints</I> parameter. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>String value
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Integer value
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Component
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"nw"
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">0
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component in the top (north) or left (west) pane.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"se" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">1
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component in the bottom (south) or right (east) pane.
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"splitter" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">2
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that divides the two panes.
</FONT></TD>
</TR>
</TABLE>
<P><B>Note</B>  The <B>String</B> values are not case-sensitive. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010500">getComponent(IUIContainer,Object)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined constraint was specified. 


<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020100">addLayoutComponent</A>, <A HREF="UISplitLayout.htm#com_0003001174020a00">removeLayoutComponent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020400">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer target);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the layout manager has a horizontal split, the height of the returned <B>Dimension</B> object is the sum of the minimum heights of the "nw", "se", and splitter components. The <B>Dimension</B> object's width is the largest of the minimum widths of each component. 
<P>Similarly, if the layout manager's split is vertical, the <B>Dimension</B> object's width is the sum of the minimum widths of the components. The height is the largest of the minimum heights of each component. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010800">getMinimumSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020600">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020500">getPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPos();
</FONT></PRE>
<P><P>Retrieves the current split position. 
<P><B>Return Value:</B> <P>Returns the split position used by the layout manager. 

<P><B>Remarks:</B> <P>For more information about split positions, see the <A HREF="UISplitLayout.htm">UISplitLayout</A> overview. 
<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020b00">setPos</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020600">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer target);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the layout manager has a horizontal split, the height of the returned <B>Dimension</B> object is the sum of the preferred heights of the "nw", "se", and splitter components. The <B>Dimension</B> object's width is the largest of the preferred widths of each component. 
<P>Similarly, if the layout manager's split is vertical, the <B>Dimension</B> object's width is the sum of the preferred widths of the components. The height is the largest of the preferred heights of each component. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010900">getPreferredSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020400">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020700">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>This method simply returns false, indicating that the <A HREF="UISplitLayout.htm">UISplitLayout</A> lays out its components such that they never overlap. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010d00">isOverlapping()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020800">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout(IUIContainer target, Rectangle bounds);
</FONT></PRE>
<P><P>Lays out the components in the specified container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components being laid out. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle in which to lay out the components 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the layout manager has a horizontal split, the splitter component's width is the bounding rectangle width, and the height is 4 pixels. The location of the splitter component depends on the layout manager's current split position. The "nw" and "se" components lie above and below the splitter component, respectively. 
<P>Similarly, if the layout manager's split is vertical, the splitter component's height is the bounding rectangle height, and the width is 4 pixels. The "nw" and "se" components lie to the left and to the right, respectively, of the splitter component. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010f00">layout(IUIContainer,Rectangle)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020900">navigate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent navigate(IUIContainer cont, IUIComponent comp, int dir,
        boolean keyable);
</FONT></PRE>
<P><P>Navigates from the specified component to another component in the specified direction. 
<P><B>Return Value:</B> <P>Returns null, indicating no component can be navigated to. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cont</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container where the navigation is occurring. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to navigate from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the <B>NAVDIR</B> values defined in the <A HREF="IUIAccessible.htm">IUIAccessible</A> interface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, only components that are able to receive keyboard input can be navigated to; otherwise, all components can be navigated to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, this method is used to handle keyboard navigation in the container. However, <B>UISplitLayout</B> does not provide this functionality. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011000">navigate(IUIContainer,IUIComponent,int,boolean)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020a00">removeLayoutComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeLayoutComponent(IUIContainer target, IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>remove</B> method. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011200">removeLayoutComponent(IUIContainer,IUIComponent)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020100">addLayoutComponent</A>, <A HREF="UISplitLayout.htm#com_0003001174020300">getComponent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001174020b00">setPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPos(int pos);
</FONT></PRE>
<P><P>Sets the current split position. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The split position to be used by the layout manager. For more information, see the <A HREF="UISplitLayout.htm">UISplitLayout</A> overview. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the split position was less than -100. 


<P><B>See Also:</B> <A HREF="UISplitLayout.htm#com_0003001174020500">getPos</A>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001174030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003001174030001">HORIZONTAL</A></B>
</DT><DD>A horizontal layout style. The split layout manager creates a horizontal split, where the container consists of top (north) and bottom (south) panes. The default style is a vertical split with left (west) and right (east) panes. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
