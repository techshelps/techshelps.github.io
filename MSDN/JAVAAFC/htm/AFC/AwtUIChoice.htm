<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class AwtUIChoice</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIChoice.htm#com_000300110a010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIChoice.htm#com_000300110a020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUICheckButtonBeanInfo.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUIChoiceBeanInfo.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class AwtUIChoice</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class AwtUIChoice extends <A HREF="AwtUIControl.htm">AwtUIControl</A> implements 
            <A HREF="IAwtUIItemSelectable.htm">IAwtUIItemSelectable</A>
{
  // Constructors
  public <A HREF="AwtUIChoice.htm#com_000300110a010100">AwtUIChoice</A>();

  // Methods
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a020100">add</A>(IUIComponent comp);
  public Component <A HREF="AwtUIChoice.htm#com_000300110a020200">add</A>(Component comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020300">addItem</A>(String s);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020400">addItemListener</A>(ItemListener l);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020500">addSelectedIndex</A>(int index);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020600">addSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020700">addSelectedIndices</A>(int indices[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020800">addSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020900">addSelectedItem</A>(IUIComponent comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020a00">addSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020b00">addSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a020c00">addSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a020d00">addString</A>(String s);
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a020e00">getAnchorItem</A>();
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a020f00">getBase</A>();
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a021000">getExtensionItem</A>();
  public int <A HREF="AwtUIChoice.htm#com_000300110a021100">getSelectedIndex</A>();
  public int[] <A HREF="AwtUIChoice.htm#com_000300110a021200">getSelectedIndices</A>();
  public IUIComponent <A HREF="AwtUIChoice.htm#com_000300110a021300">getSelectedItem</A>();
  public IUIComponent[] <A HREF="AwtUIChoice.htm#com_000300110a021400">getSelectedItems</A>();
  public Object[] <A HREF="AwtUIChoice.htm#com_000300110a021500">getSelectedObjects</A>();
  public int <A HREF="AwtUIChoice.htm#com_000300110a021600">getSelectionMode</A>();
  public int <A HREF="AwtUIChoice.htm#com_000300110a021700">getStyle</A>();
  public String <A HREF="AwtUIChoice.htm#com_000300110a021800">getValueText</A>();
  protected void <A HREF="AwtUIChoice.htm#com_000300110a021900">processHostEvent</A>(AWTEvent e);
  protected void <A HREF="AwtUIChoice.htm#com_000300110a021a00">processItemEvent</A>(ItemEvent e);
  public synchronized void <A HREF="AwtUIChoice.htm#com_000300110a021b00">removeItemListener</A>(ItemListener l);
  public void <A HREF="AwtUIChoice.htm#com_000300110a021c00">removeSelectedIndex</A>(int index);
  public void <A HREF="AwtUIChoice.htm#com_000300110a021d00">removeSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a021e00">removeSelectedIndices</A>(int indices[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a021f00">removeSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022000">removeSelectedItem</A>(IUIComponent comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022100">removeSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022200">removeSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022300">removeSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022400">setAnchorItem</A>(IUIComponent comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022500">setExtensionItem</A>(IUIComponent comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022600">setSelectedIndex</A>(int index);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022700">setSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022800">setSelectedIndices</A>(int indices[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022900">setSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022a00">setSelectedItem</A>(IUIComponent comp);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022b00">setSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022c00">setSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022d00">setSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022e00">setSelectionMode</A>(int selMode);
  public void <A HREF="AwtUIChoice.htm#com_000300110a022f00">setStyle</A>(int style);
  public void <A HREF="AwtUIChoice.htm#com_000300110a023000">setValueText</A>(String s);
}
</FONT></PRE>
<P>This class implements the functionality of a <A HREF="UIChoice.htm">UIChoice</A> object in an AWT-based control. An <B>AwtUIChoice</B> control is an <A HREF="AwtUIHost.htm">AwtUIHost</A> component whose associated root container holds a <B>UIChoice</B> object. By hosting this object, an <B>AwtUIChoice</B> control integrates AFC with AWT. Although an <B>AwtUIChoice</B> control is fully compatible with AWT, a <B>UIChoice</B> control is optimized for performance and size. 
<P><B>Note</B>  Only <A HREF="IUISelector.htm#com_0003001195020004">IUISelector.SINGLESELECT</A> mode is supported in <A HREF="UIChoice.htm">UIChoice</A>. 
<PRE><FONT FACE="Courier" SIZE="2"><B>Panel</B>
  |
  +--<A HREF="AwtUIHost.htm">AwtUIHost</A>
    |
    +--<A HREF="AwtUIControl.htm">AwtUIControl</A>
      |
      +--<B>AwtUIChoice</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300110a010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300110a010100">AwtUIChoice</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIChoice();
</FONT></PRE>
<P><P>Creates an empty AWT-based choice control. 
<P><B>Remarks:</B> <P>Call <A HREF="AwtUIChoice.htm#com_000300110a020100">add</A>, <A HREF="AwtUIChoice.htm#com_000300110a020300">addItem</A>, or <A HREF="AwtUIChoice.htm#com_000300110a020d00">addString</A> to add items to the control's pop-up list. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300110a020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300110a020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified UI component to the end of the control's pop-up list. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The UI component to be added to the control. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="AwtUIControl.htm#com_000300110d020100">add(IUIComponent)</A> in <A HREF="AwtUIControl.htm">AwtUIControl</A>.

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020d00">addString</A>, <A HREF="AwtUIChoice.htm#com_000300110a020300">addItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020200">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Component add(Component comp);
</FONT></PRE>
<P><P>Adds the specified AwtUI component to the end of the control's pop-up list. Pure AWT components cannot be added. 

<P><B>Return Value:</B> <P>Returns the control itself. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The AwtUI component to be added to the control. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="AwtUIControl.htm#com_000300110d020600">add(Component)</A> in <A HREF="AwtUIControl.htm">AwtUIControl</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a pure AWT component was added. 


<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020d00">addString</A>, <A HREF="AwtUIChoice.htm#com_000300110a020300">addItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020300">addItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addItem(String s);
</FONT></PRE>
<P><P>Adds the specified text to the end of the control's pop-up list. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added to the control. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020100">add</A>, <A HREF="AwtUIChoice.htm#com_000300110a020d00">addString</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020400">addItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addItemListener(ItemListener l);
</FONT></PRE>
<P><P>Adds the specified item listener. The listener receives all item events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021b00">removeItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020500">addSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndex(int index);
</FONT></PRE>
<P><P>Selects the component at the specified index, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021c00">removeSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020600">addSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Selects the component at the specified index, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021c00">removeSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020700">addSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Selects the components at the specified indices, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021e00">removeSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020800">addSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Selects the components at the specified indices without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021e00">removeSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020900">addSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Selects the specified component without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be selected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022000">removeSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020a00">addSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Selects the specified component without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022000">removeSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020b00">addSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Selects the specified components without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the components to be selected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022200">removeSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020c00">addSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Selects the specified components without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the component to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022200">removeSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020d00">addString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent addString(String s);
</FONT></PRE>
<P><P>Adds the specified text to the end of the control's pop-up list. 

<P><B>Return Value:</B> <P>Returns the text component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added to the control. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020100">add</A>, <A HREF="AwtUIChoice.htm#com_000300110a020300">addItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020e00">getAnchorItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getAnchorItem();
</FONT></PRE>
<P><P>Retrieves the component that is the current anchor in extend select mode by calling <A HREF="UIChoice.htm#com_000300113e020f00">UIChoice.getAnchorItem</A>. 

<P><B>Return Value:</B> <P>Returns the component that is the anchor. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022400">setAnchorItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a020f00">getBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getBase();
</FONT></PRE>
<P><P>Retrieves the UI component that the control is based on. 
<P><B>Return Value:</B> <P>Returns the <A HREF="UIChoice.htm">UIChoice</A> object associated with the control. 

<P><B>Remarks:</B> <P>When the AWT-based control is first created, it is associated with a <A HREF="UIChoice.htm">UIChoice</A> object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021000">getExtensionItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getExtensionItem();
</FONT></PRE>
<P><P>Retrieves the item to which a selection, in <B>EXTENDEDSELECT</B> mode, last extended from the anchor. This method calls <A HREF="UIChoice.htm#com_000300113e021000">UIChoice.getExtensionItem</A>. 

<P><B>Return Value:</B> <P>Returns the extension item. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022500">setExtensionItem</A>, <A HREF="UIChoice.htm#com_000300113e021000">com.ms.ui.UIChoice.getExtensionItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021100">getSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSelectedIndex();
</FONT></PRE>
<P><P>Retrieves the index of the choice control's currently selected item. 

<P><B>Return Value:</B> <P>Returns the index of the selected component. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022600">setSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021200">getSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int[] getSelectedIndices();
</FONT></PRE>
<P><P>Retrieves the zero-based indices of all currently selected items. 

<P><B>Return Value:</B> <P>Returns an array of the indices of the selected items, if an item is selected; otherwise, returns -1. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022800">setSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021300">getSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getSelectedItem();
</FONT></PRE>
<P><P>Retrieves the control's currently selected item. 

<P><B>Return Value:</B> <P>Returns the selected component. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022a00">setSelectedItem</A>, <B>setSelectedItem</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021400">getSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent[] getSelectedItems();
</FONT></PRE>
<P><P>Retrieves all currently selected items. 

<P><B>Return Value:</B> <P>Returns an array of the selected components, if a component is selected; otherwise, returns null. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022c00">setSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021500">getSelectedObjects</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Object[] getSelectedObjects();
</FONT></PRE>
<P><P>Retrieves the selected items in the control. 
<P><B>Return Value:</B> <P>Returns the currently selected item. 

<P><B>Remarks:</B> <P>This method implements <B>getSelectedObjects</B> in the <A HREF="IAwtUIItemSelectable.htm">IAwtUIItemSelectable</A> interface. Only one item in the control can be selected at a time. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021600">getSelectionMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSelectionMode();
</FONT></PRE>
<P><P>Retrieves the current selection mode. 

<P><B>Return Value:</B> <P>Returns the current mode. 

<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a022e00">setSelectionMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021700">getStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getStyle();
</FONT></PRE>
<P><P>Retrieves the current style of the control. 

<P><B>Return Value:</B> <P>Returns an integer containing the current style setting. For a list of possible values, see <A HREF="AwtUIChoice.htm#com_000300110a022f00">setStyle</A>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021800">getValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getValueText();
</FONT></PRE>
<P><P>Retrieves the current value text. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string containing the current text value. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a023000">setValueText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021900">processHostEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processHostEvent(AWTEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has been registered through a call to addXXXListener. Depending on the type of event, <B>processHostEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">item event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIChoice.htm#com_000300110a021a00">processItemEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">component event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022100">processComponentEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022200">processContainerEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022400">processFocusEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022600">processKeyEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022700">processMouseEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022800">processMouseMotionEvent</A> (inherited through <A HREF="AwtUIHost.htm">AwtUIHost</A>)
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processHostEvent</B>, call the super method <B>processHostEvent</B> to ensure the default event processing continues normally. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021a00">processItemEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processItemEvent(ItemEvent e);
</FONT></PRE>
<P><P>Processes item events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIChoice.htm#com_000300110a021900">processHostEvent</A> and dispatches the event to a registered item listener. When overriding this method, call the super method <B>processItemEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020400">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021b00">removeItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeItemListener(ItemListener l);
</FONT></PRE>
<P><P>Removes the specified item listener. The listener no longer receives the control's item events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020400">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021c00">removeSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndex(int index);
</FONT></PRE>
<P><P>Deselects the component at the specified index without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be deselected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020500">addSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021d00">removeSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Deselects the component at the specified index without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020500">addSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021e00">removeSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Deselects the components at the specified indices without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be deselected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020700">addSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a021f00">removeSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Deselects the components at the specified indices without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020700">addSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022000">removeSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Deselects the specified component without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be deselected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020900">addSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022100">removeSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Deselects the specified component without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020900">addSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022200">removeSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Deselects the specified components without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the components to be deselected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020b00">addSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022300">removeSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Deselects the specified components without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the component to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020b00">addSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022400">setAnchorItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAnchorItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the item used as an anchor in <B>EXTENDSELECT</B> mode by calling <A HREF="UIChoice.htm#com_000300113e022e00">UIChoice.setAnchorItem</A>. You cannot set the anchor item to null. 
<P><B>Note</B>  Resetting the anchor automatically sets the current extension item to null. If the extension item is intended to set both to specific items, call <B>setAnchorItem</B>, followed by <A HREF="AwtUIChoice.htm#com_000300110a022500">setExtensionItem</A>. 
<P>Setting the anchor in an <A HREF="IUISelector.htm">IUISelector</A> other than the outermost position, has no effect. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that will be the new anchor. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the component is not a child of the selector, or if the component is null. 


<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a020e00">getAnchorItem</A>, <A HREF="UIChoice.htm#com_000300113e022e00">com.ms.ui.UIChoice.setAnchorItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022500">setExtensionItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setExtensionItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the item to which a selection, in <B>EXTENDEDSELECT</B> mode, extends from an anchor. 
<P><B>Note</B>  This method calls <A HREF="UIChoice.htm#com_000300113e022f00">UIChoice.setExtensionItem</A> . 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that will be the new extension item. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if comp is not a child of the selector. 


<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021000">getExtensionItem</A>, <A HREF="UIChoice.htm#com_000300113e022f00">com.ms.ui.UIChoice.setExtensionItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022600">setSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndex(int index);
</FONT></PRE>
<P><P>Sets the selection to the component at the specified index. By default, a list select event is not generated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021100">getSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022700">setSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the component at the specified index, and optionally generates a list select event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, a list select event will be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021100">getSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022800">setSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Sets the selection to the components at the specified indices. By default, list select events are not gerenated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021200">getSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022900">setSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the components at the specified indices, and optionally generates list select events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021200">getSelectedIndices</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022a00">setSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the control's currently selected item. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be selected. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021300">getSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022b00">setSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the specified component, and optionally generates a list select event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, a list select event will be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021300">getSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022c00">setSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Sets the selection to the specified components. By default, list select events are not generated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the items to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021400">getSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022d00">setSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the specified components, and optionally generates list select events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection. 
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021400">getSelectedItems</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022e00">setSelectionMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectionMode(int selMode);
</FONT></PRE>
<P><P>Sets the current selection mode. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>selMode</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The selection mode. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a mode other than <A HREF="IUISelector.htm#com_0003001195020004">IUISelector.SINGLESELECT</A> is used. 


<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021600">getSelectionMode</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a022f00">setStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setStyle(int style);
</FONT></PRE>
<P><P>Sets the current style for the control. To restore the default style, call <B>setStyle(0)</B>. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the control. You can pass <B>THICK</B> to specify using a thick border around the choice and its elements. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110a023000">setValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValueText(String s);
</FONT></PRE>
<P><P>Sets the current text value. This method searches through the items in the choice list using the given string as a prefix. It attempts to find a matching item. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string to set. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIChoice.htm#com_000300110a021800">getValueText</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
