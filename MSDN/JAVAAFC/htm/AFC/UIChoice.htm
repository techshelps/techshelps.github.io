<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIChoice</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIChoice.htm#com_000300113e010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIChoice.htm#com_000300113e020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIChoice.htm#com_000300113e030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UICheckGroup.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIColorDialog.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIChoice</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIChoice extends <A HREF="UIPanel.htm">UIPanel</A> implements <A HREF="IUISelector.htm">IUISelector</A>
{
  // Fields
  public static final int <A HREF="UIChoice.htm#com_000300113e030001">THICK</A>;

  // Constructors
  public <A HREF="UIChoice.htm#com_000300113e010100">UIChoice</A>();

  // Methods
  public boolean <A HREF="UIChoice.htm#com_000300113e020100">action</A>(Event e, Object obj);
  public IUIComponent <A HREF="UIChoice.htm#com_000300113e020200">add</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e020300">addActionListener</A>(IUIActionListener l);
  public synchronized void <A HREF="UIChoice.htm#com_000300113e020400">addItemListener</A>(IUIItemListener l);
  public void <A HREF="UIChoice.htm#com_000300113e020500">addNotify</A>();
  public void <A HREF="UIChoice.htm#com_000300113e020600">addSelectedIndex</A>(int index);
  public void <A HREF="UIChoice.htm#com_000300113e020700">addSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e020800">addSelectedIndices</A>(int indices[]);
  public void <A HREF="UIChoice.htm#com_000300113e020900">addSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e020a00">addSelectedItem</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e020b00">addSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e020c00">addSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="UIChoice.htm#com_000300113e020d00">addSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public IUIComponent <A HREF="UIChoice.htm#com_000300113e020e00">addString</A>(String s);
  public IUIComponent <A HREF="UIChoice.htm#com_000300113e020f00">getAnchorItem</A>();
  public IUIComponent <A HREF="UIChoice.htm#com_000300113e021000">getExtensionItem</A>();
  public UIMenuList <A HREF="UIChoice.htm#com_000300113e021100">getMenu</A>();
  public Dimension <A HREF="UIChoice.htm#com_000300113e021200">getPreferredSize</A>();
  public int <A HREF="UIChoice.htm#com_000300113e021300">getRoleCode</A>();
  public int[] <A HREF="UIChoice.htm#com_000300113e021500">getSelectedIndices</A>();
  public IUIComponent <A HREF="UIChoice.htm#com_000300113e021600">getSelectedItem</A>();
  public IUIComponent[] <A HREF="UIChoice.htm#com_000300113e021700">getSelectedItems</A>();
  public int <A HREF="UIChoice.htm#com_000300113e021800">getSelectionMode</A>();
  public int <A HREF="UIChoice.htm#com_000300113e021900">getStyle</A>();
  public String <A HREF="UIChoice.htm#com_000300113e021a00">getValueText</A>();
  public boolean <A HREF="UIChoice.htm#com_000300113e021b00">handleEvent</A>(Event e);
  public boolean <A HREF="UIChoice.htm#com_000300113e021c00">keyDown</A>(Event e, int key);
  public void <A HREF="UIChoice.htm#com_000300113e021d00">layout</A>();
  public boolean <A HREF="UIChoice.htm#com_000300113e021e00">mouseDown</A>(Event e, int x, int y);
  public boolean <A HREF="UIChoice.htm#com_000300113e021f00">postEvent</A>(Event e);
  protected void <A HREF="UIChoice.htm#com_000300113e022000">processEvent</A>(UIEvent e);
  protected void <A HREF="UIChoice.htm#com_000300113e022100">processItemEvent</A>(UIItemEvent e);
  public void <A HREF="UIChoice.htm#com_000300113e022200">remove</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e022300">removeActionListener</A>(IUIActionListener l);
  public synchronized void <A HREF="UIChoice.htm#com_000300113e022400">removeItemListener</A>(IUIItemListener l);
  public void <A HREF="UIChoice.htm#com_000300113e022500">removeSelectedIndex</A>(int index);
  public void <A HREF="UIChoice.htm#com_000300113e022600">removeSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e022700">removeSelectedIndices</A>(int indices[]);
  public void <A HREF="UIChoice.htm#com_000300113e022800">removeSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e022900">removeSelectedItem</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e022a00">removeSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e022b00">removeSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="UIChoice.htm#com_000300113e022c00">removeSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e022d00">requestFocus</A>();
  public void <A HREF="UIChoice.htm#com_000300113e022e00">setAnchorItem</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e022f00">setExtensionItem</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e023000">setSelectedIndex</A>(int index);
  public void <A HREF="UIChoice.htm#com_000300113e023100">setSelectedIndex</A>(int index, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e023200">setSelectedIndices</A>(int indices[]);
  public void <A HREF="UIChoice.htm#com_000300113e023300">setSelectedIndices</A>(int indices[], boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e023400">setSelectedItem</A>(IUIComponent comp);
  public void <A HREF="UIChoice.htm#com_000300113e023500">setSelectedItem</A>(IUIComponent comp, boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e023600">setSelectedItems</A>(IUIComponent comps[]);
  public void <A HREF="UIChoice.htm#com_000300113e023700">setSelectedItems</A>(IUIComponent comps[],
        boolean notify);
  public void <A HREF="UIChoice.htm#com_000300113e023800">setSelectionMode</A>(int mode);
  public void <A HREF="UIChoice.htm#com_000300113e023900">setStyle</A>(int style);
  public void <A HREF="UIChoice.htm#com_000300113e023a00">setValueText</A>(String s);
}
</FONT></PRE>
<P>This class implements a choice control (combo box). A <B>UIChoice</B> object manages the components listed in the following table. In general, any <A HREF="IUIComponent.htm">IUIComponent</A> can be added to the menu list. If the <B>IUIComponent</B> is not an <A HREF="IUIContainer.htm">IUIContainer</A>, for example, it is a <A HREF="UIItem.htm">UIItem</A> or <A HREF="UIText.htm">UIText</A>, an exact copy of this item appears in the choice display when the item is selected. If an <B>IUIContainer</B> component is used, for example, <A HREF="UIPanel.htm">UIPanel</A>, the name of that container is used in display component, instead of a copy of the actual container. Use <A HREF="UIChoice.htm#com_000300113e021600">getSelectedItem</A> to retrieve the container. 
<P>This class supports event listeners. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Component
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIMenuList.htm">UIMenuList</A> component
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays the pop-up list of items that can be selected by the choice control. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIMenuButton.htm">UIMenuButton</A> component
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Launches or cancels the associated pop-up list. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIComponent.htm">IUIComponent</A> component
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Displays the choice control's currently selected item. 
</FONT></TD>
</TR>
</TABLE>
<P>When a <B>UIChoice</B> object is first created, its associated <B>UIMenuList</B> object is empty. To add items to the list, call the <A HREF="UIChoice.htm#com_000300113e020200">add</A> or <A HREF="UIChoice.htm#com_000300113e020e00">addString</A> method, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a UIChoice object.
UIChoice c = new UIChoice();

// Create an array of components. When items are added to
// the choice control, these array values will hold the
// components returned from addString.
IUIComponent comps[] = new IUIComponent[4];

// Create an array of strings and add each
// element to the choice control.
String colors[] = {"Red", "Blue", "Green", "Black"};
for (int i=0; i&lt;4; i++)
   comps[i] = c.addString(colors[i]);

// Add the control to the container. 
uiec.addSelectedItems(comps);

</FONT></PRE>
<P><B>Note</B>  Although UIChoice operates only in <A HREF="IUISelector.htm#com_0003001195020004">SINGLESELECT</A> mode, it implements the <A HREF="IUISelector.htm">IUISelector</A> interface, which has "pluralized" methods, such as <A HREF="UIChoice.htm#com_000300113e021700">getSelectedItems</A> and <A HREF="UIChoice.htm#com_000300113e023200">setSelectedIndices</A>. An <B>IllegalArgumentException</B> is thrown more if an attempt is made to select more than one item. The methods getSelectedIndices/Items simply returns arrays of length 1. 
<P>To remove items from a <B>UIChoice</B> menu, use one of the following methods. Call <A HREF="UIChoice.htm#com_000300113e022200">UIChoice.remove(IUIComponent comp)</A> where the comp is the component to be moved from the menu. Or, obtain the <B>UIChoice</B> menu using <A HREF="UIChoice.htm#com_000300113e021100">UIChoice.getMenu</A>, and call any remove method on the menu itself. If <B>UIChoice.remove(int index)</B> is used, components will be removed from the UIChoice control itself, like the menu launcher button. 

<P>Also see <A HREF="UIChoice.htm#com_000300113e021400">getSelectedIndex</A>, <A HREF="UIChoice.htm#com_000300113e021600">getSelectedItem</A>
<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UIPanel.htm">UIPanel</A>
        |
        +--<B>UIChoice</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300113e010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300113e010100">UIChoice</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIChoice();
</FONT></PRE>
<P><P>Creates an empty choice control. 
<P><B>Remarks:</B> <P>Call <A HREF="UIChoice.htm#com_000300113e020200">add</A> or <A HREF="UIChoice.htm#com_000300113e020e00">addString</A> to add items to the control's pop-up list. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300113e020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300113e020100">action</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean action(Event e, Object obj);
</FONT></PRE>
<P><P>Updates the choice control to display the currently selected item. 
<P><B>Return Value:</B> <P>Returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>obj</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>An action event is generated when an item in the control's pop-up list is selected, and the pop-up list is closed. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020200">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified component to the end of the choice control's associated pop-up list. 

<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added to the choice control. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIChoice.htm#com_000300113e020e00">addString</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020300">addActionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addActionListener(IUIActionListener l);
</FONT></PRE>
<P><P>Adds the specified action listener. The listener receives all action events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The action listener to be added. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020400">addItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Adds the specified item listener. The listener receives all item events generated for the control. (Item events are generated when the state of an item changes.) 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIChoice.htm#com_000300113e022400">removeItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020500">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method adds the <A HREF="UIMenuButton.htm">UIMenuButton</A> component to the choice control. By default, the button displays the system-defined down arrow. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020600">addSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndex(int index);
</FONT></PRE>
<P><P>Selects the component at the specified index, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020700">addSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Selects the component at the specified index, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020800">addSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Selects the components at the specified indices, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020900">addSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Selects the components at the specified indices, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020a00">addSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Selects the specified component, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be selected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020b00">addSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Selects the specified component, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020c00">addSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Selects the specified components, without affecting other selections. By default, list select events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the components to be selected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020d00">addSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Selects the specified components, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the component to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020e00">addString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent addString(String s);
</FONT></PRE>
<P><P>Adds the specified text to the end of the choice control's associated pop-up list. 

<P><B>Return Value:</B> <P>Returns the text component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added to the choice control. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIChoice.htm#com_000300113e020200">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e020f00">getAnchorItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getAnchorItem();
</FONT></PRE>
<P><P>Retrieves the component that is the current anchor in extend select mode. 

<P><B>Return Value:</B> <P>Returns the component that is the anchor. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021000">getExtensionItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getExtensionItem();
</FONT></PRE>
<P><P>Retrieves the last item (the extension item) that was (CTRL)+SHIFT+clicked in <B>EXTENDSELECT</B> mode. 

<P><B>Return Value:</B> <P>Returns the extension item. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021100">getMenu</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIMenuList getMenu();
</FONT></PRE>
<P><P>Retrieves the choice control's associated pop-up list. 

<P><B>Return Value:</B> <P>Returns the associated <A HREF="UIMenuList.htm">UIMenuList</A> object. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021200">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Determines the preferred size (in pixels) of the choice control. The <A HREF="UIChoice.htm">UIChoice</A> preferred size is just large enough to accommodate the largest of the items in its menu. If you want to have the <B>UIChoice</B> sized differently, use a layout manager that ignores <B>getPreferredSize</B>. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><B>Remarks:</B> <P>The choice control's preferred size is based on the associated button's preferred size, the control's insets, and the largest preferred size of all the associated menu's children. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021300">getRoleCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRoleCode();
</FONT></PRE>
<P><P>Retrieves the <B>ROLE_SYSTEM</B> code that best describes the role of the choice control. 

<P><B>Return Value:</B> <P>Returns the <A HREF="IUIAccessible.htm#com_000300118b02001d">ROLE_SYSTEM_COMBOBOX</A> code. 

</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300113e021500">getSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int[] getSelectedIndices();
</FONT></PRE>
<P><P>Retrieves the zero-based indices of all currently selected items. 

<P><B>Return Value:</B> <P>Returns an array of the indices of the selected items, if an item is selected; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021600">getSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getSelectedItem();
</FONT></PRE>
<P><P>Retrieves the currently selected item of the choice control. 
<P><B>Return Value:</B> <P>Returns the selected component, if a component is selected; otherwise, returns null. 

<P><B>Remarks:</B> <P>If the control's selection mode is <A HREF="IUISelector.htm#com_0003001195020002">MULTISELECT</A> or <A HREF="IUISelector.htm#com_0003001195020001">EXTENDSELECT</A>, you can also call <A HREF="UIChoice.htm#com_000300113e021700">getSelectedItems</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021700">getSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent[] getSelectedItems();
</FONT></PRE>
<P><P>Retrieves all currently selected items. 

<P><B>Return Value:</B> <P>Returns an array of the selected components, if a component is selected; otherwise, returns null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021800">getSelectionMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSelectionMode();
</FONT></PRE>
<P><P>Retrieves the selection mode of the control. 

<P><B>Return Value:</B> <P>Returns one of the following three selection modes: <B>SINGLESELECT</B>, <B>MULTISELECT</B>, or <B>EXTENDSELECT</B>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021900">getStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getStyle();
</FONT></PRE>
<P><P>Retrieves the current style of the control. 

<P><B>Return Value:</B> <P>Returns an integer containing the current style setting. For a list of possible values, see <A HREF="UIChoice.htm#com_000300113e023900">setStyle</A>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021a00">getValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getValueText();
</FONT></PRE>
<P><P>Retrieves the name of the currently selected item. 

<P><B>Return Value:</B> <P>Returns the name of the currently selected item. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021b00">handleEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean handleEvent(Event e);
</FONT></PRE>
<P><P>Updates the display box each time a list select event happens. 

<P><B>Return Value:</B> <P>Returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>LIST_SELECT</B> event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021c00">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event e, int key);
</FONT></PRE>
<P><P>Determines whether the SPACEBAR or the ENTER key is being pressed, and if so, sets the pressed state. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the button control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that has been pressed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called when the button has focus and a key is pressed. If the key being pressed is the SPACEBAR or the ENTER key, the button's pressed state is set. If the ESC key is being pressed, the button's pressed state is cleared. 
<P>For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview.
<P><B>See Also:</B> <A HREF="AwtUIButton.htm#com_0003001107020300">keyUp</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021d00">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout();
</FONT></PRE>
<P><P>Lays out the choice control. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021e00">mouseDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean mouseDown(Event e, int x, int y);
</FONT></PRE>
<P><P>Responds to the mouse button being pressed over the control. 
<P><B>Return Value:</B> <P>Returns true if the event was handled, false otherwise. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method calls <A HREF="UIComponent.htm#com_0003001142015300">UIComponent.mouseDown</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e021f00">postEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean postEvent(Event e);
</FONT></PRE>
<P><P>Posts the specified event to the control. 
<P><B>Return Value:</B> <P>Returns true if the event was posted; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event to post. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the event's target is the button component, this method changes the target to the choice control itself before posting the event. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022000">processEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processEvent(UIEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has been registered through a call to addXXXListener. Depending on the type of event, <B>processEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">item event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIChoice.htm#com_000300113e022100">processItemEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022100">processContainerEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022300">processFocusEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022400">processKeyEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022500">processMouseEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022600">processMouseMotionEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processEvent</B>, call the super method <B>processEvent</B> to ensure the default event processing continues normally. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022100">processItemEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processItemEvent(UIItemEvent e);
</FONT></PRE>
<P><P>Processes item events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIChoice.htm#com_000300113e022000">processEvent</A> and dispatches the event to a registered item listener. When overriding this method, call the super method <B>processItemEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIChoice.htm#com_000300113e020400">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022200">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the choice control's associated pop-up list. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022300">removeActionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeActionListener(IUIActionListener l);
</FONT></PRE>
<P><P>Removes the specified action listener. The listener no longer receives the control's action events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The action listener to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022400">removeItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Removes the specified item listener. The listener no longer receives the control's item events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIChoice.htm#com_000300113e020400">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022500">removeSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndex(int index);
</FONT></PRE>
<P><P>Deselects the component at the specified index, without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be deselected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022600">removeSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Deselects the component at the specified index, without affecting other selections. Optionally generates list select events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022700">removeSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Deselects the components at the specified indices, without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be deselected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022800">removeSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Deselects the components at the specified indices, without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022900">removeSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Deselects the specified component, without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be deselected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022a00">removeSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Deselects the specified component, without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022b00">removeSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Deselects the specified components, without affecting other selections. By default, list deselect events are not generated. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the components to be deselected. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022c00">removeSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Deselects the specified components, without affecting other selections. Optionally generates list deselect events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the component to be deselected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list deselect events will be generated; otherwise, list deselect events will not be generated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022d00">requestFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void requestFocus();
</FONT></PRE>
<P><P>Responds to the control that is receiving input focus. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P><B>requestFocus</B> calls <B>UIContainer.requestFocus</B>.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022e00">setAnchorItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAnchorItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the item used as an anchor in <B>EXTENDSELECT</B> mode. The anchor item cannot be set to null. 
<P><B>Note</B>  Resetting the anchor automatically sets the current extension item to null. If it is intended to set both to specific items, call <B>setAnchorItem</B>, followed by <A HREF="UIChoice.htm#com_000300113e022f00">setExtensionItem</A>. 
<P>Setting the anchor in an <A HREF="IUISelector.htm">IUISelector</A> other than the outermost one, has no effect. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that will be the new anchor. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the component is not a child of the selector, or if the component is null. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e022f00">setExtensionItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setExtensionItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the item to which a selection extends from an anchor. 
<P><B>Note</B>  Calling <A HREF="UIChoice.htm#com_000300113e022e00">setAnchorItem</A> automatically resets this item to null. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component that will be the new extension item. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if the component is not a child of the selector. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023000">setSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndex(int index);
</FONT></PRE>
<P><P>Sets the selection to the component at the specified index. By default, a list select event is not generated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023100">setSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndex(int index, boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the component at the specified index, and optionally generates a list select event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, a list select event will be generated; otherwise, a list select event will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023200">setSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndices(int indices[]);
</FONT></PRE>
<P><P>Sets the selection to the components at the specified indices. By default, list select events are not generated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023300">setSelectedIndices</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndices(int indices[], boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the components at the specified indices, and optionally generates list select events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indices</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the indices of the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023400">setSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Sets the selection to the specified component. By default, a list select event is not generated. To be notified when a new selection is made, override this method and call the super method <B>setSelectedItem(comp)</B>. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023500">setSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItem(IUIComponent comp, boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the specified component, and optionally generates a list select event. To be notified when a new selection is made, override this method and call the super method <B>setSelectedItem(comp, notify)</B>. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, a list select event will be generated; otherwise, a list select event will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023600">setSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItems(IUIComponent comps[]);
</FONT></PRE>
<P><P>Sets the selection to the specified components. By default, list select events are not generated. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the items to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023700">setSelectedItems</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItems(IUIComponent comps[], boolean notify);
</FONT></PRE>
<P><P>Sets the selection to the specified components, and optionally generates list select events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comps</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array containing the items to be selected. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, list select events will be generated; otherwise, list select events will not be generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method clears any previous selection.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023800">setSelectionMode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectionMode(int mode);
</FONT></PRE>
<P><P>Sets the selection mode of the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>mode</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The selection mode for the control. Only the <B>SINGLESELECT</B> mode is supported for <A HREF="UIChoice.htm">UIChoice</A>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 If a mode other than <B>SINGLESELECT</B> is used. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023900">setStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setStyle(int style);
</FONT></PRE>
<P><P>Sets the current style for the component. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the component. You can pass <A HREF="UIChoice.htm#com_000300113e030001">THICK</A> to specify a thick border around the component and its elements. To return the style to the default, call <B>setStyle(0)</B>. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113e023a00">setValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValueText(String s);
</FONT></PRE>
<P><P>Searches the <A HREF="UIChoice.htm">UIChoice</A> control for an item whose name matches that of the string. If that item is found, it becomes the selected item. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that contains the name of the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300113e030000">Fields</A></H3><DL>
<DT><B><A NAME="com_000300113e030001">THICK</A></B>
</DT><DD>Specifies that the button has a thick edge. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
