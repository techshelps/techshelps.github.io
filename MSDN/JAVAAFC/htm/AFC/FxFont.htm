<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class FxFont</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxFont.htm#com_000300080c010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxFont.htm#com_000300080c020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxFont.htm#com_000300080c030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="FxFill.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="FxFontMetrics.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class FxFont</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class FxFont extends <B>Font</B>
{
  // Fields
  public static final int <A HREF="FxFont.htm#com_000300080c030001">ANTIALIAS</A>;
  public static final int <A HREF="FxFont.htm#com_000300080c030002">EMBEDDED</A>;
  public static final int <A HREF="FxFont.htm#com_000300080c030003">ROTATABLE</A>;
  public static final int <A HREF="FxFont.htm#com_000300080c030004">STRIKEOUT</A>;
  public static final int <A HREF="FxFont.htm#com_000300080c030005">UNDERLINE</A>;

  // Constructors
  public <A HREF="FxFont.htm#com_000300080c010100">FxFont</A>();
  public <A HREF="FxFont.htm#com_000300080c010200">FxFont</A>(String name, int style, int size);
  public <A HREF="FxFont.htm#com_000300080c010300">FxFont</A>(String name, int style, int size, int flags);

  // Methods
  public boolean <A HREF="FxFont.htm#com_000300080c020100">drawBytesCallback</A>(FxGraphics g, byte data[],
        int offset, int length, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[]);
  public boolean <A HREF="FxFont.htm#com_000300080c020200">drawCharsCallback</A>(FxGraphics g, char data[],
        int offset, int length, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[],
        boolean meta);
  public boolean <A HREF="FxFont.htm#com_000300080c020300">drawOutlineCharCallback</A>(FxGraphics g, int xOrig,
        int yOrig, GlyphOutline go);
  public boolean <A HREF="FxFont.htm#com_000300080c020400">drawStringCallback</A>(FxGraphics g, String str,
        int x, int y, Rectangle optionRect, int options,
        int dx[], int dy[]);
  public static String[] <A HREF="FxFont.htm#com_000300080c020500">getAttributeList</A>();
  public static String[] <A HREF="FxFont.htm#com_000300080c020600">getAttributeList</A>(String faceName);
  public FxFont <A HREF="FxFont.htm#com_000300080c020700">getEmboldenedFont</A>();
  public int <A HREF="FxFont.htm#com_000300080c020800">getFlags</A>();
  public static int <A HREF="FxFont.htm#com_000300080c020900">getFlagsVal</A>(String face, String attribute);
  public static Font <A HREF="FxFont.htm#com_000300080c020a00">getFont</A>(String face, Vector v, int size);
  public static Font <A HREF="FxFont.htm#com_000300080c020b00">getFont</A>(String face, int style, int size,
        int flags);
  public static String[] <A HREF="FxFont.htm#com_000300080c020c00">getFontList</A>();
  public FontMetrics <A HREF="FxFont.htm#com_000300080c020d00">getFontMetricsCallback</A>(FxGraphics g);
  public GlyphOutline <A HREF="FxFont.htm#com_000300080c020e00">getGlyphOutlineCallback</A>(FxGraphics g,
        char ch);
  public static int <A HREF="FxFont.htm#com_000300080c020f00">getStyleVal</A>(String face, String attribute);
  public void <A HREF="FxFont.htm#com_000300080c021000">setBackgroundCallback</A>(Color c);
  public void <A HREF="FxFont.htm#com_000300080c021100">setColorCallback</A>(Color c);
  public void <A HREF="FxFont.htm#com_000300080c021200">setFontCallback</A>(FxGraphics g);
}
</FONT></PRE>
<P>This class produces user-defined font objects. 
<P>The <B>FxFont</B> class is one of several <A HREF="def_pfx.htm#commsfx_ovr_0003000801010000">extensible classes</A> that are included in the <A HREF="def_pfx.htm">com.ms.fx</A> package. <B>FxFont</B> objects can be used for font objects that are selected into an extended graphics context in the same way that <A HREF="FxTexture.htm">FxTexture</A> and <A HREF="FxPen.htm">FxPen</A> are used for color objects. 
<P>The <B>FxFont</B> class provides methods that you can construct custom fonts with and a base that you can derive new font classes from (for example, <A HREF="FxOutlineFont.htm">FxOutlineFont</A>). 
<P><B>Note</B>  The <A HREF="def_pfx.htm#commsfx_ovr_0003000801020000">callback methods</A> in this documentation are only used internally and are not meant to be called directly. They are included so that font-derived classes can extend the callback functionality. For more information on callback methods, see the com.ms.fx package overview information. 
<PRE><FONT FACE="Courier" SIZE="2"><B>Font</B>
  |
  +--<B>FxFont</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300080c010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300080c010100">FxFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxFont();
</FONT></PRE>
<P><P>Constructs a generic font. This is the constructor used by JavaBeans objects. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c010200">FxFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxFont(String name, int style, int size);
</FONT></PRE>
<P><P>Constructs an <A HREF="FxFont.htm">FxFont</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the font. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the font. This may be either <B>BOLD</B>, <B>ITALIC</B>, or <A HREF="FxStyledPen.htm#com_0003000818030003">PLAIN</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font, measured in points. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c010300">FxFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxFont(String name, int style, int size, int flags);
</FONT></PRE>
<P><P>Constructs an FxFont object with specified flags. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the font. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the font. This may be either <B>BOLD</B>, <B>ITALIC</B>, or <A HREF="FxStyledPen.htm#com_0003000818030003">PLAIN</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font, measured in points. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font flags, which can be either <A HREF="FxFont.htm#com_000300080c030004">STRIKEOUT</A>, <A HREF="FxFont.htm#com_000300080c030005">UNDERLINE</A>, or <A HREF="FxFont.htm#com_000300080c030002">EMBEDDED</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300080c020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300080c020100">drawBytesCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawBytesCallback(FxGraphics g, byte data[], int offset, int
        length, int x, int y, Rectangle optionRect, int options, int dx[],
        int dy[]);
</FONT></PRE>
<P><P>Draws an array of bytes when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <B>drawBytes</B> is called and an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of bytes that is drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>offset</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>length</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the array used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the bytes are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This may be <A HREF="IFxGraphicsConstants.htm#com_000300082401001e">CHAR_OPAQUE</A>, <A HREF="IFxGraphicsConstants.htm#com_000300082401001c">CHAR_CLIP</A>, or <A HREF="IFxGraphicsConstants.htm#com_000300082401001d">CHAR_KERNING</A> (not implemented). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dy values. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <B>com.ms.fx.FxGraphics.drawBytes</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020200">drawCharsCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawCharsCallback(FxGraphics g, char data[], int offset, int
        length, int x, int y, Rectangle optionRect, int options, int dx[],
        int dy[], boolean meta);
</FONT></PRE>
<P><P>Draws an array of characters when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810010400">drawChars</A> is called and if an <A HREF="FxFont.htm">FxFont</A> object is the selected font. 
<P>The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 

<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of characters that is drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>offset</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset that is used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>length</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the array used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the characters are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the characters are drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">This may be <A HREF="IFxGraphicsConstants.htm#com_000300082401001e">CHAR_OPAQUE</A>, <A HREF="IFxGraphicsConstants.htm#com_000300082401001c">CHAR_CLIP</A>, or <A HREF="IFxGraphicsConstants.htm#com_000300082401001d">CHAR_KERNING</A> (not implemented). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dy values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>meta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"></FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="FxGraphics.htm#com_0003000810010400">com.ms.fx.FxGraphics.drawChars</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020300">drawOutlineCharCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawOutlineCharCallback(FxGraphics g, int xOrig, int yOrig,
        GlyphOutline go);
</FONT></PRE>
<P><P>Draws an outline character when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> to draw an outline character and an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>xOrig</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the character. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>yOrig</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the character. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>go</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="GlyphOutline.htm">GlyphOutline</A> that is used. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020400">drawStringCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean drawStringCallback(FxGraphics g, String str, int x, int y,
        Rectangle optionRect, int options, int dx[], int dy[]);
</FONT></PRE>
<P><P>Draws a string when this method is called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810010f00">drawString</A> is called and an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>str</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The string that is drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the location where the string is drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the location where the string is drawn. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>optionRect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The optional rectangle used for clipping or opaquing. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>options</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The options set for the method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dx values. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dy</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of dy values. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="FxGraphics.htm#com_0003000810010f00">com.ms.fx.FxGraphics.drawString</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020500">getAttributeList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getAttributeList();
</FONT></PRE>
<P><P>Retrieves a list of the generic attributes that the font supports. 

<P><B>Return Value:</B> <P>Returns the list of attributes that the font supports. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020600">getAttributeList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getAttributeList(String faceName);
</FONT></PRE>
<P><P>Retrieves a list of the attributes that the font supports. 

<P><B>Return Value:</B> <P>Returns the font attributes include the following: 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Bold" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Italic" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Underline"
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Strikeout" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Anti-Aliased" 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">"Rotatable" 
</FONT></TD>
</TR>
</TABLE>
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>faceName</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the font. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020700">getEmboldenedFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxFont getEmboldenedFont();
</FONT></PRE>
<P><P>Retrieves a bold version of the current font. Typically, a bold font is used in default titles, default buttons on a <A HREF="UIButtonBar.htm#com_0003001139000000">UIButtonBar</A>, and other emphasized text. 

<P><B>Return Value:</B> <P>Returns a bold version of the current font. If the font is already bold, the method returns without performing an operation. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020800">getFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getFlags();
</FONT></PRE>
<P><P>Retrieves any extra flags set for the <A HREF="FxFont.htm">FxFont</A> object. 

<P><B>Return Value:</B> <P>Returns the flags that are currently set. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020900">getFlagsVal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int getFlagsVal(String face, String attribute);
</FONT></PRE>
<P><P>Retrieves a value for the flags of the given face name. 

<P><B>Return Value:</B> <P>Returns a value for the flags. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the font. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>attribute</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string that contains the attributes (for example, "Rotatable") of the font. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020a00">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Font getFont(String face, Vector v, int size);
</FONT></PRE>
<P><P>Retrieves a font if an exact match is made, given the face, vector, and size. 

<P><B>Return Value:</B> <P>Returns a <B>Font</B> object that matches the given parameters. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's face name ("Helvetica", for example). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A list of style names. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font, in points. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020b00">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static Font getFont(String face, int style, int size, int flags);
</FONT></PRE>
<P><P>Retrieves a font if an exact match is made, given the face, style, size, and flags. 

<P><B>Return Value:</B> <P>Returns a <B>Font</B> object that matches the given parameters. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's face name ("Helvetica", for example). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font's style. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the font, in points. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Can be one or a combination of the following: <A HREF="FxFont.htm#com_000300080c030002">EMBEDDED</A>, <A HREF="FxFont.htm#com_000300080c030004">STRIKEOUT</A>, or <A HREF="FxFont.htm#com_000300080c030005">UNDERLINE</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020c00">getFontList</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static String[] getFontList();
</FONT></PRE>
<P><P>Retrieves a list of the faces that the font supports. 

<P><B>Return Value:</B> <P>Returns the list of faces as an array of String objects. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020d00">getFontMetricsCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FontMetrics getFontMetricsCallback(FxGraphics g);
</FONT></PRE>
<P><P>Retrieves the font metrics when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxFontMetrics.htm#com_000300080d020600">getFontMetrics</A> is called when an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The object returned must be derived from the <B>FontMetrics</B> class. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>Returns the <B>FontMetrics</B> of the font 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="FxFontMetrics.htm#com_000300080d020600">java.awt.Graphics.getFontMetrics</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020e00">getGlyphOutlineCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public GlyphOutline getGlyphOutlineCallback(FxGraphics g, char ch);
</FONT></PRE>
<P><P>Retrieves a glyph outline for the character. 

<P><B>Return Value:</B> <P>Returns a character glyph outline. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ch</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The character that the glyph outline is found for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c020f00">getStyleVal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public static int getStyleVal(String face, String attribute);
</FONT></PRE>
<P><P>Retrieves a value for the style flags of the given face name. 

<P><B>Return Value:</B> <P>Returns a value for the font's style flags. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>face</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the font. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>attribute</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A string that contains the attributes (for example, "Rotatable") of the font. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c021000">setBackgroundCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBackgroundCallback(Color c);
</FONT></PRE>
<P><P>Sets the text background color when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810012400">setTextBackgroundColor</A> is called and an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. Currently, this method is not implemented. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The background color. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <B>com.ms.fx.FxGraphics.setTextBackground</B>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c021100">setColorCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setColorCallback(Color c);
</FONT></PRE>
<P><P>Sets the foreground color of the font when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <A HREF="FxGraphics.htm#com_0003000810012300">setColor</A> is called and an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>c</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The foreground color. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="FxGraphics.htm#com_0003000810012300">com.ms.fx.FxGraphics.setColor</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080c021200">setFontCallback</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFontCallback(FxGraphics g);
</FONT></PRE>
<P><P>Sets the font used by the extended graphics context when called by an <A HREF="FxGraphics.htm">FxGraphics</A> object. 
<P><B>Note</B>  This method is called by <A HREF="FxGraphics.htm">FxGraphics</A> if <B>setFont</B> is called when an <A HREF="FxFont.htm">FxFont</A> object is the selected font. The method selects the current font for use as the native graphics font object. This approach enables the object to do any device-specific operation. The default action is to pass the font back and use it as a native font. The callback methods are used internally and are not intended to be called by applications. It is made public so that derived classes can extend the callback functionality. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object used. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <B>com.ms.fx.FxGraphics.setFont</B>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300080c030000">Fields</A></H3><DL>
<DT><B><A NAME="com_000300080c030001">ANTIALIAS</A></B>
</DT><DD>Indicates the font object is anti-aliased. (Anti-aliasing is the smoothing of diagonal lines and curves.) 

</DD><DT><B><A NAME="com_000300080c030002">EMBEDDED</A></B>
</DT><DD>Indicates that the new font is linked to a privately-embedded font. 

</DD><DT><B><A NAME="com_000300080c030003">ROTATABLE</A></B>
</DT><DD>Indicates that the font object can be rotated. 

</DD><DT><B><A NAME="com_000300080c030004">STRIKEOUT</A></B>
</DT><DD>Indicates that the font object is struck out. 

</DD><DT><B><A NAME="com_000300080c030005">UNDERLINE</A></B>
</DT><DD>Indicates that the font object is underlined. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
