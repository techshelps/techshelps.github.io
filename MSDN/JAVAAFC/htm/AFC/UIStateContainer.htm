<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIStateContainer</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIStateContainer.htm#com_0003001177010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIStateContainer.htm#com_0003001177020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIStateComponent.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIStatic.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIStateContainer</H2>
<PRE><FONT FACE="Courier" SIZE="2">abstract public class UIStateContainer extends <A HREF="UIContainer.htm">UIContainer</A>
{
  // Constructors
  public <A HREF="UIStateContainer.htm#com_0003001177010100">UIStateContainer</A>();
  public <A HREF="UIStateContainer.htm#com_0003001177010200">UIStateContainer</A>(int edge);

  // Methods
  public IUIComponent <A HREF="UIStateContainer.htm#com_0003001177020100">add</A>(IUIComponent comp, Object constraints,
        int index);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177020200">addContainerListener</A>(
        IUIContainerListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177020300">addFocusListener</A>(IUIFocusListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177020400">addKeyListener</A>(IUIKeyListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177020500">addMouseListener</A>(IUIMouseListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177020600">addMouseMotionListener</A>(
        IUIMouseMotionListener l);
  public void <A HREF="UIStateContainer.htm#com_0003001177020700">addNotify</A>();
  public void <A HREF="UIStateContainer.htm#com_0003001177020800">adjustLayoutSize</A>(Dimension oldSize,
        Dimension newSize);
  protected final void <A HREF="UIStateContainer.htm#com_0003001177020900">disableEvents</A>(long eventsToDisable);
  protected final void <A HREF="UIStateContainer.htm#com_0003001177020a00">enableEvents</A>(long eventsToEnable);
  public Color <A HREF="UIStateContainer.htm#com_0003001177020b00">getBackground</A>();
  public Dimension <A HREF="UIStateContainer.htm#com_0003001177020c00">getCachedPreferredSize</A>();
  public Cursor <A HREF="UIStateContainer.htm#com_0003001177020d00">getCursor</A>();
  public int <A HREF="UIStateContainer.htm#com_0003001177020e00">getEdge</A>();
  public int <A HREF="UIStateContainer.htm#com_0003001177020f00">getFlags</A>();
  public Font <A HREF="UIStateContainer.htm#com_0003001177021000">getFont</A>();
  public Color <A HREF="UIStateContainer.htm#com_0003001177021100">getForeground</A>();
  public int <A HREF="UIStateContainer.htm#com_0003001177021200">getIndex</A>();
  public IUIContainer <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021400">isChecked</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021500">isEnabled</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021600">isFocused</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021700">isHot</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021800">isIndeterminate</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021900">isInvalidating</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021a00">isNotified</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021b00">isPressed</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021c00">isRedrawing</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021d00">isSelected</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021e00">isValid</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177021f00">isVisible</A>();
  public boolean <A HREF="UIStateContainer.htm#com_0003001177022000">postEvent</A>(Event evt);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022100">processContainerEvent</A>(UIContainerEvent e);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A>(UIEvent e);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022300">processFocusEvent</A>(UIFocusEvent e);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022400">processKeyEvent</A>(UIKeyEvent e);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022500">processMouseEvent</A>(UIMouseEvent e);
  protected void <A HREF="UIStateContainer.htm#com_0003001177022600">processMouseMotionEvent</A>(UIMouseEvent e);
  public void <A HREF="UIStateContainer.htm#com_0003001177022700">recalcPreferredSize</A>();
  public void <A HREF="UIStateContainer.htm#com_0003001177022800">remove</A>(int index);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177022900">removeContainerListener</A>(
        IUIContainerListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177022a00">removeFocusListener</A>(IUIFocusListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177022b00">removeKeyListener</A>(IUIKeyListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177022c00">removeMouseListener</A>(IUIMouseListener l);
  public synchronized void <A HREF="UIStateContainer.htm#com_0003001177022d00">removeMouseMotionListener</A>(
        IUIMouseMotionListener l);
  public void <A HREF="UIStateContainer.htm#com_0003001177022e00">removeNotify</A>();
  public void <A HREF="UIStateContainer.htm#com_0003001177022f00">setBackground</A>(Color color);
  public void <A HREF="UIStateContainer.htm#com_0003001177023000">setChecked</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023100">setCursor</A>(Cursor cursor);
  public void <A HREF="UIStateContainer.htm#com_0003001177023200">setEdge</A>(int edge);
  public void <A HREF="UIStateContainer.htm#com_0003001177023300">setEnabled</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023400">setFlags</A>(int flags);
  public void <A HREF="UIStateContainer.htm#com_0003001177023500">setFocused</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023600">setFont</A>(Font font);
  public void <A HREF="UIStateContainer.htm#com_0003001177023700">setForeground</A>(Color color);
  public void <A HREF="UIStateContainer.htm#com_0003001177023800">setHot</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023900">setIndeterminate</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023a00">setIndex</A>(int index);
  public void <A HREF="UIStateContainer.htm#com_0003001177023b00">setInvalidating</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023c00">setParent</A>(IUIContainer parent);
  public void <A HREF="UIStateContainer.htm#com_0003001177023d00">setPressed</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023e00">setRedrawing</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177023f00">setSelected</A>(boolean on);
  public void <A HREF="UIStateContainer.htm#com_0003001177024000">setValid</A>(boolean valid);
  public void <A HREF="UIStateContainer.htm#com_0003001177024100">setVisible</A>(boolean show);
}
</FONT></PRE>
<P>This class implements a container having different states. <B>UIStateContainer</B> extends <A HREF="UIContainer.htm">UIContainer</A> to manage the states shown in the following table. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>State
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">checked
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Typically applies to buttons. For example, when a <A HREF="UICheckButton.htm">UICheckButton</A> object is checked, its check box image displays a check. When the button is unchecked, the check box image is cleared. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">enabled
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object can respond to user input. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focused
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">All subsequent keyboard input is sent to the object. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">hot-tracked
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Identifies the object currently under the mouse. When the mouse enters the object, any text displayed by the object turns blue (by default). When the mouse exits, the text's original color is restored. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">indeterminate
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Typically applies to buttons. For example, when a <A HREF="UICheckButton.htm">UICheckButton</A> object's indeterminate state is set, the check box image displays a gray check. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">notified
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An object is notified when the graphics context first becomes available. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">pressed
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse button is currently being pressed over the object. When the mouse button is released, the object is unpressed. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">redrawing
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Controls the painting of the object. When a paint request is made, the object will be redrawn only if its redrawing state set. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">selected
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Indicates the user's selection. For example, when the user clicks an item in a single-selection <A HREF="UIList.htm">UIList</A> object, that item becomes selected, and any previously selected item is deselected. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">valid
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout of the object is current. For example, when the size of the object changes, the object is marked as invalid. When the size is recomputed and the layout is updated, the object is valid again. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">visible
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object is showing. 
</FONT></TD>
</TR>
</TABLE>
<P>Two classes that extend <B>UIStateContainer</B> include <A HREF="UIPanel.htm">UIPanel</A> and <A HREF="UISingleContainer.htm">UISingleContainer</A>. A <B>UIPanel</B> object can contain multiple child components and a header component. A <B>UISingleContainer</B> object contains only a header component. Header components are used to represent the container itself. For example, the text displayed on a button is used as its header component. 
<P><B>Note</B>  The hot-track color is the same color as the button text color. As a result, hot-tracking does not appear to be functional. 
<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<B>UIStateContainer</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001177010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001177010100">UIStateContainer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIStateContainer();
</FONT></PRE>
<P><P>Creates a state container with no edge. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177010200">UIStateContainer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIStateContainer(int edge);
</FONT></PRE>
<P><P>Creates a state container with the specified edge. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>edge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the container's edge. You can pass one of the following values for an edge style: 
<UL><LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010004">IFxGraphicsConstants.BDR_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010007">IFxGraphicsConstants.BDR_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010003">IFxGraphicsConstants.BDR_OUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010002">IFxGraphicsConstants.BDR_INNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010006">IFxGraphicsConstants.BDR_RAISEDOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010005">IFxGraphicsConstants.BDR_RAISEDINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010009">IFxGraphicsConstants.BDR_SUNKENOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010008">IFxGraphicsConstants.BDR_SUNKENINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010001">IFxGraphicsConstants.BDR_FLAT</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010021">IFxGraphicsConstants.EDGE_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010022">IFxGraphicsConstants.EDGE_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010020">IFxGraphicsConstants.EDGE_ETCHED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_000300082401001f">IFxGraphicsConstants.EDGE_BUMP</A> 
<LI>0 (No edge style) 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined edge style was specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001177020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001177020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints, int index);
</FONT></PRE>
<P><P>Adds the specified component to the container, according to the specified constraints and index. 

<P><B>Return Value:</B> <P>Returns the component that was added if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints, which depend on the current layout manager. For more information about layout constraints, see the layout manager's <B>addLayoutComponent</B> method. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to insert the component. If the container has a header component, the header is at index 0, and the first child component begins at index 1; otherwise, the first child begins at index 0. To add the component at the end of the container, pass -1. (For more information about header components, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview.) 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143020400">add(IUIComponent,Object,int)</A> in <A HREF="UIContainer.htm">UIContainer</A>.

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022800">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020200">addContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addContainerListener(IUIContainerListener l);
</FONT></PRE>
<P><P>Adds the specified container listener. The listener receives all container events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022900">removeContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020300">addFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Adds the specified focus listener. The listener receives all focus events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022a00">removeFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020400">addKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Adds the specified key listener. The listener receives all key events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022b00">removeKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020500">addMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Adds the specified mouse listener. The listener receives all mouse events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022c00">removeMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020600">addMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addMouseMotionListener(IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Adds the specified mouse motion listener. The listener receives all mouse motion events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022d00">removeMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020700">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method invalidates the container and sets its notified state. The <B>addNotify</B> method is then invoked for each component in the container.
<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143020b00">addNotify()</A> in <A HREF="UIContainer.htm">UIContainer</A>.

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022e00">removeNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020800">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void adjustLayoutSize(Dimension oldSize, Dimension newSize);
</FONT></PRE>
<P><P>Adjusts the layout size of the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the container (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the container (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked when the container's size has changed. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020900">disableEvents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected final void disableEvents(long eventsToDisable);
</FONT></PRE>
<P><P>Disables the events defined by the specified event mask parameter from being delivered to this component. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eventsToDisable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the event mask defining the event types. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020a00">enableEvents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected final void enableEvents(long eventsToEnable);
</FONT></PRE>
<P><P>Enables the events defined by the specified event mask parameter to be delivered to this component. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eventsToEnable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the event mask defining the event types. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Event types are automatically enabled when a listener for that type is added to the component; therefore, this method only needs to be invoked by subclasses of a component that require the specified event types delivered to <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A>, regardless of whether a listener is registered. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020b00">getBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Color getBackground();
</FONT></PRE>
<P><P>Retrieves the background color of the container. 
<P><B>Return Value:</B> <P>Returns a <B>Color</B> object containing the container's background color. 

<P><B>Remarks:</B> <P>If the container itself does not have a background color, this method returns the background color of the container's parent. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177022f00">setBackground</A>, <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020c00">getCachedPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getCachedPreferredSize();
</FONT></PRE>
<P><P>Retrieves the container's preferred size (in pixels). 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020d00">getCursor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Cursor getCursor();
</FONT></PRE>
<P><P>Retrieves the container's cursor. 
<P><B>Return Value:</B> <P>Returns a <B>Cursor</B> object containing the container's cursor. 

<P><B>Remarks:</B> <P>If the container itself does not have a cursor, this method returns the cursor of the container's parent. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023600">setFont</A>, <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020e00">getEdge</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getEdge();
</FONT></PRE>
<P><P>Retrieves the style of the container's edge. 

<P><B>Return Value:</B> <P>Returns an integer containing the current style settings for the container's edge. For a list of possible values, see <A HREF="UIStateContainer.htm#com_0003001177023200">setEdge</A>. 

<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143022100">getEdge()</A> in <A HREF="UIContainer.htm">UIContainer</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177020f00">getFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getFlags();
</FONT></PRE>
<P><P>Retrieves the user-defined bits currently set for the container. 

<P><B>Return Value:</B> <P>Returns an integer containing the current user-defined settings. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023400">setFlags</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021000">getFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Font getFont();
</FONT></PRE>
<P><P>Retrieves the font of the container. 
<P><B>Return Value:</B> <P>Returns a <B>Font</B> object containing the container's font. 

<P><B>Remarks:</B> <P>If the container itself does not have a font, this method returns the font of the container's parent. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023600">setFont</A>, <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021100">getForeground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Color getForeground();
</FONT></PRE>
<P><P>Retrieves the foreground color of the container. 
<P><B>Return Value:</B> <P>Returns a <B>Color</B> object containing the container's foreground color. 

<P><B>Remarks:</B> <P>If the container itself does not have a foreground color, this method returns the foreground color of the container's parent. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023700">setForeground</A>, <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021200">getIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getIndex();
</FONT></PRE>
<P><P>Retrieves the index of the container within its parent. 

<P><B>Return Value:</B> <P>Returns the container's index. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023a00">setIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021300">getParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIContainer getParent();
</FONT></PRE>
<P><P>Retrieves the container's parent. 

<P><B>Return Value:</B> <P>Returns the parent container. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023c00">setParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021400">isChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isChecked();
</FONT></PRE>
<P><P>Determines whether the container's checked state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is checked; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023000">setChecked</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021500">isEnabled</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isEnabled();
</FONT></PRE>
<P><P>Determines whether the container's enabled state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is enabled; returns false if disabled. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023300">setEnabled</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021600">isFocused</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isFocused();
</FONT></PRE>
<P><P>Determines whether the container's focus state is set. 

<P><B>Return Value:</B> <P>Returns true if the container has focus; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023500">setFocused</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021700">isHot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHot();
</FONT></PRE>
<P><P>Determines whether the container's hot-tracked state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is hot-tracked; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023800">setHot</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021800">isIndeterminate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isIndeterminate();
</FONT></PRE>
<P><P>Determines whether the container's indeterminate state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is indeterminate; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023900">setIndeterminate</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021900">isInvalidating</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isInvalidating();
</FONT></PRE>
<P><P>Retrieves the current invalidating state of this object. 

<P><B>Return Value:</B> <P>Returns true if this object has invalidating enabled; otherwise, returns false (which means it will ignore requests to invalidate). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021a00">isNotified</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isNotified();
</FONT></PRE>
<P><P>Determines whether the container's notified state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is notified; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020700">addNotify</A>, <A HREF="UIStateContainer.htm#com_0003001177022e00">removeNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021b00">isPressed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isPressed();
</FONT></PRE>
<P><P>Determines whether the container's pressed state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is pressed; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023d00">setPressed</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021c00">isRedrawing</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isRedrawing();
</FONT></PRE>
<P><P>Determines whether the container will be redrawn when a paint request is made. 

<P><B>Return Value:</B> <P>Returns true if the redrawing state is set; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023e00">setRedrawing</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021d00">isSelected</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isSelected();
</FONT></PRE>
<P><P>Determines whether the container's selected state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is selected; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177023f00">setSelected</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021e00">isValid</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isValid();
</FONT></PRE>
<P><P>Determines whether the container is valid. 

<P><B>Return Value:</B> <P>Returns true if the container is valid; returns false if invalid. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177024000">setValid</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177021f00">isVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isVisible();
</FONT></PRE>
<P><P>Determines whether the container's visible state is set. 

<P><B>Return Value:</B> <P>Returns true if the container is visible; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177024100">setVisible</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022000">postEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean postEvent(Event evt);
</FONT></PRE>
<P><P>Posts the specified event to the container. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022100">processContainerEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processContainerEvent(UIContainerEvent e);
</FONT></PRE>
<P><P>Processes container events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A> and dispatches the event to a registered key listener. When overriding this method, call the super method <B>processContainerEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020200">addContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022200">processEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processEvent(UIEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has has been registered through a call to addXXXListener. Depending on the type of event, <B>processEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022100">processContainerEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022300">processFocusEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022400">processKeyEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022500">processMouseEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022600">processMouseMotionEvent</A>
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processEvent</B>, call the super method <B>processEvent</B> to ensure the default event processing continues normally. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022300">processFocusEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processFocusEvent(UIFocusEvent e);
</FONT></PRE>
<P><P>Processes focus events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A> and dispatches the event to a registered focus listener. When overriding this method, call the super method <B>processFocusEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020300">addFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022400">processKeyEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processKeyEvent(UIKeyEvent e);
</FONT></PRE>
<P><P>Processes key events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A> and dispatches the event to a registered key listener. When overriding this method, call the super method <B>processKeyEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020400">addKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022500">processMouseEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processMouseEvent(UIMouseEvent e);
</FONT></PRE>
<P><P>Processes mouse events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A> and dispatches the event to a registered mouse listener. When overriding this method, call the super method <B>processMouseEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020500">addMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022600">processMouseMotionEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processMouseMotionEvent(UIMouseEvent e);
</FONT></PRE>
<P><P>Processes mouse motion events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UIStateContainer.htm#com_0003001177022200">processEvent</A> and dispatches the event to a registered mouse motion listener. When overriding this method, call the super method <B>processMouseMotionEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020600">addMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022700">recalcPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void recalcPreferredSize();
</FONT></PRE>
<P><P>Recalculates the container's preferred size (in pixels). 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022800">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(int index);
</FONT></PRE>
<P><P>Removes the component at the specified index from the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be removed. If the container has a header component, the header is at index 0 and the first child componentbegins at index 1; otherwise, the first child begins at index 0. (For more information about header components, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview.) 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143023f00">remove(int)</A> in <A HREF="UIContainer.htm">UIContainer</A>.

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022900">removeContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeContainerListener(IUIContainerListener l);
</FONT></PRE>
<P><P>Removes the specified container listener. The listener no longer receives the control's container events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020200">addContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022a00">removeFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeFocusListener(IUIFocusListener l);
</FONT></PRE>
<P><P>Removes the specified focus listener. The listener no longer receives the control's focus events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020300">addFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022b00">removeKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeKeyListener(IUIKeyListener l);
</FONT></PRE>
<P><P>Removes the specified key listener. The listener no longer receives the control's key events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020400">addKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022c00">removeMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeMouseListener(IUIMouseListener l);
</FONT></PRE>
<P><P>Removes the specified mouse listener. The listener no longer receives the control's mouse events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020500">addMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022d00">removeMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeMouseMotionListener(
        IUIMouseMotionListener l);
</FONT></PRE>
<P><P>Removes the specified mouse motion listener. The listener no longer receives the control's mouse motion events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020600">addMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022e00">removeNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeNotify();
</FONT></PRE>
<P><P>Called when the graphics context first becomes unavailable. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method clears the notified state and invokes <B>removeNotify</B> for each component in the container. 
<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143024800">removeNotify()</A> in <A HREF="UIContainer.htm">UIContainer</A>.

<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020700">addNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177022f00">setBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBackground(Color color);
</FONT></PRE>
<P><P>Sets the container's background color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>color</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The background color for the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020b00">getBackground</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023000">setChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChecked(boolean on);
</FONT></PRE>
<P><P>Sets or clears the checked state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the checked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021400">isChecked</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023100">setCursor</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCursor(Cursor cursor);
</FONT></PRE>
<P><P>Sets the container's cursor. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cursor</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The cursor for the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020d00">getCursor</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023200">setEdge</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setEdge(int edge);
</FONT></PRE>
<P><P>Sets the style of the container's edge. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>edge</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the container's edge. You can pass one of the following values: 
<UL><LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010004">IFxGraphicsConstants.BDR_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010007">IFxGraphicsConstants.BDR_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010003">IFxGraphicsConstants.BDR_OUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010002">IFxGraphicsConstants.BDR_INNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010006">IFxGraphicsConstants.BDR_RAISEDOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010005">IFxGraphicsConstants.BDR_RAISEDINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010009">IFxGraphicsConstants.BDR_SUNKENOUTER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010008">IFxGraphicsConstants.BDR_SUNKENINNER</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010001">IFxGraphicsConstants.BDR_FLAT</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010021">IFxGraphicsConstants.EDGE_RAISED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010022">IFxGraphicsConstants.EDGE_SUNKEN</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_0003000824010020">IFxGraphicsConstants.EDGE_ETCHED</A> 
<LI><A HREF="IFxGraphicsConstants.htm#com_000300082401001f">IFxGraphicsConstants.EDGE_BUMP</A> 
<LI>0 (No edge style) 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UIContainer.htm#com_0003001143025b00">setEdge(int)</A> in <A HREF="UIContainer.htm">UIContainer</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined edge style was specified. 


<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020e00">getEdge</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023300">setEnabled</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setEnabled(boolean on);
</FONT></PRE>
<P><P>Sets or clears the enabled state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the enabled state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021500">isEnabled</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023400">setFlags</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFlags(int flags);
</FONT></PRE>
<P><P>Sets the user-defined bits for the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>flags</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The user-defined settings for the container. You can set any bit in the mask 0xFFF00000. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined bit was specified. 


<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177020f00">getFlags</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023500">setFocused</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFocused(boolean on);
</FONT></PRE>
<P><P>Sets or clears the focus state of the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the focus state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked when the container receives or loses focus. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021600">isFocused</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023600">setFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFont(Font font);
</FONT></PRE>
<P><P>Sets the container's font. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>font</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font for the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021000">getFont</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023700">setForeground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setForeground(Color color);
</FONT></PRE>
<P><P>Sets the container's foreground color. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>color</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The foreground color for the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021100">getForeground</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023800">setHot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHot(boolean on);
</FONT></PRE>
<P><P>Sets or clears the hot-tracked state of the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the hot-tracked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked when the mouse enters and exits the container. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021700">isHot</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023900">setIndeterminate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setIndeterminate(boolean on);
</FONT></PRE>
<P><P>Sets or clears the indeterminate state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the indeterminate state is set and the checked state is cleared. If false, the indeterminate state is cleared. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021800">isIndeterminate</A>, <A HREF="UIStateContainer.htm#com_0003001177023000">setChecked</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023a00">setIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setIndex(int index);
</FONT></PRE>
<P><P>Sets the index of the container within its parent. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index for the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021200">getIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023b00">setInvalidating</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setInvalidating(boolean on);
</FONT></PRE>
<P><P>Sets the invalidating state of this object. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The invalidating state setting. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023c00">setParent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setParent(IUIContainer parent);
</FONT></PRE>
<P><P>Sets the container's parent. If the container already has a parent, it is removed from that parent's hierarchy. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new parent container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021300">getParent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023d00">setPressed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPressed(boolean on);
</FONT></PRE>
<P><P>Sets or clears the pressed state of the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the pressed state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked when the mouse button is pressed, released, or dragged over the container. 
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021b00">isPressed</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023e00">setRedrawing</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setRedrawing(boolean on);
</FONT></PRE>
<P><P>Sets or clears the redrawing state of the container. If the redrawing state is set, the container will be redrawn when a paint request is made. If the redrawing state is cleared, the container will not be redrawn. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the redrawing state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021c00">isRedrawing</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177023f00">setSelected</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelected(boolean on);
</FONT></PRE>
<P><P>Sets or clears the selected state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the selected state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021d00">isSelected</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177024000">setValid</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValid(boolean valid);
</FONT></PRE>
<P><P>Sets or clears the valid state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>valid</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the container's valid state is set and the container is validated; otherwise, the container is invalidated. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001177024100">setVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVisible(boolean show);
</FONT></PRE>
<P><P>Sets or clears the visible state of the container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>show</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the container is shown; otherwise, the container is hidden. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIStateContainer.htm#com_0003001177021f00">isVisible</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
