<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface CabDecoderInterface</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="CabDecoderInterface.htm#com_000300150a010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="CabConstants.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ucab.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="CabProgressInterface.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.util.cab</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Interface CabDecoderInterface</H2>
<PRE><FONT FACE="Courier" SIZE="2">public interface CabDecoderInterface extends <A HREF="CabProgressInterface.htm">CabProgressInterface</A>
{
  // Methods
  boolean <A HREF="CabDecoderInterface.htm#com_000300150a010100">closeOutputStream</A>(OutputStream stream,
        CabFileEntry entry, boolean success);
  InputStream <A HREF="CabDecoderInterface.htm#com_000300150a010200">openCabinet</A>(String disk_name, String cabinet_name);
  OutputStream <A HREF="CabDecoderInterface.htm#com_000300150a010300">openOutputStream</A>(CabFileEntry entry);
  boolean <A HREF="CabDecoderInterface.htm#com_000300150a010400">reservedAreaData</A>(int reserve_type, byte[] reserved_data,
        int reserved_data_size, byte[] other_data,
        int other_data_size );
}
</FONT></PRE>
<P>This is the interface that must be passed as a parameter to the <A HREF="CabDecoder.htm">CabDecoder</A> constructor. 
<P>For more information about cabinet file decoding, see <A HREF="CabDecoder.htm">CabDecoder</A>and <A HREF="CabFileEntry.htm">CabFileEntry</A>. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="CabProgressInterface.htm">CabProgressInterface</A>
  |
  +--<B>CabDecoderInterface</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300150a010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300150a010100">closeOutputStream</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">boolean closeOutputStream(OutputStream stream, CabFileEntry entry,
        boolean success);
</FONT></PRE>
<P><P><B>closeOutputStream</B> is guaranteed to be called to close a stream opened using <A HREF="CabDecoderInterface.htm#com_000300150a010300">openOutputStream</A>. 

<P><B>Return Value:</B> <P>Returns true if processing should continue for files in this cabinet, or false if processing should end immediately. In the latter case, no more <A HREF="CabDecoderInterface.htm#com_000300150a010300">openOutputStream</A> calls will be made. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>stream</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A handle on the file extracted from the cabinet file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>entry</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains information about the file extracted from the cabinet file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>success</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Determines whether the file was extracted successfully. If the value of this parameter is false, then all of the data written to this stream must be considered invalid. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300150a010200">openCabinet</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">InputStream openCabinet(String disk_name, String cabinet_name);
</FONT></PRE>
<P><P>This method is used to open a next or previous cabinet in a set of spanned cabinets. Since spanned cabinets are currently not supported in this version of the cabinet file package, this method will never be called. 

<P><B>Return Value:</B> <P>Returns null if the specified cabinet file is not available; otherwise an <B>InputStream</B> for the specified cabinet file is returned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>disk_name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The disk name of the desired cabinet file. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cabinet_name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The cabinet name of the desired cabinet file. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300150a010300">openOutputStream</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">OutputStream openOutputStream(CabFileEntry entry);
</FONT></PRE>
<P><P>After the <A HREF="CabDecoder.htm#com_0003001504020300">CabDecoder.extract</A> method is called, the <B>openStream</B> method will be called for each file entry in the cabinet file. 

<P><B>Return Value:</B> <P>Returns either an <B>OutputStream</B> object from which to extract the file, or null, indicating that the file should not be extracted. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>entry</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="CabFileEntry.htm">CabFileEntry</A> that will be extracted. The contents of this object are examined to determine whether it should be extracted. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300150a010400">reservedAreaData</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">boolean reservedAreaData(int reserve_type, byte[] reserved_data,
        int reserved_data_size, byte[] other_data, int other_data_size );
</FONT></PRE>
<P><P>Called when the cabinet file contains reserved data. If the cabinet file does not contain any reserved data, then this method will never be called. 
<P>The reserve_type and data_size parameters indicate the type of reserved area (as defined in the CabConstants interface) and the size of the area. The data parameter will be null. 
<P>This method returns true to indicate that reserved areas of the specified type should be read, or false to indicate that they should be ignored. In the former case, <B>reservedAreaData</B> will be invoked each time the specified reserve area is seen with data containing the reserved data. 
<DL>
<DT>Additional reserved data area 
 </DT><DD>Applications that use this method should return false for any reserved area types that they do not know how to handle.
</DD></DL>
<P><B>Return Value:</B> <P>Returns true if this type of reserved entry should be read and passed back for subsequent calls to this method, or false if no more calls should be made for this type of reserved data. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reserve_type</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Type of reserved area as defined in the <A HREF="CabConstants.htm">CabConstants</A> interface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reserved_data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array containing the reserved data, or null if this is only a message indicating that the reserved area exists. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>reserved_data_size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Size of the reserved area, or zero if size is not known 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other_data</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Valid only if a <A HREF="CabConstants.htm#com_0003001509010007">RESERVED_CFDATA</A> type, in which case this array contains the data in the CFDATA frame 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other_data_size</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Valid only if a <A HREF="CabConstants.htm#com_0003001509010007">RESERVED_CFDATA</A> reserve type, in which case this is the size of the data in other_data[] 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
