<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIScrollViewer</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIScrollViewer.htm#com_000300116e010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIScrollViewer.htm#com_000300116e020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIScrollViewer.htm#com_000300116e030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIScrollThumb.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UISelector.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIScrollViewer</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIScrollViewer extends <A HREF="UIPanel.htm">UIPanel</A> implements 
            <A HREF="IUIPosition.htm">IUIPosition</A>
{
  // Fields
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030011">CONT</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030012">H_CORNER</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030013">H_HORZ</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030014">H_VERT</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030015">S_CORNER</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030007">S_HORZ</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e030008">S_VERT</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>;
  public final static int <A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>;
  public final static Integer <A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A>;

  // Constructors
  public <A HREF="UIScrollViewer.htm#com_000300116e010100">UIScrollViewer</A>();
  public <A HREF="UIScrollViewer.htm#com_000300116e010200">UIScrollViewer</A>(IUIComponent comp);
  public <A HREF="UIScrollViewer.htm#com_000300116e010300">UIScrollViewer</A>(IUIComponent comp, int style);
  public <A HREF="UIScrollViewer.htm#com_000300116e010400">UIScrollViewer</A>(IUIComponent comp, int hLine, int vLine);
  public <A HREF="UIScrollViewer.htm#com_000300116e010500">UIScrollViewer</A>(IUIComponent comp, int hLine, int vLine,
        int style);
  public <A HREF="UIScrollViewer.htm#com_000300116e010600">UIScrollViewer</A>(IUIComponent comp, int hLine, int vLine,
        int style, int scrollStyle);
  public <A HREF="UIScrollViewer.htm#com_000300116e010700">UIScrollViewer</A>(IUIComponent comp, int hLine, int vLine,
        int style, int hstyle, int vstyle);

  // Methods
  public IUIComponent <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A>(IUIComponent comp, Object constraints,
        int index);
  public void <A HREF="UIScrollViewer.htm#com_000300116e020200">addNotify</A>();
  public boolean <A HREF="UIScrollViewer.htm#com_000300116e020300">ensureVisible</A>(Rectangle rect);
  public IUIComponent <A HREF="UIScrollViewer.htm#com_000300116e020400">getContent</A>();
  public int <A HREF="UIScrollViewer.htm#com_000300116e020500">getHLine</A>();
  public IUIComponent <A HREF="UIScrollViewer.htm#com_000300116e020600">getLayoutComponent</A>(Object constraints);
  public Point <A HREF="UIScrollViewer.htm#com_000300116e020700">getLine</A>();
  public Dimension <A HREF="UIScrollViewer.htm#com_000300116e020800">getMinimumSize</A>();
  public Point <A HREF="UIScrollViewer.htm#com_000300116e020900">getPosition</A>();
  public Dimension <A HREF="UIScrollViewer.htm#com_000300116e020a00">getPreferredSize</A>();
  public int <A HREF="UIScrollViewer.htm#com_000300116e020b00">getRoleCode</A>();
  public int <A HREF="UIScrollViewer.htm#com_000300116e020c00">getVLine</A>();
  public int <A HREF="UIScrollViewer.htm#com_000300116e020d00">getXPosition</A>();
  public int <A HREF="UIScrollViewer.htm#com_000300116e020e00">getYPosition</A>();
  public boolean <A HREF="UIScrollViewer.htm#com_000300116e021000">handleEvent</A>(Event e);
  public boolean <A HREF="UIScrollViewer.htm#com_000300116e021100">isKeyable</A>();
  public boolean <A HREF="UIScrollViewer.htm#com_000300116e021200">keyDown</A>(Event e, int key);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021300">layout</A>();
  public void <A HREF="UIScrollViewer.htm#com_000300116e021400">remove</A>(IUIComponent comp);
  public IUIComponent <A HREF="UIScrollViewer.htm#com_000300116e021500">replace</A>(IUIComponent comp,
        Object constraints);
  public void <A HREF="UIScrollViewer.htm#com_000300116e020f00">requestFocus</A>();
  public void <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>(IUIComponent content);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021700">setHLine</A>(int line);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021800">setLine</A>(int hLine, int vLine);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021900">setPosition</A>(Point pt);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021a00">setPosition</A>(int x, int y);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021b00">setScrollStyle</A>(int scroller, int style);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021c00">setScrollStyle</A>(int style);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021d00">setVLine</A>(int line);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021e00">setXPosition</A>(int x);
  public void <A HREF="UIScrollViewer.htm#com_000300116e021f00">setYPosition</A>(int y);
}
</FONT></PRE>
<P>This class implements a scroll viewer control. 
<P>Typically, <B>UIScrollViewer</B> uses a <A HREF="UIViewer.htm">UIViewer</A> object for content, which displays another component. The scroll viewer control also displays other components, such as scroll bars and header bars. <B>Note</B> Content objects besides <B>UIViewer</B> objects are not fully supported (even when they implement the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P>When creating a <B>UIScrollViewer</B> object, you specify the content component, optional scroll line increments, and optional style flags. You can pass any bitwise combination of the following flags for the scroll viewer's style. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Scroll Viewer Style
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Places the horizontal scroll bar on the top of the scroll viewer panel. The default position is on the bottom. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Places the vertical scroll bar on the left side of the scroll viewer panel. The default position is on the right. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Places the horizontal header bar on the bottom of the scroll viewer panel. The default position is on the top. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Places the vertical header bar on the right side of the scroll viewer panel. The default position is on the left. 
</FONT></TD>
</TR>
</TABLE>
<P>The following example shows several ways of constructing <B>UIScrollViewer</B> objects. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a scroll viewer that displays the graphical
// image stored in the variable myImage. Accept the default 
// scroll line increments and the default style.
UIScrollViewer sv1 = new UIScrollViewer(new UIGraphic(myImage));

// Construct a scroll viewer that displays the UIList
// object myList. Specify scroll line increments of
// 15 pixels. Position the horizontal scroll bar on 
// the top of the scroll viewer panel.
UIScrollViewer sv2 = 
   new UIScrollViewer(myList, 15, 15, UIScrollViewer.SCROLL_TOP);

// Now add sv1 and sv2 to the container.
add(sv1);
add(sv2);
</FONT></PRE>
<P>You can also specify a style for each scroll bar. The following flags define valid scroll bar styles. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Scroll Bar Style
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Always displays the scroll bar; the scroll bar is disabled if it is not needed. By default, scroll bars are displayed only when necessary. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Always hides the scroll bar. By default, scroll bars are displayed only when necessary. Use this in place of removing the scroll bars. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The size of the scroll bar's thumb component is not proportional to the scroll bar's range. 
</FONT></TD>
</TR>
</TABLE>
<P><B>Note</B>  By default, each scroll bar has the <A HREF="UIScroll.htm#com_000300116b030002">UIScroll.NOKEY</A> style set; therefore, the scroll bars cannot receive keyboard input. 
<P>The following example shows how to construct a <B>UIScrollViewer</B> object with scroll bar styles. You can specify a style for both scroll bars in one parameter, or you can specify a separate style for each scroll bar in two parameters. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a scroll viewer that displays the UITree
// object myTree1. Always show both scroll bars.
UIScrollViewer sv3 = 
   new UIScrollViewer(myTree1, 15, 15, UIScrollViewer.SCROLL_TOP,
                      UIScroll.NOHIDE);

// Construct a scroll viewer that displays the UITree
// object myTree2. Always show the horizontal scroll 
// bar and always hide the vertical scroll bar.
UIScrollViewer sv4 = 
   new UIScrollViewer(myTree2, 15, 15, UIScrollViewer.SCROLL_TOP, 
                      UIScroll.NOHIDE, UIScroll.NOSHOW);

// Add sv3 and sv4 to the container.
add(sv3);
add(sv4);
</FONT></PRE>
<P>When a <B>UIScrollViewer</B> object is created, it contains only content and scroll bar components. To add other components, or replace existing components, call the <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> method. Each type of component that can be displayed is identified by a constraint, described by the following table. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Constraint Object
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Component
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The content component. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal scroll bar (by default, a <A HREF="UIScrollBar.htm">UIScrollBar</A> object). 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical scroll bar (by default, a <A HREF="UIScrollBar.htm">UIScrollBar</A> object). 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The corner component between the scroll bars. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal header bar. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical header bar. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A>
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The corner component between the header bars. 
</FONT></TD>
</TR>
</TABLE>
<P><B>Note</B>  The <A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> and <A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A> components must implement the <A HREF="IUIScroll.htm">IUIScroll</A> interface; otherwise, they cannot be added. The <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> components must implement <A HREF="IUIPosition.htm">IUIPosition</A>. If they do not, <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> first converts them to <A HREF="UIViewer.htm">UIViewer</A> objects before adding them to the scroll viewer control. 
<P>To set the scroll viewer's content, you can also call the <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A> method, which returns the previous content component. The following example shows how to add (or replace) components. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a scroll viewer that displays the UIList
// object myList. When a UIScrollViewer object is created, 
// the content is first added to a UIViewer object, which 
// is then added to the scroll viewer.
UIScrollViewer sv = new UIScrollViewer(myList);
add(sv);  // Add sv to the container.

// Now add the UIHeaderRow object myHeader to sv as
// a horizontal header bar.
sv.add(UIScrollViewer.HEADER_HORZ, myHeader);

// Replace the content in sv with the UITree object myTree.
sv.add(UIScrollViewer.CONTENT, myTree);

// Call setContent to replace the content in sv with the
// graphical image stored in myImage. Save the previous content 
// component in the variable oldContents. 
IUIComponent oldContents = sv.setContent(new UIGraphic(myImage));
</FONT></PRE>
<P>The <A HREF="UIColumnViewer.htm">UIColumnViewer</A> class extends <B>UIScrollViewer</B> to display a set of columns inside the viewer control. <B>UIColumnViewer</B> automatically adds a <A HREF="UIHeaderRow.htm">UIHeaderRow</A> object as the <A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A> component. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UIPanel.htm">UIPanel</A>
        |
        +--<B>UIScrollViewer</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300116e010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300116e010100">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer();
</FONT></PRE>
<P><P>Creates a scroll viewer control with no content. 
<P><B>Remarks:</B> <P>To add a content component to the control, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. The control displays scroll bars only when they are needed to view the content component. The content component's horizontal and vertical scroll line increments are 10 pixels each. 
<P>By default, the horizontal scroll bar is placed at the bottom of the scroll viewer control. The vertical scroll bar is placed at the right. The horizontal and vertical header bars are placed at the top and at the left of the control, respectively. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010200">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The control displays scroll bars only when they are needed to view the content component. The content component's horizontal and vertical scroll line increments are 10 pixels each. To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
<P>By default, the horizontal scroll bar is placed at the bottom of the scroll viewer control. The vertical scroll bar is placed at the right. The horizontal and vertical header bars are placed at the top and at the left of the control, respectively. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010300">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp, int style);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component and style. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll viewer control. This parameter specifies where the scroll bars and header bars will be positioned. You can pass any bitwise combination of the following values: <A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>, <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>. You can also pass 0 for the default style, which places scroll bars at the bottom and at the right of the control, and places header bars at the top and at the left. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the control displays scroll bars only when they are needed to view the content component. The content component's horizontal and vertical scroll line increments are 10 pixels each. To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010400">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp, int hLine, int vLine);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component and scroll line increments. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical increment for scrolling the component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the control displays scroll bars only when they are needed to view the content component. The horizontal scroll bar is placed at the bottom of the scroll viewer control. The vertical scroll bar is placed at the right. The horizontal and vertical header bars are placed at the top and at the left of the control, respectively. 
<P>To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010500">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp, int hLine, int vLine, int style);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component, scroll line increments, and style. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll viewer control. This parameter specifies where the scroll bars and header bars will be positioned. You can pass any bitwise combination of the following values: <A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>, <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>. You can also pass 0 for the default style, which places scroll bars at the bottom and at the right of the control, and places header bars at the top and at the left. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the control displays scroll bars only when they are needed to view the content component. To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010600">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp, int hLine, int vLine, int style,
        int scrollStyle);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component, scroll line increments, and styles. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll viewer control. This parameter specifies where the scroll bars and header bars will be positioned. You can pass any bitwise combination of the following values: <A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>, <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>. You can also pass 0 for the default style, which places scroll bars at the bottom and at the right of the control, and places header bars at the top and at the left. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>scrollStyle</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of both scroll bars. Possible values include <A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A>, <A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A>, or <A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e010700">UIScrollViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIScrollViewer(IUIComponent comp, int hLine, int vLine, int style,
        int hstyle, int vstyle);
</FONT></PRE>
<P><P>Creates a scroll viewer control with the specified component, scroll line increments, and styles. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical increment for scrolling the component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll viewer control. This parameter specifies where the scroll bars and header bars will be positioned. You can pass any bitwise combination of the following values: <A HREF="UIScrollViewer.htm#com_000300116e03000c">SCROLL_TOP</A>, <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_LEFT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030002">HEADER_BOTTOM</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030005">HEADER_RIGHT</A>. You can also pass 0 for the default style, which places scroll bars at the bottom and at the right of the control, and places header bars at the top and at the left. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hstyle</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the horizontal scroll bar. Possible values include <A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A>, <A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A>, or <A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vstyle</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the vertical scroll bar. Possible values include <A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A>, <A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A>, or <A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To change the content component, call <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> or <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300116e020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300116e020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints, int index);
</FONT></PRE>
<P><P>Adds the specified component with the specified constraints. If a component already exists at this index, it is replaced with the specified component. 
<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints identifying where to add the component. This must be one of the following constraints, or the method performs no operation and returns null. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> 
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The z-order index of the component to be added or replaced. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>When adding components, the <A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> and <A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A> components must implement the <A HREF="IUIScroll.htm">IUIScroll</A> interface; otherwise, they cannot be added. The <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A>, <A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A>, and <A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> components must implement <A HREF="IUIPosition.htm">IUIPosition</A>. If they do not, <B>add</B> first converts them to <A HREF="UIViewer.htm">UIViewer</A> objects before adding them to the scroll viewer control. To set the content, you can also call the <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A> method, which returns the previous content component. For examples of how to call <B>add</B> and <B>setContent</B>, see the <A HREF="UIScrollViewer.htm">UIScrollViewer</A> overview. 
<P><B>Overrides:</B> <P><A HREF="UIPanel.htm#com_0003001160020100">add(IUIComponent,Object,int)</A> in <A HREF="UIPanel.htm">UIPanel</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined constraint object was specified. 


<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020600">getLayoutComponent</A>, <A HREF="UIScrollViewer.htm#com_000300116e021400">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020200">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Invokes <B>addNotify</B> for each component in the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023500">removeNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020300">ensureVisible</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean ensureVisible(Rectangle rect);
</FONT></PRE>
<P><P>Brings the area identified by the specified rectangle into view. 
<P><B>Return Value:</B> <P>Returns true if any component was moved or resized to make the rectangle visible; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle identifying the area to be made visible. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called when the scroll viewer control has focus. If the entire rectangle does not fit inside the viewer control, the upper-right corner of the rectangle is favored. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020400">getContent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getContent();
</FONT></PRE>
<P><P>Retrieves the component currently being displayed in the scroll viewer control. 
<P><B>Return Value:</B> <P>Returns the content component. If the scroll viewer's content is a <A HREF="UIViewer.htm">UIViewer</A> object, the content component of the <B>UIViewer</B> object is returned. 

<P><B>Remarks:</B> <P>To retrieve other components in the scroll viewer (such as scroll bars and header bars), call the <A HREF="UIScrollViewer.htm#com_000300116e020600">getLayoutComponent</A> method. Be aware that calling <B>getContent</B> is different than calling <B>getLayoutComponent</B> with the <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> index. If the scroll viewer's content is a <A HREF="UIViewer.htm">UIViewer</A> object, <B>getLayoutComponent</B> returns the <B>UIViewer</B> object, while <B>getContent</B> returns the content of the <B>UIViewer</B> object. 
<P>For more information about scroll viewers and their content, see the <A HREF="UIScrollViewer.htm">UIScrollViewer</A> overview. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021600">setContent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020500">getHLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getHLine();
</FONT></PRE>
<P><P>Retrieves the number of pixels associated with a horizontal scroll position. 

<P><B>Return Value:</B> <P>Returns the number of pixels in the horizontal scroll bar's scroll line. 

<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020c00">getVLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020700">getLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021700">setHLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020600">getLayoutComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getLayoutComponent(Object constraints);
</FONT></PRE>
<P><P>Retrieves the component at the specified constraint. 
<P><B>Return Value:</B> <P>Returns the specified component, if found; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints identifying where to add the component. This value depends on the layout manager of the underlying UI object. This must be one of the following constraints, or the method performs no operation and returns null. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> 
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Calling <B>getLayoutComponent</B> with the <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> constraint is different than calling <A HREF="UIScrollViewer.htm#com_000300116e020400">getContent</A>. If the scroll viewer's content is a <A HREF="UIViewer.htm">UIViewer</A> object, <B>getLayoutComponent</B> returns the <B>UIViewer</B> object, while <B>getContent</B> returns the content of the <B>UIViewer</B> object. 
<P>For more information about scroll viewers and their content, see the <A HREF="UIScrollViewer.htm">UIScrollViewer</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined constraint object was specified. 


<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A>, <A HREF="UIScrollViewer.htm#com_000300116e021400">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020700">getLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getLine();
</FONT></PRE>
<P><P>Retrieves the number of pixels associated with the horizontal and vertical scroll positions. 

<P><B>Return Value:</B> <P>Returns a <B>Point</B> object that contains the number of pixels in a scroll line. The x coordinate specifies the horizontal scroll line; the y coordinate specifies the vertical scroll line. 

<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020500">getHLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020c00">getVLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021800">setLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020800">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize();
</FONT></PRE>
<P><P>Retrieves the minimum size (in pixels) of the scroll viewer control. The minimum size is based on the preferred size of each component. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object that contains the minimum size. 

<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020a00">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020900">getPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getPosition();
</FONT></PRE>
<P><P>Retrieves the current position of the scroll viewer's content. 
<P><B>Return Value:</B> <P>Returns a <B>Point</B> object that contains the content component's position. The x and y coordinates specify the horizontal and vertical positions (in pixels), respectively. 

<P><B>Remarks:</B> <P>This method implements <B>getPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020d00">getXPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020e00">getYPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021900">setPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020a00">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred size (in pixels) of the scroll viewer control. The preferred size is based on the preferred size of each component. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object that contains the preferred size (in pixels). 

<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020800">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020b00">getRoleCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRoleCode();
</FONT></PRE>
<P><P>Retrieves the <B>ROLE_SYSTEM</B> code that best describes the role of the scroll viewer control. 

<P><B>Return Value:</B> <P>Returns the <A HREF="IUIAccessible.htm#com_000300118b020035">ROLE_SYSTEM_PANE</A> code. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020c00">getVLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getVLine();
</FONT></PRE>
<P><P>Retrieves the number of pixels associated with a vertical scroll position. 

<P><B>Return Value:</B> <P>Returns the number of pixels in the vertical scroll bar's scroll line. 

<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020500">getHLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020700">getLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021d00">setVLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020d00">getXPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getXPosition();
</FONT></PRE>
<P><P>Retrieves the horizontal position of the scroll viewer's content component. 
<P><B>Return Value:</B> <P>Returns the horizontal position (in pixels). 

<P><B>Remarks:</B> <P>This method implements <B>getXPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020e00">getYPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020900">getPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021e00">setXPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e020e00">getYPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getYPosition();
</FONT></PRE>
<P><P>Retrieves the vertical position of the scroll viewer's content component. 
<P><B>Return Value:</B> <P>Returns the vertical position (in pixels). 

<P><B>Remarks:</B> <P>This method implements <B>getYPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020d00">getXPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020900">getPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021f00">setYPosition</A>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300116e021000">handleEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean handleEvent(Event e);
</FONT></PRE>
<P><P>Responds to scroll events sent from the horizontal and vertical scroll bars by adjusting the content, header, and scroll bar components. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021100">isKeyable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isKeyable();
</FONT></PRE>
<P><P>Determines whether the control can receive keyboard input. 

<P><B>Return Value:</B> <P>Returns true if the control can receive keyboard input; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021200">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event e, int key);
</FONT></PRE>
<P><P>Scrolls the content component according to the key being pressed. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the scroll viewer control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that has been pressed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called when the control has focus and a key is pressed. <B>keyDown</B> responds to the following <I>key</I> values. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Key
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Response
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HOME, END, PAGEUP, PAGEDOWN, UP ARROW, DOWN ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adjusts the vertical scroll bar and the vertical position of the content component accordingly. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">LEFT ARROW, RIGHT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Adjusts the horizontal scroll bar and the horizontal position of the content component accordingly. 
</FONT></TD>
</TR>
</TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021300">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout();
</FONT></PRE>
<P><P>Lays out the scroll viewer control and its components according to constraints specified in the layout manager. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>When laying out the scroll bar components, this method adjusts the position of each scroll bar to reflect the content component's current scroll position. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021400">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the scroll viewer control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>You can use the <A HREF="UIScrollViewer.htm#com_000300116e020600">getLayoutComponent</A> method to specify the component to be removed, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Remove the horizontal scroll bar from
// the UIScrollViewer object sv.
sv.setScrollStyle(sv.getLayoutComponent(UIScrollViewer.SCROLL_HORZ),NOSHOW);
</FONT></PRE>
<P><P>To add a component to the scroll viewer control, call the <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021500">replace</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent replace(IUIComponent comp, Object constraints);
</FONT></PRE>
<P><P>Replaces the current component with the new component according to the specified constraints. 

<P><B>Return Value:</B> <P>Returns the newly replaced component, or null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new component. The constraints identifying where to replace the component. This value depends on the layout manager of the underlying UI object. This must be one of the following constraints, or the method performs no operation and returns null. 
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000d">SCROLL_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A> 
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> 
</FONT></TD>
</TR>
</TABLE>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300116e020f00">requestFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void requestFocus();
</FONT></PRE>
<P><P>Transfers focus to the viewer control's content component. 
<P><B>Return Value:</B> <P>No return value. 
</BLOCKQUOTE>


<H4 STYLE="color:#333366"><A NAME="com_000300116e021600">setContent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setContent(IUIComponent content);
</FONT></PRE>
<P><P>Sets the scroll viewer control's content to the specified component. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>content</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed within the scroll viewer control. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To set the other components in the scroll viewer (such as scroll bars and header bars), call the <A HREF="UIScrollViewer.htm#com_000300116e020100">add</A> method. Be aware that calling <B>setContent</B> is different from calling <B>add</B> with the <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> constraint. <B>setContent</B> automatically converts the specified component to a <A HREF="UIViewer.htm">UIViewer</A> object, while <B>add</B> only converts the component if it does not implement the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P>For more information about scroll viewers and their content, see the <A HREF="UIScrollViewer.htm">UIScrollViewer</A> overview. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e020400">getContent</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021700">setHLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHLine(int line);
</FONT></PRE>
<P><P>Sets the number of pixels associated with a horizontal scroll position. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>line</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels for the horizontal scroll bar's scroll line. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021d00">setVLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021800">setLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020500">getHLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021800">setLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLine(int hLine, int vLine);
</FONT></PRE>
<P><P>Sets the number of pixels associated with horizontal and vertical scroll positions. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>hLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels for the horizontal scroll bar's scroll line. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vLine</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels for the vertical scroll bar's scroll line. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021700">setHLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021d00">setVLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020700">getLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021900">setPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPosition(Point pt);
</FONT></PRE>
<P><P>Moves the scroll viewer's content to the scroll position given by the specified point. 
<P><B>Return Value:</B> <P>No return value. the new position. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested position for the content component. The x and y coordinates of <I>pt</I> specify the horizontal and vertical positions (in pixels), respectively. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021e00">setXPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021f00">setYPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020900">getPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021a00">setPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPosition(int x, int y);
</FONT></PRE>
<P><P>Moves the scroll viewer's content to the position given by the specified values. 
<P><B>Return Value:</B> <P>No return value. the new position. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested horizontal position for the content component (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested vertical position for the content component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021e00">setXPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021f00">setYPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020900">getPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021b00">setScrollStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setScrollStyle(int scroller, int style);
</FONT></PRE>
<P><P>Sets the style of the specified scroll bar. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>scroller</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The scroll bar whose style is being set. Pass <A HREF="UIScrollViewer.htm#com_000300116e030008">S_VERT</A> for the vertical scroll bar, or <A HREF="UIScrollViewer.htm#com_000300116e030007">S_HORZ</A> for the horizontal scroll bar. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll bar. You can pass one of the following values: 
<UL><LI><A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A> 
<LI><A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A> 
<LI><A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A> 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>To apply the style to both scroll bars, you can pass only the style to <B>setScrollStyle</B>, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Give both scroll bars the NOHIDE style.
myScrollViewer.setScrollStyle(UIScroll.NOHIDE);
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021c00">setScrollStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setScrollStyle(int style);
</FONT></PRE>
<P><P>Sets the style of the scroll bars. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the scroll bars. You can pass one of the following values: 
<UL><LI><A HREF="UIScroll.htm#com_000300116b030001">UIScroll.NOHIDE</A> 
<LI><A HREF="UIScroll.htm#com_000300116b030004">UIScroll.NOSHOW</A> 
<LI><A HREF="UIScroll.htm#com_000300116b030003">UIScroll.NONPROPORTIONAL</A> 
</UL>
</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method applies the specified style to both scroll bars. To individually set the style of each scroll bar, pass the scroll bar type to <B>setScrollStyle</B>, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Set the horizontal scroll bar to NOHIDE
// and the vertical scroll bar to NOSHOW.
myScrollViewer.setScrollStyle(UIScrollViewer.S_HORZ, UIScroll.NOHIDE);
myScrollViewer.setScrollStyle(UIScrollViewer.S_VERT, UIScroll.NOSHOW);
</FONT></PRE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021d00">setVLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVLine(int line);
</FONT></PRE>
<P><P>Sets the number of pixels associated with a vertical scroll position. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>line</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of pixels for the vertical scroll bar's scroll line. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021700">setHLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e021800">setLine</A>, <A HREF="UIScrollViewer.htm#com_000300116e020c00">getVLine</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021e00">setXPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setXPosition(int x);
</FONT></PRE>
<P><P>Moves the scroll viewer's content in the horizontal direction by the specified amount. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested horizontal position for the content component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setXPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021f00">setYPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021900">setPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020d00">getXPosition</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116e021f00">setYPosition</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setYPosition(int y);
</FONT></PRE>
<P><P>Moves the scroll viewer's content in the vertical direction by the specified amount. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The requested vertical position for the content component (in pixels). 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setYPosition</B> in the <A HREF="IUIPosition.htm">IUIPosition</A> interface. 
<P><B>See Also:</B> <A HREF="UIScrollViewer.htm#com_000300116e021e00">setXPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e021900">setPosition</A>, <A HREF="UIScrollViewer.htm#com_000300116e020e00">getYPosition</A>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300116e030000">Fields</A></H3><DL>

<DT><B><A NAME="com_000300116e030011">CONT</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e030001">CONTENT</A> constraint.

</DD><DT><B><A NAME="com_000300116e030001">CONTENT</A></B>
</DT><DD>The constraint of the content component. 

</DD><DT><B><A NAME="com_000300116e030012">H_CORNER</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e030003">HEADER_CORNER</A> index.

</DD><DT><B><A NAME="com_000300116e030013">H_HORZ</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e030004">HEADER_HORZ</A> index.

</DD><DT><B><A NAME="com_000300116e030014">H_VERT</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e030006">HEADER_VERT</A> index.

</DD><DT><B><A NAME="com_000300116e030002">HEADER_BOTTOM</A></B>
</DT><DD>Positions the horizontal header bar on the bottom of the scroll viewer panel. The default position is on the top. 

</DD><DT><B><A NAME="com_000300116e030003">HEADER_CORNER</A></B>
</DT><DD>The constraint of the corner component between the header bar components. 

</DD><DT><B><A NAME="com_000300116e030004">HEADER_HORZ</A></B>
</DT><DD>The constraint of the horizontal header bar component. 

</DD><DT><B><A NAME="com_000300116e030005">HEADER_RIGHT</A></B>
</DT><DD>Positions the vertical header bar on the right side of the scroll viewer panel. The default position is on the left. 

</DD><DT><B><A NAME="com_000300116e030006">HEADER_VERT</A></B>
</DT><DD>The constraint of the vertical header bar component. 

</DD><DT><B><A NAME="com_000300116e030015">S_CORNER</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e030009">SCROLL_CORNER</A> index.

</DD><DT><B><A NAME="com_000300116e030007">S_HORZ</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e03000a">SCROLL_HORZ</A> index.

</DD><DT><B><A NAME="com_000300116e030008">S_VERT</A></B>
</DT><DD>The constant used to construct the <A HREF="UIScrollViewer.htm#com_000300116e03000b">SCROLL_VERT</A> index. 

</DD><DT><B><A NAME="com_000300116e030009">SCROLL_CORNER</A></B>
</DT><DD>The constraint of the corner component between the scroll bar components. 

</DD><DT><B><A NAME="com_000300116e03000a">SCROLL_HORZ</A></B>
</DT><DD>The constraint of the horizontal scroll bar component. 

</DD><DT><B><A NAME="com_000300116e03000b">SCROLL_LEFT</A></B>
</DT><DD>Positions the vertical scroll bar on the left side of the scroll viewer panel. The default position is on the right. 

</DD><DT><B><A NAME="com_000300116e03000c">SCROLL_TOP</A></B>
</DT><DD>Positions the horizontal scroll bar on the top of the scroll viewer panel. The default position is on the bottom. 

</DD><DT><B><A NAME="com_000300116e03000d">SCROLL_VERT</A></B>
</DT><DD>The constraint of the vertical scroll bar component. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
