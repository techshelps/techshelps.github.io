<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class AwtUIHost</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIHost.htm#com_0003001115010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIHost.htm#com_0003001115020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUIGraphicBeanInfo.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUIList.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class AwtUIHost</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class AwtUIHost extends <B>Panel</B>
{
  // Constructors
  public <A HREF="AwtUIHost.htm#com_0003001115010100">AwtUIHost</A>();
  public <A HREF="AwtUIHost.htm#com_0003001115010200">AwtUIHost</A>(IUIComponent comp);

  // Methods
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>(IUIComponent comp);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115020200">add</A>(IUIComponent comp, int index);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115020300">add</A>(String name, IUIComponent comp);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115020400">add</A>(IUIComponent comp, Object constraints);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115020500">add</A>(IUIComponent comp, Object constraints,
        int index);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020600">addComponentListener</A>(
        ComponentListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020700">addContainerListener</A>(
        ContainerListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020800">addFocusListener</A>(FocusListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020900">addKeyListener</A>(KeyListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020a00">addMouseListener</A>(MouseListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115020b00">addMouseMotionListener</A>(
        MouseMotionListener l);
  public void <A HREF="AwtUIHost.htm#com_0003001115020c00">addNotify</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115020d00">disable</A>();
  protected final void <A HREF="AwtUIHost.htm#com_0003001115020e00">disableHostEvents</A>(long eventsToDisable);
  public void <A HREF="AwtUIHost.htm#com_0003001115020f00">enable</A>();
  protected final void <A HREF="AwtUIHost.htm#com_0003001115021000">enableHostEvents</A>(long eventsToEnable);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115021100">getComponent</A>(IUIComponent comp);
  public int <A HREF="AwtUIHost.htm#com_0003001115021200">getComponentIndex</A>(IUIComponent comp);
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115021300">getHeader</A>();
  public Dimension <A HREF="AwtUIHost.htm#com_0003001115021400">getPreferredSize</A>();
  public UIRoot <A HREF="AwtUIHost.htm#com_0003001115021500">getRoot</A>();
  public IUIComponent <A HREF="AwtUIHost.htm#com_0003001115021600">getUIComponent</A>(int index);
  public int <A HREF="AwtUIHost.htm#com_0003001115021700">getUIComponentCount</A>();
  public boolean <A HREF="AwtUIHost.htm#com_0003001115021800">handleEvent</A>(Event evt);
  public void <A HREF="AwtUIHost.htm#com_0003001115021900">hide</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115021a00">invalidate</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115021b00">layout</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115021c00">paint</A>(Graphics g);
  public void <A HREF="AwtUIHost.htm#com_0003001115021d00">paintAll</A>(Graphics g);
  public boolean <A HREF="AwtUIHost.htm#com_0003001115021e00">postEvent</A>(Event e);
  public Dimension <A HREF="AwtUIHost.htm#com_0003001115021f00">preferredSize</A>();
  protected final void <A HREF="AwtUIHost.htm#com_0003001115022000">preProcessHostEvent</A>(Event e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022100">processComponentEvent</A>(ComponentEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022200">processContainerEvent</A>(ContainerEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022300">processEvent</A>(AWTEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022400">processFocusEvent</A>(FocusEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A>(AWTEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022600">processKeyEvent</A>(KeyEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022700">processMouseEvent</A>(MouseEvent e);
  protected void <A HREF="AwtUIHost.htm#com_0003001115022800">processMouseMotionEvent</A>(MouseEvent e);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>(Component comp);
  public void <A HREF="AwtUIHost.htm#com_0003001115022a00">remove</A>(int index);
  public void <A HREF="AwtUIHost.htm#com_0003001115022b00">remove</A>(IUIComponent comp);
  public void <A HREF="AwtUIHost.htm#com_0003001115022a00">remove</A>(int index);
  public void <A HREF="AwtUIHost.htm#com_0003001115022b00">remove</A>(IUIComponent comp);
  public void <A HREF="AwtUIHost.htm#com_0003001115022e00">removeAll</A>();
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115022f00">removeComponentListener</A>(
        ComponentListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115023000">removeContainerListener</A>(
        ContainerListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115023100">removeFocusListener</A>(FocusListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115023200">removeKeyListener</A>(KeyListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115023300">removeMouseListener</A>(MouseListener l);
  public synchronized void <A HREF="AwtUIHost.htm#com_0003001115023400">removeMouseMotionListener</A>(
        MouseMotionListener l);
  public void <A HREF="AwtUIHost.htm#com_0003001115023500">removeNotify</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115023600">setBackground</A>(Color clr);
  public void <A HREF="AwtUIHost.htm#com_0003001115023700">setFont</A>(Font fnt);
  public void <A HREF="AwtUIHost.htm#com_0003001115023800">setForeground</A>(Color clr);
  public void <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>(IUIComponent header);
  public void <A HREF="AwtUIHost.htm#com_0003001115023a00">setLayout</A>(IUILayoutManager lm);
  public void <A HREF="AwtUIHost.htm#com_0003001115023b00">show</A>();
  public void <A HREF="AwtUIHost.htm#com_0003001115023c00">show</A>(boolean on);
  public void <A HREF="AwtUIHost.htm#com_0003001115023d00">update</A>(Graphics g);
  public void <A HREF="AwtUIHost.htm#com_0003001115023e00">validate</A>();
  protected void <A HREF="AwtUIHost.htm#com_0003001115023f00">validateTree</A>();
}
</FONT></PRE>
<P>This class links AWT with AFC. <B>AwtUIHost</B> extends the <B>Panel</B> class in AWT and is associated with a <A HREF="UIRoot.htm">UIRoot</A> container. (<B>UIRoot</B> extends the <A HREF="UIPanel.htm">UIPanel</A> class in AFC.) Every host is associated with a root container, and every root container is associated with a host. 
<P><B>AwtUIHost</B> also provides the base support for the AwtUI and UI classes. For example, an <A HREF="AwtUITree.htm">AwtUITree</A> object is an AWT-based control that hosts a <A HREF="UITree.htm">UITree</A> object. The <B>AwtUITree</B> object integrates AFC with AWT. 

<PRE><FONT FACE="Courier" SIZE="2"><B>Panel</B>
  |
  +--<B>AwtUIHost</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001115010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001115010100">AwtUIHost</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIHost();
</FONT></PRE>
<P><P>Creates a host. 
<P><B>Remarks:</B> <P>By default, the host's associated root container is created without a header component. However, you can set a header at any time by calling <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>. To add other components to the root container, call <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>. 
<P>For more information about the root container, see the <A HREF="AwtUIHost.htm">AwtUIHost</A> overview. For more information about header components, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115010200">AwtUIHost</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIHost(IUIComponent comp);
</FONT></PRE>
<P><P>Creates a host using the specified component. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be used for the root container's header. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The host's associated root container is created using the specified component for its header. Later, you can change the header component by calling <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>. To add other components to the root container, call <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>. 
<P>For more information about the root container, see the <A HREF="AwtUIHost.htm">AwtUIHost</A> overview. For more information about header components, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001115020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001115020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified component to the associated root container. 

<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020200">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, int index);
</FONT></PRE>
<P><P>Adds the specified component to the associated root container at the specified index. 

<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to insert the component. To add the component at the end, pass -1. If the root container has a header component, the header is at index 0, and the first child begins at index 1. Otherwise, the first child begins at index 0. For more information about header components, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020300">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(String name, IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified component to the associated root container, according to the specified layout location. 

<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout name identifying where to add the component. This value depends on the root container's current layout manager. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020400">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints);
</FONT></PRE>
<P><P>Adds the specified component to the associated root container according to the specified layout constraints. 

<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints identifying where to add the component. This value depends on the root container's current layout manager. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020500">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, Object constraints, int index);
</FONT></PRE>
<P><P>Adds the specified component to the associated root container according to the specified layout constraints and index. 

<P><B>Return Value:</B> <P>Returns the component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>constraints</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The layout constraints identifying where to add the component. This value depends on the root container's current layout manager. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to insert the component. To add the component at the end, pass -1. If the root container has a header component, the header is at index 0, and the first child begins at index 1. Otherwise, the first child begins at index 0. For more information about header components, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020600">addComponentListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addComponentListener(ComponentListener l);
</FONT></PRE>
<P><P>Adds the specified component listener. The listener receives all component events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022f00">removeComponentListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020700">addContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addContainerListener(ContainerListener l);
</FONT></PRE>
<P><P>Adds the specified container listener. The listener receives all container events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023000">removeContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020800">addFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addFocusListener(FocusListener l);
</FONT></PRE>
<P><P>Adds the specified focus listener. The listener receives all focus events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023100">removeFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020900">addKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addKeyListener(KeyListener l);
</FONT></PRE>
<P><P>Adds the specified key listener. The listener receives all key events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023200">removeKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020a00">addMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addMouseListener(MouseListener l);
</FONT></PRE>
<P><P>Adds the specified mouse listener. The listener receives all mouse events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023300">removeMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020b00">addMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addMouseMotionListener(MouseMotionListener l);
</FONT></PRE>
<P><P>Adds the specified mouse motion listener. The listener receives all mouse motion events generated for the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023400">removeMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020c00">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Invokes <B>addNotify</B> for each component in the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023500">removeNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020d00">disable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void disable();
</FONT></PRE>
<P><P>Disables the host. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>If the associated root container has a header component, this method also disables the root's header. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020e00">disableHostEvents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected final void disableHostEvents(long eventsToDisable);
</FONT></PRE>
<P><P>Disables the events defined by the specified event mask parameter from being delivered to this component. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eventsToDisable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the event mask defining the event types. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115020f00">enable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void enable();
</FONT></PRE>
<P><P>Enables the host. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>If the associated root container has a header component, this method also enables the root's header. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021000">enableHostEvents</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected final void enableHostEvents(long eventsToEnable);
</FONT></PRE>
<P><P>Enables the events defined by the specified event mask parameter to be delivered to this component. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>eventsToEnable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">the event mask defining the event types. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Event types are automatically enabled when a listener for that type is added to the component. Therefore, this method only needs to be invoked by subclasses of a component requiring the specified event types delivered to <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A>, regardless of whether a listener is registered. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021100">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the component contained in the associated root container that is the ancestor of the specified component. The header component or any child component can be retrieved. 

<P><B>Return Value:</B> <P>Returns the root container's immediate child or header component that is the ancestor of the specified component. If the specified component is itself an immediate child (or header) of the root container, this component is returned. If the root container is not an ancestor of the specified component, null is returned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to find the ancestor for. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021200">getComponentIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getComponentIndex(IUIComponent comp);
</FONT></PRE>
<P><P>Retrieves the index of the specified component within the associated root container. 
<P><B>Return Value:</B> <P>Returns the zero-based index of the component (if the component belongs to the root container); otherwise, returns -1. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to retrieve the index for. This component can be the header component or any child component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the root container has a header component, the header is at index 0, and the first child begins at index 1. Otherwise, the first child begins at index 0. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021300">getHeader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getHeader();
</FONT></PRE>
<P><P>Retrieves the header component of the associated root container. 
<P><B>Return Value:</B> <P>Returns the current header component (if the root container has a header); otherwise, returns null. 

<P><B>Remarks:</B> <P>Header components are used by containers to represent the container itself. For example, the text displayed on a button is used as its header component. For more information about headers, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 
<P>If the frame was constructed with an <A HREF="IUIComponent.htm">IUIComponent</A> object, the root container initially uses this component for its header. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115023900">setHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021400">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred dimensions (in pixels) for displaying the associated root container and its components. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115021f00">preferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021500">getRoot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIRoot getRoot();
</FONT></PRE>
<P><P>Retrieves the host's root container. 

<P><B>Return Value:</B> <P>Returns the <A HREF="UIRoot.htm">UIRoot</A> object associated with the host. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021600">getUIComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getUIComponent(int index);
</FONT></PRE>
<P><P>Retrieves the component at the specified index in the associated root container. 

<P><B>Return Value:</B> <P>Returns the specified component. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be retrieved. If the root container has a header component, the header is at index 0 and the first child begins at index 1. Otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021700">getUIComponentCount</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getUIComponentCount();
</FONT></PRE>
<P><P>Retrieves the number of components (including the header) contained in the associated root container. 

<P><B>Return Value:</B> <P>Returns the total number of components. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021800">handleEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean handleEvent(Event evt);
</FONT></PRE>
<P><P>Handles the specified event. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>evt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If a listener has been added through a call to addXXXListener, this method calls <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> to handle the event. Otherwise, the event is handled by one of the event methods (such as <B>action</B> or <B>mouseDown</B>). 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021900">hide</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void hide();
</FONT></PRE>
<P><P>Hides the host and its root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021a00">invalidate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void invalidate();
</FONT></PRE>
<P><P>Invalidates the host, and then updates the layout of the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021b00">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout();
</FONT></PRE>
<P><P>Lays out the components in the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021c00">paint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paint(Graphics g);
</FONT></PRE>
<P><P>Draws the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021d00">paintAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintAll(Graphics g);
</FONT></PRE>
<P><P>Draws the associated root container and its components. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021e00">postEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean postEvent(Event e);
</FONT></PRE>
<P><P>Posts the specified event. 
<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022300">processEvent</A>. If the event's target is the host itself, the event is forwarded to the associated root container for handling. Otherwise, <A HREF="AwtUIHost.htm#com_0003001115021800">handleEvent</A> is invoked. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115021f00">preferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension preferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred dimensions (in pixels) for displaying the associated root container and its components. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115021400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022000">preProcessHostEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected final void preProcessHostEvent(Event e);
</FONT></PRE>
<P><P>Called by <A HREF="AwtUIHost.htm#com_0003001115021800">handleEvent</A> to process the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has been registered through a call to addXXXListener. The <B>preProcessHostEvent</B> method first converts the specified <B>Event</B> object to an <B>AWTEvent</B> object, and then calls <B>processHostEvent(AWTEvent e)</B> to dispatch the event to the appropriate handler. A check is made if the event has been enabled through <B>enableHostEvent</B> or has a listener attached before it is dispatched. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022100">processComponentEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processComponentEvent(ComponentEvent e);
</FONT></PRE>
<P><P>Processes component events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered component listener. When overriding this method, call the super method <B>processComponentEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020600">addComponentListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022200">processContainerEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processContainerEvent(ContainerEvent e);
</FONT></PRE>
<P><P>Processes container events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered key listener. When overriding this method, call the super method <B>processContainerEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020700">addContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022300">processEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processEvent(AWTEvent e);
</FONT></PRE>
<P><P>Called by <B>dispatchEvent</B> to post the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event that has been generated. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method first converts the specified <B>AWTEvent</B> object to an <B>Event</B> object, and then calls <A HREF="AwtUIHost.htm#com_0003001115021e00">postEvent</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022400">processFocusEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processFocusEvent(FocusEvent e);
</FONT></PRE>
<P><P>Processes focus events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered focus listener. When overriding this method, call the super method <B>processFocusEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020800">addFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022500">processHostEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processHostEvent(AWTEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <B>processHostEvent(Event e)</B>. Depending on the type of event, <B>processHostEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">component event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022100">processComponentEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022200">processContainerEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022400">processFocusEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022600">processKeyEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022700">processMouseEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="AwtUIHost.htm#com_0003001115022800">processMouseMotionEvent</A>
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processHostEvent</B>, call the super method <B>processHostEvent</B> to ensure the default event processing continues normally. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022600">processKeyEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processKeyEvent(KeyEvent e);
</FONT></PRE>
<P><P>Processes key events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered key listener. When overriding this method, call the super method <B>processKeyEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020900">addKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022700">processMouseEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processMouseEvent(MouseEvent e);
</FONT></PRE>
<P><P>Processes mouse events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered mouse listener. When overriding this method, call the super method <B>processMouseEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020a00">addMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022800">processMouseMotionEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processMouseMotionEvent(MouseEvent e);
</FONT></PRE>
<P><P>Processes mouse motion events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="AwtUIHost.htm#com_0003001115022500">processHostEvent</A> and dispatches the event to a registered mouse motion listener. When overriding this method, call the super method <B>processMouseMotionEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020b00">addMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022900">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void remove(Component comp);
</FONT></PRE>
<P><P>Removes the specified AwtUI component from the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The AwtUI component to be removed. (Pure AWT components cannot be removed.) 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022a00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(int index);
</FONT></PRE>
<P><P>Removes the component at the specified index from the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be removed. If the root container has a header component, the header is at index 0 and the first child begins at index 1. Otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022e00">removeAll</A>, <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022b00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022e00">removeAll</A>, <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022c00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(int index);
</FONT></PRE>
<P><P>Removes the component at the specified index from the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the component to be removed. If the root container has a header component, the header is at index 0 and the first child begins at index 1. Otherwise, the first child begins at index 0. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022e00">removeAll</A>, <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022d00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022e00">removeAll</A>, <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022e00">removeAll</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeAll();
</FONT></PRE>
<P><P>Removes all components from the associated root container, including the header component. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115022900">remove</A>, <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115022f00">removeComponentListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeComponentListener(ComponentListener l);
</FONT></PRE>
<P><P>Removes the specified component listener. The listener no longer receives the control's component events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020600">addComponentListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023000">removeContainerListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeContainerListener(ContainerListener l);
</FONT></PRE>
<P><P>Removes the specified container listener. The listener no longer receives the control's container events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020700">addContainerListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023100">removeFocusListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeFocusListener(FocusListener l);
</FONT></PRE>
<P><P>Removes the specified focus listener. The listener no longer receives the control's focus events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The focus listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020800">addFocusListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023200">removeKeyListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeKeyListener(KeyListener l);
</FONT></PRE>
<P><P>Removes the specified key listener. The listener no longer receives the control's key events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020900">addKeyListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023300">removeMouseListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeMouseListener(MouseListener l);
</FONT></PRE>
<P><P>Removes the specified mouse listener. The listener no longer receives the control's mouse events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020a00">addMouseListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023400">removeMouseMotionListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeMouseMotionListener(MouseMotionListener l);
</FONT></PRE>
<P><P>Removes the specified mouse motion listener. The listener no longer receives the control's mouse motion events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The mouse motion listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020b00">addMouseMotionListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023500">removeNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeNotify();
</FONT></PRE>
<P><P>Invokes <B>removeNotify</B> for each component in the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115020c00">addNotify</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023600">setBackground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBackground(Color clr);
</FONT></PRE>
<P><P>Sets the host's background color. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>clr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The background color to be used by the host. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the associated root container has a header component, this method also sets the background color of the header. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023700">setFont</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setFont(Font fnt);
</FONT></PRE>
<P><P>Sets the host's font. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>fnt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The font to be used by the host. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the associated root container has a header component, this method also sets the font of the header. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023800">setForeground</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setForeground(Color clr);
</FONT></PRE>
<P><P>Sets the host's foreground color. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>clr</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The foreground color to be used by the host. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the associated root container has a header component, this method also sets the foreground color of the header. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023900">setHeader</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHeader(IUIComponent header);
</FONT></PRE>
<P><P>Sets the header component of the associated root container. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>header</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be used as the root container's header component. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Header components are used by containers to represent the container itself. For example, the text displayed on a button is used as its header component. For more information about headers, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 
<P>If the host was constructed with an <A HREF="IUIComponent.htm">IUIComponent</A> object, the root container initially uses this component for its header. To add other child components, call <A HREF="AwtUIHost.htm#com_0003001115020100">add</A>. 
<P><B>See Also:</B> <A HREF="AwtUIHost.htm#com_0003001115021300">getHeader</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023a00">setLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLayout(IUILayoutManager lm);
</FONT></PRE>
<P><P>Sets the layout manager of the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout manager to be used. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023b00">show</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void show();
</FONT></PRE>
<P><P>Shows the host and its root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023c00">show</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void show(boolean on);
</FONT></PRE>
<P><P>Shows the host and optionally shows the root container. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the root container is made visible; otherwise, it is hidden. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023d00">update</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void update(Graphics g);
</FONT></PRE>
<P><P>Updates the associated root container by redrawing the container and all its components. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023e00">validate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void validate();
</FONT></PRE>
<P><P>Validates the host and the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001115023f00">validateTree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void validateTree();
</FONT></PRE>
<P><P>Validates the host and all of its descendants, and then validates the associated root container. 

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
