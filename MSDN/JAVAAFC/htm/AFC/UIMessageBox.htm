<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIMessageBox</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIMessageBox.htm#com_000300115f010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIMessageBox.htm#com_000300115f020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIMessageBox.htm#com_000300115f030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIMenuList.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIPanel.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIMessageBox</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIMessageBox extends <A HREF="UIDialog.htm">UIDialog</A> implements 
            TimerListener
{
  // Fields
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030001">CENTER</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030002">EXCLAMATION</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030003">INFORMATION</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030004">LEFT</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030005">QUESTION</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030006">RIGHT</A>;
  public final static int <A HREF="UIMessageBox.htm#com_000300115f030007">STOP</A>;

  // Constructors
  public <A HREF="UIMessageBox.htm#com_000300115f010100">UIMessageBox</A>(UIFrame frame);
  public <A HREF="UIMessageBox.htm#com_000300115f010200">UIMessageBox</A>(UIFrame frame, String Title, String Text, int
        image, int buttonSet);
  public <A HREF="UIMessageBox.htm#com_000300115f010300">UIMessageBox</A>(UIFrame frame, String Title, String Text,
        Image image, UIButtonBar buttons);
  public <A HREF="UIMessageBox.htm#com_000300115f010400">UIMessageBox</A>(UIFrame frame, String Title, String Text,
        Image Image, UIButtonBar Buttons, int Alignment,
        int Default );

  // Methods
  public boolean <A HREF="UIMessageBox.htm#com_000300115f020100">action</A>(Event e, Object o);
  public void <A HREF="UIMessageBox.htm#com_000300115f020200">addNotify</A>();
  public Object <A HREF="UIMessageBox.htm#com_000300115f020300">doModal</A>();
  public int <A HREF="UIMessageBox.htm#com_000300115f020400">doModalIndex</A>();
  public int <A HREF="UIMessageBox.htm#com_000300115f020500">getButtonAlignment</A>();
  public UIButtonBar <A HREF="UIMessageBox.htm#com_000300115f020600">getButtons</A>();
  public int <A HREF="UIMessageBox.htm#com_000300115f020700">getDefaultButton</A>();
  public UIFrame <A HREF="UIMessageBox.htm#com_000300115f020800">getFrame</A>();
  public Image <A HREF="UIMessageBox.htm#com_000300115f020900">getImage</A>();
  public Insets <A HREF="UIMessageBox.htm#com_000300115f020a00">getInsets</A>();
  public Dimension <A HREF="UIMessageBox.htm#com_000300115f020b00">getPreferredSize</A>();
  public String <A HREF="UIMessageBox.htm#com_000300115f020c00">getText</A>();
  public int <A HREF="UIMessageBox.htm#com_000300115f020d00">getTimeout</A>();
  public Insets <A HREF="UIMessageBox.htm#com_000300115f020e00">insets</A>();
  public boolean <A HREF="UIMessageBox.htm#com_000300115f020f00">keyDown</A>(Event e, int key);
  public boolean <A HREF="UIMessageBox.htm#com_000300115f021000">keyUp</A>(Event e, int key);
  public Dimension <A HREF="UIMessageBox.htm#com_000300115f021100">preferredSize</A>();
  public void <A HREF="UIMessageBox.htm#com_000300115f021200">setButtonAlignment</A>(int Align);
  public void <A HREF="UIMessageBox.htm#com_000300115f021300">setButtons</A>(UIButtonBar buttons);
  public UIButtonBar <A HREF="UIMessageBox.htm#com_000300115f021400">setButtons</A>(String buttons, int style);
  public void <A HREF="UIMessageBox.htm#com_000300115f021500">setDefaultButton</A>(int i);
  public void <A HREF="UIMessageBox.htm#com_000300115f021600">setImage</A>(int image);
  public void <A HREF="UIMessageBox.htm#com_000300115f021700">setImage</A>(Image i);
  public void <A HREF="UIMessageBox.htm#com_000300115f021800">setText</A>(String text);
  public void <A HREF="UIMessageBox.htm#com_000300115f021900">setTimeout</A>(int time);
  public void <A HREF="UIMessageBox.htm#com_000300115f021a00">timeTriggered</A>(TimerEvent e);
}
</FONT></PRE>
<P>This class implements a message box window. <B>UIMessageBox</B> enables you to generate message boxes that conform to Windows guidelines or create custom message boxes using several types of button alignments, custom buttons, and imported images. A set of predefined buttons and standard system images are supplied to make basic message box construction simple and efficient. Message boxes may only be modal. 
<P>The following example shows how to construct multiple types of message boxes: 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a generic message box with the title
//"Image File Read Error", a message that informs the user
// that the file could not be opened, and an appropriate
// system-defined image.
String message = "The image file was not found, 
&#009;&#009;&#009;&#009;&#009;or cannot be opened.";
UIMessageBox fileNotFound = new UIMessageBox(parentFrame, 
                      "File Not Found", message, UIMessageBox.STOP, 
                       UIButtonBar.RETRYCANCEL);

// Construct a message box with custom image, two buttons, and 
// LEFT button alignment.
String message2 = "VirusScan found no viruses or Trojan Horses on
                   this disk. Would you like to scan another?";

UIButtonBar VirScanButns = new UIButtonBar("Scan Another Disk,Exit",
                                           ",",
                                           UIPushButton.RAISED);

UIMessageBox ScanMe = new UIMessageBox (parentFrame,
                                        "VirusScan Ver 1.00",
                                         message2, VirScanImg,
                                         VirScanButns, 
                                         UIMessageBox.RIGHT, -1);

// You can also construct an initially empty message box and 
// populate it using the <A HREF="UIMessageBox.htm#com_000300115f021800">setText</A>, <A HREF="UIMessageBox.htm#com_000300115f021600">setImage</A>, <A HREF="UIMessageBox.htm#com_000300115f021300">setButtons</A>,
// and <A HREF="UIMessageBox.htm#com_000300115f021200">setButtonAlignment</A> methods.
UIMessageBox myEmptyBox = new UIMessageBox(parentFrame);

// Call the Dialog class setTitle method.
myEmptyBox.setTitle("DiskCopy");

// Set the message that is displayed by the message box.
myEmptyBox.setText("Copy complete.");

// Use a pre-defined image for the message box.
myEmptyBox.setImage(UIMessageBox.INFORMATION);

// Because this is an information box, we need only
// supply an OK button for the end user.
myEmptyBox.setButtons(new UIButtonBar("OK", 
                                  UIPushButton.RAISED));

// Set the button so that it is aligned in the center of 
// the message box.
myEmptyBox.setButtonAlignment(UIMessageBox.CENTER);
</FONT></PRE>
<P><B>UIMessageBox</B> objects may be automatically dismissed when associated with a timer. Use the <A HREF="UIMessageBox.htm#com_000300115f021900">setTimeout</A> method to set the length of time the message box should be displayed and call the <A HREF="UIMessageBox.htm#com_000300115f020300">doModal</A> method as you normally would. The following example shows you how to set a timed modal message box. 
<PRE><FONT FACE="Courier" SIZE="2">// The myEmptyBox message box created in the previous example 
// can be used as a timed, informative message box that requires 
// no end user interaction. The message box is still constructed
// in the same way, but it will be displayed for 3 seconds, and then 
// automatically  destroyed when the <A HREF="UIMessageBox.htm#com_000300115f021a00">timeTriggered</A> 
// method is called.
myEmptyBox.setTimeout(3000);

myEmptyBox.doModal();
</FONT></PRE>
<P>The com.ms.fx package provides classes that manage the system images and fonts typically used in message and dialog boxes, as well as four standard system images in .gif file format. See the <A HREF="FxSystemIcon.htm">FxSystemIcon</A> and <A HREF="FxSystemFont.htm">FxSystemFont</A> classes for more information. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UIPanel.htm">UIPanel</A>
        |
        +--<A HREF="UIRoot.htm">UIRoot</A>
          |
          +--<A HREF="UIWindow.htm">UIWindow</A>
            |
            +--<A HREF="UIDialog.htm">UIDialog</A>
              |
              +--<B>UIMessageBox</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300115f010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300115f010100">UIMessageBox</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIMessageBox(UIFrame frame);
</FONT></PRE>
<P><P>Creates a message box with no title, text, image, or buttons. By default, the message box is center aligned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>frame</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The parent container to attach the message box to. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f010200">UIMessageBox</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIMessageBox(UIFrame frame, String Title, String Text, int image,
        int buttonSet);
</FONT></PRE>
<P><P>Creates a message box with specified title, text, pre-defined image, and buttons. By default, the message box is center aligned. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>frame</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The parent container to attach the message box to. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Title</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The title of the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Text</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The message that is displayed in the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An index to one of 4 default images or zero. The images may be one of the following: 
<DL>
<DT><A HREF="UIMessageBox.htm#com_000300115f030007">STOP</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030005">QUESTION</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030002">EXCLAMATION</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030003">INFORMATION</A> 
</DT></DL>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>buttonSet</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">One of the predefined sets of buttons in <A HREF="UIButtonBar.htm">UIButtonBar</A>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f010300">UIMessageBox</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIMessageBox(UIFrame frame, String Title, String Text, Image image,
        UIButtonBar buttons);
</FONT></PRE>
<P><P>Creates a message box with specified title, text, image, and buttons. By default, the message box is center aligned. This constructor enables you to use custom images for your message boxes and sets of <A HREF="UIPushButton.htm">UIPushButton</A> objects wrapped by a <A HREF="UIButtonBar.htm">UIButtonBar</A> object. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>frame</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The parent container to attach the message box to. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Title</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The title of the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Text</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The message that is displayed in the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The imported image displayed to the left of the text in the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>buttons</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="UIButtonBar.htm">UIButtonBar</A> object that contains the buttons for the message box. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f010400">UIMessageBox</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIMessageBox(UIFrame frame, String Title, String Text, Image Image,
        UIButtonBar Buttons, int Alignment, int Default );
</FONT></PRE>
<P><P>Creates a message box with the specified title, text, imported image, buttons, and alignment. You can also specify a default button with this constructor. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>frame</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The parent container to attach the message box to. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Title</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The title of the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Text</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The message that is displayed in the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The imported image displayed to the left of the text in the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Buttons</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <A HREF="UIButtonBar.htm">UIButtonBar</A> object that contains the buttons for the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Alignment</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The alignment of the buttons in the message box. By default this is <A HREF="UIMessageBox.htm#com_000300115f030001">CENTER</A>, but it may also be <A HREF="UIMessageBox.htm#com_000300115f030004">LEFT</A> or <A HREF="UIMessageBox.htm#com_000300115f030006">RIGHT</A>. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Default</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A specified default button or -1 for no default. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300115f020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300115f020100">action</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean action(Event e, Object o);
</FONT></PRE>
<P><P>Performs operations depending on which button inside the message box was pushed. 
<P><B>Note</B>  When cancelling the dialog, the method calls <A HREF="UIDialog.htm#com_0003001145020200">UIDialog.dispose</A>. 
<P><B>Return Value:</B> <P>Returns true if the action was successfully executed; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event, such as a <B>KEY_RELEASE</B> or <B>MOUSE_UP</B>, generated within the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The button that was pushed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020200">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method initializes the font of the message box. The font's style is set to <B>PLAIN</B>, and the size is set to 8 points. <B>addNotify</B> also adds the button bar, image, and text components to the message box. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020300">doModal</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Object doModal();
</FONT></PRE>
<P><P>Displays the message box as a modal message box and retrieves the button that is pressed. The message box can also be automatically destroyed by using an associated timer. 

<P><B>Return Value:</B> <P>Returns the pressed button. Use the <A HREF="IUIComponent.htm#com_000300118d011c00">getID</A> method to retrieve the button's identifier and compare that to the <A HREF="UIButtonBar.htm">UIButtonBar</A> used to construct the message box. 
<P><B>Remarks:</B> <P>A modal message box requires the user to interact with the message box before continuing in any other of the application's windows.
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021900">setTimeout</A>, <A HREF="UIMessageBox.htm#com_000300115f020d00">getTimeout</A>, <A HREF="UIMessageBox.htm#com_000300115f021a00">timeTriggered</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020400">doModalIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int doModalIndex();
</FONT></PRE>
<P><P>Displays the message box as a modal message box and retrieves the index of the button that is pressed. 

<P><B>Return Value:</B> <P>Returns the index of the pressed button; returns -1 if the message box is cancelled. 
<P><B>Remarks:</B> <P>A modal message box requires the user to interact with the message box before continuing in any other of the application's windows.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020500">getButtonAlignment</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getButtonAlignment();
</FONT></PRE>
<P><P>Retrieves the current alignment of the buttons in the message box. 
<P><B>Return Value:</B> <P>Returns either a <A HREF="UIMessageBox.htm#com_000300115f030001">CENTER</A>, <A HREF="UIMessageBox.htm#com_000300115f030004">LEFT</A>, or <A HREF="UIMessageBox.htm#com_000300115f030006">RIGHT</A> alignment flag. 

<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021200">setButtonAlignment</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020600">getButtons</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIButtonBar getButtons();
</FONT></PRE>
<P><P>Retrieves the <A HREF="UIButtonBar.htm">UIButtonBar</A> object that contains the buttons for the message box. 

<P><B>Return Value:</B> <P>Returns the <A HREF="UIButtonBar.htm">UIButtonBar</A> object that contains the buttons for the message box. 

<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021300">setButtons</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020700">getDefaultButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getDefaultButton();
</FONT></PRE>
<P><P>Retrieves the index of the <A HREF="UIButtonBar.htm">UIButtonBar</A> object that is used for default buttons in message boxes. 

<P><B>Return Value:</B> <P>Returns the index of the <A HREF="UIButtonBar.htm">UIButtonBar</A> object that is set as the default button. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020800">getFrame</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIFrame getFrame();
</FONT></PRE>
<P><P>Retrieves the parent container associated with the message box. 

<P><B>Return Value:</B> <P>Returns a <A HREF="UIFrame.htm">UIFrame</A> object that is the parent for the message box. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020900">getImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Image getImage();
</FONT></PRE>
<P><P>Retrieves the image displayed in the message box. 

<P><B>Return Value:</B> <P>Returns the <B>Image</B> displayed in the message box. Returns null if no image is associated with the message box. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020a00">getInsets</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Insets getInsets();
</FONT></PRE>
<P><P>Retrieves the <A HREF="UIMessageBox.htm#com_000300115f020e00">insets</A> of the message box. 

<P><B>Return Value:</B> <P>Returns an object containing the <A HREF="UIMessageBox.htm#com_000300115f020e00">insets</A> for the message box. 

<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f020e00">insets</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020b00">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred dimensions (in pixels) for displaying the control. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object with a width and height of 0 pixels. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020c00">getText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getText();
</FONT></PRE>
<P><P>Retrieves the text that the message box displays. 

<P><B>Return Value:</B> <P>Returns a <B>String</B> buffer that contains the message displayed in the message box. 

<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021800">setText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020d00">getTimeout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getTimeout();
</FONT></PRE>
<P><P>Retrieves the length of time that the message box is displayed, when associated with a timer. 

<P><B>Return Value:</B> <P>Returns the length of time that the message box is displayed. 

<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021900">setTimeout</A>, <A HREF="UIMessageBox.htm#com_000300115f021a00">timeTriggered</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020e00">insets</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Insets insets();
</FONT></PRE>
<P><P>Determines the insets of the message box. 

<P><B>Return Value:</B> <P>Returns the <B>Insets</B> object containing the insets. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f020f00">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event e, int key);
</FONT></PRE>
<P><P>Responds to a key being pressed when the message box has focus. 
<P><B>Return Value:</B> <P>Returns true if the event was successfully handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that has been pressed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method checks for the ENTER or SPACEBAR keys, which indicate a button has been depressed (a choice may be made). The method similarly responds to the ESCAPE key. Otherwise, the superclass handles the <B>keyDown</B> method. 
<P><B>Overrides:</B> <P><A HREF="UIDialog.htm#com_0003001145020800">keyDown(Event,int)</A> in <A HREF="UIDialog.htm">UIDialog</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021000">keyUp</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyUp(Event e, int key);
</FONT></PRE>
<P><P>Responds to a key being released when the message box has focus. 
<P><B>Return Value:</B> <P>Returns true if the event was successfully handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the message box. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that has been released. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method checks for the ENTER and SPACEBAR keys, which indicate a button has been pressed and released, and closes the window. The ESCAPE key closes the window if the message box is not a modal message box and a choice does not need to be made. Otherwise, the superclass handles the <B>keyUp</B> method. 
<P><B>Overrides:</B> <P><A HREF="UIDialog.htm#com_0003001145020900">keyUp(Event,int)</A> in <A HREF="UIDialog.htm">UIDialog</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021100">preferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension preferredSize();
</FONT></PRE>
<P><P>Calculates the minimum size of a message box. The minimum size is limited to one-sixth the screen width. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size, in pixels. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021200">setButtonAlignment</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setButtonAlignment(int Align);
</FONT></PRE>
<P><P>Sets the button alignment in the message box. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>Align</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The button alignment. Possible values include <A HREF="UIMessageBox.htm#com_000300115f030001">CENTER</A>, <A HREF="UIMessageBox.htm#com_000300115f030004">LEFT</A>, or <A HREF="UIMessageBox.htm#com_000300115f030006">RIGHT</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f020500">getButtonAlignment</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021300">setButtons</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setButtons(UIButtonBar buttons);
</FONT></PRE>
<P><P>Sets the buttons that are displayed at the bottom of the message box. 

<P><B>Return Value:</B> <P>No return value. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>buttons</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The buttons that are displayed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021400">setButtons</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIButtonBar setButtons(String buttons, int style);
</FONT></PRE>
<P><P>Sets the button that is displayed at the bottom of the message box using a string for the button name. 
<P><B>Return Value:</B> <P>Returns a <A HREF="UIButtonBar.htm">UIButtonBar</A> with a button of the given name. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>buttons</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name of the button. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The button's style. This may be either <B>FLAT</B> or <B>RAISED</B>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021500">setDefaultButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setDefaultButton(int i);
</FONT></PRE>
<P><P>Sets the given <A HREF="UIButtonBar.htm">UIButtonBar</A> index as the default buttons created with a message box. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the button associated with the <A HREF="UIButtonBar.htm">UIButtonBar</A>. Set this parameter to -1 if you don't want to set a default button for the <B>UIButtonBar</B>. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021600">setImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setImage(int image);
</FONT></PRE>
<P><P>Sets the image that is displayed to the left of the message box as one of four predefined types. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>image</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to use in the message box. This may be one of the following images: 
<DL>
<DT><A HREF="UIMessageBox.htm#com_000300115f030007">STOP</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030005">QUESTION</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030002">EXCLAMATION</A> 
</DT><DT><A HREF="UIMessageBox.htm#com_000300115f030003">INFORMATION</A> 
</DT></DL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021700">setImage</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setImage(Image i);
</FONT></PRE>
<P><P>Sets the image that is displayed to the left of the message box. 

<P><B>Return Value:</B> <P>No return value. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The imported image to use in the message box. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021800">setText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setText(String text);
</FONT></PRE>
<P><P>Sets the message that the message box displays. 

<P><B>Return Value:</B> <P>No return value. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>text</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text in the message box. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is used when the default <A HREF="UIMessageBox.htm">UIMessageBox</A> constructor has been called and no buttons have been added to the message box.
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f020c00">getText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021900">setTimeout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setTimeout(int time);
</FONT></PRE>
<P><P>Sets a timer used to display the message box for a certain amount of time. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>time</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The amount of time that the message box is displayed (in milliseconds). 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f020d00">getTimeout</A>, <A HREF="UIMessageBox.htm#com_000300115f021a00">timeTriggered</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300115f021a00">timeTriggered</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void timeTriggered(TimerEvent e);
</FONT></PRE>
<P><P>Posts a window destroy event to the message box object. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A TimerEvent object that is timing the message box. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>timeTriggered</B> in the TimerListener interface. 
<P><B>Note</B>  if you extend your own class from <A HREF="UIMessageBox.htm">UIMessageBox</A> and implement the <B>TimerListener</B> interface, be sure to call the super method <B>TimerListener(event)</B>. 
<P><B>See Also:</B> <A HREF="UIMessageBox.htm#com_000300115f021900">setTimeout</A>, <A HREF="UIMessageBox.htm#com_000300115f020d00">getTimeout</A>, com.ms.util.TimerListener
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300115f030000">Fields</A></H3><DL>
<DT><B><A NAME="com_000300115f030001">CENTER</A></B>
</DT><DD>The buttons are centered in the message box. 

</DD><DT><B><A NAME="com_000300115f030002">EXCLAMATION</A></B>
</DT><DD>The image used in message boxes when a warning message is displayed. 

</DD><DT><B><A NAME="com_000300115f030003">INFORMATION</A></B>
</DT><DD>The image used in message boxes when an information message is displayed. 

</DD><DT><B><A NAME="com_000300115f030004">LEFT</A></B>
</DT><DD>The buttons are aligned on the left side of the message box. 

</DD><DT><B><A NAME="com_000300115f030005">QUESTION</A></B>
</DT><DD>The image used to query a user. This image is no longer commonly used on the Microsoft&#174; Win32&#174; platform. 

</DD><DT><B><A NAME="com_000300115f030006">RIGHT</A></B>
</DT><DD>The buttons are aligned on the right side of the message box. 

</DD><DT><B><A NAME="com_000300115f030007">STOP</A></B>
</DT><DD>The image used in message boxes when a critical message is displayed. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
