<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIRowLayout</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIRowLayout.htm#com_000300116a010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIRowLayout.htm#com_000300116a020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIRow.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIScroll.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIRowLayout</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIRowLayout extends <A HREF="UILayoutManager.htm">UILayoutManager</A>
{
  // Constructors
  public <A HREF="UIRowLayout.htm#com_000300116a010100">UIRowLayout</A>(int columns);
  public <A HREF="UIRowLayout.htm#com_000300116a010200">UIRowLayout</A>(IUIComponent header, int columns);
  public <A HREF="UIRowLayout.htm#com_000300116a010300">UIRowLayout</A>(IUIComponent header, int columns, int widths);
  public <A HREF="UIRowLayout.htm#com_000300116a010400">UIRowLayout</A>(IUIComponent header, int columns,
        int widths[]);

  // Methods
  public IUIComponent <A HREF="UIRowLayout.htm#com_000300116a020100">getComponent</A>(IUIContainer cont, int index);
  public Dimension <A HREF="UIRowLayout.htm#com_000300116a020200">getMinimumSize</A>(IUIContainer parent);
  public int <A HREF="UIRowLayout.htm#com_000300116a020300">getOrderIndex</A>(int index);
  public Dimension <A HREF="UIRowLayout.htm#com_000300116a020400">getPreferredSize</A>(IUIContainer parent);
  public int <A HREF="UIRowLayout.htm#com_000300116a020500">getWidth</A>(int index);
  public int[] <A HREF="UIRowLayout.htm#com_000300116a020600">getWidths</A>();
  public boolean <A HREF="UIRowLayout.htm#com_000300116a020700">isOverlapping</A>();
  public boolean <A HREF="UIRowLayout.htm#com_000300116a020800">isWidthRelative</A>();
  public void <A HREF="UIRowLayout.htm#com_000300116a020900">layout</A>(IUIContainer target, Rectangle bounds);
  public void <A HREF="UIRowLayout.htm#com_000300116a020a00">moveColumn</A>(int from, int to);
  public IUIComponent <A HREF="UIRowLayout.htm#com_000300116a020b00">navigate</A>(IUIContainer cont,
        IUIComponent comp, int dir, boolean keyable);
  public void <A HREF="UIRowLayout.htm#com_000300116a020c00">setWidth</A>(int index, int width);
  public void <A HREF="UIRowLayout.htm#com_000300116a020d00">setWidths</A>(int width);
  public void <A HREF="UIRowLayout.htm#com_000300116a020e00">setWidths</A>(int widths[]);
}
</FONT></PRE>
<P>This class implements a layout manager for a row of objects or columns. <A HREF="UIHeaderRow.htm">UIHeaderRow</A> uses <B>UIRowLayout</B> for its default layout manager. 
<P><B>UIRowLayout</B> maintains an index and an order for each column. When the layout manager is first created, the index of each column is defined by its initial order. The <A HREF="UIRowLayout.htm#com_000300116a020a00">moveColumn</A> method enables you to change the order of the columns; however, the index of each column does not change. 
<P>The following example demonstrates the <A HREF="UIRowLayout.htm#com_000300116a020a00">moveColumn</A> method. 
<PRE><FONT FACE="Courier" SIZE="2">
// Construct a UIHeaderRow object. By default,
// UIHeaderRow uses UIRowLayout for its layout
// manager. 
String s [] = { "A," "B," "C," "D" };
UIHeaderRow hr = new UIHeaderRow(s);
add(hr);  // Add hr to the container.

// Initially, the columns are indexed and
// ordered as follows:
//         A  B  C  D
// index:  0  1  2  3
// order:  0  1  2  3
//
// Now retrieve the layout manager and move
// column B (index 1) to the location of 
// column D (index 3).
IUILayoutManager lm = hr.getLayout();
lm.moveColumns(1, 3);

// The columns are now reordered, but
// their original indexes have not
// changed.
//         A  C  D  B
// index:  0  2  3  1
// order:  0  1  2  3
</FONT></PRE>
<P>The <A HREF="UIRowLayout.htm#com_000300116a020300">getOrderIndex</A> method enables you to retrieve the order of a column at a particular index. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UILayoutManager.htm">UILayoutManager</A>
  |
  +--<B>UIRowLayout</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300116a010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300116a010100">UIRowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIRowLayout(int columns);
</FONT></PRE>
<P><P>Creates a row layout manager with the specified number of columns. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>columns</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns to create. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a negative number of columns was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a010200">UIRowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIRowLayout(IUIComponent header, int columns);
</FONT></PRE>
<P><P>Creates a row layout manager with the specified reference header and number of columns. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>header</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference object that all other containers using this layout manager will use to determine their offset. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>columns</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns to create. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a negative number of columns is specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a010300">UIRowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIRowLayout(IUIComponent header, int columns, int widths);
</FONT></PRE>
<P><P>Creates a row layout manager with the specified reference header, number of columns, and initial width for those columns. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>header</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference object that all other containers using this layout manager will use to determine their offset. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>columns</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns to create. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>widths</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The initial width for each column. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a negative number of columns is specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a010400">UIRowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIRowLayout(IUIComponent header, int columns, int widths[]);
</FONT></PRE>
<P><P>Creates a row layout manager with the specified reference header, number of columns, and initial widths for those columns. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>header</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The reference object that all other containers using this layout manager will use to determine their offset. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>columns</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of columns to create. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>widths</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Array of the initial width for each column. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if a negative number of columns is specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300116a020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300116a020100">getComponent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getComponent(IUIContainer cont, int index);
</FONT></PRE>
<P><P>Retrieves the component at the specified index. 
<P><B>Return Value:</B> <P>Returns the specified component, if found; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cont</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the component to retrieve. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010400">getComponent(IUIContainer,int)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020200">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>getMinimumSize</B> method. The height of the returned <B>Dimension</B> object is the largest of the minimum heights of each column, plus the container's top and bottom insets. The width is the sum of the widths of the columns plus the container's left and right insets. If the <A HREF="UIRowLayout.htm#com_000300116a020c00">setWidth</A> method has been called for a column, this new width is used to compute the container's width; otherwise, the column's minimum width is used. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010800">getMinimumSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020300">getOrderIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getOrderIndex(int index);
</FONT></PRE>
<P><P>Retrieves the order of the column at the specified index. 
<P><B>Return Value:</B> <P>Returns the zero-based order of the column. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the column. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index and order, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020400">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>getPreferredSize</B> method. The height of the returned <B>Dimension</B> object is the largest of the preferred heights of each column. The width is the sum of the widths of the columns. If the <A HREF="UIRowLayout.htm#com_000300116a020c00">setWidth</A> method has been called for a column, this new width is used to compute the container's width; otherwise, the column's preferred width is used. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010900">getPreferredSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020200">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020500">getWidth</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getWidth(int index);
</FONT></PRE>
<P><P>Retrieves the current width of the column at the specified index. 
<P><B>Return Value:</B> <P>Returns the width (in pixels) of the specified column. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the column. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020c00">setWidth</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020600">getWidths</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int[] getWidths();
</FONT></PRE>
<P><P>Retrieves the current widths for all the columns. 
<P><B>Return Value:</B> <P>Returns an array of the widths (in pixels) for each of the columns. 

<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020d00">setWidths</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020700">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>This method simply returns false, indicated that the <A HREF="UIRowLayout.htm">UIRowLayout</A> lays out its components such that they never overlap. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010d00">isOverlapping()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020800">isWidthRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isWidthRelative();
</FONT></PRE>
<P><P>This method simply returns false indicating that the <A HREF="UIRowLayout.htm">UIRowLayout</A> does not layout its components based on the width of the container. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010e00">isWidthRelative()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIComponent.htm#com_0003001142013e00">isHeightRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020900">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout(IUIContainer target, Rectangle bounds);
</FONT></PRE>
<P><P>Lays out the components in the specified container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container being laid out. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle in which to lay out the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by the container's <B>layout</B> method. By default, the bounding rectangle's width is divided equally among the number of components, or columns, so that each column has the same width, with no gap between columns. The height of each column is the height of the bounding rectangle. If the <A HREF="UIRowLayout.htm#com_000300116a020c00">setWidth</A> method is later called to change the width of a column, <B>layout</B> uses the new column width. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010f00">layout(IUIContainer,Rectangle)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020a00">moveColumn</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void moveColumn(int from, int to);
</FONT></PRE>
<P><P>Moves a column from one location to another. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>from</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index that identifies the column to move. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>to</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index that identifies where the column is moving to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about moving columns, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020b00">navigate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent navigate(IUIContainer cont, IUIComponent comp, int dir,
        boolean keyable);
</FONT></PRE>
<P><P>Navigates from the specified component to another component in the specified direction. 
<P><B>Return Value:</B> <P>Returns the component navigated to (if a component in the specified direction exists); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cont</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container where the navigation is occurring. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The tab component to navigate from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the following values defined in <A HREF="IUIAccessible.htm">IUIAccessible</A>: 
<UL><LI><A HREF="IUIAccessible.htm#com_000300118b020008">NAVDIR_LEFT</A> 
<LI><A HREF="IUIAccessible.htm#com_000300118b02000b">NAVDIR_RIGHT</A> 
<LI><A HREF="IUIAccessible.htm#com_000300118b020006">NAVDIR_FIRST</A> 
<LI><A HREF="IUIAccessible.htm#com_000300118b020007">NAVDIR_LAST</A> 
<LI><A HREF="IUIAccessible.htm#com_000300118b020009">NAVDIR_NEXT</A> 
<LI><A HREF="IUIAccessible.htm#com_000300118b02000a">NAVDIR_PREV</A> 
</UL>
</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, only components that are able to receive keyboard input can be navigated to; otherwise, all components can be navigated to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method handles keyboard navigation in the container. When a component in the container has focus and a key is pressed, <B>navigate</B> is called to move focus to another item in the container. 
<P>The following table shows the keys that have corresponding <A HREF="IUIAccessible.htm">IUIAccessible</A> directions. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Key
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUIAccessible direction
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">LEFT ARROW and RIGHT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b020008">NAVDIR_LEFT</A> and <A HREF="IUIAccessible.htm#com_000300118b02000b">NAVDIR_RIGHT</A>, respectively. 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HOME and END
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b020006">NAVDIR_FIRST</A> and <A HREF="IUIAccessible.htm#com_000300118b020007">NAVDIR_LAST</A>, respectively. 
</FONT></TD>
</TR>
</TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011000">navigate(IUIContainer,IUIComponent,int,boolean)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020c00">setWidth</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setWidth(int index, int width);
</FONT></PRE>
<P><P>Sets the width of the column at the specified index. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the column. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width (in pixels) for the column. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020500">getWidth</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020d00">setWidths</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setWidths(int width);
</FONT></PRE>
<P><P>Sets the widths of all columns to the specified width. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>widths</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new width (in pixels) for each column. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020600">getWidths</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300116a020e00">setWidths</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setWidths(int widths[]);
</FONT></PRE>
<P><P>Sets all the column widths to the specified widths. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>widths</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of new widths (in pixels) for each column. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about a column's index, see the <A HREF="UIRowLayout.htm">UIRowLayout</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an invalid index was specified. 


<P><B>See Also:</B> <A HREF="UIRowLayout.htm#com_000300116a020600">getWidths</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
