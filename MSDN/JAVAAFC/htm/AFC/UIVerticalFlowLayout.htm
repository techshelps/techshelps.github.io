<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIVerticalFlowLayout</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIVerticalFlowLayout.htm#com_0003001185010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIVerticalFlowLayout.htm#com_0003001185020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIVerticalFlowLayout.htm#com_0003001185030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UITreeLayout.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIViewer.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIVerticalFlowLayout</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIVerticalFlowLayout extends <A HREF="UILayoutManager.htm">UILayoutManager</A>
{
  // Fields
  public static final int <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A>;
  public static final int <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>;

  // Constructors
  public <A HREF="UIVerticalFlowLayout.htm#com_0003001185010100">UIVerticalFlowLayout</A>();
  public <A HREF="UIVerticalFlowLayout.htm#com_0003001185010200">UIVerticalFlowLayout</A>(int style);
  public <A HREF="UIVerticalFlowLayout.htm#com_0003001185010300">UIVerticalFlowLayout</A>(int style, int gap);

  // Methods
  public Dimension <A HREF="UIVerticalFlowLayout.htm#com_0003001185020100">adjustLayoutSize</A>(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp,
        Dimension oldSize, Dimension newSize);
  public Dimension <A HREF="UIVerticalFlowLayout.htm#com_0003001185020200">getMinimumSize</A>(IUIContainer parent);
  public Dimension <A HREF="UIVerticalFlowLayout.htm#com_0003001185020300">getMinimumSize</A>(IUIContainer parent,
        Dimension bounds);
  public Dimension <A HREF="UIVerticalFlowLayout.htm#com_0003001185020400">getPreferredSize</A>(IUIContainer parent);
  public Dimension <A HREF="UIVerticalFlowLayout.htm#com_0003001185020500">getPreferredSize</A>(IUIContainer parent,
        Dimension bounds);
  public boolean <A HREF="UIVerticalFlowLayout.htm#com_0003001185020600">isHeightRelative</A>();
  public boolean <A HREF="UIVerticalFlowLayout.htm#com_0003001185020700">isOverlapping</A>();
  public boolean <A HREF="UIVerticalFlowLayout.htm#com_0003001185020800">isWidthRelative</A>();
  public void <A HREF="UIVerticalFlowLayout.htm#com_0003001185020900">layout</A>(IUIContainer parent, Rectangle bounds);
  public IUIComponent <A HREF="UIVerticalFlowLayout.htm#com_0003001185020a00">navigate</A>(IUIContainer cont,
        IUIComponent comp, int dir, boolean keyable);
  public void <A HREF="UIVerticalFlowLayout.htm#com_0003001185020b00">setStyle</A>(int style);
}
</FONT></PRE>
<P>This class implements a vertical flow layout manager. <A HREF="UIList.htm">UIList</A> uses <B>UIVerticalFlowLayout</B> as its default layout manager. <B>UIVerticalFlowLayout</B> enables components in the list to be laid in one vertical column (the default layout) or in multiple columns (if the <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A> layout style is set). <B>UIVerticalFlowLayout</B> also defines the <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A> style, which extends the width of each component's selectable area to the width of the component's column. This means the component can be selected, even when the horizontal area outside of its immediate label is clicked. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UILayoutManager.htm">UILayoutManager</A>
  |
  +--<B>UIVerticalFlowLayout</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001185010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001185010100">UIVerticalFlowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIVerticalFlowLayout();
</FONT></PRE>
<P><P>Creates a vertical flow layout manager. 
<P><B>Remarks:</B> <P>By default, components will be laid out in one vertical column. If the layout manager's style is set to <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>, a horizontal gap of 15 pixels will be added between columns. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185010200">UIVerticalFlowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIVerticalFlowLayout(int style);
</FONT></PRE>
<P><P>Creates a vertical flow layout manager with the specified style. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the layout manager. You can pass any bitwise combination of <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A> and <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A>, or pass 0 for the default style, which is single column with no fill. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Components will be laid out and accessed according to the specified style. If the style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>, a horizontal gap of 15 pixels is added between columns. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185010300">UIVerticalFlowLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIVerticalFlowLayout(int style, int gap);
</FONT></PRE>
<P><P>Creates a vertical flow layout manager with the specified style and horizontal gap. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the layout manager. You can pass any bitwise combination of <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A> and <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A>, or pass 0 for the default style, which is single column with no fill. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>gap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal spacing (in pixels) between columns, if the style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Components will be laid out and accessed according to the specified style. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001185020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001185020100">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension adjustLayoutSize(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp, Dimension oldSize,
        Dimension newSize);
</FONT></PRE>
<P><P>Called to adjust the layout size of the specified component in the specified container. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the new preferred size of the container. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldParentSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the container. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being sized. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the component. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010200">adjustLayoutSize(IUIContainer,Dimension,IUIComponent,Dimension,Dimension)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020200">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The width of the returned <B>Dimension</B> object is the largest of the minimum widths of the components, plus the horizontal gaps between each column (if the layout style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>). The <B>Dimension</B> object's height is based on the sum of the minimum heights of the components that make up a column. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010800">getMinimumSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020300">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer parent, Dimension bounds);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <B>Dimension</B> object used to force the minimum size of a component or container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The width of the returned <B>Dimension</B> object is the largest of the minimum widths of the components, plus the horizontal gaps between each column (if the layout style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>). The <B>Dimension</B> object's height is based on the sum of the minimum heights of the components that comprise a column. Components do not always return the correct minimum size when their parent or containers have been resized (in particular, edit controls that handle word wrapping). The <B>Dimension</B> passed forces the layout manager to adjust appropriately in these cases.
<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020400">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer parent);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The width of the returned <B>Dimension</B> object is the largest of the preferred widths of the components, plus the horizontal gaps between each column (if the layout style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>). The <B>Dimension</B> object's height is based on the sum of the preferred heights of the components that make up a column. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010900">getPreferredSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020200">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020500">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer parent, Dimension bounds);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the components in the specified container, using a specified <B>Dimension</B> to force the sizing of components in special cases. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <B>Dimension</B> object used to force the preferred size of a component or container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Components do not always return the correct preferred size when their parent or containers have been resized (in particular, edit controls that handle word wrapping). The <B>Dimension</B> passed forces the layout manager to adjust appropriately in these cases. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010a00">getPreferredSize(IUIContainer,Dimension)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020200">getMinimumSize</A>, <A HREF="IUIComponent.htm#com_000300118d012600">com.ms.ui.IUIComponent.getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020600">isHeightRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHeightRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the height of the container to lay out its children; false otherwise. 

<P><B>Return Value:</B> <P>Returns true if in multicolumn, false otherwise. Returning false also means that the container's <A HREF="UIVerticalFlowLayout.htm#com_0003001185020900">layout</A> method doesn't need to be called on a horizontal re-sizing. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010c00">isHeightRelative()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020800">isWidthRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020700">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>This method simply returns false by default indicating that the <B>UIVerticalFlow</B> component lays out its children such that they never overlap. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010d00">isOverlapping()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020800">isWidthRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isWidthRelative();
</FONT></PRE>
<P><P>Determines if this layout manager uses the width of the container to lay out its children. . 

<P><B>Return Value:</B> <P>Returns true if this layout manager uses the container's width to lay out the children; false otherwise. (The default is true.) Returning false also means that the container's <A HREF="UIVerticalFlowLayout.htm#com_0003001185020900">layout</A> method doesn't need to be called on a vertical resizing 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010e00">isWidthRelative()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UIVerticalFlowLayout.htm#com_0003001185020600">isHeightRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020900">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout(IUIContainer parent, Rectangle bounds);
</FONT></PRE>
<P><P>Lays out the components in the specified container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container being laid out. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle in which to lay out the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Depending on the layout manager's style, the components are laid out in either one vertical column or in multiple columns, based on their preferred widths and heights. If the style is <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A>, the horizontal gap (defined when the layout manager was created) is used for spacing between each column. 
<P>If the <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A> style is set, <B>layout</B> extends the width of each component's selectable area to the width of the component's column. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010f00">layout(IUIContainer,Rectangle)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020a00">navigate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent navigate(IUIContainer cont, IUIComponent comp, int dir,
        boolean keyable);
</FONT></PRE>
<P><P>Navigates from the specified component to another component in the specified direction. 
<P><B>Return Value:</B> <P>Returns the component navigated to (if a component in the specified direction exists); otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>cont</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container where the navigation is occurring. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to navigate from. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>dir</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The navigation direction. Specify one of the <B>NAVDIR</B> values defined in the <A HREF="IUIAccessible.htm">IUIAccessible</A> interface. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyable</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, only components that are able to receive keyboard input can be navigated to; otherwise, all components can be navigated to. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method handles keyboard navigation in the container. For example, when an item in a <A HREF="UIList.htm">UIList</A> object has focus and a key is pressed, <B>navigate</B> is called to move focus to another item in the list. The following table shows the keys that have corresponding <A HREF="IUIAccessible.htm">IUIAccessible</A> directions. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Key
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>IUIAccessible direction
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">UP ARROW, DOWN ARROW, LEFT ARROW, and RIGHT ARROW
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b02000c">NAVDIR_UP</A>, <A HREF="IUIAccessible.htm#com_000300118b020005">NAVDIR_DOWN</A>, <A HREF="IUIAccessible.htm#com_000300118b020008">NAVDIR_LEFT</A>, and <A HREF="IUIAccessible.htm#com_000300118b02000b">NAVDIR_RIGHT</A>, respectively 
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">HOME and END
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="IUIAccessible.htm#com_000300118b020006">NAVDIR_FIRST</A> and <A HREF="IUIAccessible.htm#com_000300118b020007">NAVDIR_LAST</A>, respectively 
</FONT></TD>
</TR>
</TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011000">navigate(IUIContainer,IUIComponent,int,boolean)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001185020b00">setStyle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setStyle(int style);
</FONT></PRE>
<P><P>Sets the style of the layout manager. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the layout manager. You can pass any bitwise combination of <A HREF="UIVerticalFlowLayout.htm#com_0003001185030002">MULTICOLUMN</A> and <A HREF="UIVerticalFlowLayout.htm#com_0003001185030001">FILL</A>, or pass 0 for the default style, which is single column with no fill. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001185030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003001185030001">FILL</A></B>
</DT><DD>Extends the width of each component's selectable area to the width of the component's column. 

</DD><DT><B><A NAME="com_0003001185030002">MULTICOLUMN</A></B>
</DT><DD>Specifies that components will be laid out in multiple columns, as needed. The horizontal gap (defined when the layout manager was created) is used for spacing between columns. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
