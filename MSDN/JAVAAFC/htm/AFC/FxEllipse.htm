<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class FxEllipse</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxEllipse.htm#com_000300080a010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="FxEllipse.htm#com_000300080a020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="FxCurve.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="FxFill.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class FxEllipse</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class FxEllipse extends <A HREF="FxCurve.htm">FxCurve</A> implements <A HREF="IFxShape.htm">IFxShape</A>
{
  // Constructors
  public <A HREF="FxEllipse.htm#com_000300080a010100">FxEllipse</A>(int x, int y, int w, int h);

  // Methods
  public boolean <A HREF="FxEllipse.htm#com_000300080a020100">contains</A>(Point p);
  public void <A HREF="FxEllipse.htm#com_000300080a020200">draw</A>(FxGraphics g);
  public int <A HREF="FxEllipse.htm#com_000300080a020300">getBorderLength</A>();
  public Rectangle <A HREF="FxEllipse.htm#com_000300080a020400">getBounds</A>();
  public Point <A HREF="FxEllipse.htm#com_000300080a020500">getOrigin</A>();
  public Point <A HREF="FxEllipse.htm#com_000300080a020600">getPoint</A>(int nPels);
  public int[] <A HREF="FxEllipse.htm#com_000300080a020700">getPointAndAngle</A>(int pt);
  public int <A HREF="FxEllipse.htm#com_000300080a020800">getPointAngle</A>(int idx);
  protected Point <A HREF="FxEllipse.htm#com_000300080a020900">getPointPos</A>(int nPels);
  public boolean <A HREF="FxEllipse.htm#com_000300080a020a00">includes</A>(Point p);
  public boolean <A HREF="FxEllipse.htm#com_000300080a020b00">setOrigin</A>(Point p);
  public void <A HREF="FxEllipse.htm#com_000300080a020c00">translate</A>(int deltaX, int deltaY);
  public void <A HREF="FxEllipse.htm#com_000300080a020d00">updateBounds</A>(int x, int y);
}
</FONT></PRE>
<P>This class creates and manages ellipse objects. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="FxCurve.htm">FxCurve</A>
  |
  +--<B>FxEllipse</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300080a010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300080a010100">FxEllipse</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public FxEllipse(int x, int y, int w, int h);
</FONT></PRE>
<P><P>Creates a definable ellipse object by using the same parameters as those used in the <B>Graphics</B> class. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left x coordinate of the ellipse's bounding rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left y coordinate of the ellipse's bounding rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>w</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the ellipse (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>h</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the ellipse (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300080a020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300080a020100">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean contains(Point p);
</FONT></PRE>
<P><P>Determines whether the specified point is within the curve's boundary. (This is supported by java.awt objects). 
<P><B>Return Value:</B> <P>Returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to check. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020200">draw</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void draw(FxGraphics g);
</FONT></PRE>
<P><P>Draws the ellipse, one quadrant at a time. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphic object to use. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020300">getBorderLength</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getBorderLength();
</FONT></PRE>
<P><P>Retrieves the length of the border. 

<P><B>Return Value:</B> <P>Returns the length of the entire border (in pixels). 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020400">getBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getBounds();
</FONT></PRE>
<P><P>Retrieves the bounds of the ellipse. 

<P><B>Return Value:</B> <P>Returns the bounding rectangle of the ellipse. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020500">getOrigin</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getOrigin();
</FONT></PRE>
<P><P>Retrieves the origin that was used. 

<P><B>Return Value:</B> <P>Returns the point that was used as the origin. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020600">getPoint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getPoint(int nPels);
</FONT></PRE>
<P><P>Retrieves a point along the curve that is a specified number of pixels from its origin. 

<P><B>Return Value:</B> <P>Returns the point located at the specified position along the curve. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nPels</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance from the origin of the curve (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020700">getPointAndAngle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int[] getPointAndAngle(int pt);
</FONT></PRE>
<P><P>Retrieves a point on a curve and the angle of the line that is perpendicular to the curve at that point. 
<P><B>Return Value:</B> <P>Returns an array of integers that contain the point and angle. Currently returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to calculate the angles from. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020800">getPointAngle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPointAngle(int idx);
</FONT></PRE>
<P><P>Retrieves the angle of the line that is perpendicular to the curve at the point indicated. 
<P><B>Return Value:</B> <P>Returns the angle of the line that is perpendicular to the curve at the point indicated. Currently returns 0. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>idx</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to calculate the angle from. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020900">getPointPos</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected Point getPointPos(int nPels);
</FONT></PRE>
<P><P>Retrieves a point from a given position. 

<P><B>Return Value:</B> <P>Returns the Point of the given position. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>nPels</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance from the origin of the curve (measured in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020a00">includes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean includes(Point p);
</FONT></PRE>
<P><P>Determines whether the specified point is on the curve. 
<P><B>Return Value:</B> <P>Returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to check. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020b00">setOrigin</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean setOrigin(Point p);
</FONT></PRE>
<P><P>Sets a new origin for the curve. 

<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to set as the new origin. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020c00">translate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void translate(int deltaX, int deltaY);
</FONT></PRE>
<P><P>Translates the vertices by (<I>deltaX</I>, <I>deltaY</I>). 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaX</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance that the x coordinates move. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaY</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance that the y coordinates move. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300080a020d00">updateBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void updateBounds(int x, int y);
</FONT></PRE>
<P><P>Updates the bounding rectangle to fit the point defined by the x and y coordinates. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the point. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the point. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Currently, this method is not implemented.
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
