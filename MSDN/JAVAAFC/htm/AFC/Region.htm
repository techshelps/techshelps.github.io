<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class Region</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Region.htm#com_0003000822010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Region.htm#com_0003000822020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="Region.htm#com_0003000822030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="OutlinePolygon.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="txtRun.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class Region</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class Region implements <B>Cloneable</B>
{
  // Fields
  final public static int <A HREF="Region.htm#com_0003000822030001">AND</A>;
  final public static int <A HREF="Region.htm#com_0003000822030002">COMPLEX</A>;
  final public static int <A HREF="Region.htm#com_0003000822030003">DIFF</A>;
  final public static int <A HREF="Region.htm#com_0003000822030004">EMPTY</A>;
  final public static int <A HREF="Region.htm#com_0003000822030005">OR</A>;
  final public static int <A HREF="Region.htm#com_0003000822030006">SIMPLE</A>;
  final public static int <A HREF="Region.htm#com_0003000822030007">XOR</A>;

  // Constructors
  public <A HREF="Region.htm#com_0003000822010100">Region</A>();
  public <A HREF="Region.htm#com_0003000822010200">Region</A>(int x, int y, int width, int height);
  public <A HREF="Region.htm#com_0003000822010300">Region</A>(Rectangle rect);
  public <A HREF="Region.htm#com_0003000822010400">Region</A>(Region other);
  public <A HREF="Region.htm#com_0003000822010500">Region</A>(Region srcA, Region srcB, int operation)
        throws IllegalArgumentException;
  public <A HREF="Region.htm#com_0003000822010600">Region</A>(Rectangle rectA, Rectangle rectsB[], int operation)
        throws IllegalArgumentException;
  public <A HREF="Region.htm#com_0003000822010700">Region</A>(Rectangle rectA, Rectangle rectsB[], int count, int
        operation) throws IllegalArgumentException;

  // Methods
  public final Object <A HREF="Region.htm#com_0003000822020100">clone</A>();
  public final Region <A HREF="Region.htm#com_0003000822020200">combine</A>(Region other, int operation)
        throws IllegalArgumentException;
  public final Region <A HREF="Region.htm#com_0003000822020300">combine</A>(Rectangle rect, int operation) throws
        IllegalArgumentException;
  public final int <A HREF="Region.htm#com_0003000822020400">complexity</A>();
  public final boolean <A HREF="Region.htm#com_0003000822020500">contains</A>(int x, int y);
  public final boolean <A HREF="Region.htm#com_0003000822020600">contains</A>(Point pt);
  public final Region <A HREF="Region.htm#com_0003000822020700">copy</A>(Region other)
        throws IllegalArgumentException;
  public final Region <A HREF="Region.htm#com_0003000822020800">empty</A>();
  public final boolean <A HREF="Region.htm#com_0003000822020900">equals</A>(Region other);
  public final boolean <A HREF="Region.htm#com_0003000822020a00">equals</A>(Object other);
  public final boolean <A HREF="Region.htm#com_0003000822020b00">fillBounds</A>(Rectangle rect);
  public final Rectangle <A HREF="Region.htm#com_0003000822020c00">getBounds</A>();
  public final int[][] <A HREF="Region.htm#com_0003000822020d00">getGeometry</A>();
  public final int <A HREF="Region.htm#com_0003000822020e00">hashCode</A>();
  public final boolean <A HREF="Region.htm#com_0003000822020f00">intersects</A>(int x, int y, int width,
        int height);
  public final boolean <A HREF="Region.htm#com_0003000822021000">intersects</A>(Rectangle rect);
  public final Region <A HREF="Region.htm#com_0003000822021100">invert</A>() throws IllegalArgumentException;
  public final boolean <A HREF="Region.htm#com_0003000822021200">isEmpty</A>();
  public final Region <A HREF="Region.htm#com_0003000822021300">offset</A>(int deltaX, int deltaY);
  public final Region <A HREF="Region.htm#com_0003000822021400">offset</A>(Point delta);
  public final Region <A HREF="Region.htm#com_0003000822021500">set</A>(int x, int y, int width, int height);
  public final Region <A HREF="Region.htm#com_0003000822021600">set</A>(Rectangle rect);
  public final String <A HREF="Region.htm#com_0003000822021700">toString</A>();
}
</FONT></PRE>
<P>This class is a data structure that represents arbitary shapes, and is used to support windowless controls in the Application Foundation Classes. 

<H3 STYLE="color:#333366"><A NAME="com_0003000822010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000822010100">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region();
</FONT></PRE>
<P><P>Constructs an empty region. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010200">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Creates a rectangular region. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region's upper-left x coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region's upper-left y coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the region (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the region (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010300">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(Rectangle rect);
</FONT></PRE>
<P><P>Creates a region from a <B>Rectangle</B>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle used to initialize the region. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010400">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(Region other);
</FONT></PRE>
<P><P>Creates a region with geometry identical to the given <A HREF="Region.htm">Region</A> parameter. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <A HREF="Region.htm">Region</A> to copy from. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010500">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(Region srcA, Region srcB, int operation)
        throws IllegalArgumentException;
</FONT></PRE>
<P><P>Creates a region that is the combination of two other regions. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>srcA</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first source region. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>srcB</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The second source region. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>operation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The operation used to combine the source regions. These operations may be one of the following: 
<DL>
<DT><A HREF="Region.htm#com_0003000822030001">AND</A> 
 </DT><DD>Produces the intersection of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030005">OR</A> 
 </DT><DD>Produces the union of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030007">XOR</A> 
 </DT><DD>Produces the exclusive OR of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030003">DIFF</A> 
 </DT><DD>Subtracts one or more source operands from another. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010600">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(Rectangle rectA, Rectangle rectsB[], int operation)
        throws IllegalArgumentException;
</FONT></PRE>
<P><P>Creates a region from an arbitrary set of rectangles. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rectA</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first source rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rectsB</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of additional source rectangles. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>operation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The operation used to combine the rectangles. These operations may be one of the following: 
<DL>
<DT><A HREF="Region.htm#com_0003000822030001">AND</A> 
 </DT><DD>Produces the intersection of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030005">OR</A> 
 </DT><DD>Produces the union of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030007">XOR</A> 
 </DT><DD>Produces the exclusive OR of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030003">DIFF</A> 
 </DT><DD>Subtracts one or more source operands from another. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822010700">Region</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Region(Rectangle rectA, Rectangle rectsB[], int count,
        int operation) throws IllegalArgumentException;
</FONT></PRE>
<P><P>Creates a region from an arbitrary set of rectangles. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rectA</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The first source rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rectsB</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An array of additional source rectangles. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>count</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The number of rectangles. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>operation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The operation used to combine the rectangles. These operations may be one of the following: 
<DL>
<DT><A HREF="Region.htm#com_0003000822030001">AND</A> 
 </DT><DD>Produces the intersection of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030005">OR</A> 
 </DT><DD>Produces the union of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030007">XOR</A> 
 </DT><DD>Produces the exclusive OR of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030003">DIFF</A> 
 </DT><DD>Subtracts one or more source operands from another. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000822020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000822020100">clone</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Object clone();
</FONT></PRE>
<P><P>Creates a clone of the region. 

<P><B>Return Value:</B> <P>Returns a copy of the region. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020200">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region combine(Region other, int operation)
        throws IllegalArgumentException;
</FONT></PRE>
<P><P>Combines the region with another region. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Region.htm">Region</A> combined with the one specified by <I>other</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region to combine the current region with. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>operation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The operation used to combine the regions. This operation may be one of the following: 
<DL>
<DT><A HREF="Region.htm#com_0003000822030001">AND</A> 
 </DT><DD>Produces the intersection of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030005">OR</A> 
 </DT><DD>Produces the union of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030007">XOR</A> 
 </DT><DD>Produces the exclusive OR of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030003">DIFF</A> 
 </DT><DD>Subtracts one or more source operands from another. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020300">combine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region combine(Rectangle rect, int operation)
        throws IllegalArgumentException;
</FONT></PRE>
<P><P>Combines the region with a specified rectangle. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Region.htm">Region</A> combined with the rectangle specified by <I>rect</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle to combine the region with. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>operation</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The operation used to combine the shapes. This operation may be one of the following: 
<DL>
<DT><A HREF="Region.htm#com_0003000822030001">AND</A> 
 </DT><DD>Produces the intersection of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030005">OR</A> 
 </DT><DD>Produces the union of the source operands. 
</DD><DT><A HREF="Region.htm#com_0003000822030007">XOR</A> 
 </DT><DD>Produces the exclusive OR of the source operands. 
</DD><DT>and <A HREF="Region.htm#com_0003000822030003">DIFF</A> 
 </DT><DD>Subtracts one or more source operands from another. 
</DD></DL>
</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020400">complexity</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final int complexity();
</FONT></PRE>
<P><P>Retrieves the complexity of the region. 

<P><B>Return Value:</B> <P>Returns an integer describing the region's complexity. 
<P><B>Remarks:</B> <P>A region's complexity is either <A HREF="Region.htm#com_0003000822030004">EMPTY</A>, <A HREF="Region.htm#com_0003000822030006">SIMPLE</A> or <A HREF="Region.htm#com_0003000822030002">COMPLEX</A>. An <B>EMPTY</B> region contains no space and has no bounds. A <B>SIMPLE</B> region describes a rectangular shape equal to its bounding box. A <B>COMPLEX</B> region describes a nonrectangular shape.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020500">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean contains(int x, int y);
</FONT></PRE>
<P><P>Determines whether the specified point lies within the region. 

<P><B>Return Value:</B> <P>Returns true if the specified position is inside the region; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the point to test. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the point to test. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020600">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean contains(Point pt);
</FONT></PRE>
<P><P>Determines whether the specified <B>Point</B> lies within the region. 

<P><B>Return Value:</B> <P>Returns true if the specified point is inside the region; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to test. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020700">copy</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region copy(Region other) throws IllegalArgumentException;
</FONT></PRE>
<P><P>Copies the geometry of another region to the current region. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Region.htm">Region</A> with a copy of other's geometry. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region to copy from. 

</FONT></TD></TR></TABLE>
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020800">empty</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region empty();
</FONT></PRE>
<P><P>Empties a region. 

<P><B>Return Value:</B> <P>Returns the <A HREF="Region.htm">Region</A> emptied and set to null. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020900">equals</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean equals(Region other);
</FONT></PRE>
<P><P>Tests a region for equality with another region. 

<P><B>Return Value:</B> <P>Returns true if the geometry of the two regions are identical; otherwise, return false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region to compare the current region with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020a00">equals</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean equals(Object other);
</FONT></PRE>
<P><P>Tests a region for equality with another object. 

<P><B>Return Value:</B> <P>Returns true if the geometry's of the two regions are identical; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>other</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Object</B> to compare with. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020b00">fillBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean fillBounds(Rectangle rect);
</FONT></PRE>
<P><P>Fills the rectangle with the region's bounds. 
<P><B>Return Value:</B> <P>Returns true if the region is not empty and the rectangle is filled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle to be filled in. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The design of <B>Rectangle</B> prevents it from representing all possible rectangles in integer space.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020c00">getBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Rectangle getBounds();
</FONT></PRE>
<P><P>Retrieves the bounding rectangle of the region. 

<P><B>Return Value:</B> <P>Returns a <B>Rectangle</B> identifying the bounding box; returns null if the region is empty. 
<P><B>Remarks:</B> <P>The design of <B>Rectangle</B> prevents it from representing all possible rectangles in integer space.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020d00">getGeometry</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final int[][] getGeometry();
</FONT></PRE>
<P><P>Retrieves a description of the geometry of the region. 

<P><B>Return Value:</B> <P>Returns a description of the region's geometry. 
<P><B>Remarks:</B> <P>The description of the region's geometry is a two-dimensional array (an array of arrays of ints). Each sub-array represents a horizontal strip of the region's geometry. The first two values in a strip represent its upper and lower coordinates. The remaining values in the strip are pairs of coordinates that identify the left and right bounds of space inside the region.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020e00">hashCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final int hashCode();
</FONT></PRE>
<P><P>Computes a hash code of the region's geometry. 

<P><B>Return Value:</B> <P>Returns an integer hash code based on the current geometry of the region. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822020f00">intersects</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean intersects(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Determines whether the specified rectangle intersects a <A HREF="Region.htm">Region</A> 

<P><B>Return Value:</B> <P>Returns true if the rectangle intersects a <A HREF="Region.htm">Region</A>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left x coordinate of the given rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The upper-left y coordinate of the given rectangle. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle width (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The rectangle height (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021000">intersects</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean intersects(Rectangle rect);
</FONT></PRE>
<P><P>Determines whether the specified rectangle intersects a <A HREF="Region.htm">Region</A>. 

<P><B>Return Value:</B> <P>Returns true if the rectangle intersects a <A HREF="Region.htm">Region</A>; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Rectangle</B> to test. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021100">invert</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region invert() throws IllegalArgumentException;
</FONT></PRE>
<P><P>Inverts the region. 

<P><B>Return Value:</B> <P>Returns the inverted region. 

<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021200">isEmpty</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final boolean isEmpty();
</FONT></PRE>
<P><P>Tests whether a region is empty. 

<P><B>Return Value:</B> <P>Returns true if the region is empty; otherwise, returns false. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021300">offset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region offset(int deltaX, int deltaY);
</FONT></PRE>
<P><P>Translates a region through space. 

<P><B>Return Value:</B> <P>Returns the offset <A HREF="Region.htm">Region</A>. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaX</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance to translate in x. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaY</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance to translate in y. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The <A HREF="Region.htm">Region</A> is not actually offset within this method; rather, the offsets are stored for later computation. This is efficient for operations in which you need to temporarily offset a <B>Region</B>, and then reset it back at a later time. Using this technique with the <B>offset</B> method, you won't incur the overhead of translating an entire region twice.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021400">offset</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region offset(Point delta);
</FONT></PRE>
<P><P>Translates a region through space. 

<P><B>Return Value:</B> <P>Returns the offset <A HREF="Region.htm">Region</A>. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>delta</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The distance to translate in x and y. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The <A HREF="Region.htm">Region</A> is not actually offset within this method; rather, the offsets are stored for later computation. This is efficient for operations in which you need to temporarily offset a <B>Region</B>, and then reset it back at a later time. Using this technique with the <B>offset</B> method, you won't incur the overhead of translating an entire region twice.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021500">set</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region set(int x, int y, int width, int height);
</FONT></PRE>
<P><P>Makes the region a simple rectangular region. 

<P><B>Return Value:</B> <P>Returns a <A HREF="Region.htm">Region</A> as a rectangle. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region's upper-left x coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The region's upper-left y coordinate. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>width</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The width of the region (in pixels). 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>height</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The height of the region (in pixels). 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021600">set</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final Region set(Rectangle rect);
</FONT></PRE>
<P><P>Makes the region a simple rectangular region. 

<P><B>Return Value:</B> <P>Returns a <A HREF="Region.htm">Region</A> as a rectangle. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>rect</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The <B>Rectangle</B> that defines the region's new geometry. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000822021700">toString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public final String toString();
</FONT></PRE>
<P><P>Generates a string identifying the region. 

<P><B>Return Value:</B> <P>Returns a <B>String</B> identifying the region. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003000822030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003000822030001">AND</A></B>
</DT><DD>Produces the intersection of the source operands. This operation is used in the Region.<A HREF="Region.htm#com_0003000822020200">combine</A> method, as well as the <A HREF="Region.htm">Region</A> class-combining constructors. 

</DD><DT><B><A NAME="com_0003000822030002">COMPLEX</A></B>
</DT><DD>Denotes a region with complex geometry. This is one of the values that may be returned from Region.<A HREF="Region.htm#com_0003000822020400">complexity</A>. 

</DD><DT><B><A NAME="com_0003000822030003">DIFF</A></B>
</DT><DD>Subtracts one or more source operands from another. This operation is used in the Region.<A HREF="Region.htm#com_0003000822020200">combine</A> method, as well as the <A HREF="Region.htm">Region</A> class' combining constructors. 

</DD><DT><B><A NAME="com_0003000822030004">EMPTY</A></B>
</DT><DD>Denotes an empty region. This is one of the values that may be returned from Region.<A HREF="Region.htm#com_0003000822020400">complexity</A>. 

</DD><DT><B><A NAME="com_0003000822030005">OR</A></B>
</DT><DD>Produces the union of the source operands. This operation is used in the Region.<A HREF="Region.htm#com_0003000822020200">combine</A> method, as well as the <A HREF="Region.htm">Region</A> class' combining constructors. 

</DD><DT><B><A NAME="com_0003000822030006">SIMPLE</A></B>
</DT><DD>Denotes a simple rectangular region. This is one of the values that may be returned from Region.<A HREF="Region.htm#com_0003000822020400">complexity</A>. 

</DD><DT><B><A NAME="com_0003000822030007">XOR</A></B>
</DT><DD>Produces the exclusive OR of the source operands. This operation is used in the Region.<A HREF="Region.htm#com_0003000822020200">combine</A> method, as well as the <A HREF="Region.htm">Region</A> class' combining constructors. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
