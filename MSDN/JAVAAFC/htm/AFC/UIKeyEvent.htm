<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UIKeyEvent</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIKeyEvent.htm#com_0003001210010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIKeyEvent.htm#com_0003001210020000">Methods</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UIKeyEvent.htm#com_0003001210030000">Fields</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UIKeyAdapter.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_uevt.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIMouseAdapter.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui.event</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UIKeyEvent</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UIKeyEvent extends <A HREF="UIInputEvent.htm">UIInputEvent</A>
{
  // Fields
  public static final char <A HREF="UIKeyEvent.htm#com_0003001210030001">CHAR_UNDEFINED</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030002">KEY_EVENT_BASE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030003">KEY_PRESSED</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030004">KEY_RELEASED</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030005">KEY_TYPED</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030006">VK_0</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030007">VK_1</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030008">VK_2</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030009">VK_3</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000a">VK_4</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000b">VK_5</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000c">VK_6</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000d">VK_7</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000e">VK_8</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003000f">VK_9</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030010">VK_A</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030011">VK_ACCEPT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030012">VK_ADD</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030013">VK_ALT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030014">VK_B</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030015">VK_BACK_QUOTE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030016">VK_BACK_SLASH</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030017">VK_BACK_SPACE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030018">VK_C</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030019">VK_CANCEL</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001a">VK_CAPS_LOCK</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001b">VK_CLEAR</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001c">VK_CLOSE_BRACKET</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001d">VK_COMMA</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001e">VK_CONTROL</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003001f">VK_CONVERT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030020">VK_D</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030021">VK_DECIMAL</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030022">VK_DELETE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030023">VK_DIVIDE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030024">VK_DOWN</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030025">VK_E</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030026">VK_END</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030027">VK_ENTER</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030028">VK_EQUALS</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030029">VK_ESCAPE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002a">VK_F</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002b">VK_F1</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002c">VK_F10</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002d">VK_F11</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002e">VK_F12</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003002f">VK_F2</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030030">VK_F3</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030031">VK_F4</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030032">VK_F5</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030033">VK_F6</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030034">VK_F7</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030035">VK_F8</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030036">VK_F9</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030037">VK_FINAL</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030038">VK_G</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030039">VK_H</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003a">VK_HELP</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003b">VK_HOME</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003c">VK_I</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003d">VK_INSERT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003e">VK_J</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003003f">VK_K</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030040">VK_KANA</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030041">VK_KANJI</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030042">VK_L</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030043">VK_LEFT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030044">VK_M</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030045">VK_META</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030046">VK_MODECHANGE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030047">VK_MULTIPLY</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030048">VK_N</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030049">VK_NONCONVERT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004a">VK_NUM_LOCK</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004b">VK_NUMPAD0</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004c">VK_NUMPAD1</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004d">VK_NUMPAD2</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004e">VK_NUMPAD3</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003004f">VK_NUMPAD4</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030050">VK_NUMPAD5</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030051">VK_NUMPAD6</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030052">VK_NUMPAD7</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030053">VK_NUMPAD8</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030054">VK_NUMPAD9</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030055">VK_O</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030056">VK_OPEN_BRACKET</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030057">VK_P</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030058">VK_PAGE_DOWN</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030059">VK_PAGE_UP</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005a">VK_PAUSE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005b">VK_PERIOD</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005c">VK_PRINTSCREEN</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005d">VK_Q</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005e">VK_QUOTE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003005f">VK_R</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030060">VK_RIGHT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030061">VK_S</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030062">VK_SCROLL_LOCK</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030063">VK_SEMICOLON</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030064">VK_SEPARATER</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030065">VK_SHIFT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030066">VK_SLASH</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030067">VK_SPACE</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030068">VK_SUBTRACT</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030069">VK_T</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006a">VK_TAB</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006b">VK_U</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006c">VK_UNDEFINED</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006d">VK_UP</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006e">VK_V</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_000300121003006f">VK_W</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030070">VK_X</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030071">VK_Y</A>;
  public static final int <A HREF="UIKeyEvent.htm#com_0003001210030072">VK_Z</A>;

  // Constructors
  public <A HREF="UIKeyEvent.htm#com_0003001210010100">UIKeyEvent</A>(IUIComponent source, int id, long when,
        int modifiers, int keyCode, char keyChar);

  // Methods
  public char <A HREF="UIKeyEvent.htm#com_0003001210020100">getKeyChar</A>();
  public int <A HREF="UIKeyEvent.htm#com_0003001210020200">getKeyCode</A>();
  public boolean <A HREF="UIKeyEvent.htm#com_0003001210020300">isActionKey</A>();
  public String <A HREF="UIKeyEvent.htm#com_0003001210020400">paramString</A>();
}
</FONT></PRE>
<P>This class generates <A HREF="IUIComponent.htm">IUIComponent</A> keyboard events. 
<P>The Virtual key codes report which keyboard key has been pressed, rather than any character generated by one or more keys being pressed. 
<P>For example, pressing the SHIFT key causes a <A HREF="UIKeyEvent.htm#com_0003001210030003">KEY_PRESSED</A> event with a <A HREF="UIKeyEvent.htm#com_0003001210030065">VK_SHIFT</A> keyCode, and pressing the A key results in a <A HREF="UIKeyEvent.htm#com_0003001210030010">VK_A</A> keyCode. After the A key is released, a <A HREF="UIKeyEvent.htm#com_0003001210030004">KEY_RELEASED</A> event will be fired with <B>VK_A</B>, followed by a <A HREF="UIKeyEvent.htm#com_0003001210030005">KEY_TYPED</A> event with a <I>keyChar</I> value of "A." Key combinations that do not result in characters (such as action keys like F1) will not generate <B>KEY_TYPED</B> events. 

<PRE><FONT FACE="Courier" SIZE="2"><B>EventObject</B>
  |
  +--<A HREF="UIBaseEvent.htm">UIBaseEvent</A>
    |
    +--<A HREF="UIEvent.htm">UIEvent</A>
      |
      +--<A HREF="UIInputEvent.htm">UIInputEvent</A>
        |
        +--<B>UIKeyEvent</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001210010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001210010100">UIKeyEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UIKeyEvent(IUIComponent source, int id, long when, int modifiers,
        int keyCode, char keyChar);
</FONT></PRE>
<P><P>Creates a <A HREF="UIKeyEvent.htm">UIKeyEvent</A> object with the specified source <A HREF="IUIComponent.htm">IUIComponent</A>, type, modifiers, and key. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>source</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object where the event originated. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event type. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>when</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The time the event occurred. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>modifiers</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The modifier keys down during the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyCode</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The integer code representing the key of the event. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>keyChar</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Either the Unicode character generated by the event or NULL. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001210020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001210020100">getKeyChar</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public char getKeyChar();
</FONT></PRE>
<P><P>Retrieves the character associated with the key in this event. If no valid Unicode character exists for this key event, keyChar is <A HREF="UIKeyEvent.htm#com_0003001210030001">CHAR_UNDEFINED</A>. 

<P><B>Return Value:</B> <P>Returns the keyChar of the key that generated the event. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001210020200">getKeyCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getKeyCode();
</FONT></PRE>
<P><P>Retrieves the integer key code associated with the key in the event. For <A HREF="UIKeyEvent.htm#com_0003001210030005">KEY_TYPED</A> events, the keyCode is <A HREF="UIKeyEvent.htm#com_000300121003006c">VK_UNDEFINED</A>. 

<P><B>Return Value:</B> <P>Returns the keyCode of the key that generated the event. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001210020300">isActionKey</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isActionKey();
</FONT></PRE>
<P><P>Determines whether the key in this event is an action key. 

<P><B>Return Value:</B> <P>Returns true if the key that generated the event is an action key. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001210020400">paramString</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String paramString();
</FONT></PRE>
<P><P>This method is used internally by the <A HREF="UIBaseEvent.htm#com_0003001206020400">toString</A> method. 

<P><B>Return Value:</B> <P>Returns a formatted <B>String</B> object that assists with textual representation of the exception. 

</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001210030000">Fields</A></H3><DL>
<DT><B><A NAME="com_0003001210030001">CHAR_UNDEFINED</A></B>
</DT><DD>A flag for <A HREF="UIKeyEvent.htm#com_0003001210030003">KEY_PRESSED</A> and <A HREF="UIKeyEvent.htm#com_0003001210030004">KEY_RELEASED</A> events, which do not map to a valid Unicode character. 

</DD><DT><B><A NAME="com_0003001210030002">KEY_EVENT_BASE</A></B>
</DT><DD>The base identifier for all <A HREF="UIKeyEvent.htm">UIKeyEvent</A> events. 

</DD><DT><B><A NAME="com_0003001210030003">KEY_PRESSED</A></B>
</DT><DD>The key pressed event type. 

</DD><DT><B><A NAME="com_0003001210030004">KEY_RELEASED</A></B>
</DT><DD>The key released event type. 

</DD><DT><B><A NAME="com_0003001210030005">KEY_TYPED</A></B>
</DT><DD>The key typed event type, which is generated by a combination of a key press followed by a key release. 

</DD><DT><B><A NAME="com_0003001210030006">VK_0</A></B>
</DT><DD>VK_0 through VK_9 are the same as ASCII "0" through "9" (0x30 - 0x39). 

</DD><DT><B><A NAME="com_0003001210030007">VK_1</A></B>
</DT><DD>A virtual key code for the ASCII "1" key. 

</DD><DT><B><A NAME="com_0003001210030008">VK_2</A></B>
</DT><DD>A virtual key code for the ASCII "2" key. 

</DD><DT><B><A NAME="com_0003001210030009">VK_3</A></B>
</DT><DD>A virtual key code for the ASCII "3" key. 

</DD><DT><B><A NAME="com_000300121003000a">VK_4</A></B>
</DT><DD>A virtual key code for the ASCII "4" key. 

</DD><DT><B><A NAME="com_000300121003000b">VK_5</A></B>
</DT><DD>A virtual key code for the ASCII "5" key. 

</DD><DT><B><A NAME="com_000300121003000c">VK_6</A></B>
</DT><DD>A virtual key code for the ASCII "6" key. 

</DD><DT><B><A NAME="com_000300121003000d">VK_7</A></B>
</DT><DD>A virtual key code for the ASCII "7" key. 

</DD><DT><B><A NAME="com_000300121003000e">VK_8</A></B>
</DT><DD>A virtual key code for the ASCII "8" key. 

</DD><DT><B><A NAME="com_000300121003000f">VK_9</A></B>
</DT><DD>A virtual key code for the ASCII "9" key. 

</DD><DT><B><A NAME="com_0003001210030010">VK_A</A></B>
</DT><DD>VK_A through VK_Z are the same as ASCII "A" through "Z" (0x41 - 0x5A). 

</DD><DT><B><A NAME="com_0003001210030011">VK_ACCEPT</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030012">VK_ADD</A></B>
</DT><DD>A virtual key code for the numeric keypad PLUS SIGN (+) key. 

</DD><DT><B><A NAME="com_0003001210030013">VK_ALT</A></B>
</DT><DD>A virtual key code for the ALT key. 

</DD><DT><B><A NAME="com_0003001210030014">VK_B</A></B>
</DT><DD>A virtual key code for the ASCII "B" key. 

</DD><DT><B><A NAME="com_0003001210030015">VK_BACK_QUOTE</A></B>
</DT><DD>A virtual key code for the apostrophe (`) key. 

</DD><DT><B><A NAME="com_0003001210030016">VK_BACK_SLASH</A></B>
</DT><DD>A virtual key code for the BACKSLASH (\) key. 

</DD><DT><B><A NAME="com_0003001210030017">VK_BACK_SPACE</A></B>
</DT><DD>A virtual key code for the BACKSPACE key. 

</DD><DT><B><A NAME="com_0003001210030018">VK_C</A></B>
</DT><DD>A virtual key code for the ASCII "C" key. 

</DD><DT><B><A NAME="com_0003001210030019">VK_CANCEL</A></B>
</DT><DD>A virtual key code for the CANCEL key. 

</DD><DT><B><A NAME="com_000300121003001a">VK_CAPS_LOCK</A></B>
</DT><DD>A virtual key code for the CAPS LOCK key. 

</DD><DT><B><A NAME="com_000300121003001b">VK_CLEAR</A></B>
</DT><DD>A virtual key code for the CLEAR key. 

</DD><DT><B><A NAME="com_000300121003001c">VK_CLOSE_BRACKET</A></B>
</DT><DD>A virtual key code for the CLOSE BRACKET (]) key. 

</DD><DT><B><A NAME="com_000300121003001d">VK_COMMA</A></B>
</DT><DD>A virtual key code for the COMMA (,) key. 

</DD><DT><B><A NAME="com_000300121003001e">VK_CONTROL</A></B>
</DT><DD>A virtual key code for the CTRL key. 

</DD><DT><B><A NAME="com_000300121003001f">VK_CONVERT</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030020">VK_D</A></B>
</DT><DD>A virtual key code for the ASCII "D" key. 

</DD><DT><B><A NAME="com_0003001210030021">VK_DECIMAL</A></B>
</DT><DD>A virtual key code for the numeric keypad DECIMAL POINT (.) key. 

</DD><DT><B><A NAME="com_0003001210030022">VK_DELETE</A></B>
</DT><DD>A virtual key code for the DELETE key. 

</DD><DT><B><A NAME="com_0003001210030023">VK_DIVIDE</A></B>
</DT><DD>A virtual key code for the numeric keypad DIVISION (/) key. 

</DD><DT><B><A NAME="com_0003001210030024">VK_DOWN</A></B>
</DT><DD>A virtual key code for the DOWN ARROW key. 

</DD><DT><B><A NAME="com_0003001210030025">VK_E</A></B>
</DT><DD>A virtual key code for the ASCII "E" key. 

</DD><DT><B><A NAME="com_0003001210030026">VK_END</A></B>
</DT><DD>A virtual key code for the END key. 

</DD><DT><B><A NAME="com_0003001210030027">VK_ENTER</A></B>
</DT><DD>A virtual key code for the ENTER key. 

</DD><DT><B><A NAME="com_0003001210030028">VK_EQUALS</A></B>
</DT><DD>A virtual key code for the EQUAL SIGN (=) key. 

</DD><DT><B><A NAME="com_0003001210030029">VK_ESCAPE</A></B>
</DT><DD>A virtual key code for the ESC key. 

</DD><DT><B><A NAME="com_000300121003002a">VK_F</A></B>
</DT><DD>A virtual key code for the ASCII "F" key. 

</DD><DT><B><A NAME="com_000300121003002b">VK_F1</A></B>
</DT><DD>A virtual key code for the F1 key. 

</DD><DT><B><A NAME="com_000300121003002c">VK_F10</A></B>
</DT><DD>A virtual key code for the F10 key. 

</DD><DT><B><A NAME="com_000300121003002d">VK_F11</A></B>
</DT><DD>A virtual key code for the F11 key. 

</DD><DT><B><A NAME="com_000300121003002e">VK_F12</A></B>
</DT><DD>A virtual key code for the F12 key. 

</DD><DT><B><A NAME="com_000300121003002f">VK_F2</A></B>
</DT><DD>A virtual key code for the F2 key. 

</DD><DT><B><A NAME="com_0003001210030030">VK_F3</A></B>
</DT><DD>A virtual key code for the F3 key. 

</DD><DT><B><A NAME="com_0003001210030031">VK_F4</A></B>
</DT><DD>A virtual key code for the F4 key. 

</DD><DT><B><A NAME="com_0003001210030032">VK_F5</A></B>
</DT><DD>A virtual key code for the F5 key. 

</DD><DT><B><A NAME="com_0003001210030033">VK_F6</A></B>
</DT><DD>A virtual key code for the F6 key. 

</DD><DT><B><A NAME="com_0003001210030034">VK_F7</A></B>
</DT><DD>A virtual key code for the F7 key. 

</DD><DT><B><A NAME="com_0003001210030035">VK_F8</A></B>
</DT><DD>A virtual key code for the F8 key. 

</DD><DT><B><A NAME="com_0003001210030036">VK_F9</A></B>
</DT><DD>A virtual key code for the F9 key. 

</DD><DT><B><A NAME="com_0003001210030037">VK_FINAL</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030038">VK_G</A></B>
</DT><DD>A virtual key code for the ASCII "G" key. 

</DD><DT><B><A NAME="com_0003001210030039">VK_H</A></B>
</DT><DD>A virtual key code for the ASCII "H" key. 

</DD><DT><B><A NAME="com_000300121003003a">VK_HELP</A></B>
</DT><DD>A virtual key code for the HELP key. 

</DD><DT><B><A NAME="com_000300121003003b">VK_HOME</A></B>
</DT><DD>A virtual key code for the HOME key. 

</DD><DT><B><A NAME="com_000300121003003c">VK_I</A></B>
</DT><DD>A virtual key code for the ASCII "I" key. 

</DD><DT><B><A NAME="com_000300121003003d">VK_INSERT</A></B>
</DT><DD>A virtual key code for the INSERT key. 

</DD><DT><B><A NAME="com_000300121003003e">VK_J</A></B>
</DT><DD>A virtual key code for the ASCII "J" key. 

</DD><DT><B><A NAME="com_000300121003003f">VK_K</A></B>
</DT><DD>A virtual key code for the ASCII "K" key. 

</DD><DT><B><A NAME="com_0003001210030040">VK_KANA</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030041">VK_KANJI</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030042">VK_L</A></B>
</DT><DD>A virtual key code for the ASCII "L" key. 

</DD><DT><B><A NAME="com_0003001210030043">VK_LEFT</A></B>
</DT><DD>A virtual key code for the LEFT ARROW key. 

</DD><DT><B><A NAME="com_0003001210030044">VK_M</A></B>
</DT><DD>A virtual key code for the ASCII "M" key. 

</DD><DT><B><A NAME="com_0003001210030045">VK_META</A></B>
</DT><DD>A virtual key code for the Application key (found on Microsoft&#174; Windows&#174; 95 keyboards). 

</DD><DT><B><A NAME="com_0003001210030046">VK_MODECHANGE</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_0003001210030047">VK_MULTIPLY</A></B>
</DT><DD>A virtual key code for the numeric keypad MULTIPLICATION (*) key. 

</DD><DT><B><A NAME="com_0003001210030048">VK_N</A></B>
</DT><DD>A virtual key code for the ASCII "N" key. 

</DD><DT><B><A NAME="com_0003001210030049">VK_NONCONVERT</A></B>
</DT><DD>For Asian keyboards. 

</DD><DT><B><A NAME="com_000300121003004a">VK_NUM_LOCK</A></B>
</DT><DD>A virtual key code for the NUM LOCK key. 

</DD><DT><B><A NAME="com_000300121003004b">VK_NUMPAD0</A></B>
</DT><DD>A virtual key code for the numeric keypad "0" key. 

</DD><DT><B><A NAME="com_000300121003004c">VK_NUMPAD1</A></B>
</DT><DD>A virtual key code for the numeric keypad "1" key. 

</DD><DT><B><A NAME="com_000300121003004d">VK_NUMPAD2</A></B>
</DT><DD>A virtual key code for the numeric keypad "2" key. 

</DD><DT><B><A NAME="com_000300121003004e">VK_NUMPAD3</A></B>
</DT><DD>A virtual key code for the numeric keypad "3" key. 

</DD><DT><B><A NAME="com_000300121003004f">VK_NUMPAD4</A></B>
</DT><DD>A virtual key code for the numeric keypad "4" key. 

</DD><DT><B><A NAME="com_0003001210030050">VK_NUMPAD5</A></B>
</DT><DD>A virtual key code for the numeric keypad "5" key. 

</DD><DT><B><A NAME="com_0003001210030051">VK_NUMPAD6</A></B>
</DT><DD>A virtual key code for the numeric keypad "6" key. 

</DD><DT><B><A NAME="com_0003001210030052">VK_NUMPAD7</A></B>
</DT><DD>A virtual key code for the numeric keypad "7" key. 

</DD><DT><B><A NAME="com_0003001210030053">VK_NUMPAD8</A></B>
</DT><DD>A virtual key code for the numeric keypad "8" key. 

</DD><DT><B><A NAME="com_0003001210030054">VK_NUMPAD9</A></B>
</DT><DD>A virtual key code for the numeric keypad "9" key. 

</DD><DT><B><A NAME="com_0003001210030055">VK_O</A></B>
</DT><DD>A virtual key code for the ASCII "O" key. 

</DD><DT><B><A NAME="com_0003001210030056">VK_OPEN_BRACKET</A></B>
</DT><DD>A virtual key code for the OPEN BRACKET ([) key. 

</DD><DT><B><A NAME="com_0003001210030057">VK_P</A></B>
</DT><DD>A virtual key code for the ASCII "P" key. 

</DD><DT><B><A NAME="com_0003001210030058">VK_PAGE_DOWN</A></B>
</DT><DD>A virtual key code for the PAGE DOWN key. 

</DD><DT><B><A NAME="com_0003001210030059">VK_PAGE_UP</A></B>
</DT><DD>A virtual key code for the PAGE UP key. 

</DD><DT><B><A NAME="com_000300121003005a">VK_PAUSE</A></B>
</DT><DD>A virtual key code for the PAUSE (BREAK) key. 

</DD><DT><B><A NAME="com_000300121003005b">VK_PERIOD</A></B>
</DT><DD>A virtual key code for the PERIOD (.) key. 

</DD><DT><B><A NAME="com_000300121003005c">VK_PRINTSCREEN</A></B>
</DT><DD>A virtual key code for the PRINT SCREEN key. 

</DD><DT><B><A NAME="com_000300121003005d">VK_Q</A></B>
</DT><DD>A virtual key code for the ASCII "Q" key. 

</DD><DT><B><A NAME="com_000300121003005e">VK_QUOTE</A></B>
</DT><DD>A virtual key code for the QUOTATION MARK key. 

</DD><DT><B><A NAME="com_000300121003005f">VK_R</A></B>
</DT><DD>A virtual key code for the ASCII "R" key. 

</DD><DT><B><A NAME="com_0003001210030060">VK_RIGHT</A></B>
</DT><DD>A virtual key code for the RIGHT ARROW key. 

</DD><DT><B><A NAME="com_0003001210030061">VK_S</A></B>
</DT><DD>A virtual key code for the ASCII "S" key. 

</DD><DT><B><A NAME="com_0003001210030062">VK_SCROLL_LOCK</A></B>
</DT><DD>A virtual key code for the SCROLL LOCK key. 

</DD><DT><B><A NAME="com_0003001210030063">VK_SEMICOLON</A></B>
</DT><DD>A virtual key code for the SEMICOLON (;) key. 

</DD><DT><B><A NAME="com_0003001210030064">VK_SEPARATER</A></B>
</DT><DD></DD><DT><B><A NAME="com_0003001210030065">VK_SHIFT</A></B>
</DT><DD>A virtual key code for the SHIFT key. 

</DD><DT><B><A NAME="com_0003001210030066">VK_SLASH</A></B>
</DT><DD>A virtual key code for the forward slash (/) key. 

</DD><DT><B><A NAME="com_0003001210030067">VK_SPACE</A></B>
</DT><DD>A virtual key code for the SPACEBAR key. 

</DD><DT><B><A NAME="com_0003001210030068">VK_SUBTRACT</A></B>
</DT><DD>A virtual key code for the numeric keypad MINUS SIGN (-) key. 

</DD><DT><B><A NAME="com_0003001210030069">VK_T</A></B>
</DT><DD>A virtual key code for the ASCII "T" key. 

</DD><DT><B><A NAME="com_000300121003006a">VK_TAB</A></B>
</DT><DD>A virtual key code for the TAB key. 

</DD><DT><B><A NAME="com_000300121003006b">VK_U</A></B>
</DT><DD>A virtual key code for the ASCII "U" key. 

</DD><DT><B><A NAME="com_000300121003006c">VK_UNDEFINED</A></B>
</DT><DD><A HREF="UIKeyEvent.htm#com_0003001210030005">KEY_TYPED</A> events do not have a defined key code. 

</DD><DT><B><A NAME="com_000300121003006d">VK_UP</A></B>
</DT><DD>A virtual key code for the UP ARROW key. 

</DD><DT><B><A NAME="com_000300121003006e">VK_V</A></B>
</DT><DD>A virtual key code for the ASCII "V" key. 

</DD><DT><B><A NAME="com_000300121003006f">VK_W</A></B>
</DT><DD>A virtual key code for the ASCII "W" key. 

</DD><DT><B><A NAME="com_0003001210030070">VK_X</A></B>
</DT><DD>A virtual key code for the ASCII "X" key. 

</DD><DT><B><A NAME="com_0003001210030071">VK_Y</A></B>
</DT><DD>A virtual key code for the ASCII "Y" key. 

</DD><DT><B><A NAME="com_0003001210030072">VK_Z</A></B>
</DT><DD>A virtual key code for the ASCII "Z" key. 

</DD></DL>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
