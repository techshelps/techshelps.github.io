<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class AwtUIDrawText</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIDrawText.htm#com_000300110f010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="AwtUIDrawText.htm#com_000300110f020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUIControlBeanInfo.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="AwtUIDrawTextBeanInfo.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class AwtUIDrawText</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class AwtUIDrawText extends <A HREF="AwtUIControl.htm">AwtUIControl</A>
{
  // Constructors
  public <A HREF="AwtUIDrawText.htm#com_000300110f010100">AwtUIDrawText</A>();
  public <A HREF="AwtUIDrawText.htm#com_000300110f010200">AwtUIDrawText</A>(String newBuff);
  public <A HREF="AwtUIDrawText.htm#com_000300110f010300">AwtUIDrawText</A>(char newBuff[]);

  // Methods
  public IUIComponent <A HREF="AwtUIDrawText.htm#com_000300110f020100">getBase</A>();
  public int <A HREF="AwtUIDrawText.htm#com_000300110f020200">getCharFromScreen</A>(int scrnX, int scrnY);
  public int <A HREF="AwtUIDrawText.htm#com_000300110f020300">getCharFromScreen</A>(Point scrnPos);
  public Point <A HREF="AwtUIDrawText.htm#com_000300110f020400">getCharLocation</A>(int iPos);
  public int <A HREF="AwtUIDrawText.htm#com_000300110f020500">getLength</A>();
  public IFxShape <A HREF="AwtUIDrawText.htm#com_000300110f020600">getOutline</A>();
  public String <A HREF="AwtUIDrawText.htm#com_000300110f020700">getValueText</A>();
  public int <A HREF="AwtUIDrawText.htm#com_000300110f020800">getWordWrap</A>();
  public boolean <A HREF="AwtUIDrawText.htm#com_000300110f020900">isAutoResizable</A>();
  public boolean <A HREF="AwtUIDrawText.htm#com_000300110f020a00">isBordered</A>();
  public boolean <A HREF="AwtUIDrawText.htm#com_000300110f020b00">isSingleLine</A>();
  public void <A HREF="AwtUIDrawText.htm#com_000300110f020c00">setAutoResizable</A>(boolean auto);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f020d00">setBordered</A>(boolean b);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f020e00">setHorizAlign</A>(int h);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f020f00">setOutline</A>(IFxShape outline);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021000">setRefresh</A>(boolean r);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021100">setSingleLine</A>(boolean sl);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021200">setValueText</A>(String s);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021300">setValueText</A>(char newBuff[], int offset, int len);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021400">setVertAlign</A>(int v);
  public void <A HREF="AwtUIDrawText.htm#com_000300110f021500">setWordWrap</A>(int ww);
}
</FONT></PRE>
<P>This class implements the functionality of a <A HREF="UIDrawText.htm">UIDrawText</A> object in an AWT-based control. An <B>AwtUIDrawText</B> control is an <A HREF="AwtUIHost.htm">AwtUIHost</A> component whose associated root container holds a <B>UIDrawText</B> object. By hosting this object, an <B>AwtUIDrawText</B> control integrates AFC with AWT. Although an <B>AwtUIDrawText</B> control is fully compatible with AWT, a <B>UIDrawText</B> control is optimized for performance and size. 

<PRE><FONT FACE="Courier" SIZE="2"><B>Panel</B>
  |
  +--<A HREF="AwtUIHost.htm">AwtUIHost</A>
    |
    +--<A HREF="AwtUIControl.htm">AwtUIControl</A>
      |
      +--<B>AwtUIDrawText</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300110f010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300110f010100">AwtUIDrawText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIDrawText();
</FONT></PRE>
<P><P>Creates an empty, read-only AWT-based text control. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f010200">AwtUIDrawText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIDrawText(String newBuff);
</FONT></PRE>
<P><P>Creates a read-only AWT-based text control with the specified string. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newBuff</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f010300">AwtUIDrawText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public AwtUIDrawText(char newBuff[]);
</FONT></PRE>
<P><P>Creates a read-only AWT-based text control with the specified character buffer. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newBuff</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Contains the text for the control. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300110f020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300110f020100">getBase</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getBase();
</FONT></PRE>
<P><P>Retrieves the UI component that the control is based on. 
<P><B>Return Value:</B> <P>Returns the <A HREF="UIDrawText.htm">UIDrawText</A> object associated with the control. 

<P><B>Remarks:</B> <P>When the AWT-based control is first created, it is associated with a <A HREF="UIDrawText.htm">UIDrawText</A> object. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020200">getCharFromScreen</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getCharFromScreen(int scrnX, int scrnY);
</FONT></PRE>
<P><P>Retrieves the character at the specified coordinates. 

<P><B>Return Value:</B> <P>Returns the index of the character at the specified position. If there is no character at that position, the character returned will be the last one on the nearest line. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>scrnX</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate, in pixels. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>scrnY</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate, in pixels. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020300">getCharFromScreen</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getCharFromScreen(Point scrnPos);
</FONT></PRE>
<P><P>Retrieves the character at the specified point. 

<P><B>Return Value:</B> <P>Returns the index of the character at the specified position. If there is no character at that position, the character returned will be the last one on the nearest line. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>scrnPos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The coordinates of the point, in pixels. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020400">getCharLocation</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getCharLocation(int iPos);
</FONT></PRE>
<P><P>Retrieves the position that the character would be drawn at if drawn alone. Typically, this is used for placing the caret. 

<P><B>Return Value:</B> <P>Returns a <B>Point</B> object that contains the client coordinates of the character. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>iPos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the character to query. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020500">getLength</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getLength();
</FONT></PRE>
<P><P>Retrieves the length of the text in the control. 

<P><B>Return Value:</B> <P>Returns the number of characters in the control. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020600">getOutline</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IFxShape getOutline();
</FONT></PRE>
<P><P>Retrieves the outline along which text is drawn. For example, if the outline is an ellipse, the text that the <A HREF="AwtUIDrawText.htm">AwtUIDrawText</A> object is created with is drawn along the outline of the ellipse. 

<P><B>Return Value:</B> <P>Returns an <A HREF="IFxShape.htm">IFxShape</A> object that specifies the outline. 

<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020f00">setOutline</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020700">getValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public String getValueText();
</FONT></PRE>
<P><P>Retrieves the text in the control. 

<P><B>Return Value:</B> <P>Returns a <B>String</B> object that contains the text of the control. 

<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f021200">setValueText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020800">getWordWrap</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getWordWrap();
</FONT></PRE>
<P><P>Retrieves the word wrapping style. 

<P><B>Return Value:</B> <P>Returns the word wrapping style. For a list of possible values, see <A HREF="AwtUIDrawText.htm#com_000300110f021500">setWordWrap</A>. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020900">isAutoResizable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isAutoResizable();
</FONT></PRE>
<P><P>Determines whether the bounding box of the control's text will automatically adjust to the size of the control when the control is resized or reshaped. 

<P><B>Return Value:</B> <P>Returns true if the auto-resize attribute is set; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020c00">setAutoResizable</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020a00">isBordered</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isBordered();
</FONT></PRE>
<P><P>Determines whether the control has a border. 

<P><B>Return Value:</B> <P>Returns true if the control has a border; otherwise, returns false. 

<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020d00">setBordered</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020b00">isSingleLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isSingleLine();
</FONT></PRE>
<P><P>Retrieves the control's single line attribute. 

<P><B>Return Value:</B> <P>Returns false if the control's text can be displayed on multiple lines; otherwise, returns true. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020c00">setAutoResizable</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setAutoResizable(boolean auto);
</FONT></PRE>
<P><P>Sets the control's auto-resize attribute. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>auto</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the bounding box of the control's text will automatically adjust to the size of the control when the control is resized or reshaped. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020900">isAutoResizable</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020d00">setBordered</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setBordered(boolean b);
</FONT></PRE>
<P><P>Sets or clears the control's border. The border is a rectangle with sides that are one pixel wide and the same color as the text. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>b</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the control has a border; otherwise, it does not. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020a00">isBordered</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020e00">setHorizAlign</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHorizAlign(int h);
</FONT></PRE>
<P><P>Sets the horizontal alignment of the control's text. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>h</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The horizontal alignment. You can pass one of the following values, defined by the <A HREF="IFxTextConstants.htm">IFxTextConstants</A> interface. 
<UL><LI><A HREF="IFxTextConstants.htm#com_0003000828010007">htaLeft</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010005">htaCenter</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010008">htaRight</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010006">htaJustified</A> 
<LI><A HREF="IFxTextConstants.htm#com_000300082801000a">htaStretch</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010009">htaScriptDefault</A> 
</UL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f020f00">setOutline</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setOutline(IFxShape outline);
</FONT></PRE>
<P><P>Sets an outline that the text buffer is drawn along. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>outline</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">An <A HREF="IFxShape.htm">IFxShape</A> object that specifies the outline. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020600">getOutline</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021000">setRefresh</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setRefresh(boolean r);
</FONT></PRE>
<P><P>Sets the refresh flag. Use this method to prevent unnecessary repaints when setting attributes for a control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>r</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the control will update itself whenever a parameter is changed. If false, the control will not update itself. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Using this method only prevents painting when APIs that change the control directly are called (for example, if you call several methods in sequence, such as <B>setForeground</B>, <B>setBackground</B>, and <A HREF="AwtUIDrawText.htm#com_000300110f021500">setWordWrap</A>). It does not prevent painting on normal system updates.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021100">setSingleLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSingleLine(boolean sl);
</FONT></PRE>
<P><P>Changes the control's single line attribute. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>sl</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Set to false if the control's text is displayed on multiple lines. Otherwise, the text is displayed on a single line. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021200">setValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValueText(String s);
</FONT></PRE>
<P><P>Sets the text in the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">A <B>String</B> object that specifies the new text. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020700">getValueText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021300">setValueText</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setValueText(char newBuff[], int offset, int len);
</FONT></PRE>
<P><P>Sets the text in the control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newBuff</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The array of characters that contains the text. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>offset</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The offset of the <I>newBuff</I> text buffer where the text starts. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>len</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The length of the text. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="AwtUIDrawText.htm#com_000300110f020700">getValueText</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021400">setVertAlign</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setVertAlign(int v);
</FONT></PRE>
<P><P>Sets the vertical alignment of the control's text. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>v</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical alignment. You can pass one of the following values, defined by the <A HREF="IFxTextConstants.htm">IFxTextConstants</A> interface. 
<UL><LI><A HREF="IFxTextConstants.htm#com_0003000828010027">vtaTop</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010024">vtaCenter</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010023">vtaBottom</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010022">vtaBaseline</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010026">vtaStretch</A> 
</UL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300110f021500">setWordWrap</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setWordWrap(int ww);
</FONT></PRE>
<P><P>Sets the word wrapping style. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>ww</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of word wrapping. You can pass one of the following values, defined by the <A HREF="IFxTextConstants.htm">IFxTextConstants</A> interface. 
<UL><LI><A HREF="IFxTextConstants.htm#com_000300082801002b">wwNone</A> 
<LI><A HREF="IFxTextConstants.htm#com_000300082801002f">wwWrap</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010029">wwKeepWordIntact</A> 
<LI><A HREF="IFxTextConstants.htm#com_000300082801002d">wwVirtualRectEnd</A> 
<LI><A HREF="IFxTextConstants.htm#com_000300082801002e">wwVirtualRectSide</A> 
<LI><A HREF="IFxTextConstants.htm#com_0003000828010028">wwCleanEdges</A> 
<LI><A HREF="IFxTextConstants.htm#com_000300082801002a">wwMask</A> 
</UL>
</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
