<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Static, Button, Menu, and Choice Controls</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Using AFC User Interface Controls"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="afccontrols2.htm#afccontrols2_0006000401010000">Static Controls</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="afccontrols2.htm#afccontrols2_0006000401020000">Button Controls</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="afccontrols2.htm#afccontrols2_0006000401030000">Menu Controls</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="afccontrols2.htm#afccontrols2_0006000401040000">Choice and List Controls</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/afc2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="AFC"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom">&nbsp;</TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_afc.htm"><IMG SRC="art/homenrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="AFC"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Using AFC User Interface Controls</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">&nbsp;</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">AFC</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Using Static, Button, Menu, and Choice Controls</H2>
<P>This article provides details on how to use the static, button, menu, choice, and list user interface (UI) controls.

<H3 STYLE="color:#333366"><A NAME="afccontrols2_0006000401010000">Static Controls</A></H3><P>Static controls aren't actually controls at all&#151;by definition, they don't accept or respond to user input. But they are an important user interface component and are used as elements of most other user interface controls. For example, the text in a menu control or in a list box is a <A HREF="UIText.htm">UIText</A> object, which is a static control. The following diagram shows the class hierarchy of static controls.

<P><IMG SRC="art/mark7.gif" WIDTH="305" HEIGHT="116" ALT="" >

<P>There are three basic types of static controls:

<UL><LI>Static graphic control (<A HREF="UIGraphic.htm">UIGraphic</A>), which is used to represent an image.
<LI>Static text control (<A HREF="UIText.htm">UIText</A>), which is used to represent text.
<LI>Static item control (<A HREF="UIItem.htm">UIItem</A>), which is used to represent both an image and text.
</UL>
<P>The following is an illustration of various AFC static controls.

<P><IMG SRC="art/static.gif" WIDTH="386" HEIGHT="48" ALT="" >

<P>There are a total of eight static controls in this illustration: four static text controls (the label on the left and the three commas), one static graphic control (the folder), and three varieties of static item controls (the print buttons). The following example is the source code for a panel that contains these controls.

<PRE><FONT FACE="Courier" SIZE="2">class StaticPanel extends UIPanel
{
  // Constructor
  public StaticPanel()
  {
    Toolkit toolkit = getToolkit();
    Image hotprint = toolkit.getImage("HotPrint.gif");
    Image hotfavorites = toolkit.getImage("HotFavorites.gif");

    add(new UIText("Examples of static controls:"));
    add(new UIGraphic(hotfavorites));
    add(new UIText(","));
    add(new UIItem(hotprint, "Print"));
    add(new UIText(","));
    add(new UIItem(hotprint, "Print", 0, UIItem.ABOVE));
    add(new UIText(","));
    add(new UIItem(hotprint, "Print", 0, UIItem.ONLEFT));
  }
}</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="afccontrols2_0006000401020000">Button Controls</A></H3><P>AFC offers four basic types of buttons:

<UL><LI>Push buttons (<A HREF="UIPushButton.htm">UIPushButton</A>)
<LI>Radio buttons (<A HREF="UIRadioButton.htm">UIRadioButton</A>)
<LI>Check boxes (<A HREF="UICheckButton.htm">UICheckButton</A>)
<LI>Repeat buttons (<A HREF="UIRepeatButton.htm">UIRepeatButton</A>)
</UL>
<P>Radio buttons are extensions of check boxes&#151;the main difference between them is their appearance. Repeat buttons appear and operate like push buttons. However, instead of firing a single action event when pressed, repeat buttons continue to fire action events until released. The following diagram shows the class hierarchy of button controls.

<P><IMG SRC="art/mark4.gif" WIDTH="305" HEIGHT="161" ALT="" > 

<P>The following illustration shows the appearance of three types of AFC buttons. The buttons shown here are all text-only buttons&#151;AFC also supports buttons displaying images and buttons displaying text and images.

<P><IMG SRC="art/buttons.gif" WIDTH="281" HEIGHT="35" ALT="" >

<P>Here's the code for a class that is a panel that contains the buttons shown in the previous illustration.

<PRE><FONT FACE="Courier" SIZE="2">class ButtonsPanel extends UIPanel
{
  private UIPushButton pushbutton;
  private UIRadioButton radiobutton;
  private UICheckButton checkbutton;
  
  // Constructor
  public ButtonsPanel()
  {
    // Create buttons and add to ButtonPanel
    add(pushbutton = new UIPushButton("Push Button", 
                                      UIPushButton.RAISED));
    add(radiobutton = new UIRadioButton("Radio Button"));
    add(checkbutton = new UICheckButton("Check Box"));
  }
}</FONT></PRE>
<P>Note that the push button is created with the <A HREF="UIPushButton.htm#com_0003001164030002">UIPushButton.RAISED</A> style. If you don't specify the raised style, the push button appears only as text and won't look like a button until it's under the mouse cursor. The following table summarizes the styles that you can use when you create buttons:

<P><TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Style </B></FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Description
</B></FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Raised (<A HREF="UIPushButton.htm#com_0003001164030002">UIPushButton.RAISED</A>) </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Button appearance is raised. This style applies only to push buttons.
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Toggle (<A HREF="UIButton.htm#com_0003001138030001">UIButton.TOGGLE</A>) </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Button alternates between two states (on and off).
</FONT></TD></TR><TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Three-state (<A HREF="UIButton.htm#com_0003001138030002">UIButton.TRITOGGLE</A>) </FONT></TD><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Button alternates between three states (on, off, and indeterminate).
</FONT></TD></TR></TABLE>
<P>To create a button with an image instead of text, supply a 
<A HREF="UIGraphic.htm">UIGraphic</A> object to the button's constructor. To create a button 
with both text and an image, supply the constructor a <A HREF="UIItem.htm">UIItem</A> object.

<H3 STYLE="color:#333366"><A NAME="afccontrols2_0006000401030000">Menu Controls</A></H3><P>Like other AFC controls, the AFC menu controls are discrete, stand-alone controls that can be used anywhere in Java programs. There are three basic classes used to create menus: 

<UL><LI><A HREF="UIMenuItem.htm">UIMenuItem</A>, which represents a single menu item. A menu item can be text, an image, or another control, such as a check box. 
<LI><A HREF="UIMenuList.htm">UIMenuList</A>, which represents a list of menu items. You can use the UIMenuList.<A HREF="UIList.htm#com_0003001159020100">add</A> method to add menu items to a menu list.
<LI><A HREF="UIMenuButton.htm">UIMenuButton</A>, which represents the button that is used to activate the menu. Like the push button control, a menu button can be either the raised or flat style. The default menu button style is raised. 
</UL>
<P>The following diagram shows the class hierarchy of menu controls.

<P><IMG SRC="art/mark6.gif" WIDTH="332" HEIGHT="123" ALT="" >

<P>The following illustration shows the appearance of a menu control before and after activation.

<P><IMG SRC="art/menus.gif" WIDTH="443" HEIGHT="166" ALT="" >

<P>The menu includes a check box menu item, a disabled menu item, menu separators, and a cascading menu list. Here's the code for a class that is a panel that contains the menu shown in the previous illustration.

<PRE><FONT FACE="Courier" SIZE="2">class MenusPanel extends UIPanel
{
  // Constructor
  public MenusPanel()
  {
    // Create a menu list and add some menu items
    UIMenuList mainmenulist = new UIMenuList();
    mainmenulist.add("Menu Item 1");
    mainmenulist.add("Menu Item 2");
    mainmenulist.add(new UILine());
    mainmenulist.add(new UICheckButton("Check Box Menu Item"));
    mainmenulist.add(new UILine());
    UIText disableditem = new UIText("Disabled Menu Item");
    disableditem.setEnabled(false);
    mainmenulist.add(disableditem);
    mainmenulist.add(new UILine());

    // Create a sub menu list and add to main menu
    UIMenuList submenulist = new UIMenuList();
    submenulist.add("Sub Menu Item 1");
    submenulist.add("Sub Menu Item 2");
    mainmenulist.add(new UIMenuItem("Sub Menu Item", 
                                    submenulist));

    // Create a menu button for main menu and add to panel
    UIMenuButton menubutton = new UIMenuButton("Menu Button", 
                                               mainmenulist);
    add (menubutton);
  }
}</FONT></PRE>
<P>To create a menu separator, add a <A HREF="UILine.htm">UILine</A> object to a menu list. To create cascading menus, create a secondary menu list and add it as a menu item to the primary menu list. You can also create menu items with images by using static graphic (<A HREF="UIGraphic.htm">UIGraphic</A>) and static item (<A HREF="UIItem.htm">UIItem</A>) objects as menu items.

<H4 STYLE="color:#333366"><A NAME="afccontrols2_0006000401030100">Menu Controls Event Handling</A></H4><P>Menu controls fire events on the items they contain, not on the actual menu control object. Consider the following code fragment. 

<PRE><FONT FACE="Courier" SIZE="2">UIMenuList menulist = new UIMenuList();
UIText item = new UIText("Apples");
menulist.add(item);
</FONT></PRE>
<P>When the user selects the "Apples" menu item, the menu control fires an action event on the <A HREF="UIText.htm">UIText</A> object specified by the <I>item</I> parameter. 

<P>You can also add textual menu items to menu lists by specifying a string as shown in the following example.

<PRE><FONT FACE="Courier" SIZE="2">UIMenuList menulist = new UIMenuList();
UIText text = (UIText) menulist.add("Oranges");</FONT></PRE>
<P>In this case, the UIMenuList.<A HREF="UIList.htm#com_0003001159020100">add</A> method creates a <A HREF="UIText.htm">UIText</A> object from the specified string. When the user selects the "Oranges" menu item, the menu control fires an action event on the <B>UIText</B> object specified by the <I>text</I> parameter.

<H3 STYLE="color:#333366"><A NAME="afccontrols2_0006000401040000">Choice and List Controls</A></H3><P>Choice and list controls enable users to choose one or more items from a list of available choices. Choice controls (<A HREF="UIChoice.htm">UIChoice</A>) are similar to drop-down list boxes in Win32&#151;they display only the currently selected item until they are activated and present a list of available choices. List controls (<A HREF="UIList.htm">UIList</A>) display available choices along with the currently selected item. You can also create list controls using the UIList.<A HREF="IUISelector.htm#com_0003001195020002">MULTISELECT</A> selection mode to enable users to select multiple items from the list. The following diagram shows the class hierarchy of choice and list controls.

<P><IMG SRC="art/mark5.gif" WIDTH="155" HEIGHT="116" ALT="" >

<P>The following illustration shows the appearance of two choice controls and a list control. The first choice control is shown before activation and the second one is shown after activation.

<P><IMG SRC="art/choice.gif" WIDTH="339" HEIGHT="104" ALT="" >

<P>Here's the code for a class that is a panel that contains a choice control and a list control.

<PRE><FONT FACE="Courier" SIZE="2">class ChoicePanel extends UIPanel
{
    // Constructor
    public ChoicePanel()
    {
        UIChoice choice = new UIChoice();
        choice.addString("Choice A");
        choice.addString("Choice B");
        choice.addString("Choice C");
        add (choice);

        UIList list = new UIList();
        list.add("List Item A");
        list.add("List Item B");
        list.add("List Item C");
        add(list);
    }
}</FONT></PRE>
<P><B>Note</B>  To create a scroll bar with a list control, you must add the list control to a scroll viewer control (<A HREF="UIScrollViewer.htm">UIScrollViewer</A>).
<H4 STYLE="color:#333366"><A NAME="afccontrols2_0006000401040100">Choice and List Control Event Handling</A></H4><P>Like menu controls, choice and list controls don't fire events directly on the choice or list control objects&#151;they fire events on the objects contained by the controls. Choice controls fire an action event when a user chooses one of the items available in the drop-down list. List controls don't fire events unless a selection is made with a double-click mouse action. 


<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Top"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
