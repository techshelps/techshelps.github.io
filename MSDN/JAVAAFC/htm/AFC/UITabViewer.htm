<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UITabViewer</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITabViewer.htm#com_000300117e010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITabViewer.htm#com_000300117e020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UITabListLayout.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIText.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UITabViewer</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UITabViewer extends <A HREF="UIPanel.htm">UIPanel</A>
{
  // Constructors
  public <A HREF="UITabViewer.htm#com_000300117e010100">UITabViewer</A>();

  // Methods
  public IUIComponent <A HREF="UITabViewer.htm#com_000300117e020100">add</A>(String name, IUIComponent comp);
  public synchronized void <A HREF="UITabViewer.htm#com_000300117e020200">addItemListener</A>(IUIItemListener l);
  public void <A HREF="UITabViewer.htm#com_000300117e020300">addNotify</A>();
  public IUIComponent <A HREF="UITabViewer.htm#com_000300117e020400">addTab</A>(IUIComponent tab,
        IUIComponent content);
  public Insets <A HREF="UITabViewer.htm#com_000300117e020500">getInsets</A>();
  public int <A HREF="UITabViewer.htm#com_000300117e020600">getSelectedIndex</A>();
  public IUIComponent <A HREF="UITabViewer.htm#com_000300117e020700">getSelectedItem</A>();
  public boolean <A HREF="UITabViewer.htm#com_000300117e020800">handleEvent</A>(Event e);
  public void <A HREF="UITabViewer.htm#com_000300117e020900">paint</A>(FxGraphics g);
  public boolean <A HREF="UITabViewer.htm#com_000300117e020a00">postEvent</A>(Event e);
  protected void <A HREF="UITabViewer.htm#com_000300117e020b00">processEvent</A>(UIEvent e);
  protected void <A HREF="UITabViewer.htm#com_000300117e020c00">processItemEvent</A>(UIItemEvent e);
  public synchronized void <A HREF="UITabViewer.htm#com_000300117e020d00">removeItemListener</A>(IUIItemListener l);
  public void <A HREF="UITabViewer.htm#com_000300117e020e00">removeTab</A>(int index);
  public void <A HREF="UITabViewer.htm#com_000300117e020f00">removeTab</A>(IUIComponent comp);
  public void <A HREF="UITabViewer.htm#com_000300117e020f01">requestFocus</A>();
  public void <A HREF="UITabViewer.htm#com_000300117e021000">setSelectedIndex</A>(int index);
  public void <A HREF="UITabViewer.htm#com_000300117e021100">setSelectedItem</A>(IUIComponent comp);
}
</FONT></PRE>
<P>This class implements a tab viewer control. <B>UITabViewer</B> works in conjunction with <A HREF="UITabList.htm">UITabList</A> to display a list of tabs and their associated pages. <B>UITabViewer</B> uses <A HREF="UITabLayout.htm">UITabLayout</A> for its layout manager. 
<P>A <B>UITabViewer</B> object is empty when it is first created. The <A HREF="UITabViewer.htm#com_000300117e020100">add</A> and <A HREF="UITabViewer.htm#com_000300117e020400">addTab</A> methods enable you to insert tabs and their pages. The following example shows how to use these methods. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a UITabViewer object.
UITabViewer tv = new UITabViewer();

// Add a tab and a page that both display text.
tv.add("Tab 1", new UIText("Page 1"));

// Add a tab that displays the graphical image stored 
// in the variable myImage, with a page that displays 
// a check box button.
tv.addTab(new UIGraphic(myImage), 
          new UICheckButton("Button on Page 2"));

// Add a UITab object with a page that displays the 
// UIList object myList.
UITab t = new UITab("Tab 3");
tv.addTab(t, myList);

// Now add the tab viewer to the container.
add(tv);
</FONT></PRE>
<P><B>Note</B>  When you call <A HREF="UITabViewer.htm#com_000300117e020100">add</A> with a <B>String</B>, the tab is automatically hot-tracked. To override this default, call <A HREF="UITabViewer.htm#com_000300117e020400">addTab</A> with a <A HREF="UIText.htm">UIText</A> object, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Add a tab that displays a String. 
// By default, the tab is hot-tracked.
tv.add("hot", myPage);

// Add a tab that is not hot-tracked, using UIText. 
tv.addTab(new UIText("not hot"), myPage);

// To create a hot-tracked tab using UIText,
// specify the UIStatic.HOTTRACK style. 
tv.addTab(new UIText("hot UIText", UIStatic.HOTTRACK), myPage);
</FONT></PRE>
<P>For more information about hot-tracking, see the <A HREF="UIText.htm">UIText</A> overview. 
<P><B>Note</B>  The hot-track color is the same color as the button text color. As a result, hot-tracking does not appear to be functional. 
<P><B>Comments:</B> <B>UITabViewer</B> will put scroll arrows on the control if the tabs do not fit the control. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UIPanel.htm">UIPanel</A>
        |
        +--<B>UITabViewer</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300117e010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300117e010100">UITabViewer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITabViewer();
</FONT></PRE>
<P><P>Creates an empty tab viewer control. 
<P><B>Remarks:</B> <P>Call <A HREF="UITabViewer.htm#com_000300117e020100">add</A> or <A HREF="UITabViewer.htm#com_000300117e020400">addTab</A> to insert a tab and its associated page into the control. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300117e020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300117e020100">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(String name, IUIComponent comp);
</FONT></PRE>
<P><P>Adds a tab and its associated page to the tab viewer control. The tab displays the specified text and the page displays the specified component. 
<P><B>Return Value:</B> <P>Returns the page component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be displayed on the tab. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed on the page that is associated with the tab. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the <I>name</I> parameter identifies a tab that already exists in the tab viewer, this tab's page is updated with <I>comp</I>. Otherwise, a new tab and page are added. A tab's page is displayed only when the tab is selected. 
<P>By default, the tab is hot-tracked. To add a tab that is not hot-tracked, call the <A HREF="UITabViewer.htm#com_000300117e020400">addTab</A> method and pass a <A HREF="UIText.htm">UIText</A> object. For more information about hot-tracking, see the <A HREF="UITabViewer.htm">UITabViewer</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020200">addItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Adds the specified item listener. The listener receives all item events generated for the control. (Item events are generated when the state of an item changes.) 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e020d00">removeItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020300">addNotify</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void addNotify();
</FONT></PRE>
<P><P>Called to perform initialization when the graphics context is first available. 
<P><B>Return Value:</B> <P>No return value. 

<P><B>Remarks:</B> <P>This method determines whether a tab is selected. If no tab is selected, <B>addNotify</B> sets the selection to the first tab in the tab viewer control. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020400">addTab</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent addTab(IUIComponent tab, IUIComponent content);
</FONT></PRE>
<P><P>Adds a tab and its associated page to the tab viewer control. The tab and page display the specified components. 
<P><B>Return Value:</B> <P>Returns the page component that was added, if successful; otherwise, returns null. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>tab</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed on the tab. If <I>comp</I> is a <A HREF="UITab.htm">UITab</A> object, this tab is added. Otherwise, a new <B>UITab</B> object that displays <I>comp</I> is added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>content</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed on the page that is associated with the tab. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the <I>name</I> parameter identifies a tab that already exists in the tab viewer, this tab's page is updated with <I>content</I>. Otherwise, a new tab and page are added. A tab's page is displayed only when the tab is selected. 
<P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, <A HREF="UIGraphic.htm">UIGraphic</A>, or <A HREF="UIItem.htm">UIItem</A> object for the component. For examples of how to add tabs, see the <A HREF="UITabViewer.htm">UITabViewer</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020500">getInsets</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Insets getInsets();
</FONT></PRE>
<P><P>Retrieves the tab viewer control's insets (in pixels), which identify the nonclient area of the control. 

<P><B>Return Value:</B> <P>Returns an <B>Insets</B> object containing control's insets. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020600">getSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getSelectedIndex();
</FONT></PRE>
<P><P>Retrieves the zero-based index of the tab that is currently selected. 

<P><B>Return Value:</B> <P>Returns the index of the selected tab, or -1 if no tab is selected. 

<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e020700">getSelectedItem</A>, <A HREF="UITabViewer.htm#com_000300117e021000">setSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020700">getSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getSelectedItem();
</FONT></PRE>
<P><P>Retrieves the tab that is currently selected. 

<P><B>Return Value:</B> <P>Returns the selected tab, or null if no tab is selected. 

<P><B>See Also:</B> <B>getSelectedItem</B>, <A HREF="UITabViewer.htm#com_000300117e021000">setSelectedIndex</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020800">handleEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean handleEvent(Event e);
</FONT></PRE>
<P><P>Determines whether a tab in the list has been selected, and if so, shows its associated page. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020900">paint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paint(FxGraphics g);
</FONT></PRE>
<P><P>Draws the tab viewer control. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020a00">postEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean postEvent(Event e);
</FONT></PRE>
<P><P>Posts the specified event to the control. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020b00">processEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processEvent(UIEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has has been registered through a call to addXXXListener. Depending on the type of event, <B>processEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">item event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UITabViewer.htm#com_000300117e020c00">processItemEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022100">processContainerEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022300">processFocusEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022400">processKeyEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022500">processMouseEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022600">processMouseMotionEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processEvent</B>, call the super method <B>processEvent</B> to ensure the default event processing continues normally. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020c00">processItemEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processItemEvent(UIItemEvent e);
</FONT></PRE>
<P><P>Processes item events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UITabViewer.htm#com_000300117e020b00">processEvent</A> and dispatches the event to a registered item listener. When overriding this method, call the super method <B>processItemEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e020200">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020d00">removeItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Removes the specified item listener. The listener no longer receives the control's item events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e020200">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020e00">removeTab</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeTab(int index);
</FONT></PRE>
<P><P>Removes the tab and page from the tab viewer. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The index of the tab and its associated page to remove. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e020f00">removeTab</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void removeTab(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the tab and page from the tab viewer. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">Specifies either the tab or the page of the tab-page pair that is to be removed. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300117e020f01">requestFocus</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void requestFocus();
</FONT></PRE>
<P><P>Transfers the focus to the tab viewer control's content component.

<P><B>Return Value:</B> <P>No return value. 

</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300117e021000">setSelectedIndex</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedIndex(int index);
</FONT></PRE>
<P><P>Selects the tab at the specified index. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index of the tab to be selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>When the specified tab is selected, its associated page is shown. 
<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e021100">setSelectedItem</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300117e021100">setSelectedItem</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelectedItem(IUIComponent comp);
</FONT></PRE>
<P><P>Selects the tab that is identified by the specified component. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component identifying the tab to be selected. If <I>comp</I> is a tab object, this tab is selected. If <I>comp</I> is the component displayed on a tab, the tab containing <I>comp</I> is selected. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>When the specified tab is selected, its associated page is shown. 
<P><B>See Also:</B> <A HREF="UITabViewer.htm#com_000300117e021000">setSelectedIndex</A>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
