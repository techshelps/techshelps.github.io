<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UICheckButton</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UICheckButton.htm#com_000300113c010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UICheckButton.htm#com_000300113c020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UICardLayout.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UICheckGroup.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UICheckButton</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UICheckButton extends <A HREF="UIButton.htm">UIButton</A>
{
  // Constructors
  public <A HREF="UICheckButton.htm#com_000300113c010100">UICheckButton</A>();
  public <A HREF="UICheckButton.htm#com_000300113c010200">UICheckButton</A>(String name);
  public <A HREF="UICheckButton.htm#com_000300113c010300">UICheckButton</A>(String name, int style);
  public <A HREF="UICheckButton.htm#com_000300113c010400">UICheckButton</A>(IUIComponent comp);
  public <A HREF="UICheckButton.htm#com_000300113c010500">UICheckButton</A>(IUIComponent comp, int style);

  // Methods
  public synchronized void <A HREF="UICheckButton.htm#com_000300113c020100">addItemListener</A>(IUIItemListener l);
  public int <A HREF="UICheckButton.htm#com_getCheckImageSize">getCheckImageSize</A>();
  public Insets <A HREF="UICheckButton.htm#com_000300113c020200">getInsets</A>();
  public Dimension <A HREF="UICheckButton.htm#com_000300113c020300">getMinimumSize</A>();
  public Dimension <A HREF="UICheckButton.htm#com_000300113c020400">getPreferredSize</A>();
  public int <A HREF="UICheckButton.htm#com_000300113c020500">getRoleCode</A>();
  public void <A HREF="UICheckButton.htm#com_000300113c020600">paint</A>(FxGraphics g);
  public void <A HREF="UICheckButton.htm#com_000300113c020700">paintCheck</A>(FxGraphics g);
  protected void <A HREF="UICheckButton.htm#com_000300113c020800">processEvent</A>(UIEvent e);
  protected void <A HREF="UICheckButton.htm#com_000300113c020900">processItemEvent</A>(UIItemEvent e);
  public synchronized void <A HREF="UICheckButton.htm#com_000300113c020a00">removeItemListener</A>(IUIItemListener l);
  public void <A HREF="UICheckButton.htm#com_000300113c020b00">setChecked</A>(boolean on);
  public void <A HREF="UICheckButton.htm#com_setCheckImageSize">setCheckImageSize</A>(int imageSize);
  public void <A HREF="UICheckButton.htm#com_000300113c020c00">setHot</A>(boolean on);
  public void <A HREF="UICheckButton.htm#com_000300113c020d00">setID</A>(int id);
  public void <A HREF="UICheckButton.htm#com_000300113c020e00">setIndeterminate</A>(boolean on);
  public void <A HREF="UICheckButton.htm#com_000300113c020f00">setName</A>(String name);
  public void <A HREF="UICheckButton.htm#com_000300113c021000">setPressed</A>(boolean on);
  public void <A HREF="UICheckButton.htm#com_000300113c021100">setSelected</A>(boolean on);
}
</FONT></PRE>
<P>This class implements a check box button control. By default, <B>UICheckButton</B> uses the system-defined check box image. 
<P>For more information about buttons, see the <A HREF="UIButton.htm">UIButton</A> overview. 
<P><B>Note</B>  The behavior of the <B>action</B> method is not identical to the behavior of AWT components. for more information, see the overview information in <A HREF="UIButton.htm">UIButton</A>. 
<P><B>Note</B>  The hot-track color is the same color as the button text color. As a result, hot-tracking does not appear to be functional. 
<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UISingleContainer.htm">UISingleContainer</A>
        |
        +--<A HREF="UIButton.htm">UIButton</A>
          |
          +--<B>UICheckButton</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_000300113c010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300113c010100">UICheckButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UICheckButton();
</FONT></PRE>
<P><P>Creates a check box button control with no content. 
<P><B>Remarks:</B> <P>By default, the button's style is set to <A HREF="UIButton.htm#com_0003001138030001">TOGGLE</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c010200">UICheckButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UICheckButton(String name);
</FONT></PRE>
<P><P>Creates a check box button control with the specified text. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be displayed with the check box image. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the button is hot-tracked and its style is set to <A HREF="UIButton.htm#com_0003001138030001">TOGGLE</A>. To create a button that is not hot-tracked, pass a <A HREF="UIText.htm">UIText</A> object instead of a <B>String</B>. For more information about hot-tracking, see the <A HREF="UIButton.htm">UIButton</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c010300">UICheckButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UICheckButton(String name, int style);
</FONT></PRE>
<P><P>Creates a check box button control with the specified text and style. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be displayed with the check box image. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the button. Possible values include <A HREF="UIButton.htm#com_0003001138030001">TOGGLE</A> or <A HREF="UIButton.htm#com_0003001138030002">TRITOGGLE</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the button is hot-tracked. To create a button that is not hot-tracked, pass a <A HREF="UIText.htm">UIText</A> object instead of a <B>String</B>. For more information about hot-tracking, see the <A HREF="UIButton.htm">UIButton</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c010400">UICheckButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UICheckButton(IUIComponent comp);
</FONT></PRE>
<P><P>Creates a check box button control with the specified component. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed with the check box image. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, a <A HREF="UIGraphic.htm">UIGraphic</A>, or a <A HREF="UIItem.htm">UIItem</A> object for the component. By default, the button's style is set to <A HREF="UIButton.htm#com_0003001138030001">TOGGLE</A>. For examples of how to construct buttons, see the <A HREF="UIButton.htm">UIButton</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c010500">UICheckButton</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UICheckButton(IUIComponent comp, int style);
</FONT></PRE>
<P><P>Creates a check box button control with the specified component and style. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed with the check box image. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>style</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The style of the button. Possible values include <A HREF="UIButton.htm#com_0003001138030001">TOGGLE</A> or <A HREF="UIButton.htm#com_0003001138030002">TRITOGGLE</A>. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, a <A HREF="UIGraphic.htm">UIGraphic</A>, or a <A HREF="UIItem.htm">UIItem</A> object for the component. For examples of constructing buttons, see the <A HREF="UIButton.htm">UIButton</A> overview. 
<P><B>Exceptions:</B> <P><B>IllegalArgumentException</B>
 if an undefined style was specified. 


</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_000300113c020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_000300113c020100">addItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void addItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Adds the specified item listener. The listener receives all item events generated for the control. (Item events are generated when the state of an item changes.) 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be added. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020a00">removeItemListener</A>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_getCheckImageSize">getCheckImageSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getCheckImageSize();
</FONT></PRE>
<P><P>Retrieves the square dimensions of the check box image that is associated with the button control.
<P><B>Return Value:</B> <P>Returns the square dimensions (in pixels) of the check box's image. 

<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_setCheckImage">setCheckImageSize</A>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300113c020200">getInsets</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Insets getInsets();
</FONT></PRE>
<P><P>Retrieves the button control's insets (in pixels), which identify the non-client area of the control. 
<P><B>Return Value:</B> <P>Returns an <B>Insets</B> object that contains the control's insets. 

<P><B>Remarks:</B> <P>The left inset value includes the size of the check box image plus two pixels for the space between the check box image and the content component. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020300">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize();
</FONT></PRE>
<P><P>Retrieves the minimum size of the check box button control. The minimum size specifies the smallest dimensions (in pixels) that will allow the button's content component and check box image to be displayed. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum size. 

<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020400">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize();
</FONT></PRE>
<P><P>Retrieves the preferred size (in pixels) of the check box button control. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred size. 

<P><B>Remarks:</B> <P>By default, this method returns the minimum size, as determined by <A HREF="UICheckButton.htm#com_000300113c020300">getMinimumSize</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020500">getRoleCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRoleCode();
</FONT></PRE>
<P><P>Retrieves the <B>ROLE_SYSTEM</B> code that best describes the role of the check box button. 

<P><B>Return Value:</B> <P>Returns the <B>ROLE_SYSTEM_CHECKBUTTON</B> code. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020600">paint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paint(FxGraphics g);
</FONT></PRE>
<P><P>Draws the check box button control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method draws the button's content component, and calls <A HREF="UICheckButton.htm#com_000300113c020700">paintCheck</A> to draw the check box image. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020700">paintCheck</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintCheck(FxGraphics g);
</FONT></PRE>
<P><P>Draws the check box image, according to the button control's current state. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UICheckButton.htm#com_000300113c020600">paint</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020800">processEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processEvent(UIEvent e);
</FONT></PRE>
<P><P>Processes the specified event. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked if a listener has been registered through a call to addXXXListener. Depending on the type of event, <B>processEvent</B> calls one of the following methods. 
<P>
<TABLE BORDER=0>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Event type
</B></FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><B>Method called
</B></FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">item event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UICheckButton.htm#com_000300113c020900">processItemEvent</A>
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">action event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIButton.htm#com_0003001138020800">processActionEvent</A> (inherited through <A HREF="UIButton.htm">UIButton</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">container event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022100">processContainerEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">focus event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022300">processFocusEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">key event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022400">processKeyEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022500">processMouseEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
<TR><TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">mouse motion event
</FONT></TD>
<TD ALIGN=LEFT VALIGN=TOP><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2"><A HREF="UIStateContainer.htm#com_0003001177022600">processMouseMotionEvent</A> (inherited through <A HREF="UIStateContainer.htm">UIStateContainer</A>)
</FONT></TD>
</TR>
</TABLE>
<P>When overriding <B>processEvent</B>, call the super event <B>processEvent</B> to ensure the default event processing continues normally. 
<P><B>Overrides:</B> <P><A HREF="UIButton.htm#com_0003001138020900">processEvent(UIEvent)</A> in <A HREF="UIButton.htm">UIButton</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020900">processItemEvent</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">protected void processItemEvent(UIItemEvent e);
</FONT></PRE>
<P><P>Processes item events. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item event. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UICheckButton.htm#com_000300113c020800">processEvent</A> and dispatches the event to a registered item listener. When overriding this method, call the super method <B>processItemEvent</B> to ensure the default event processing continues normally. 
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020100">addItemListener</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020a00">removeItemListener</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public synchronized void removeItemListener(IUIItemListener l);
</FONT></PRE>
<P><P>Removes the specified item listener. The listener no longer receives the control's item events. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>l</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The item listener to be removed. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020100">addItemListener</A>
</BLOCKQUOTE>

<H4 STYLE="color:#333366"><A NAME="com_000300113c020b00">setChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChecked(boolean on);
</FONT></PRE>
<P><P>Sets or clears the checked state of the button. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the checked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method redraws the check box's image to display the new state. For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
</BLOCKQUOTE>
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020400">getPreferredSize</A>

<H4 STYLE="color:#333366"><A NAME="com_setCheckImageSize">setCheckImageSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setCheckImageSize(int imageSize);
</FONT></PRE>
<P><P>Sets the square dimensions of the check box image that is associated with the button control.
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>imageSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The square dimensions (in pixels) of the check box's image.

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P><B>Remarks:</B> <P>This method provides the ability to control the size of the check box's or radio button's image.
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_getCheckImageSize">getCheckImageSize</A>

<H4 STYLE="color:#333366"><A NAME="com_000300113c020c00">setHot</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setHot(boolean on);
</FONT></PRE>
<P><P>Sets or clears the hot-tracked state of the button. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the hot-tracked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method redraws the check box image to display the new state. For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
<P><B>Overrides:</B> <P><A HREF="UIButton.htm#com_0003001138020b00">setHot(boolean)</A> in <A HREF="UIButton.htm">UIButton</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020d00">setID</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setID(int id);
</FONT></PRE>
<P><P>Sets the container's identifier. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>id</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The value to be associated with the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020f00">setName</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020e00">setIndeterminate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setIndeterminate(boolean on);
</FONT></PRE>
<P><P>Sets or clears the indeterminate state of the button. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the indeterminate state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method redraws the check box image to display the new state. For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c020f00">setName</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setName(String name);
</FONT></PRE>
<P><P>Sets the container's name. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>name</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The name to be associated with the container. 

</FONT></TD></TR></TABLE>
<P><B>See Also:</B> <A HREF="UICheckButton.htm#com_000300113c020d00">setID</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c021000">setPressed</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setPressed(boolean on);
</FONT></PRE>
<P><P>Sets or clears the pressed state of the button. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the pressed state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method redraws the check box image to display the new state. For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_000300113c021100">setSelected</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setSelected(boolean on);
</FONT></PRE>
<P><P>Sets or clears the selected state of the button. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the selected state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For more information about states, see the <A HREF="UIStateContainer.htm">UIStateContainer</A> overview. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
