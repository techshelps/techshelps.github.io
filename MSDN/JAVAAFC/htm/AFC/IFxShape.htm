<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface IFxShape</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="IFxShape.htm#com_0003000825010000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="IFxGraphicsConstants.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_pfx.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="IFxSystemInterface.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.fx</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Interface IFxShape</H2>
<PRE><FONT FACE="Courier" SIZE="2">public interface IFxShape extends <B>Shape</B>
{
  // Methods
  public boolean <A HREF="IFxShape.htm#com_0003000825010100">contains</A>(Point p);
  public void <A HREF="IFxShape.htm#com_0003000825010200">draw</A>(FxGraphics g);
  public int <A HREF="IFxShape.htm#com_0003000825010300">getBorderLength</A>();
  public Rectangle <A HREF="IFxShape.htm#com_0003000825010400">getBounds</A>();
  public Point <A HREF="IFxShape.htm#com_0003000825010500">getOrigin</A>();
  public Point <A HREF="IFxShape.htm#com_0003000825010600">getPoint</A>(int pt);
  public int[] <A HREF="IFxShape.htm#com_0003000825010700">getPointAndAngle</A>(int pt);
  public int <A HREF="IFxShape.htm#com_0003000825010800">getPointAngle</A>(int pt);
  public boolean <A HREF="IFxShape.htm#com_0003000825010900">includes</A>(Point p);
  public boolean <A HREF="IFxShape.htm#com_0003000825010a00">setOrigin</A>(Point p);
  public void <A HREF="IFxShape.htm#com_0003000825010b00">translate</A>(int deltaX, int deltaY);
  public void <A HREF="IFxShape.htm#com_0003000825010c00">updateBounds</A>(int x, int y);
}
</FONT></PRE>
<P>This interface defines methods for objects that represent a geometric shape. 

<PRE><FONT FACE="Courier" SIZE="2"><B>Shape</B>
  |
  +--<B>IFxShape</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003000825010000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003000825010100">contains</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean contains(Point p);
</FONT></PRE>
<P><P>Determines whether a specific <B>Point</B> lies on or within the curve. 
<P><B>Return Value:</B> <P>Returns true if the point is on or within the curve; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to be tested. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If this is a closed shape, the method will return true for points contained within the curve. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010200">draw</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void draw(FxGraphics g);
</FONT></PRE>
<P><P>Draws a curve with the current graphics. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics object to use. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010300">getBorderLength</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getBorderLength();
</FONT></PRE>
<P><P>Retrieves the length of the entire border of the shape. 

<P><B>Return Value:</B> <P>Returns the length of the border. 
<P><B>Remarks:</B> <P>For example, the border length of a circle is its circumference, and the border length of a rectangle is ((y1 - y2) x 2) + ((x1 - x2) x 2), and so on.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010400">getBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getBounds();
</FONT></PRE>
<P><P>Retrieves the bounding box of the shape. 

<P><B>Return Value:</B> <P>Returns a <B>Rectangle</B> that defines the bounding box of the shape. 

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010500">getOrigin</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getOrigin();
</FONT></PRE>
<P><P>Locates the origin of a curve. 
<P><B>Return Value:</B> <P>Returns the point used as the origin. 

<P><B>Remarks:</B> <P>Use this method to locate the origin of a curve and use the returned <B>Point</B> as a basis for the <A HREF="IFxShape.htm#com_0003000825010600">getPoint</A> method.
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010600">getPoint</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Point getPoint(int pt);
</FONT></PRE>
<P><P>Locates a point that is <I>n</I> pixels from the origin of the curve. 

<P><B>Return Value:</B> <P>Returns the point that is <I>n</I> pixels from the origin. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to locate. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010700">getPointAndAngle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int[] getPointAndAngle(int pt);
</FONT></PRE>
<P><P>Retrieves the coordinates and angle of the base of the normal vector at the requested point. 

<P><B>Return Value:</B> <P>Returns an array of three integers: the x, y, and degrees values. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to calculate the vector from. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010800">getPointAngle</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getPointAngle(int pt);
</FONT></PRE>
<P><P>Locates the angle of the normal vector at this point. 

<P><B>Return Value:</B> <P>Returns the angle of the normal vector at point <I>pt</I>. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pt</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to calculate the angle from. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010900">includes</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean includes(Point p);
</FONT></PRE>
<P><P>Determines whether the specified point is on the curve. 
<P><B>Return Value:</B> <P>Returns true if the point is on the curve; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to be tested. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the curve represents a closed area, the method will not return true for a point within the enclosed boundaries. Under these circumstances, the <A HREF="IFxShape.htm#com_0003000825010100">contains</A> method should be used. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010a00">setOrigin</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean setOrigin(Point p);
</FONT></PRE>
<P><P>Sets a new origin for the curve. 
<P><B>Return Value:</B> <P>Returns true if successful; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>p</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The point to set as the new origin. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>If the point is not on the curve, the curve may not be set to the new origin. The origin, which is used for plotting operations on the curve, is not equivalent to the point nearest the origin (0,0). 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010b00">translate</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void translate(int deltaX, int deltaY);
</FONT></PRE>
<P><P>Translates the vertices by deltaX and deltaY. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaX</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The amount to move the x coordinates. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>deltaY</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The amount to move the y coordinates. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003000825010c00">updateBounds</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void updateBounds(int x, int y);
</FONT></PRE>
<P><P>Updates the boundaries. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new x coordinate of the boundary. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new y coordinate of the boundary. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
