<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UITreeLayout</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITreeLayout.htm#com_0003001184010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITreeLayout.htm#com_0003001184020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UITree.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UIVerticalFlowLayout.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UITreeLayout</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UITreeLayout extends <A HREF="UILayoutManager.htm">UILayoutManager</A>
{
  // Constructors
  public <A HREF="UITreeLayout.htm#com_0003001184010100">UITreeLayout</A>();
  public <A HREF="UITreeLayout.htm#com_0003001184010200">UITreeLayout</A>(int indent);
  public <A HREF="UITreeLayout.htm#com_0003001184010300">UITreeLayout</A>(int indent, int vgap);

  // Methods
  public Dimension <A HREF="UITreeLayout.htm#com_0003001184020100">adjustLayoutSize</A>(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp,
        Dimension oldSize, Dimension newSize);
  public void <A HREF="UITreeLayout.htm#com_0003001184020200">drawLine</A>(FxGraphics g, int x1, int y1, int x2,
        int y2);
  public Dimension <A HREF="UITreeLayout.htm#com_0003001184020300">getMinimumSize</A>(IUIContainer target);
  public Dimension <A HREF="UITreeLayout.htm#com_0003001184020400">getPreferredSize</A>(IUIContainer target);
  public boolean <A HREF="UITreeLayout.htm#com_0003001184020500">isHeightRelative</A>();
  public boolean <A HREF="UITreeLayout.htm#com_0003001184020600">isOverlapping</A>();
  public boolean <A HREF="UITreeLayout.htm#com_0003001184020700">isWidthRelative</A>();
  public void <A HREF="UITreeLayout.htm#com_0003001184020800">layout</A>(IUIContainer target, Rectangle bounds);
  public void <A HREF="UITreeLayout.htm#com_0003001184020900">paintContainer</A>(IUIContainer target, FxGraphics g);
}
</FONT></PRE>
<P>This class implements a layout manager for tree nodes. <B>UITreeLayout</B> handles the drawing of the lines that connect a tree node to its children. <A HREF="UITree.htm">UITree</A> typically uses <B>UITreeLayout</B> for its default layout manager. 
<P>By default, <B>UISystem</B> defines <B>UITreeLayout</B> at the <B>TREE_LAYOUT</B> index. 

<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UILayoutManager.htm">UILayoutManager</A>
  |
  +--<B>UITreeLayout</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001184010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001184010100">UITreeLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITreeLayout();
</FONT></PRE>
<P><P>Creates a tree layout manager. 
<P><B>Remarks:</B> <P>By default, the vertical spacing between all components is 2 pixels. A tree node's child components will be laid out with an indent of 16 pixels. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184010200">UITreeLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITreeLayout(int indent);
</FONT></PRE>
<P><P>Creates a tree layout manager with the specified indent. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The indent (in pixels) used when laying out child components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the vertical spacing between all components is 2 pixels. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184010300">UITreeLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITreeLayout(int indent, int vgap);
</FONT></PRE>
<P><P>Creates a tree layout manager with the specified indent and vertical gap. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The indent (in pixels) used when laying out child components. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>vgap</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The vertical spacing (in pixels) between components. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001184020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001184020100">adjustLayoutSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension adjustLayoutSize(IUIContainer parent,
        Dimension oldParentSize, IUIComponent comp, Dimension oldSize,
        Dimension newSize);
</FONT></PRE>
<P><P>Called to adjust the layout size of the specified component in the specified container. 

<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the new preferred size of the container. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>parent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldParentSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the container. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component being sized. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>oldSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The previous layout size of the component. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>newSize</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout size of the component. 

</FONT></TD></TR></TABLE>
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010200">adjustLayoutSize(IUIContainer,Dimension,IUIComponent,Dimension,Dimension)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020200">drawLine</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void drawLine(FxGraphics g, int x1, int y1, int x2, int y2);
</FONT></PRE>
<P><P>Draws a line from one point to another. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the line's starting point. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y1</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the line's starting point. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>x2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The x coordinate of the line's ending point. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>y2</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The y coordinate of the line's ending point. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called by <A HREF="UITreeLayout.htm#com_0003001184020900">paintContainer</A> to draw the lines that connect a tree node to its children. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020300">getMinimumSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getMinimumSize(IUIContainer target);
</FONT></PRE>
<P><P>Determines the minimum dimensions (in pixels) needed to lay out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the minimum layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The height of the returned <B>Dimension</B> object is the sum of the minimum heights of each item displayed by the tree node and all its children, plus the vertical gaps between each item. The <B>Dimension</B> object's width is the largest of the minimum widths of the items (including the indent). 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010800">getMinimumSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UITreeLayout.htm#com_0003001184020400">getPreferredSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020400">getPreferredSize</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Dimension getPreferredSize(IUIContainer target);
</FONT></PRE>
<P><P>Determines the preferred dimensions (in pixels) for laying out the child components in the specified container. 
<P><B>Return Value:</B> <P>Returns a <B>Dimension</B> object containing the preferred layout size. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container of the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The height of the returned <B>Dimension</B> object is the sum of the preferred heights of each item displayed by the tree node and all its children, plus the vertical gaps between each item. The <B>Dimension</B> object's width is the largest of the preferred widths of the items (including the indent). 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010900">getPreferredSize(IUIContainer)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UITreeLayout.htm#com_0003001184020300">getMinimumSize</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020500">isHeightRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isHeightRelative();
</FONT></PRE>
<P><P>This method simply returns false, indicating that the <A HREF="UITreeLayout.htm">UITreeLayout</A> does not lay out its components based on the height of the container. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010c00">isHeightRelative()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UITreeLayout.htm#com_0003001184020700">isWidthRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020600">isOverlapping</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isOverlapping();
</FONT></PRE>
<P><P>This method simply returns false, indicating that the <A HREF="UITreeLayout.htm">UITreeLayout</A> lays out its components such that they never overlap. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010d00">isOverlapping()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020700">isWidthRelative</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isWidthRelative();
</FONT></PRE>
<P><P>This method simply returns false, indicating that the <A HREF="UITreeLayout.htm">UITreeLayout</A> does not lay out its components based on the width of the container. 

<P><B>Return Value:</B> <P>Returns false. 

<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010e00">isWidthRelative()</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

<P><B>See Also:</B> <A HREF="UITreeLayout.htm#com_0003001184020500">isHeightRelative</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020800">layout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void layout(IUIContainer target, Rectangle bounds);
</FONT></PRE>
<P><P>Lays out the components in the specified container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container being laid out. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>bounds</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The bounding rectangle in which to lay out the components. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The height and width of each component is based on the component's respective preferred height and width. The vertical gap (defined when the layout manager was created) is used for vertical spacing between each component. 
<P>For each tree node's expand button, <B>layoutContainer</B> determines where the attaching line must be drawn from the node to its parent, based on the node's <A HREF="UITree.htm">getAttachRect</A> method and the layout manager's defined indent. The <A HREF="UITreeLayout.htm#com_0003001184020900">paintContainer</A> method is then invoked to draw all connecting lines between a node and its children. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157010f00">layout(IUIContainer,Rectangle)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001184020900">paintContainer</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void paintContainer(IUIContainer target, FxGraphics g);
</FONT></PRE>
<P><P>Draws the container. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>target</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The container. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>g</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The graphics context of the container. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is automatically invoked during a call to the container's <B>paint</B> method. If the tree node is expanded, <B>paintContainer</B> calls <A HREF="UITreeLayout.htm#com_0003001184020200">drawLine</A> to connect the node to its children. 
<P><B>Overrides:</B> <P><A HREF="UILayoutManager.htm#com_0003001157011100">paintContainer(IUIContainer,FxGraphics)</A> in <A HREF="UILayoutManager.htm">UILayoutManager</A>.

</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
