<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Class UITree</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>
<BODY BGCOLOR="White" TOPMARGIN=0 LEFTMARGIN=0 VLINK="#006699" ALINK="#006699">
<A NAME="top"></A>
<!--TOOLBAR_START-->
<!--TOOLBAR_END-->

<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH="98%">
<TR>
<TD ROWSPAN=2 WIDTH=114 ALIGN="LEFT" VALIGN="TOP">
<IMG SRC="art/title_x3.gif" WIDTH="112" HEIGHT="108"  BORDER=0 ALT="Packages"><TABLE CELLPADDING=0 CELLSPACING=0 BORDER=0 WIDTH="100%">
<TR><TD WIDTH=10>&nbsp;</TD><TD VALIGN="top"><FONT FACE="Verdana,Arial,Helvetica" SIZE=1><B STYLE="color:#006699">In this topic</B><P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITree.htm#com_0003001183010000">Constructors</A>
<P><IMG SRC="art/linkbull.gif" WIDTH="10" HEIGHT="8"  BORDER=0 ALT="*"><A STYLE="color: #333366;text-decoration:none" HREF="UITree.htm#com_0003001183020000">Methods</A>
</FONT></TD></TR></TABLE>
</TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="LEFT" VALIGN="TOP">
<P>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="0">
<TR>
<TD WIDTH="355" VALIGN="bottom"><IMG SRC="art/package2.gif" WIDTH="355" HEIGHT="27"  BORDER=0 ALT="Packages"></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="bottom"><A HREF="UITip.htm"><IMG SRC="art/prevnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Previous"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="def_ui.htm"><IMG SRC="art/pkgnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="This Package"></A></TD><TD ALIGN="center" VALIGN="bottom"><A HREF="UITreeLayout.htm"><IMG SRC="art/nextnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="Next"></A></TD></TR>
<TR>
<TD WIDTH="355" ALIGN="right" VALIGN="top"><FONT COLOR="#006699" SIZE="4" FACE="VERDANA,ARIAL,HELVETICA"><B>Package com.ms.ui</B></FONT></TD>
<TD WIDTH=20>&nbsp;</TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Previous</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">This<BR>Package</FONT></TD>
<TD ALIGN="center" VALIGN="top"><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1">Next</FONT></TD>
</TR>
</TABLE>
</TD>
</TR>
<TR>
<TD WIDTH=20>&nbsp;</TD>
<TD>
<BR>
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">
<BR><BR><H2 STYLE="color:#333366">Class UITree</H2>
<PRE><FONT FACE="Courier" SIZE="2">public class UITree extends <A HREF="UISelector.htm">UISelector</A> implements <A HREF="IUITree.htm">IUITree</A>
{
  // Constructors
  public <A HREF="UITree.htm#com_0003001183010100">UITree</A>();
  public <A HREF="UITree.htm#com_0003001183010200">UITree</A>(String s);
  public <A HREF="UITree.htm#com_0003001183010300">UITree</A>(Image i, String s);
  public <A HREF="UITree.htm#com_0003001183010400">UITree</A>(IUIComponent comp);
  public <A HREF="UITree.htm#com_0003001183010500">UITree</A>(IUIComponent comp, int indent);

  // Methods
  public boolean <A HREF="UITree.htm#com_0003001183020100">action</A>(Event e, Object o);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020200">add</A>(String s);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020300">add</A>(String s, int pos);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020400">add</A>(Image i, String s);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020500">add</A>(Image i, String s, int pos);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020600">add</A>(IUIComponent comp);
  public IUIComponent <A HREF="UITree.htm#com_0003001183020700">add</A>(IUIComponent comp, int pos);
  public Rectangle <A HREF="UITree.htm#com_0003001183020800">getAttachRect</A>();
  public IUIComponent <A HREF="UITree.htm#com_0003001183020900">getExpander</A>();
  public int <A HREF="UITree.htm#com_0003001183020a00">getRoleCode</A>();
  public int <A HREF="UITree.htm#com_0003001183020b00">getStateCode</A>();
  public boolean <A HREF="UITree.htm#com_0003001183020c00">hasChildren</A>();
  public boolean <A HREF="UITree.htm#com_0003001183020d00">isExpanded</A>();
  public boolean <A HREF="UITree.htm#com_0003001183020e00">keyDown</A>(Event e, int key);
  public void <A HREF="UITree.htm#com_0003001183020f00">remove</A>(IUIComponent comp);
  public void <A HREF="UITree.htm#com_0003001183021000">remove</A>(int index);
  public void <A HREF="UITree.htm#com_0003001183021100">setChecked</A>(boolean on);
  public void <A HREF="UITree.htm#com_0003001183021200">setExpanded</A>(boolean expanded);
  public void <A HREF="UITree.htm#com_0003001183021300">setExpanded</A>(boolean expanded, boolean notify);
  public void <A HREF="UITree.htm#com_0003001183021400">setExpander</A>(IUIComponent to);
  public void <A HREF="UITree.htm#com_0003001183021500">setLayout</A>(IUILayoutManager lm);
}
</FONT></PRE>
<P>This class implements a tree control. Each <B>UITree</B> object represents an expandable tree node. Use the <A HREF="UITree.htm#com_0003001183020200">add</A> method, to insert child components, including other tree nodes. The following example demonstrates this process. 
<PRE><FONT FACE="Courier" SIZE="2">UITree t0, t1;

// Construct the root tree node with the "Colors" text string.
t0 = new UITree("Colors");

// Add two text child items to t0.
t0.add("Red"); 
t0.add("Yellow"); 

// Construct a child node that itself has two children.
{
   t1 = new UITree("Blue");
   t1.add("Navy");
   t1.add("Royal");
}
t0.add(t1);  // Add node t1 to t0.

// Now add t0 to the container.
add(t0); </FONT></PRE>
<P><B>Note</B>  The item displayed by the root node of a tree control is the tree's header component. <B>UITree</B> inherits the <A HREF="UIPanel.htm#com_0003001160020c00">getHeader</A> and <A HREF="UIPanel.htm#com_0003001160021d00">setHeader</A> methods to retrieve and set this item. The following example shows how to change the header of a tree node. 
<PRE><FONT FACE="Courier" SIZE="2">// Change the text displayed by t0. Pass a UIText
// object that displays the "Primary Colors" text string.
t0.setHeader(new UIText("Primary Colors"));
</FONT></PRE>
<P>For more information about header components, see the <A HREF="UIPanel.htm">UIPanel</A> overview. 
<P>When a <B>String</B> is used to create a tree node or to add a child item, the component is automatically hot-tracked. To override this default, use a <A HREF="UIText.htm">UIText</A> object, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Construct a tree control using UIText. 
// By default, the node is not hot-tracked.
UITree t2 = new UITree(new UIText("Not hot-tracked"));

// Add three child items to t2. By default, the String item 
// will be hot-tracked. To create a hot-tracked item with 
// UIText, specify the UIStatic.HOTTRACK style.
t2.add("Hot-tracked by default");
t2.add(new UIText("Not hot-tracked"));
t2.add(new UIText("Hot-tracked with UIText", UIStatic.HOTTRACK));

// Add two child items that display an image and text.
// Use UIItem to create an item that is not hot-tracked.
t2.add(myImage, "Hot-tracked by default");
t2.add(new UIItem(myImage, "Not hot-tracked"));

// Add t2 to the container.
add(t2);
</FONT></PRE>
<P>For more information about hot-tracking, see the <A HREF="UIText.htm">UIText</A> overview. 
<P>Typically, a <B>UITree</B> object uses <A HREF="UITreeLayout.htm">UITreeLayout</A> for its layout manager, which handles the drawing of the attaching lines between a node and its child components. By default, all <B>UITree</B> node children use <A HREF="UIExpandButton.htm">UIExpandButton</A> to create the tree's expand button. Initially, <B>UITree</B> nodes are not set in the expanded state. To manually expand or collapse a tree node, call its <A HREF="UITree.htm#com_0003001183021200">setExpanded</A> method, as shown in the following example. 
<PRE><FONT FACE="Courier" SIZE="2">// Force t0 to display all children.
t0.setExpanded(true);
</FONT></PRE>
<P><B>UITree</B> permits only one child item to be selected at a time, and by default, a list select event is generated when an item is clicked. 
<P>Be aware that <B>UITree</B> objects alone have no scrolling capabilities. The easiest way to add this support is to create a <A HREF="UIScrollViewer.htm">UIScrollViewer</A> object that contains the tree control. <B>UIScrollViewer</B> automatically inserts scroll bars when necessary. Also, by using a fixed size layout manager such as <B>UIScrollViewer</B>, the size of the component will be fixed. 
<P>The following example adds a tree control to a <A HREF="UIScrollViewer.htm">UIScrollViewer</A> object. 
<PRE><FONT FACE="Courier" SIZE="2">UITree myTree = new UITree();
myTree.add("first item"); // Add an item to myTree.
...  // Continue adding items to myTree.

// Now create a UIScrollViewer object to contain myTree. 
UIScrollViewer sv = new UIScrollViewer(myTree);

// Add sv to the container.
add(sv);
</FONT></PRE>
<P><B>Note</B>  The hot-track color is the same color as the button text color. As a result, hot-tracking does not appear to be functional. 
<PRE><FONT FACE="Courier" SIZE="2"><A HREF="UIComponent.htm">UIComponent</A>
  |
  +--<A HREF="UIContainer.htm">UIContainer</A>
    |
    +--<A HREF="UIStateContainer.htm">UIStateContainer</A>
      |
      +--<A HREF="UIPanel.htm">UIPanel</A>
        |
        +--<A HREF="UISelector.htm">UISelector</A>
          |
          +--<B>UITree</B>
</FONT></PRE>
<H3 STYLE="color:#333366"><A NAME="com_0003001183010000">Constructors</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001183010100">UITree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITree();
</FONT></PRE>
<P><P>Creates a tree control with no content. 
<P><B>Remarks:</B> <P>Call the <A HREF="UITree.htm#com_0003001183020200">add</A> method to add child items to the tree control. To add an item to the root node itself, call <A HREF="UIPanel.htm#com_0003001160021d00">setHeader</A> (inherited through <A HREF="UIPanel.htm">UIPanel</A>). For an example of calling <B>setHeader</B>, see the <A HREF="UITree.htm">UITree</A> overview. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183010200">UITree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITree(String s);
</FONT></PRE>
<P><P>Creates a tree control with the specified text. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be displayed by the node. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the tree node is hot-tracked. To create a node that is not hot-tracked, pass a <A HREF="UIText.htm">UIText</A> object instead of a <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P>To add child items to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183010300">UITree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITree(Image i, String s);
</FONT></PRE>
<P><P>Creates a tree control with the specified image and text. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to be displayed by the node. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be displayed by the node. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>By default, the tree node is hot-tracked. To create a node that is not hot-tracked, pass a <B>UIItem</B> object instead of an <B>Image</B> and <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P>To add child items to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183010400">UITree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITree(IUIComponent comp);
</FONT></PRE>
<P><P>Creates a tree control with the specified component. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed by the node. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, <A HREF="UIGraphic.htm">UIGraphic</A>, or <A HREF="UIItem.htm">UIItem</A> object for the component. To add child items to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183010500">UITree</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public UITree(IUIComponent comp, int indent);
</FONT></PRE>
<P><P>Creates a tree control with the specified component and indent. 
<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be displayed by the node. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>indent</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The indent (in pixels) to be used when laying out node children. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, <A HREF="UIGraphic.htm">UIGraphic</A>, or <A HREF="UIItem.htm">UIItem</A> object for the component. To add child items to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
</BLOCKQUOTE>
<H3 STYLE="color:#333366"><A NAME="com_0003001183020000">Methods</A></H3><H4 STYLE="color:#333366"><A NAME="com_0003001183020100">action</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean action(Event e, Object o);
</FONT></PRE>
<P><P>Determines whether the tree control was double-clicked, and if so, toggles the expanded state. 

<P><B>Return Value:</B> <P>Returns true if the event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the tree control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>o</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The object that posted the event. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020200">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(String s);
</FONT></PRE>
<P><P>Adds the specified text to the end of the tree control. 
<P><B>Return Value:</B> <P>Returns the text component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The newly-added child component is shown or hidden, according to the tree control's expanded state. By default, the item is hot-tracked. To add an item that is not hot-tracked, pass a <A HREF="UIText.htm">UIText</A> object instead of a <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020300">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(String s, int pos);
</FONT></PRE>
<P><P>Adds the specified text to the tree control at the specified position. 
<P><B>Return Value:</B> <P>Returns the text component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to add the text. If the root node itself displays an item (a header component), this item is at index 0 and the first child begins at index 1. To add a child item at the end of the tree control, pass -1. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The newly-added child component is shown or hidden, according to the tree control's expanded state. By default, the item is hot-tracked. To add an item that is not hot-tracked, pass a <A HREF="UIText.htm">UIText</A> object instead of a <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>Note</B>  If the tree node has a header, adding an item at index 0 will insert the item as the new header and shift all other components by one index position. As a result, the previous header becomes the first child item. To simply replace the header without shifting its position, call the <A HREF="UIPanel.htm#com_0003001160021d00">setHeader</A> method (inherited through <A HREF="UIPanel.htm">UIPanel</A>). For an example of calling <B>setHeader</B>, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020400">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(Image i, String s);
</FONT></PRE>
<P><P>Adds the specified image and text to the end of the tree control. 
<P><B>Return Value:</B> <P>Returns the item component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The newly-added child component is shown or hidden, according to the tree control's expanded state. By default, the item is hot-tracked. To add an item that is not hot-tracked, pass a <A HREF="UIItem.htm">UIItem</A> object instead of an <B>Image</B> and <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020500">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(Image i, String s, int pos);
</FONT></PRE>
<P><P>Adds the specified image and text to the tree control at the specified position. 
<P><B>Return Value:</B> <P>Returns the item component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>i</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The image to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>s</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The text to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to add the text and image. If the root node itself displays an item (a header component), this item is at index 0 and the first child begins at index 1. To add a child item at the end of the tree control, pass -1. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>The newly-added child component is shown or hidden, according to the tree control's expanded state. By default, the item is hot-tracked. To add an item that is not hot-tracked, pass a <A HREF="UIItem.htm">UIItem</A> object instead of an <B>Image</B> and <B>String</B>. For more information about hot-tracking, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>Note</B>  If the tree node has a header, adding an item at index 0 will insert the item as the new header and shift all other components by one index position. As a result, the previous header becomes the first child item. To simply replace the header without shifting its position, call the <A HREF="UIPanel.htm#com_0003001160021d00">setHeader</A> method (inherited through <A HREF="UIPanel.htm">UIPanel</A>). For an example of calling <B>setHeader</B>, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020600">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp);
</FONT></PRE>
<P><P>Adds the specified component to the end of the tree control. 
<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, <A HREF="UIGraphic.htm">UIGraphic</A>, or <A HREF="UIItem.htm">UIItem</A> object for the component. The newly-added child component is shown or hidden, according to the tree control's expanded state. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020700">add</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent add(IUIComponent comp, int pos);
</FONT></PRE>
<P><P>Adds the specified component to the tree control at the specified position. 
<P><B>Return Value:</B> <P>Returns the component that was added. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be added. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>pos</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The zero-based index at which to add the component. If the root node itself displays an item (a header component), this item is at index 0 and the first child begins at index 1. To add a child item at the end of the tree control, pass -1. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>Typically, you'll pass a <A HREF="UIText.htm">UIText</A>, <A HREF="UIGraphic.htm">UIGraphic</A>, or <A HREF="UIItem.htm">UIItem</A> object for the component. The newly-added child component is shown or hidden, according to the tree control's expanded state. 
<P><B>Note</B>  If the tree node has a header, adding an item at index 0 will insert the item as the new header and shift all other components by one index position. As a result, the previous header becomes the first child item. To simply replace the header without shifting its position, call the <A HREF="UIPanel.htm#com_0003001160021d00">setHeader</A> method (inherited through <A HREF="UIPanel.htm">UIPanel</A>). For an example of calling <B>setHeader</B>, see the <A HREF="UITree.htm">UITree</A> overview. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020f00">remove</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020800">getAttachRect</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public Rectangle getAttachRect();
</FONT></PRE>
<P><P>Determines where the attaching line will be drawn from the tree node's parent to the tree node. 
<P><B>Return Value:</B> <P>Returns the node's bounding rectangle. 

<P><B>Remarks:</B> <P>This method implements <B>getAttachRect</B> in the <A HREF="IUITree.htm">IUITree</A> interface, and is called by the layout manager's <A HREF="UITreeLayout.htm">layoutContainer</A> method. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020900">getExpander</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public IUIComponent getExpander();
</FONT></PRE>
<P><P>Retrieves the tree control's expand button, which indicates whether the node is expanded or collapsed. 
<P><B>Return Value:</B> <P>Returns the component currently being used as the expand button. 

<P><B>Remarks:</B> <P>This method implements <B>getExpander</B> in the <A HREF="IUITree.htm">IUITree</A> interface. By default, a <A HREF="UITree.htm">UITree</A> control uses a <A HREF="UIExpandButton.htm">UIExpandButton</A> object for its expand button. The <A HREF="UITree.htm#com_0003001183021400">setExpander</A> method enables you to specify the component that will be used. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020a00">getRoleCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getRoleCode();
</FONT></PRE>
<P><P>Retrieves the <B>ROLE_SYSTEM</B> code that best describes the role of the tree control. 

<P><B>Return Value:</B> <P>Returns the <A HREF="IUIAccessible.htm#com_000300118b020031">ROLE_SYSTEM_OUTLINE</A> code. 

<P><B>Overrides:</B> <P><A HREF="UISelector.htm#com_000300116f021100">getRoleCode()</A> in <A HREF="UISelector.htm">UISelector</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020b00">getStateCode</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public int getStateCode();
</FONT></PRE>
<P><P>Retrieves the state of the tree control. 
<P><B>Return Value:</B> <P>Returns the combination of <B>STATE_SYSTEM</B> codes that best describe the state of the control. 

<P><B>Remarks:</B> <P>If the tree node is expanded, the returned code contains the <A HREF="IUIAccessible.htm#com_000300118b020056">STATE_SYSTEM_EXPANDED</A> flag. Otherwise, the returned code contains the <A HREF="IUIAccessible.htm#com_000300118b020054">STATE_SYSTEM_COLLAPSED</A> flag. 
<P><B>Overrides:</B> <P><A HREF="UISelector.htm#com_000300116f021700">getStateCode()</A> in <A HREF="UISelector.htm">UISelector</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020c00">hasChildren</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean hasChildren();
</FONT></PRE>
<P><P>Determines whether the tree control has child items. 
<P><B>Return Value:</B> <P>Returns true if the node has child items; otherwise, returns false. 

<P><B>Remarks:</B> <P>This method implements <B>hasChildren</B> in the <A HREF="IUITree.htm">IUITree</A> interface. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020d00">isExpanded</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean isExpanded();
</FONT></PRE>
<P><P>Determines whether the tree control is expanded. 
<P><B>Return Value:</B> <P>Returns true if the node is expanded; otherwise, returns false. 

<P><B>Remarks:</B> <P>This method implements <B>isExpanded</B> in the <A HREF="IUITree.htm">IUITree</A> interface. To set or clear the expanded state, call <A HREF="UITree.htm#com_0003001183021200">setExpanded</A>. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020e00">keyDown</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public boolean keyDown(Event e, int key);
</FONT></PRE>
<P><P>Determines whether the RIGHT ARROW key or the LEFT ARROW key is being pressed, and if so, expands or collapses the tree control accordingly. 
<P><B>Return Value:</B> <P>Returns true if event was handled; otherwise, returns false. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>e</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The event posted to the tree control. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>key</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The key that has been pressed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method is called when the tree control has focus and a key is pressed. The RIGHT ARROW key expands the node; the LEFT ARROW key collapses the node. 
<P><B>Overrides:</B> <P><A HREF="UISelector.htm#com_000300116f021900">keyDown(Event,int)</A> in <A HREF="UISelector.htm">UISelector</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183020f00">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(IUIComponent comp);
</FONT></PRE>
<P><P>Removes the specified component from the tree control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>comp</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The child component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For an example of calling <B>remove</B>, see <A HREF="UISelector.htm#com_000300116f022000">UISelector.remove</A>. To add a child component to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
<P><B>Overrides:</B> <P><A HREF="UISelector.htm#com_000300116f022100">remove(IUIComponent)</A> in <A HREF="UISelector.htm">UISelector</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021000">remove</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void remove(int index);
</FONT></PRE>
<P><P>Removes the component at the specified index from the tree control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>index</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The child component to be removed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>For an example of calling <B>remove</B>, see <A HREF="UISelector.htm#com_000300116f022000">UISelector.remove</A>. To add a child component to the tree control, call the <A HREF="UITree.htm#com_0003001183020200">add</A> method. 
<P><B>Overrides:</B> <P><A HREF="UISelector.htm#com_000300116f022000">remove(int)</A> in <A HREF="UISelector.htm">UISelector</A>.

</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021100">setChecked</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setChecked(boolean on);
</FONT></PRE>
<P><P>Sets or clears the checked state of the tree control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>on</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the checked state is set; otherwise, it is cleared. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method additionally sets or clears the checked state of the component that is displayed by the tree node. 
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021200">setExpanded</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setExpanded(boolean expanded);
</FONT></PRE>
<P><P>Expands or collapses the tree control to show or hide the node's children. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>expanded</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the node will be expanded; otherwise, the node will be collapsed. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setExpanded</B> in the <A HREF="IUITree.htm">IUITree</A> interface. The display of the node's expand button is updated to reflect the new state. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020d00">isExpanded</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021300">setExpanded</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setExpanded(boolean expanded, boolean notify);
</FONT></PRE>
<P><P>Expands or collapses the tree node to show or hide the node's children. 

<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>expanded</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the node will be expanded; otherwise, the node will be collapsed. 


</FONT></TD></TR><TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>notify</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">If true, the node will generate an action event and post it to the tree node's parent. 

</FONT></TD></TR></TABLE>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021400">setExpander</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setExpander(IUIComponent to);
</FONT></PRE>
<P><P>Sets the tree control's expand button to the specified component. The expand button indicates whether the node is expanded or collapsed. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>to</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The component to be used for the expand button. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>This method implements <B>setExpander</B> in the <A HREF="IUITree.htm">IUITree</A> interface. By default, a <A HREF="UITree.htm">UITree</A> control uses a <A HREF="UIExpandButton.htm">UIExpandButton</A> object for its expand button. 
<P><B>Note</B>  Call this method only after the control has been added to a parent container. 
<P><B>See Also:</B> <A HREF="UITree.htm#com_0003001183020900">getExpander</A>
</BLOCKQUOTE>
<H4 STYLE="color:#333366"><A NAME="com_0003001183021500">setLayout</A></H4><BLOCKQUOTE>
<PRE><FONT FACE="Courier" SIZE="2">public void setLayout(IUILayoutManager lm);
</FONT></PRE>
<P><P>Sets the layout manager for the tree control. 
<P><B>Return Value:</B> <P>No return value. 

<P><TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR VALIGN=TOP BGCOLOR="#DDDDDD">
<TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Parameter</B></FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><B>Description</B></FONT></TD></TR>
<TR VALIGN=TOP><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE=2><I>lm</I>
 </FONT></TD><TD><FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">The new layout manager to be used. 

</FONT></TD></TR></TABLE>
<P><B>Remarks:</B> <P>When a new <A HREF="UITree.htm">UITree</A> object is created with the default indent, it uses the layout manager that is identified by the <B>TREE_LAYOUT</B> index as defined in <B>UISystem</B>. Otherwise, its default layout manager is <A HREF="UITreeLayout.htm">UITreeLayout</A>. 
</BLOCKQUOTE>
<P>
</FONT>
</TD>
</TR>
</TABLE>
<CENTER>
<P><TABLE WIDTH="95%"><TR><TD HEIGHT=1 BGCOLOR="RED"></TD></TR></TABLE>
<TABLE WIDTH="100%"><TR>
<TD ALIGN="left"><A HREF="#top"><IMG SRC="art/upnrm.gif" WIDTH="51" HEIGHT="38"  BORDER=0 ALT="upnrm.gif"></A></TD>
<TD ALIGN="right">
<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="1"><A HREF="cpyright.htm">&#169; 1998 Microsoft Corporation. All rights reserved. Terms of use.</A></FONT></TD></TR></TABLE>
</CENTER>
</BODY></HTML>
