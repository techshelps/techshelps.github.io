<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Certificate Store Concepts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certificate_store_concepts"></a>Certificate Store Concepts</h1>
<p>
Certificates, certificate revocation lists (CRLs), and certificate trust lists (CTLs) are kept and maintained in a certificate store, and can be retrieved for use in authentication processes. Throughout this section, all references to certificates, unless otherwise noted, should be taken to include certificates, CRLs, and CTLs. A typical certificate store is a linked list of certificates as shown in the following diagram.</p>
<p>
<img src="images/certstore1.gif" border=0></p>
<p>
The previous illustration shows:
<ul>
<li>
Each certificate store has a pointer to the first certificate block in that store.</li>
<li>
A certificate block includes a pointer to that certificate's data and a 'next' pointer to the next certificate block in the store.</li>
<li>
The 'next' pointer in the last certificate block is set to NULL.</li>
<li>
The data block of a certificate contains the read only certificate context and any extended properties of the certificate.</li>
<li>
The data block of each certificate contains a reference count that keeps track of the number of pointers to the certificate that exist.</li>
</ul>
<p>
The certificates in a certificate store are normally kept in some kind of permanent storage such as a disk file or the system registry. Certificate stores can also be created and opened strictly in memory. This might be done to create temporary certificate storage while working with a group of certificates that does not need to be put into permanent storage. Additional store locations have been added to allow stores to be kept and searched in various parts of a local computer's registry or, with proper permissions set, in the registry on a remote computer.</p>
<p>
Each user has a MY certificate store where that user's personal certificates and those certificates that the user most frequently uses may be kept. The MY store is currently persisted to a registry sub-key.</p>
<p>
The use of certificates for authentication depends on having certificates that have been issued by some trusted certificate issuer. Certificates for the most trusted issuers that can be used to authenticate newly received certificates are normally kept in the ROOT store which is predefined and currently persisted to a registry sub-key. In CryptoAPI, the root store's contents are protected and special user interface (UI) controls the certificates that are added to the ROOT store. In enterprise network situations, the domain controller computer might copy most trusted issuer certificates to the ROOT stores of all its client computers.</p>
<p>
Infrequently used certificates that should not be stored in the ROOT store may be stored in the certification authority (CA) store.</p>
<p>
The certificate store is central to all certificate functionality. The certificates are managed in the store by using functions with a "Cert" prefix. For example code using some of these functions, see <a href="mancerts_1tkj.htm">Example Code for Fundamental Certificate Store Operations</a>.</p>
<p>&nbsp;</p></body>
</HTML>
