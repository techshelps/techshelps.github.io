<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertFindExtension</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certfindextension"></a>CertFindExtension</h1>
<p>
The <b>CertFindExtension</b> function finds the first extension in the <a href="structs_46y6.htm"><b>CERT_EXTENSION</b></a> array, as identified by its Object Identifier. Processing a decoded certificate is one way this function gets used. From the decoded certificate, a <a href="structs_3k33.htm"><b>CERT_INFO</b></a> structure is derived. From that structure the <i>rgExtension </i>array is retrieved and passed to this function in <i>rgExtensions</i>[]. Then this function can determine whether a particular extension is in the array, and if so, return a pointer to it.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
PCERT_EXTENSION WINAPI CertFindExtension(
  LPCSTR</b><i> pszObjId</i><b>,                </b>// in
<b>  DWORD</b><i> cExtensions</i><b>,              </b>// in
<b>  CERT_EXTENSION </b><i>rgExtensions[ ]  </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pszObjId</i></dt>
<dd>
A pointer to the Object Identifier to use in the search.</dd>
<dt>
<i>cExtensions</i></dt>
<dd>
The number of extensions in <i>rgExtensions</i>[]<i>.</i></dd>
<dt>
<i>rgExtensions</i>[]</dt>
<dd>
The array of extensions.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a pointer to the extension, if one is found. Otherwise, NULL is returned.</p>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CertFindExtension.
// Finds the first extension in the CERT_EXTENSION
// array, as identified by its Object Identifier.

// Set up the variables.
LPCSTR pszObjId = szOID_RSA_RC4; // Object identifier
DWORD cExtensions = 128;         // # of extensions
CERT_EXTENSION rExtensions[128]; // Array of extensions
CERT_EXTENSION * pResult;        // Pointer to the returned extension

pResult = CertFindExtension(
            pszObjId,       // in - Pointer to object identifier
            cExtensions,    // in - # of extensions in the array
            rExtensions);   // in - The array of attributes

if (!&amp;pResult) {
  cout&lt;&lt; "no extension found "&lt;&lt; endl;
}
else {
  cout&lt;&lt; "extension found at "&lt;&lt; pResult&lt;&lt; endl;
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certhelp_6o6d.htm"><b>CertFindAttribute</b></a>,<b> <a href="certhelp_2s4y.htm">CertFindRDNAttr</a> </b></p>
<p>&nbsp;</p></body>
</HTML>
