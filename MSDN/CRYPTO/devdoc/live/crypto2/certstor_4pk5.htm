<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertDeleteCertificateFromStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certdeletecertificatefromstore"></a>CertDeleteCertificateFromStore</h1>
<p>
The <b>CertDeleteCertificateFromStore</b> function deletes the specified certificate context from the certificate store.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertDeleteCertificateFromStore(
  PCCERT_CONTEXT</b><i> pCertContext         </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pCertContext</i></dt>
<dd>
Pointer to the certificate context.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>E_ACCESSDENIED</td>
<td width=60%>Indicates the store was opened read only and a delete operation is not allowed.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
All subsequent gets or finds for the certificate will fail. However, memory allocated for the certificate is not freed until all duplicated contexts have also been freed.</p>
<p>
The <i>pCertContext</i> is always freed by this function via <a href="certstor_1tv8.htm"><b>CertFreeCertificateContext</b></a>, even for an error.</p>
<h4>Example</h4>
<pre><code>// handle_error() is a function defined in a separate file.
HANDLE          hStoreHandle;
PCCERT_CONTEXT  pCertContext;   

// Open a certificate store and get the PCCERT_CONTEXT of a certificate context.
if(hStoreHandle = CertOpenStore(
CERT_STORE_PROV_SYSTEM,0,NULL,CERT_SYSTEM_STORE_CURRENT_USER,
L"MY"))
printf("The MY store is open. Continue.\n");
else
handle_error("The My store did not open.");
// Find the first certificate in the system store. 
if(pCertContext= CertEnumCertificatesInStore(
hStoreHandle,NULL))
printf("A certificate has been retrieved. Continue.\n");
else     
handle_error("No certificate retrieved. The store may be empty.");
// Delete the certificate.
if(CertDeleteCertificateFromStore(
pCertContext   // The certificate context to be deleted.
   ))
printf("The certificate has been deleted. Continue. \n");
else
// The delete failed. Exit to the error handler.
handle_error("The deletion of the certificate failed.");
// To show that the certificate has been deleted, 
// pCertContext is re-added to the certificate store.
if(CertAddCertificateContextToStore(
hStoreHandle,pCertContext,CERT_STORE_ADD_NEW,NULL))
// The context was added showing it was not there
printf("Context added. The delete functioned correctly. \n");
else
    //
// The context could not be added. The cert had not been 
// deleted; therefore, the cert to be added was a duplicate.
    //  
printf("The cert could not be added. It is a duplicate. \n");
printf("The program ran to completion successfully. \n");
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_2p9h.htm"><b>CertDeleteCRLFromStore</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
