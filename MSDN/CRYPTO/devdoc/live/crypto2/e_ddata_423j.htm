<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Abstract Syntax Notation One (ASN.1)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_introduction_to_abstract_syntax_notation_one_asn.1_"></a>Introduction to Abstract Syntax Notation One (ASN.1)</h1>
<p>
The CryptoAPI does not require that the application programmer use ASN.1 notation (language) to encode and decode data. However, it is recommended that a programmer become generally familiar with ASN.1 notation because the C structures used by the CryptoAPI to encode and decode data mirror the appropriate ASN.1 data types.</p>
<p>
A very brief overview of ASN.1 is presented in this section. The article <i>A Layman's Guide to a Subset of ASN.1, BER, and DER</i>, by RSA Data Security, Inc., is recommended as additional reading on this subject, and can be found at http://www.rsa.com/rsalabs/pubs/PKCS.</p>
<p>
ASN.1 is a flexible, abstraction notation that allows a variety of data types to be defined, from simple types such as integers and bit strings, to structured types such as collections of one or more other types.</p>
<p>
The DER is a set of rules that define how the ASN.1 abstractions get serialized into streams of ones and zeros for transmission over the line. The DER describes how to represent or encode values of each ASN.1 data type as a string of eight-bit bytes (also referred to as octets).</p>
<p>
In ASN.1, a type is a set of values. For some types, there are a finite number of values, and for other types there are an infinite number. A value of a given ASN.1 type is an element of the type's set. ASN.1 has four kinds of types: 
<ul>
<li>
<i>Simple types</i>, which are base types and have no components.</li>
<li>
<i>Structured types</i>, which have components</li>
<li>
<i>Tagged types</i>, which are derived from other types.</li>
<li>
<i>Other types</i>, which include the <code>CHOICE</code> type and the <code>ANY</code> type.</li>
</ul>
<p>
Types and values can be given names with the ASN.1 assignment operator (<code>::=</code>), and those names can be used in defining other types and values. Only the first two types will be reviewed in this document. Information on the other types can be found in <i>A Layman's Guide to a Subset of ASN.1, BER, and DER</i>, by RSA Data Security, Inc.</p>
<h4>ASN.1 Simple Types</h4>
<p>
Simple types are the base types, and do not have components. ASN.1 defines several of these simple types. The types that are relevant to the Public Key Cryptography Standards (PKCS) are the following:
<ul>
<li>
BIT STRING - an arbitrary string of bits (ones and zeroes).</li>
<li>
IA5String - an arbitrary string of IA5 (ASCII) characters.</li>
<li>
INTEGER - an arbitrary integer.</li>
<li>
NULL - a null value.</li>
<li>
OBJECT IDENTIFIER - an object identifier, which is a sequence of integer components that identify an object such as an algorithm or attribute type.</li>
<li>
OCTET STRING - an arbitrary string of octets (eight-bit values).</li>
<li>
PrintableString - an arbitrary string of printable characters.</li>
<li>
T61String - an arbitrary string of T.61 (eight-bit) characters.</li>
<li>
UTCTime - a "coordinated universal time" or Greenwich Mean Time (GMT) value.</li>
</ul>
<h4>ASN.1 Structured Types</h4>
<p>
Structured types are those consisting of components. ASN.1 defines four structured types, all of which are relevant to PKCS:
<ul>
<li>
SEQUENCE - an ordered collection of one or more types.</li>
<li>
SEQUENCE OF - an ordered collection of zero or more occurrences of a given type.</li>
<li>
SET - an unordered collection of one or more types.</li>
<li>
SET OF - an unordered collection of zero or more occurrences of a given type.</li>
</ul>
<p>
The structured types can have optional components, possibly with default values.</p>
<h4>Example ASN.1 Notation</h4>
<p>
An example abstraction that uses ASN.1 notation to define certificate request information, is as follows:</p>
<pre><code>CertificationRequestInfo:
CertificationRequestInfo ::= SEQUENCE {
  version Version,
  subject Name,
  subjectPublicKeyInfo SubjectPublicKeyInfo,
  attributes [0] IMPLICIT Attributes }
Version ::= INTEGER
Attributes ::= SET OF Attribute
 </code></pre>
<p>
In the preceding example, a CertificationRequestInfo object is created and assigned to be a SEQUENCE. This particular sequence includes the following set of values:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Identifier</th>
<th align=left width=52%>Type Reference</th>
</tr>
<tr valign=top>
<td width=48%>version</td>
<td width=52%>Version</td>
</tr>
<tr valign=top>
<td width=48%>subject</td>
<td width=52%>Name</td>
</tr>
<tr valign=top>
<td width=48%>subjectPublicKeyInfo</td>
<td width=52%>SubjectPublicKeyInfo</td>
</tr>
<tr valign=top>
<td width=48%>attributes [0]</td>
<td width=52%>IMPLICIT Attributes</td>
</tr>
</table><br>
<p>
Notice that the Version type is assigned as an integer, and the Attributes type is assigned to be a SET OF Attribute types.</p>
<p>
Additional information on certification request information can be found in the the RSA Laboratories Technical Note, <i>PKCS #10: Certification Request Syntax Standard</i>, by RSA Data Security, Inc., which can be found at http://www.rsa.com.</p>
<p>
The next section describes how the CryptoAPI deals with the ASN.1 CertificationRequestInfo abstraction.</p>
<p>&nbsp;</p></body>
</HTML>
