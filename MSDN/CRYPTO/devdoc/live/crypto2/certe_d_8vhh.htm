<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Decoding the CERT_INFO Structure</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_decoding_the_cert_info_structure"></a>Decoding the CERT_INFO Structure</h1>
<p>
The <a href="structs_3k33.htm"><b>CERT_INFO</b></a> structure is the heart of the certificate. It contains, either in direct form or in encoded form, all the basic information in the certificate. The following illustration shows the <b>CERT_INFO</b> structure, with all the encoded members shown as shaded.</p>
<p>
<img src="images/certinf2.gif" border=0></p>
<p>
It should be noted that the <b>IssuerUniqueID</b> and <b>SubjectUniqueID</b> structure members are a part of the X.509 version 2 certificate implementation, and are seldom used anymore. Their functionality has been replaced by the version 3 "Extensions" functionality.</p>
<p>
If the information contained in the encoded (shaded) members <b>Issuer</b> and <b>Subject</b> is needed, those members must be decoded. To decode one of these members, the <a href="wincert_0n90.htm"><b>CryptDecodeObject</b></a> function must be used. The process of decoding one of these members is depicted in the following illustration.</p>
<p>
<img src="images/infoflow.gif" border=0></p>
<p>
In the illustrated case, the <b>CryptDecodeObject</b> function outputs a <a href="structs_9jlb.htm"><b>CERT_NAME_INFO</b></a> structure, an array of <a href="structs_5oby.htm"><b>CERT_RDN</b></a> structures, a corresponding array of <a href="structs_5che.htm"><b>CERT_RDN_ATTR</b></a> structures, and a string containing the name. It is important to note that what is contained in the string is determined by the other members of the <b>CERT_RDN_ATTR</b> structure. For example, if the <b>pszObjId</b> member is set to "2.5.4.3", this equates to a common name. If it were set to "2.5.4.10" then the string would contain an organization name. For a list of these <b>ObjIds</b>, see <a href="structs_5che.htm"><b>CERT_RDN_ATTR</b></a>. </p>
<p>
The <b>dwValueType</b> member contains information pertaining to the type of string—for example, if it were set to CERT_RDN_PRINTABLE_STRING the value member would contain a byte-width, zero-terminated character string; if it were set to CERT_RDN_UNICODE_STRING, it would contain a double-width (word-sized) character string. </p>
<p>
The encoded object (data member) is always provided as the input to the <a href="wincert_0n90.htm"><b>CryptDecodeObject</b></a> function, and the output is a C structure that may or may not have encoded members, depending on how far into the process you are.</p>
<p>
There is one other member that requires some decoding, and that is the <b>Extension</b> member. Although it is not encoded at the <a href="structs_3k33.htm"><b>CERT_INFO</b></a> level, it does contain some encoded information. To decode this information, proceed as shown in the following illustration.</p>
<p>
<img src="images/xtension.gif" border=0></p>
<p>
In the <b>CERT_INFO</b> structure, data member <b>rgExtension</b> is a pointer to an array of <a href="structs_46y6.htm"><b>CERT_EXTENSION</b></a> structures. Each <b>CERT_EXTENSION</b> structure has a <b>Value</b> data member that is in encoded form and needs to be decoded. The <b>Value</b> data member is passed to the <a href="wincert_0n90.htm"><b>CryptDecodeObject</b></a> function, and then the output from the function depends on the value of the <b>pszObjId</b> data member. Notice that in the illustration, two different structures are produced, one of type <a href="structs_7hm7.htm"><b>CERT_BASIC_CONSTRAINTS_INFO</b></a> and one of type <a href="structs_0bqn.htm"><b>CERT_AUTHORITY_KEY_ID_INFO</b></a>, depending on the value of <b>pszObjId</b>.</p>
<p>&nbsp;</p></body>
</HTML>
