<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptFlushTimeValidObject</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptflushtimevalidobject"></a>CryptFlushTimeValidObject</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CryptFlushTimeValidObject</b> function removes the retrieved object from the cache.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptFlushTimeValidObject(
  LPCSTR</b><i> pszFlushTimeValidOid,     </i>// in
<b>  LPVOID</b><i> pvPara,                  </i> // in
<b>  PCCERT_CONTEXT</b><i> pIssuer,</i>          // in
<b>  DWORD</b> <i>dwFlags,                   </i>// in
<b>  LPVOID</b><i> pvReserved                </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pszFlushTimeValidOid</i></dt>
<dd>
Pointer to the object identifier defining the <i>pvPara</i> context type. If the HIWORD of the <i>pszFlushTimeValidOid </i>parameter is zero, the LOWORD specifies the integer identifier for the type of the given structure. Otherwise, this parameter is a long pointer to a null-terminated string.
<p>
OIDs extend the functionality of the CryptoAPI. See <a href="oid_262f.htm"><b>OID Overview</b></a> for additional information. 

<p>
For more details, see the table in <a href="wincert_4bub.htm">CryptEncodeObject/CryptDecodeObject Functions</a> that relates object identifier strings and predefined constants to their corresponding data structures.

<p>
The following table lists currently supported OIDs:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>OID</th>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td width=47%>TIME_VALID_OID_FLUSH_CTL</td>
<td width=53%>Flushes the time valid CTL from the cache.</td>
</tr>
<tr valign=top>
<td width=47%>TIME_VALID_OID_FLUSH_CRL</td>
<td width=53%>Flushes the time valid CRL from the cache.</td>
</tr>
<tr valign=top>
<td width=47%>TIME_VALID_OID_FLUSH_CRL_<br>
FROM_CERT</td>
<td width=53%>Flushes the time valid CRL from the certificate.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pvPara</i></dt>
<dd>
If the <i>pvPara </i>is not correct for the <i>pszFlushTimeValidOid</i>, program behavior is unspecified.
<dl>
<dt>
If the <i>pszFlushTimeValidOid </i>is TIME_VALID_OID_FLUSH_CTL;</dt>
<dd>
<i>pvPara</i> is a PCCTL_CONTEXT. The pointer is to a CTL to flush.</dd>
<dt>
If the <i>pszFlushTimeValidOid </i>is TIME_VALID_OID_FLUSH_CRL;</dt>
<dd>
<i>pvPara</i> is a PCCRL_CONTEXT. The pointer is to a CRL to flush.</dd>
<dt>
If the <i>pszFlushTimeValidOid </i>is TIME_VALID_OID_FLUSH_CRL_FROM_CERT;</dt>
<dd>
<i>pvPara</i> is a PCCERT_CONTEXT. The pointer is to a certification to flush.</dd>
</dl>
</dd>
<dt>
<i>pIssuer</i></dt>
<dd>
Pointer to an issuer context.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values. This parameter is reserved for future use and should always be set to zero.</dd>
<dt>
<i>pvReserved</i></dt>
<dd>
This parameter is reserved for future use and must be NULL.</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is TRUE. If it does not succeed, the return value is FALSE. To retrieve extended error information, use the <b>GetLastError</b> function.</p>
<h4>Remarks</h4>
<p>
<b>TimeValidDllFlushObject</b> has the same signature as <b>CryptFlushTimeValidObject</b>. The developer can implement a <b>TimeValidDllFlushObject</b> with the signature of <b>CryptFlushTimeValidObject </b>and install it for the OID.</p>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CryptFlushTimeValidObject().
// Assume that pointers to a CTL context (pvPara) and the
// certificate issuer (pIssuer) are already known.

// Set up the variables.
LPCSTR pszFlushTimeValidOid; //
PCCTL_CONTEXT pvPara;        // Pointer to a PCCTL_CONTEXT to
                             //   have the ThisUpdate and NextUpdate
                             //   times reset- a PCCTL_CONTEXT because
                             //   the OID is a CTL.
PCCERT_CONTEXT pIssuer;      // Pointer to issuer of the certificate
DWORD dwFlags;               // Flag values- future use- set to 0
LPVOID pvReserved;           // Reserved for future use- set to NULL
BOOL fResult;                // Return value- True if function
                             //   successful
                             //   False if function fails

// call to CryptFlushTimeValidObject to get the URL object
fResult= CryptFlushTimeValidObject(
           TIME_VALID_OID_FLUSH_CTL, 
                          // in- pszFlushTimeValidOid
           (LPVOID)pvPara,// in- Initialized elsewhere
           pIssuer,       // in- Initialized elsewhere
           0,             // in- dwFlags- set to 0
           NULL);         // in- Reserved- set to NULL

if (fResult){             // returned value is TRUE
                          //   CryptFlushTimeValidObject is successful
  cout&lt;&lt; "Call to CryptFlushTimeValidObject successful"&lt;&lt; endl;
 }
else {                    // returned value is FALSE
  cout&lt;&lt; "Call to CryptFlushTimeValidObject failed"&lt;&lt; endl
      &lt;&lt; "error code = "&lt;&lt; GetLastError&lt;&lt; endl;
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use cryptnet.lib.</p>
<h4>See Also</h4>
<p>
<a href="time_valid_object_retrieval_79ys.htm"><b>CryptGetTimeValidObject</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
