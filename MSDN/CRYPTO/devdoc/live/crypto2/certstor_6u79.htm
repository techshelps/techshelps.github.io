<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertSaveStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certsavestore"></a>CertSaveStore</h1>
<p>
The <b>CertSaveStore</b> function saves the certificate store.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertSaveStore(
  HCERTSTORE</b><i> hCertStore</i><b>,           </b>// in
<b>  DWORD</b><i> dwMsgAndCertEncodingType</i><b>,  </b>// in
<b>  DWORD</b><i> dwSaveAs</i><b>,                  </b>// in
<b>  DWORD</b><i> dwSaveTo</i><b>,                  </b>// in
<b>  void </b><i>*pvSaveToPara</i><b>,              </b>// in/out
<b>  DWORD</b><i> dwFlags                    </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store that is to be saved.</dd>
<dt>
<i>dwMsgAndCertEncodingType</i></dt>
<dd>
The <i>dwMsgAndCertEncodingType </i>specifies the certificate and message encoding types when <i>dwSaveAs </i>is<i> </i>CERT_STORE_SAVE_AS_PKCS7. Otherwise, the <i>dwMsgAndCertEncodingType </i>parameter is not used.

<p>
<b>Note</b>&nbsp;&nbsp;Both a certificate and message encoding type are required and are specified by combining them with a bitwise OR operation, as shown in the following example:


<pre><code>X509_ASN_ENCODING | PKCS_7_ASN_ENCODING
 </code></pre>

<p>
Currently defined encoding types are shown in the following table.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Encoding type</th>
<th align=left width=51%>Value</th>
</tr>
<tr valign=top>
<td width=49%>X509_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
<tr valign=top>
<td width=49%>PKCS_7_ASN_ENCODING</td>
<td width=51%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwSaveAs</i></dt>
<dd>
Specifies if the store can be saved as a serialized store (CERT_STORE_SAVE_AS_STORE) containing properties in addition to encoded certificates, CRL, and CTLs if the store can be saved as a PKCS #7 signed message (CERT_STORE_SAVE_AS_PKCS7) that does not include the properties.
<p>
Note, the CERT_KEY_CONTEXT_PROP_ID property (and its CERT_KEY_PROV_HANDLE_PROP_ID and CERT_KEY_SPEC_PROP_ID) is not saved into a serialized store.

<p>
The <i>dwMsgAndCertEncodingType </i>specifies the message encoding type when <i>dwSaveAs </i>is<i> </i>CERT_STORE_SAVE_AS_PKCS7.
</dd>
<dt>
<i>dwSaveTo</i></dt>
<dd>
The <i>dwSaveTo</i> and <i>pvSaveToPara </i>parameters specify where to save the store as follows:
<dl>
<dt>
For <i>dwSaveTo equal to </i>CERT_STORE_SAVE_TO_FILE:</dt>
<dd>
Saves to the specified file. The file's handle is passed in pvSaveToPara. Given, HANDLE hFile; <i>pvSaveToPara</i> = (void *) hFile.</dd>
<dt>
After a successful save, the file pointer is positioned after the last write.</dt>
<dt>
For <i>dwSaveTo </i>equal to<i> </i>CERT_STORE_SAVE_TO_MEMORY:</dt>
<dd>
Saves to the specified memory blob. The pointer to the memory blob is passed in <i>pvSaveToPara</i>. Given, CRYPT_DATA_BLOB <i>SaveBlob</i>; <i>pvSaveToPara</i> = (void *) &amp;<i>SaveBlob</i>.</dd>
</dl>

<p>
Upon entry, <i>SaveBlob</i>'s <i>pbData</i> and <i>cbData</i> need to be initialized.

<p>
Upon return, <i>cbData</i> is updated with the actual length.

<p>
For a length only calculation, <i>pbData</i> should be set to NULL. If <i>pbData</i> is non-NULL and <i>cbData</i> is not large enough, FALSE is returned with a last error of ERROR_MORE_DATA.

<p>
For <i>dwSaveTo </i>equal to CERT_STORE_SAVE_TO_FILENAME_A and

<p>
for <i>dwSaveTo </i>equal to<i> </i>CERT_STORE_SAVE_TO_FILENAME_W and

<p>
for <i>dwSaveTo </i>equal to<i> </i>CERT_STORE_SAVE_TO_FILENAME:

<p class=indent1>
Opens the file, saves to it, and closes it.</p>

<p class=indent1>
The filename is passed in <i>pvSaveToPara</i>.</p>

<p>
The filename is UNICODE for the "_W" option and ASCII for the "_A"option. For "_W": given, LPCWSTR <i>pwszFilename</i>; <i>pvSaveToPara</i> = (void *) <i>pwszFilename</i>;

<p>
For "_A": given, LPCSTR <i>pszFilename</i>; <i>pvSaveToPara</i> = (void *) <i>pszFilename</i>;

<p>
Note, the default (without "_A" or "_W") is UNICODE.
</dd>
<dt>
<i>pvSaveToPara</i></dt>
<dd>
Points to the "save to" data. See <i>dwSaveTo </i>above for usage details.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
This parameter is not currently used and should be set to zero.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. Note that CreateFile or WriteFile errors may be propagated to this function. This function has the following error codes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>CRYPT_E_FILE_ERROR </td>
<td width=60%>An error occurred while writing to the file.</td>
</tr>
</table><br>
<h4>Example</h4>
<p>
See <a href="mancerts_1tkj.htm">Example Code for Fundamental Certificate Store Operations</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_12sl.htm"><b>CertOpenStore</b></a>, <a href="certstor_9vqd.htm"><b>CertCloseStore</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
