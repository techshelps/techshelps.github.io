<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exporting RSA/Schannel Keys</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_crypto2_exporting_rsa_schannel_keys"></a>Exporting RSA/Schannel Keys</h3>
<p>
Master keys can be exported into <b>SIMPLEBLOB</b>s. This should be implemented the same way as the export of normal bulk encryption keys, such as RC4 or DES. The <i>aiKeyAlg</i> field of the <a href="structs_7aya.htm"><b>BLOBHEADER</b></a> structure should be set to the algorithm identifier of the master key (CALG_PCT1_MASTER, CALG_SSL2_MASTER, CALG_SSL3_MASTER, or CALG_TLS1_MASTER).</p>
<p>
If the <a href="cryptcsp/csp06b_5tix.htm"><b>CPExportKey</b></a> function is being used to export an SSL2 master key and the CRYPT_SSL2_SLUMMING flag is set, then the first 8 bytes of the encryption block padding should be set to 0x03 rather than to random data. This helps prevent version rollback attacks, and is discussed in the SSL3 specification.</p>
<p>
If the <b>CRYPT_DESTROYKEY</b> flag is specified with the <b>CPExportKey</b> function, then the CSP should destroy the key (or the key handle) after exporting the key. This flag is intended for use only with opaque blobs. See the <a href="cryptcsp/rsa_sovr_3q05.htm"><b>The Opaque Blob Type</b></a> section.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
