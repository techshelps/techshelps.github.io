<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptEnumOIDFunction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptenumoidfunction"></a>CryptEnumOIDFunction</h1>
<p>
The <b>CryptEnumOIDFunction</b> function enumerates the OID functions identified by their encoding type, function name, and OID. <b>pfnEnumOIDFunc</b> is called for each OID function matching the input parameters.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptEnumOIDFunction(
  DWORD</b><i> dwEncodingType</i><b>,                   </b>// in
<b>  LPCSTR</b><i> pszFuncName</i><b>,                     </b>// in, optional
<b>  LPCSTR</b><i> pszOID</i><b>,                          </b>// in, optional
<b>  DWORD</b><i> dwFlags</i><b>,                          </b>// in
<b>  void </b><i>*pvArg</i><b>,                            </b>// in
<b>  PFN_CRYPT_ENUM_OID_FUNC</b><i> pfnEnumOIDFunc  </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwEncodingType</i></dt>
<dd>
Type of encoding specified. Setting this parameter to CRYPT_MATCH_ANY_ENCODING_TYPE matches any encoding type. Note that if CRYPT_MATCH_ANY_ENCODING_TYPE is not specified, then either a certificate or message encoding type is required. If the low-order word containing the certificate encoding type is nonzero, then it is used. Otherwise, the high-order word containing the message encoding type is used. If both are specified, the certificate encoding type in the low-order word is used.
<p>
Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Encoding type</th>
<th align=left width=36%>Value</th>
</tr>
<tr valign=top>
<td width=64%>None</td>
<td width=36%>0x00000000</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>X509_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>PKCS_7_ASN_ENCODING</td>
<td width=36%>0x00010000</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_MATCH_ANY_ENCODING_TYPE </td>
<td width=36%>0xFFFFFFFF</td>
</tr>
</table><br>

</dd>
<dt>
<i>pszFuncName</i></dt>
<dd>
Name of the function for which a case insensitive match search is performed. Setting this parameter to NULL results in a match being found for any function name.</dd>
<dt>
<i>pszOID</i></dt>
<dd>
If the high-order word of <i>pszOID</i> is non-zero, <i>pszOID</i> specifies the object identifier for which a case insensitive match search is performed. If the high-order word of <i>pszOID</i> is zero, <i>pszOID</i> is used to match a numeric object identifier. Setting this parameter to NULL matches any object identifier. Setting this parameter to CRYPT_DEFAULT_OID restricts the enumeration to only the DEFAULT functions.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values. This parameter is reserved for future use and should be set to zero in the interim.</dd>
<dt>
<i>pvArg</i></dt>
<dd>
Pointer to arguments that are passed through to the callback function. </dd>
<dt>
<i>pfnEnumOIDFunc</i></dt>
<dd>
Callback function that is executed for each OID function matching the input parameters. See "Remarks" for details on the callback typedef.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures.</p>
<h4>Remarks</h4>
<p>
The following typedef structure applies to <i>pfnEnumOIDFunc.</i> </p>
<pre><code>typedef BOOL (WINAPI *PFN_CRYPT_ENUM_OID_FUNC)(
    IN DWORD dwEncodingType,
    IN LPCSTR pszFuncName,
    IN LPCSTR pszOID,
    IN DWORD cValue,
    IN const DWORD rgdwValueType[],
    IN LPCWSTR const rgpwszValueName[],
    IN const BYTE * const rgpbValueData[],
    IN const DWORD rgcbValueData[],
    IN void *pvArg
 ); 
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwEncodingType</b></dt>
<dd>
See the above description for <i>dwEncodingType</i>.</dd>
<dt>
<b>pszFuncName</b></dt>
<dd>
Name of the OID function.</dd>
<dt>
<b>pszOID</b></dt>
<dd>
<i>pszOID</i> is a pointer to either an OID string, such as "2.5.29.1", an ASCII string, such as "file", or a numeric string, such as #2000.</dd>
<dt>
<b>cValue</b></dt>
<dd>
Count of elements in the array of value types.</dd>
<dt>
<b>rgdwValueType[]</b></dt>
<dd>
Array of value types. Each entry in the array will be one of the value types listed for <a href="oidsupp_2ecl.htm"><b>CryptGetOIDFunctionValue</b></a><b> </b>under <i>pdwValueType</i>. </dd>
<dt>
<b>rgpwszValueName[]</b></dt>
<dd>
Array of null-terminated strings containing the name of the value. </dd>
<dt>
<b>rgpbValueData[]</b></dt>
<dd>
Array that contains the values corresponding to the names in the <b>rgpwszValueName </b>array<b> </b>elements.</dd>
<dt>
<b>rgcbValueData[]</b></dt>
<dd>
Array that specifies the size, in bytes, of the corresponding elements in the <b>rgpbValueData </b>array.</dd>
<dt>
<b>pvArg</b></dt>
<dd>
Arguments that are passed through to the callback function.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
