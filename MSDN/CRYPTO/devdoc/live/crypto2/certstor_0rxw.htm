<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertDuplicateCertificateContext</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certduplicatecertificatecontext"></a>CertDuplicateCertificateContext</h1>
<p>
The <b>CertDuplicateCertificateContext</b> function duplicates a certificate context by incrementing the reference count. The reference count is used to keep track of the lifetime of the context.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
PCCERT_CONTEXT WINAPI CertDuplicateCertificateContext(
  PCCERT_CONTEXT</b><i> pCertContext          </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pCertContext</i></dt>
<dd>
Pointer to the certificate context for which the reference count is being incremented.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Currently, a copy is not made of the context, and the returned context is the same as the context that was input.</p>
<h4>Example</h4>
<pre><code>// handle_error() is a function defined in a separate file.
HANDLE          hStoreHandle;
PCCERT_CONTEXT  pCertContext;  
PCCERT_CONTEXT  pDupCertContext;

// Open a certificate store. For details, see CertOpenStore.
if(hStoreHandle = CertOpenStore(
CERT_STORE_PROV_SYSTEM,0,NULL,CERT_SYSTEM_STORE_CURRENT_USER,
L"MY"))
printf("The MY store is open. Continue. \n");
else
handle_error("The store did not open.");
// Get the first certificate in the system store.
if(pCertContext= CertEnumCertificatesInStore(
hStoreHandle,NULL)))
printf("A certificate has been retrieved. Continue. \n");
else
handle_error("Certificate not retrieved. The store may be empty.");
// Close the certificate store. For details, see CertCloseStore.
if(CertCloseStore(hStoreHandle,CERT_CLOSE_STORE_CHECK_FLAG))
// If the function returns TRUE, no certificates remained open.
printf("The store was closed and no certs are still open.\n");
else
// The function returned FALSE. The store is closed, but 
// certificates remain open.
printf("Certificates remain open.\n");     
// Create a duplicate of the certificate
if(pDupCertContext = CertDuplicateCertificateContext(
pCertContext         //   The certificate to be duplicated.
   ))
printf("A duplicate was created. Continue. \n");
else
handle_error("Duplication of the certificate failed.");
// Use the certificate contexts as necessary.
//   ....
// Free the duplicate certificate.
if(CertFreeCertificateContext(pDupCertContext))
printf("CertDuplicateCertificateContext succeeded. Continue.\n");
else
handle_error("The duplicate cert could not be freed.");
// Free the original certificate.
if(!(CertFreeCertificateContext(pCertContext)))
handle_error("The original certificate was not freed.");
if(!(CertCloseStore(hStoreHandle,0)))
handle_error("The certificate store was not closed.");
printf("The program terminated normally.\n"); 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_1hf8.htm"><b>CertDuplicateCRLContext</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
