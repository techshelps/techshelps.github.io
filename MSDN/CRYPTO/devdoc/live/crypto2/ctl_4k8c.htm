<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating, Signing, and Storing a CTL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_creating_signing_and_storing_a_ctl"></a>Creating, Signing, and Storing a CTL</h1>
<p>
The following procedures describe how to create a signed CTL and save it to a certificate store.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To create and sign a CTL</h5>
<ol>
<li>
Create an array of items to be stored in the CTL. In the case of trusted certificates, this must be the SHA1 or MD5 hashes of the trusted certificates.</li>
<li>
Initialize a <a href="structs_94kv.htm"><b>CTL_INFO</b></a> structure that includes the array of items just created.</li>
<li>
Initialize a <a href="structs_2pyn.htm"><b>CMSG_SIGNED_ENCODE_INFO</b></a> structure.</li>
<li>
Call <a href="llmsg_27e4.htm"><b>CryptMsgEncodeAndSignCTL</b></a>. This function call returns a pointer to a signed, encoded CTL (in a PKCS #7 format) that contains the list of items created in step 1.</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To add a CTL to a certificate store</h5>
<ol>
<li>
Get a pointer to a signed and encoded CTL.</li>
<li>
Open the target certificate store with a call to <a href="certstor_12sl.htm"><b>CertOpenStore</b></a>.</li>
<li>
Call <a href="certstor_8qud.htm"><b>CertAddEncodedCTLToStore</b></a>.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
