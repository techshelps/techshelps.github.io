<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertGetSubjectCertificateFromStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certgetsubjectcertificatefromstore"></a>CertGetSubjectCertificateFromStore</h1>
<p>
The <b>CertGetSubjectCertificateFromStore </b>function gets the subject certificate context that is uniquely identified by its issuer and serial number from the certificate store.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
PCCERT_CONTEXT WINAPI CertGetSubjectCertificateFromStore(
  HCERTSTORE</b><i> hCertStore</i><b>,        </b>// in
<b>  DWORD</b><i> dwCertEncodingType</i><b>,     </b>// in
<b>  PCERT_INFO</b><i> pCertId            </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store.</dd>
<dt>
<i>dwCertEncodingType</i></dt>
<dd>
Type of encoding used on the certificate. Currently defined certificate encoding types are shown in the following table:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Encoding type</th>
<th align=left width=51%>Value</th>
</tr>
<tr valign=top>
<td width=49%>X509_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
</table><br>

</dd>
<dt>
<i>pCertId</i></dt>
<dd>
Pointer to a <a href="structs_3k33.htm"><b>CERT_INFO</b></a> structure. Only the <b>Issuer</b> and <b>SerialNumber</b> fields are used.
</dd>
</dl>
<h4>Return Values</h4>
<p>
A pointer to a read-only <a href="structs_7uno.htm"><b>CERT_CONTEXT</b></a> is returned. The <b>CERT_CONTEXT</b> must be freed by calling <a href="certstor_1tv8.htm"><b>CertFreeCertificateContext</b></a>. </p>
<p>
The returned certificate might not be valid. Normally, it would be verified when getting its issuer certificate (<a href="certstor_0oo5.htm"><b>CertGetIssuerCertificateFromStore</b></a>).</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=40%>CRYPT_E_NOT_FOUND</td>
<td width=60%>Unable to find the subject certificate in the store.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<a href="certstor_0rxw.htm"><b>CertDuplicateCertificateContext</b></a> can be called to make a duplicate certificate.</p>
<h4>Example</h4>
<p>
See <a href="llmf_3zdx.htm">Signed Message Example Code</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_0oo5.htm"><b>CertGetIssuerCertificateFromStore</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
