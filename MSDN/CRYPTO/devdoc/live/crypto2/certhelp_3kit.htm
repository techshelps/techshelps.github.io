<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptFindLocalizedName</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptfindlocalizedname"></a>CryptFindLocalizedName</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CryptFindLocalizedName</b> function finds the localized name for the specified name, such as the "Root" system store name.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
LPCWSTR WINAPI CryptFindLocalizedName(
  LPCWSTR</b><i> pwszCryptName</i>        // in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pwszCryptName</i></dt>
<dd>
A pointer to a specified name. An internal table is searched to compare a predefined localized name to the specified name. The search matches the localized name using a case insensitive string comparison.

<p>
<b>Note</b>&nbsp;&nbsp;Localized names for the predefined system stores ("Root", "My") and predefined physical stores (".Default", ".LocalMachine") are pre-installed as resource strings in crypt32.dll.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the specified name is found, a pointer to the localized name is returned. The returned pointer MUST NOT be freed.</p>
<p>
If the specified name is not found, a NULL is returned.</p>
<h4>Remarks</h4>
<p>
<a href="oidsupp_9dlx.htm"><b>CryptSetOIDFunctionValue</b></a> can be called as follows to register additional localized strings:</p>
<p class=indent1>
<i>dwEncodingType </i>= CRYPT_LOCALIZED_NAME_ENCODING_TYPE</p>
<p class=indent1>
<i>pszFuncName</i> = CRYPT_OID_FIND_LOCALIZED_NAME_FUNC</p>
<p class=indent1>
<i>pszOID</i> = CRYPT_LOCALIZED_NAME_OID</p>
<p class=indent1>
<i>pwszValueName</i> = Name to be localized, for example, L"ApplicationStore"</p>
<p class=indent1>
<i>dwValueType</i> = REG_SZ</p>
<p class=indent1>
<i>pbValueData</i> = pointer to the UNICODE localized string</p>
<p class=indent1>
<i>cbValueData</i> = (wcslen(UNICODE localized string) + 1) * sizeof(WCHAR)</p>
<p>
<b>CryptSetOIDFunctionValue</b> can be called as follows to unregister the localized strings;</p>
<p class=indent1>
<i>pbValueData</i> = NULL</p>
<p class=indent1>
<i>cbValueData</i> = 0.</p>
<p>
The registered names are searched before the pre-installed names</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=64%>CRYPT_LOCALIZED_NAME_<br>
ENCODING_TYPE</td>
<td width=36%>0</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_LOCALIZED_NAME_<br>
OID</td>
<td width=36%>"LocalizedNames"</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_OID_FIND_LOCALIZED_<br>
NAME_FUNC</td>
<td width=36%>"CryptDLLFindLocalizedName"</td>
</tr>
</table><br>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CryptFindLocalizedName().
// Assume that the application has a pointer (pwszCryptName)
// to a specific name.
// Set up the variables.
LPCWSTR pwszCryptName;   // Pointer to a null terminated
                         //   string containing the
                         //   specified name
LPCWSTR lpResult;        // Return pointer to the found
                         //  localized name
// Function call to CryptFindLocalizedName.
lpResult= CryptFindLocalizedName(
        pwszCryptName);  // in - A pointer to a specified
                         //   name defined elsewhere
cout&lt;&lt; "CryptFindLocalizedName;"&lt;&lt; endl&lt;&lt; endl;
if (lpResult) {          // returned value is a Pointer
                         //   to a found localized name
   cout&lt;&lt; "localized name at "&lt;&lt; lpResult&lt;&lt; endl
       &lt;&lt; "the localized name is "&lt;&lt; &amp;lpResult&lt;&lt; endl;
}
else {                   // returned value is NULL
   cout&lt;&lt; "no localized name found"&lt;&lt; endl&lt;&lt; endl;
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="oidsupp_9dlx.htm"><b>CryptSetOIDFunctionValue</b></a></p>
<p>&nbsp;</p></body>
</HTML>
