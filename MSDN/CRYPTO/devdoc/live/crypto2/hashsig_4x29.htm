<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Signing Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_signing_data"></a>Signing Data</h2>
<p>
In order to sign data, a hash object must first be created by using the <a href="capifunc_5kfc.htm"><b>CryptCreateHash</b></a> function. This hash object will accumulate the data to be signed. Next, the data is added to the hash object with the <a href="capifunc_8c81.htm"><b>CryptHashData</b></a> function.</p>
<p>
After the last block of data is added to the hash, the <a href="capifunc_7aco.htm"><b>CryptSignHash</b></a><b> </b>function is used to sign the hash. A description of the data can also be added to the hash object at this point. After the digital signature data has been obtained, the hash object should be destroyed with the <a href="capifunc_5960.htm"><b>CryptDestroyHash</b></a> function.</p>
<p>
Hashes can be signed with either the signature private key or the key exchange private key. The signature key should be used when the user who owns the signature key is signing some of his or her data. The key exchange key should be used when signing data that does not directly belong to the user. The classic example of this is when the key exchange key is used to sign session keys during a key exchange protocol.</p>
<p>&nbsp;</p></body>
</HTML>
