<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddEncodedCertificateToStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddencodedcertificatetostore"></a>CertAddEncodedCertificateToStore</h1>
<p>
The <b>CertAddEncodedCertificateToStore</b> function creates a certificate context from an encoded certificate and adds it to the certificate store. <b>CertAddEncodedCertificateToStore</b> also makes a copy of the encoded certificate before adding it to the store</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddEncodedCertificateToStore(
  HCERTSTORE</b><i> hCertStore</i><b>,                 </b>// in
<b>  DWORD</b><i> dwCertEncodingType</i><b>,              </b>// in
<b>  const BYTE </b><i>*pbCertEncoded</i><b>,             </b>// in
<b>  DWORD</b><i> cbCertEncoded</i><b>,                   </b>// in
<b>  DWORD</b><i> dwAddDisposition</i><b>,                </b>// in
<b>  PCCERT_CONTEXT </b><i>*ppCertContext          </i>// out, optional
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store.</dd>
<dt>
<i>dwCertEncodingType</i></dt>
<dd>
Type of encoding used on the certificate. The currently defined certificate encoding type is X509_ASN_ENCODING.</dd>
<dt>
<i>pbCertEncoded</i></dt>
<dd>
Pointer to the encoded certificate that is to be added to the certificate store.</dd>
<dt>
<i>cbCertEncoded</i></dt>
<dd>
Size, in bytes, of the encoded certificate to be added to the certificate store.</dd>
<dt>
<i>dwAddDisposition</i></dt>
<dd>
Value that specifies the action to take if a matching certificate or link to a matching certificate exists in the store. Currently defined disposition values are:
<dl>
<dt>
CERT_STORE_ADD_NEW</dt>
<dd>
If a matching certificate or a link to a matching certificate exists in the store, the operation fails and <b>GetLastError</b> returns CRYPT_E_EXISTS.</dd>
<dt>
CERT_STORE_ADD_USE_EXISTING</dt>
<dd>
If a matching certificate or a link to a matching certificate exists, that existing certificate or link is used and properties from the new certificate are added. The function does not fail, but it does not add a new context. If <i>ppCertContext</i> is not NULL, the existing context is duplicated.
<p>
If a matching certificate or link to a matching certificate does not exist, a new certificate is added.
</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING</dt>
<dd>
If a matching certificate or link to a matching certificate exists in the store, the existing certificate or link is deleted and a new certificate is created and added to the store. If a matching certificate or link to a matching certificate does not exist, a new certificate is created and added to the store.</dd>
<dt>
CERT_STORE_ADD_ALWAYS</dt>
<dd>
Does not check to see whether a matching certificate or a link to a matching certificate already exists. A new certificate is always added to the store. This may lead to duplicates in a store.</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES.</dt>
<dd>
If a matching certificate exists in the store, that existing context is deleted before creating and adding the new context. The added context inherits properties from the existing certificate</dd>
<dt>
CERT_STORE_ADD_NEWER</dt>
<dd>
If a matching certificate or a link to a matching certificate exists, compares the NotBefore times on the certificates. If the existing certificate has a NotBefore time less than the NotBefore time on the new certificate, the old certificate or link is replaced just as with CERT_STORE_ADD_REPLACE_EXISTING. If the existing certificate has a NotBefore time greater than or equal to the NotBefore time on the certificate to be added, the function fails with <b>GetLastError</b> returning CRYPT_E_EXISTS.
<p>
If a matching certificate or a link to a matching certificate is not found in the store, a new certificate is added to the store.
</dd>
<dt>
CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES </dt>
<dd>
The action is the same as for CERT_STORE_ADD_NEWER except that if an older certificate is replaced, the properties of the older certificate are incorporated into the replacement certificate.</dd>
</dl>
</dd>
<dt>
<i>ppCertContext</i></dt>
<dd>
Pointer to a pointer to the decoded certificate context. This is an optional parameter that can be NULL, indicating that the caller does not want a copy of the new or existing certificate. When a copy is made, its context must be freed by using <a href="certstor_1tv8.htm"><b>CertFreeCertificateContext</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes:</p>
<p>
<b>GetLastError</b> returns the reason for any failures using the following error codes:
<dl>
<dt>
CRYPT_E_EXISTS</dt>
<dd>
This error is returned if CERT_STORE_ADD_NEW is set and the certificate already exists in the store or if CERT_STORE_ADD_NEWER is set and a there is a certificate in the store with a NotBefore date greater than or equal to the NotBefore date on the certificate to be added.</dd>
<dt>
CRYPT_E_OSS_ERROR</dt>
<dd>
ASN.1 decoding error occurred. To get the OSS error, subtract the value of CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
An invalid add disposition was specified by the <i>dwAddDisposition</i> argument or an invalid certificate encoding type was specified. Currently only X509_ASN_ENCODING is supported. 
</dd>
</dl>
<h4>Example</h4>
<pre><code>// The function handle_error() is defined in a separate file.
HCERTSTORE      hMemoryStoreHandle;    
HCERTSTORE      hStoreHandle;
PCCERT_CONTEXT  DesiredCert = NULL;
// Open a memory store where the certificate will be added.
// See CertOpenStore for details.
if(hMemoryStoreHandle = CertOpenStore(
CERT_STORE_PROV_MEMORY,0,NULL,0,NULL))
printf("Memory store open. \n");
else
handle_error("Store did not open.");
// Open a system store to get a certificate.
if(hStoreHandle = CertOpenSystemStore(0,"CA"))
// The system store opened. Continue.
printf("System store open.\n");
else
handle_error("The system store did not open.");
// Get the first certificate in the system store.
if(DesiredCert= CertEnumCertificatesInStore(
hStoreHandle,DesiredCert))
// A certificate was retrieved. Continue.
printf("A certificate has been retrieved.\n");              
else
handle_error("A certificate could not be retrieved. Perhaps the store is empty.");
// Add the encoded certificate to the store()  
if(CertAddEncodedCertificateToStore(
   hMemoryStoreHandle,         // Store where certificate
                               // is to be added. 
   X509_ASN_ENCODING,          // The encoding type used.
DesiredCert-&gt;pbCertEncoded, // The encoded certificate 
// from the system store certificate.
DesiredCert-&gt;cbCertEncoded, // The length of that encoded cert.
CERT_STORE_ADD_USE_EXISTING,// Flag to indicate that if a 
// matching cert already exists in 
// the store, it should be used.
   NULL                        // No duplicate cert is to be
                               // created.
   ))
// A certificate was added to the memory store. Continue.
printf("The certificate has been added.\n");
else   
handle_error("The certificate was not added.");
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_7h45.htm"><b>CertAddCertificateContextToStore</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
