<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Installing the New Functionality</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_installing_the_new_functionality"></a>Installing the New Functionality</h2>
<p>
To improve performance, it is possible to install the new functionality into memory. The CryptoAPI function searches memory for the functionality before searching the registry for the DLL. For this to work, the DLL must have been loaded previously.</p>
<p>
The CryptoAPI <a href="oidsupp_3y5v.htm"><b>CryptInstallOIDFunctionAddress</b></a> function is used to install the address of the new functionality. It should be placed in the <b>DllMain</b> function of the DLL, as shown in the following example code fragment:</p>
<pre><code>#define NEW_CERT_TYPE_ENCODE_COUNT 
             (sizeof(NewCertificateTypeEncodeObject)/
                sizeof(NewCertificateTypeEncodeObject[0]))
BOOL
WINAPI
DllMain(
        HMODULE hModule,
        ULONG  ulReason,
        LPVOID lpReserved)
{
  static const CRYPT_OID_FUNC_ENTRY NewCertificateTypeEncodeObject[] = 
    {
        szOID_NEW_CERTIFICATE_TYPE, NewCertificateTypeEncodeObject
    };

    switch (ulReason)
    {
        case DLL_PROCESS_ATTACH:
            if (!CryptInstallOIDFunctionAddress(
                  hModule,                      // Module handle
                  X509_ASN_ENCODING,            // Encoding type
                  CRYPT_OID_ENCODE_OBJECT_FUNC, // Function name
                  NEW_CERT_TYPE_ENCODE_COUNT,   // Number of 
                                                //   array elements.
                  NewCertificateTypeEncodeObject, // Functions array
                  0))                             // dwFlags
            {
                printf("Install OID function address failed"); 
                return FALSE;
            }
            break;
        default:
            break;
    }
    return TRUE;
}
 </code></pre>
<p>
As stated earlier, to install new functionality into memory, the DLL must have been loaded. To facilitate this, it is good programming practice to always provide the code for both registering and installing the new functionality. This way, the first call to the function causes the DLL to get loaded (via the registry), and any subsequent calls will be found in memory, thereby improving performance.</p>
<p>
If <i>hModule</i> is passed to <a href="oidsupp_3y5v.htm"><b>CryptInstallOIDFunctionAddress</b></a>, once installed, the DLL is not unloaded until the Crypt32.dll is unloaded.</p>
<p>&nbsp;</p></body>
</HTML>
