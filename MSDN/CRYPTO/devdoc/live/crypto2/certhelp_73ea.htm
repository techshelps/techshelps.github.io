<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertNameToStr</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certnametostr"></a>CertNameToStr</h1>
<p>
The <b>CertNameToStr</b> function converts a certificate name blob to a zero-terminated character string. </p>
<p>
The string representation of distinguished names specified in RFC 1779 is adhered to. Deviations were made from RFC 1779 by double quoting embedded quotes, quoting empty strings, and not quoting strings containing consecutive spaces. RDN values of type CERT_RDN_ENCODED_BLOB or CERT_RDN_OCTET_STRING are formatted in hexadecimal (For example,#0A56CF).</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
DWORD WINAPI CertNameToStr(
  DWORD</b><i> dwCertEncodingType</i><b>,  </b>// in
<b>  PCERT_NAME_BLOB</b><i> pName</i><b>,     </b>// in
<b>  DWORD</b><i> dwStrType</i><b>,           </b>// in
<b>  LPTSTR</b><i> pszNameString</i><b>,      </b>// out, optional
<b>  DWORD</b><i> cszNameString        </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwCertEncodingType</i></dt>
<dd>
The type of encoding used on the certificate. Currently defined certificate encoding types are shown in the following table:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Encoding type</th>
<th align=left width=51%>Value</th>
</tr>
<tr valign=top>
<td width=49%>X509_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
</table><br>

</dd>
<dt>
<i>pName</i></dt>
<dd>
A pointer to the <b>CERT_NAME_BLOB</b> to be converted. See <a href="structs_0zmt.htm"><b>BLOB Structure</b></a>.</dd>
<dt>
<i>dwStrType</i></dt>
<dd>
Specifies the returned string type desired. The possible types are as follows.
<dl>
<dt>
CERT_SIMPLE_NAME_STR</dt>
<dd>
The Object Identifiers are discarded. <a href="structs_5oby.htm">CERT_RDN</a> entries are separated by ", ". Multiple attributes per CERT_RDN are separated by " + ". For example: Microsoft, Kim Abercrombie + Programmer.</dd>
<dt>
CERT_OID_NAME_STR</dt>
<dd>
The Object Identifiers are included with a "=" separator from their attribute value. CERT_RDN entries are separated by ", ". Multiple attributes per CERT_RDN are separated by "+ ". For example: 2.5.4.11=Microsoft, 2.5.4.3= Kim Abercrombie + 2.5.4.12=Programmer.</dd>
<dt>
CERT_X500_NAME_STR</dt>
<dd>
The Object Identifiers are converted to their X500 key name. Otherwise, same as CERT_OID_NAME_STR. If the Object Identifier doesn't have a corresponding X500 name, then, the Object Identifier is used with an "OID." prefix. For example: OU=Microsoft, CN=Kim Abercrombie + T=Programmer, OID.1.2.3.4.5.6=Unknown.
<p>
Quote the RDN value if it contains leading or trailing white space or one of the following characters: ",", "+", "=", """, "\n",  "&lt;", "&gt;", "#" or ";". The quoting character is ". If the RDN Value contains a " it is double quoted (""). For example:

<p>
OU="  Microsoft", CN="Joe ""Cool""" + T="Programmer, Manager" 
</dd>
<dt>
CERT_NAME_STR_SEMICOLON_FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to replace the ", " separator with a "; " separator.</dd>
<dt>
CERT_NAME_STR_CRLF_FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to replace the ", " separator with a "\r\n" separator.</dd>
<dt>
CERT_NAME_STR_NO_PLUS_FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to replace the " + " separator with a single space, " ".</dd>
<dt>
CERT_NAME_STR_NO_QUOTING_FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to inhibit the above quoting.</dd>
<dt>
CERT_NAME_STR_REVERSE-FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to specify that the order of the RDNs is to be reversed before converting to the string.
<p>
A reason for using this flag is that the names as they occur in the RDN are reversed from the typical manner in which they are displayed.

<p>
For example, an RDN in a certificate might look as follows:

<p>
Issuer::

<p>
[0,0] 2.5.4.7 (L) Internet

<p>
[1,0] 2.5.4.10 (O) VeriSign, Inc.

<p>
[2,0] 2.5.4.11 (OU) VeriSign Individual Software Publishers CA

<p>
It would be displayed as an X500 name string as follows:

<p>
&lt;L=Internet, O="VeriSign, Inc.", OU=VeriSign Individual Software Publishers CA&gt;

<p>
To interoperate with LDAP and the RFC standards, the displayed X500 name string should be reversed, by specifying CERT_NAME_STR_REVERSE-FLAG, and it would then be displayed as follows:

<p>
&lt;OU=VeriSign Individual Software Publishers CA, O="VeriSign, Inc.", L=Internet&gt;
</dd>
<dt>
CERT_NAME_STR_ENABLE_T61_UNICODE_FLAG</dt>
<dd>
This flag can be combined with a bitwise OR operation into <i>dwStrType</i> to select the encoded value type. If this flag is set, and if all the UNICODE characters are &lt;= 0xFF, the CERT_RDN_T61_STRING encoded value type is used instead of the CERT_RDN_UNICODE_STRING.</dd>
</dl>
</dd>
<dt>
<i>pszNameString</i></dt>
<dd>
The address for the returned string.</dd>
<dt>
<i>cszNameString</i></dt>
<dd>
The size, in characters, allocated for the returned string. The size must include the terminating NULL character.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns the number of characters converted, including the terminating zero character. If <i>pszNameString</i> is NULL or <i>cszNameString</i> is zero, returns the required size of the destination string.</p>
<h4>Remarks</h4>
<p>
If <i>pszNameString</i> is not NULL and <i>cszNameString</i> is not zero, the returned <i>pszNameString</i> is always zero terminated.</p>
<h4>Example</h4>
<p>
See <a href="mancerts_17mt.htm">Certificate Management Example Code</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined as Unicode and ANSI prototypes.</p>
<h4>See Also</h4>
<p>
<a href="certhelp_9r51.htm"><b>CertStrToName</b></a>, <a href="certhelp_86eq.htm"><b>CertRDNValueToStr</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
