<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddEncodedCTLToStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddencodedctltostore"></a>CertAddEncodedCTLToStore</h1>
<p>
The <b>CertAddEncodedCTLToStore</b> function creates a CTL context from an encoded CTL and adds it to the certificate store. The function makes a copy of the CTL context before adding it to the store.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddEncodedCTLToStore(
  HCERTSTORE</b><i> hCertStore</i><b>,                   </b>// in
<b>  DWORD</b><i> dwMsgAndCertEncodingType</i><b>,          </b>// in
<b>  const BYTE </b><i>*pbCtlEncoded</i><b>,                </b>// in
<b>  DWORD</b><i> cbCtlEncoded</i><b>,                      </b>// in
<b>  DWORD</b><i> dwAddDisposition</i><b>,                  </b>// in
<b>  PCCTL_CONTEXT </b><i>*ppCtlContext              </i>// out, optional
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store.</dd>
<dt>
<i>dwMsgAndCertEncodingType</i></dt>
<dd>
The type of encoding used. The message encoding pertains to the signed message and to the encoded CTL. The certificate encoding pertains to certificates that might be included in the signed message. Note that both a certificate and message encoding type is required to be specified by combining them with a bitwise OR operation as shown in the following example:
<p class=indent1>
X509_ASN_ENCODING | PKCS_7_ASN_ENCODING</p>

<p>
Currently defined encoding types are shown in the following table.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Encoding type</th>
<th align=left width=36%>Value</th>
</tr>
<tr valign=top>
<td width=64%>X509_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>PKCS_7_ASN_ENCODING</td>
<td width=36%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pbCtlEncoded</i></dt>
<dd>
Pointer to the encoded CTL that is to be added to the certificate store.</dd>
<dt>
<i>cbCtlEncoded</i></dt>
<dd>
Size, in bytes, of the encoded CTL to be added to the certificate store.</dd>
<dt>
<i>dwAddDisposition</i></dt>
<dd>
Value that specifies the action to take if a matching CTL or a link to a matching CTL already exists in the store. Currently defined disposition values and their uses are:
<dl>
<dt>
CERT_STORE_ADD_NEW.</dt>
<dd>
If a matching CTL or a link to a matching CTL exists, the operation fails. <b>GetLastError</b> returns CRYPT_E_EXISTS.</dd>
<dt>
CERT_STORE_ADD_USE_EXISTING.</dt>
<dd>
If a matching CTL or a link to a matching CTL exists, that existing CTL is used and properties from the new CTL are addedIf a matching certificate or a link to a matching certificate exists, that existing certificate or link is used and properties from the new certificate are added. The function does not fail, but it does not add a new context. If <i>ppCertContext</i> is not NULL, the existing context is duplicated.
<p>
The function does not fail, but no new CTL is added. If <i>ppCertContext</i> is not NULL, the existing context is duplicated.

<p>
If a matching CTL or a link to a matching CTL does not exist, a new CTL is added. 
</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING.</dt>
<dd>
If a matching CTL or a link to a matching CTL exists, that existing CTL or link is deleted and a new CTL is created and added to the store. If a matching CTL or a link to a matching CTL does not exist, one is added.</dd>
<dt>
CERT_STORE_ADD_ALWAYS.</dt>
<dd>
Makes no check for an existing matching CTL or a link to a matching CTL. A new CTL is always added to the store. This may lead to duplicates in a store.</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES.</dt>
<dd>
If a matching CTL exists in the store, that existing context is deleted before creating and adding the new context. The new context inherits properties from the existing CTL.</dd>
<dt>
CERT_STORE_ADD_NEWER</dt>
<dd>
If a matching CTL or a link to a matching CTL exists, the ThisUpdate times on the CTLs are compared. If the existing CTL has a ThisUpdate time less than the ThisUpdate time on the new CTL, the old CTL or link is replaced just as with CERT_STORE_ADD_REPLACE_EXISTING. If the existing CTL has a ThisUpdate time greater than or equal to the ThisUpdate time on the CTL to be added, the function fails with <b>GetLastError</b> returning CRYPT_E_EXISTS.
<p>
If a matching CTL or a link to a matching CTL is not found in the store, a new CTL is added to the store.
</dd>
<dt>
CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES. </dt>
<dd>
The action is the same as for CERT_STORE_ADD_NEWER except that if an older CTL is replaced, the properties of the older CTL are incorporated into the replacement CTL.</dd>
</dl>
</dd>
<dt>
<i>ppCtlContext</i></dt>
<dd>
Pointer to a pointer to the decoded CTL context. This is an optional parameter that can be NULL, indicating that the caller does not want a copy of the added or existing CTL. If a copy is made, it must be freed by using <a href="certstor_3gc4.htm"><b>CertFreeCTLContext</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
<b>GetLastError</b> returns the reason for any failures using the following error codes:
<dl>
<dt>
CRYPT_E_EXISTS</dt>
<dd>
This error is returned if CERT_STORE_ADD_NEW is set and the CTL already exists in the store or if CERT_STORE_ADD_NEWER is set and a there is a CTL in the store with a ThisUpdate time greater than or equal to the ThisUpdate time on the CTL to be added.</dd>
<dt>
CRYPT_E_OSS_ERROR</dt>
<dd>
An ASN.1 decoding error occurred. To get the OSS error, subtract CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
An invalid add disposition was specified by the <i>dwAddDisposition</i> argument or an invalid encoding type was specified. Currently only X509_ASN_ENCODING and PKCS_7_ASN_ENCODING are supported. 
</dd>
</dl>
<h4>Example</h4>
<p>
See <a href="certstor_4elh.htm"><b>CertAddEncodedCertificateToStore</b></a>.<b> </b>In that<b> </b>example, change all references to "certificate" to "CTL."</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_0k11.htm"><b>CertAddCTLContextToStore</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
