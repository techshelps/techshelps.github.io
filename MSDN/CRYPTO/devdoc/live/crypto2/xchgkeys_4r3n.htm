<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exchanging Session Keys</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_exchanging_session_keys"></a>Exchanging Session Keys</h1>
<p>
To send another user an encrypted message, you must send that user the session key that was used to perform the encryption. There are two ways to approach this:
<ul>
<li>
The sending user can create a random session key, encrypt it by using the receiver's public key, and send the encrypted key (key blob) to the receiver. This approach is discussed in the following section.</li>
<li>
The sending and receiving users can mutually agree on a session key by exchanging several messages back and forth. The users can then use this session key to send and receive encrypted messages. See <a href="xchgkeys_59gs.htm">Sample Three-Phase Exchange Protocol</a> for a sample three-phase key exchange protocol that can be used for this purpose. Designing one of these protocols is fairly difficult and should only be attempted by an experienced cryptographer.</li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;The procedure described in the following section assumes that the users (or CryptoAPI clients) already possess their own set of public/private key pairs and have also obtained each other's public keys.</p>
<p>&nbsp;</p></body>
</HTML>
