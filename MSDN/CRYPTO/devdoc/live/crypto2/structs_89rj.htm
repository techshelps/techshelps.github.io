<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMSG_SIGNER_ENCODE_INFO</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cmsg_signer_encode_info"></a>CMSG_SIGNER_ENCODE_INFO</h1>
<p>
The <b>CMSG_SIGNER_ENCODE_INFO</b> structure is used to specify the signer information. This structure is passed to <a href="llmsg_98a6.htm"><b>CryptMsgCountersign</b></a>, <a href="llmsg_72n8.htm"><b>CryptMsgCountersignEncoded</b></a>,<b> </b>and optionally to <a href="llmsg_5azp.htm"><b>CryptMsgOpenToEncode</b></a><b> </b>as a member of <a href="structs_2pyn.htm"><b>CMSG_SIGNED_ENCODE_INFO</b></a> for a value of CMSG_SIGNED in <i>dwMsgType</i>.</p>
<pre><code>typedef struct _CMSG_SIGNER_ENCODE_INFO {
    DWORD                       cbSize;
    PCERT_INFO                  pCertInfo;
    HCRYPTPROV                  hCryptProv;
    DWORD                       dwKeySpec;
    CRYPT_ALGORITHM_IDENTIFIER  HashAlgorithm;
    void*                       pvHashAuxInfo;
    DWORD                       cAuthAttr;
    PCRYPT_ATTRIBUTE            rgAuthAttr;
    DWORD                       cUnauthAttr;
    PCRYPT_ATTRIBUTE            rgUnauthAttr;
} CMSG_SIGNER_ENCODE_INFO,   *PCMSG_SIGNER_ENCODE_INFO;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>cbSize</b></dt>
<dd>
The count of bytes in this data structure<i>.</i></dd>
<dt>
<b>pCertInfo</b></dt>
<dd>
The following data structures from the specified <a href="structs_3k33.htm">CERT_INFO</a> are used:
<p>
<b>Issuer</b>

<p>
<b>SerialNumber</b>

<p>
<b>SubjectPublicKeyInfo.Algorithm</b> 

<p class=indent1>
The contents of the <b>Issuer</b> and <b>SerialNumber</b> data structures, combined are a unique identifier of a certificate. The <b>Algorithm</b> member of the <b>SubjectPublicKeyInfo</b> data structure specifies the hash encryption algorithm used.</p>
</dd>
<dt>
<b>hCryptProv</b></dt>
<dd>
A handle to the cryptographic service provider.</dd>
<dt>
<b>dwKeySpec</b></dt>
<dd>
Used to specify the private key to be used. 
<p>
The following <b>dwKeySpec </b>values are defined in Wincrypt.h for the default provider:

<pre><code>#define AT_KEYEXCHANGE              1
#define AT_SIGNATURE                2
 </code></pre>

<p>
If <b>dwKeySpec </b>is zero, then the default AT_SIGNATURE is used.
</dd>
<dt>
<b>HashAlgorithm</b></dt>
<dd>
A hash algorithm.</dd>
<dt>
<b>pvHashAuxInfo</b></dt>
<dd>
Currently not used and must be set to NULL in the interim.</dd>
<dt>
<b>cAuthAttr</b></dt>
<dd>
The number of elements in the array <b>rgAuthAttr</b>.</dd>
<dt>
<b>rgAuthAttr</b></dt>
<dd>
An array of structures, each holding authenticated attribute information. If no authenticated attributes are present in <b>rgAuthAttr</b>, then <b>cAuthAttr </b>should be zero. If there are authenticated attributes present, then the PKCS #9 standard dictates that there must be at least two attributes present, the content type object identifier, and the hash of the message itself. These attributes are automatically added by the system.</dd>
<dt>
<b>cUnauthAttr</b></dt>
<dd>
The number of elements in the array <b>rgUnauthAttr</b>.</dd>
<dt>
<b>rgUnauthAttr</b></dt>
<dd>
An array of structures, each holding unauthenticated attribute information. If no unauthenticated attributes are present in <b>rgUnauthAttr</b>, then <b>cUnauthAttr </b>should be zero. Unauthenticated attributes may be used to contain countersignatures, among other uses.
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="structs_3k33.htm"><b>CERT_INFO</b></a>,<b> <a href="structs_8rea.htm">CRYPT_ALGORITHM_IDENTIFIER</a></b>,<b> <a href="structs_7x0l.htm">CRYPT_ATTRIBUTE</a></b>,<b> <a href="llmsg_871o.htm">CryptMsgControl</a></b>,<b> <a href="llmsg_98a6.htm">CryptMsgCountersign</a> </b></p>
<p>&nbsp;</p></body>
</HTML>
