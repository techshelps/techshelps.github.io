<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>No Salt Value</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_crypto2_no_salt_value"></a>No Salt Value</h3>
<p>
Both Providers can now use the CRYPT_NO_SALT flag, where a user can specify that no salt value gets allocated for a 40-bit symmetric key. The functions that accept this flag are <a href="capifunc_4ptl.htm"><b>CryptGenKey</b></a>, <a href="capifunc_88jd.htm"><b>CryptDeriveKey</b></a>, and <a href="capifunc_5np5.htm"><b>CryptImportKey</b></a>. The default for these functions for the 40-bit symmetric key case provides backward compatibility by continuing the use of the 11-byte-long zero-value salt.</p>
<p>
The example below shows the importation of a key without a salt value:</p>
<pre><code>// Example showing key importation without a salt value.<b>
</b>//  [...] Assume an acquired context.

    // Import a key without salt.
    if (!CryptImportKey(
                hDefProv,    
                pbKey,    
                cbKey,    
                NULL,
                CRYPT_NO_SALT,    
                &amp;hKey))
        goto Ret;

    // [...] Use key.

//  [...] Assume a destroyed key.
//  [...] Assume a released context.
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
