<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertGetEnhancedKeyUsage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certgetenhancedkeyusage"></a>CertGetEnhancedKeyUsage</h1>
<p>
The <b>CertGetEnhancedKeyUsage</b> function gets the enhanced key usage extension or property from the certificate.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertGetEnhancedKeyUsage(
  PCCERT_CONTEXT</b><i> pCertContext</i><b>,    </b>// in
<b>  DWORD</b><i> dwFlags                   </i>// in
<b>  PCERT_ENHKEY_USAGE</b><i> pUsage       </i>// out
<b>  DWORD </b><i>*pcbUsage                 </i>// in/out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pCertContext</i></dt>
<dd>
A pointer to the specified certificate.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
If the CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG is set, then, only get the extension.
<p>
If the CERT_FIND_PROP_ONLY_ENHKEY_USAGE_FLAG is set, then, only get the property.
</dd>
<dt>
<i>pUsage</i></dt>
<dd>
Pointer to a buffer that receives the enhanced key usage.
<p>
This parameter can be NULL to set the size of the key usage for memory allocation purposes. For more information, see the "<a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>"<u> </u>section at the beginning of this Reference.
</dd>
<dt>
<i>pcbUsage</i></dt>
<dd>
Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pUsage </i>parameter. When the function returns, the variable pointed to by the <i>pcbUsage </i>parameter contains the number of bytes stored in the buffer. This parameter can be NULL, only if <i>pUsage </i>is NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded, FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures.  </p>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CertGetEnhancedKeyUsage.
// To get and print the intended key usage bytes from
// a certificate. Assume that the pointer to the
// certificate (pCertContext) is already known.

// Set up the variables.
PCCERT_CONTEXT pCertContext;// Initialized elsewhere
DWORD dwFlags = CERT_FIND_EXT_ONLY_ENHKEY_USAGE_FLAG;
                            // Extension only
PCERT_ENHKEY_USAGE pUsage;  // Initialized elsewhere
DWORD cbUsage = 0;          // Size of key (in bytes)
BOOL fResult;               // Returns TRUE if function succeeded
                            //   FALSE if function failed


// Function called the first time to get
// the size of cbUsage - allocate memory
fResult = CertGetEnhancedKeyUsage(
            pCertContext,  
            dwFlags,       
            NULL,          // NULL on first call
            &amp;cbUsage);     // in/out - Size of enhanced key usage

if (!fResult) {            // FALSE
  cout&lt;&lt; "first call to CertGetEnhancedKeyUsage failed"&lt;&lt; endl;
}
else {                     // TRUE
  cout&lt;&lt; "first call to CertGetEnhancedKeyUsage successful"&lt;&lt; endl;
  pUsage = (PCERT_ENHKEY_USAGE)malloc(cbUsage);
  cout&lt;&lt; "memory allocated"&lt;&lt; endl;
}

// Function call to get usage extension or property.
fResult = CertGetEnhancedKeyUsage(
            pCertContext,  // in - Pointer to the certificate
            dwFlags,       // in - Extension only flag
            pUsage,        // out- Pointer to enhanced key usage
            &amp;cbUsage);     // in/out - Size of enhanced key usage

if (!fResult) {            // FALSE
  cout&lt;&lt; "function failed "&lt;&lt; endl
      &lt;&lt; "error code = "&lt;&lt; GetLastError()&lt;&lt; endl;
}
else {                     // TRUE
  cout&lt;&lt; "function succeeded "&lt;&lt; endl
      &lt;&lt; "extension/ property = "&lt;&lt; dwFlags&lt;&lt; endl
      &lt;&lt; "enhanced key usage size = "&lt;&lt; &amp;cbUsage&lt;&lt; endl;
}
free (pUsage);
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certhelp_51ut.htm"><b>CertSetEnhancedKeyUsage</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
