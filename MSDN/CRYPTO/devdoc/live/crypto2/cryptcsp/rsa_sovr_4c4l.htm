<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The SHA/MD5 RSA Signature Type</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_the_sha_md5_rsa_signature_type"></a>The SHA/MD5 RSA Signature Type</h1>
<p>
CSPs of type PROV_RSA_SCHANNEL must support the CALG_SSL3_SHAMD5 hash type, in a manner compatible with the Microsoft base cryptographic provider.</p>
<p>
SSL 3.0 and TLS 1.0 client authentication use the algorithm identifier CALG_SSL3_SHAMD5. The hash consists of a concatenation of a MD5 hash and a SHA hash and is signed with a RSA private key. CryptoAPI and the Microsoft providers support this with the hash type CALG_SSL3_SHAMD5. A handle to a hash value of this type is created with the <a href="../capifunc_5kfc.htm"><b>CryptCreateHash</b></a> function with CALG_SSL3_SHAMD5 in the <i>Algid</i> parameter. After a handle to the hash is obtained, the hash value is set with the <a href="../capifunc_7wkt.htm"><b>CryptSetHashParam</b></a> function. Calls to <a href="../capifunc_8c81.htm"><b>CryptHashData</b></a> will fail with a handle to a hash of this type. Instead the data is hashed independently of this hash object with MD5 and SHA, the resulting hash values are then concatenated with the MD5 value leftmost and the SHA value rightmost. This will result in a 36 byte value (16 bytes + 20 bytes) which is set with <b>CryptSetHashParam</b>. The concatenated hash values are passed in the <i>pbData</i> parameter, and the HP_HASHVAL value must be passed in the <i>dwParam</i> parameter. Once the hash is set then a <a href="../capifunc_7aco.htm"><b>CryptSignHash</b></a> is called to generate the signature. Finally a <a href="../capifunc_5960.htm"><b>CryptDestroyHash</b></a> is called to destroy the hash object.</p>
<p>&nbsp;</p></body>
</HTML>
