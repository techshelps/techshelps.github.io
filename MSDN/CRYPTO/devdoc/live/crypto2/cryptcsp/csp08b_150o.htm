<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPCreateHash</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_cpcreatehash"></a>CPCreateHash</h1>
<p>
The <b>CPCreateHash</b> function is used by applications to initiate the hashing of a stream of data.</p>
<pre><code><b>BOOL CPCreateHash(
  HCRYPTPROV</b><i> hProv</i><b>,  </b>// in
<b>  ALG_ID</b><i> Algid</i><b>,      </b>// in
<b>  HCRYPTKEY</b><i> hKey</i><b>,    </b>// in
<b>  DWORD</b><i> dwFlags</i><b>,     </b>// in
<b>  HCRYPTHASH</b><i> *phHash </i>// out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProv</i></dt>
<dd>
Handle to a particular key container (or "context") within the CSP. This handle is obtained via a call to <a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>.</dd>
<dt>
<i>Algid</i></dt>
<dd>
Algorithm identifier of the hash algorithm to be used.</dd>
<dt>
<i>hKey</i></dt>
<dd>
If the type of hash algorithm is a keyed hash (such as a MAC algorithm), the session key for the hash is passed in this parameter. For non-keyed algorithms, this parameter should be set to zero.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values. No flags are currently defined.</dd>
<dt>
<i>phHash</i></dt>
<dd>
Address to which the function copies a handle to the new hash object.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, TRUE should be returned; otherwise, return FALSE. When FALSE is returned, the appropriate error code (see the following table) must be set via <b>SetLastError</b>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Error</th>
<th align=left width=69%>Description</th>
</tr>
<tr valign=top>
<td width=31%>NTE_BAD_ALGID</td>
<td width=69%>The <i>Algid</i> parameter specifies an algorithm that this CSP does not support.</td>
</tr>
<tr valign=top>
<td width=31%>NTE_BAD_FLAGS</td>
<td width=69%>The <i>dwFlags</i> parameter is non-zero.</td>
</tr>
<tr valign=top>
<td width=31%>NTE_BAD_KEY</td>
<td width=69%>A keyed hash algorithm (for example, CALG_MAC) is specified by <i>Algid</i>, and the <i>hKey</i> parameter is either zero or it specifies an invalid key handle. This error code will also be returned if the key is to a stream cipher, or if the cipher mode is one that doesn't use feedback.</td>
</tr>
<tr valign=top>
<td width=31%>NTE_NO_MEMORY</td>
<td width=69%>The CSP ran out of memory during the operation.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="csp08b_1v3c.htm"><b>CPDestroyHash</b></a>, <a href="csp08b_9u5d.htm"><b>CPHashData</b></a>, <a href="../capifunc_5kfc.htm"><b>CryptCreateHash</b></a></p>
<p>&nbsp;</p></body>
</HTML>
