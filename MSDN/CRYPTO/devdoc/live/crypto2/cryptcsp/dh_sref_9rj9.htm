<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Diffie-Hellman/Schannel CSP Reference</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_diffie_hellman_schannel_csp_reference"></a>Diffie-Hellman/Schannel CSP Reference</h1>
<p>
This section lists each function that must be exported from the CSP, and briefly discusses any required functionality beyond PROV_DSS_DH. Additional functions specific to a CSP may exist within the CSP.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=38%>Function</th>
<th align=left width=62%>Description</th>
</tr>
<tr valign=top>
<td width=38%><b>CPAcquireContext</b></td>
<td width=62%>Acquires a handle to a particular key container within a particular CSP. See <a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPCreateHash</b></td>
<td width=62%>Initiates hashing a stream of data. See <a href="dh_sref_8rjn.htm"><b>CPCreateHash Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDecrypt</b></td>
<td width=62%>Decrypts data that was previously encrypted via the <b>CPEncrypt</b> function. See <a href="dh_sref_1mcz.htm"><b>CPDecrypt Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDeriveKey</b></td>
<td width=62%>Generates cryptographic keys derived from base data. See <a href="dh_sref_9n5f.htm"><b>CPDeriveKey Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDestroyHash</b></td>
<td width=62%>Destroys the hash object referenced by the <i>hHash</i> parameter. See <a href="csp08b_1v3c.htm"><b>CPDestroyHash</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDestroyKey</b></td>
<td width=62%>Releases the handle referenced by the <i>hKey</i> parameter. After a key handle has been released, it becomes invalid and cannot be used again. See <a href="csp06b_7n3t.htm"><b>CPDestroyKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDuplicateHash</b></td>
<td width=62%>Makes an exact copy of a hash and the state the hash is in. See <a href="csp08b_9kq0.htm"><b>CPDuplicateHash</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPDuplicateKey</b></td>
<td width=62%>Makes an exact copy of a key and the state the key is in. See <a href="csp06b_462h.htm"><b>CPDuplicateKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPEncrypt</b></td>
<td width=62%>Encrypts data. See <a href="dh_sref_33ar.htm"><b>CPEncrypt Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPExportKey</b></td>
<td width=62%>Exports cryptographic keys from a cryptographic service provider in a secure manner. See <a href="csp06b_5tix.htm"><b>CPExportKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGenKey</b></td>
<td width=62%>Generates random cryptographic keys for use with the CSP module. See <a href="csp06b_5h2x.htm"><b>CPGenKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGenRandom</b></td>
<td width=62%>Fills a buffer with random bytes. See <a href="csp06b_712l.htm"><b>CPGenRandom</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGetHashParam</b></td>
<td width=62%>Retrieves data that governs the operations of a hash object. See <a href="csp08b_0hwt.htm"><b>CPGetHashParam</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGetKeyParam</b></td>
<td width=62%>Retrieves data that governs the operations of a key. See <a href="csp06b_2z71.htm"><b>CPGetKeyParam</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGetProvParam</b></td>
<td width=62%>Retrieves parameters that govern the operations of a CSP. See <a href="dh_sref_8hyr.htm"><b>CPGetProvParam Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPGetUserKey</b></td>
<td width=62%>Retrieves a handle to a permanent user key pair, such as the user's signature key pair. See <a href="csp06b_5v09.htm"><b>CPGetUserKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPHashData</b></td>
<td width=62%>Computes the cryptographic hash on a stream of data. See <a href="csp08b_9u5d.htm"><b>CPHashData</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPHashSessionKey</b></td>
<td width=62%>Computes the cryptographic hash on a key object. See <a href="dh_sref_0goj.htm"><b>CPHashSessionKey Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPImportKey</b></td>
<td width=62%>Transfers a cryptographic key from a key blob to a CSP. See <a href="csp06b_1iyh.htm"><b>CPImportKey</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPReleaseContext</b></td>
<td width=62%>Releases a handle to a CSP and a key container. See <a href="csp05b_9sl0.htm"><b>CPReleaseContext</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPSetHashParam</b></td>
<td width=62%>Customizes the operations of a hash object. Currently, only a single parameter is defined for this function. See <a href="csp08b_0vu5.htm"><b>CPSetHashParam</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPSetKeyParam</b></td>
<td width=62%>Customizes various aspects of a key's operations. See <a href="dh_sref_8l83.htm"><b>CPSetKeyParam Diffie-Hellman/Schannel Extensions</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPSetProvParam</b></td>
<td width=62%>Customizes the operations of a CSP. See <a href="csp05b_894d.htm"><b>CPSetProvParam</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPSignHash</b></td>
<td width=62%>Signs a piece of data. See <a href="csp08b_8sa0.htm"><b>CPSignHash</b></a>.</td>
</tr>
<tr valign=top>
<td width=38%><b>CPVerifySignature</b></td>
<td width=62%>Verifies a signature against a hash object. See <a href="csp08b_1isl.htm"><b>CPVerifySignature</b></a>.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
