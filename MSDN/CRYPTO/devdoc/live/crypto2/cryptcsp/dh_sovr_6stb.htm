<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Finish Messages (TLS 1.0) (Diffie-Hellman)</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_finish_messages_tls_1.0_diffie_hellman_"></a>Finish Messages (TLS 1.0) (Diffie-Hellman)</h1>
<p>
A "finished" message is always sent immediately after a "change cipher spec" message to verify that the key exchange and authentication processes were successful. The "finish" messages in the TLS 1.0 protocol are calculated using the Pseudo-Random Function (PRF) function with the input being the master key, a label, and a seed. The PRF uses the key, the label, and the seed as input and produces an output of arbitrary length. The following method is used to generate the PRF output used in TLS 1.0 "finish" messages.</p>
<p>
A PRF hash handle is generated using <a href="../capifunc_5kfc.htm"><b>CryptCreateHash</b></a> with the ALG_ID value CALG_TLS1PRF and the handle to the master key is passed in the <i>hKey</i> parameter. The label and seed values are set on the hash handle using the values HP_TLS1PRF_LABEL and HP_TLS1PRF_SEED respectively in the <i>dwParam</i> parameter with the <a href="../capifunc_7wkt.htm"><b>CryptSetHashParam</b></a> function. Finally the protocol engine is to call the function <a href="../capifunc_7inh.htm"><b>CryptGetHashParam</b></a> with the value HP_HASHVAL in the <i>dwParam</i> parameter to retrieve the PRF data to be included in the "finish" message. When making the call to <b>CryptGetHashParam</b> the protocol engine must specify how many bytes of data is to be output from the PRF function. This is done in the <i>pdwDataLen</i> parameter, and the resulting data is placed in the buffer pointed to by the <i>pbData</i> parameter.</p>
<p>
The protocol engine's source code is typically;</p>
<pre><code>CRYPT_DATA_BLOB Data;
HCRYPTHASH hFinishHash;
BYTE rgbFinishPRF[12];
BYTE rgbCliHashOfHandshakes[36];

// get client finish message
CryptCreateHash(hProv, CALG_TLS1PRF, hMasterKey, 0, &amp;hFinishHash);

Data.pbData = (BYTE*)"client finished";
Data.cbData = 15;
CryptSetHashParam(hFinishHash, HP_TLS1PRF_LABEL, (BYTE*)&amp;Data, 0);

Data.pbData = rgbCliHashOfHandshakes;
Data.cbData = sizeof(rgbCliHashOfHandshakes);
CryptSetHashParam(hFinishHash, HP_TLS1PRF_SEED, (BYTE*)&amp;Data, 0);

cbFinishPRF = sizeof(rgbFinishPRF);
CryptGetHashParam(hFinishHash, HP_HASHVAL, rgbFinishPRF, &amp;cbFinishPRF, 0);

CryptDestroyHash(hFinishHash);
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
