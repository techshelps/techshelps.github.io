<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPVerifySignature</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_cpverifysignature"></a>CPVerifySignature</h1>
<p>
The <b>CPVerifySignature</b> function is used to verify a digital signature against a hash object.</p>
<pre><code><b>BOOL CPVerifySignature(
  HCRYPTPROV</b><i> hProv</i><b>,      </b>// in
<b>  HCRYPTHASH</b><i> hHash</i><b>,      </b>// in
<b>  CONST BYTE</b><i> *pbSignature</i><b>,  </b>// in
<b>  DWORD</b><i> dwSigLen</i><b>,        </b>// in
<b>  HCRYPTKEY</b><i> hPubKey</i><b>,     </b>// in
<b>  LPCWSTR</b><i> sDescription</i><b>,  </b>// in
<b>  DWORD</b><i> dwFlags          </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProv</i></dt>
<dd>
Handle to a particular key container (or "context") within the CSP. This handle is obtained via a call to <a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>.</dd>
<dt>
<i>hHash</i></dt>
<dd>
Handle to the hash object to verify against.</dd>
<dt>
<i>pbSignature</i></dt>
<dd>
Buffer containing the signature data to be verified.</dd>
<dt>
<i>dwSigLen</i></dt>
<dd>
Length (in bytes) of the signature data.</dd>
<dt>
<i>hPubKey</i></dt>
<dd>
Handle to the public key to be used to verify the signature.</dd>
<dt>
<i>sDescription</i></dt>
<dd>
Applications should no longer be using this parameter and should be set to NULL to prevent security vulnerabilities. However, <a href="signcsp_6rn7.htm">CSPs</a> may prefer to keep supporting it for backward compatibility in the <a href="../csp_9tkj.htm">Microsoft Providers</a>.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values. No flags are currently defined.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, TRUE should be returned; otherwise, return FALSE. When FALSE is returned, the appropriate error code (see the following table) must be set via SetLastError.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Error</th>
<th align=left width=59%>Description</th>
</tr>
<tr valign=top>
<td width=41%>NTE_BAD_FLAGS</td>
<td width=59%>The <i>dwFlags</i> parameter is non-zero.</td>
</tr>
<tr valign=top>
<td width=41%>NTE_BAD_HASH</td>
<td width=59%>The hash object specified by the <i>hHash</i> parameter is invalid.</td>
</tr>
<tr valign=top>
<td width=41%>NTE_BAD_KEY</td>
<td width=59%>The <i>hPubKey</i> parameter does not contain a handle to a valid public key.</td>
</tr>
<tr valign=top>
<td width=41%>NTE_BAD_SIGNATURE</td>
<td width=59%>The signature failed to verify. This could be because the data itself has changed, the description string did not match, or the wrong public key was specified by <i>hPubKey</i>.<p>
This error may also be returned if the hashing or signature algorithms don't match the ones used to create the signature.</p>
</td>
</tr>
<tr valign=top>
<td width=41%>NTE_BAD_UID</td>
<td width=59%>The CSP context that was specified when the hash object was created cannot now be found.</td>
</tr>
<tr valign=top>
<td width=41%>NTE_NO_MEMORY</td>
<td width=59%>The CSP ran out of memory during the operation.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>CPVerifySignature</b> function typically performs the following steps internally:
<ul>
<li>
The <i>sDescription</i> description string, if supported, is added to the hash object.</li>
<li>
The hash object is "finished," and the hash value extracted.</li>
<li>
The hash value is padded out as required by the signature algorithm.</li>
<li>
The actual verification operation is performed by using the <i>hPubKey</i> public key. The NTE_BAD_SIGNATURE error code is returned if the signed hash within the <i>pbSignature</i> buffer and the hash value in the <i>hHash</i> hash object do not match.</li>
</ul>
<p>
The application should not be allowed to add more data to the hash object after the verification has been performed. However, the application is still responsible for calling the <a href="csp08b_1v3c.htm"><b>CPDestroyHash</b></a> function.</p>
<h4>See Also</h4>
<p>
<a href="csp08b_150o.htm"><b>CPCreateHash</b></a>, <a href="csp08b_9u5d.htm"><b>CPHashData</b></a>, <a href="csp08b_8sa0.htm"><b>CPSignHash</b></a>, <a href="../capifunc_3fj9.htm"><b>CryptVerifySignature</b></a></p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
