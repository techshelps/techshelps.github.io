<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPReleaseContext</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_cryptcsp_cpreleasecontext"></a>CPReleaseContext</h1>
<p>
The <b>CPReleaseContext</b> function is used to release a context created by <a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>.</p>
<pre><code><b>BOOL CPReleaseContext(
  HCRYPTPROV</b><i> hProv</i><b>,  </b>// in
<b>  DWORD</b><i> dwFlags      </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hProv</i></dt>
<dd>
Handle to a particular key container (or "context") within the CSP. This handle is obtained via a call to <a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values. No flags are currently defined.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, TRUE should be returned; otherwise, return FALSE. When FALSE is returned, the appropriate error code (see the following table) must be set via <b>SetLastError</b>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=31%>Error</th>
<th align=left width=69%>Description</th>
</tr>
<tr valign=top>
<td width=31%>NTE_BAD_FLAGS</td>
<td width=69%>The value of the <i>dwFlags</i> parameter is invalid.</td>
</tr>
<tr valign=top>
<td width=31%>NTE_BAD_UID</td>
<td width=69%>The context specified by <i>hProv</i> is invalid.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
After this function has been called, the <i>hProv</i> handle becomes invalid. All session keys and hash objects that have previously been created by using the <i>hProv</i> handle can be destroyed at this time. Ideally, the application has already done this via <a href="../capifunc_22ih.htm"><b>CryptDestroyKey</b></a> and <a href="../capifunc_5960.htm"><b>CryptDestroyHash</b></a> (both in the <i>CryptoAPI),</i> but your CSP shouldn't depend on it.</p>
<h4>See Also</h4>
<p>
<a href="csp05b_4mt0.htm"><b>CPAcquireContext</b></a>, <a href="../capifunc_62no.htm"><b>CryptReleaseContext</b></a></p>
<p>&nbsp;</p></body>
</HTML>
