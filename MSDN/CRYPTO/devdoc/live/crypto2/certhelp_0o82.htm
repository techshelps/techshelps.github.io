<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertCompareIntegerBlob</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certcompareintegerblob"></a>CertCompareIntegerBlob</h1>
<p>
The <b>CertCompareIntegerBlob </b>function compares two integer blobs to determine whether they are identical. Before doing the comparison, leading bytes with a value of 0x00 are removed from a positive number (by positive, it is meant that the most significant bit in the next nonzero byte is not set). Leading bytes with a value of 0xFF are removed from a negative number (by negative, it is meant that the most significant bit in the next non 0xFF byte is set). This produces the unique representation of that integer. For instance:</p>
<p>
FFFFFFAB  reduces to AB (shown in below example)<br>
FF23  reduces to FF23<br>
007F  reduces to 7F<br>
00000080  reduces to 0080</p>
<p>
Multiple byte integers are treated as Little Endian. The least significant byte is <i>pbData</i>(0). The most significant byte is <i>pbData</i>(<i>cbData</i> - 1).</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertCompareIntegerBlob(
  PCRYPT_INTEGER_BLOB</b><i> pInt1</i><b>    </b>// in
<b>  PCRYPT_INTEGER_BLOB</b><i> pInt2    </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pInt1</i></dt>
<dd>
A pointer to the first integer blob in the comparison.</dd>
<dt>
<i>pInt2</i></dt>
<dd>
A pointer to the second integer blob in the comparison.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns TRUE if the unique representation of the integer blobs are identical.</p>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CertCompareIntegerBlob() to 
// compare two integer blobs to determine whether they are identical.

// Assume that the application has a pointer to both integer blobs to 
// compare (pInt1, pInt2).

// Set up the variables.
BOOL                 Return;
PCRYPT_INTEGER_BLOB  pInt1, pInt2; 

// Initialize the blobs.
BYTE blob1data[4] = {0xFF, 0xFF, 0xFF, 0xAB};
BYTE blob2data[1] = {0xAB};
pInt1-&gt;pbData = (BYTE*)&amp;blob1data;
pInt1-&gt;cbData = sizeof(blob1data);
pInt2-&gt;pbData = (BYTE*)&amp;blob2data;
pInt2-&gt;cbData = sizeof(blob2data);

Return = CertCompareIntegerBlob(
            pInt1, pInt2);

if (Return == TRUE) {
    // For this example the integer blobs are identical, 
    
    // However, note that FALSE would have been returned if
    // BYTE blob2data[2] = {0x00, 0xAB}; had been used.
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
