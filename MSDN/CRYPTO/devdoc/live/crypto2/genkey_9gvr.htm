<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cryptographic Key Overview</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptographic_key_overview"></a>Cryptographic Key Overview</h1>
<p>
There are two types of cryptographic keys: session keys and public/private key pairs.</p>
<p>
<a href="progmodl_9t4j.htm"><i>Session Keys</i></a>. Session keys are used primarily for data encryption/decryption and are used with <i>symmetric</i> encryption algorithms. That is, the same key is used for both encryption and decryption.</p>
<p>
Most of the activity involving session keys relates to keeping them secret. It is important to keep the number of people who possess a particular session key as small as possible (one or two people is recommended).</p>
<p>
<a href="progmodl_9ib7.htm"><i>Public/Private Key Pairs</i></a>. Key pairs are composed of two components: the <i>public</i> key and the <i>private</i> key. The public key is made available (via an Internet server, e-mail, or some other means) to whomever needs or wants it, while the private key, on the other hand, is kept secret. Only the owner of the key pair is allowed to possess the private key.</p>
<p>
If one of the keys (the public key) is used to encrypt a message, then the other key is required to decrypt it. Thus, if you want to send someone a message, you can encrypt the file by using their public key and be confident that no one else will be able to read the file.</p>
<p>
If the private key is used to sign a message, then the other key must be used to validate the signature. For example, if you want to send someone a digitally signed message, you would sign the message with your private key, and the other person could verify your signature by using your public key.</p>
<p>
Unfortunately, public-key algorithms are very slow and it is impractical to use them to encrypt large amounts of data. In practice, symmetric algorithms are used for encryption/decryption, while the public-key algorithms are used merely to encrypt the session keys. Similarly, it is not practical to use public-key signature algorithms to sign large messages. Instead, a hash is made of the message and the hash value is signed. For more details on hashing and signatures, see <a href="hashsig_9b8z.htm">Hashes and Digital Signatures</a>. </p>
<p>&nbsp;</p></body>
</HTML>
