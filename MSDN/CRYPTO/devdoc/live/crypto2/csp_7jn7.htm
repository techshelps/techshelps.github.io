<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Predefined Provider Types</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_predefined_provider_types"></a>Predefined Provider Types</h2>
<p>
A number of provider types have already been defined. The following table lists these provider types, along with the algorithms that each type must support. A CSP of a given type is free to support other algorithms in addition to the ones listed.</p>
<table cellspacing=4 cols=5>
<tr valign=top>
<th align=left width=38%>Provider Type</th>
<th align=left width=15%>Key Exchange</th>
<th align=left width=14%>Signature</th>
<th align=left width=17%>Encryption</th>
<th align=left width=16%>Hashing</th>
</tr>
<tr valign=top>
<td width=38%>PROV_RSA_FULL</td>
<td width=15%>RSA</td>
<td width=14%>RSA</td>
<td width=17%>RC2, RC4</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_RSA_SIG</td>
<td width=15%>n/a</td>
<td width=14%>RSA</td>
<td width=17%>n/a</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_DSS</td>
<td width=15%>n/a</td>
<td width=14%>DSS</td>
<td width=17%>N/A</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_DSS_DH</td>
<td width=15%>DH</td>
<td width=14%>DSS</td>
<td width=17%>DES40</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_DH_SCHANNEL</td>
<td width=15%>DH</td>
<td width=14%>DSS</td>
<td width=17%>RC2, RC4, DES40</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_FORTEZZA</td>
<td width=15%>KEA</td>
<td width=14%>DSS</td>
<td width=17%>Skipjack</td>
<td width=16%>SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_MS_EXCHANGE</td>
<td width=15%>RSA</td>
<td width=14%>RSA</td>
<td width=17%>CAST</td>
<td width=16%>MD5</td>
</tr>
<tr valign=top>
<td width=38%>PROV_RSA_SCHANNEL</td>
<td width=15%>RSA</td>
<td width=14%>RSA</td>
<td width=17%>RC2, RC4, DES40</td>
<td width=16%>MD5, SHA</td>
</tr>
<tr valign=top>
<td width=38%>PROV_SSL</td>
<td width=15%>RSA</td>
<td width=14%>RSA</td>
<td width=17%>varies</td>
<td width=16%>varies</td>
</tr>
</table><br>
<p>
If two or more applications plan to exchange keys and encrypted messages, they should both use <a href="cryptcsp/signcsp_6rn7.htm">CSPs</a> of the same type; however, some CSP types may be partially compatible with others.</p>
<p>
Anyone writing a custom CSP can define a new provider type. However, this person is then responsible for distributing the new provider type to the authors of any applications that are to use it.</p>
<p>
In the event that the previous table mentioned algorithms you are not familiar with, the following table provides a brief description of each.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=18%>Algorithm</th>
<th align=left width=82%>Description</th>
</tr>
<tr valign=top>
<td width=18%>CAST</td>
<td width=82%>This is a 64-bit symmetric block cipher developed by C. M. Adams and S. E. Tavares. This algorithm is somewhat similar to DES (Data Encryption Standard).</td>
</tr>
<tr valign=top>
<td width=18%>DES</td>
<td width=82%>National Institute of Standards and Technology (NIST) Data Encryption Standard. This is a 64-bit symmetric block cipher that has a fixed key length of 56 bits.</td>
</tr>
<tr valign=top>
<td width=18%>DH</td>
<td width=82%>Diffie-Hellman. This is a public-key algorithm used for secure key exchange. It cannot be used for data encryption.</td>
</tr>
<tr valign=top>
<td width=18%>DSS</td>
<td width=82%>Digital Signature Standard. This standard uses the Digital Signature Algorithm (DSA), which is a public-key cipher used to generate digital signatures. It cannot be used for data encryption.</td>
</tr>
<tr valign=top>
<td width=18%>KEA</td>
<td width=82%>Key Exchange Algorithm. This is an improved version of Diffie-Hellman.</td>
</tr>
<tr valign=top>
<td width=18%><a href="hashsig_1id1.htm">MD2</a></td>
<td width=82%>A hashing algorithm that produces a 128-bit hash value.</td>
</tr>
<tr valign=top>
<td width=18%>MD4</td>
<td width=82%>A hashing algorithm that produces a 128-bit hash value.</td>
</tr>
<tr valign=top>
<td width=18%>MD5</td>
<td width=82%>An improved version of MD4. It also produces a 128-bit hash value.</td>
</tr>
<tr valign=top>
<td width=18%>RC2</td>
<td width=82%><a href="enc_dec_9lbm.htm">RC2 Block Cipher</a>. This is a 64-bit symmetric block cipher.</td>
</tr>
<tr valign=top>
<td width=18%>RC4</td>
<td width=82%><a href="enc_dec_2fci.htm">RC4 Stream Cipher</a>. This is a symmetric stream cipher.</td>
</tr>
<tr valign=top>
<td width=18%>RSA</td>
<td width=82%><a href="enc_dec_4jzm.htm">RSA Public-Key Cipher</a>. This is a popular public-key cipher used for both encryption and signatures.</td>
</tr>
<tr valign=top>
<td width=18%>SHA</td>
<td width=82%>Secure Hash Algorithm. This is a hashing algorithm that produces a 160-bit hash value.</td>
</tr>
<tr valign=top>
<td width=18%>Skipjack</td>
<td width=82%>This is the algorithm used by the Clipper and Capstone chips. It is a symmetric block cipher with a fixed key length of 80 bits.</td>
</tr>
</table><br>
<p>&nbsp;</p></body>
</HTML>
