<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptExportPublicKeyInfo</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptexportpublickeyinfo"></a>CryptExportPublicKeyInfo</h1>
<p>
The <b>CryptExportPublicKeyInfo</b> function exports the public key information associated with the provider's corresponding private key.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptExportPublicKeyInfo(
  HCRYPTPROV</b><i> hCryptProv</i><b>,        </b>// in
<b>  DWORD</b><i> dwKeySpec</i><b>,              </b>// in
<b>  DWORD</b><i> dwCertEncodingType</i><b>,     </b>// in
<b>  PCERT_PUBLIC_KEY_INFO</b><i> pInfo</i><b>,  </b>// out
<b>  DWORD </b><i>*pcbInfo                </i>// in, out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCryptProv</i></dt>
<dd>
Specifies the Cryptographic Service Provider to use when exporting the public key information.</dd>
<dt>
<i>dwKeySpec</i></dt>
<dd>
Identifies the public key to use from the provider's container. For example, AT_KEYEXCHANGE or AT_SIGNATURE.</dd>
<dt>
<i>dwCertEncodingType</i></dt>
<dd>
The type of encoding used on the certificate. Currently defined certificate encoding types are shown in the following table:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Encoding type</th>
<th align=left width=51%>Value</th>
</tr>
<tr valign=top>
<td width=49%>X509_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
</table><br>

</dd>
<dt>
<i>pInfo</i></dt>
<dd>
Pointer to a buffer that receives the public key information to be exported.
<p>
This parameter can be NULL to set the size of this information for memory allocation purposes. For more information, see <a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>. 
</dd>
<dt>
<i>pcbInfo</i></dt>
<dd>
Pointer to a <b>DWORD </b>that contains the size, in bytes, of the buffer pointed to by the <i>pInfo </i>parameter. When the function returns, the variable pointed to by the <i>pcbInfo </i>parameter contains the number of bytes stored in the buffer. This parameter can be NULL, only if <i>pInfo </i>is NULL.

<p>
<b>Note</b>&nbsp;&nbsp;When processing the data returned in the buffer, applications need to use the actual size of the data returned. The actual size may be slightly smaller than the size of the buffer specified on input. (On input, buffer sizes are usually specified large enough to insure that the largest possible output data will fit in the buffer.) On output, the variable pointed to by this parameter is updated to reflect the actual size of the data copied to the buffer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded, FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. Note that errors from the called functions <a href="capifunc_0aex.htm"><b>CryptGetUserKey</b></a> and <a href="capifunc_9y9l.htm"><b>CryptExportKey</b></a> may be propagated to this function. This function has the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=41%>Error code</th>
<th align=left width=59%>Description</th>
</tr>
<tr valign=top>
<td width=41%>CRYPT_E_OSS_ERROR </td>
<td width=59%>Public key ASN.1 encoding error. Note, to get the OSS error subtract CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</td>
</tr>
<tr valign=top>
<td width=41%>ERROR_MORE_DATA</td>
<td width=59%>If the buffer specified by the <i>pInfo </i>parameter is not large enough to hold the returned data, the function sets the ERROR_MORE_DATA code, and stores the required buffer size, in bytes, into the variable pointed to by <i>pcbInfo</i>.</td>
</tr>
<tr valign=top>
<td width=41%>ERROR_FILE_NOT_FOUND </td>
<td width=59%>Invalid certificate encoding type. Currently only X509_ASN_ENCODING is supported.</td>
</tr>
</table><br>
<h4>Example</h4>
<p>
See <a href="mancerts_8e05.htm">Certificate Request Example Code</a>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certhelp_3trj.htm"><b>CryptImportPublicKeyInfo</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
