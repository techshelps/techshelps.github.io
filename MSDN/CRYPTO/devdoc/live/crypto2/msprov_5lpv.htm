<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Generating DSS Signatures</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_crypto2_generating_dss_signatures"></a>Generating DSS Signatures</h3>
<p>
To sign data, it must first be hashed using the SHA algorithm. Then a DSS signature is generated by calling <a href="capifunc_7aco.htm"><b>CryptSignHash</b></a>. The steps necessary for this are shown in the following procedure.</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To generate a DSS signature</h5>
<ol>
<li>
Call <a href="capifunc_0wvo.htm"><b>CryptAcquireContext</b></a> to get a pointer to the Microsoft DSS Cryptographic Provider.</li>
<li>
Call <a href="capifunc_5kfc.htm"><b>CryptCreateHash</b></a> with the <i>Algid</i> argument set to CALG_SHA to get a pointer to an SHA hash object.</li>
<li>
Call <a href="capifunc_8c81.htm"><b>CryptHashData</b></a> with the <i>hHash</i> argument set to the pointer retrieved in the previous step. This creates a hash of the data and returns a handle to the hash in the <i>phHash</i> argument of the <b>CryptCreateHash</b> function call.</li>
<li>
Call <a href="capifunc_7aco.htm"><b>CryptSignHash</b></a> with the<i> hHash</i> argument set to the handle retrieved in the previous step. Either AT_SIGNATURE or CALG_DSS_SIGN may be passed in the <i>dwKeySpec</i> parameter. The signature is returned to the address provided in the <i>pbSignature</i> argument and the length of the signature is returned to the address provided in the <i>pcbSignature</i> argument. A NULL pointer may be passed in the <i>pbSignature</i> argument, and in this case the signature is not generated, but the length of the signature is returned to the address provided in the <i>pcbSignature</i> parameter.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
