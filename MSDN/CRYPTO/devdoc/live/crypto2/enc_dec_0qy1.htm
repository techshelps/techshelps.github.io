<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Decrypting Messages Using CryptoAPI</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_decrypting_messages_using_cryptoapi"></a>Decrypting Messages by Using the CryptoAPI</h2>
<p>
If a message was encrypted for a particular user, then the <a href="capifunc_4ptl.htm"><b>CryptGenKey</b></a> function was used to create a random session key before the encryption was performed. This means that before the message can be decrypted, the key blob containing the session key needs to be imported into the CSP with the <a href="capifunc_5np5.htm"><b>CryptImportKey</b></a> function. This function will use your key exchange private key to decrypt the key blob. This means that the key blob must have been originally created by using the matching key exchange public key.</p>
<p>
If the message was encrypted so that any password holder can access the data, the <b>CryptImportKey</b> function is not used. Instead, you create the decryption session key with the <a href="capifunc_88jd.htm"><b>CryptDeriveKey</b></a> function. You will also need to supply the function with the password (or other access token).</p>
<p>
The session key's parameters need to be configured in the same way they were during encryption. These parameters can be specified by using the <a href="capifunc_3pv1.htm"><b>CryptSetKeyParam</b></a> function. For example, if the salt value was changed one or more times during the encryption process, then it must also be changed during the decryption process in exactly the same manner.</p>
<p>
The message is decrypted by using the <a href="capifunc_6tbo.htm"><b>CryptDecrypt</b></a><b> </b>function. If the message is too large to fit comfortably in memory, it can be decrypted in sections, through multiple calls to <b>CryptDecrypt</b>.</p>
<p>
When the decryption is complete, be sure to destroy the session key by using the <a href="capifunc_22ih.htm"><b>CryptDestroyKey</b></a> function. In addition to destroying the key, this will free up CSP resources.</p>
<p>&nbsp;</p></body>
</HTML>
