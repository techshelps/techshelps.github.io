<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTL Overview</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_ctl_overview"></a>CTL Overview</h1>
<p>
The CryptoAPI CTL is a list of items that has been signed by a trusted entity. The list of items could be anything, such as a list of hashes of certificates, or a list of file names. The important thing is that all the items in the list are authenticated (approved) by the signing entity.</p>
<p>
The primary use of this functionality is to verify signed messages, using the CTL as a source of trusted root certificates. In this case, the CTL is a list of hashed certificate contexts.</p>
<p>
In addition to certificates and certificate revocation lists (CRL), the CryptoAPI certificate store now supports CTLs. This means that a <a href="structs_9chg.htm"><b>CTL_CONTEXT</b></a> structure has been added that is very similar to the certificate and CRL context structures, and that these CTL contexts may be persisted to the certificate store. </p>
<p>
The <b>CTL_CONTEXT</b> is very similar to the certificate and CRL context structures. However, the main difference is that, unlike the certificate and CRL context structures, the <b>CTL_CONTEXT</b> structure contains a HCRYPTMSG member. This handle is opened by a call to any of the functions that return a <b>CTL_CONTEXT</b> structure, making it possible to use the message functions to verify the CTL's signature. This verification is necessary to ensure that the CTL being used is not a bogus CTL planted by some rogue entity.</p>
<p>
Several functions are provided for managing CTLs. These include:</p>
<p>
<a href="certstor_0k11.htm"><b>CertAddCTLContextToStore</b></a><b><br>
<a href="certstor_8qud.htm">CertAddEncodedCTLToStore</a><br>
<a href="certstor_7ddg.htm">CertCreateCTLContext</a><br>
<a href="certstor_29d1.htm">CertDeleteCTLFromStore</a><br>
<a href="certstor_5d2s.htm">CertDuplicateCTLContext</a><br>
<a href="certstor_1noz.htm">CertEnumCTLContextProperties</a><br>
<a href="certstor_4n6t.htm">CertEnumCTLsInStore</a><br>
<a href="certstor_8zmt.htm">CertFindCTLInStore</a><br>
<a href="certhelp_9pt8.htm">CertFindSubjectInCTL</a><br>
<a href="certstor_3gc4.htm">CertFreeCTLContext</a><br>
<a href="certstor_1yex.htm">CertGetCTLContextProperty</a><br>
<a href="certstor_90c4.htm">CertSerializeCTLStoreElement</a><br>
<a href="certstor_9oc9.htm">CertSetCTLContextProperty</a><br>
<a href="certhelp_13fp.htm">CertVerifyCTLUsage</a><br>
<a href="llmsg_27e4.htm">CryptMsgEncodeAndSignCTL</a><br>
<a href="llmsg_60tu.htm">CryptMsgGetAndVerifySigner</a><br>
<a href="llmsg_1zak.htm">CryptMsgSignCTL</a></b></p>
<p>&nbsp;</p></body>
</HTML>
