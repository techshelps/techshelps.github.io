<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertGetCertificateContextProperty</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certgetcertificatecontextproperty"></a>CertGetCertificateContextProperty</h1>
<p>
The <b>CertGetCertificateContextProperty</b> function gets a property of a specified certificate context.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertGetCertificateContextProperty(
  PCCERT_CONTEXT</b><i> pCertContext</i><b>,          </b>// in
<b>  DWORD</b><i> dwPropId</i><b>,                       </b>// in
<b>  void </b><i>*pvData</i><b>,                         </b>// out
<b>  DWORD </b><i>*pcbData                        </i>// in/out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pCertContext</i></dt>
<dd>
Pointer to the certificate context.</dd>
<dt>
<i>dwPropId</i></dt>
<dd>
ID for the desired property. Currently defined IDs and the data type to be passed in <i>pvData</i> are listed in the following table. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Property ID</th>
<th align=left width=44%>Value pvData type</th>
</tr>
<tr valign=top>
<td width=56%>CERT_KEY_PROV_HANDLE_PROP_ID</td>
<td width=44%>HCRYPTPROV</td>
</tr>
<tr valign=top>
<td width=56%>CERT_KEY_PROV_INFO_PROP_ID</td>
<td width=44%>CRYPT_KEY_PROV_INFO </td>
</tr>
<tr valign=top>
<td width=56%>CERT_SHA1_HASH_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_MD5_HASH_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_HASH_PROP_ID </td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_KEY_CONTEXT_PROP_ID</td>
<td width=44%>CERT_KEY_CONTEXT</td>
</tr>
<tr valign=top>
<td width=56%>CERT_KEY_SPEC_PROP_ID</td>
<td width=44%>DWORD</td>
</tr>
<tr valign=top>
<td width=56%>CERT_ENHKEY_USAGE_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_CTL_USAGE_PROP_ID</td>
<td width=44%>CERT_ENHKEY_USAGE_PROP_ID</td>
</tr>
<tr valign=top>
<td width=56%>CERT_FRIENDLY_NAME_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_PVK_FILE_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_SIGNATURE_HASH_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_NEXT_UPDATE_LOCATION_PROP_ID</td>
<td width=44%>ARRAY OF BYTES</td>
</tr>
<tr valign=top>
<td width=56%>CERT_ACCESS_STATE_PROP_ID</td>
<td width=44%>DWORD</td>
</tr>
</table><br>


<p>
The following list presents the definitions for the <i>dwPropId </i>types:

<dl>
<dt>
CERT_KEY_PROV_HANDLE_PROP_ID</dt>
<dd>
The <i>hCryptProv</i> returned in <i>pvdata</i> is obtained from the CERT_KEY_CONTEXT_PROP_ID </dd>
<dt>
CERT_KEY_PROV_INFO_PROP_ID</dt>
<dd>
Values are returned in the CRYPT_KEY_PROV_INFO data structure pointed to by <i>pvData</i>. </dd>
<dt>
CERT_HASH_PROP_ID, CERT_SHA1_HASH_PROP_ID or CERT_MD5_HASH_PROP_ID </dt>
<dd>
If the hash does not exist, it is computed using <b>CryptHashCertificate</b>. The existing or computed hash is pointed to by <i>pvData</i>. The length of the hash is 20 bytes for SHA1 and 16 bytes for MD5. If no <i>hCryptProv</i> was specified when the store was opened or this context was created using <b>CertCreateCertificateContext</b>, the default PROV_RSA_FULL provider calculates the hash.
<p>
<i>pvData</i> points to the array of bytes and not a <b>HASH_BLOB</b> as used by <i>pvData</i> in <b>CertSetCertificateContextProperty</b>. 
</dd>
<dt>
CERT_KEY_CONTEXT_PROP_ID</dt>
<dd>
<i>pvData</i> points to a <a href="structs_70xg.htm"><b>CERT_KEY_CONTEXT</b></a> structure.</dd>
<dt>
CERT_KEY_SPEC_PROP_ID</dt>
<dd>
A DWORD containing the specification of the private key (<i>dwKeySpec</i>) is returned in <i>pvData</i>. If the CERT_KEY_CONTEXT_PROP_ID exists, <i>dwKeySpec </i>is obtained from there. Otherwise, if the CERT_KEY_PROV_INFO_PROP_ID exists, it is the source of the <i>dwKeySpec</i>.</dd>
<dt>
CERT_ENHKEY_USAGE_PROP_ID or CERT_CTL_USAGE_PROP_ID </dt>
<dd>
An array of bytes<i> </i>containing an ASN.1 encoded CTL_USAGE data structure is returned in the location pointed to by <i>pvdata</i>. <i>*pcbData</i> returns with the length of the CTL_USAGE structure.</dd>
<dt>
CERT_NEXT_UPDATE_LOCATION_PROP_ID</dt>
<dd>
An array of bytes containing an ASN.1 encoded CERT_ALT_NAME_INFO data structure is returned in the location pointed to by <i>pvData.</i> <i>*pcbData </i>returns the length of the data structure. CERT_NEXT_UPDATE_LOCATION_PROP_ID if currently used only with CTLs.</dd>
<dt>
CERT_FRIENDLY_NAME_PROP_ID</dt>
<dd>
A NULL terminated unicode character string specifying the friendly name for a certificate, CRL, or CTL is returned in the location pointed to by <i>pvdata</i>. <i>*pcbData</i> returns the length of the string.</dd>
<dt>
CERT_PVK_FILE_PROP_ID</dt>
<dd>
A NULL terminated unicode, wide character string specifying the file name containing the private key associated with the certificate's public key is returned in the location pointed to by <i>pvData</i>. <i>*pcbData</i> returns the length of the string.</dd>
<dt>
CERT_SIGNATURE_HASH_PROP_ID</dt>
<dd>
If the hash does not exist, it is computed with <b>CryptHashToBeSigned. </b>The existing or computed hash of the signature is returned in the location pointed to by <i>pvData</i>. The length of the hash is 20 bytes for SHA and 16 for MD5.</dd>
<dt>
CERT_ACCESS_STATE_PROP_ID</dt>
<dd>
A DWORD that indicates whether writes to the certificate are persisted. It is not set if the certificate is in a memory store or in a registry based store that is opened as read only.</dd>
<dt>
All other PROP_IDs</dt>
<dd>
<i>pvData</i> points to the array of bytes and not a <b>CRYPT_DATA_BLOB</b> as used by <i>pvData</i> in <b>CertSetCertificateContextProperty</b>.</dd>
</dl>

<p>
See the documentation on <i>dwPropId</i> in <a href="certstor_3czd.htm"><b>CertSetCertificateContextProperty</b></a> for more details about each property ID.
</dd>
<dt>
<i>pvData</i></dt>
<dd>
Pointer to a buffer that receives the data as determined by <i>dwPropId</i>. Elements pointed to by fields in the <i>pvData</i> structure follow the structure. Therefore, the size contained in <i>pcbData</i> may exceed the size of the structure. 
<p>
This parameter can be NULL to set the size of this information for memory allocation purposes. For more information, see <a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>.
</dd>
<dt>
<i>pcbData</i></dt>
<dd>
Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pvData </i>parameter. When the function returns, the variable pointed to by the <i>pcbData</i> parameter contains the number of bytes to be stored in the buffer. This parameter can be NULL, only if <i>pvData </i>is NULL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
<b>GetLastError</b> may be called to indicate the reason for any failure. This function uses the following error code:
<dl>
<dt>
ERROR_MORE_DATA</dt>
<dd>
If the buffer specified by the <i>pvData </i>parameter is not large enough to hold the returned data, the function sets the ERROR_MORE_DATA code, and stores the required buffer size, in bytes, into the variable pointed to by <i>pcbData.</i></dd>
<dt>
CRYPT_E_NOT_FOUND </dt>
<dd>
The certificate does not have the specified property.
</dd>
</dl>
<p>
Errors from the called function <a href="certhelp_2jxh.htm"><b>CryptHashCertificate</b></a> may be propagated to this function.</p>
<h4>Example</h4>
<p>
See <a href="certstor_3qk3.htm"><b>CertEnumCertificateContextProperties</b></a>.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_3czd.htm"><b>CertSetCertificateContextProperty</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
