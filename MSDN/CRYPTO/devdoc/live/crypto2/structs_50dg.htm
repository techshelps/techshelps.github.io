<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CRYPT_SIGN_ALG_OID_GROUP_ID</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_crypt_sign_alg_oid_group_id"></a>CRYPT_SIGN_ALG_OID_GROUP_ID</h1>
<p>
For the CRYPT_SIGN_ALG_OID_GROUP_ID, the following predefined entries exist. Note that the varying members of the <a href="structs_0igf.htm">CRYPT_OID_INFO</a> structure for this group are shown in the table. These correspond to the find criteria that should be used for this group when making calls to <a href="oidsupp_98bz.htm"><b>CryptFindOIDInfo</b></a>. The values for members that do not vary for entries in this group are typically set to zero, or NULL, except that <b>cbSize</b> which always is set to the size of CRYPT_OID_INFO, and the <b>dwGroupId</b> always is set to this group.</p>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=37%>pszOID</th>
<th align=left width=22%>pwszName</th>
<th align=left width=19%>dwValue</th>
<th align=left width=22%>Extra Info<br>
see Note below</th>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_sha1RSASign</td>
<td width=22%>L"shaRSA"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_sha1RSASign</td>
<td width=22%>L"sha1RSA"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_shaRSA</td>
<td width=22%>L"shaRSA"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_RSA_MD5RSA</td>
<td width=22%>L"md5RSA"</td>
<td width=19%>CALG_MD5</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_md5RSA</td>
<td width=22%>L"md5RSA"</td>
<td width=19%>CALG_MD5</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_RSA_MD2RSA</td>
<td width=22%>L"md2RSA"</td>
<td width=19%>CALG_MD2</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_RSA_MD4RSA</td>
<td width=22%>L"md4RSA"</td>
<td width=19%>CALG_MD4</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_md4RSA</td>
<td width=22%>L"md4RSA"</td>
<td width=19%>CALG_MD4</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_md4RSA2</td>
<td width=22%>L"md4RSA"</td>
<td width=19%>CALG_MD4</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWDIR_md2RSA</td>
<td width=22%>L"md2RSA"</td>
<td width=19%>CALG_MD2</td>
<td width=22%>aiRsaPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_INFOSEC_mosaicUpdatedSig</td>
<td width=22%>L"mosaicUpdatedSig"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>rgdwMosaicSign</td>
</tr>
<tr valign=top>
<td width=37%>szOID_OIWSEC_shaDSA</td>
<td width=22%>L"shaDSA"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>aiDssPubKey</td>
</tr>
<tr valign=top>
<td width=37%>szOID_RSA_SHA1RSA</td>
<td width=22%>L"shaRSA"</td>
<td width=19%>CALG_SHA</td>
<td width=22%>aiRsaPubKey</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;For the Extra Info aiRsaPubKey, <br>
static const <a href="datatype_2td0.htm">ALG_ID</a> aiRsaPubKey = CALG_RSA_SIGN;<br>
 &nbsp;&nbsp;&nbsp; <b>cbData</b> = sizeof( aiRsaPubKey);<br>
 &nbsp;&nbsp;&nbsp; <b>pbData</b> = (BYTE *) &amp;aiRsaPubKey;</p>
<p>
For the Extra Info aiDssPubKey, <br>
static const ALG_ID aiDssPubKey = CALG_DSS_SIGN;<br>
 &nbsp;&nbsp;&nbsp; <b>cbData</b> = sizeof( aiDssPubKey );<br>
 &nbsp;&nbsp;&nbsp; <b>pbData</b> = (BYTE *) &amp;aiDssPubKey;</p>
<p>
For the Extra Info rgdwMosaicSign, <br>
static const DWORD rgdwMosaicSign[] = {CALG_DSS_SIGN, <br>
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG};<br>
 &nbsp;&nbsp;&nbsp; <b>cbData</b> = sizeof( rgdwMosaicSign[]);<br>
 &nbsp;&nbsp;&nbsp; <b>pbData</b> = (BYTE *) &amp;rgdwMosaicSign; </p>
<p>
The C code used to populate the table (an array of CCRYPT_OID_INFO structures) is shown below.</p>
<h4>C code specifying table.</h4>
<pre><code>//+-------------------------------------------------------------------------
//  Signature Algorithm Table
//--------------------------------------------------------------------------
static const ALG_ID aiDssPubKey = CALG_DSS_SIGN;
static const ALG_ID aiRsaPubKey = CALG_RSA_SIGN;
static const DWORD rgdwMosaicSign[] = {
    CALG_DSS_SIGN, CRYPT_OID_INHIBIT_SIGNATURE_FORMAT_FLAG
};

#define SIGN_ALG_ENTRY(pszOID, pwszName, aiHash, aiPubKey) \
    OID_INFO_LEN, pszOID, pwszName, CRYPT_SIGN_ALG_OID_GROUP_ID, aiHash, \
    sizeof(aiPubKey), (BYTE *) &amp;aiPubKey
#define DSS_SIGN_ALG_ENTRY(pszOID, pwszName) \
    SIGN_ALG_ENTRY(pszOID, pwszName, CALG_SHA, aiDssPubKey)
#define RSA_SIGN_ALG_ENTRY(pszOID, pwszName, aiHash) \
    SIGN_ALG_ENTRY(pszOID, pwszName, aiHash, aiRsaPubKey)

#define SIGN_EXTRA_ALG_ENTRY(pszOID, pwszName, aiHash, rgdwExtra) \
    OID_INFO_LEN, pszOID, pwszName, CRYPT_SIGN_ALG_OID_GROUP_ID, aiHash, \
    sizeof(rgdwExtra), (BYTE *) rgdwExtra

static CCRYPT_OID_INFO SignAlgTable[] = {
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_sha1RSASign, L"shaRSA", CALG_SHA),
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_sha1RSASign, L"sha1RSA", CALG_SHA),
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_shaRSA, L"shaRSA", CALG_SHA),
    RSA_SIGN_ALG_ENTRY(szOID_RSA_MD5RSA, L"md5RSA", CALG_MD5),
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_md5RSA, L"md5RSA", CALG_MD5),
    RSA_SIGN_ALG_ENTRY(szOID_RSA_MD2RSA, L"md2RSA", CALG_MD2),
    RSA_SIGN_ALG_ENTRY(szOID_RSA_MD4RSA, L"md4RSA", CALG_MD4),
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_md4RSA, L"md4RSA", CALG_MD4),
    RSA_SIGN_ALG_ENTRY(szOID_OIWSEC_md4RSA2, L"md4RSA", CALG_MD4),
    RSA_SIGN_ALG_ENTRY(szOID_OIWDIR_md2RSA, L"md2RSA", CALG_MD2),
    SIGN_EXTRA_ALG_ENTRY(szOID_INFOSEC_mosaicUpdatedSig, L"mosaicUpdatedSig",
        CALG_SHA, rgdwMosaicSign),
    DSS_SIGN_ALG_ENTRY(szOID_OIWSEC_shaDSA, L"shaDSA"),
    RSA_SIGN_ALG_ENTRY(szOID_RSA_SHA1RSA, L"shaRSA", CALG_SHA)
};
#define SIGN_ALG_CNT (sizeof(SignAlgTable) / sizeof(SignAlgTable[0]))
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
