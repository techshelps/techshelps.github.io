<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMSG_ENVELOPED_ENCODE_INFO</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cmsg_enveloped_encode_info"></a>CMSG_ENVELOPED_ENCODE_INFO</h1>
<p>
The <b>CMSG_ENVELOPED_ENCODE_INFO</b> structure is used for enveloped messages. This structure is passed to <a href="llmsg_5azp.htm"><b>CryptMsgOpenToEncode</b></a> for a value of CMSG_ENVELOPED in <i>dwMsgType.</i></p>
<pre><code>typedef struct _CMSG_ENVELOPED_ENCODE_INFO {
    DWORD                        cbSize;
    HCRYPTPROV                   hCryptProv;
    CRYPT_ALGORITHM_IDENTIFIER   ContentEncryptionAlgorithm;
    void*                        pvEncryptionAuxInfo;
    DWORD                        cRecipients;
    PCERT_INFO*                  rgpRecipients;
} CMSG_ENVELOPED_ENCODE_INFO,  *PCMSG_ENVELOPED_ENCODE_INFO;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>cbSize</b></dt>
<dd>
The count of bytes in this data structure.</dd>
<dt>
<b>hCryptProv</b></dt>
<dd>
Specifies a handle to the cryptographic service provider used to do the content encryption, recipient key encryption, and export. The <b>hCryptProv</b>'s private keys aren't used.
<p>
Unless there is a strong reason for passing in a specific cryptographic provider in <b>hCryptProv</b>, zero should be passed in. Passing in zero causes the default RSA or DSS provider to be acquired before doing hash, signature verification or recipient encryption operations.
</dd>
<dt>
<b>ContentEncryptionAlgorithm</b></dt>
<dd>
Specifies the algorithm that is used to encrypt the contents.
<p>
The following encryption algorithms require that the <b>ContentEncryptionAlgorithm</b>'s <b>Parameters</b> contain an encoded 8 byte Initialization Vector (IV) (see <a href="capifunc_3pv1.htm"><b>CryptSetKeyParam</b></a> for more information about the KP_IV parameter).

<p class=indent1>
szOID_OIWSEC_desCBC (CALG_DES)<br>
szOID_RSA_DES_EDE3_CBC (CALG_3DES)<br>
szOID_RSA_RC4 (CALG_RC4)</p>

<p>
If the <b>ContentEncryptionAlgorithm</b>.<b>Parameters</b>.<b>cbData</b> = 0, then, an ASN.1 encoded OCTET STRING containing the IV is automatically generated. The IV is created using <a href="capifunc_15t9.htm"><b>CryptGenRandom</b></a>.

<p>
Note that when a message is decrypted, if it has an Initialization Vector  parameter, the cryptographic message functions will call <b>CryptSetKeyParam</b> with the Initialization Vector before doing the decrypt.

<p>
The szOID_RSA_RC2CBC(CALG_RC2) algorithm requires the <b>Parameters</b> to be encoded as a <a href="structs_97ub.htm">CRYPT_RC2_CBC_PARAMETERS</a> data structure. If the <b>ContentEncryptionAlgorithm</b>.<b>Parameters</b>.<b>cbData</b> = 0, then, an ASN.1 encoded <a href="structs_97ub.htm">CRYPT_RC2_CBC_PARAMETERS</a> containing the IV is automatically generated, where the <b>dwVersion</b> corresponding to the 40 bit length is used for the default. To override the default 40 bit length, the <b>pvEncryptionAuxInfo</b> member can be used to point to a <a href="structs_3r73.htm"><b>CMSG_RC2_AUX_INFO</b></a> data structure which contains the bit length.
</dd>
<dt>
<b>pvEncryptionAuxInfo</b></dt>
<dd>
This parameter points to a CMSG_RC2_AUX_INFO data structure for RC2 encryption or a SMSG_SP3_COMPATIBLE_AUX_INFO data structure for SP3 compatible encryption. For anything other than RC2 or SP3 compatible encryption, <b>pvEncryptionAuxInfo</b> must be set to NULL.</dd>
<dt>
<b>cRecipients</b></dt>
<dd>
The number of elements in the array <b>rgpRecipients</b>.</dd>
<dt>
<b>rgpRecipients</b></dt>
<dd>
An array of structures, each holding recipient information. Provides the Issuer, SerialNumber, and SubjectPublicKeyInfo.
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="structs_3k33.htm"><b>CERT_INFO</b></a>,<b> <a href="structs_8rea.htm">CRYPT_ALGORITHM_IDENTIFIER</a> </b></p>
<p>&nbsp;</p></body>
</HTML>
