<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptGetMessageSignerCount</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptgetmessagesignercount"></a>CryptGetMessageSignerCount</h1>
<p>
The <b>CryptGetMessageSignerCount</b> function returns the count of signers in the signed message.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
LONG WINAPI CryptGetMessageSignerCount(
  DWORD</b><i> dwMsgEncodingType</i><b>,    </b>// in
<b>  const BYTE</b><i> pbSignedBlob</i><b>,    </b>// in
<b>  DWORD </b><i>*cbSignedBlob         </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwMsgEncodingType</i></dt>
<dd>
The type of encoding used on the message. Note that it is always acceptable to specify both the certificate and message encoding types, by combining them with a bitwise OR operation, as shown in the following example:
<pre><code>X509_ASN_ENCODING | PKCS_7_ASN_ENCODING
 </code></pre>

<p>
However, it is required only to specify the message encoding here. Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Encoding type</th>
<th align=left width=55%>Value</th>
</tr>
<tr valign=top>
<td width=45%>X509_ASN_ENCODING</td>
<td width=55%>0x00000001</td>
</tr>
<tr valign=top>
<td width=45%>PKCS_7_ASN_ENCODING</td>
<td width=55%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pbSignedBlob</i></dt>
<dd>
A pointer to the signed message.</dd>
<dt>
<i>cbSignedBlob</i></dt>
<dd>
The size, in bytes, of the signed message.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns the count of signers in the signed message. Returns a zero when there are no signers. Returns a minus one for an error, and updates LastError accordingly.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>E_INVALIDARG </td>
<td width=60%>Invalid message encoding type. Currently only PKCS_7_ASN_ENCODING is supported.</td>
</tr>
<tr valign=top>
<td width=40%>CRYPT_E_OSS_ERROR </td>
<td width=60%>Message ASN.1 decoding error. Note, to get the OSS error subtract CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Use <b>GetLastError</b> to determine the reason for any errors.</p>
<h4>Example</h4>
<pre><code>//-------------------------------------------------------------------
// CryptGetMessageSignerCount() - Getting the number of signers of
// a message.
//-------------------------------------------------------------------

// Assume that the application has a pointer (pbSignedBlob) to
// the signed message, and its size (cbSignedBlob).

DWORD dwMsgEncodingType = PKCS_7_ASN_ENCODING;
BYTE* pbSignedBlob;      // Initialized elsewhere
DWORD cbSignedBlob;      // Initialized elsewhere
LONG  lSignerCount = 0;
DWORD dwLastError = 0;

lSignerCount = CryptGetMessageSignerCount(
                dwMsgEncodingType,
                pbSignedBlob,
                cbSignedBlob);
if(lSignerCount &lt; 0)
    dwLastError = GetLastError();
    // handle the error
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="sca_5ecl.htm"><b>CryptVerifyMessageSignature</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
