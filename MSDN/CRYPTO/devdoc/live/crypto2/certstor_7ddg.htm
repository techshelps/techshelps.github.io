<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertCreateCTLContext</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certcreatectlcontext"></a>CertCreateCTLContext</h1>
<p>
The <b>CertCreateCTLContext</b> function creates a CTL context from an encoded CTL. The created context is not put into a certificate store. It makes a copy of the encoded CTL within the created context.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
PCCTL_CONTEXT WINAPI CertCreateCTLContext(
  DWORD</b><i> dwMsgAndCertEncodingType</i><b>,          </b>// in
  <b>const BYTE</b> <i>*pbCtlEncoded</i><b>,</b>                // in
<b>  DWORD</b><i> cbCtlEncoded                       </i>// in
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwMsgAndCertEncodingType</i></dt>
<dd>
The type of encoding used. Note that both a certificate and message encoding type is required to be specified by combining them with a bitwise OR operation as shown in the following example:
<pre><code>X509_ASN_ENCODING | PKCS_7_ASN_ENCODING
 </code></pre>

<p>
Currently defined encoding types are shown in the following table.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%>Encoding type</th>
<th align=left width=54%>Value</th>
</tr>
<tr valign=top>
<td width=46%>X509_ASN_ENCODING</td>
<td width=54%>0x00000001</td>
</tr>
<tr valign=top>
<td width=46%>PKCS_7_ASN_ENCODING</td>
<td width=54%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pbCtlEncoded</i></dt>
<dd>
A pointer to the encoded CTL from which the context is to be created.</dd>
<dt>
<i>cbCtlEncoded</i></dt>
<dd>
The size, in bytes, of the encoded CTL.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If unable to decode and create the <a href="structs_9chg.htm"><b>CTL_CONTEXT</b></a>, NULL is returned. Otherwise, a pointer to a read-only <b>CTL_CONTEXT</b> is returned.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>E_INVALIDARG </td>
<td width=60%>Invalid certificate encoding type. Only PKCS_7_ASN_ENCODING and X509_ASN_ENCODING are supported.</td>
</tr>
<tr valign=top>
<td width=40%>CRYPT_E_OSS_ERROR </td>
<td width=60%>ASN.1 decoding error. Note, to get the OSS error subtract CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <a href="structs_9chg.htm"><b>CTL_CONTEXT</b></a> must be freed by calling <a href="certstor_3gc4.htm"><b>CertFreeCTLContext</b></a>. <a href="certstor_5d2s.htm"><b>CertDuplicateCTLContext</b></a> can be called to make a duplicate. <a href="certstor_9oc9.htm"><b>CertSetCTLContextProperty</b></a> and <a href="certstor_1yex.htm"><b>CertGetCTLContextProperty</b></a> can be called to store and read properties for the CTL.</p>
<h4>Example</h4>
<p>
See <a href="certstor_7lkk.htm"><b>CertCreateCertificateContext</b></a>.<b> </b>In that<b> </b>example, change all references to "certificate" to "CTL."</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_3hpw.htm"><b>CertCreateCRLContext</b></a>, <a href="certstor_7lkk.htm"><b>CertCreateCertificateContext</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
