<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changes to Certificate Store Functions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_changes_to_certificate_store_functions"></a>Changes to Certificate Store Functions</h1>
<p>
This section contains a summary of changes made to the functions after the SDR:
<ul>
<li>
<a href="certstor_7h45.htm"><b>CertAddCertificateContextToStore</b></a><p>
The <i>dwAddDisposition</i> and <i>ppStoreContext</i> parameters were added. For SDR compatibility, set them to CERT_STORE_ADD_USE_EXISTING and NULL respectively.
</li>
<li>
<b>CertAddCertificateToStore</b><p>
Renamed to <a href="certstor_4elh.htm"><b>CertAddEncodedCertificateToStore</b></a>. The <i>dwAddDisposition</i> parameter was added. For SDR compatibility, set this parameter to CERT_STORE_ADD_USE_EXISTING.
</li>
<li>
<a href="certstor_58th.htm"><b>CertAddCRLContextToStore</b></a><p>
The <i>dwAddDisposition</i> and <i>ppStoreContext</i> parameters were added. For SDR compatibility, set them to CERT_STORE_ADD_USE_EXISTING and NULL respectively.
</li>
<li>
<b>CertAddCRLToStore</b><p>
Renamed to <a href="certstor_4v6t.htm"><b>CertAddEncodedCRLToStore</b></a>. The dwAddDisposition parameter was added. For SDR compatibility, set this parameter to CERT_STORE_ADD_USE_EXISTING.
</li>
<li>
<a href="certstor_9vqd.htm"><b>CertCloseStore</b></a><p>
The <i>dwFlags</i> parameter was added. You can set the CERT_CLOSE_STORE_FORCE_FLAG to force all contexts to be released and the store's memory to be freed.
<p>
You can set the CERT_CLOSE_STORE_CHECK_FLAG to check that this is the last close store and all contexts have been released.
</li>
<li>
<a href="certstor_889x.htm"><b>CertFindCertificateInStore</b></a><p>
The following find types were added to help find a certificate containing the specified subject/issuer name string:
<p>
CERT_FIND_SUBJECT_STR_A
<p>
CERT_FIND_SUBJECT_STR_W | CERT_FIND_SUBJECT_STR
<p>
CERT_FIND_ISSUER_STR_A
<p>
CERT_FIND_ISSUER_STR_W  | CERT_FIND_ISSUER_STR
<p>
The following type was added to help find a certificate having a CERT_KEY_SPEC_PROP_ID property matching the specified key spec:
<p>
CERT_FIND_KEY_SPEC
</li>
<li>
<a href="certstor_9ce1.htm"><b>CertGetCertificateContextProperty</b></a>, <a href="certstor_20zd.htm"><b>CertGetCRLContextProperty</b></a>, <a href="certstor_3czd.htm"><b>CertSetCertificateContextProperty</b></a>, <a href="certstor_9qwp.htm"><b>CertSetCRLContextProperty</b></a><p>
The following predefined properties were added for these functions: CERT_KEY_CONTEXT_PROP_ID and CERT_KEY_SPEC_PROP_ID. The range of user definable properties was changed from 8…31 to 0x8000…0xFFFF (CERT_FIRST_USER_PROP_ID … CERT_LAST_USER_PROP_ID).
</li>
<li>
<a href="certstor_12sl.htm"><b>CertOpenStore</b></a><p>
The first parameter identifies the provider type. It's type was changed from a DWORD to an LPCSTR, and more predefined provider types were added. Also, OID installable and registerable providers are now supported. See <a href="refoview_6lh3.htm">Reference Overview</a> for a complete list of the predefined provider types, and for details about installable certificate store providers.
<p>
The provider type constants defined in the SDR are still valid.
<p>
The behavior of <b>CertOpenStore</b> when the <i>hCryptProv</i> parameter is zero was changed as follows:
<p class=indent1>
If<i> hCryptProv</i> is zero, then, the default provider and container for the PROV_RSA_FULL provider type is acquired via a call to <a href="capifunc_0wvo.htm"><b>CryptAcquireContext</b></a> with the CRYPT_VERIFYCONTEXT flag set. However, the call to <b>CryptAcquireContext</b> is deferred until the first create hash or verify signature is required. In addition, once acquired, the default provider isn't released until the current process exits. The acquired default provider is shared across all stores and threads.</p>
</li>
<li>
<a href="certstor_6u79.htm"><b>CertSaveStore</b></a><p>
The <i>dwMsgAndCertEncodingType</i>, <i>dwSaveAs</i> and <i>dwSaveTo</i> parameters were added. The SDR version only supported saving the serialized store to a file. Now it supports saving as either a serialized store or PKCS #7 message to a file or memory.
</li>
<li>
<b>CertVerifySubjectCertificate</b><p>
Renamed to <a href="certstor_1i44.htm"><b>CertVerifySubjectCertificateContext</b></a>.
</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
