<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertVerifyCTLUsage</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certverifyctlusage"></a>CertVerifyCTLUsage</h1>
<p>
The <b>CertVerifyCTLUsage</b> function verifies that a subject is trusted for a specified usage by finding a signed and time valid CTL with the usage identifiers that contains the subject. A subject can be identified by either its certificate context or any identifier such as its SHA1 hash.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertVerifyCTLUsage(
  DWORD</b><i> dwEncodingType</i><b>,                        </b>// in
<b>  DWORD</b><i> dwSubjectType</i><b>,                         </b>// in
<b>  void*</b><i> pvSubject</i><b>,                             </b>// in
<b>  PCTL_USAGE</b><i> pSubjectUsage</i><b>,                    </b>// in
<b>  DWORD</b><i> dwFlags</i><b>,                               </b>// in
<b>  PCTL_VERIFY_USAGE_PARA</b><i> pVerifyUsagePara</i><b>,     </b>// in, optional
<b>  PCTL_VERIFY_USAGE_STATUS</b><i> pVerifyUsageStatus  </i>// in/out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwEncodingType</i></dt>
<dd>
The type of encoding used. Note that either a certificate or message encoding type is required. If the low-order word containing the certificate encoding type is nonzero, then it is used. Otherwise, the high-order word containing the message encoding type is used. If both are specified, the certificate encoding type in the low-order word is used.
<p>
Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Encoding type</th>
<th align=left width=51%>Value</th>
</tr>
<tr valign=top>
<td width=49%>CRYPT_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
<tr valign=top>
<td width=49%>X509_ASN_ENCODING</td>
<td width=51%>0x00000001</td>
</tr>
<tr valign=top>
<td width=49%>PKCS_7_ASN_ENCODING</td>
<td width=51%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>dwSubjectType</i></dt>
<dd>
See <i>dwSubjectType</i> in<i> </i><a href="certhelp_9pt8.htm"><b>CertFindSubjectInCTL</b></a> for definition.</dd>
<dt>
<i>pvSubject</i></dt>
<dd>
See <i>pvSubject </i>in <a href="certhelp_9pt8.htm"><b>CertFindSubjectInCTL</b></a> for definition.</dd>
<dt>
<i>pSubjectUsage</i></dt>
<dd>
A pointer to a <a href="structs_6wx1.htm"><b>CTL_USAGE</b></a> structure. It is used to specify the intended usage of the subject.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
If the CERT_VERIFY_INHIBIT_CTL_UPDATE_FLAG isn't set, then a time invalid CTL in one of the stores specified by <b>rghCtlStore</b> in <a href="structs_8sbl.htm"><b>CTL_VERIFY_USAGE_PARA</b></a> may be replaced. When replaced, the CERT_VERIFY_UPDATED_CTL_FLAG is set in <i>pVerifyUsageStatus</i>-&gt;dwFlags. If this flag is set, then even if a time valid updated CTL is received for a CTL that is currently time invalid in the store, an update will not be made.
<p>
If the CERT_VERIFY_TRUSTED_SIGNERS_FLAG is set, then, only the signer stores specified by <b>rghSignerStore</b> in <a href="structs_8sbl.htm"><b>CTL_VERIFY_USAGE_PARA</b></a><b> </b>are searched to find the signer. Otherwise, the signer stores provide additional sources to find the signer's certificate. See the Remarks for further details.

<p>
If CERT_VERIFY_NO_TIME_CHECK_FLAG is set, then, the CTLs aren't checked for time validity. Otherwise, they are.

<p>
If CERT_VERIFY_ALLOW_MORE_USAGE_FLAG is set, then, the CTL may contain additional usage identifiers than specified by <i>pSubjectUsage</i>. Otherwise, the found CTL will contain the same usage identifiers and no additional ones.
</dd>
<dt>
<i>pVerifyUsagePara</i></dt>
<dd>
With <i>pVerifyUsagePara</i>, the caller can specify the stores to be searched to find the CTL. The caller can also specify the stores containing acceptable CTL signers. By setting the <b>ListIdentifier</b>, the caller can also be limited to a particular signer CTL list.</dd>
<dt>
<i>pVerifyUsageStatus</i></dt>
<dd>
Only the <b>cbSize</b> member of the <a href="structs_10z7.htm">CTL_VERIFY_USAGE_STATUS</a> needs to be set for this parameter when <b>CertVerifyCTLUsage </b>is called. However, all unused fields must be zeroed. See <a href="structs_10z7.htm"><b>CTL_VERIFY_USAGE_STATUS</b></a> for additional details. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the subject is trusted for the specified usage, then, TRUE is returned. Otherwise, FALSE is returned with dwError set to one of the following:</p>
<p class=indent1>
CRYPT_E_NO_VERIFY_USAGE_DLL</p>
<p class=indent1>
CRYPT_E_NO_VERIFY_USAGE_CHECK</p>
<p class=indent1>
CRYPT_E_VERIFY_USAGE_OFFLINE</p>
<p class=indent1>
CRYPT_E_NOT_IN_CTL</p>
<p class=indent1>
CRYPT_E_NO_TRUSTED_SIGNER</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures. This function has the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Error code</th>
<th align=left width=55%>Description</th>
</tr>
<tr valign=top>
<td width=45%>CRYPT_E_NO_VERIFY_<br>
USAGE_DLL</td>
<td width=55%>No Dll or exported function was found to verify subject usage.</td>
</tr>
<tr valign=top>
<td width=45%>CRYPT_E_NO_VERIFY_<br>
USAGE_CHECK</td>
<td width=55%>The called function wasn't able to do a usage check on the subject.</td>
</tr>
<tr valign=top>
<td width=45%>CRYPT_E_VERIFY_<br>
USAGE_OFFLINE</td>
<td width=55%>Since the server was offline, the called function wasn't able to complete the usage check.</td>
</tr>
<tr valign=top>
<td width=45%>CRYPT_E_NOT_IN_CTL</td>
<td width=55%>The subject wasn't found in a Certificate Trust List (CTL).</td>
</tr>
<tr valign=top>
<td width=45%>CRYPT_E_NO_TRUSTED_<br>
SIGNER</td>
<td width=55%>No trusted signer was found to verify the signature of the message or trust list.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<b>CertVerifyCTLUsage</b> will be implemented as a dispatcher to OID installable functions. First, it will try to find an OID function matching the first usage object identifier in the <i>pSubjectUsage </i>sequence. Next, it will dispatch to the default <b>CertDllVerifyCTLUsage</b> functions.</p>
<p>
Microsoft has implemented an OID installable <b>CertDllVerifyCTLUsage</b> function residing in the cryptnet.dll with the following properties:
<ul>
<li>
If CTL stores are specified by <b>rghCtlStore</b> in <i>pVerifyUsagePara</i>, then, only those stores are searched to find a CTL. Otherwise, the "Trust" system store is searched to find a CTL.</li>
<li>
If CERT_VERIFY_TRUSTED_SIGNERS_FLAG is set, then, only the signer stores specified by <b>rghSignerStore</b> in <i>pVerifyUsagePara </i>are searched to find the certificate corresponding to the signer's issuer and serial number. Otherwise, the CTL message's store, signer stores specified by <b>rghSignerStore</b> in <i>pVerifyUsagePara</i>, "Trust" system store, "CA" system store, "ROOT" and "SPC" system stores are searched to find the signer's certificate. In either case, the public key in the found certificate is used to verify the CTL's signature. </li>
<li>
If the CTL has a <b>NextUpdate</b> and CERT_VERIFY_NO_TIME_CHECK isn't set, then it's verified for time validity.</li>
<li>
If the CTL obtained from the store is time invalid, then, an attempt is made to get a time valid version. Uses either the CTL's NextUpdateLocation property or CTL's NextUpdateLocation extension or searches the signer's information for a NextUpdateLocation attribute.</li>
</ul>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CertVerifyCTLUsage().
// Verifies that a subject is trusted.
// Assume that the application has pointers to
// CERT_CONTEXT (pvSubject), PCTL_USAGE (pSubjectUsage),
// PCTL_VERIFY_USAGE_PARA (pVerifyUsagePara), and
// PCTL_VERIFY_USAGE_STATUS (pVerifyUsageStatus).

// Set up the variables.
DWORD dwEncodingType = X509_ASN_ENCODING;
                         // Type of encoding
DWORD dwSubjectType = CTL_CERT_SUBJECT_TYPE;
                         // CERT_CONTEXT or CTL_ANY_SUBJECT_INFO
CERT_CONTEXT* pvSubject; // Initialized elsewhere
PCTL_USAGE pSubjectUsage;// Initialized elsewhere
DWORD dwFlags = 0;       // The flag values
PCTL_VERIFY_USAGE_PARA pVerifyUsagePara;
                         // Initialized elsewhere
PCTL_VERIFY_USAGE_STATUS pVerifyUsageStatus;
                         // Initialized elsewhere
BOOL fResult;            // Return True if subject is trusted
                         //   FALSE otherwise
fResult= CertVerifyCTLUsage(
           dwEncodingType,     // in - CRYPT_ASN_ENCODING
           dwSubjectType,      // in
           pvSubject,          // in
           pSubjectUsage,      // in - Specify the store to be
                               //   searched
           dwFlags,            // in - Set to 0
           pVerifyUsagePara,   // in - optional
           pVerifyUsageStatus);// in/out

if (!fResult) {                // FALSE
 cout&lt;&lt; "Subject is not trusted"&lt;&lt; endl
     &lt;&lt; "dwError = "&lt;&lt; pVerifyUsageStatus-&gt;dwError&lt;&lt; endl
     &lt;&lt; "error code = "&lt;&lt; GetLastError ()&lt;&lt; endl;
}
else {                         // TRUE
 cout&lt;&lt; "Subject is trusted"&lt;&lt; endl;
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="structs_8sbl.htm"><b>CTL_VERIFY_USAGE_PARA</b></a>,<b> <br>
<a href="structs_10z7.htm">CTL_VERIFY_USAGE_STATUS</a></b>,<br>
<a href="certhelp_9pt8.htm"><b>CertFindSubjectInCTL</b></a>,<br>
<a href="certstor_8zmt.htm"><b>CertFindCTLInStore</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
