<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sending an Encrypted Session Key</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_sending_an_encrypted_session_key"></a>Sending an Encrypted Session Key</h2>
<p>
The easiest way to send encrypted messages to another user is to send the message (encrypted with a random session key) along with the session key (encrypted with the receiver's key exchange public key). These are the steps for sending an encrypted session key:</p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To send and encrypted session key</h5>
<ol>
<li>
Create a random session key by using the <a href="capifunc_4ptl.htm"><b>CryptGenKey</b></a> function.</li>
<li>
Encrypt the message by using the session key. This procedure is discussed in <a href="enc_dec_5qw1.htm">Encrypting and Decrypting Data</a>. </li>
<li>
Export the session key into a key blob with the <a href="capifunc_9y9l.htm"><b>CryptExportKey</b></a> function, specifying that the key be encrypted with the destination user's key exchange public key.</li>
<li>
Send both the encrypted message and the encrypted key blob to the destination user.</li>
<li>
The destination user should then import the key blob into his or her CSP by using the <a href="capifunc_5np5.htm"><b>CryptImportKey</b></a> function. This will automatically decrypt the session key, provided the destination user's key exchange public key was specified in step 3.</li>
<li>
The destination user can then decrypt the message by using the session key, following the procedure discussed in <a href="enc_dec_5qw1.htm">Encrypting and Decrypting Data</a>.</li>
</ol>
<h3>Sending an Encrypted Message with a Key Blob</h3>
<p>
The following illustration shows how to use this procedure to send an encrypted message.</p>
<p>
<img src="images/capi04.gif" border=0></p>
<p>
This approach is vulnerable to at least one common form of attack. An eavesdropper can acquire copies of one or more encrypted messages and the encrypted keys. Then, at some later time, the eavesdropper can send one of these messages to the receiver and the receiver will have no way of knowing the message did not come directly from the original sender. This risk can be reduced by timestamping all messages or by using serial numbers. Using a three-phase key exchange protocol will eliminate this problem entirely. See <a href="xchgkeys_59gs.htm">Sample Three-Phase Exchange Protocol</a>.</p>
<p>&nbsp;</p></body>
</HTML>
