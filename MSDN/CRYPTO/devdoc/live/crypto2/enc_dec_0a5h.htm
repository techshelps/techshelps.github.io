<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Structure of an Encrypted File</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_crypto2_structure_of_an_encrypted_file"></a>Structure of an Encrypted File</h3>
<p>
There are a number of standard formats for encrypted files and messages. These are designed to make it easier for different applications to communicate. An explanation of these formats falls outside the scope of this document. For a list of additional reading material, refer to <a href="intro_3a26.htm">Related Documentation</a>. </p>
<p>
After a file or message has been encrypted, the following data must be stored by the application and is usually kept bundled together:
<ul>
<li>
The encrypted data. When a block cipher is used, the data is padded out to a multiple of the cipher's block size. <a href="enc_dec_8jjb.htm">Padding</a> is often added even when the original message is already an even multiple. When a stream cipher is used, the encrypted data is generally the same size as the original plaintext.</li>
<li>
One or more key blobs, each containing the session key used to encrypt the message. Each of these key blobs is encrypted with the key exchange public key of a user who will later decrypt the data. Note that these are not stored if the key was derived from a password. Instead, when it is time to decrypt the message, the session key is recreated from the password. The password itself must be remembered by the user.</li>
<li>
Any salt values that were specified as the data was being encrypted. When the data is decrypted, these values will have to be specified (by using the <a href="capifunc_3pv1.htm">CryptSetKeyParam</a> function) in the same manner as the data encryption process.</li>
<li>
Any initialization vectors that were specified as the data was being encrypted. These values are handled in much the same way as the salts.</li>
</ul>
<p>
All parameters that were specified with the <b>CryptSetKeyParam</b> function as the message was being encrypted must also be specified as the message is decrypted. It may be appropriate to store some of these parameters with the encrypted message as well.</p>
<p>&nbsp;</p></body>
</HTML>
