<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddStoreToCollection</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddstoretocollection"></a>CertAddStoreToCollection</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CertAddStoreToCollection</b> function adds a sibling certificate store to a collection certificate store. </p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddStoreToCollection(
  HCERTSTORE</b><i> hCollectionStore</i><b>,            </b>// in
<b>  HCERTSTORE</b><i> hSiblingStore</i><b>,</b>               // in optional
<b>  DWORD</b><i> dwUpdateFlag</i><b>,                     </b>// in
<b>  DWORD </b><i>dwPriority                        </i> <i>   </i>// in
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCollectionStore</i></dt>
<dd>
Handle to the certificate store.</dd>
<dt>
<i>hSiblingStore</i></dt>
<dd>
Handle of a sibling store to be added to the collection store. See <b>Remarks</b>.</dd>
<dt>
<i>dwUpdateFlag</i></dt>
<dd>
Flag to indicate whether certificates, CRLs, and CTLs can be added to the new sibling store member of the collection store . Set <i>dwUpdateFlag</i> to CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG to enable addition or to 0 to disable additions.</dd>
<dt>
<i>dwPriority</i> </dt>
<dd>
DWORD used to set a priority level of the new store in the collection, with zero being the lowest priority. If zero is passed for this parameter, the specified store will be appended as the last store in the collection. The priority levels of the stores in a collection determine the order in which the stores are enumerated, and the search order of the stores when attempting to retrieve a certificate, CRL, or CTL. Priority levels also determine into which store of a collection a new certificate, CRL or CTL will be added. See <b>Remarks</b> for further information.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE is returned if a new store was added to the collection of stores. FALSE is returned if the function failed.</p>
<h4>Remarks</h4>
<p>
A collection store has the same HCERTSTORE handle as a single store; thus, almost all functions that apply to any certificate store also apply to any collection store. Enumeration and find processes span all of the stores in a collection store; however, functions that add links to stores such as <a href="certstor_5qed.htm"><b>CertAddCertificateLinkToStore</b></a> cannot be used with collection stores.</p>
<p>
When a certificate, CRL, or CTL is added to a collection store, the list of sibling stores in the collection is searched in priority order to find the first store that allows adding. Adding is enabled if CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG was set in the <b>CertAddStoreToCollection </b>call. With any function that adds elements to a store, if a store that allows adding does not return success, the add function silently continues on to the next store.</p>
<p>
When a collection store and its sibling stores are closed with <a href="certstor_9vqd.htm"><b>CertCloseStore</b></a> using the CERT_CLOSE_STORE_FORCE_FLAG, the collection store must be closed before its sibling stores. If the CERT_CLOSE_STORE_FORCE_FLAG is not used, the stores may be closed in any order.</p>
<h4>Example</h4>
<pre><code>// handle_error() is a function defined in a separate file.
HCERTSTORE hCollectionStore;
HCERTSTORE hSiblingStore;

// Open the collection store. For details, see CertOpenStore.
if(hCollectionStore = CertOpenStore(
CERT_STORE_PROV_COLLECTION, 
     0,        // For CERT_STORE_PROV_COLLECTION,
               // the rest of the parameters
               // must be 0 or NULL.
NULL,
0,
NULL))
// The collection store opened. Continue.
printf("Opened the COLLECTION Store\n");
else
handle_error("Error opening Store from disk.");
// Open a sibling store. For details, see CertOpenStore.
if(hsiblingstore = CertOpenStore(
   CERT_STORE_PROV_MEMORY,   // For the memory provider type,
   0,                        // the rest of the parameters must
   NULL,                     // be 0 or NULL.
0,                        
NULL))
// The memory store to be a sibling store opened. Continue.
printf("Memory store open. \n");
else
handle_error("Memory store not open.");
// Add the sibling store to the collection.
if(CertAddStoreToCollection(
hCollectionStore,
hSiblingStore,
   CERT_PHYSICAL_STORE_ADD_ENABLE_FLAG,     // dwUpdateFlag 
   3                                        // Store priority 
                                            // in the collection.
   ))
// The sibling store was added to the collection. Continue.
printf("A sibling store has been added to the collection.\n");
else
handle_error("The sibling store was not added to the collection.");
//
// Work with certificates in the collection store and close the 
// stores. 
// Note that a find on the collection store will locate 
// contexts in any of its sibling stores.
//
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_5jxq.htm"><b>CertRemoveStoreFromCollection</b></a></p>
<p>&nbsp;</p></body>
</HTML>
