<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertFindSubjectInSortedCTL</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certfindsubjectinsortedctl"></a>CertFindSubjectInSortedCTL</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CertFindSubjectInSortedCTL </b>function attempts to find the specified subject in a sorted CTL.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertFindSubjectInSortedCTL(
  PCRYPT_DATA_BLOB </b><i>pSubjectIdentifier</i><b>,</b>  // in
<b>  PCCTL_CONTEXT </b><i>pCtlContext</i><b>,</b>            // in
<b>  DWORD </b><i>dwFlags</i><b>,</b>                        // in
<b>  void </b><i>*pvReserved</i><b>,</b>                     // in
<b>  PCRYPT_DER_BLOB </b><i>pEncodedAttributes </i>   // out, optional
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>pSubjectIdentifier</i></dt>
<dd>
Pointer to a <b>CRYPT_DATA_BLOB</b> structure uniquely identifying the subject. It can be a hash or any unique byte sequence. See <a href="structs_0zmt.htm"><b>BLOB Structure</b></a>.</dd>
<dt>
<i>pCtlContext</i></dt>
<dd>
Pointer to the <a href="structs_9chg.htm"><b>CTL_CONTEXT</b></a> to be searched.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
Flag values.
<p>
This parameter is reserved for future use and should always be zero.
</dd>
<dt>
<i>pvReserved</i></dt>
<dd>
This parameter is reserved for future use and must be NULL.</dd>
<dt>
<i>pEncodedAttributes</i></dt>
<dd>
Pointer to a <b>CRYPT_DER_BLOB </b>structure containing a byte count and a pointer to the Subject's encoded attributes. See <b>BLOB Structure</b>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the <i>SubjectIdentifier</i> exists in the CTL, FALSE if the function does not locate a matching <i>SubjectIdentifier</i>.</p>
<h4>Example</h4>
<pre><code>// EXAMPLE CODE FOR USING CertFindSubjectInSortedCTL().
// Assume pointers to the Subject Blob (pSubjectIdentifier) and
// the PCCTL_CONTEXT (pCtlContext) are initialized elsewhere.
// Declare and initialize.
PCRYPT_DER_BLOB pSubjectIdentifier;
// Pointer to a BLOB structure
                                //   identifiable to the subject.
                                //   Initialized elsewhere
PCCTL_CONTEXT pCtlContext;      // Pointer to a CTL context.
                                //   Initialized elsewhere
CRYPT_DER_BLOB EncodedAttributes;
// Pointer to a BLOB struture
                                //   containing the found Subject's
                                //   encoded attributes.
BOOL fResult;                   // Returns TRUE if function finds a
                                //   SubjectIdentifier in the CTL.
                                //   FALSE if the SubjectIdentifier is
                                //   not found.
// Function call to CertFindSubjectInSortedCTL().
fResult= CertFindSubjectInSortedCTL(
          pSubjectIdentifier,   // in- Pointer to a BLOB struture,
                                //   identifying the subject.
          pCtlContext,          // in- Pointer to the CTL_CONTEXT
                                //   to be searched.
          0,                    // in- dwFlags- reserved, set to 0
          NULL,                 // in- pvReserved- reserved, set to
                                //   NULL
&amp;EncodedAttributes);            // out, optional- Pointer to
//   attributes BLOB structure
if(fResult){  // TRUE returned- the subject was found in the CTL.
printf("The subject was found in the sorted CTL.\n");
    }
else {        // FALSE returned- the subject was not found in the CTL.
printf("The subject was not found in the sorted CTL.\n");
    }
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_6uss.htm"><b>CertEnumSubjectInSortedCTL</b></a></p>
<p>&nbsp;</p></body>
</HTML>
