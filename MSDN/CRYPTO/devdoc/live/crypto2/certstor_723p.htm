<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddCRLLinkToStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddcrllinktostore"></a>CertAddCRLLinkToStore</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CertAddCRLLinkToStore</b> function adds a link in a store to a CRL context in a different store. Instead of creating and adding a duplicate of the CRL, this function adds a link to the original CRL context wherever it may be. Since the link provides access to an original CRL context, setting an extended property in the linked CRL context changes the property as seen in the CRL's original location and by any other links to that CRL. </p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddCRLLinkToStore(
  HCERTSTORE</b><i> hCertStore</i><b>,                   </b>// in
<b>  PCCRL_CONTEXT </b><i>pCRLContext,</i>               // in
<b>  DWORD</b><i> dwAddDisposition</i><b>,                  </b>// in
<b>  PCCRL_CONTEXT </b><i>*ppStoreContext            </i>// out optional
<b>);</b> 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store where the link is to be added.</dd>
<dt>
<i>pCRLContext</i></dt>
<dd>
Pointer to the CRL context that is to be linked.</dd>
<dt>
<i>dwAddDisposition</i></dt>
<dd>
Value that specifies the action to take if a matching CRL or a link to a matching CRL exists in the store. Currently defined disposition values and their uses are:
<dl>
<dt>
CERT_STORE_ADD_NEW</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, the operation fails. <b>GetLastError</b> returns CRYPT_E_EXISTS.</dd>
<dt>
CERT_STORE_ADD_USE_EXISTING</dt>
<dd>
If a matching CRL or a link to a matching CRL exists that existing link is used. The function does not fail, but no new link is added. If a matching CRL or link to a CRL does not exist, a new link is added. </dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING</dt>
<dd>
If a link to the matching CRL exists, that existing link is deleted and a new link is created and added to the store. If a matching CRL or a link to a matching CRL does not exist, a new link is added.</dd>
<dt>
CERT_STORE_ADD_ALWAYS</dt>
<dd>
Makes no check for an existing matching CRL or link to a matching CRL. A new link is always added to the store. This may lead to duplicates in a store.</dd>
<dt>
CERT_STORE_ADD_NEWER</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, the ThisUpdate times on the CRLs are compared. If the existing CRL has a ThisUpdate time less than the ThisUpdate time on the new CRL, the old link is replaced just as with CERT_STORE_ADD_REPLACE_EXISTING. If the existing CRL has a ThisUpdate time greater than or equal to the ThisUpdate time on the CRL to be added, the function fails with <b>GetLastError</b> returning CRYPT_E_EXISTS.
<p>
If a matching CRL or a link to a matching CRL is not found in the store, a new link is added to the store.
</dd>
</dl>
</dd>
<dt>
<i>ppStoreContext</i> </dt>
<dd>
Pointer to a pointer of a copy of the link created. <i>ppStoreContext </i>can be NULL to indicate that a copy of the link is not needed. If a copy of the link is created, that copy must be freed using <a href="certstor_9kok.htm"><b>CertFreeCRLContext</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
<b>GetLastError</b> returns the code for any failures using the following error codes: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=30%>Error code</th>
<th align=left width=70%>Description</th>
</tr>
<tr valign=top>
<td width=30%>CRYPT_E_EXISTS</td>
<td width=70%>For a <i>dwAddDisposition</i> of CERT_STORE_ADD_NEW, the CTL already exists in the store.</td>
</tr>
<tr valign=top>
<td width=30%>E_INVALIDARG </td>
<td width=70%>Invalid add disposition specified by the <i>dwAddDisposition</i> argument.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Links cannot be added to a store that is opened as a collection. Stores opened as collections include all stores opened with <a href="certstor_27s5.htm"><b>CertOpenSystemStore</b></a><b> </b>or <a href="certstor_12sl.htm"><b>CertOpenStore</b></a> using  CERT_STORE_PROV_SYSTEM or CERT_STORE_PROV_COLLECTION. Also see <a href="certstor_2uni.htm"><b>CertAddStoreToCollection</b></a>. </p>
<p>
If links are used and <a href="certstor_9vqd.htm"><b>CertCloseStore</b></a> is called with CERT_CLOSE_STORE_FORCE_FLAG, the store using links must be closed before the store containing the original contexts can be closed. If CERT_CLOSE_STORE_FORCE_FLAG is not used, the two stores may be closed in either order.</p>
<h4>Example</h4>
<p>
See the example with <b>CertAddCertificateLinkToStore</b>. This example will hold for <b>CertAddCRLLinkToStore</b> if all the references to "certificate" are changed to "CRL."</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_27s5.htm"><b>CertOpenSystemStore</b></a>, <a href="certstor_2uni.htm"><b>CertAddStoreToCollection</b></a>, <a href="certstor_7un9.htm"><b>CertAddCTLLinkToStore</b></a>, <a href="certstor_5qed.htm"><b>CertAddCertificateLinkToStore</b></a>, <a href="certstor_9kok.htm"><b>CertFreeCRLContext</b></a></p>
<p>&nbsp;</p></body>
</HTML>
