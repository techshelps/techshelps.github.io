<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddEncodedCRLToStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddencodedcrltostore"></a>CertAddEncodedCRLToStore</h1>
<p>
The <b>CertAddEncodedCRLToStore</b> function creates a CRL context from an encoded CRL and adds it to the certificate store. The function makes a copy of the CRL context before adding it to the store.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddEncodedCRLToStore(
  HCERTSTORE</b><i> hCertStore</i><b>,               </b>// in
<b>  DWORD </b><i>dwCertEncodingType</i><b>,            </b>// in
<b>  const BYTE </b><i>*pbCrlEncoded</i><b>,            </b>// in
<b>  DWORD</b><i> cbCrlEncoded</i><b>,                  </b>// in
<b>  DWORD</b><i> dwAddDisposition</i><b>,              </b>// in
<b>  PCCRL_CONTEXT </b>*<i>ppCrlContext          </i>// out, optional
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store.</dd>
<dt>
<i>dwCertEncodingType</i></dt>
<dd>
Type of encoding used on the CRL. The currently defined encoding type is X509_ASN_ENCODING (0x00000001).</dd>
<dt>
<i>pbCrlEncoded</i></dt>
<dd>
Pointer to the encoded CRL that is to be added to the certificate store.</dd>
<dt>
<i>cbCrlEncoded</i></dt>
<dd>
Size, in bytes, of the encoded CRL to be added to the certificate store.</dd>
<dt>
<i>dwAddDisposition</i></dt>
<dd>
Value that specifies the action to take if a matching CRL or a link to a matching CRL already exists in the store. Currently defined disposition values and their uses are:
<dl>
<dt>
CERT_STORE_ADD_NEW.</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, the operation fails. <b>GetLastError</b> returns CRYPT_E_EXISTS.</dd>
<dt>
CERT_STORE_ADD_USE_EXISTING.</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, that existing CRL is used and properties from the new CRL are added. The function does not fail, but no new CRL is added. If <i>ppCertContext</i> is not NULL, the existing context is duplicated.
<p>
If a matching CRL or a link to a matching CRL does not exist, a new CRL is added. 
</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING.</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, that existing CRL or link is deleted and a new CRL is created and added to the store. If a matching CRL or a link to a matching CRL does not exist, one is added.</dd>
<dt>
CERT_STORE_ADD_ALWAYS.</dt>
<dd>
Makes no check for an existing matching CRL or link to a matching CRL. A new CRL is always added to the store. This may lead to duplicates in a store.</dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING_INHERIT_PROPERTIES.</dt>
<dd>
If a matching CRL exists in the store, that existing context is deleted before creating and adding the new context. The new context inherits properties from the existing CRL</dd>
<dt>
CERT_STORE_ADD_NEWER</dt>
<dd>
If a matching CRL or a link to a matching CRL exists, the ThisUpdate times on the CRLs are compared. If the existing CRL has a ThisUpdate time less than the ThisUpdate time on the new CRL, the old CRL or link is replaced just as with CERT_STORE_ADD_REPLACE_EXISTING. If the existing CRL has a ThisUpdate time greater than or equal to the ThisUpdate time on the CRL to be added, the function fails with <b>GetLastError</b> returning CRYPT_E_EXISTS.
<p>
If a matching CRL or a link to a matching CRL is not found in the store, a new CRL is added to the store.
</dd>
<dt>
CERT_STORE_ADD_NEWER_INHERIT_PROPERTIES. </dt>
<dd>
The action is the same as for CERT_STORE_ADD_NEWER except that if an older CRL is replaced, the properties of the older CRL are incorporated into the replacement CRL.</dd>
</dl>
</dd>
<dt>
<i>ppCrlContext</i></dt>
<dd>
Pointer to a pointer to the decoded CRL context. This is an optional parameter that can be NULL, indicating that the caller does not want a copy of the new or existing CRL. If a copy is made, that context must be freed by using <a href="certstor_9kok.htm"><b>CertFreeCRLContext</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The function returns TRUE if the function succeeded, FALSE if the function failed.</p>
<p>
<b>GetLastError</b> returns the reason for any failures using the following error codes:
<dl>
<dt>
CRYPT_E_EXISTS</dt>
<dd>
This error is returned if CERT_STORE_ADD_NEW is set and the CRL already exists in the store or if CERT_STORE_ADD_NEWER is set and a there is a CRL in the store with a ThisUpdate time greater than or equal to the ThisUpdate time on the CRL to be added.</dd>
<dt>
CRYPT_E_OSS_ERROR</dt>
<dd>
An ASN.1 decoding error occurred. To get the OSS error, subtract the value of CRYPT_E_OSS_ERROR from the returned error and see asn1code.h for details on the error.</dd>
<dt>
E_INVALIDARG</dt>
<dd>
An invalid add disposition was specified by the <i>dwAddDisposition</i> argument or an invalid encoding type was specified. Currently only encoding type X509_ASN_ENCODING is supported. 
</dd>
</dl>
<h4>Example</h4>
<p>
See <a href="certstor_4elh.htm"><b>CertAddEncodedCertificateToStore</b></a>.<b> </b>In that<b> </b>example, change all references from "certificate" to "CRL."</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 OSR2 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_58th.htm"><b>CertAddCRLContextToStore</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
