<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptGetOIDFunctionAddress</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptgetoidfunctionaddress"></a>CryptGetOIDFunctionAddress</h1>
<p>
The <b>CryptGetOIDFunctionAddress</b> function searches the list of registered and installed functions for an encoding type and OID match. If a registry match is found, the Dll containing the function is loaded.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptGetOIDFunctionAddress(
  HCRYPTOIDFUNCSET</b><i> hFuncSet</i><b>,       </b>// in
<b>  DWORD</b><i> dwEncodingType</i><b>,            </b>// in
<b>  LPCSTR</b><i> pszOID</i><b>,                   </b>// in
<b>  DWORD</b><i> dwFlags</i><b>,                   </b>// in
<b>  void </b><i>**ppvFuncAddr</i><b>,              </b>// out
<b>  HCRYPTOIDFUNCADDR </b><i>*phFuncAddr    </i>// out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFuncSet</i></dt>
<dd>
A function set handle previously obtained from a call to <a href="oidsupp_1dx0.htm"><b>CryptInitOIDFunctionSet</b></a>.</dd>
<dt>
<i>dwEncodingType</i></dt>
<dd>
The type of encoding specified. Note that either a certificate or message encoding type is required. If the low-order word containing the certificate encoding type is nonzero, then it is used. Otherwise, the high-order word containing the message encoding type is used. If both are specified, the certificate encoding type in the low-order word is used.
<p>
Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Encoding type</th>
<th align=left width=36%>Value</th>
</tr>
<tr valign=top>
<td width=64%>None</td>
<td width=36%>0x00000000</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>X509_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>PKCS_7_ASN_ENCODING</td>
<td width=36%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pszOID</i></dt>
<dd>
If the high-order word of the OID is nonzero, <i>pszOID</i> is a pointer to either an OID string, such as "2.5.29.1" or an ASCII string, such as "file". If the high-order word of the OID is zero, the low-order word specifies the numeric identifier to be used as the object identifier. This resulting OID maps to the function that was either installed or registered with the same OID. </dd>
<dt>
<i>dwFlags</i></dt>
<dd>
The flag values.
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=39%>Flag Name</th>
<th align=left width=12%>Value</th>
<th align=left width=49%>Description</th>
</tr>
<tr valign=top>
<td width=39%>CRYPT_GET_INSTALLED _OID_FUNC_FLAG</td>
<td width=12%>0x1</td>
<td width=49%>Search only the installed list of functions.</td>
</tr>
</table>
</dd>
<dt>
</dt>
<dt>
<i>ppvFuncAddr</i></dt>
<dd>
If a match is found, *<i>ppvFuncAddr</i> contains the function address.</dd>
<dt>
<i>phFuncAddr</i></dt>
<dd>
If a match is found, *<i>phFuncAddr</i> contains the handle of the function address. The function's handle count is incremented. <a href="oidsupp_92nn.htm"><b>CryptFreeOIDFunctionAddress</b></a> needs to be called to release it.

<p>
<b>Note</b>&nbsp;&nbsp;By default, both the registered and installed function lists are searched. Set CRYPT_GET_INSTALLED_OID_FUNC_FLAG to search only the installed list of functions. This flag would be set by a registered function to get the address of a pre-installed function it was replacing. For example, the registered function might handle a new special case and call the pre-installed function to handle the remaining cases.

</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns TRUE if a match is found. Returns FALSE if a match is not found.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
