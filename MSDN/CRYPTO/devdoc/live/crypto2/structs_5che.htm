<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CERT_RDN_ATTR</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cert_rdn_attr"></a>CERT_RDN_ATTR</h1>
<p>
The <b>CERT_RDN_ATTR</b> structure are attributes that make up a Relative Distinguished Name (RDN). The interpretation of the data member <b>Value</b> depends on the <b>dwValueType</b>.</p>
<pre><code>typedef struct _CERT_RDN_ATTR {
    LPSTR                  pszObjId;
    DWORD                  dwValueType;
    CERT_RDN_VALUE_BLOB    Value;
} CERT_RDN_ATTR,          *PCERT_RDN_ATTR;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>pszObjId</b></dt>
<dd>
Currently defined <a href="structs_5oby.htm"><b>CERT_RDN</b></a> attribute object identifiers are shown in the following table.
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=58%>CERT_RDN attribute object identifier</th>
<th align=left width=15%>Value</th>
<th align=left width=27%>Comments</th>
</tr>
<tr valign=top>
<td width=58%>// Labeling attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_COMMON_NAME</td>
<td width=15%>"2.5.4.3"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_SUR_NAME </td>
<td width=15%>"2.5.4.4"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_DEVICE_SERIAL_NUMBER </td>
<td width=15%>"2.5.4.5"</td>
<td width=27%>printable string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Geographic attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_COUNTRY_NAME</td>
<td width=15%>"2.5.4.6"</td>
<td width=27%>printable 2char string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_LOCALITY_NAME</td>
<td width=15%>"2.5.4.7"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_STATE_OR_PROVINCE_NAME</td>
<td width=15%>"2.5.4.8"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_STREET_ADDRESS </td>
<td width=15%>"2.5.4.9"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Organizational attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_ORGANIZATION_NAME</td>
<td width=15%>"2.5.4.10"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_ORGANIZATIONAL_UNIT_NAME</td>
<td width=15%>"2.5.4.11"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_TITLE</td>
<td width=15%>"2.5.4.12"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Explanatory attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_DESCRIPTION </td>
<td width=15%>"2.5.4.13"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_SEARCH_GUIDE</td>
<td width=15%>"2.5.4.14"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_BUSINESS_CATEGORY</td>
<td width=15%>"2.5.4.15"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Postal addressing attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_POSTAL_ADDRESS </td>
<td width=15%>"2.5.4.16"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_POSTAL_CODE </td>
<td width=15%>"2.5.4.17"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_POST_OFFICE_BOX</td>
<td width=15%>"2.5.4.18"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_PHYSICAL_DELIVERY_OFFICE_NAME</td>
<td width=15%>"2.5.4.19"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Telecommunications addressing attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_TELEPHONE_NUMBER</td>
<td width=15%>"2.5.4.20"</td>
<td width=27%>telephone number</td>
</tr>
<tr valign=top>
<td width=58%>szOID_TELEX_NUMBER</td>
<td width=15%>"2.5.4.21"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_TELETEXT_TERMINAL_IDENTIFIER</td>
<td width=15%>"2.5.4.22"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_FACSIMILE_TELEPHONE_NUMBER</td>
<td width=15%>"2.5.4.23"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_X21_ADDRESS</td>
<td width=15%>"2.5.4.24"</td>
<td width=27%>numeric string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_INTERNATIONAL_ISDN_NUMBER</td>
<td width=15%>"2.5.4.25"</td>
<td width=27%>numeric string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_REGISTERED_ADDRESS</td>
<td width=15%>"2.5.4.26"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_DESTINATION_INDICATOR</td>
<td width=15%>"2.5.4.27"</td>
<td width=27%>printable string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Preference attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_PREFERRED_DELIVERY_METHOD</td>
<td width=15%>"2.5.4.28"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// OSI application attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_PRESENTATION_ADDRESS</td>
<td width=15%>"2.5.4.29"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_SUPPORTED_APPLICATION_CONTEXT</td>
<td width=15%>"2.5.4.30"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Relational application attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_MEMBER </td>
<td width=15%>"2.5.4.31"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_OWNER</td>
<td width=15%>"2.5.4.32"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_ROLE_OCCUPANT</td>
<td width=15%>"2.5.4.33"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_SEE_ALSO</td>
<td width=15%>"2.5.4.34"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Security attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_USER_PASSWORD</td>
<td width=15%>"2.5.4.35"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_USER_CERTIFICATE</td>
<td width=15%>"2.5.4.36"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_CA_CERTIFICATE</td>
<td width=15%>"2.5.4.37"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_AUTHORITY_REVOCATION_LIST</td>
<td width=15%>"2.5.4.38"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_CERTIFICATE_REVOCATION_LIST</td>
<td width=15%>"2.5.4.39"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_CROSS_CERTIFICATE_PAIR</td>
<td width=15%>"2.5.4.40"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>// Name attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_GIVEN_NAME</td>
<td width=15%>"2.5.4.42"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_INITIALS</td>
<td width=15%>"2.5.4.43"</td>
<td width=27%>case-ignore string</td>
</tr>
<tr valign=top>
<td width=58%>// Email:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_RSA_emailAddr</td>
<td width=15%>"1.2.840.<br>
113549.1.<br>
9.1"</td>
<td width=27%>IA5 string</td>
</tr>
<tr valign=top>
<td width=58%>szOID_DOMAIN_COMPONENT</td>
<td width=15%>"0.9.2342.<br>
19200300.<br>
100.1.25"</td>
<td width=27%>IA5 string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>//Pilot user attribute types:</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_DOMAIN_COMPONENT</td>
<td width=15%>"0.9.2342.<br>
19200300.<br>
100.1.25"</td>
<td width=27%>IA5 string</td>
</tr>
<tr valign=top>
<td width=58%></td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>//Used for PKCS 12 attributes</td>
<td width=15%></td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_PKCS_12_FRIENDLY_NAME_ATTR</td>
<td width=15%>"1.2.840.<br>
113549.1.<br>
9.20"</td>
<td width=27%></td>
</tr>
<tr valign=top>
<td width=58%>szOID_PKCS_12_LOCAL_KEY_ID</td>
<td width=15%>"1.2.840.<br>
113549.1.<br>
9.21"</td>
<td width=27%></td>
</tr>
</table><br>

</dd>
<dt>
<b>dwValueType</b></dt>
<dd>
For CERT_RDN_ENCODED_BLOB, the <b>Value</b>'s <b>CERT_RDN_VALUE_BLOB</b> is in its encoded representation. Otherwise, it's an array of bytes.
<p>
For all <a href="structs_5oby.htm"><b>CERT_RDN</b></a> types, <b>Value.cbData</b> is always the number of bytes, not necessarily the number of elements in the string. For instance, CERT_RDN_UNIVERSAL_STRING is an array of <b>int</b>s<b> </b>(<b>cbData</b> == <b>intCnt</b> * 4) and CERT_RDN_BMP_STRING is an array of unsigned <br>
<b>short</b>s (<b>cbData</b> == <b>ushortCnt</b> * 2).

<p>
The following <b>dwValueType</b>s are defined in Wincrypt.h:

<pre><code>#define CERT_RDN_ANY_TYPE                    0
#define CERT_RDN_ENCODED_BLOB                1
#define CERT_RDN_OCTET_STRING                2
#define CERT_RDN_NUMERIC_STRING              3
#define CERT_RDN_PRINTABLE_STRING            4
#define CERT_RDN_TELETEX_STRING              5
#define CERT_RDN_T61_STRING                  5
#define CERT_RDN_VIDEOTEX_STRING             6
#define CERT_RDN_IA5_STRING                  7
#define CERT_RDN_GRAPHIC_STRING              8
#define CERT_RDN_VISIBLE_STRING              9
#define CERT_RDN_ISO646_STRING               9
#define CERT_RDN_GENERAL_STRING              10
#define CERT_RDN_UNIVERSAL_STRING            11
#define CERT_RDN_INT4_STRING                 11
#define CERT_RDN_BMP_STRING                  12
#define CERT_RDN_UNICODE_STRING              12

#define CERT_RDN_TYPE_MASK                  0x000000FF
#define CERT_RDN_FLAGS_MASK .........       0xff000000
#define CERT_RDN_ENABLE_T61_UNICODE_FLAG    0x80000000
#define CERT_RDN_DISABLE_CHECK_TYPE_FLAG    0x40000000
#define CERT_RDN_DISABLE_IE4_UTF8_FLAG      0x01000000
 </code></pre>

<p>
The following table describes the type of content that corresponds to various <b>dwValueType</b>s.

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>dwValueType</th>
<th align=left width=46%>Value/ description</th>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_OCTET_STRING</td>
<td width=46%>An arbitrary string of octets (8-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_NUMERIC_STRING</td>
<td width=46%>Only the characters 0 through 9, and the space character (8-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_PRINTABLE_STRING</td>
<td width=46%>An arbitrary string of printable characters (8-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_TELETEX_STRING</td>
<td width=46%>An arbitrary string of T.61 (8-bit) characters</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_T61_STRING</td>
<td width=46%>An arbitrary string of T.61 (8-bit) characters</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_VIDEOTEX_STRING</td>
<td width=46%>An arbitrary string of VIDEOTEX characters</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_IA5_STRING</td>
<td width=46%>An arbitrary string of IA5 (ASCII) characters</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_VISIBLE_STRING</td>
<td width=46%>A 95-character set (8-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_ISO646_STRING</td>
<td width=46%>A 128-character set (8-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_UNIVERSAL_STRING</td>
<td width=46%>An array of<b> INT4</b>s (32-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_INT4_STRING</td>
<td width=46%>An array of <b>INT4</b>s (32-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_BMP_STRING</td>
<td width=46%>An array of Unicode characters (16-bit)</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_UNICODE_STRING</td>
<td width=46%>An array of Unicode characters (16-bit)</td>
</tr>
</table><br>

</dd>
</dl>
<p>
The following flags can be combined with a bitwise OR operation into CERT_RDN_ATTR data structure's <i>dwValueType</i>.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>dwValueType</th>
<th align=left width=46%>Value/ description</th>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_ENABLE_T61_<br>
UNICODE_FLAG</td>
<td width=46%>For encoding. When set, if all the UNICODE characters are &lt;= 0xFF, the CERT_RDN_T61_STRING is selected instead of the CERT_<br>
RDN_UNICODE_STRING.</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_DISABLE_CHECK_<br>
TYPE_FLAG</td>
<td width=46%>For encoding. When set, the characters are not checked to see if they are valid for the Value Type.</td>
</tr>
<tr valign=top>
<td width=54%>CERT_RDN_DISABLE_IE4_<br>
UTF8_FLAG</td>
<td width=46%>For decoding. By default, CERT_RDN_T61_STRING encoded values are initially decoded as UTF8. If the UTF8 decoding fails, then the value is decoded as 8 bit characters. If this flag is set, it skips the initial attempt to decode as UTF8 and decodes the value as 8 bit characters.</td>
</tr>
</table><br>
<dl>
<dt>
<b>Value</b></dt>
<dd>
Either a null-terminated array of 8-bit or 16-bit characters, an array of <b>INT4</b>s, or an encoded representation.
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="structs_0zmt.htm"><b>BLOB Structure</b></a>,<b> <a href="structs_5oby.htm">CERT_RDN</a></b>,<b> <a href="certhelp_66qt.htm">CertIsRDNAttrsInCertificateName</a> </b></p>
<p>&nbsp;</p></body>
</HTML>
