<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RSA_CSP_PUBLICKEYBLOB</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_rsa_csp_publickeyblob"></a>RSA_CSP_PUBLICKEYBLOB</h1>
<p>
When RSA_CSP_PUBLICKEYBLOB is used for the <i>lpszStructType</i> with <a href="wincert_9ius.htm"><b>CryptEncodeObject</b></a>, <a href="wincert_9ewo.htm"><b>CryptEncodeObjectEx</b></a>, <a href="wincert_0n90.htm"><b>CryptDecodeObject</b></a>, or <a href="wincert_5h2w.htm"><b>CryptDecodeObjectEx</b></a> the following details apply.</p>
<h4>Object Identifier String</h4>
<p>
N/A</p>
<h4>Corresponding Data Structure being encoded or decoded</h4>
<dl>
<dt>
For <b>CryptDecodeObject</b> and <b>CryptDecodeObjectEx</b>:  </dt>
<dd>
<i>pvStructInfo</i> points to a Public Key Blob Format immediately followed by a <a href="structs_3r95.htm">RSAPUBKEY</a> and the modulus bytes.</dd>
<dt>
For <a href="wincert_9ius.htm"><b>CryptEncodeObject</b></a> and <a href="wincert_9ewo.htm"><b>CryptEncodeObjectEx</b></a>:  </dt>
<dd>
<i>pvStructInfo</i> points to a Public Key Blob Format. 
</dd>
</dl>
<h4>Additional Details</h4>
<dl>
<dt>
For <a href="wincert_0n90.htm"><b>CryptDecodeObject</b></a> and <a href="wincert_5h2w.htm"><b>CryptDecodeObjectEx</b></a>:  </dt>
<dd>
<a href="capifunc_9y9l.htm"><b>CryptExportKey</b></a> outputs the StructInfo for a <i>dwBlobType</i> of PUBLICKEYBLOB. <a href="capifunc_5np5.htm"><b>CryptImportKey</b></a> expects the StructInfo when importing a public key.
<p>
For <i>dwCertEncodingType</i> = X509_ASN_ENCODING, the RSA_CSP_PUBLICKEYBLOB is encoded as a PKCS #1 RSAPublicKey consisting of a SEQUENCE of a modulus INTEGER and a publicExponent INTEGER. When decoded, if the modulus was encoded as an unsigned integer with a leading 0 byte, the 0 byte is removed before converting to the CSP modulus bytes. Since PKCS#1 doesn't have any intended key usage information, the <i>aiKeyAlg</i> field of the <a href="structs_7aya.htm">BLOBHEADER</a> structure is always set to CALG_RSA_KEYX.
</dd>
<dt>
For <a href="wincert_9ius.htm"><b>CryptEncodeObject</b></a> and <a href="wincert_9ewo.htm"><b>CryptEncodeObjectEx</b></a>: </dt>
<dd>
<a href="capifunc_9y9l.htm"><b>CryptExportKey</b></a> outputs the above StructInfo for a <i>dwBlobType</i> of PUBLICKEYBLOB. <a href="capifunc_5np5.htm"><b>CryptImportKey</b></a> expects the above StructInfo when importing a public key.
<p>
For <i>dwCertEncodingType</i> = X509_ASN_ENCODING, the RSA_CSP_PUBLICKEYBLOB is encoded as a PKCS #1 RSAPublicKey consisting of a SEQUENCE of a modulus INTEGER and a publicExponent INTEGER. The modulus is encoded as being an unsigned integer.

</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
