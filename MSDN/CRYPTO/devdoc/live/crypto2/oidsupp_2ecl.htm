<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptGetOIDFunctionValue</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptgetoidfunctionvalue"></a>CryptGetOIDFunctionValue</h1>
<p>
The <b>CryptGetOIDFunctionValue</b> function gets the value for the specified encoding type, function name, OID, and value name.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptGetOIDFunctionValue(
  DWORD</b><i> dwEncodingType</i><b>,        </b>// in
<b>  LPCSTR</b><i> pszFuncName</i><b>,          </b>// in
<b>  LPCSTR</b><i> pszOID</i><b>,               </b>// in
<b>  LPCWSTR</b><i> pwszValueName</i><b>,       </b>// in
<b>  DWORD </b><i>*pdwValueType</i><b>,         </b>// out
<b>  BYTE </b><i>*pbValueData</i><b>,           </b>// out
<b>  DWORD </b><i>*pcbValueData          </i>// in, out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwEncodingType</i></dt>
<dd>
The type of encoding specified. Note that either a certificate or message encoding type is required. If the low-order word containing the certificate encoding type is nonzero, then it is used. Otherwise, the high-order word containing the message encoding type is used. If both are specified, the certificate encoding type in the low-order word is used.
<p>
Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Encoding type</th>
<th align=left width=36%>Value</th>
</tr>
<tr valign=top>
<td width=64%>None</td>
<td width=36%>0x00000000</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>X509_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>PKCS_7_ASN_ENCODING</td>
<td width=36%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pszFuncName</i></dt>
<dd>
The name of the OID function set.</dd>
<dt>
<i>pszOID</i></dt>
<dd>
If the high-order word of the OID is nonzero, <i>pszOID</i> is a pointer to either an OID string, such as "2.5.29.1" or an ASCII string, such as "file". If the high-order word of the OID is zero, the low-order word specifies the numeric identifier to be used as the object identifier.</dd>
<dt>
<i>pwszValueName</i></dt>
<dd>
Points to a null-terminated UNICODE string containing the name of the value to be queried.</dd>
<dt>
<i>pdwValueType</i></dt>
<dd>
Points to a variable that receives the value's type. The type returned through this parameter will be one of the following:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=34%>Value</th>
<th align=left width=66%>Meaning</th>
</tr>
<tr valign=top>
<td width=34%>REG_DWORD</td>
<td width=66%>A 32-bit number.</td>
</tr>
<tr valign=top>
<td width=34%>REG_EXPAND_SZ</td>
<td width=66%>A null-terminated UNICODE string that contains unexpanded references to environment variables (for example, "%PATH%").</td>
</tr>
<tr valign=top>
<td width=34%>REG_MULTI_SZ</td>
<td width=66%>An array of null-terminated UNICODE strings, terminated by two null characters.</td>
</tr>
<tr valign=top>
<td width=34%>REG_SZ</td>
<td width=66%>A null-terminated UNICODE string.</td>
</tr>
</table><br>


<p>
The <i>pdwValueType </i>parameter can be NULL if the type is not required.
</dd>
<dt>
<i>pbValueData</i></dt>
<dd>
Points to a buffer that receives the value associated with the <i>pwszValueName </i>parameter. The buffer should be big enough to contain the terminating null character. This parameter can be NULL if the data is not required. 
<p>
This parameter can be NULL if you want to get the size of the buffer for memory allocation purposes. For more information, see <a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>.
</dd>
<dt>
<i>pcbValueData</i></dt>
<dd>
Points to a variable that specifies the size, in bytes of the buffer pointed to by the <i>pbValueData.</i>
<p>
In all cases the value returned in<i> *pcbValueData </i>always includes the size of the terminating null character in the string.

<p>
Note that when processing the data returned in the buffer, applications need to use the actual size of the data returned. The actual size may be slightly smaller than the size of the buffer specified on input. (On input, buffer sizes are usually specified large enough to insure that the largest possible output data will fit in the buffer.) On output, the variable pointed to by this parameter is updated to reflect the actual size of the data copied to the buffer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
Call <b>GetLastError</b> to see the reason for any failures.</p>
<p>
This function has the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>ERROR_MORE_DATA</td>
<td width=60%>If the buffer specified by the <i>pbValueData </i>parameter is not large enough to hold the returned data, the function sets the ERROR_MORE_DATA code, and stores the required buffer size, in bytes, into the variable pointed to by <i>pcbValueData</i>.</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
