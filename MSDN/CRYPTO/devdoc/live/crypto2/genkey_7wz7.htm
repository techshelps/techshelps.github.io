<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Session Keys</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_crypto2_using_session_keys"></a>Using Session Keys</h2>
<p>
Applications can create any number of session keys, which can be used to encrypt messages. However, these keys are <i>not</i> preserved by the CSP from session to session. If you want to use a key for long periods, you need to export the key out of the CSP and into your application for long-term storage. The procedure for doing this is discussed in <a href="xchgkeys_3hkj.htm">Exchanging Cryptographic Keys</a>. </p>
<p>
Session keys are created by using either the <a href="capifunc_4ptl.htm"><b>CryptGenKey</b></a> function or the <a href="capifunc_88jd.htm"><b>CryptDeriveKey</b></a> function. When these keys are generated, it is necessary to specify the algorithm to use for any subsequent encryption/decryption operations. This algorithm must be one of the symmetric algorithms supported by the CSP being used.</p>
<p>&nbsp;</p></body>
</HTML>
