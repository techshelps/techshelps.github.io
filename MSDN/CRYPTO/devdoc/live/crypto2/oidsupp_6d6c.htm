<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptGetDefaultOIDDllList</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptgetdefaultoiddlllist"></a>CryptGetDefaultOIDDllList</h1>
<p>
The <b>CryptGetDefaultOIDDllList</b> function gets the list of registered default Dll entries for the specified function set and encoding type.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptGetDefaultOIDDllList(
  HCRYPTOIDFUNCSET</b><i> hFuncSet</i><b>,  </b>// in
<b>  DWORD</b><i> dwEncodingType</i><b>,       </b>// in
<b>  LPWSTR</b><i> pwszDllList</i><b>,         </b>// out
<b>  DWORD </b><i>*pcchDllList          </i>// in, out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hFuncSet</i></dt>
<dd>
Function set handle previously obtained from a call to <a href="oidsupp_1dx0.htm"><b>CryptInitOIDFunctionSet</b></a>.</dd>
<dt>
<i>dwEncodingType</i></dt>
<dd>
Type of encoding specified. Note that either a certificate or message encoding type is required. If the low-order word containing the certificate encoding type is nonzero, then it is used. Otherwise, the high-order word containing the message encoding type is used. If both are specified, the certificate encoding type in the low-order word is used.
<p>
Currently defined encoding types are shown in the following table:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=64%>Encoding type</th>
<th align=left width=36%>Value</th>
</tr>
<tr valign=top>
<td width=64%>None</td>
<td width=36%>0x00000000</td>
</tr>
<tr valign=top>
<td width=64%>CRYPT_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>X509_ASN_ENCODING</td>
<td width=36%>0x00000001</td>
</tr>
<tr valign=top>
<td width=64%>PKCS_7_ASN_ENCODING</td>
<td width=36%>0x00010000</td>
</tr>
</table><br>

</dd>
<dt>
<i>pwszDllList</i></dt>
<dd>
Pointer to a buffer that receives the returned list, which consists of either none, one, or more null-terminated file names. The returned list is terminated with a null entry in the list. <br>
For exampe, L"first.dll" L"\0" L"second.dll" L"\0" L"\0" 
<p>
This parameter can be NULL to set the number of wide characters in the list for memory allocation purposes. For more information, see <a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>. 
</dd>
<dt>
<i>pcchDllList</i></dt>
<dd>
Pointer to a variable that specifies the size, in wide characters, of the returned list pointed to by <i>pwszDllList parameter</i>. When the function returns, the variable pointed to by the <i>pcchDllList </i>parameter contains the number of bytes stored in the buffer. This parameter can be NULL, only if <i>pwszDllList </i>is NULL.
<p>
Note that when processing the data returned in the buffer, applications need to use the actual size of the data returned. The actual size may be slightly smaller than the size of the buffer specified on input. (On input, buffer sizes are usually specified large enough to insure that the largest possible output data will fit in the buffer.) On output, the variable pointed to by this parameter is updated to reflect the actual size of the data copied to the buffer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed. </p>
<p>
Call <b>GetLastError</b> to see the reason for any failures.</p>
<p>
This function has the following error codes.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>ERROR_MORE_DATA</td>
<td width=60%>If the buffer specified by the <i>pwszDllList </i>parameter is not large enough to hold the returned data, the function sets the ERROR_MORE_DATA code, and stores the required buffer size, in bytes, into the variable pointed to by <i>pcchDllList</i>.</td>
</tr>
<tr valign=top>
<td width=40%></td>
<td width=60%></td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 4.0 SP3 or later. Available also in IE 3.02 and later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98 (or Windows 95 with IE 3.02 or later).<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<p>&nbsp;</p></body>
</HTML>
