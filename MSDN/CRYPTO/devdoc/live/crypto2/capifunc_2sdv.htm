<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CryptEnumProviderTypes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_cryptenumprovidertypes"></a>CryptEnumProviderTypes</h1>
<p>
The <b>CryptEnumProviderTypes</b> function is used to enumerate the types of providers supported on the machine.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CryptEnumProviderTypes(
  DWORD</b><i> dwIndex</i><b>,        </b>// in
<b>  DWORD </b><i>*pdwReserved</i><b>,   </b>// in
  <b>DWORD</b> <i>dwFlags</i><b>,</b>        // in
<b>  DWORD </b><i>*pdwProvType</i><b>,   </b>// out
<b>  LPTSTR</b><i> pszTypeName</i><b>,   </b>// out
<b>  DWORD </b><i>*pcbTypeName    </i>// in/out
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwIndex</i></dt>
<dd>
The index of the next provider type to be enumerated.</dd>
<dt>
<i>pdwReserved</i></dt>
<dd>
This parameter is reserved for future use and must be NULL.</dd>
<dt>
<i>dwFlags</i></dt>
<dd>
The flag values. This parameter is reserved for future use and should always be zero.</dd>
<dt>
<i>pdwProvType</i></dt>
<dd>
The address of the DWORD value designating the enumerated provider type.</dd>
<dt>
<i>pszTypeName</i></dt>
<dd>
Pointer to a buffer that receives the data from the enumerated provider type. This is a string including the terminating NULL character. There are provider types which may not have friendly names and in this case no name will be returned and the returned value pointed to by <i>pcbTypeName</i> will be 0.
<p>
This parameter can be NULL if you want to get the size of the name for memory allocation purposes. For more information, see the "<a href="refoview_46pf.htm">Common In/Out Parameter Conventions</a>" section at the beginning of this Reference.
</dd>
<dt>
<i>pcbTypeName</i></dt>
<dd>
Pointer to a variable that specifies the size, in bytes, of the buffer pointed to by the <i>pszTypeName </i>parameter. When the function returns, the variable pointed to by the <i>pcbTypeName </i>parameter contains the number of bytes stored in the buffer. This parameter can be NULL, only if <i>pszTypeName </i>is NULL. There are provider types which may not have friendly names and in this case no name will be returned and the returned value pointed to by <i>pcbTypeName</i> will be 0.
<p>
Note that when processing the data returned in the buffer, applications need to use the actual size of the data returned. The actual size may be slightly smaller than the size of the buffer specified on input. (On input, buffer sizes are usually specified large enough to insure that the largest possible output data will fit in the buffer.) On output, the variable pointed to by this parameter is updated to reflect the actual size of the data copied to the buffer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is TRUE. If it fails, the return value is FALSE. To retrieve extended error information, use the <b>GetLastError</b> function.</p>
<p>
The following table lists the error codes most commonly returned by the <b>GetLastError</b> function. The error codes prefaced by "NTE" are generated by the particular CSP you are using.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Error code</th>
<th align=left width=46%>Description</th>
</tr>
<tr valign=top>
<td width=54%>ERROR_NO_MORE_ITEMS</td>
<td width=46%>There are no more items to enumerate.</td>
</tr>
<tr valign=top>
<td width=54%>ERROR_NOT_ENOUGH_MEMORY</td>
<td width=46%>The operating system ran out of memory.</td>
</tr>
<tr valign=top>
<td width=54%>NTE_BAD_FLAGS</td>
<td width=46%><i>dwFlags</i> has an unrecognized value.</td>
</tr>
<tr valign=top>
<td width=54%>NTE_FAIL</td>
<td width=46%>Something was wrong with the type registration.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<b>CryptEnumProviderTypes</b> is used to enumerate the provider types on a machine. Once this is done, the providers for a specific type may be enumerated by using <a href="capifunc_87hv.htm"><b>CryptEnumProviders</b></a>.</p>
<h4>Example</h4>
<pre><code>long   i;
DWORD  dwErr;

// Loop through enumerating provider types.
for (i=0;;i++)
{
if (!CryptEnumProviderTypes(i, NULL, 0, &amp;dwType, NULL, NULL))
   {if (ERROR_NO_MORE_ITEMS != (dwErr = GetLastError()))
       {printf("ERROR - CryptEnumProviderTypes : %X\n", dwErr);
       }
    break;
   }
printf ("Provider Type %d\n", dwType);
}
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use advapi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined as Unicode and ANSI prototypes.</p>
<h4>See Also</h4>
<p>
<a href="capifunc_87hv.htm"><b>CryptEnumProviders</b></a></p>
<p>&nbsp;</p></body>
</HTML>
