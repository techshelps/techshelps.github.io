<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Microsoft Enhanced Cryptographic Provider, version 2.0</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_the_microsoft_enhanced_cryptographic_provider_version_2.0"></a>The Microsoft Enhanced Cryptographic Provider, version 2.0</h1>
<p>
The Microsoft® Enhanced Cryptographic Provider (Enhanced Provider) supports the same capabilities as the Microsoft Base Cryptographic Provider (Base Provider), but provides for stronger security through longer keys and additional algorithms. It can be used with CryptoAPI version 1.0 and version 2.0.</p>
<p>
<b>Note</b>&nbsp;&nbsp;The Enhanced Provider is currently available only within North America. </p>
<p>
To maintain backward compatibility with earlier versions of this provider, the name, as defined in the Wincrypt.h header file, retains the version 1.0 designation. However, version 2.0 of this provider is currently shipping. To see which version of the provider you have, make a call to <a href="capifunc_4vxp.htm"><b>CryptGetProvParam</b></a> with the <i>dwParam</i> argument set to PP_VERSION. If 0x0200 is returned in <i>pbData</i>, then you have version 2.0.<b><br>
Provider Type:</b> PROV_RSA_FULL<br>
<b>Provider Name:</b> MS_ENHANCED_PROV</p>
<p>
The following table shows the differences between the Base Provider, and the Enhanced Provider. The key lengths shown are the default keylengths.</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=31%>Algorithm</th>
<th align=left width=34%>Base Provider</th>
<th align=left width=35%>Enhanced Provider</th>
</tr>
<tr valign=top>
<td width=31%>RSA public-key signature algorithm</td>
<td width=34%>Key length: 512 bits.</td>
<td width=35%>Key length: 1,024 bits.</td>
</tr>
<tr valign=top>
<td width=31%>RSA public-key exchange algorithm</td>
<td width=34%>Key length: 512 bits.</td>
<td width=35%>Key length: 1,024 bits.</td>
</tr>
<tr valign=top>
<td width=31%>RC2 block encryption algorithm</td>
<td width=34%>Key length: 40 bits.</td>
<td width=35%>Key length: 128 bits.<br>
Salt length: settable.</td>
</tr>
<tr valign=top>
<td width=31%>RC4 stream encryption algorithm</td>
<td width=34%>Key length: 40 bits.</td>
<td width=35%>Key length: 128 bits.<br>
Salt length: settable.</td>
</tr>
<tr valign=top>
<td width=31%>DES</td>
<td width=34%>Not supported.</td>
<td width=35%>Key length: 56 bits.</td>
</tr>
<tr valign=top>
<td width=31%>Triple DES (2 key)</td>
<td width=34%>Not supported.</td>
<td width=35%>Key length: 112 bits.</td>
</tr>
<tr valign=top>
<td width=31%>Triple DES (3 key)</td>
<td width=34%>Not supported.</td>
<td width=35%>Key length: 168 bits.</td>
</tr>
</table><br>
<p>
The Enhanced Cryptographic Provider is backward-compatible with the Base Cryptographic Provider distributed with CryptoAPI versions 1.0 and 2.0, with the following exception: </p>
<p class=indent1>
For session keys, the base provider is limited to generating and deriving RC2 or RC4 keys of default key length (40 bit for the Base Provider, and 128 bit for the Enhanced Provider). This precludes the Enhanced Provider from creating keys with Base Provider-compatible key lengths. However, the Enhanced Provider can import RC2 and RC4 keys, up to 128 bits. In other words, 40 bit keys that have been generated using the Base Provider can be imported into the Enhanced Provider and used from there.</p>
<p>&nbsp;</p></body>
</HTML>
