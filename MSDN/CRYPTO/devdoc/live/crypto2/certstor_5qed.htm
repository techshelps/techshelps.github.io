<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CertAddCertificateLinkToStore</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_crypto2_certaddcertificatelinktostore"></a>CertAddCertificateLinkToStore</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>CertAddCertificateLinkToStore</b> function adds a link in a certificate store to a certificate context in a different store. Instead of creating and adding a duplicate of the certificate context, this function adds a link to the original certificate wherever it may be. Because the link provides access to the original certificate context, setting an extended property in the linked certificate context changes that property as seen in the certificate's original location and by any other links to that certificate.</p>
<pre><code><b>#include &lt;wincrypt.h&gt;
BOOL WINAPI CertAddCertificateLinkToStore(
  HCERTSTORE</b><i> hCertStore</i><b>,                </b>// in
<b>  PCCERT_CONTEXT </b><i>pCertContext,</i>          // in
<b>  DWORD</b><i> dwAddDisposition</i><b>,               </b>// in
<b>  PCCERT_CONTEXT </b><i>*ppStoreContext        </i>// out optional
<b>);</b> 
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCertStore</i></dt>
<dd>
Handle to the certificate store where the link is to be added.</dd>
<dt>
<i>pCertContext</i></dt>
<dd>
Pointer to the certificate context that is to be linked.</dd>
<dt>
<i>dwAddDisposition</i></dt>
<dd>
Value that specifies the action if a matching certificate or a link to a matching certificate already exists in the store. Currently defined disposition values and their uses are:
<dl>
<dt>
CERT_STORE_ADD_NEW</dt>
<dd>
If a matching certificate or a link to a matching certificate exists, the operation fails. <b>GetLastError</b> returns CRYPT_E_EXISTS.</dd>
<dt>
CERT_STORE_ADD_USE_EXISTING</dt>
<dd>
If a matching certificate or a link to a matching certificate exists, the existing certificate is used. The function does not fail, but no new link is added. If no matching certificate or link to a matching certificate exists, a new link is added. </dd>
<dt>
CERT_STORE_ADD_REPLACE_EXISTING</dt>
<dd>
If a link to a matching certificate exists, that existing link is deleted and a new link is created and added to the store. If no matching certificate or link to a matching certificate exists, one is added.</dd>
<dt>
CERT_STORE_ADD_ALWAYS</dt>
<dd>
Makes no check for an existing matching certificate or link to a matching certificate. A new link is always added to the store. This may lead to duplicates in a store.</dd>
<dt>
CERT_STORE_ADD_NEWER</dt>
<dd>
If a matching certificate or a link to a matching certificate exists, compares the NotBefore times on the certificates. If the existing certificate has a NotBefore time less than the NotBefore time on the new certificate, the old link is replaced just as with CERT_STORE_ADD_REPLACE_EXISTING. If the existing certificate has a NotBefore time greater than or equal to the NotBefore time on the certificate to be added, the function fails with <b>GetLastError</b> returning CRYPT_E_EXISTS.
<p>
If a matching certificate or a link to a matching certificate is not found in the store, the function adds a new link to the store.
</dd>
</dl>
</dd>
<dt>
<i>ppStoreContext </i></dt>
<dd>
Pointer to a pointer to a copy of the link created. <i>ppStoreContext </i>can be NULL to indicate that a copy of the link is not needed. If a copy of the link is created, that copy must be freed using <a href="certstor_1tv8.htm"><b>CertFreeCertificateContext</b></a>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
TRUE if the function succeeded. FALSE if the function failed.</p>
<p>
<b>GetLastError</b> returns the code for any failures<b> </b>using the following error codes:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Error code</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>CRYPT_E_EXISTS</td>
<td width=60%>For a <i>dwAddDisposition</i> of CERT_STORE_ADD_NEW, the certificate already exists in the store.</td>
</tr>
<tr valign=top>
<td width=40%>E_INVALIDARG </td>
<td width=60%>Invalid add disposition specified by the <i>dwAddDisposition</i> argument.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
Links cannot be added to a store opened as a collection. Stores opened as collections include all stores opened with <a href="certstor_27s5.htm"><b>CertOpenSystemStore</b></a><b> </b>or <a href="certstor_12sl.htm"><b>CertOpenStore</b></a> using CERT_STORE_PROV_SYSTEM or CERT_STORE_PROV_COLLECTION. Also see <a href="certstor_2uni.htm"><b>CertAddStoreToCollection</b></a>. </p>
<p>
If links are used and <a href="certstor_9vqd.htm"><b>CertCloseStore</b></a> is called with CERT_CLOSE_STORE_FORCE_FLAG, the store using links must be closed before the store containing the original contexts is closed. If CERT_CLOSE_STORE_FORCE_FLAG is not used, the two stores may be closed in either order.</p>
<h4>Example</h4>
<pre><code>HCERTSTORE      hLinkStoreHandle;
HCERTSTORE      hOriginalStoreHandle;
PCCERT_CONTEXT  DesiredCert = NULL;
// Open a memory store where links will be added.
// For details, see CertOpenStore.
hLinkStoreHandle = CertOpenStore(
CERT_STORE_PROV_MEMORY,0,NULL,0,NULL);
// Open a system store where certificates can be found
// so that links can be added to hLinkStore. 
// For details, see CertOpenStore.
hOriginalStoreHandle = CertOpenStore(
CERT_STORE_PROV_SYSTEM,
0,
NULL,
CERT_SYSTEM_STORE_CURRENT_USER,
L"MY");

// Get the first certificate in the system store.
DesiredCert= CertEnumCertificatesInStore(
hOriginalStoreHandle,DesiredCert);              
// Add a link to the certificate to hLinkStoreHandle store.
if(CertAddCertificateLinkToStore(
     hLinkStoreHandle,             // The store handle.
     DesiredCert,                  // A pointer to a Cert.
CERT_STORE_ADD_USE_EXISTING,  // If a matching cert exists, 
// use it.
     NULL                          // Do not make any extra copy of
                                   // the certificate.
     )) 
printf("A link has been added to the store. \n");
else
printf("A new link to a cert was not added to the store. \n");
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wincrypt.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use crypt32.lib.</p>
<h4>See Also</h4>
<p>
<a href="certstor_27s5.htm"><b>CertOpenSystemStore</b></a>,<b> <a href="certstor_2uni.htm">CertAddStoreToCollection</a></b>,<b> <a href="certstor_723p.htm">CertAddCRLLinkToStore</a></b>,<b> <a href="certstor_7un9.htm">CertAddCTLLinkToStore</a></b>,<b> <a href="certstor_1tv8.htm">CertFreeCertificateContext</a></b></p>
<p>&nbsp;</p></body>
</HTML>
