<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Missing Dependency Information Dialog Box</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbhowsetupwizardstep5"></a>Missing Dependency Information Dialog Box (Package and Deployment Wizard)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbhowSetupWizardStep5C">
</object></p>
<p>
The Package and Deployment Wizard is unable to find dependency information for the files displayed in the list. The wizard looks for dependency information in special dependency (.dep) files and in the vb6dep.ini file. Dependency information in the form of a .dep file or a section in vb6dep.ini should exist for each .exe, .ocx, and .dll file in your package.</p>
<p>
You can resolve missing dependencies in three ways:
<ul type=disc>
<li>
If a file comes from a third party, contact that party for dependency information or for the necessary dependency files.<br><br></li>
<li>
If one of the files in the list is a project you created in Visual Basic, you can use the Package and Deployment Wizard to create a dependency file for it. Restart the wizard, select the project file for the component, and choose the Dependency File&nbsp; option on the Package Type screen. Continue through all the steps to create the missing dependency file. Place this file in the same folder as the .exe, .ocx, or .dll that it describes. Then, restart the Package and Deployment Wizard and try packaging the current project again.<br><br></li>
<li>
If you are certain that a file in the list does not require any support files, select the check box that appears to the left of it. This lets the wizard know that this file has no dependencies, and prevents the file from appearing in this dialog in the future.</li>
</ul>
<h3>Options</h3>
<p class=dt>
<b>Files List</b></p>
<p class=indent>
Lists the name and the location of each file for which the wizard cannot locate dependency information.</p>
<p class=tl>
Click the box to the left of the file name to indicate that the file has no dependencies.</P><p class=tl>
When you move the mouse cursor over an entry in this list, a tooltip appears, listing the files for which the given file is needed or stating that the given file was manually added to the list.</P><p class=dt>
<b>OK</b></p>
<p class=indent>
Tells the Package and Deployment Wizard to proceed without the dependency information for the listed files.</p>
<p class=dt>
<b>Cancel</b></p>
<p class=indent>
Closes the dialog box and returns you to the appropriate screen. Choose this option if you want to exit the wizard and create a dependency file for the necessary component, then re-run the packaging process for this project.</p>
<p class=dt>
<b>Help</b></p>
<p class=indent>
Displays the help topic for this step. You can also press F1 for help.</p>
</BODY>
</HTML>
