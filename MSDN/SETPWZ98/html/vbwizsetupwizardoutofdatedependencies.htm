<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Out of Date Dependencies Dialog Box</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbwizsetupwizardoutofdatedependencies"></a>Out of Date Dependencies Dialog Box (Package and Deployment Wizard)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbwizSetupWizardOutOfDateDependenciesC">
</object></p>
<p>
Lists the files in your project for which dependency information is out of date. The wizard determines if dependency information is out of date by comparing the version information in the .dep file to the version information in the component.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The version information in the dependent file must be an exact match. Either older or newer versions are considered out of date.</p>
<p>
Outdated dependency information can cause your application to fail to work correctly after installation. You can continue, using the dependency information even though it is out of date, or you can resolve the out of date dependency information in one of several ways:
<ul type=disc>
<li>
If the indicated file(s) comes from a third party, contact that party for updated dependency (.dep) files.<br><br></li>
<li>
If the indicated file(s) is a Visual Basic component that you created, restart the Package and Deployment Wizard, select the project file for this component, and choose the Dependency File option on the Package Type screen. Continue through all the steps to create the dependency file, then restart the Package and Deployment Wizard and try packaging the current project again.</li>
</ul>
<h3>Options</h3>
<p class=dt>
<b>Files With Out of Date Dependencies List</b></p>
<p class=indent>
Lists the files that have dependency information that is out of date.</p>
<p class=tl>
When you move the mouse cursor over an entry in this list, a tooltip appears, listing the files for which the given file is needed or stating that the given file was manually added to the list.</P><p class=dt>
<b>OK</b></p>
<p class=indent>
Tells the Package and Deployment Wizard to proceed without resolving the dependency information for the selected file.</p>
<p class=dt>
<b>Cancel</b></p>
<p class=indent>
Closes the dialog box and returns you to the appropriate screen. Choose this option if you want to exit the wizard and create a new dependency file for the necessary components, then re-run the packaging process for this project.</p>
<p class=dt>
<b>Help</b></p>
<p class=indent>
Displays the help topic for this step. You can also press F1 for help.</p>
</BODY>
</HTML>
