<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DVM_STREAM_PREPAREHEADER</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DVM_STREAM_PREPAREHEADER"></A>DVM_STREAM_PREPAREHEADER</H2>
<P>
The DVM_STREAM_PREPAREHEADER message requests a user-mode video capture driver
to prepare a data buffer for use.
<H5>Parameters</H5>
<DL>
<DT>
<I>dwDriverID</I>
<DD>
Video channel identifier. For this message, the driver should only accept
VIDEO_IN. (For details, see <A HREF="vcap_9.htm">Opening Video
Channels</A>.)
<BR>
<DT>
<I>hDriver</I>
<DD>
Driver handle.
<BR>
<DT>
<I>uMsg</I>
<DD>
DVM_STREAM_PREPAREHEADER
<BR>
<DT>
<I>lParam1</I>
<DD>
Pointer to a <A HREF="vcap_76.htm">VIDEOHDR</A>&nbsp;structure.
<BR>
<DT>
<I>lParam2</I>
<DD>
Size of the VIDEOHDR structure.
</DL>
<H5>Return Value</H5>
<P>
The driver should return DV_ERR_OK if the operation succeeds. Otherwise, it
should return one of the DV_ERR error codes defined in <I>msvideo.h</I>.
Custom error codes are also allowed (see <A HREF="vcap_48.htm">DVM_GETERRORTEXT</A>).
<H5>Comments</H5>
<P>
A client sends the DVM_STREAM_PREPAREHEADER message by calling the driver’s <B><A HREF="intro_44.htm">DriverProc</A></B>
entry point, passing the specified parameter values. Applications can send
this message by calling the <B>videoStreamPrepareHeader</B>&nbsp;function, which is
described in the Video for Windows Development Kit.
<P>
Use of this message is meant to ensure that the specified buffer is accessible
by the kernel-mode driver. If the driver returns DV_ERR_NOTSUPPORTED, then <I>msvfw32.dll</I>
or <I>avicap32.dll</I>&nbsp;will prepare the buffer. For most drivers, this
behavior is sufficient. If the driver does perform buffer preparation, it
should return DV_ERR_OK, which causes <I>msvfw32.dll</I>&nbsp;or <I>avicap32.dll</I>
to set the VHDR_PREPARED flag in the <A HREF="vcap_76.htm">VIDEOHDR</A>
structure’s <B>dwFlags</B>&nbsp;member.
<P>
Drivers assume that the VIDEOHDR structure and the data buffer pointed to by
its <B>lpData</B>&nbsp;member have been allocated with <B>GlobalAlloc</B>, using
the GMEM_MOVEABLE and GMEM_SHARE flags, and locked with <B>GlobalLock</B>.
(For further information about <B>GlobalAlloc</B>&nbsp;and <B>GlobalLock</B>, see
the Win32 SDK.)
<P>
For information about using data buffers with video capture streams, see <A HREF="vcap_16.htm">Transferring
Streams of Captured Data</A>.
<P></FONT>
</BODY>
</HTML>
