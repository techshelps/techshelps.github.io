<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VIDEOHDR</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_VIDEOHDR"></A>VIDEOHDR</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
LPBYTE lpData;
DWORD dwBufferLength;
DWORD dwBytesUsed;
DWORD dwTimeCaptured;
DWORD dwUser;
DWORD dwFlags;
DWORD dwReserved[4];
} VIDEOHDR;</FONT></PRE>
<P>
The VIDEOHDR structure describes a client-supplied buffer for receiving video
capture data. Drivers receive this structure along with  <A HREF="vcap_53.htm">DVM_STREAM_ADDBUFFER</A>,
<A HREF="vcap_60.htm">DVM_STREAM_PREPAREHEADER</A>, and <A HREF="vcap_64.htm">DVM_STREAM_UNPREPAREHEADER</A>
messages. The structure is defined in <I>msvideo.h</I>.
<H5>Members</H5>
<DL>
<DT>
<B>lpData</B>
<DD>
Pointer to a buffer.
<BR>
<DT>
<B>dwBufferLength</B>
<DD>
Length of the buffer.
<BR>
<DT>
<B>dwBytesUsed</B>
<DD>
Number of bytes used in the buffer.
<BR>
<DT>
<B>dwTimeCaptured</B>
<DD>
Capture time for the frame, in milliseconds, relative to the capture time of
the stream’s first frame.
<BR>
<DT>
<B>dwUser</B>
<DD>
Contains 32 bits of client-specified data.
<BR>
<DT>
<B>dwFlags</B>
<DD>
Contains flags. The following flags are defined.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Flag</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Definition</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VHDR_DONE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set by the device driver to indicate it is finished with the data buffer and
is returning the buffer to the client.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VHDR_PREPARED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates whether or not the buffer has been prepared for use. See <A HREF="vcap_60.htm">DVM_STREAM_PREPAREHEADER</A>.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VHDR_INQUEUE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set by the driver to indicate the buffer is in the driver’s buffer queue.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VHDR_KEYFRAME
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set by the device driver to indicate a key frame.
</FONT></TABLE>
<DT>
<B>dwReserved[4]</B>
<DD>
Reserved for use by the device driver. Typically, drivers use this area to
maintain a buffer queue.
</DL>
<H5>Comments</H5>
<P>
The client supplies values for the <B>lpData</B>, <B>dwBufferLength</B>, and <B>dwUser</B>
members. The driver fills in the <B>dwBytesUsed</B>, <B>dwTimeCaptured</B>,
and <B>dwFlags</B>&nbsp;members. Drivers <A HREF="vcap_18.htm">using <I>VCUser.lib</A></I>
do not need to maintain the <B>dwFlags</B>&nbsp;member, because code within <I>VCUser.lib</I>
handles the flags.
<P></FONT>
</BODY>
</HTML>
