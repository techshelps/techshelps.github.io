<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIXER_INFO</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MIXER_INFO"></A>MIXER_INFO</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _MIXER_INFO {
&nbsp; &nbsp; ULONG    Key;
#define MIX_INFO_KEY       (*(ULONG *)&quot;Mix&quot;)
&nbsp; &nbsp; UCHAR         NumberOfLines;
&nbsp; &nbsp; UCHAR         NumberOfControls;
&nbsp; &nbsp; LARGE_INTEGER CurrentLogicalTime;
&nbsp; &nbsp; LIST_ENTRY    NotifyQueue;
&nbsp; &nbsp; LIST_ENTRY    ChangedItems;
&nbsp; &nbsp; PMIXER_DD_GET_SET_DATA HwGetLineData;
&nbsp; &nbsp; PMIXER_DD_GET_SET_DATA HwGetControlData;
&nbsp; &nbsp; PMIXER_DD_GET_SET_DATA HwGetCombinedControlData;
&nbsp; &nbsp; PMIXER_DD_GET_SET_DATA HwSetControlData;
} MIXER_INFO, *PMIXER_INFO;
&nbsp;</FONT></PRE>
<P>
The MIXER_INFO structure contains context information for a mixer device.
<H5>Members</H5>
<DL>
<DT>
<B>Key</B>
<DD>
Internal only, for debugging. Should be “Mix”.
<BR>
<DT>
<B>NumberOfLines</B>
<DD>
Number of mixer lines.
<BR>
<DT>
<B>NumberOfControls</B>
<DD>
Number of mixer controls.
<BR>
<DT>
<B>CurrentLogicalTime</B>
<DD>
Internal only. Incremented each time an item is added to the <B>ChangedItems</B>
queue. Used as a reference for determining the relative age of changed items.
<BR>
<DT>
<B>NotifyQueue</B>
<DD>
Internal only. Pointer to an IRP queue of change notification targets. An IRP
is added each time <I>soundlib.lib</I>&nbsp;receives an IOCTL_MIX_REQUEST_NOTIFY
message.
<BR>
<DT>
<B>ChangedItems</B>
<DD>
Internal only. Pointer to a list of mixer items of type <A HREF="audiodrv_214.htm">MIXER_DATA_ITEM</A>.
Modified by <B><A HREF="audiodrv_187.htm">SoundMixerChangedItem</A></B>.
<BR>
<DT>
<B>HwGetLineData</B>
<DD>
Pointer to a driver-supplied function that <B><A HREF="audiodrv_188.htm">SoundMixerDispatch</A></B>
calls when it receives an IOCTL_MIX_GET_LINE_DATA message. The function type
is <A HREF="audiodrv_216.htm">PMIXER_DD_GET_SET_DATA</A>, where the <I>data</I>
parameter is a pointer to the <B>fdwLine</B>&nbsp;member of a MIXERLINE structure,
and the <I>length</I>&nbsp;parameter is the member’s size. The function sets one or
more of the following flags in the address pointed to by <I>data</I>.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Flag</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Definition</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MIXERLINE_LINEF_ACTIVE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the line is active. Used mainly for waveform devices so the
application can determine when to poll the peak meter.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MIXERLINE_LINEF_DISCONNECTED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the line is permanently unavailable. Useful for disabling
capabilities available only on some versions of the hardware.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MIXERLINE_LINEF_SOURCE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates this is a source line, not a destination line.
</FONT></TABLE>
<P>
These flags are defined in <I>mmsystem.h</I>. The MIXERLINE structure is
described in the Win32 SDK.
<BR>
<DT>
<B>HwGetControlData</B>
<DD>
Pointer to a driver-supplied function that <B><A HREF="audiodrv_188.htm">SoundMixerDispatch</A></B>
calls when it receives an IOCTL_MIX_GET_CONTROL_DATA message. The function
type is <A HREF="audiodrv_216.htm">PMIXER_DD_GET_SET_DATA</A>, where the
<I>length</I>&nbsp;parameter is the size of the return buffer and the <I>data</I>
parameter is the return buffer’s address. This address is the <B>paDetails</B>
member of a MIXERCONTROLDETAILS structure. See the description of
MIXERCONTROLDETAILS in the Win32 SDK for information on how the buffer should
be filled.
<BR>
<DT>
<B>HwGetCombinedControlData</B>
<DD>
Pointer to a driver-supplied function that returns the current values for the
volume controls. If the volume is controlled by mixer hardware, then always
return 0xFFFF for each control. Otherwise, if the master volume is supported
in hardware, return the current value of the control. If the master volume is
simulated, return the combined volume and master volume as a volume value<B>.</B>
<P>
The function type is <A HREF="audiodrv_216.htm">PMIXER_DD_GET_SET_DATA</A>,
where the <I>data</I>&nbsp;parameter is a pointer to a WAVE_DD_VOLUME structure and
the <I>length</I>&nbsp;parameter is the structure’s size.
<BR>
<DT>
<B>HwSetControlData</B>
<DD>
Pointer to a driver-supplied function that <B><A HREF="audiodrv_188.htm">SoundMixerDispatch</A></B>
calls when it receives an IRP_MJ_WRITE message to set control items. The <I>soundlib.lib</I>
dispatchers for waveform, MIDI synthesizer, and auxiliary audio devices also
call this function to set volume levels. Function type is <A HREF="audiodrv_216.htm">PMIXER_DD_GET_SET_DATA</A>,
where the <I>length</I>&nbsp;parameter is the size of the data buffer and the <I>data</I>
parameter is the data buffer’s address. This address is the <B>paDetails</B>
member of a MIXERCONTROLDETAILS structure. Refer to the description of
MIXERCONTROLDETAILS in the Win32 SDK to understand the buffer contents. The
function should call <B><A HREF="audiodrv_187.htm">SoundMixerChangedItem</A></B>
if the value of a control changes.
</DL>
<H5>Comments</H5>
<P>
MIXER_INFO is defined in <I>mixer.h</I>.
<P>
Allocate a MIXER_INFO structure from the nonpaged memory pool by calling <B><A HREF="../../kr/src/k102_11.htm">ExAllocatePool</A></B>.
To zero and initialize a MIXER_INFO structure, call <B><A HREF="audiodrv_183.htm">SoundInitMixerInfo</A></B>.
<P>
To create a mixer device object, call <B><A HREF="audiodrv_166.htm">SoundCreateDevice</A></B>
and specify a MIXER_INFO structure pointer for the <I>DeviceSpecificData</I>
parameter. Then assign the address of the mixer device’s <A HREF="audiodrv_211.htm">LOCAL_DEVICE_INFO</A>
structure to the <B>MixerDevice</B>&nbsp;member of every <I>other</I>&nbsp;device’s
LOCAL_DEVICE_INFO structure.
<P></FONT>
</BODY>
</HTML>
