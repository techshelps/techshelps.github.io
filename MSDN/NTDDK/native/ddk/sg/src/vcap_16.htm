<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transferring Streams of Captured Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Transferring_Streams_of_Captured_Data"></A>Transferring Streams of Captured Data</H4>
<P>
Video capture drivers must provide the capability of handling video capture
input streams. Video capture drivers do <I>not</I>&nbsp;support output streams.
Output streams are handled by <A HREF="vidcomp.htm">Video
Compression Manager drivers</A>.
<P>
To transfer a stream of captured video input data, a client must:
<OL>
<LI>
Establish settings for video format, source or destination rectangles, and
color palettes.
<P>
<LI>
Initialize the appropriate video channels.
<P>
<LI>
Allocate data buffers, prepare them for use, and pass them to the driver to be
filled.
<P>
<LI>
Request the driver to start filling and returning the data buffers.
<P>
<LI>
Copy data from the buffers and pass them back to the driver for re-use.
<P>
<LI>
Request the driver to end the transfer operation.
</OL>
<P>
The first streaming message a user-mode video capture driver should receive a
is <A HREF="vcap_59.htm">DVM_STREAM_INIT</A>, along with a channel
specification. The following table lists the operations that a driver should
perform, based on the specified channel.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Channel</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Operation to Perform for DMV_STREAM_INIT Message</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VIDEO_EXTERNALIN
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set up hardware to allow capture operations.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VIDEO_IN
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Save client-specified capture rate and event notification information.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VIDEO_OUT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Not used.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VIDEO_EXTERNALOUT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set up hardware to allow overlay operations.
</FONT></TABLE>
<P>
Clients dynamically allocate buffers to receive captured data. Before a client
can use a data buffer in a streaming operation, it must pass the buffer’s
address to the user-mode driver by calling <A HREF="vcap_60.htm">DVM_STREAM_PREPAREHEADER</A>,
so the driver can prepare the buffer for use. The client then sends a <A HREF="vcap_53.htm">DVM_STREAM_ADDBUFFER</A>
message for each prepared buffer, which requests the driver to add the
buffer’s address to a queue of buffers waiting to be filled.
<P>
To start the input operation, the clients sends a <A HREF="vcap_62.htm">DVM_STREAM_START</A>
message. The user-mode driver passes the request to the kernel-mode driver,
which causes input operations to begin, typically by enabling device
interrupts so that an interrupt occurs each time the frame buffer has been
filled. Each time the frame buffer is filled, its contents are copied into the
next available client buffer. The user-mode driver then sends the client an <A HREF="vcap_67.htm">MM_DRVM_DATA</A>
callback message. The client copies the data from the buffer and re-adds the
buffer to the user-mode driver’s buffer queue by sending another <A HREF="vcap_53.htm">DVM_STREAM_ADDBUFFER</A>
message. The client can send a <A HREF="vcap_57.htm">DVM_STREAM_GETERROR</A>
message to determine if the driver has dropped any captured frames because of
a lack of available buffers.
<P>
When the client is ready to stop the input stream, it sends a <A HREF="vcap_63.htm">DVM_STREAM_STOP</A>
message. It can also send <A HREF="vcap_61.htm">DVM_STREAM_RESET</A>,
which indicates to the user-mode driver that it should not fill any remaining
data buffers. The client can then send a <A HREF="vcap_64.htm">DVM_STREAM_UNPREPAREHEADER</A>
message for each buffer and de-allocate the buffers. Finally, the client sends
a <A HREF="vcap_55.htm">DVM_STREAM_FINI</A>&nbsp;message to close the streaming
session.
<P>
For all stream messages except <A HREF="vcap_59.htm">DVM_STREAM_INIT</A>
and <A HREF="vcap_55.htm">DVM_STREAM_FINI</A>, the client-specified
channel should always be VIDEO_IN.
<P></FONT>
</BODY>
</HTML>
