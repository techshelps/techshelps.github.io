<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VC_Init</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_VC_Init"></A>VC_Init</H2>
<P>
<B>PDEVICE_INFO<BR>
VC_Init(<BR>
&nbsp; &nbsp; PDRIVER_OBJECT </B><I>pDriverObject</I><B>,<BR>
&nbsp; &nbsp; PUNICODE_STRING </B><I>szRegistryPathName</I><B>,<BR>
&nbsp; &nbsp; ULONG </B><I>HWInfoSize<B><BR>
&nbsp; &nbsp; </I>);</B>
<P>
The <B>VC_Init</B>&nbsp;function creates a device object and stores the device name
in the registry.
<H5>Parameters</H5>
<DL>
<DT>
<I>pDriverObject</I>
<DD>
The driver object pointer that was received as input to the driver’s <B>DriverEntry</B>
function.
<BR>
<DT>
<I>szRegistryPathName</I>
<DD>
Pointer to a string containing the registry path to the driver’s subkey. Use
the path name that was received as the <I>RegistryPathName</I>&nbsp;argument to <B>DriverEntry</B>.
<BR>
<DT>
<I>HWInfoSize</I>
<DD>
Size, in bytes, of a driver-defined structure used for storing device-specific
context information. Can be zero.
</DL>
<H5>Return Value</H5>
<P>
Returns a pointer to a DEVICE_INFO structure.
<H5>Comments</H5>
<P>
A kernel-mode video capture driver using <I>VCKernel.lib</I>&nbsp;must call <B>VC_Init</B>
from within its <B>DriverEntry</B>&nbsp;function, before calling any other <I>VCKernel.lib</I>
functions.
<P>
The DEVICE_INFO structure pointer returned by <B>VC_Init</B>&nbsp;is used as input
to subsequent calls to other <I>VCKernel.lib</I>&nbsp;functions. Contents of the
DEVICE_INFO structure are not available to the kernel-mode driver.
<P>
The driver uses the <I>HWInfoSize</I>&nbsp;parameter to specify the size of a
driver-defined structure. The <B>VC_Init</B>&nbsp;function allocates nonpaged space
for this structure within the device object’s <I>device extension</I>&nbsp;area.
The driver can call <B><A HREF="vcap_125.htm">VC_GetHWInfo</A></B>&nbsp;to obtain
the address of the area that was allocated for the structure. Drivers can use
this structure to store device-specific context information. (For more
information about device objects and device extensions, see the <I>Kernel-Mode
Drivers Design Guide</I>.)
<P>
The <B>VC_Init</B>&nbsp;function calls <B><A HREF="../../kr/src/k104_22.htm">IoCreateDevice</A></B>
to create a device object. The device’s name is “vidcap”, which is defined by
DD_VIDCAP_DEVICE_NAME_U in <I>ntddvidc.h</I>, with an appended number (0, 1,
2, and so on). The function writes this device name into the registry, under
the registry path <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\</B><I>DriverName</I><B>\Parameters</B>,
where <I>DriverName</I>&nbsp;is the driver name that the user-mode driver specified
as input to <B><A HREF="vcap_93.htm">VC_OpenProfileAccess</A></B>
when it installed the kernel-mode driver.
<P></FONT>
</BODY>
</HTML>
