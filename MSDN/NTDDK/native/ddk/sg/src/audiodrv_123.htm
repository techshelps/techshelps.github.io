<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WODM_OPEN</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WODM_OPEN"></A>WODM_OPEN</H2>
<P>
The WODM_OPEN message requests a waveform output driver to open an instance of
a specified device.
<H5>Parameters</H5>
<DL>
<DT>
<I>uDeviceId</I>
<DD>
Device identifier (0, 1, 2, and so on) for the target device.
<BR>
<DT>
<I>uMsg</I>
<DD>
WODM_OPEN
<BR>
<DT>
<I>dwUser</I>
<DD>
Pointer to location to receive device instance identifier.
<BR>
<DT>
<I>dwParam1</I>
<DD>
Pointer to a <A HREF="audiodrv_139.htm">WAVEOPENDESC</A>&nbsp;structure, containing the
client’s device handle, notification target, and instance ID.
<BR>
<DT>
<I>dwParam2</I>
<DD>
Contains flags. The following flags are defined:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Flag</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Definition</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
CALLBACK_EVENT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the <B>dwCallback</B>&nbsp;member of WAVEOPENDESC is an event handle.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
CALLBACK_FUNCTION
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the <B>dwCallback</B>&nbsp;member of WAVEOPENDESC is the address of a
callback function.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
CALLBACK_TASK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the <B>dwCallback</B>&nbsp;member of WAVEOPENDESC is a task handle.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
CALLBACK_WINDOW
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the <B>dwCallback</B>&nbsp;member of WAVEOPENDESC is a window handle.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
WAVE_FORMAT_DIRECT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Data compression/decompression operations should take place in hardware. See <B>Comments</B>
section below.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
WAVE_FORMAT_QUERY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The driver should indicate whether or not it supports the specified format.
See comments.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
WAVE_ALLOWSYNC
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the driver should allow opening of a synchronous device. <I>Ignored
by </I>mmdrv.dll<I>&nbsp;and </I>drvlib.lib<I>.</I>
</FONT></TABLE>
</DL>
<H5>Return Value</H5>
<P>
The driver should return MMSYSERR_NOERROR if the operation succeeds. Otherwise
it should return one of the MMSYSERR or WAVERR error codes defined in <I>mmsystem.h</I>.
See <B>waveOutOpen</B>&nbsp;return values in the Win32 SDK.
<H5>Comments</H5>
<P>
A client sends the WODM_OPEN message by calling the user-mode driver’s <B><A HREF="audiodrv_49.htm">wodMessage</A></B>
entry point, passing the specified parameters.
<P>
Typically, user-mode drivers connect to kernel-mode drivers by calling <B>CreateFile</B>,
specifying the MS-DOS device name of one of the kernel-mode driver’s devices.
<P>
The driver assigns a device instance identifier and returns it in the location
pointed to by <I>dwUser</I>. The driver can expect to receive this value as
the <I>dwUser</I>&nbsp;input argument to all other <B>wodMessage</B>&nbsp;messages.
<P>
The driver determines the number of clients it allows to use a particular
device. If a device is opened by the maximum number of clients, it returns
MMSYSERR_ALLOCATED for subsequent open requests.
<P>
The WAVE_FORMAT_DIRECT flag is meant for use with a wave mapper. If the flag
is set in <I>dwParam2</I>, the driver should not call the Audio Compression
Manager to handle compression/decompression operations; the caller wants the
hardware to perform these operations directly. If the hardware is not capable
of performing compression/decompression operations, the driver should return
MMSYSERR_NOTSUPPORTED when WAVE_FORMAT_DIRECT is set.
<P>
If the WAVE_FORMAT_QUERY flag is set in <I>dwParam2</I>, the driver should not
open the device, but should instead determine whether it supports the format
specified by the <A HREF="audiodrv_139.htm">WAVEOPENDESC</A>&nbsp;structure’s <B>lpFormat</B>
member. If the driver supports the requested format, it should return
MMSYSERR_NOERROR. Otherwise it should return WAVERR_BADFORMAT.
<P>
If the open operation succeeds, the driver should send the client a <A HREF="audiodrv_114.htm">WOM_OPEN</A>
message by calling the <B>DriverCallback</B>&nbsp;function.
<P>
For additional information, see <A HREF="audiodrv_12.htm">Transferring
Waveform Output Data</A>.
<P></FONT>
</BODY>
</HTML>
