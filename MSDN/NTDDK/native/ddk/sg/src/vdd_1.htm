<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Provide Virtual Device Support</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_How_to_Provide_Virtual_Device_Support"></A>How to Provide Virtual Device Support</H2>
<P>
In Windows NT, a 16-bit MS-DOS application runs in the context of the VDM.
Likewise, any TSRs or 16-bit drivers also run in the VDM layer, just as they
would on a normal MS-DOS machine. Attempts to perform privileged hardware
access from the VDM layer must be intercepted and routed to the kernel-mode
device driver where those operations can occur without compromising system
integrity.
<P>
There are two strategies for intercepting an application’s attempts to access
its hardware:
<OL>
<LI>
Modify your application (or its 16-bit device driver) to call the VDD you have
written for Windows NT, instead of directly accessing the hardware.
<P>
<LI>
Instead of modifying your MS-DOS application, rely on the VDM to intercept
disallowed hardware accesses and route them to your VDD.
</OL>
<P>
These two strategies and the support routines provided by Windows NT are
discussed in the following sections.
<P></FONT>
</BODY>
</HTML>
