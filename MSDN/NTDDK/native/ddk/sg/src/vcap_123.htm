<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VC_GetCallbackTable</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_VC_GetCallbackTable"></A>VC_GetCallbackTable</H2>
<P>
<B>PVC_CALLBACK<BR>
VC_GetCallbackTable(<BR>
&nbsp; &nbsp; PDEVICE_INFO </B><I>pDevInfo<B><BR>
&nbsp; &nbsp; </I>);</B>
<P>
The <B>VC_GetCallbackTable</B>&nbsp;function returns the address of <I>VCKernel.lib</I>’s
callback table.
<H5>Parameters</H5>
<DL>
<DT>
<I>pDevInfo</I>
<DD>
Pointer to the DEVICE_INFO structure returned by <B><A HREF="vcap_128.htm">VC_Init</A></B>.
</DL>
<H5>Return Value</H5>
<P>
Pointer to a <A HREF="vcap_137.htm">VC_CALLBACK</A>&nbsp;structure.
<H5>Comments</H5>
<P>
The <B>VC_GetCallbackTable</B>&nbsp;function returns the address of a <A HREF="vcap_137.htm">VC_CALLBACK</A>
structure. Kernel-mode video capture drivers <A HREF="vcap_29.htm">using
<I>VCKernel.lib</A></I>&nbsp;must call this function and then fill in the VC_CALLBACK
structure with the addresses of the driver’s callback functions. Code in <I>VCKernel.lib</I>
uses the structure as a dispatch table when calling the driver’s callback
functions.
<P>
The driver must call <B>VC_GetCallbackTable</B>&nbsp;and fill in the table from
within its <B>DriverEntry</B>&nbsp;function. Because the table contains the
addresses of interrupt handlers, it should be filled in before the driver
attempts to initialize hardware, in case the initialization process generates
interrupts.
<P></FONT>
</BODY>
</HTML>
