<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Specifying the Input Format and Determining the Compression Format</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Specifying_the_Input_Format_and_Determining_the_Compression_Format"></A>Specifying the Input Format and Determining the Compression Format</H4>
<P>
The client application uses the <A HREF="vidcomp_41.htm">ICM_COMPRESS_GET_FORMAT</A>
or <A HREF="vidcomp_43.htm">ICM_COMPRESS_QUERY</A>&nbsp;message to specify the
input format and determine the compression (output) format. The client
application sends ICM_COMPRESS_GET_FORMAT to have your driver suggest the
compressed format. The client application sends ICM_COMPRESS_QUERY to
determine if your driver supports a format it is suggesting.
<P>
Both messages have a pointer to a BITMAPINFO data structure in <I>dwParam1</I>.
This structure specifies the format of the incoming uncompressed data. The
contents of <I>dwParam2</I>&nbsp;depend on the message.
<P>
To have your driver suggest the format, the client application determines the
size of the buffer needed for the compressed data format by sending
ICM_COMPRESS_GET_FORMAT. When requesting the buffer size, the client
application uses <I>dwParam1</I>&nbsp;to point to a BITMAPINFO structure and sets <I>dwParam2</I>
to NULL. Based on the input format, your driver should return the number of
bytes needed for the format buffer. Return a buffer size at least large enough
to hold a BITMAPINFOHEADER data structure and a color table.
<P>
The client application gets the output format by sending
ICM_COMPRESS_GET_FORMAT with valid pointers to BITMAPINFO structures in both <I>dwParam1</I>
and <I>dwParam2</I>. Your driver should return the output format in the buffer
pointed to by <I>dwParam2</I>. If your driver can produce multiple formats,
the format selected by your driver should be the one that preserves the
greatest amount of information rather than one that compresses to the most
compact size. This will preserve image quality if the video data is later
edited and recompressed. 
<P>
The output format data becomes the ‘strf’ chunk in the AVI RIFF file. The data
must start out like a BITMAPINFOHEADER data structure. You can include any
additional information required to decompress the file after the
BITMAPINFOHEADER data structure. A color table (if used) follows this
information. 
<P>
If you have format data following the BITMAPINFOHEADER structure, update the <B>biSize</B>
member to specify the number of bytes used by the structure and your
additional data. If a color table is part of the BITMAPINFO information, it
follows immediately after your additional information. 
<P>
If your driver cannot handle the input format, it returns ICMERR_BADFORMAT to
fail the message.
<P>
If your driver receives ICM_COMPRESS_QUERY, the <I>dwParam1</I>&nbsp;parameter
points to a BITMAPINFO data structure containing the input format data. The <I>dwParam2</I>
parameter will either be NULL or contain a pointer to a BITMAPINFO structure
describing the compressed format specified by the client application. If <I>dwParam2</I>
is NULL, your compression driver can use any output format. (The client
application is just querying whether your driver can handle the input.) If <I>dwParam2</I>
points to a BITMAPINFO structure, the client application is suggesting the
output format.
<P>
If your driver supports the specified input and output format, or it supports
the specified input with NULL specified for <I>dwParam2</I>, return ICERR_OK
to indicate the driver accepts the formats. Your driver does not have to
accept the suggested format. If you fail the message by returning
ICERR_BADFORMAT, the client application suggests alternate formats until your
driver accepts one. If your driver exhausts the list of formats typically
used, the client application requests a format with<A HREF="vidcomp_41.htm">
ICM_COMPRESS_GET_FORMAT</A>.
<P></FONT>
</BODY>
</HTML>
