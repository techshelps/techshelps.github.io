<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetOverlayRectsFunc</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_SetOverlayRectsFunc"></A>SetOverlayRectsFunc</H2>
<P>
<B>BOOLEAN</B><BR>
<I>SetOverlayRectsFunc</I><B>(<BR>
&nbsp; &nbsp; PDEVICE_INFO </B><I>pDevInfo</I><B>,</B><BR>
<B>&nbsp; &nbsp; POVERLAY_RECTS </B><I>pOR<BR>
&nbsp; &nbsp; </I><B>);</B>
<P>
The <B>SetOverlayRectsFunc</B>&nbsp;function sets the overlay region. The function
is provided by the kernel-mode driver, and the <B>SetOverlayRectsFunc</B>&nbsp;name
is a placeholder for a driver-specified function name.
<H5>Parameters</H5>
<DL>
<DT>
<I>pDevInfo</I>
<DD>
Pointer to the DEVICE_INFO structure returned by <B><A HREF="vcap_128.htm">VC_Init</A></B>.
<BR>
<DT>
<I>pOR</I>
<DD>
Pointer to an <A HREF="vcap_114.htm">OVERLAY_RECTS</A>&nbsp;structure describing
one or more overlay rectangles, using screen coordinates.
</DL>
<H5>Return Value</H5>
<P>
Returns TRUE if the operation succeeds. Otherwise returns FALSE. If FALSE, <I>VCKernel.lib</I>
sets the Win32 error code value to STATUS_DEVICE_CONFIGURATION_ERROR.
<H5>Comments</H5>
<P>
The <I>VCKernel.lib</I>&nbsp;library calls a kernel-mode driver’s <B>SetOverlayRectsFunc</B>
function when the driver receives an IOCTL_VIDC_OVERLAY_RECTS control code.
User-mode drivers <A HREF="vcap_18.htm">using <I>VCUser.lib</A></I>&nbsp;send
this control code by calling <B><A HREF="vcap_102.htm">VC_SetOverlayRect</A></B>.
<P>
After the user-mode driver enables overlay by calling <B><A HREF="vcap_94.htm">VC_Overlay</A></B>,
the kernel-mode driver should display captured video source images inside the
overlay area of the output display. (If the device supports color keying, then
the user-mode driver typically repaints the overlay area with the key color
when it receives a <A HREF="vcap_65.htm">DVM_UPDATE</A>&nbsp;message.)
<P>
Drivers for devices that support scaling generally do not scale the video
source image to the overlay area. Instead, scaling of the captured image is
typically based on the capture format and controlled by the <B><A HREF="vcap_143.htm">ConfigFormatFunc</A></B>
function. Thus, the image might not fit into the overlay rectangle. If the
driver’s <B><A HREF="vcap_154.htm">SetOverlayOffsetFunc</A></B>
function has not been called to set an offset rectangle, the driver should
align the top left corner of the video source with the top left corner of the
overlay region. If the source rectangle is larger than the overlay rectangle,
the driver should crop the source as necessary at the bottom and right sides.
<P>
If a format has not been specified, the sample driver, <I>bravado.sys</I>,
does scale the captured image to the overlay rectangle, in order to support
applications that only overlay the source image without capturing frames.
<P>
Support for a <B>SetOverlayRectsFunc</B>&nbsp;function is required, if the device
supports overlay. If a driver does support the function, it must place its
address in the <A HREF="vcap_137.htm">VC_CALLBACK</A>&nbsp;structure supplied by <I>VCKernel.lib</I>.
If a driver that does not support a <B>SetOverlayRectsFunc</B>&nbsp;function
receives an IOCTL_VIDC_OVERLAY_RECTS control code, <I>VCKernel.lib</I>&nbsp;sets
the Win32 error code value to STATUS_INVALID_DEVICE_REQUEST.
<H5>See Also</H5>
<P>
<B><A HREF="vcap_154.htm">SetOverlayOffsetFunc</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
