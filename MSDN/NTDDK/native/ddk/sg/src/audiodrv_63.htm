<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MIDM_STOP</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MIDM_STOP"></A>MIDM_STOP</H2>
<P>
The MIDM_STOP message requests a MIDI input driver to stop recording.
<H5>Parameters</H5>
<DL>
<DT>
<I>uDeviceId</I>
<DD>
Device identifier (0, 1, 2, and so on) for the target device.
<BR>
<DT>
<I>uMsg</I>
<DD>
MIDM_STOP
<BR>
<DT>
<I>dwUser</I>
<DD>
Device instance identifier.
<BR>
<DT>
<I>dwParam1</I>
<DD>
Not used.
<BR>
<DT>
<I>dwParam2</I>
<DD>
Not used.
</DL>
<H5>Return Value</H5>
<P>
The driver should return MMSYSERR_NOERROR if the operation succeeds. Otherwise
it should return one of the MMSYSERR or MIDIERR error codes defined in <I>mmsystem.h</I>.
See <B>midiInStop</B>&nbsp;return values in the Win32 SDK.
<H5>Comments</H5>
<P>
A client sends the MIDM_STOP message by calling the user-mode driver’s <B><A HREF="audiodrv_45.htm">midMessage</A></B>
entry point, passing the specified parameters.
<P>
If a buffer in the input queue (see <A HREF="audiodrv_55.htm">MIDM_ADDBUFFER</A>)
has been partially filled, the driver should treat it as a full buffer and
return it to the client (see <A HREF="audiodrv_62.htm">MIDM_START</A>). Empty
buffers should remain in the queue.
<P>
While recording is stopped, the driver should maintain the current MIDI status
byte for events using <A HREF="audiodrv_14.htm#DDK_running_status">running status</A>&nbsp;and the
parsing state for multibyte events. If the driver receives a subsequent <A HREF="audiodrv_62.htm">MIDM_START</A>
message, it should be able to resume recording from the point at which it was
stopped.
<P>
If this message is received and recording is already stopped, the driver
should return MMSYSERR_NOERROR.
<P>
Typically, the user-mode driver stops recording by calling <B>DeviceIoControl</B>,
sending the kernel-mode driver an IOCTL_MIDI_SET_STATE control code.
<P>
For additional information, see <A HREF="audiodrv_14.htm">Transferring
MIDI Input Data</A>.
<P></FONT>
</BODY>
</HTML>
