<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Registering the Driver (Not Required for Application-Based Intercepts)</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Registering_the_Driver__Not_Required_for_Application_Based_Intercepts_"></A>Registering the Driver (Not Required for Application-Based Intercepts)</H3>
<P>
If you are writing application-based intercepts, <B>RegisterModule</B>&nbsp;loads
and installs the 32-bit VDD. In this case, you do not need to follow the
installation procedures described in this section.
<P>
The registry contains information for loading and configuring your driver.
Each VDD for VDM-based intercepts must be identified under the key <B>HKEY_LOCAL_MACHINE\SYSTEM
\CurrentControlSet \Control \VirtualDeviceDrivers</B>. The value entry of the
key is an array of zero-terminated strings terminated by two null characters (
REG_MULTI_SZ format). Each substring specifies a full path name to a VDD the
system loads when the VDM process is initialized. The format of the registry
entry is shown as follows:
<P>
<B>[VirtualDeviceDrivers]</B>
<P>
<B>VDD</B>&nbsp;<B>=</B>&nbsp;<I>&lt;full-path of the VDD1.DLL&gt;</I><B>\0</B><I>&lt;full-path
of the VDD2.DLL&gt;</I><B>\0\0</B>
<P>
Your application installation program can use the registry API functions, such
as <B>RegSetValue</B>, to modify the required registry entry to enable your
VDD, or you can require the user or system administrator to modify the entry
with <I>regedt32.exe.</I>
<P>
The <B>RegSetValue </B>function and REG_MULTI_SZ format are described in the
Win32 SDK.
<P></FONT>
</BODY>
</HTML>
