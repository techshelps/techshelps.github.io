<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WIDM_UNPREPARE</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WIDM_UNPREPARE"></A>WIDM_UNPREPARE</H2>
<P>
The WIDM_UNPREPARE message requests a waveform input driver to remove the
buffer preparation that was performed in response to a <A HREF="audiodrv_107.htm">WIDM_PREPARE</A>
message.
<H5>Parameters</H5>
<DL>
<DT>
<I>uDeviceId</I>
<DD>
Device identifier (0, 1, 2, and so on) for the target device.
<BR>
<DT>
<I>uMsg</I>
<DD>
WIDM_UNPREPARE
<BR>
<DT>
<I>dwUser</I>
<DD>
Device instance identifier.
<BR>
<DT>
<I>dwParam1</I>
<DD>
Pointer to a WAVEHDR structure identifying the data buffer. (The WAVEHDR
structure is described in the Win32 SDK.)
<BR>
<DT>
<I>dwParam2</I>
<DD>
Size, in bytes, of the WAVEHDR structure.
</DL>
<H5>Return Value</H5>
<P>
The driver should return MMSYSERR_NOERROR if the operation succeeds. Otherwise
it should return one of the MMSYSERR or WAVERR error codes defined in <I>mmsystem.h</I>.
See <B>waveInUnprepareHeader</B>&nbsp;return values in the Win32 SDK.
<H5>Comments</H5>
<P>
A client sends the WIDM_UNPREPARE message by calling the user-mode driver’s <B><A HREF="audiodrv_48.htm">widMessage</A></B>
entry point, passing the specified parameters.
<P>
Support for this message by user-mode drivers is optional. If the driver
supports <A HREF="audiodrv_107.htm">WIDM_PREPARE</A>, it must also support
WIDM_UNPREPARE.
<P>
If the driver returns MMSYSERR_NOTSUPPORTED, <I>winmm.dll</I>&nbsp;removes the
buffer preparation. For most drivers, this behavior is sufficient. If the
driver does support WIDM_UNPREPARE, it must clear WHDR_PREPARED in the <B>dwFlags</B>
member of WAVEHDR and return MMSYSERR_NOERROR.
<P>
For additional information, see <A HREF="audiodrv_11.htm">Transferring
Waveform Input Data</A>.
<P></FONT>
</BODY>
</HTML>
