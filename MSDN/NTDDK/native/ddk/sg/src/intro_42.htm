<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DriverCallback</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DriverCallback"></A>DriverCallback</H2>
<P>
<B>BOOL APIENTRY<BR>
&nbsp; &nbsp; DriverCallback(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwCallBack</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwFlags</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; HDRVR </B><I>hDriver</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwMsg</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwInstance</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwParam1</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; DWORD </B><I>dwParam2</I><B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
The <B>DriverCallback</B>&nbsp;function is used by user-mode drivers to send a
callback message to a client application.
<H5>Parameters</H5>
<DL>
<DT>
<I>dwCallBack</I>
<DD>
The target for the callback message. Can be one of:
<UL>
<LI>
An event handle
<P>
<LI>
A callback function address
<P>
<LI>
A thread identifier
<P>
<LI>
A window handle
</UL>
<P>
The application specifies the type of callback target when opening a driver
instance. The <I>dwFlags</I>&nbsp;parameter indicates the type of value stored in <I>dwCallback</I>.
<BR>
<DT>
<I>dwFlags</I>
<DD>
One of the following flags, defined in <I>mmddk.h</I>, indicating the type of
callback target:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_EVENT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Equivalent to HIWORD(CALLBACK_EVENT). Indicates <I>dwCallback</I>&nbsp;contains an
event handle. Code in <I><A HREF="intro_4.htm#DDK_winmm.dll">winmm.dll</A></I>&nbsp;calls the Win32
<B>SetEvent</B>&nbsp;function.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_FUNCTION
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Equivalent to HIWORD(CALLBACK_FUNCTION). Indicates <I>dwCallback</I>&nbsp;contains
a function address. Code in <I>winmm.dll</I>&nbsp;calls the function.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_TASK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Equivalent to HIWORD(CALLBACK_THREAD). Indicates <I>dwCallback</I>&nbsp;contains a
thread identifer. Code in <I>winmm.dll</I>&nbsp;calls the Win32 <B>PostThreadMessage</B>
function to post a WM_USER message.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_WINDOW
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Equivalent to HIWORD(CALLBACK_WINDOW). Indicates <I>dwCallback</I>&nbsp;contains a
window handle. Code in <I>winmm.dll</I>&nbsp;calls the Win32 <B>PostMessage</B>
function.
</FONT></TABLE>
<P>
The CALLBACK_EVENT, CALLBACK_FUNCTION, CALLBACK_THREAD, and CALLBACK_WINDOW
flags, referred to in the preceding table, are longword values used by
applications when calling Win32 API functions that open multimedia drivers,
such as <B>midiOutOpen</B>, <B>waveOutOpen</B>, or <B>videoStreamInit</B>.
<BR>
<DT>
<I>hDriver</I>
<DD>
The driver handle that the driver received with the <A HREF="intro_34.htm">DRV_OPEN</A>
message.
<BR>
<DT>
<I>dwMsg</I>
<DD>
A message to send to the application. Ignored if <I>dwFlags</I>&nbsp;is DCB_EVENT
or DCB_TASK. The messages that can be sent are unique for each type of
multimedia device and are listed in the chapters for each device type.
<BR>
<DT>
<I>dwInstance</I>
<DD>
An application-supplied value to be passed to a callback function. Ignored if <I>dwFlags</I>
is DCB_EVENT, DCB_TASK, or DCB_WINDOW. Applications specify this value when
calling Win32 API functions that open multimedia drivers, such as <B>midiOutOpen</B>,
<B>waveOutOpen</B>, or <B>videoStreamInit</B>.
<BR>
<DT>
<I>dwParam1</I>
<DD>
A message-dependent parameter. Ignored if <I>dwFlags</I>&nbsp;is DCB_EVENT or
DCB_TASK.
<BR>
<DT>
<I>dwParam2</I>
<DD>
A message-dependent parameter. Ignored if <I>dwFlags</I>&nbsp;is DCB_EVENT,
DCB_TASK, or DCB_WINDOW.
</DL>
<H5>Return Value</H5>
<P>
Returns FALSE if <I>dwCallback</I>&nbsp;is NULL, if <I>dwFlags</I>&nbsp;is invalid, or
if the message cannot be queued. Otherwise returns TRUE.
<H5>Comments</H5>
<P>
User-mode drivers call the <B>DriverCallback</B>&nbsp;function to deliver callback
messages to applications that have requested them. Applications request
delivery of callback messages by specifying a callback target when they open a
driver instance. Win32 API functions that allow applications to specify a
callback target include <B>midiOutOpen</B>, <B>waveOutOpen</B>, <B>videoStreamInit</B>,
and others.
<P></FONT>
</BODY>
</HTML>
