<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VC_StreamAddBuffer</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_VC_StreamAddBuffer"></A>VC_StreamAddBuffer</H2>
<P>
<B>BOOL<BR>
VC_StreamAddBuffer(<BR>
&nbsp; &nbsp; VCUSER_HANDLE </B><I>vh</I><B>,<BR>
&nbsp; &nbsp; LPVIDEOHDR </B><I>lpvh<B><BR>
&nbsp; &nbsp; </I>);</B>
<P>
The <B>VC_StreamAddBuffer</B>&nbsp;function adds a buffer to a video capture
driver’s queue of buffers used to receive video capture input frames.
<H5>Parameters</H5>
<DL>
<DT>
<I>vh</I>
<DD>
Handle to the kernel-mode driver, obtained from <B><A HREF="vcap_92.htm">VC_OpenDevice</A></B>.
<BR>
<DT>
<I>lpvh</I>
<DD>
Pointer to a <A HREF="vcap_76.htm">VIDEOHDR</A>&nbsp;structure defining the buffer to
be queued.
</DL>
<H5>Return Value</H5>
<P>
Returns TRUE if the operation succeeds. Otherwise returns FALSE.
<H5>Comments</H5>
<P>
A user-mode video capture driver <A HREF="vcap_18.htm">using <I>VCUser.lib</A></I>
should call <B>VC_StreamAddBuffer</B>&nbsp;when its <B><A HREF="intro_44.htm">DriverProc</A></B>
function receives a <A HREF="vcap_53.htm">DVM_STREAM_ADDBUFFER</A>
message.
<P>
If the driver has not called <B><A HREF="vcap_107.htm">VC_StreamStart</A></B>
to start reading frames, the specified buffer is added to the user-mode
driver’s buffer queue. If <B>VC_StreamStart</B>&nbsp;has been called, the <B>VC_StreamAddBuffer</B>
function tries to send the buffer to the kernel-mode driver. To limit the
amount of memory the kernel-mode driver must lock, a maximum of two buffers
are queued to the kernel-mode driver at one time. Any additional buffers are
queued in the user-mode driver until the kernel-mode driver’s queue contains
less than two buffers. The <B>VC_StreamAddBuffer</B>&nbsp;function always returns
after the buffer is queued, without waiting for captured data to be placed in
the buffer.
<P>
To send a buffer to the kernel-mode driver, the <B>VC_StreamAddBuffer </B>function
calls <B>DeviceIoControl</B>&nbsp;(described in the Win32 SDK), specifying an
IOCTL_VIDC_ADD_BUFFER control code. If the kernel-mode driver is <A HREF="vcap_29.htm">using
<I>VCKernel.lib</A></I>, and if the specified buffer length is smaller than the
image size value specified with <B><A HREF="vcap_131.htm">VC_SetImageSize</A></B>,
the buffer is not queued. If the buffer size is acceptable, <I>VCKernel.lib</I>
places the buffer’s I/O request packet (IRP) in a queue, where it stays until
needed to receive a captured frame. (For more information about IRPs, see the <I>Kernel-Mode
Drivers Design Guide</I>.)
<P>
If the kernel-mode driver fails to lock the buffer in the client’s address
space (because the buffer is too large for the system’s memory resources),
then <I>VCUser.lib</I>&nbsp;sends IOCTL_VIDC_CAP_TO_SYSBUF,
IOCTL_VIDC_PARTIAL_CAPTURE, and IOCTL_VIDC_FREE_SYSBUF, control codes to
request the kernel-mode driver to copy frame buffer data into a
system-allocated buffer. The data is then copied to the client’s buffers as
smaller, partial frame sections.
<P></FONT>
</BODY>
</HTML>
