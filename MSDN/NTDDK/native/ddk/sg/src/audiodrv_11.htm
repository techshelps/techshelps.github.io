<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transferring Waveform Input Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Transferring_Waveform_Input_Data"></A>Transferring Waveform Input Data</H4>
<P>
For waveform input operations, clients call the user-mode driver’s <B><A HREF="audiodrv_48.htm">widMessage</A></B>
function. The user-mode driver should expect the client to first send a <A HREF="audiodrv_106.htm">WIDM_OPEN</A>
message to open a driver instance. Next, the client allocates memory for one
or more data buffers and sends <A HREF="audiodrv_107.htm">WIDM_PREPARE</A>
messages to prepare the buffers for use. The client then sends a <A HREF="audiodrv_100.htm">WIDM_ADDBUFFER</A>
message for each buffer, which passes the address of the empty buffer to the
user-mode driver. The user-mode driver keeps a list of available empty
buffers.
<P>
To start the read operation, the client sends <A HREF="audiodrv_109.htm">WIDM_START</A>.
The user-mode driver then uses a separate thread to begin requesting data from
the kernel-mode driver, typically by calling <B>ReadFile</B>&nbsp;or <B>ReadFileEx</B>,
and filling the empty buffers. Each time a buffer has been filled, the
user-mode driver notifies the client by sending it a <A HREF="audiodrv_113.htm">WIM_DATA</A>
callback message. The client copies the data from the buffer and re-adds the
buffer to the user-mode driver’s buffer list by sending another <A HREF="audiodrv_100.htm">WIDM_ADDBUFFER</A>
message.
<P>
When the client has finished the input operation, it sends <A HREF="audiodrv_110.htm">WIDM_STOP</A>.
It can also send <A HREF="audiodrv_108.htm">WIDM_RESET</A>, which indicates to the
user-mode driver that it should not fill any remaining data buffers. The
client can then send a <A HREF="audiodrv_111.htm">WIDM_UNPREPARE</A>&nbsp;message for
each buffer and deallocate the buffers. Finally, the driver should expect the
client to close the instance by sending <A HREF="audiodrv_101.htm">WIDM_CLOSE</A>.
<P></FONT>
</BODY>
</HTML>
