<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preparing to Draw Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Preparing_to_Draw_Data"></A>Preparing to Draw Data</H4>
<P>
When the client application is ready, it sends the <A HREF="vidcomp_57.htm">ICM_DRAW_BEGIN</A>
message to the driver to prepare the driver for decompressing the stream. Your
driver should create any tables and allocate any memory that it needs to
decompress data efficiently.
<P>
The client application sets <I>dwParam1</I>&nbsp;to the <A HREF="vidcomp_91.htm">ICDRAWBEGIN</A>
data structure. The size of this structure is contained in <I>dwParam2</I>. If
the ICDRAW_QUERY flag is set in the <B>dwFlags</B>&nbsp;member, the client
application is interrogating your driver to determine if can decompress the
data with the parameters specified in the ICDRAWBEGIN data structure. Your
driver should return ICM_ERR_OK if it can accept the parameters. It should
return ICM_ERR_NOTSUPPORTED if it does not accept them.
<P>
When the ICDRAW_QUERY flag is set, ICM_DRAW_BEGIN will not be paired with <A HREF="vidcomp_59.htm">ICM_DRAW_END</A>.
Your driver will receive another ICM_DRAW_BEGIN message without this flag to
start the actual decompression sequence.
<P>
Your driver can ignore the palette handle specified in the <B>hpal</B>&nbsp;member.
<P>
The <B>hwnd</B>&nbsp;and <B>hdc</B>&nbsp;members specify the handle of the window and DC
used for drawing. These members are valid only if the ICDRAW_HDC flag is set
in the <B>dwFlags</B>&nbsp;member.
<P>
The <B>xDst</B>&nbsp;and <B>yDst</B>&nbsp;members specify the x- and y-position of the
upper-right corner of the destination rectangle. (This is relative to the
current window or display context.) The <B>dxDst</B>&nbsp;and <B>dyDst</B>&nbsp;members
specify the width and height of the destination rectangle. These members are
valid only if the ICDRAW_HDC flag is set. The ICDRAW_FULLSCREEN flag indicates
the entire screen should be used for display and overrides any values
specified for these members.
<P>
The <B>xSrc</B>, <B>ySrc</B>, <B>dxSrc</B>, and <B>dySrc</B>&nbsp;members specify a
source rectangle used to clip the frames of the video sequence. The source
rectangle is stretched to fill the destination rectangle. The <B>xSrc</B>&nbsp;and <B>ySrc</B>
members specify the x- and y-position of the upper-right corner of the source
rectangle. (This is relative to a full-frame image of the video.) The <B>dxSrc</B>
and <B>dySrc</B>&nbsp;members specify the width and height of the source rectangle.
<P>
Your driver should stretch the image from the source rectangle to fit the
destination rectangle. If the client application changes the size of the
source and destination rectangles, it will send the ICM_DRAW_END message and
specify new rectangles with a new ICM_DRAW_BEGIN message. For more information
about handling the source and destination rectangles, see the <B>StretchDIBits</B>
function.
<P>
The <B>lpbi</B>&nbsp;member specifies a pointer to a BITMAPINFOHEADER data
structure containing the input format.
<P>
The <B>dwRate</B>&nbsp;member specifies the decompression rate in an integer
format. To obtain the rate in frames-per-second, divide this value by the
value in <I>dwScale</I>. Your driver uses these values when it handles the
ICM_DRAW_START message.
<P>
If your driver can decompress the data with the parameters specified in the <A HREF="vidcomp_91.htm">ICDRAWBEGIN</A>
data structure, your driver should return ICERR_OK and allocate any resources
it needs to efficiently decompress the data. If your driver cannot decompress
the data with the parameters specified, your driver should fail the message by
returning ICERR_NOTSUPPORTED. When this message fails, your driver does not
receive an ICM_DRAW_END message, so it should not prepare its resources for
other ICM_DRAW messages.
<P></FONT>
</BODY>
</HTML>
