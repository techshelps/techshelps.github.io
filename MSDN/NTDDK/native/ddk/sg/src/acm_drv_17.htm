<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Providing ACM Support in Device Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Providing_ACM_Support_in_Device_Drivers"></A>Providing ACM Support in Device Drivers</H3>
<P>
Some waveform devices can play and record data that is in a compressed format.
For these devices, clients do not have to call ACM functions to convert data
streams. However, ACM functions provide one of the means by which clients
determine which formats are supported on a system. So even if a particular
format is supported by device hardware, the client still might call ACM
functions to determine if the format is supported. (The other means by which
clients determine if a device supports a compressed format is by specifying
the WAVE_FORMAT_DIRECT flag with the <A HREF="audiodrv_123.htm">WODM_OPEN</A>&nbsp;and <A HREF="audiodrv_106.htm">WIDM_OPEN</A>
audio driver messages.)
<P>
If you are <A HREF="audiodrv_6.htm">designing a
user-mode audio driver</A>&nbsp;for a waveform device that supports a format in
hardware, your driver’s <B><A HREF="intro_44.htm">DriverProc</A></B>&nbsp;function
must support, at a minimum, the following <A HREF="acm_drv_8.htm">ACM
driver messages</A>:
<UL>
<LI>
<A HREF="acm_drv_23.htm">ACMDM_DRIVER_DETAILS</A>&nbsp;
<P>
<LI>
<A HREF="acm_drv_27.htm">ACMDM_FORMAT_DETAILS</A>&nbsp;
<P>
<LI>
<A HREF="acm_drv_29.htm">ACMDM_FORMATTAG_DETAILS</A>&nbsp;
<P>
<LI>
<A HREF="acm_drv_30.htm">ACMDM_HARDWARE_WAVE_CAPS_INPUT</A>&nbsp;
<P>
<LI>
<A HREF="acm_drv_31.htm">ACMDM_HARDWARE_WAVE_CAPS_OUTPUT</A>&nbsp;
</UL>
<P>
A user-mode audio driver that supports ACM messages is, in reality, both a
device driver and an ACM driver. As such, it must be installed twice <FONT
FACE="Symbol">&#190;</FONT> once as an audio device driver and once as an ACM
driver. (See <A HREF="intro_18.htm">Installing Multimedia
Drivers</A>&nbsp;and <A HREF="acm_drv_11.htm">Installing ACM Drivers</A>.)
<P>
A driver of this type must be capable of determining when it is being opened
as an audio driver and when it is being opened as an ACM driver. An easy way
to make this determination is to examine the <I>lParam2</I>&nbsp;argument to <B>DriverProc</B>
when a <A HREF="intro_34.htm">DRV_OPEN</A>&nbsp;message is received. When the driver is
being opened by the ACM, this argument is a pointer to an <A HREF="acm_drv_44.htm">ACMDRVOPENDESC</A>
structure. When the driver is being opened by any other client, such as <I>winmm.dll</I>
or a Control Panel applet, the <I>lParam2</I>&nbsp;argument is NULL.
<P>
Following is a possible scenario in which the driver is used as both an ACM
driver and an audio driver:
<OL>
<LI>
A client calls <B>acmDriverDetails</B>&nbsp;(in the ACM) to send an <A HREF="acm_drv_23.htm">ACMDM_DRIVER_DETAILS</A>
message. The driver sets the specified ACMDRIVERDETAILS structure’s
ACMDRIVERDETAILS_SUPPORTF_HARDWARE flag.
<P>
<LI>
The client detects this flag and calls <B>acmMetrics</B>&nbsp;(in the ACM),
specifying the ACM_METRIC_HARDWARE_WAVE_OUTPUT flag to obtain a device
identifier.
<P>
<LI>
The client uses the obtained device identifier as input to <B>waveOutOpen</B>
(in <I>winmm.dll</I>), to open an output stream to a waveform device, and then
sends data to the device using <B>waveOutWrite</B>.
</OL>
<P></FONT>
</BODY>
</HTML>
