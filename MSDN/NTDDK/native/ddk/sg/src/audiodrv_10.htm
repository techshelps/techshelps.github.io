<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Transferring Audio Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Introduction_to_Transferring_Audio_Data"></A>Introduction to Transferring Audio Data</H4>
<P>
A primary responsibility of user-mode waveform and MIDI drivers is to pass
streams of data between clients and kernel-mode drivers. For both input and
output operations, clients first allocate data buffers and request the
user-mode driver to prepare the buffers for use.
<P>
For input operations, the client passes empty buffers to the user-mode driver,
which then requests data from the kernel-mode driver. The kernel-mode driver
reads data from the device and passes it back the user-mode driver, which then
fills the buffers. The user-mode driver notifies the client each time a buffer
is filled, so that the client can copy the data from the buffer. The client
can then re-use the buffer or, if all data has been received, it can request
the user-mode driver to remove the buffer’s preparation, and then deallocate
the buffer.
<P>
For output operations, the client fills the buffers with data and begins
passing them to the user-mode driver. The user-mode driver reads the data and
passes it to the kernel-mode driver, which in turn sends the data to the
device. The user-mode driver notifies the client when each buffer has been
read. The client can then re-use the buffer or, if all data has been sent, it
can request the user-mode driver to remove the buffer’s preparation, and then
deallocate the buffer. (Some MIDI output operations do not use buffers.)
<P>
For more details about transferring audio data, see:
<UL>
<LI>
<A HREF="audiodrv_11.htm">Transferring Waveform Input
Data</A>&nbsp;
<P>
<LI>
<A HREF="audiodrv_12.htm">Transferring Waveform Output
Data</A>&nbsp;
<P>
<LI>
<A HREF="audiodrv_14.htm">Transferring MIDI Input Data</A>&nbsp;
<P>
<LI>
<A HREF="audiodrv_15.htm">Transferring MIDI Output Data</A>&nbsp;
</UL>
<P>
The algorithms described in these topics are implemented in <I>drvlib.lib</I>
and <I>mmdrv.dll</I>.
<P></FONT>
</BODY>
</HTML>
