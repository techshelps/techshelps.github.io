<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Sharing A Device</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Sharing_A_Device"></A>Sharing A Device</H3>
<P>
To share a <A HREF="mcidrv_6.htm">simple device</A>, a driver
creates a single context that can be shared by multiple applications. This
context allows each application to reference and modify device characteristics
set up by other applications. For example, a shared driver for a CD player
should allow an application to issue a command (“resume”, for example) that is
based on the context of the last command received from any other application
(“stop”, for example).
<P>
Because each instance of a shared driver is created by a separate <A HREF="intro_34.htm">DRV_OPEN</A>
command, a separate driver ID is assigned to each instance.
<P>
For a <A HREF="mcidrv_6.htm">compound device</A>, the shareable
object is the device element. Each element has a unique device ID. The driver
allows multiple applications to share an element’s context. Each application
can reference and modify characteristics of the element that have been set up
by other applications.
<P>
If a driver <I>can </I>share a device (or object), the decision about whether
it <I>should</I>&nbsp;share the device (or object) is based on the first
MCI_OPEN_DRIVER command. If this command includes the MCI_OPEN_SHAREABLE flag,
then the driver should mark the device (or object) as being shared. Each
subsequent MCI_OPEN_DRIVER command received must also include the
MCI_OPEN_SHAREABLE flag, or else the MCIERR_MUST_USE_SHAREABLE error value
must be returned.
<P>
On the other hand, if the first MCI_OPEN_DRIVER command does not include the
MCI_OPEN_SHAREABLE flag, then no subsequent MCI_OPEN_DRIVER command can
include the MCI_OPEN_SHAREABLE flag either. If it does, the
MCIERR_MUST_USE_SHAREABLE error value must be returned.
<P>
If an application specifies the MCI_OPEN_SHAREABLE flag but the driver does
not allow device sharing, then the driver must return
MCIERR_UNSUPPORTED_FUNCTION.
<P>
For compound devices, drivers can alternatively allow several applications to
open a single element without specifying the MCI_OPEN_SHAREABLE flag. In this
case, each application should possess its own context for the element. As a
result, each application makes its own modifications to the element context
without affecting any other application’s context. Each application can move
independently within a single element. Also, a single application can open a
single element multiple times, providing multiple contexts for one element.
<P></FONT>
</BODY>
</HTML>
