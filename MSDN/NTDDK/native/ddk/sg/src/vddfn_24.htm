<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WOW32DriverCallback</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WOW32DriverCallback"></A>WOW32DriverCallback</H2>
<P>
<B>BOOL WOW32DriverCallback(</B><I>dwCallback</I>,<B>&nbsp;</B><I>dwFlags</I>,<B>&nbsp;</B><I>wDeviceHandle</I>,<B>
</B><I>wMsg</I>,<B>&nbsp;</B><I>dwUser</I>,<B><BR>
&nbsp; &nbsp; </B><I>dwParam1</I>,<B>&nbsp;</B><I>dwParam2</I><B>)</B><BR>
<B>DWORD</B>&nbsp; <I>dwCallback</I><B>;</B><BR>
<B>DWORD</B>&nbsp; <I>dwFlags</I><B>;</B><BR>
<B>WORD</B>&nbsp; <I>wDeviceHandle</I><B>;</B><BR>
<B>WORD</B>&nbsp; <I>wMsg</I><B>;</B><BR>
<B>DWORD</B>&nbsp; <I>dwUser</I><B>;</B><BR>
<B>DWORD</B>&nbsp; <I>dwParam1</I><B>;</B><BR>
<B>DWORD</B>&nbsp; <I>dwParam2</I><B>;</B>
<P>
<B>WOW32DriverCallback</B>&nbsp;allows a 32-bit thunk extension DLL to simulate a
Multimedia hardware interrupt callback into 16-bit code. The built-in thunks
for wave, midi, and time callbacks make use of this function to callback into
16-bit application code.
<H3>Parameters</H3>
<DL>
<DT>
<I>dwCallback</I>
<DD>
Specifies either the address of a callback function, a window handle, or a
task handle, depending on the flags specified in <I>dwFlags</I>.
<BR>
<DT>
<I>dwFlags</I>
<DD>
Specifies how the 16-bit client application is notified, according to one of
the following flags:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Flag</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_FUNCTION
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a message should be sent to a callback function. <I>dwCallback</I>
must be a 16-bit address of the 16-bit application callback routine.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_WINDOW
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a message should be sent to the 16-bit window handle specified
in <I>dwCallback</I>.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCB_TASK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a message should be sent ot the 16-bit task handle specified in
<I>dwCallback</I>.
</FONT></TABLE>
<DT>
<I>wDeviceHandle</I>
<DD>
Specifies a 16-bit handle of the device associated with the notification.
<BR>
<DT>
<I>wMsg</I>
<DD>
Specifies a message to be sent to the application.
<BR>
<DT>
<I>dwUser</I>
<DD>
Specifies the DWORD of user-instance data supplied by the application when the
device was opened.
<BR>
<DT>
<I>dwParam1</I>
<DD>
Specifies a message-dependent parameter. If this is a pointer, it must be
mapped to a valid 16-bit address. All fields in the structure pointed to must
be mapped correctly.
<BR>
<DT>
<I>dwParam2</I>
<DD>
Specifies a message-dependent parameter. If this is a pointer, it must be
mapped to a valid 16-bit address. All fields in the structure pointed to must
be mapped correctly.
</DL>
<H3>Return Value</H3>
<P>
<B>WOW32DriverCallback</B>&nbsp;returns TRUE if the operation was successful.
<H3>Comments</H3>
<P>
The 16-bit client specifies how it is notified when the device is opened. If
notification is accomplished with a callback function, <I>wDeviceHandle</I>, <I>wMsg</I>,
<I>dwUser</I>, <I>dwParam1</I>, and <I>dwParam2</I>&nbsp;are passed to the
callback. If notification is accomplished by means of a window, only <I>wMsg</I>,
<I>wDeviceHandle</I>, and <I>dwParam1</I>&nbsp;are passed.
<P>
Users will have to dynamically link to this function.
<H3>See Also</H3>
<P>
<B>WOW32ResolveHandle</B>
<P></FONT>
</BODY>
</HTML>
