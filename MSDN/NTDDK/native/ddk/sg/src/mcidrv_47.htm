<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>mciDriverNotify</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_mciDriverNotify"></A>mciDriverNotify</H2>
<P>
<B>BOOL  APIENTRY<BR>
&nbsp; &nbsp; mciDriverNotify (<BR>
&nbsp; &nbsp; &nbsp; &nbsp; HANDLE </B><I>hwndCallback</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; MCIDEVICEID </B><I>wDeviceID</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; UINT </B><I>uStatus</I><B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
MCI drivers call <B>mciDriverNotify</B>&nbsp;to post an MM_MCINOTIFY message to an
application.
<H5>Parameters</H5>
<DL>
<DT>
<I>hwndCallback</I>
<DD>
Specifies the handle of the window to notify. The handle is obtained from the <B>dwCallback</B>
member of the structure pointed to by the <B>DriverProc</B>&nbsp;<I>lParam2</I>
parameter.
<BR>
<DT>
<I>wDeviceID</I>
<DD>
Specifies the device ID. This is the device ID received from <B>DriverProc</B>.
<BR>
<DT>
<I>uStatus</I>
<DD>
Specifies the status of the operation requested by the application. Can be one
of the following values:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MCI_NOTIFY_SUCCESSFUL
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Driver successfully completed the requested operation.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MCI_NOTIFY_SUPERSEDED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Application sent an MCI message with the MCI_NOTIFY flag set, then sent a
second message with MCI_NOTIFY set before the first operation completed.
Driver calls <B>mciNotifyDrive</B>r with MCI_NOTIFY_SUPERSEDED status, then
calls <B>mciNotifyDriver</B>&nbsp;again when the second operation completes.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MCI_NOTIFY_ABORTED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Application sent a command that prevents the notification condition from being
satisfied. For example, the command “stop vcr1” cancels a pending notification
for “play vcr1 to 500 notify”.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
MCI_NOTIFY_FAILURE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
A device error prevented the notification condition from being satisfied.
</FONT></TABLE>
</DL>
<H5>Return Value</H5>
<P>
If a notification is successfully sent, <B>mciDriverNotify</B>&nbsp;returns TRUE;
otherwise, it returns FALSE.
<H5>Comments</H5>
<P>
Drivers call <B>mciDriverNotify</B>&nbsp;after an operation has completed, if the
application that requested the operation included the MCI_NOTIFY flag with the
command. See <A HREF="mcidrv_13.htm">Handling the
MCI_NOTIFY Flag</A>.
<P></FONT>
</BODY>
</HTML>
