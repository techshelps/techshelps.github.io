<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Font Metric Functions</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Font_Metric_Functions_GG"></A>Font Metric Functions</H4>
<P>
When a driver must support fonts, it must supply font information to GDI
through the <A HREF="grstrcts_24.htm">IFIMETRICS</A>&nbsp;structure. There is a
separate IFIMETRICS structure for each font. Most of the fields are expressed
in terms of FWORDs, each a signed 16-bit quantity, in the design space. If the
font is a raster font, the design space and device space are the same and a
font unit is equivalent to the distance between pixels.
<P>
Basically, the IFIMETRIC structure is the DDI version of a text-metric
structure. All distances refer to the notional coordinate system of the font
designer. The notional space coordinate system is a right-handed Cartesian
coordinate system in which the y coordinate increases towards the top and the
x coordinate increases towards the right.
<P>
The IFIMETRICS structure is designed to be of variable length. No restriction
is placed on the length of the character strings associated with the font. It
is common practice to store the strings immediately following the last field
of the IFIMETRICS structure.
<P>
Any driver that provides fonts must support the <B><A HREF="grfncs_36.htm">DrvQueryFont</A></B>
function. The driver also can include the function <B><A HREF="grfncs_38.htm">DrvQueryFontData</A></B>
to retrieve information about a realized font. In a call to this function, GDI
provides a pointer to an array of glyphs or kerning handles. The driver
returns information about associated glyphs in GDI GLYPHDATA structures. If it
has been given kerning handles, it returns information about kerning pairs in
the form of Win32 POINTL structures. The following table lists the font metric
functions.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Function</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Description</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_36.htm">DrvQueryFont</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Returns a pointer to the IFIMETRICS structure for a font. Required by all
drivers that deal with fonts.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_40.htm">DrvQueryFontTree</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Returns pointers to structures that define either the mapping from Unicode to
glyph handles or the mapping of kerning pairs to kerning handles. Required by
all drivers that deal with fonts.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_38.htm">DrvQueryFontData</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Returns information about a realized font. Required (for selected <I>iMode</I>
values) by all drivers that deal with fonts.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_26.htm">DrvFree</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Tells the driver that the indicated data structure is no longer needed.
Optional<FONT FACE="Symbol">&#190;</FONT>should be implemented only if the
driver’s memory management requires this information.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_13.htm">DrvDestroyFont</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Notifies the driver that a font realization is no longer needed so the driver
can free any data structures that it allocated. GDI calls this function once
for the font producer and once for the font consumer. Optional<FONT
FACE="Symbol">&#190;</FONT>should be supported only if the driver must free
allocated resources.
</FONT></TABLE>
<P>
<B>DrvQueryFontTree</B>&nbsp;allows GDI to obtain pointers to tree structures that
define one of the following:
<UL>
<LI>
Mapping from Unicode to glyph handles, including glyph variants (GDI
FD_GLYPHSET structure) 
<P>
<LI>
Mapping of kerning pairs to kerning handles (FD_KERNINGPAIRS structure) 
</UL>
<P>
&nbsp;
<P>
<B>DrvQueryFontTree</B>&nbsp;requires effort to generate the needed structures, so
the driver should precompute these files if possible. The structures can be
stored in a resource or in a file. If the structures are stored in a file, the
ideal method for loading or reading them is to call <B><A HREF="grfncs_111.htm">EngMapFontFile</A></B>,
which maps a file to the memory. Because the file does not get added to the
swap file, the memory can be made available if needed, which is more efficient
than opening and reading in a file.
<P>
In particular, the driver returns an identifier in the <I>pid</I>&nbsp;parameter.
GDI passes it to <B><A HREF="grfncs_26.htm">DrvFree</A></B>, with the returned
pointer, when the FD_GLYPHSET structure or an array of FD_KERNINGPAIR
structures is no longer needed. Depending on how memory is managed in the
driver, <I>pid</I>&nbsp;could identify the structure, the way the structure was
allocated, or do nothing at all.
<P>
<B><A HREF="grfncs_26.htm">DrvFree</A></B>&nbsp;and <B><A HREF="grfncs_13.htm">DrvDestroyFont</A></B>
are both optional. GDI calls <B>DrvFree</B>&nbsp;to inform the driver that the
specified data structure is no longer needed. The driver does not need to
implement it unless it allocates memory for the structure and needs to be
informed when the corresponding data structure can be released. For example,
if the data is associated with the <A HREF="grstrcts_19.htm">FONTOBJ</A>, the
deletion could be deferred until a call to <B>DrvDestroyFont</B>, so it would
not be necessary to implement <B>DrvFree</B>.
<P>
<B>DrvDestroyFont </B>notifies the driver that a font realization is no longer
needed so the driver can free any data structures it allocated. GDI calls this
function once for the font producer and once for the font consumer. It should
be implemented only if the driver must free allocated resources when the font
instance is destroyed.
<P></FONT>
</BODY>
</HTML>
