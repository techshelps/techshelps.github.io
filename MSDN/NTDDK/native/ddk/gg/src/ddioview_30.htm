<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Drawing Text</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Drawing_Text_GG"></A>Drawing Text</H3>
<P>
The text output functions are called only for a device-managed surface (a
device bitmap or surface), or for a GDI-managed surface if the driver has
hooked the call in <B><A HREF="grfncs_64.htm">EngAssociateSurface</A></B>.
The graphic output primitives for text are:
<UL>
<LI>
<B><A HREF="grfncs_59.htm">DrvTextOut</A></B>&nbsp;
<P>
<LI>
<B><A HREF="grfncs_27.htm">DrvGetGlyphMode</A></B>&nbsp;
</UL>
<P>
&nbsp;
<P>
GDI calls <B>DrvTextOut</B>&nbsp;to render a set of glyph’s pixels at specified
positions for text output. Many of the <B>DrvTextOut</B>&nbsp;capabilities are
defined with the GCAPS bits of the <A HREF="grstrcts_6.htm">DEVINFO</A>&nbsp;structure
returned by <B><A HREF="grfncs_20.htm">DrvEnablePDEV</A></B>.
<P>
The input parameters for <B>DrvTextOut</B>&nbsp;define two sets of pixels, <I>foreground</I>
and <I>opaque</I>. The driver renders the surface to provide the following
results:
<OL>
<LI>
The opaque pixels are rendered first, with the opaque brush.
<P>
<LI>
The foreground pixels are then rendered with the foreground brush.
</OL>
<P>
&nbsp;
<P>
Each of these rendering operations is performed in a clip region. The pixels
outside the clip region cannot be affected.
<P>
The driver must render the surface so opaque pixels are calculated and drawn
on the surface first with an opaque brush. Then foreground pixels are
calculated and rendered with a foreground brush. Each of these operations is
limited by clipping.
<P>
Foreground and opaque pixels make up a mask through which color is brushed
onto the surface. The glyphs of a font do not, in themselves, have color. The
foreground set of pixels is defined as the union of the glyphs’ pixels and the
pixels of certain extra rectangles used to simulate strikethrough or
underline. Opaque pixels are defined by opaque rectangles.
<P>
<B>DrvTextOut </B>selects the specified font using a pointer, <I>pfo</I>, to
query the current FONTOBJ. This process can include downloading a soft font or
a font substitution, or any other font optimizations necessary for the device.
<P>
If a driver has scalable fonts, it should call <B><A HREF="grfncs_167.htm">FONTOBJ_pxoGetXform</A></B>
for the current FONTOBJ to return the notional-to-device transform for the
associated font. This is required for a driver-supplied font. Notional space
is the design space of the device font. For example, PostScript fonts are
defined in 1000-by-1000 unit character cells. Most of the metrics returned in
the <A HREF="grstrcts_24.htm">IFIMETRICS</A>&nbsp;structure are converted to notional
space, which is why the notional-to-device transform is necessary.
<P>
The graphics engine queries the driver by calling <B><A HREF="grfncs_27.htm">DrvGetGlyphMode</A></B>
to find out how it should internally cache its font information. It can cache
individual glyphs as bitmaps, cutlines, or neither (the proper choice for
device fonts).
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
