<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EngBitBlt</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_EngBitBlt_GG"></A>EngBitBlt</H2>
<P>
<B>BOOL EngBitBlt(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoDst</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoSrc</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoMask</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN CLIPOBJ  </B><I>*pco</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN XLATEOBJ  </B><I>*pxlo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN RECTL  </B><I>*prclDst</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>*pptlSrc</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>*pptlMask</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN BRUSHOBJ  </B><I>*pbo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>*pptlBrush</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN ROP4  </B><I>rop4</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>EngBitBlt</B>&nbsp;provides general bit-block transfer capabilities either
between device-managed surfaces, or between a device-managed surface and a
GDI-managed standard format bitmap.
<H3>Parameters</H3>
<DL>
<DT>
<I>psoDst</I>
<DD>
Points to the <A HREF="grstrcts_30.htm">SURFOBJ</A>&nbsp;that identifies the surface on
which to draw.
<BR>
<DT>
<I>psoSrc</I>
<DD>
If the <I>rop4</I>&nbsp;requires it, points to a SURFOBJ that defines the source
for the bit-block transfer operation.
<BR>
<DT>
<I>psoMask</I>
<DD>
Points to a SURFOBJ that defines a surface to be used as a mask. The mask is
defined as a bitmap with 1 bit per pixel. Typically, a mask limits the area
that is to be modified in the destination surface. Masking is selected by a <I>rop4</I>
with the value 0xAACC. The destination surface is unaffected when the mask is
zero.
<P>
The mask is large enough to cover the destination rectangle.
<P>
If the value of this parameter is null and a mask is required by the <I>rop4</I>,
then the implicit mask in the brush is used. If a mask is required, then <I>psoMask</I>
overrides the implicit mask in the brush.
<BR>
<DT>
<I>pco</I>
<DD>
Points to a <A HREF="grstrcts_4.htm">CLIPOBJ</A>&nbsp;structure. The <B>CLIPOBJ_</B><I>Xxx</I>
service routines are provided to enumerate the clip region as a set of
rectangles. This enumeration limits the area of the destination that will be
modified. Whenever possible, GDI simplifies the clipping involved; for
example, this function is never called with a single clipping rectangle. GDI
clips the destination rectangle before calling this function, making
additional clipping unnecessary.
<BR>
<DT>
<I>pxlo</I>
<DD>
Points to a <A HREF="grstrcts_35.htm">XLATEOBJ</A>&nbsp;that tells how color indices
should be translated between the source and target surfaces.
<BR>
<DT>
<I>prclDst</I>
<DD>
Points to a RECTL structure in the coordinate system of the destination
surface that defines the area to be modified. The rectangle is defined by two
points; upper left and lower right. The lower and right edges of this
rectangle are not part of the bit-block transfer, meaning the rectangle is
lower right exclusive.
<P>
<B>EngBitBlt</B>&nbsp;is never called with an empty destination rectangle. The two
points that define the rectangle are always well ordered.
<BR>
<DT>
<I>pptlSrc</I>
<DD>
Points to a POINTL structure that defines the upper left corner of the source
rectangle, if a source exists. If there is no source, the driver should ignore
this parameter.
<BR>
<DT>
<I>pptlMask</I>
<DD>
Points to a POINTL structure that defines which pixel in the mask corresponds
to the upper left corner of the destination rectangle. If no mask is specified
in <I>psoMask</I>&nbsp;the driver should ignore this parameter.
<BR>
<DT>
<I>pbo</I>
<DD>
Points to the brush object to be used to define the pattern for the bit-block
transfer. GDI’s <B><A HREF="grfncs_2.htm">BRUSHOBJ_pvGetRbrush</A></B>
service routine retrieves the device’s realization of the brush. The driver
can ignore this parameter if the <I>rop4</I>&nbsp;parameter does not require a
pattern.
<BR>
<DT>
<I>pptlBrush</I>
<DD>
Points to a POINTL structure that defines the origin of the brush in the
destination surface. The upper left pixel of the brush is aligned at this
point and the brush repeats according to its dimensions. Ignore this parameter
if the <I>rop4</I>&nbsp;parameter does not require a pattern.
<BR>
<DT>
<I>rop4</I>
<DD>
Represents a raster operation that defines how the mask, pattern, source, and
destination pixels are combined to write an output pixel to the destination
surface.
<P>
This is a quaternary raster operation, which is a natural extension of the
usual ternary Rop3 operation. A Rop4 has 16 relevant bits, which are similar
to the 8 defining bits of a Rop3. (The other, redundant bits of the Rop3 are
ignored.) The simplest way to implement a Rop4 is to consider its 2 bytes
separately. The lower byte specifies a Rop3 that should be computed wherever
the mask is 1. The high byte specifies a Rop3 that can be computed and applied
wherever the mask is 0.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful. Otherwise, it is
FALSE, and an error code is logged.
<H3>Comments</H3>
<P>
If a device’s surface is organized as a standard-format bitmap, the driver can
request that GDI perform the bit-block transfer by calling <B>EngBitBlt</B>. A
driver might do this if it has special hardware to handle simple transfers
quickly, but doesn’t want to handle calls with complicated transfers.
<P>
GDI services reduce clipping to a series of clip rectangles. A translation
vector assists in color index translation for palettes.
<P>
If the source surface is palette-managed, its colors are represented by
indices into an array of RGB colors. The XLATEOBJ can be queried for a
translate vector that allows the driver to quickly translate any source index
into a color index for the destination.
<P>
The situation is more complicated when, for example, the source is RGB, but
the destination is palette-managed. In this case, the closest match for each
source RGB value must be found in the destination palette. The XLATEOBJ
contains the address of a service routine to perform this operation.
<P>
Optionally, the driver can match colors when the target palette is the default
device palette.
<P>
See the <I>Win32 SDK</I>&nbsp;for more information on raster operations.
<H3>See Also</H3>
<P>
<A HREF="grstrcts_1.htm">BRUSHOBJ</A>, <B><A HREF="grfncs_2.htm">BRUSHOBJ_pvGetRbrush</A></B>,
<A HREF="grstrcts_4.htm">CLIPOBJ</A>, <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>,
<B><A HREF="grfncs_64.htm">EngAssociateSurface</A></B>, <A HREF="grstrcts_30.htm">SURFOBJ</A>,
<A HREF="grstrcts_35.htm">XLATEOBJ</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
