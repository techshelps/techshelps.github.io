<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DrvStrokePath</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DrvStrokePath_GG"></A>DrvStrokePath</H2>
<P>
<B>BOOL DrvStrokePath(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*pso</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN PATHOBJ  </B><I>*ppo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN CLIPOBJ  </B><I>*pco</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN XFORMOBJ  </B><I>*pxo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN BRUSHOBJ  </B><I>*pbo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>*pptlBrushOrg</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN LINEATTRS  </B><I>*plineattrs</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN MIX  </B><I>mix</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>DrvStrokePath</B>&nbsp;strokes a path when called by GDI. If the driver has
hooked the function, and if the appropriate GCAPs are set, GDI calls <B>DrvStrokePath</B>
when GDI draws a line or curve with any set of attributes.
<H3>Parameters</H3>
<DL>
<DT>
<I>pso</I>
<DD>
Identifies the surface on which to draw.
<BR>
<DT>
<I>ppo</I>
<DD>
Points to a <A HREF="grstrcts_27.htm">PATHOBJ</A>&nbsp;structure. GDI <B>PATHOBJ_</B><I>Xxx</I>
service routines are provided to enumerate the lines, Bezier curves, and other
data that make up the path. This indicates what is to be drawn.
<BR>
<DT>
<I>pco</I>
<DD>
Points to a <A HREF="grstrcts_4.htm">CLIPOBJ</A>&nbsp;structure. GDI <B>CLIPOBJ_</B><I>Xxx</I>
service routines are provided to enumerate the clip region as a set of
rectangles. Optionally, all the lines in the path may be enumerated preclipped
by CLIPOBJ. This means that drivers can have all their line clipping
calculations done for them.
<BR>
<DT>
<I>pxo</I>
<DD>
Points to a <A HREF="grstrcts_34.htm">XFORMOBJ</A>. This is only needed when a
geometric wide line is to be drawn. It specifies the transform that maps world
coordinates to device coordinates. This is needed because the path is provided
in device coordinates but a geometric wide line is actually widened in world
coordinates.
<P>
The XFORMOBJ can be queried to find the transform.
<BR>
<DT>
<I>pbo</I>
<DD>
Specifies the brush to be used when drawing the path.
<BR>
<DT>
<I>pptlBrushOrg</I>
<DD>
Points to the brush origin used to align the brush pattern on the device.
<BR>
<DT>
<I>plineattrs</I>
<DD>
Points to a <A HREF="grstrcts_25.htm">LINEATTRS</A>&nbsp;structure. Note that the <B>elStyleState</B>
member must be updated as part of this function if the line is styled. Also
note that the <B>ptlLastPel</B>&nbsp;member must be updated if a single pixel width
cosmetic line is being drawn.
<BR>
<DT>
<I>mix</I>
<DD>
Specifies how to combine the brush with the destination.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the driver is able to stroke the path. If GDI
should stroke the path, the return value is FALSE, and an error code is not
logged. If the driver encounters an error, the return value is DDI_ERROR, and
an error code is logged.
<H3>Comments</H3>
<P>
If a driver supports this entry point, it should also support the drawing of
cosmetic wide lines with arbitrary clipping. Using the provided GDI functions,
the call can be broken down into a set of single-pixel-width lines with
precomputed clipping.
<P>
This function is required if any drawing is to be done on a device-managed
surface.
<P>
Drivers for advanced devices can optionally receive this call to draw paths
containing Bezier curves and geometric wide lines. GDI will test the
GCAPS_BEZIERS and GCAPS_GEOMETRICWIDE flags of the <B>flGraphicsCaps</B>
member of the <A HREF="grstrcts_6.htm">DEVINFO</A>&nbsp;structure to decide whether it
should call. (The four combinations of the bits determine the four levels of
functionality for this call.) If the driver gets an advanced call containing
Bezier curves or geometric wide lines, it can decide not to handle the call,
returning FALSE. This might happen if the path or clipping is too complex for
the device to process. If the call does return FALSE, GDI breaks the call down
into simpler calls that can be handled easily.
<P>
For device-managed surfaces, the function must minimally support
single-pixel-wide solid and styled cosmetic lines using a solid-colored brush.
The device can return FALSE if the line is geometric and the engine will
convert those calls to <B><A HREF="grfncs_24.htm">DrvFillPath</A></B>&nbsp;or <B><A HREF="grfncs_34.htm">DrvPaint</A></B>
calls.
<P>
The mix mode defines how the incoming pattern should be mixed with the data
already on the device surface. The MIX data type consists of two ROP2 values
packed into a single ULONG. The low-order byte defines the foreground raster
operation; the next byte defines the background raster operation. For more
information about raster operation codes, see the <I>Win32 SDK</I>.
<H3>See Also</H3>
<P>
<A HREF="grstrcts_4.htm">CLIPOBJ</A>, <A HREF="grstrcts_6.htm">DEVINFO</A>, <B><A HREF="grfncs_24.htm">DrvFillPath</A></B>,
<B><A HREF="grfncs_34.htm">DrvPaint</A></B>, <A HREF="grstrcts_25.htm">LINEATTRS</A>,
<A HREF="grstrcts_27.htm">PATHOBJ</A>, <A HREF="grstrcts_34.htm">XFORMOBJ</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
