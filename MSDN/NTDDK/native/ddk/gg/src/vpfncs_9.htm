<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VideoPortGetDeviceBase</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_VideoPortGetDeviceBase_GG"></A>VideoPortGetDeviceBase</H2>
<P>
<B>PVOID VideoPortGetDeviceBase(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>PVOID</B>&nbsp; <I>HwDeviceExtension</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>PHYSICAL_ADDRESS</B>&nbsp; <I>IoAddress</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>ULONG</B>&nbsp; <I>NumberOfUchars</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>UCHAR</B>&nbsp; <I>InIoSpace</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp;);
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>VideoPortGetDeviceBase</B>&nbsp;maps a range of bus-relative device memory or
I/O addresses into the system (kernel) address space. 
<H3>Parameters</H3>
<DL>
<DT>
<I>HwDeviceExtension</I>
<DD>
Points to the miniport driver’s device extension.
<BR>
<DT>
<I>IoAddress</I>
<DD>
Specifies the base physical address of the range to be mapped. This is a
bus-relative value obtained by calling <B><A HREF="vpfncs_7.htm">VideoPortGetBusData</A></B>,
<B><A HREF="vpfncs_10.htm">VideoPortGetDeviceData</A></B>, <B><A HREF="vpfncs_11.htm">VideoPortGetRegistryParameters</A></B>,
or <B><A HREF="vpfncs_6.htm">VideoPortGetAccessRanges</A></B>,
or else this value<I>&nbsp;</I>is a driver-supplied default base address for the
device memory or I/O ports. However obtained, the range described by <I>IoAddress</I>
and <I>NumberOfUchars</I>&nbsp;must have been successfully claimed in the registry
with a preceding call to <B><A HREF="vpfncs_39.htm">VideoPortVerifyAccessRanges</A></B>
or <B><A HREF="vpfncs_6.htm">VideoPortGetAccessRanges</A></B>.
<BR>
<DT>
<I>NumberOfUchars</I>
<DD>
Specifies the number of bytes, starting at the given <I>IoAddress</I>, to be
mapped.
<BR>
<DT>
<I>InIoSpace</I>
<DD>
Specifies that the range is in system I/O space if the value is TRUE. FALSE
indicates that the range is in memory space.
</DL>
<H3>Return Value</H3>
<P>
<B>VideoPortGetDeviceBase</B>&nbsp;returns a mapped logical base address suitable
for use with the <B>VideoPortRead</B><I>Xxx</I>, <B>VideoPortWrite</B><I>Xxx</I>,
and all <B>VideoPort..Memory</B>&nbsp;functions except <B><A HREF="vpfncs_16.htm">VideoPortMapMemory</A></B>
and <B><A HREF="vpfncs_38.htm">VideoPortUnmapMemory</A></B>. If the
given bus-relative range cannot be mapped, it returns NULL.
<H3>Comments</H3>
<P>
After <B>VideoPortGetDeviceBase</B>&nbsp;has performed the mapping, the miniport
driver can communicate with its adapter by calling the <B>VideoPortRead/Write</B><I>Xxx</I>
functions, using the mapped logical addresses. A miniport driver also must use
mapped logical addresses to call <B><A HREF="vpfncs_2.htm">VideoPortCompareMemory</A></B>,
<B><A HREF="vpfncs_17.htm">VideoPortMoveMemory</A></B>, <B><A HREF="vpfncs_52.htm">VideoPortZeroDeviceMemory</A></B>,
and <B><A HREF="vpfncs_53.htm">VideoPortZeroMemory</A></B>. <B>VideoPortGetDeviceBase</B>
must be called from the miniport’s <B><A HREF="vmpfncs_3.htm">HwVidFindAdapter</A></B>,
<B><A HREF="vmpfncs_6.htm">HwVidQueryDeviceCallback</A></B>, or <B><A HREF="vmpfncs_7.htm">HwVidQueryNamedValueCallback</A></B>
function.
<P>
The mapped base address returned by <B>VideoPortGetDeviceBase</B>&nbsp;and length
of the mapped access range should be stored in the <I>HwDeviceExtension</I>
for later use before <B>HwVidFindAdapter</B>&nbsp;returns control.
<P>
Access to the mapped address space must follow these rules:
<UL>
<LI>
If the input value for <I>InIoSpace</I>&nbsp;is TRUE, indicating that the address <I>is</I>
in I/O space, the returned mapped logical address should be used with the <B>VideoPortRead/WritePort</B><I>Xxx</I><B>
</B>and <B>VideoPortRead/WritePortBuffer</B><I>Xxx</I>&nbsp;functions where <I>Xxx</I>
is one of <B>Uchar</B>, <B>Ushort</B>, or <B>Ulong</B>.
<P>
<LI>
If the input value for <I>InIoSpace</I>&nbsp;is FALSE, indicating the address <I>is
not</I>&nbsp;in I/O space but in memory space, the returned mapped logical address
should be used with the <B>VideoPortRead/WriteRegister</B><I>Xxx</I><B>&nbsp;</B>and
<B>VideoPortRead/WriteRegisterBuffer</B><I>Xxx</I>&nbsp;functions, where <I>Xxx</I>
is one of <B>Uchar, Ushort, or Ulong</B>.
<P>
<LI>
The driver must not access addresses outside the range delimited by the given <I>NumberOfUchars</I>.
</UL>
<P>
If a miniport driver finds that it does not support an adapter for which it
has mapped a logical range, it must call <B>VideoPortFreeDeviceBase</B>&nbsp;to
unmap the previously mapped range from the system address space, and release
its claims on the range in the registry with <B>VideoPortGetAccessRanges</B>
or <B>VideoPortVerifyAccessRanges</B>, before it returns control to the <B><A HREF="vmpfncs_1.htm">DriverEntry</A></B>
function.
<H3>See Also</H3>
<P>
<B><A HREF="vmpfncs_3.htm">HwVidFindAdapter</A></B>, <B><A HREF="vmpfncs_6.htm">HwVidQueryDeviceCallback</A></B>,
<B><A HREF="vmpfncs_7.htm">HwVidQueryNamedValueCallback</A></B>,
<B><A HREF="vpfncs_2.htm">VideoPortCompareMemory</A></B>, <B><A HREF="vpfncs_5.htm">VideoPortFreeDeviceBase</A></B>,
<B><A HREF="vpfncs_6.htm">VideoPortGetAccessRanges</A></B>, <B><A HREF="vpfncs_7.htm">VideoPortGetBusData</A></B>,
<B><A HREF="vpfncs_10.htm">VideoPortGetDeviceData</A></B>, <B><A HREF="vpfncs_11.htm">VideoPortGetRegistryParameters</A></B>,
<B><A HREF="vpfncs_17.htm">VideoPortMoveMemory</A></B>, <B>VideoPortRead</B><I>Xxx</I>,
<B><A HREF="vpfncs_39.htm">VideoPortVerifyAccessRanges</A></B>,
<B>VideoPortWrite</B><I>Xxx</I>, <B><A HREF="vpfncs_52.htm">VideoPortZeroDeviceMemory</A></B>,
<B><A HREF="vpfncs_53.htm">VideoPortZeroMemory</A></B>
<P></FONT>
</BODY>
</HTML>
