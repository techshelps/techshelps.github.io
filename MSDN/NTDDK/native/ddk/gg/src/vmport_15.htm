<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting up Video Adapter Access Ranges</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Setting_up_Video_Adapter_Access_Ranges_GG"></A>Setting up Video Adapter Access Ranges</H3>
<P>
An array of VIDEO_ACCESS_RANGE-type elements describes one or more ranges of
I/O ports and/or memory used by a video adapter. Each element specifies a set
of registers or I/O ports the adapter will respond to and that the <B>HwVidFindAdapter</B>
routine will attempt to communicate with. Each access range element in this
access ranges array contains bus-relative “physical” address values. The
driver must claim, and have an entry for, any port or range of ports that the
adapter will respond to.
<P>
A miniport driver also must map each bus-relative physical address range, that
the software must communicate with, in its access ranges array to a system
logical address range with <B>VideoPortGetDeviceBase</B>&nbsp;in order to
communicate with an adapter. The HAL can remap bus-relative access range
values to system-space logical address ranges, particularly in multiple bus
machines.
<P>
Every video miniport driver must define the bus-relative access ranges for its
device, either as statically allocated memory in the driver’s code or on the
stack. Except for miniport drivers, such as VGA-compatible SVGA miniports,
that use PC standard address ranges for video memory, most miniport drivers
set up their video access ranges on the stack.
<P>
If <B>HwVidFindAdapter</B>&nbsp;cannot get bus-relative access ranges information
by calling <B>VideoPortGetBusData</B>, <B>VideoPortGetAccessRanges</B>, or
from the registry with <B>VideoPortGetDeviceData</B>&nbsp;or <B>VideoPortGetRegistryParameters</B>,
the miniport should have a set of bus-relative default values for access
ranges.
<P>
If a miniport’s access ranges are externally configurable, the installation
program sets up access ranges for the adapter in the registry. Such a
miniport’s <B>HwVidFindAdapter</B>&nbsp;routine can call <B>VideoPortGetRegistryParameters</B>
with a miniport-supplied <B>HwVidQueryValueCallback</B>&nbsp;routine that will
process information retrieved from the registry. For more information about
registry functions, see <A HREF="vmport_20.htm">Registry
HwVidXxx Callbacks</A>.
<P>
If possible, video miniport drivers should try to auto-detect their adapters,
rather than depending on configuration utilities. Doing this is required for
the autodetection of adapter features during installation using a setup
script.
<P>
The <B>HwVidFindAdapter</B>&nbsp;function <I>must always</I>&nbsp;call<B>
VideoPortVerifyAccessRanges</B>&nbsp;or<B>&nbsp;VideoPortGetAccessRanges </B>successfully
<I>before</I>&nbsp;it calls<B>&nbsp;VideoPortGetDeviceBase</B>.
<UL>
<LI>
Any successful call to <B>VideoPortVerifyAccessRanges</B>&nbsp;or <B>VideoPortGetAccessRanges</B>
establishes a miniport driver’s claim on bus-specific video memory and
register addresses or I/O ports for its adapter in the registry. It is
critical to note, however, any subsequent call to <B>VideoPortVerifyAccessRanges</B>
or <B>VideoPortGetAccessRanges</B>&nbsp;will cause the previous claimed resources
by that driver to be erased an replaced with the ranges specified to those
functions. If a driver claims ranges by separate calls to these functions,
then the range arrays must be cumulative.
<P>
<LI>
To claim other types of hardware resources, such as an interrupt vector, a
miniport driver should set appropriate values in the VIDEO_PORT_CONFIG_INFO
and call <B>VideoPortVerifyAccessRanges</B>, or it should call <B>VideoPortGetAccessRanges</B>.
<P>
<LI>
Calling <B>VideoPortGetAccessRanges</B>&nbsp;or <B>VideoPortVerifyAccessRanges</B>
successfully ensures that a miniport driver does not try to use register or
device memory addresses already in use by another driver.
<P>
<LI>
Claiming an adapter’s bus-relative hardware resources in the registry prevents
drivers that load later from attempting to use the same access ranges (and
other hardware resources) for their adapters. It also prevents a subsequently
loaded driver from changing the initialized state of the video adapter.
</UL>
<P>
Note that <B>HwVidFindAdapter</B>&nbsp;must call either <B>VideoPortVerifyAccessRanges</B>
or <B>VideoPortGetAccessRanges</B>&nbsp;<I>before</I>&nbsp;the miniport attempts to
initialize an adapter on the I/O bus specified by the <B>SystemIoBusNumber</B>
in the input VIDEO_PORT_CONFIG_INFO. If <B>VideoPortVerifyAccessRanges</B>&nbsp;or <B>VideoPortGetAccessRanges</B>
returns an error status, which indicates a resource conflict, the <B>HwVidFindAdapter</B>
function can call again with another set of access ranges if the adapter can
be configured at different addresses. Otherwise, it should propagate the
returned status and return control immediately.
<P>
Note also that the <B>HwVidFindAdapter</B>&nbsp;function can claim a small set of
access ranges for an adapter, use this set to determine whether the adapter is
one that the miniport supports, and claim a full set of access ranges for a
supported adapter with another call to <B>VideoPortGetAccessRanges</B>&nbsp;or <B>VideoPortVerifyAccessRanges</B>.
Each successful call to these <B>VideoPort..AccessRanges</B>&nbsp;routines for a
particular adapter overwrites the caller’s previous claims in the registry.
<P>
Every <B>HwVidFindAdapter</B>&nbsp;function must map claimed bus-relative device
memory ranges with <B>VideoPortGetDeviceBase</B>&nbsp;before the miniport attempts
to communicate with an adapter on a given I/O bus. <B>VideoPortGetDeviceBase</B>
returns a system-space, logical base address for a mapped range that the
driver can pass in calls to the <B>VideoPortRead</B><I>Xxx</I>&nbsp;and <B>VideoPortWrite</B><I>Xxx</I>
to determine whether an adapter it supports is present in the machine. Such a
returned logical address also can be passed to <B>VideoPortCompareMemory</B>, <B>VideoPortMoveMemory</B>,
<B>VideoPortZeroDeviceMemory</B>, and/or <B>VideoPortZeroMemory</B>.
<P></FONT>
</BODY>
</HTML>
