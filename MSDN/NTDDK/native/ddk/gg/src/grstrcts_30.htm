<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SURFOBJ</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_SURFOBJ_GG"></A>SURFOBJ</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _SURFOBJ {
&nbsp; &nbsp; DHSURF dhsurf;
&nbsp; &nbsp; HSURF  hsurf;
&nbsp; &nbsp; DHPDEV dhpdev;
&nbsp; &nbsp; HDEV   hdev;
&nbsp; &nbsp; SIZEL  sizlBitmap;
&nbsp; &nbsp; ULONG  cjBits;
&nbsp; &nbsp; PVOID  pvBits;
&nbsp; &nbsp; PVOID  pvScan0;
&nbsp; &nbsp; LONG   lDelta;
&nbsp; &nbsp; ULONG  iUniq;
&nbsp; &nbsp; ULONG  iBitmapFormat;
&nbsp; &nbsp; USHORT iType;
&nbsp; &nbsp; USHORT fjBitmap;
} SURFOBJ;
</FONT></PRE>
<P>
The SURFOBJ structure is the user object for a surface. A device driver
usually calls methods on a surface object only when the surface object
represents a GDI bitmap or a device-managed surface.
<H3>Members</H3>
<DL>
<DT>
<B>dhsurf</B>
<DD>
If the surface is a device managed surface, this member is a device handle
identifying the surface. Otherwise, this member is zero.
<BR>
<DT>
<B>hsurf</B>
<DD>
Identifies the surface.
<BR>
<DT>
<B>dhpdev</B>
<DD>
Identifies the device’s <A HREF="glossary.htm#DDK_PDEV_GG">PDEV</A>&nbsp;that is associated with the
specified surface.
<BR>
<DT>
<B>hdev</B>
<DD>
GDI’s logical handle for the PDEV associated with this device.
<BR>
<DT>
<B>sizlBitmap</B>
<DD>
Specifies the size of the surface, in pixels.
<BR>
<DT>
<B>cjBits</B>
<DD>
Specifies the size of the buffer pointed to, if <B>pvBits</B>&nbsp;is not null.
<BR>
<DT>
<B>pvBits</B>
<DD>
Points to the surface’s pixels, if the surface is a standard format bitmap.
Otherwise, this member is null.
<BR>
<DT>
<B>pvScan0</B>
<DD>
Points to the first scanline of the bitmap.
<BR>
<DT>
<B>lDelta</B>
<DD>
Specifies the count of bytes required to move down one scan line in the
bitmap.
<BR>
<DT>
<B>iUniq</B>
<DD>
Specifies the current state of the specified surface. Every time the surface
changes this value is incremented; this enables drivers to cache source
surfaces.
<BR>
<DT>
<B>iBitmapFormat</B>
<DD>
Specifies the standard format most closely matching this surface. If the <B>iType</B>
member specifies a bitmap (STYPE_BITMAP), this member specifies its format.
Windows NT supports a set of predefined formats, although applications can
also send device-specific formats by using <B>SetDIBitsToDevice</B>. Supported
predefined formats include the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_1BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
1 bit per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_4BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
4 bits per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_8BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
8 bits per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_16BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
16 bits per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_24BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
24 bits per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_32BPP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
32 bits per pixel.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_4RLE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
4 bits per pixel, run length encoded.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_8RLE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
8 bits per pixel, run length encoded.
</FONT></TABLE>
<DT>
<B>iType</B>
<DD>
Surface type, which is one of the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Type</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Definition</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STYPE_BITMAP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The surface is a bitmap.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STYPE_DEVICE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The surface is managed by the device.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STYPE_DEVBITMAP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The surface is a device format bitmap.
</FONT></TABLE>
<DT>
<B>fjBitmap</B>
<DD>
If the surface is of type STYPE_BITMAP and is a standard noncompressed format
bitmap, the following flag can be set. Otherwise, this member should be
ignored.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_TOPDOWN
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The first scan line represents the <I>top</I>&nbsp;of the bitmap.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_NOZEROINIT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The bitmap was not zero-initialized.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BMF_DONTCACHE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The bitmap should not be cached by the driver because it is a transient
bitmap, created by GDI, that the driver will never see again.
</FONT></TABLE>
</DL>
<H3>Comments</H3>
<P>
When information about a particular surface is required by a driver, the
driver must access the SURFOBJ. This structure allows quick access to the
properties of the surface.
<P>
When a SURFOBJ structure represents a GDI bitmap, the driver must be able to
determine the format of the bitmap and locate the bitmap bits.
<P>
When a SURFOBJ structure represents a device surface, the driver must be able
to locate the device handle for the surface.
<P></FONT>
</BODY>
</HTML>
