<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwVidSynchronizeExecutionCallback Functionality</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HwVidSynchronizeExecutionCallback_Functionality_GG"></A>HwVidSynchronizeExecutionCallback Functionality</H2>
<P>
Miniport drivers for adapters that do not generate interrupts seldom call <B>VideoPortSynchronizeExecution</B>
with a <B><A HREF="vmpfncs_10.htm">HwVidSynchronizeExecutionCallback</A></B>
function.
<P>
In fact, even miniport drivers that have a <B>HwVidInterrupt</B>&nbsp;function do
not necessarily have a <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function.
Because the video port driver does not send a request to a miniport’s <B>HwVidStartIO</B>
function until it completes processing of the preceding request (see <A HREF="vmport_24.htm">HwVidStartIO
Functionality</A>&nbsp;for more information), miniport drivers rarely call <B>VideoPortSynchronizeExecution</B>.
<P>
There are two possible uses for a miniport’s <B>HwVidSynchronizeExecutionCallback</B>
function:
<UL>
<LI>
To access the adapter registers using the miniport’s device extension for a
driver function other than the <B>HwVidInterrupt</B>&nbsp;function
<P>
When the <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function is given control,
interrupts from the adapter are masked off so the miniport’s <B>HwVidInterrupt</B>
function cannot change state in the device extension while the <B>HwVidSynchronizeExecutionCallback</B>
function is running in an SMP machine.
<P>
<LI>
To write commands to the adapter registers or ports very quickly if the
adapter requires it
<P>
When the <B>HwVidSynchronizeExecutionCallback </B>function is given control,
almost all system interrupts are masked off, so the <B>HwVidSynchronizeExecutionCallback</B>
function cannot be preempted by a device (or even, a clock) interrupt.
<P>
A <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function <I>must </I>return control
as quickly as possible.
</UL>
<P>
With the first type of <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function, the
miniport calls <B>VideoPortSynchronizeExecution</B>&nbsp;with the <I>Priority</I>
set to <B>VpMediumPriority</B>. With the second type of <B>HwVidSynchronizeExecutionCallback</B>
function, the miniport also makes this call with the <I>Priority</I>&nbsp;set to <B>VpMediumPriority</B>
if the driver has no <B>HwVidInterrupt</B>&nbsp;function. Otherwise, such a
miniport makes this call with the <I>Priority</I>&nbsp;set to <B>VpHighPriority</B>.
<P>
In general, a miniport driver should <I>not</I>&nbsp;call <B>VideoPortSynchronizeExecution</B>
with the second type of <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function
unless the driver designer has no other alternative: that is, unless the
adapter is such that it must be programmed with system interrupts masked off.
Otherwise, the miniport should call <B>VideoPortSynchronizeExecution</B>&nbsp;with
the <I>Priority</I>&nbsp;set to <B>VpLowPriority</B>.
<P>
A <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function, like a <B>HwVidInterrupt</B>
function, cannot be pageable and cannot call certain <B>VideoPort</B><I>Xxx</I>
functions without bringing down the system. For a summary of <B>VideoPort</B><I>Xxx</I>
that the <B>HwVidSynchronizeExecutionCallback</B>&nbsp;function can call safely,
see <A HREF="vmport_28.htm">HwVidInterrupt Functionality</A>.
<P></FONT>
</BODY>
</HTML>
