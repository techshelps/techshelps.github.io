<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Return from HwVidFindAdapter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Return_from_HwVidFindAdapter_GG"></A>Return from HwVidFindAdapter</H3>
<P>
If the miniport’s <B>HwVidFindAdapter</B>&nbsp;function cannot find an adapter it
supports, it should set <I>Again</I>&nbsp;to FALSE and return ERROR_DEV_NOT_EXIST.
If the <B>HwVidFindAdapter</B>&nbsp;function finds a supported adapter but the
driver cannot find valid configuration data for its adapter on a particular
I/O bus, it should set <I>Again</I>&nbsp;to FALSE and return
ERROR_INVALID_PARAMETER.
<P>
Note that setting <I>Again</I>&nbsp;to FALSE and returning control with
ERROR_DEV_NOT_EXIST or ERROR_INVALID_PARAMETER indicates that a given I/O bus,
identified by the <B>SystemIoBusNumber</B>&nbsp;in the input VIDEO_PORT_CONFIG_INFO
buffer, has no video adapters that the miniport driver can support. It does
not prevent the video port driver from calling <B>HwVidFindAdapter</B>&nbsp;again
with an updated <B>SystemIoBusNumber</B>&nbsp;so that <B>HwVidFindAdapter</B>&nbsp;can
look for its video adapter on another I/O bus of the same <B>AdapterInterfaceType</B>.
<P>
When the <B>HwVidFindAdapter</B>&nbsp;function finds an adapter it can support,
this function must fill in pertinent fields, as appropriate for its adapter
and the given <B>AdapterInterfaceType</B>, in the input VIDEO_PORT_CONFIG_INFO
buffer, and return NO_ERROR. The <B>HwVidFindAdapter</B>&nbsp;function can set <I>Again</I>
to TRUE to be called again with some of the same input VIDEO_PORT_CONFIG_INFO
values and a new device extension if there might be another of its adapters on
the same I/O bus. Usually, such a miniport driver’s adapter has relocatable
I/O ports or device memory.
<P>
If a miniport driver’s <B>HwVidFindAdapter</B>&nbsp;function finds that the video
adapter does not generate interrupts or that it cannot determine a valid
interrupt vector/level for the adapter, <B>HwVidFindAdapter</B>&nbsp;should set
both <B>InterruptLevel</B>&nbsp;and <B>InterruptVector</B>&nbsp;in the
VIDEO_PORT_CONFIG_INFO structure to zero.
<P>
When <B>HwVidFindAdapter</B>&nbsp;returns control, the video port driver checks the
interrupt configuration members in VIDEO_PORT_CONFIG_INFO and, if both are
zero, does not connect an interrupt for the miniport. Explicitly setting both
interrupt configuration members to zero in the <B>HwVidFindAdapter</B>
function disables the <B>HwVidInterrupt</B>&nbsp;entry point, if any, that was set
up by the miniport’s <B>DriverEntry</B>&nbsp;function.
<P>
When a miniport driver’s <B>HwVidFindAdapter</B>&nbsp;routine returns control, <B>VideoPortInitialize</B>
returns to the <B>DriverEntry</B>&nbsp;routine if the call(s) to <B>HwVidFindAdapter</B>
indicated that the miniport driver could not support an adapter. If a
miniport’s <B>HwVidFindAdapter</B>&nbsp;function does not return NO_ERROR for at
least one adapter, the driver does not remain loaded after its <B>DriverEntry</B>
function returns control. If a miniport’s <B>HwVidFindAdapter</B>&nbsp;function
returns anything other than NO_ERROR for a particular adapter, and no other
miniport driver returns NO_ERROR from its <B>HwVidFindAdapter</B>&nbsp;routine,
then that adapter will be unavailable to any display drivers.
<P></FONT>
</BODY>
</HTML>
