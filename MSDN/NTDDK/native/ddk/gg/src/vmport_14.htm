<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Calling VideoPortXxx from HwVidFindAdapter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Calling_VideoPortXxx_from_HwVidFindAdapter_GG"></A>Calling VideoPort<I>Xxx</I>&nbsp;from HwVidFindAdapter</H3>
<P>
Certain <B>VideoPort</B><I>Xxx</I>&nbsp;functions should be called only from the
miniport driver’s <B>HwVidFindAdapter</B>&nbsp;function(s). A <B>HwVidFindAdapter</B>
function would never call all of the following, but every <B>HwVidFindAdapter</B>
function must call some of the following <B>VideoPort</B><I>Xxx</I>:
<UL>
<LI>
<B>VideoPortGetBusData</B>&nbsp;to get bus-type-specific configuration information
about an adapter on a particular I/O bus
<P>
<LI>
<B>VideoPortSetBusData</B>&nbsp;to set bus-specific configuration data for an
adapter on a dynamically configurable I/O bus with a published standard
interface, such as a PCI bus, if necessary
<P>
<LI>
<B>VideoPortGetDeviceData</B>&nbsp;to get VIDEO_DEVICE_DATA_TYPE-specific
information from the registry and call a miniport-supplied <B>HwVidQueryDeviceCallback</B>
function to process the information, as described in <A HREF="vmport_21.htm">HwVidQueryDeviceCallback
Routine</A>.
<P>
<LI>
<B>VideoPortGetAccessRanges</B>&nbsp;to get bus-relative access ranges addresses,
and possibly other hardware configuration values, and to claim them in the
registry for use by the driver of an adapter, usually one on a configurable
I/O bus
<P>
<LI>
<B>VideoPortVerifyAccessRanges</B>&nbsp;to determine whether bus-relative video
memory and/or I/O ports for the adapter can be claimed by the miniport driver;
otherwise, a previously loaded driver has already claimed the resource in the
registry and the <B>HwVidFindAdapter</B>&nbsp;function must try to claim other
access ranges if possible or return control and propagate the status value
returned by <B>VideoPortVerifyAccessRanges</B>
<P>
<LI>
<B>VideoPortGetDeviceBase</B>&nbsp;to map each successfully claimed bus-relative
base address and range size, as described in each VIDEO_ACCESS_RANGE-type
element for the adapter, to a system-space logical address range
<P>
Each such (bus-relative) physical address range must be mapped with <B>VideoPortGetDeviceBase</B>
<I>before</I>&nbsp;it is used to access an adapter. With mapped logical range
addresses, the driver can call the <B>VideoPortRead</B><I>Xxx</I>&nbsp;and <B>VideoPortWrite</B><I>Xxx</I>
functions to read from or write to an adapter. For a mapped range in I/O
space, the miniport driver calls the <B>VideoPortReadPort</B><I>Xxx</I>&nbsp;and <B>VideoPortWritePort</B><I>Xxx</I>
functions. For a mapped range in memory, the miniport driver calls the <B>VideoPortReadRegister</B><I>Xxx</I>
and <B>VideoPortWriteRegister</B><I>Xxx</I>&nbsp;functions.
<P>
<LI>
<B>VideoPortFreeDeviceBase</B>&nbsp;to release such a mapped range if the <B>HwVidFindAdapter</B>
or <B>HwVidQueryDeviceCallback</B>&nbsp;function does not find an adapter it can
support on a given I/O bus, as indicated by the VIDEO_PORT_CONFIG_INFO <B>SystemIoBusNumber</B>
value
<P>
If this occurs, the miniport also must call <B>VideoPortVerifyAccessRanges</B>
to release its claims in the registry on the bus-relative access ranges for
that adapter.
<P>
<LI>
<B>VideoPortScanRom</B>&nbsp;to determine whether a specific signature matches that
of the machine ROM; in effect, this determines whether the miniport finds a
specific adapter with a video chip it can support.
</UL>
<P>
A <B>HwVidFindAdapter</B>&nbsp;routine also can call the <B>VideoPortGetRegistryParameters</B>
and <B>VideoPortSetRegistryParameters</B>&nbsp;functions to get and set
configuration information in the registry. For example, <B>HwVidFindAdapter</B>
might call <B>VideoPortSetRegistryParameters</B>&nbsp;to set up nonvolatile
configuration information in the registry for the next boot. It might call <B>VideoPortGetRegistryParameters</B>
to get adapter-specific, bus-relative configuration parameters written into
the registry by an installation program.
<P>
The <B>HwVidInitialize</B>&nbsp;function, described later in <A HREF="vmport_23.htm">HwVidInitialize
Functionality</A>, also can call <B>VideoPortGetRegistryParameters</B>&nbsp;or <B>VideoPortSetRegistryParameters</B>.
<P></FONT>
</BODY>
</HTML>
