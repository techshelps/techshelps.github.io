<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiling Your Driver</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Compiling_Your_Driver_GG"></A>Compiling Your Driver</H3>
<P>
Windows NT DDK drivers are built using the <B>build</B>&nbsp;utility, which uses a
set of rules and project files which specify how drivers should be created.
<P>
The <I>dirs</I>&nbsp;file specifies which directories in the subtrees contain
source code files which are to be built. The <I>sources</I>&nbsp;file specifies
which source files are required to build the current driver.
<P>
If your driver will consist of multiple binaries, or the source will be kept
in multiple directories, you may need to create a <I>dirs</I>&nbsp;file specifying
which directories are to be built and in what order. Each separate binary will
require a <I>sources</I>&nbsp;file describing which files are to be compiled/linked
to create the driver.
<P>
Each driver directory also contains a <I>makefile</I>. As <B>build</B>&nbsp;spawns
the <B>nmake</B>&nbsp;utility for each source file listed in <I>sources</I>, <B>nmake</B>
uses the <I>makefile</I>&nbsp;to generate dependency and command lists. The
standard <I>makefile</I>&nbsp;in a driver source code directory directs <B>nmake</B>
to the master <B>nmake</B>&nbsp;macro definition file, <B>makefile.def</B>. This
file defines the flags for the build tools such as the compiler and linker. <B>makefile.def</B>
simplifies the creation of platform-independent driver projects and is similar
to the <B>ntwin32.mak </B>file in the Win32 SDK.
<P>
Once you have your <I>dirs</I>, <I>sources</I>&nbsp;and <I>makefile</I>&nbsp;files
created, the next step is to run <B>build</B>. <B>Build</B>&nbsp;will parse the <I>sources</I>
file and spawn <B>nmake</B>&nbsp;for each source file. <B>Nmake</B>&nbsp;will evaluate
the macros in <B>makefile.def </B>and spawn the C compiler with the proper
switches. After the compile stages are completed, <B>build</B>&nbsp;will spawn <B>nmake</B>
again to link the objects and complete the driver building phase.
<P>
If your <I>sources</I>&nbsp;file is correct, running <B>build</B>&nbsp;is all that is
required to compile and link your driver. Using <B>build</B>&nbsp;and <B>makefile.def</B>
removes the guesswork from such things as which compiler switches are
required, and what arguments the linker requires. By adding the appropriate
defines to the <I>sources</I>&nbsp;file, it is possible to control the build
options in a platform-independent fashion.
<P>
During driver development you will need to build free and checked versions of
your driver. This is controlled by environment variable settings which are
interpreted by <B>build</B>&nbsp;and <B>nmake</B>. These variables are set by <I>setenv.bat,
</I>as discussed previously. To build a free driver, run <B>build</B>&nbsp;from the
free environment. To build a checked driver, run <B>build</B>&nbsp;from the checked
environment.
<P>
Template files (.tpl) for <I>dirs</I>, <I>sources</I>, <I>makefile</I>, and
other files can be found in the \&lt;<I>destination</I>&gt;\doc directory.
Working versions of these files can be found in driver source subdirectories
of the DDK. Examining these files along with <B>makefile.def</B>&nbsp;(located in
the \<I>&lt;destination</I>&gt;\inc directory) will provide additional
information.
<P>
For more information about the <B>build</B>&nbsp;utility, see the Windows NT DDK <I>Programmer’s
Guide</I>&nbsp;.
<P></FONT>
</BODY>
</HTML>
