<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwVidQueryDeviceCallback Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_HwVidQueryDeviceCallback_Routine_GG"></A>HwVidQueryDeviceCallback Routine</H3>
<P>
When the system bootstrap loader runs, as much information as possible is
stored in the registry about the I/O buses and peripherals that can be found
in the machine in the <B>\Registry\Machine\Hardware\Description</B>&nbsp;tree. A <B><A HREF="vmpfncs_6.htm">HwVidQueryDeviceCallback</A></B>
routine can be used to retrieve this information.
<P>
A video miniport driver can attempt to find an adapter it supports by calling <B>VideoPortGetDeviceData</B>
with a driver-supplied <B>HwVidQueryDeviceCallback</B>&nbsp;function, a pointer to
the miniport’s device extension, and a pointer to any driver-supplied context
data (which can be the VIDEO_PORT_CONFIG_INFO), requesting one of the
following types of data:
<UL>
<LI>
<B>VpBusData</B>&nbsp;for bus-type-specific configuration data if the <B>AdapterInterfaceType</B>
in the VIDEO_PORT_CONFIG_INFO was set to <B>Eisa</B>&nbsp;or <B>MicroChannel</B>
<P>
<LI>
<B>VpControllerData</B>&nbsp;for bus-relative configuration information about a
video adapter on the I/O bus in ARC-compliant (RISC-based) machines
<P>
<LI>
<B>VpMonitorData</B>&nbsp;for configuration information about the video monitor in
ARC-compliant machines
<P>
<LI>
<B>VpMachineData</B>&nbsp;for information on the identifier, specific resource
configuration data, and component information about the specific machine
<P>
<LI>
<B>VpCmosData</B>&nbsp;to return a copy of the CMOS and extended CMOS memory.
</UL>
<P>
If they call <B>VideoPortGetDeviceData</B>, video miniport drivers usually
request <B>VpBusData</B>-type configuration information. 
<P>
<B>VideoPortGetDeviceData</B>&nbsp;calls the <B>HwVidQueryDeviceCallback</B>
function with pointers to the input device extension and context data, and
with a pointer to a buffer containing the requested information and the length
in bytes of the returned data if any is available in the registry.
<P>
As already mentioned in <A HREF="vmport_15.htm">Setting
up Video Adapter Access Ranges</A>, any bus-relative addresses retrieved from the
registry for VIDEO_ACCESS_RANGEs must be mapped to logical address ranges by
calling <B>VideoPortGetDeviceBase</B>&nbsp;<I>before</I>&nbsp;they are stored in the
miniport’s device extension and <I>before</I>&nbsp;they are passed to a <B>VideoPortRead</B><I>Xxx</I>
or <B>VideoPortWrite</B><I>Xxx</I>&nbsp;function to communicate with the device.
<P></FONT>
</BODY>
</HTML>
