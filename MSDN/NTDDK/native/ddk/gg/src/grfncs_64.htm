<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EngAssociateSurface</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_EngAssociateSurface_GG"></A>EngAssociateSurface</H2>
<P>
<B>BOOL EngAssociateSurface(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN HSURF  </B><I>hsurf</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN HDEV  </B><I>hdev</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN FLONG  </B><I>flHooks</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>EngAssociateSurface</B>&nbsp;marks a given surface as belonging to a specified
device.
<H3>Parameters</H3>
<DL>
<DT>
<I>hsurf</I>
<DD>
Identifies the surface or bitmap to be associated with <I>hdev</I>.
<BR>
<DT>
<I>hdev</I>
<DD>
Identifies the device with which the surface is to be associated. This is the
handle that was passed to <B><A HREF="grfncs_8.htm">DrvCompletePDEV</A></B>.
<BR>
<DT>
<I>flHooks</I>
<DD>
Specifies a set of flags that control the functions the driver can hook. The
flags that can be set are as follows:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Flag</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Function to be hooked</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_BITBLT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_STRETCHBLT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_54.htm">DrvStretchBlt</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_TEXTOUT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_59.htm">DrvTextOut</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_PAINT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_34.htm">DrvPaint</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_STROKEPATH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_56.htm">DrvStrokePath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_FILLPATH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_24.htm">DrvFillPath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_STROKEANDFILLPATH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_55.htm">DrvStrokeAndFillPath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_LINETO
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_30.htm">DrvLineTo</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_COPYBITS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_9.htm">DrvCopyBits</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_SYNCHRONIZE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_58.htm">DrvSynchronize</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HOOK_SYNCHRONIZEACCESS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
See Comments below.
</FONT></TABLE>
<P>
When a standard format bitmap is being drawn on, GDI automatically manages the
operation. Setting bits in this parameter, except for HOOK_SYNCHRONIZEACCESS,
causes particular output functions to be sent to the driver instead. This is
referred to as hooking.
<P>
<B>EngAssociateSurface</B>&nbsp;can be used by printer drivers to implement “rules”
or device fonts, or by frame buffer display drivers to make use of special <I>blt</I>
hardware.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful. Otherwise, the driver
should send the information to the GDI function it is implementing, and return
GDI’s return value.
<H3>Comments</H3>
<P>
If the specified surface is a standard format bitmap, the driver can specify
which output functions to the surface it will handle.
<P>
When the surface is associated, it assumes the default palette and style steps
of the PDEV. A surface must be associated before it is returned by <B><A HREF="grfncs_21.htm">DrvEnableSurface</A></B>.
<P>
The HOOK_SYNCHRONIZEACCESS flag can be set by the driver to ensure that all
drawing calls to the surface are synchronized, or single-threaded.
<P>
By default, when a driver supports device bitmaps by implementing <B><A HREF="grfncs_10.htm">DrvCreateDeviceBitmap</A></B>/<B><A HREF="grfncs_11.htm">DrvDeleteDeviceBitmap</A></B>,
GDI does not automatically synchronize drawing calls to the device bitmap and
to the primary surface. For example, GDI can call the driver&#39;s <B>DrvBitBlt</B>
function to draw to a device bitmap, while another thread is drawing to the
primary surface by executing the driver&#39;s implementation of <B>DrvTextOut</B>.
The driver can even be called to draw to multiple device bitmaps at the same
time.
<P>
A display driver can use the HOOK_SYNCHRONIZEACCESS value to have GDI
synchronize access for drawing on this surface while drawing occurs on the
main surface; or on any other surface that the driver supports. Such
single-threading can be necessary if:
<UL>
<LI>
The driver creates device-managed bitmaps in the same memory block that the
primary display surface is in, <I>and</I>;
<P>
<LI>
The driver can’t have two calls accessing the memory block, or its hardware
drawing accelerators, at the same time.
</UL>
<P>
Most hardware must be used synchronously and such synchronization is managed
by GDI when the driver sets the HOOK_SYNCHRONIZEACCESS flag. This flag causes
GDI to synchronize all accesses to that device bitmap with all accesses to the
primary surface, or to any other synchronized device bitmap. That is, if the
driver sets this flag for all device bitmaps, it will be guaranteed to be
single-threaded for any drawing operation.
<P>
<B>Note</B>&nbsp; GDI only allows one drawing thread to access a surface at a time.
If a device driver supports device format bitmaps, then many threads might be
in the driver at the same time drawing on different surfaces. The driver does
not, by default, single-thread access all device surfaces, but if the
HOOK_SYNCHRONIZEACCESS bit is specified in <B>EngAssociateSurface</B>&nbsp;for all
a driver&#39;s device bitmaps, then GDI will single-thread all drawing calls
to the driver.
<H3>See Also</H3>
<P>
<B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>, <B><A HREF="grfncs_8.htm">DrvCompletePDEV</A></B>,
<B><A HREF="grfncs_9.htm">DrvCopyBits</A></B>, <B><A HREF="grfncs_10.htm">DrvCreateDeviceBitmap</A></B>,
<B><A HREF="grfncs_11.htm">DrvDeleteDeviceBitmap</A></B>, <B><A HREF="grfncs_21.htm">DrvEnableSurface</A></B>,
<B><A HREF="grfncs_24.htm">DrvFillPath</A></B>, <B><A HREF="grfncs_30.htm">DrvLineTo</A></B>,
<B><A HREF="grfncs_34.htm">DrvPaint</A></B>, <B><A HREF="grfncs_54.htm">DrvStretchBlt</A></B>,
<B><A HREF="grfncs_55.htm">DrvStrokeAndFillPath</A></B>, <B><A HREF="grfncs_56.htm">DrvStrokePath</A></B>,
<B><A HREF="grfncs_58.htm">DrvSynchronize</A></B>, <B><A HREF="grfncs_59.htm">DrvTextOut</A></B>
<P></FONT>
</BODY>
</HTML>
