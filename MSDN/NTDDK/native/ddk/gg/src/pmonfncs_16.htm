<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ReadPort</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ReadPort_GG"></A>ReadPort</H2>
<P>
<B>BOOL (WINAPI *pfnReadPort)(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>HANDLE  </B><I>hPort</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>LPBYTE  </B><I>pBuffer</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>DWORD  </B><I>cbBuffer</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>LPDWORD  </B><I>pcbRead</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>ReadPort</B>&nbsp;reads data from the specified printer port.
<H3>Parameters</H3>
<DL>
<DT>
<I>hPort</I>
<DD>
Handle to the port from which to read.
<BR>
<DT>
<I>pBuffer</I>
<DD>
Points to a buffer in which data read from the printer can be written.
<BR>
<DT>
<I>cbBuffer</I>
<DD>
Specifies the size, in bytes, of the buffer pointed to by <I>pBuffer</I>.
<BR>
<DT>
<I>pcbRead</I>
<DD>
Points to the location in which to return the number of bytes successfully
read from the printer.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful; otherwise it is FALSE.
<H3>Comments</H3>
<P>
<B>ReadPort</B>&nbsp;supports bidirectional printers. If the printer provides any
data, this data is written to the buffer pointed to by <I>pBuffer</I>.
<P>
If there is no response from the printer, <B>ReadPort</B>&nbsp;waits long enough to
ensure there is no data coming, and then returns FALSE. <B>ReadPort </B>should
always initialize <I>pcbRead</I>&nbsp;to zero before attempting the port read. If
the port read succeeds, <I>pcbRead</I>&nbsp;should be overwritten with the number
of bytes read. Note that a port can return zero bytes on a successful read; <B>ReadPort</B>
should return TRUE in this situation.
<P>
A timeout could be specified by calling a port monitor’s <B><A HREF="pmonfncs_17.htm">SetPortTimeOuts</A></B>
routine.
<P>
Both port and language monitors must implement <B>ReadPort</B>. Typically, a
language monitor’s <B>ReadPort</B>&nbsp;function calls the <B>ReadPort</B>&nbsp;function
of the port monitor that it is using. The port monitor must return the read
data stream to the language monitor without altering the data in any way. The
language monitor is then responsible for interpreting the data returned to it.
<P>
A language monitor can create a thread to asychronously call the port
monitor’s <B>ReadPort</B>&nbsp;function in order to query unsolicited data from the
printer at timed intervals. Language monitors might call a port monitor’s <B>ReadPort</B>
routine outside of a <B><A HREF="pmonfncs_18.htm">StartDocPort</A></B>/<B><A HREF="pmonfncs_6.htm">EndDocPort</A></B>
pair. Port monitors that do not allow this should fail the call, and language
monitors should be written to handle such a failure.
<H3>See Also</H3>
<P>
<B><A HREF="pmonfncs_8.htm">GetPrinterDataFromPort</A></B>
<P></FONT>
</BODY>
</HTML>
