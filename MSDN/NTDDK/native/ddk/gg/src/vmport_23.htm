<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwVidInitialize Functionality</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HwVidInitialize_Functionality_GG"></A>HwVidInitialize Functionality</H2>
<P>
For each adapter found and successfully configured by the miniport driver, the
miniport <B><A HREF="vmpfncs_4.htm">HwVidInitialize</A></B>&nbsp;function is
called when the corresponding display driver is loaded. The <B>HwVidInitialize</B>
routine can initialize software state information, but it should not set up
visible state on the adapter. On return from <B>HwVidInitialize</B>, the
adapter should be set to the same state as on return from the miniport’s <B>HwVidResetHw</B>
routine. For more information on <B>HwVidResetHw</B>, see <A HREF="vmport_31.htm">HwVidResetHw
Functionality</A>. 
<P>
If necessary, a miniport’s <B>HwVidInitialize</B>&nbsp;function can carry out a
one-time initialization operation on the adapter that was postponed by its <B>HwVidFindAdapter</B>
function. For example, a miniport might postpone loading microcode on the
adapter and have the <B>HwVidInitialize</B>&nbsp;function call <B>VideoPortGetRegistryParameters</B>.
<P>
When the <B>HwVidInitialize</B>&nbsp;function returns control,  the graphics engine
has a handle for the miniport’s adapter. The corresponding display driver then
can call the engine  <B>EngDeviceIoControl</B>&nbsp;function to request access to
mapped video memory or to request any other operation. The video port driver
sends such a request on to the miniport’s <B>HwVidStartIO</B>&nbsp;function, as a
VRP. For more information on <B>HwVidStartIO</B>&nbsp;see <A HREF="vmport_24.htm">HwVidStartIO
Functionality</A>.
<P>
Usually, a display driver controls the display the end user sees, except
occasionally when a full-screen MS-DOS application is run in an x86-based
Windows NT machine. For more information about supporting this feature in
VGA-compatible miniport drivers, see <A HREF="vmport_32.htm">VGA-Compatible
Miniports SvgaHwIoPortXxx</A>.
<P></FONT>
</BODY>
</HTML>
