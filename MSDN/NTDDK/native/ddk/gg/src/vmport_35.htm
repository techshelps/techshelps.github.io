<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VGA-Compatible Miniport’s HwVidFindAdapter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_VGA_Compatible_Miniports_HwVidFindAdapter_GG"></A>VGA-Compatible Miniport’s HwVidFindAdapter</H3>
<P>
A VGA-compatible miniport’s <B>HwVidFindAdapter</B>&nbsp;function (or registry
HwVid..Callback) must set up the following in the VIDEO_PORT_CONFIG_INFO
buffer:
<UL>
<LI>
<B>NumEmulatorAccessEntries</B>, indicating the number of entries in the <B>EmulatorAccessEntries</B>
array
<P>
<LI>
<B>EmulatorAccessEntries</B>, pointing to a static array containing the given
number of EMULATOR_ACCESS_ENTRY-type elements, each describing a range of I/O
ports hooked from the V86 emulator and, by default, forwarded to an
SvgaHwIoPort<I>Xxx</I>
<P>
Each entry includes a starting I/O address, a range length, the size of access
to be trapped (UCHAR, USHORT, or ULONG), whether the miniport supports input
or output of string data through the I/O port(s), and the miniport-supplied
SvgaHwIoPort<I>Xxx</I>&nbsp;that actually validates and, possibly, transfers the
data. Each SvgaHwIoPort<I>Xxx</I>&nbsp;function handles read (<B>IN</B>&nbsp;or<B>&nbsp;REP
INSB/INSW/INSD</B>) and/or write (<B>OUT</B>&nbsp;or <B>REP OUTSB/OUTSW/OUTSD</B>)
transfers of UCHAR-, USHORT-, or ULONG-sized data.
<P>
<LI>
<B>EmulatorAccessEntriesContext</B>, a pointer to storage, such as an area in
the miniport’s device extension, in which the miniport’s SvgaHwIoPort<I>Xxx</I>
can batch a sequence of application-issued instructions that require
validation
<P>
<LI>
<B>VdmPhysicalVideoMemoryAddress</B>&nbsp;and <B>VdmPhysicalVideoMemoryLength</B>,
describing a range of video memory that must be mapped into the VDM address
space to support BIOS INT10 calls from full-screen MS-DOS applications
<P>
The miniport driver can call the <B>VideoPortInt10</B>&nbsp;function when such an
application changes the video mode to one that the miniport driver’s adapter
can support.
<P>
<LI>
<B>HardwareStateSize</B>, describing the minimum number of bytes required to
store the hardware state for the adapter in response to an
IOCTL_VIDEO_SAVE_HARDWARE_STATE request
<P>
When the user switches a full-screen MS-DOS application to run in a window,
the miniport driver must save the adapter state before the display driver
regains control of the video adapter. Note that a VGA-compatible miniport
driver also must support the reciprocal IOCTL_VIDEO_RESTORE_HARDWARE_STATE
request because the user might switch the windowed application back to
full-screen mode.
</UL>
<P>
A VGA-compatible miniport’s emulator access entries specify subsets of its
access ranges array for the adapter. The emulator access entries can be and
usually are all I/O ports in the mapped access ranges array set up by its <B>HwVidFindAdapter</B>
function. The access ranges it passes in calls to <B>VideoPortSetTrappedEmulatorPorts</B>,
defining the current IOPM and determining the I/O ports that are directly
accessible by a full-screen MS-DOS application, specify subsets of the
miniport’s emulator access entries.
<P></FONT>
</BODY>
</HTML>
