<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EngStretchBlt</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_EngStretchBlt_GG"></A>EngStretchBlt</H2>
<P>
<B>BOOL EngStretchBlt(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoDest</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoSrc</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*psoMask</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN CLIPOBJ  </B><I>*pco</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN XLATEOBJ  </B><I>*pxlo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN COLORADJUSTMENT  </B><I>*pca</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>pptlHTOrg</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN RECTL  </B><I>*prclDest</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN RECTL  </B><I>*prclSrc</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>*pptlMask</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN ULONG  </B><I>iMode</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>EngStretchBlt</B>&nbsp;causes GDI to do a stretching bit-block transfer. This
function allows the same halftoning algorithm to be applied to GDI bitmaps and
device surfaces.
<H3>Parameters</H3>
<DL>
<DT>
<I>psoDest</I>
<DD>
Points to a <A HREF="grstrcts_30.htm">SURFOBJ</A>&nbsp;that describes the surface on
which to draw.
<BR>
<DT>
<I>psoSrc</I>
<DD>
Points to a SURFOBJ that describes the source surface for the bit-block
transfer.
<BR>
<DT>
<I>psoMask</I>
<DD>
Points to a SURFOBJ structure that defines a mask for the source. The mask is
defined by a logic map, which is a bitmap with 1 bit per pixel.
<P>
The mask limits the area of the source that is copied. If this parameter is
specified, it has an implicit <I>rop4</I>&nbsp;of 0xCCAA, meaning the source should
be copied wherever the mask is 1, but the destination should be left alone
wherever the mask is 0.
<P>
If this parameter is null, the <I>rop4</I>&nbsp;is implicitly 0xCCCC, which means
the source should be copied everywhere in the source rectangle.
<BR>
<DT>
<I>pco</I>
<DD>
Points to a <A HREF="grstrcts_4.htm">CLIPOBJ</A>&nbsp;that limits the area to be
modified in the destination. GDI services are provided to enumerate the clip
region as a set of rectangles.
<P>
Whenever possible, GDI simplifies the clipping involved. However, unlike <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>,
<B>EngStretchBlt</B>&nbsp;can be called with a single clipping rectangle. This
prevents rounding errors in clipping the output.
<BR>
<DT>
<I>pxlo</I>
<DD>
Points to a <A HREF="grstrcts_35.htm">XLATEOBJ</A>&nbsp;that specifies how color
indices are to be translated between the source and target surfaces.
<P>
This XLATEOBJ can also be queried to find the RGB color for any source index.
A high quality stretching bit-block transfer will need to interpolate colors
in some cases.
<BR>
<DT>
<I>pca</I>
<DD>
Points to a COLORADJUSTMENT structure that defines the color adjustment values
to be applied to the source bitmap before stretching the bits. For more
information see the <I>Win32 SDK</I>.
<BR>
<DT>
<I>pptlHTOrg</I>
<DD>
Points to a POINTL structure that defines the origin of the halftone brush.
Drivers that use halftone brushes should align the upper left pixel of the
brush’s pattern with this point on the device surface.
<BR>
<DT>
<I>prclDest</I>
<DD>
Points to a RECTL structure that defines the area to be modified in the
coordinate system of the destination surface. This rectangle is defined by two
points that are not well-ordered, meaning the coordinates of the second point
are not necessarily larger than those of the first point. The rectangle
described does not include the lower and right edges. This function is never
called with an empty destination rectangle.
<P>
<B>EngStretchBlt</B>&nbsp;inverts <I>x</I>&nbsp;and <I>y</I>&nbsp;if the destination
rectangle is not well ordered.
<BR>
<DT>
<I>prclSrc</I>
<DD>
Points to a RECTL structure that defines the area to be copied, in the
coordinate system of the source surface. The rectangle will map to the
rectangle defined by <I>prclDest</I>. This function is never given an empty
source rectangle, and the points of the source rectangle are always
well-ordered.
<P>
The mapping is defined by <I>prclSrc</I>&nbsp;and <I>prclDest</I>. The points
specified in <I>prclDest</I>&nbsp;and <I>prclSrc</I>&nbsp;lie on integer coordinates,
which correspond to pixel centers. A rectangle defined by two such points is
considered to be a geometric rectangle with two vertices whose coordinates are
the given points, but with 0.5 subtracted from each coordinate. (POINTL
structures are shorthand notation for specifying these fractional coordinate
vertices.) 
<P>
The edges of any rectangle never intersect a pixel, but go around a set of
pixels. The pixels that are inside the rectangle are those expected for a
bottom-right exclusive rectangle. <B>EngStretchBlt</B>&nbsp;maps the geometric
source rectangle exactly onto the geometric destination rectangle.
<BR>
<DT>
<I>pptlMask</I>
<DD>
Points to a POINTL structure that defines the pixel in the given mask that
corresponds to the upper left pixel in the source rectangle. This parameter is
ignored if no mask is specified.
<BR>
<DT>
<I>iMode</I>
<DD>
Specifies how source pixels are combined to get output pixels. The HALFTONE
mode is slower than the other modes, but produces higher quality images.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
WHITEONBLACK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
On a shrinking bit-block transfer, pixels should be combined with a Boolean OR
operation. On a stretching bit-block transfer, pixels should be replicated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
BLACKONWHITE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
On a shrinking bit-block transfer, pixels should be combined with a Boolean
AND operation. On a stretching bit-block transfer, pixels should be
replicated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
COLORONCOLOR
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
On a shrinking bit-block transfer, enough pixels should be ignored so that
pixels don’t need to be combined. On a stretching bit-block transfer, pixels
should be replicated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HALFTONE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The driver can use groups of pixels in the output surface to best approximate
the color or gray level of the input.
</FONT></TABLE>
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful. Otherwise, it is
FALSE, and an error code is logged.
<H3>Comments</H3>
<P>
The driver should call <B>EngStretchBlt</B>&nbsp;if it has hooked <B><A HREF="grfncs_54.htm">DrvStretchBlt</A></B>
and is called to do something the driver does not support.
<H3>See Also</H3>
<P>
<A HREF="grstrcts_4.htm">CLIPOBJ</A>, <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>,
<A HREF="grstrcts_30.htm">SURFOBJ</A>, <A HREF="grstrcts_35.htm">XLATEOBJ</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
