<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Realizing Brushes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Realizing_Brushes_GG"></A>Realizing Brushes</H3>
<P>
Graphics functions that output lines, text or fills take at least one brush as
an argument. The brush defines the pattern to be used to draw the graphics
object on the specified surface. Each output function that takes a brush
requires a <I>brush origin</I>. The brush origin provides the coordinates of a
pixel on the device surface to be aligned with the upper left pixel of the
brush’s pattern. The brush pattern is repeated (tiled) to cover the whole
device surface.
<P>
The driver can support the following functions to define brushes:
<P>
<FONT FACE="Symbol">&#183;</FONT><B>&nbsp; &nbsp; <A HREF="grfncs_44.htm">DrvRealizeBrush</A></B>
<P>
<FONT FACE="Symbol">&#183;</FONT><B>&nbsp; &nbsp; <A HREF="grfncs_17.htm">DrvDitherColor</A></B>
<P>
Drawing functions that output lines, text, or fills take at least one brush as
a parameter.
<P>
A brush is always used with a mix mode that defines how the pattern should be
mixed with the data already on the device surface. The MIX data type consists
of two ROP2 values packed into a single ULONG value. The foreground ROP is in
the lowest-order byte. The next byte contains the background ROP. For more
information, see the Win32 SDK.
<P>
GDI keeps track of all logical brushes that an application has requested for
use. Before asking a driver to draw something, GDI first issues a call to the
driver function <B><A HREF="grfncs_44.htm">DrvRealizeBrush</A></B>. This
allows the driver to compute the optimal representation of the required
pattern for its own drawing code.
<P>
<B>DrvRealizeBrush</B>&nbsp;is called to realize the brush defined by <I>psoPattern</I>
(pattern for the brush) and by <I>psoTarget</I><B>&nbsp;</B>(surface for the
realized brush). A realized brush contains information and accelerators a
driver needs to fill an area with a pattern. This information is defined and
used only by the driver. Driver realization of a brush is written into a
buffer that the driver can cause to be allocated by calling the GDI service
function<B>&nbsp;<A HREF="grfncs_1.htm">BRUSHOBJ_pvAllocRBrush</A></B>
from within <B>DrvRealizeBrush</B>. GDI caches all realized brushes;
consequently, they seldom need to be recomputed.
<P>
In <B>DrvRealizeBrush</B>, the brush is represented by the <A HREF="grstrcts_1.htm">BRUSHOBJ</A>
user object. The surface for which the brush is to be realized can be the
physical surface for the device, a DDB, or a standard-format bitmap. For a
raster device, the surface describing the brush pattern represents a bitmap;
and for a vector device, it is always one of the pattern surfaces returned by <B><A HREF="grfncs_20.htm">DrvEnablePDEV</A></B>.
The transparency mask used for the brush is a one-bpp bitmap with the same
extent as the pattern. A mask bit of zero means that the corresponding pattern
pixel is a background brush pixel; that is, the target pixel is unaffected by
that particular pattern pixel. <B>DrvRealizeBrush</B>&nbsp;uses an <A HREF="grstrcts_35.htm">XLATEOBJ</A>
structure to translate the colors in the brush pattern to the device color
indexes.
<P>
The driver should call the GDI service function <B><A HREF="grfncs_2.htm">BRUSHOBJ_pvGetRbrush</A></B>
when the value of the <B>iSolidColor</B>&nbsp;member of the BRUSHOBJ is 0xFFFFFFFF
and the <B>pvRbrush</B>&nbsp;member is null. <B>BRUSHOBJ_pvGetRbrush</B>&nbsp;retrieves
a pointer to the driver’s realization of a specified brush. If the brush has
not been realized when the driver calls this function, GDI automatically calls
<B>DrvRealizeBrush</B>&nbsp;for the driver’s realization of the brush.
<H5>Dithering</H5>
<P>
If necessary, GDI can request the assistance of the driver when trying to
create a brush with a solid color that cannot be represented exactly on the
hardware. GDI calls the driver function <B><A HREF="grfncs_17.htm">DrvDitherColor</A></B>
to request the driver to dither a brush against the reserved portion of the
device palette.
<P>
Dithering uses a pattern of several colors to approximate the chosen color,
and its result is an array of device color indexes. A brush created using
these colors for its pattern is usually a good approximation of the given
color. <B><A HREF="grfncs_17.htm">DrvDitherColor</A></B>&nbsp;can also
represent a color that cannot be specified exactly by a device. To do this, <B>DrvDitherColor</B>
requests a pattern of several colors and creates a brush that approximates the
given solid color.
<P>
The function <B>DrvDitherColor</B>&nbsp;is optional and is called only if the
GCAPS_COLOR_DITHER or GCAPS_MONO_DITHER capability flags are set in the <B>flGraphicsCaps</B>
member of <A HREF="grstrcts_6.htm">DEVINFO</A>. <B>DrvDitherColor</B>&nbsp;can return
the values listed in the following table.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCR_SOLID
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that GDI should map the requested color to the nearest color value
in the existing device palette (many to one).
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCR_DRIVER
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the dither values have been calculated by the driver. The
handle to a <B>cxDither</B>&nbsp;by <B>cyDither</B>&nbsp;array of device color indexes
is passed back in this case.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
DCR_HALFTONE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that GDI should approximate a color using the existing device
(halftone) palette. For example, GDI can use the typical palette for a printer
that contains only three or four colors. DCR_HALFTONE can be used with a
display driver only when the device contains a device (halftone) palette, such
as VGA-16 adapter card, which has a standard fixed palette. 
</FONT></TABLE>
<P>
Monochrome drivers should support <B>DrvDitherColor</B>&nbsp;in order for GDI to
obtain good gray-level patterns.
<P></FONT>
</BODY>
</HTML>
