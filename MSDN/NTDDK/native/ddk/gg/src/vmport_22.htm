<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwVidQueryNamedValueCallback Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_HwVidQueryNamedValueCallback_Routine_GG"></A>HwVidQueryNamedValueCallback Routine</H3>
<P>
As an alternative or in addition, the miniport driver might get configuration
data it needs for its adapter from the registry key ..<B>\CurrentControlSet\Services\</B><I>DriverName</I><B>\Device</B><I>Number</I>
by calling <B>VideoPortGetRegistryParameters</B>. A <B><A HREF="vmpfncs_7.htm">HwVidQueryNamedValueCallback</A></B>
can be used to retrieve this information.
<P>
A <B>HwVidFindAdapter</B>&nbsp;(or <B>HwVidInitialize</B>) function calls <B>VideoPortGetRegistryParameters</B>
with a driver-supplied <B>HwVidQueryNamedValueCallback</B>&nbsp;function, pointers
to the device extension and any driver-supplied context data (which can be the
VIDEO_PORT_CONFIG_INFO buffer), and a pointer to a Unicode string naming the
value to be retrieved from the registry.
<P>
A <B>HwVidFindAdapter</B>&nbsp;or <B>HwVidInitialize</B>&nbsp;function can set the <I>IsFileNameParameter</I>
argument to TRUE if the driver-supplied Unicode string is a named registry
entry whose value is a file name. For this specification, the returned data
will be the contents of the named file.
<P>
When <B>VideoPortGetRegistryParameters</B>&nbsp;calls the <B>HwVidQueryNamedValueCallback</B>
function, it processes whatever configuration data is made available. For
example, a <B>HwVidQueryNamedValueCallback</B>&nbsp;function might use retrieved
data to determine the miniport’s access ranges and to set up its emulator
access ranges (if any), interrupt vector or interrupt IRQL (if any), and so
forth in the VIDEO_PORT_CONFIG_INFO buffer, as well as in the miniport’s
device extension, before returning control to the <B>HwVidFindAdapter</B>
function.
<P>
A miniport’s <B>HwVidInitialize</B>&nbsp;function, described in <A HREF="vmport_23.htm">HwVidInitialize
Functionality</A>, might also call <B>VideoPortGetRegistryParameters</B>&nbsp;with <I>IsFileNameParameter</I>
set to TRUE so that the miniport-supplied <B>HwVidQueryNamedValueCallback</B>
function could use the buffered contents of a named file to set up microcode
on the adapter.
<P></FONT>
</BODY>
</HTML>
