<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WritePort</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WritePort_GG"></A>WritePort</H2>
<P>
<B>BOOL (WINAPI *pfnWritePort)(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>HANDLE  </B><I>hPort</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>LPBYTE  </B><I>pBuffer</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>DWORD  </B><I>cbBuf</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp; &nbsp; <B>LPDWORD  </B><I>pcbWritten</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>WritePort</B>&nbsp;writes data to a port.
<H3>Parameters</H3>
<DL>
<DT>
<I>hPort</I>
<DD>
Identifies the port to which the data should be written.
<BR>
<DT>
<I>pBuffer</I>
<DD>
Points to a buffer that contains data to be written to the port.
<BR>
<DT>
<I>cbBuf</I>
<DD>
Specifies the size, in bytes, of <I>pBuffer</I>.
<BR>
<DT>
<I>pcbWritten</I>
<DD>
Points to a location in which the number of bytes successfully written to the
port will be written.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful.
<H3>Comments</H3>
<P>
<B>WritePort</B>&nbsp;sends the data pointed to by <I>pBuffer</I>&nbsp;to the printer.
The spooler calls <B>WritePort</B>&nbsp;as often as is necessary to send an entire
print job to the printer. The spooler sets the block size specified by <I>cbBuf</I>,
so a monitor should not make any assumptions about it.
<P>
If there is no response from the printer, <B>WritePort</B>&nbsp;should wait a
reasonable amount of time and then returns FALSE. <B>WritePort </B>should
always initialize <I>pcbWritten</I>&nbsp;to zero before attempting the port write.
If the port write succeeds, <I>pcbWritten</I>&nbsp;should be overwritten with the
number of bytes sent. Note that a port can return zero bytes on a successful
write; <B>WritePort</B>&nbsp;should return TRUE in this situation.
<P>
A language monitor can add information to the data stream before sending it to
the port monitor’s <B>WritePort</B>&nbsp;routine for printing.
<P>
Language monitors might call a port monitor’s <B>WritePort</B>&nbsp;routine outside
of a <B><A HREF="pmonfncs_18.htm">StartDocPort</A></B>/<B><A HREF="pmonfncs_6.htm">EndDocPort</A></B>
pair. Port monitors that do not allow this can fail the call, and language
monitors should be written to handle such a failure.
<P>
<B>WritePort</B>&nbsp;must be implemented by both port and language monitors.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
