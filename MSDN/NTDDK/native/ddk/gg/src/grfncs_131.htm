<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EngTextOut</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_EngTextOut_GG"></A>EngTextOut</H2>
<P>
<B>BOOL EngTextOut(</B>
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN SURFOBJ  </B><I>*pso</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN STROBJ  </B><I>*pstro</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN FONTOBJ  </B><I>*pfo</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN CLIPOBJ  </B><I>*pco</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN RECTL  </B><I>*prclExtra</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN RECTL  </B><I>*prclOpaque</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN BRUSHOBJ  </B><I>*pboFore</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN BRUSHOBJ  </B><I>*pboOpaque</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN POINTL  </B><I>pptlOrg</I><B>,</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp; IN MIX  </B><I>mix</I>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>&nbsp; &nbsp;);</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT></TABLE>
<P>
<B>EngTextOut</B>&nbsp;causes GDI to render a set of glyphs at specified positions.
<H3>Parameters</H3>
<DL>
<DT>
<I>pso</I>
<DD>
Points to a <A HREF="grstrcts_30.htm">SURFOBJ</A>&nbsp;structure that describes the
surface on which to write.
<BR>
<DT>
<I>pstro</I>
<DD>
Points to a <A HREF="grstrcts_29.htm">STROBJ</A>&nbsp;structure that defines the glyphs
to be rendered and the positions where they are to be placed.
<BR>
<DT>
<I>pfo</I>
<DD>
Points to a <A HREF="grstrcts_19.htm">FONTOBJ</A>&nbsp;structure that is used to
retrieve information about the font and its glyphs.
<BR>
<DT>
<I>pco</I>
<DD>
Points to a <A HREF="grstrcts_4.htm">CLIPOBJ</A>&nbsp;structure that defines the clip
region through which rendering must be done. No pixels can be affected outside
this clip region.
<BR>
<DT>
<I>prclExtra</I>
<DD>
Points to a null-terminated array of rectangles. These rectangles are
bottom-right exclusive. The pixels of the rectangles are to be combined with
the pixels of the glyphs to produce the foreground pixels. The extra
rectangles are used to simulate underlining or strike-out.
<P>
A null rectangle has both coordinates of both points set to zero.
<BR>
<DT>
<I>prclOpaque</I>
<DD>
Points to a single opaque rectangle that is bottom right exclusive. Pixels
within this rectangle (those that are not foreground and not clipped) are to
be rendered with the opaque brush. This rectangle always bounds the text to be
drawn. If this parameter is null, no opaque pixels are to be rendered.
<BR>
<DT>
<I>pboFore</I>
<DD>
Points to the brush object to be used for the foreground pixels. This brush
will always be a solid color brush.
<BR>
<DT>
<I>pboOpaque</I>
<DD>
Points to the brush object for the opaque pixels. Both the foreground and
background mix modes for this brush are assumed to be R2_COPYPEN. Unless the
driver sets the GCAPS_ARBRUSHOPAQUE capabilities bit in the <B>flGraphicsCaps</B>
member of the <A HREF="grstrcts_6.htm">DEVINFO</A>&nbsp;structure, it will always be
called with a solid color brush.
<BR>
<DT>
<I>pptlOrg</I>
<DD>
Points to a POINTL structure that defines the brush origin for both brushes.
<BR>
<DT>
<I>mix</I>
<DD>
Specifies foreground and background raster operations (mix modes) for <I>pboFore</I>.
</DL>
<H3>Return Value</H3>
<P>
The return value is TRUE if the function is successful. Otherwise, it is
FALSE, and an error code is logged.
<H3>Comments</H3>
<P>
The driver should call <B>EngTextOut</B>&nbsp;when it has hooked <B><A HREF="grfncs_59.htm">DrvTextOut</A></B>
and cannot render the glyphs.
<P>
<B>Note</B>&nbsp; The driver cannot punt to <B>EngTextOut</B>&nbsp;if it has hooked <B>DrvTextOut</B>
for a device managed surface.
<P>
The input parameters to <B>EngTextOut</B>&nbsp;define two sets of pixels:
foreground and opaque. The driver must render the surface so the result is
identical to a process where the opaque pixels are rendered first with the
opaque brush, and then the foreground pixels are rendered with the foreground
brush. Each of these operations is limited by clipping.
<P>
The foreground set of pixels is defined to be the union of the pixels of the
glyphs and the pixels of the extra rectangles pointed to by <I>prclExtra</I>.
These extra rectangles are used to simulate strike-through or underlines. The
opaque pixels are defined by the opaque rectangle at <I>prclOpaque</I>.
<P>
The foreground and opaque pixels are regarded as a screen through which color
is brushed onto the surface. The glyphs of the font do not have color in
themselves.
<P>
The input parameters to <B>EngTextOut</B>&nbsp;define the set of glyph pixels, the
set of extra rectangles, the opaque rectangle, and the clip region. The driver
must calculate and then render the set of foreground and opaque pixels.
<P>
The mix mode defines how the incoming pattern should be mixed with the data
already on the device surface. The MIX data type consists of two ROP2 values
packed into a single ULONG. The low-order byte defines the foreground raster
operation; the next byte defines the background raster operation. For more
information about raster operation codes, see the <I>Win32 SDK</I>.
<H3>See Also</H3>
<P>
<A HREF="grstrcts_4.htm">CLIPOBJ</A>, <A HREF="grstrcts_6.htm">DEVINFO</A>, <B><A HREF="grfncs_59.htm">DrvTextOut</A></B>,
<A HREF="grstrcts_19.htm">FONTOBJ</A>, <A HREF="grstrcts_29.htm">STROBJ</A>, <A HREF="grstrcts_30.htm">SURFOBJ</A>
<P></FONT>
</BODY>
</HTML>
