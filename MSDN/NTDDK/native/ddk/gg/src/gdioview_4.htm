<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GDI-Managed Bitmaps</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_GDI_Managed_Bitmaps_GG"></A>GDI-Managed Bitmaps</H4>
<P>
GDI manages bitmaps in all <A HREF="glossary.htm#DDK_DIB_GG">DIB</A>&nbsp;formats including 1, 4, 8,
16, 24, and 32 bits-per-pixel. GDI can do all line drawing, filling, text
output, and bit block transfer (bitblt) operations on these bitmaps. This
makes it possible for the driver to either have GDI do all graphics rendering,
or to implement functions for which its hardware offers special support.
<P>
If the device has a frame buffer in a DIB format, GDI can perform any or all
graphics output directly to the device, making a frame buffer driver very
small. If the device supports a nonstandard format, the driver must implement
necessary drawing functions. GDI can still simulate most drawing functions,
although a performance cost is incurred: the pixels must be copied into a
standard format bitmap before they can be operated on by GDI, and then be
copied back to the original format after drawing is complete.
<P></FONT>
</BODY>
</HTML>
