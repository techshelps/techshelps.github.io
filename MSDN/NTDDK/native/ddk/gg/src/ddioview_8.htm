<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Enabling and Disabling the Surface</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Enabling_and_Disabling_the_Surface_GG"></A>Enabling and Disabling the Surface</H3>
<P>
As the final initialization stage, GDI calls <B><A HREF="grfncs_21.htm">DrvEnableSurface</A></B>
to have the driver enable a surface for an existing <A HREF="glossary.htm#DDK_PDEV_GG">PDEV</A>.
<B>DrvEnableSurface</B>&nbsp;must specify the type of surface by calling the
appropriate GDI service to create it. As described in <A HREF="gdioview_20.htm">GDI
Support for Surfaces</A>, and depending on the device and circumstances, the
driver can call the appropriate GDI services from within <B>DrvEnableSurface</B>
to create the surfaces:
<UL>
<LI>
For a device-managed surface, the driver should call <B><A HREF="grfncs_72.htm">EngCreateDeviceSurface</A></B>
to get a handle for the surface.
<P>
<LI>
To create a standard-format (DIB) bitmap that GDI can manage completely,
including the performance of all drawing operations, the driver should call <B><A HREF="grfncs_69.htm">EngCreateBitmap</A></B>.
The driver may hook out any drawing operations it can optimize. The driver can
either have GDI allocate the space for the pixels or can provide the space
itself, although the latter option is usually used only by printer drivers and
framebuffer drivers.
</UL>
<P>
&nbsp;
<P>
<B>DrvEnableSurface</B>&nbsp;returns a valid surface handle as a return value, such
as a bitmap handle.
<P>
Following the creation of the surface, the driver must associate that surface
with a PDEV by calling the GDI service <B><A HREF="grfncs_64.htm">EngAssociateSurface</A></B>.
This call also tells GDI which drawing function a driver has hooked for that
surface.
<P>
GDI calls <B><A HREF="grfncs_16.htm">DrvDisableSurface</A></B>&nbsp;to
inform the driver that the current surface created for the PDEV by <B>DrvEnableSurface</B>
is no longer required. The driver must deallocate any memory and resources
allocated during <B>DrvEnableSurface</B>. <B>DrvDisableSurface</B>&nbsp;is always
called before <B><A HREF="grfncs_15.htm">DrvDisablePDEV</A></B>, if the
PDEV has an enabled surface.
<P>
Once created, a surface must be deleted when it is no longer in use. Failure
to properly match surface creation with deletion can cause stray objects to
accumulate and degrade system performance.
<P></FONT>
</BODY>
</HTML>
