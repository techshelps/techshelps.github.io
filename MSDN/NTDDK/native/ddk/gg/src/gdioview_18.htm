<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hooking versus Punting</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Hooking_versus_Punting_GG"></A>Hooking versus Punting</H4>
<P>
The terms <I>hooking</I>&nbsp;and <I>punting</I>&nbsp;refer to driver decisions
concerning how standard bitmap drawing operations are implemented. If the
driver requests GDI to create a surface with a standard DIB format, GDI can
handle all drawing and text operations. A driver can, however, hook out and
implement functions if its hardware provides faster operation. A driver hooks
a <I>DrvXxx</I>&nbsp;function when it has implemented that function’s operation.
Punting means that the driver wants GDI to handle the operation.
<P>
There are some situations in which the operation must be implemented in the
driver. For example, if you are dealing with a device-managed surface, or you
are drawing on a nonstandard bitmap, certain drawing functions must be
implemented in the display driver. Display drivers must also handle the
management of banked memory, although they can callback for each bank and have
GDI do the drawing.
<H5>Hooking</H5>
<P>
By default, when a drawing surface is an engine-managed surface, GDI handles
the drawing (rendering) operation. For a driver to take advantage of hardware
that offers acceleration for some or all of these drawing functions for a
given surface, or to make use of special block transfer hardware, it can hook
these functions from GDI. To hook calls, the driver specifies the hooks as
flags of the <I>flHook</I>&nbsp;parameter of the <B><A HREF="grfncs_64.htm">EngAssociateSurface</A></B>
function.
<P>
If the driver hooks a call, it must implement that call. The driver can
optimize the operation where there is hardware support; or it can implement
the operation in highly optimized assembler code when portability is not an
issue. Such a driver might handle only certain cases on a hooked call. For
example, if complicated graphics are requested on a call that is hooked, it
may still be more efficient to punt the call back to GDI, allowing GDI to
handle the operation.
<P>
Another example of a driver choosing whether or not to handle a hooked call is
a driver that supports hardware that can handle bit-block-transfer calls with
certain <A HREF="glossary.htm#DDK_ROP_GG">ROP</A>s, but otherwise is just a frame buffer. Such
a driver will return a handle to the bitmap surface for the frame buffer as
the surface for its <A HREF="glossary.htm#DDK_PDEV_GG">PDEV</A>, but it will hook the <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>
call for itself. When GDI calls <B>DrvBitBlt</B>, the driver can check the ROP
to see if it is one of those supported by the hardware. If not, the driver can
pass the operation back to GDI with a call to <B><A HREF="grfncs_65.htm">EngBitBlt</A></B>.
<P>
Drivers that support device-managed surfaces must hook out some of the drawing
functions; namely <B><A HREF="grfncs_34.htm">DrvPaint</A></B>, <B><A HREF="grfncs_9.htm">DrvCopyBits</A></B>,
<B><A HREF="grfncs_59.htm">DrvTextOut</A></B>, and <B><A HREF="grfncs_56.htm">DrvStrokePath</A></B>.
Although GDI simulations can handle other drawing functions, it is recommended
for performance reasons that drivers of this type hook out other functions,
such as <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>&nbsp;and <B><A HREF="grfncs_44.htm">DrvRealizeBrush</A></B>,
because simulation requires drawing from and to the surface.
<H5>Punting</H5>
<P>
Punting the call back to GDI means to put in a call to the corresponding GDI
simulation. In general, for every <I>DrvXxx</I>&nbsp;graphics output call, there is
a corresponding GDI <I>EngXxx </I>simulation call that takes the same
arguments. Object parameters, such as a <A HREF="grstrcts_30.htm">SURFOBJ</A>, <A HREF="grstrcts_27.htm">PATHOBJ</A>,
or <A HREF="grstrcts_4.htm">CLIPOBJ</A>, can be passed without change to GDI
simulation. When the driver punts a call back to GDI, the size of the driver
is reduced (since the code for that functionality can be omitted). However,
because the engine owns the call, the driver does not have control over the
execution speed. For some complicated cases, there may be no real advantage to
providing support in the driver.
<H5>Hookable GDI Graphics Output Functions</H5>
<P>
The graphics output functions that the driver can hook and the corresponding
GDI simulations are listed in the following table.
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Driver Graphics Output Function</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Corresponding GDI Simulation</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_65.htm">EngBitBlt</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_9.htm">DrvCopyBits</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_68.htm">EngCopyBits</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_54.htm">DrvStretchBlt</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_128.htm">EngStretchBlt</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_24.htm">DrvFillPath</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_89.htm">EngFillPath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_55.htm">DrvStrokeAndFillPath</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_129.htm">EngStrokeAndFillPath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_59.htm">DrvTextOut</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_131.htm">EngTextOut</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_34.htm">DrvPaint</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_117.htm">EngPaint</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_56.htm">DrvStrokePath</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_130.htm">EngStrokePath</A></B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_30.htm">DrvLineTo</A></B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B><A HREF="grfncs_105.htm">EngLineTo</A></B>
</FONT></TABLE>
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
