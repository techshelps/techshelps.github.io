<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting Coprocessor Synchronization</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Supporting_Coprocessor_Synchronization_GG"></A>Supporting Coprocessor Synchronization</H2>
<P>
To support video controllers with coprocessors, a display driver can implement
the function <B><A HREF="grfncs_58.htm">DrvSynchronize</A></B>. A device
with coprocessors can start a long drawing operation and return to GDI while
the operation continues. If the display driver does not do all drawing to the
surface, it is possible that a subsequent drawing operation will be handled by
GDI. In this case, it is necessary for GDI to wait for the coprocessor to
complete its work before drawing on the surface.
<P>
<B>DrvSynchronize</B>&nbsp;is called for a surface only if the driver hooks it in a
call to <B><A HREF="grfncs_64.htm">EngAssociateSurface</A></B>. GDI
calls it<B>&nbsp;</B>just before drawing directly to the device surface. <B>DrvSynchronize</B>
returns when it is safe for GDI to begin drawing.
<P></FONT>
</BODY>
</HTML>
