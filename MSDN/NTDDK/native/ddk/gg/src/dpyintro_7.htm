<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Design and Implementation Strategies</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_General_Design_and_Implementation_Strategies_GG"></A>General Design and Implementation Strategies</H2>
<P>
To design an effective Windows NT display driver, consider the following
suggestions and facts:
<UL>
<LI>
Start with a DDK sample display driver written for a video adapter similar to
the adapter for which you are writing the driver. It would probably reduce
driver design time to modify one of the existing sample drivers rather than
write one from scratch.
<P>
<LI>
For maximum portability, write as much of the driver as possible using the C
language. Use assembly language only when necessary for time-critical
operations that are not well supported by video adapter hardware. Coding in
assembly, while offering the possibility of optimization, is time-consuming
and removes the possibility of portability.
<P>
<LI>
Use miniport drivers for operations that involve resource management, physical
device memory mapping, ensuring that register outputs occur in close
proximity, or responding to interrupts. The main purpose of miniport drivers
is to handle hardware variations within a family and to minimize display
driver hardware-type dependencies.
<P>
<LI>
The display driver is in the same privileged kernel-mode address space as the
rest of the Windows NT Executive. Faults in the display driver will cause GDI
and the rest of the system to fault.
<P>
<LI>
Display drivers (and video miniport drivers) are fully preemptable at any
time.
<P>
<LI>
Both the code and data sections of a display driver are entirely pageable.
<P>
<LI>
Exported functions must execute the standard Windows NT prolog on entry and
the epilog on exit. For more information, see the Win32 SDK.
</UL>
<P></FONT>
</BODY>
</HTML>
