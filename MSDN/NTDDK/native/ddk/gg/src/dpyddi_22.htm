<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Supporting the DitherOnRealize Flag</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Supporting_the_DitherOnRealize_Flag_GG"></A>Supporting the DitherOnRealize Flag</H2>
<P>
In earlier verisions of GDI/DDI, two calls by GDI to display driver functions
were required to dither a specified color and then realize a brush for that
color. For example, when an application requests that a rectangle be filled
with a dithered color, GDI typically calls <B><A HREF="grfncs_7.htm">DrvBitBlt</A></B>,
passing the extents of the rectangle and the brush object to use. The display
driver then checks the brush, finds that it has not been realized, and calls
back to GDI with <B><A HREF="grfncs_2.htm">BRUSHOBJ_pvGetRbrush</A></B>
for GDI’s realization of the brush. Since GDI doesn’t perform the dithering of
a brush, but the display driver does, GDI passes the RGB that the application
originally supplied for dithering in a <B><A HREF="grfncs_17.htm">DrvDitherColor</A>
</B>call back to the display driver.
<P>
<B>DrvDitherColor</B>&nbsp;returns a pointer to an array of color indexes that
describe the dither for the supplied color back to GDI. GDI immediately passes
this dither information back to the display driver in a call to <B><A HREF="grfncs_44.htm">DrvRealizeBrush</A></B>.
With the <A HREF="grstrcts_1.htm">BRUSHOBJ</A>&nbsp;realized, control returns back to
GDI and subsequently back to the original <B>DrvBitBlt</B>&nbsp;function.
<P>
To accomplish dithering using the above technique, GDI has to call <B>DrvDitherColor</B>
followed immediately by a call <B>DrvRealizeBrush</B>; two separate function
calls. Setting a GCAPS_DITHERONREALIZE flag in the <A HREF="grstrcts_6.htm">DEVINFO</A>
structure and a modification to <B>DrvRealizeBrush</B>&nbsp;to effectively combine
these two functions eliminates the need for the separate call to <B>DrvDitherColor</B>
and also saves some memory allocation. Under this scheme, if the display
driver sets GCAPS_DITHERONREALIZE, GDI calls <B>DrvRealizeBrush</B>&nbsp;with the
RGB to be dithered and with the RB_DITHERCOLOR flag set in <I>iHatch</I>. (The
RB_DITHERCOLOR flag is set in the high byte of <I>iHatch</I>&nbsp;while the RGB
color to be dithered is contained in the three low-order bytes.) The need to
call <B>DrvDitherColor</B>&nbsp;is eliminated in this situation since the
functionality of both calls are put into one.
<P>
For example code, refer to <I>\s3\brush.c</I>.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
