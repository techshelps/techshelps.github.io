<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IFIMETRICS</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IFIMETRICS_GG"></A>IFIMETRICS</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _IFIMETRICS {
&nbsp; &nbsp; ULONG cjThis;
&nbsp; &nbsp; ULONG ulVersion;
&nbsp; &nbsp; PTRDIFF dpwszFamilyName;
&nbsp; &nbsp; PTRDIFF dpwszStyleName;
&nbsp; &nbsp; PTRDIFF dpwszFaceName;
&nbsp; &nbsp; PTRDIFF dpwszUniqueName;
&nbsp; &nbsp; PTRDIFF dpFontSim;
&nbsp; &nbsp; LONG lEmbedId;
&nbsp; &nbsp; LONG lItalicAngle;
&nbsp; &nbsp; LONG lCharBias;
&nbsp; &nbsp; PTRDIFF dpCharSets;
&nbsp; &nbsp; BYTE jWinCharSet;
&nbsp; &nbsp; BYTE jWinPitchAndFamily;
&nbsp; &nbsp; USHORT usWinWeight;
&nbsp; &nbsp; ULONG flInfo;
&nbsp; &nbsp; USHORT fsSelection;
&nbsp; &nbsp; USHORT fsType;
&nbsp; &nbsp; FWORD fwdUnitsPerEm;
&nbsp; &nbsp; FWORD fwdLowestPPEm;
&nbsp; &nbsp; FWORD fwdWinAscender;
&nbsp; &nbsp; FWORD fwdWinDescender;
&nbsp; &nbsp; FWORD fwdMacAscender;
&nbsp; &nbsp; FWORD fwdMacDescender;
&nbsp; &nbsp; FWORD fwdMacLineGap;
&nbsp; &nbsp; FWORD fwdTypoAscender;
&nbsp; &nbsp; FWORD fwdTypoDescender;
&nbsp; &nbsp; FWORD fwdTypoLineGap;
&nbsp; &nbsp; FWORD fwdAveCharWidth;
&nbsp; &nbsp; FWORD fwdMaxCharInc;
&nbsp; &nbsp; FWORD fwdCapHeight;
&nbsp; &nbsp; FWORD fwdXHeight;
&nbsp; &nbsp; FWORD fwdSubScriptXSize;
&nbsp; &nbsp; FWORD fwdSubScriptYSize;
&nbsp; &nbsp; FWORD fwdSubScriptXOffset;
&nbsp; &nbsp; FWORD fwdSubScriptYOffset;
&nbsp; &nbsp; FWORD fwdSuperScriptXSize;
&nbsp; &nbsp; FWORD fwdSuperScriptYSize;
&nbsp; &nbsp; FWORD fwdSuperScriptXOffset;
&nbsp; &nbsp; FWORD fwdSuperScriptYOffset;
&nbsp; &nbsp; FWORD fwdUnderscoreSize;
&nbsp; &nbsp; FWORD fwdUnderscorePosition;
&nbsp; &nbsp; FWORD fwdStrikeoutSize;
&nbsp; &nbsp; FWORD fwdStrikeoutPosition;
&nbsp; &nbsp; BYTE chFirstChar;
&nbsp; &nbsp; BYTE chLastChar;
&nbsp; &nbsp; BYTE chDefaultChar;
&nbsp; &nbsp; BYTE chBreakChar;
&nbsp; &nbsp; WCHAR wcFirstChar;
&nbsp; &nbsp; WCHAR wcLastChar;
&nbsp; &nbsp; WCHAR wcDefaultChar;
&nbsp; &nbsp; WCHAR wcBreakChar;
&nbsp; &nbsp; POINTL ptlBaseline;
&nbsp; &nbsp; POINTL ptlAspect;
&nbsp; &nbsp; POINTL ptlCaret;
&nbsp; &nbsp; RECTL rclFontBox;
&nbsp; &nbsp; BYTE achVendId[4];
&nbsp; &nbsp; ULONG cKerningPairs;
&nbsp; &nbsp; ULONG ulPanoseCulture;
&nbsp; &nbsp; PANOSE panose;
} IFIMETRICS, *PIFIMETRICS;
</FONT></PRE>
<P>
The IFIMETRICS structure defines all the information for a given typeface that
GDI can understand. Most of the members are FWORD values, which are signed
16-bit quantities in design space. If the font is a raster font, design space
and device space are the same and a font unit is equivalent to the distance
between pixels.
<H3>Members</H3>
<DL>
<DT>
<B>cjThis</B>
<DD>
Specifies the size, in bytes, of this structure, including any Unicode strings
appended to the end.
<BR>
<DT>
<B>ulVersion</B>
<DD>
Must be set to 0x000000001 for this version.
<BR>
<DT>
<B>dpwszFamilyName</B>
<DD>
Specifies the offset in bytes to a zero-terminated Unicode string containing
the family name of the font (for example, “Times Roman”). Generally, this
string immediately follows the IFIMETRICS structure. This string should be the
same as the name recorded in the <B>lfFaceName</B>&nbsp;member of the LOGFONT
structure.
<BR>
<DT>
<B>dpwszStyleName</B>
<DD>
Specifies the offset, in bytes, to a zero-terminated Unicode string describing
the style of the font (for example, “Bold”).
<BR>
<DT>
<B>dpwszFaceName</B>
<DD>
Specifies the offset, in bytes, to a zero-terminated Unicode string
representing the unique and complete name of the font. The name contains the
family and subfamily names of the font (for example, “Times New Roman Bold”).
<BR>
<DT>
<B>dpwszUniqueName</B>
<DD>
Specifies the offset, in bytes, to a zero-terminated Unicode string
representing the unique identifier of the font (for example, “Monotype:Times
New Roman:1990”).
<BR>
<DT>
<B>dpFontSim</B>
<DD>
This member must be set to zero for this version of Windows NT.
<BR>
<DT>
<B>lEmbedId</B>
<DD>
The Embedding ID of the font. This is TrueType specific and should be set to
zero by all other font providers.
<BR>
<DT>
<B>lItalicAngle</B>
<DD>
Specifies the italic angle of the font. It is TrueType-specific and should be
set to zero by all other font providers.
<BR>
<DT>
<B>lCharBias</B>
<DD>
Specifies the character bias. This value is TrueType-specific and should be
set to zero by all other font providers.
<BR>
<DT>
<B>dpCharSets</B>
<DD>
Pointer to a reserved 32-bit values. For this version of Windows NT, this must
be set to zero.
<BR>
<DT>
<B>jWinCharSet</B>
<DD>
Specifies the character set of the font. This member can be one of the
following values:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
ANSI_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports the Windows ANSI character set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
SYMBOL_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports the Windows symbol character set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
SHIFTJIS_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports the Shift-JIS character set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
HANGEUL_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports the Hangeul character set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
CHINESEBIG5_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports the Chinese Big 5 character set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
OEM_CHARSET
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This font supports an OEM-specific character set. The OEM character set is
system dependent. This is the value to be returned to the application in the <B>lfCharSet</B>
member of the LOGFONT structure.
</FONT></TABLE>
<DT>
<B>jWinPitchAndFamily</B>
<DD>
Specifies the pitch of the font. This is the value to be recorded in the <B>lfWeight</B>
member of the LOGFONT structure. The two low-order bits specify the pitch of
the font and can be one of the following values:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FIXED_PITCH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
For fixed pitch fonts
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
VARIABLE_PITCH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
For variable pitch fonts
</FONT></TABLE>
<P>
Bits 4 through 7 of this member specify the font family and can be one of the
following values:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_DECORATIVE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Novelty fonts, such as Old English.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_DONTCARE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Don’t care or unknown.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_MODERN
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Fonts with constant stroke width (fixed-pitch), with or without serifs.
Fixed-pitch fonts are usually modern, such as Pica, Elite, and Courier.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_ROMAN
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Fonts with variable stroke width (proportionally spaced) and with serifs, such
as Times Roman, Palatino, and Century Schoolbook.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_SCRIPT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Fonts designed to look like handwriting, such as Script and Cursive.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FF_SWISS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Fonts with variable stroke width (proportionally spaced) and without serifs,
such as Helvetica and Swiss.
</FONT></TABLE>
<DT>
<B>usWinWeight</B>
<DD>
Specifies the weight of the font in the range 0 to 1000 (for example, 400 is
normal and 700 is bold). This value is provided to the application in the <B>lfWeight</B>
member of the LOGFONT structure.
<BR>
<DT>
<B>flInfo</B>
<DD>
Specifies a combination of the following flags:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_TECH_TRUETYPE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font is a TrueType font.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_TECH_BITMAP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font is a bitmap font.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_TECH_STROKE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font is based on a stroked font technology. This flag does
not specify whether the paths returned for this font should be filled or
stroked; the consumer should examine the FM_INFO_RETURNS_STROKES and
FM_INFO_RETURNS_OUTLINES flags for this information.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_TECH_OUTLINE_NOT_TRUETYPE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font is based on a scalable font technology that uses
outline paths, but is not based on TrueType. This flag does not specify
whether the paths returned for this font should be filled or stroked; the
consumer should examine the FM_INFO_RETURNS_STROKES and
FM_INFO_RETURNS_OUTLINES flags for this information.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_ARB_XFORMS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a font can be realized under a continuous range of two
dimensional linear transformations.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_1BBP
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a glyph bitmap has a color depth of 1 bit per pixel. This must
be set for the first version of Windows NT.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_INTEGER_WIDTH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that all glyphs have nonfractional advance widths. Bitmap fonts
usually set this flag.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_CONSTANT_WIDTH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that all glyphs of the font under all realizations have the same
value of character increment. If this flag is set, the
FM_INFO_OPTICALLY_FIXED_PITCH flag must also be set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_NOT_CONTIGUOUS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the supported character set is not contiguous.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_PID_EMBEDDED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font is an embedded font; it is TrueType-specific and
should not be set by other font providers.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_RETURNS_OUTLINES
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that for any glyph supported by the driver, GDI can request a <A HREF="grstrcts_27.htm">PATHOBJ</A>
structure that describes the outline of that glyph. If possible, when the
outline is filled using GDI’s path filling conventions, the resulting bitmap
should be identical to the bitmap returned by the driver. The
FM_INFO_RETURNS_OUTLINES and FM_INFO_RETURNS_STOKES flags cannot be set
concurrently.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_RETURNS_STROKES
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that for any glyph supported by the drivers, GDI can request a
PATHOBJ structure that describes the spline of the glyph. This path cannot be
filled but can be stroked to give a representation of the glyph. The
FM_INFO_RETURNS_OUTLINES and FM_INFO_RETURNS_STOKES flags cannot be set
concurrently.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_RETURNS_BITMAPS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the driver returns bitmaps for any glyph supported by the font.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_UNICODE_COMPLIANT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that a font is compliant with the Unicode standard.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_RIGHT_HANDED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the ascent direction of the font is 90 degrees counterclockwise
from the baseline direction. The ascent direction is the direction along which
height is measured and is always perpendicular to the baseline direction.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_INTEGRAL_SCALING
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font can be scaled by an integral amount in both the x and
y directions. If this flag is set, then the driver must be able to render
glyphs in the case where the notional to device transformation is scaled by
integral amounts in the x and y directions. GDI requests the integral scaling
of a font by including the axial scalings in the notional to device
transformation passed to the Driver when creating the font. This flag is
meaningful only when the FM_INFO_ARB_XFORMS flag has not been set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_90_DEGREE_ROTATIONS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font can be realized in 90 degree rotations of the original
notional shape. GDI requests the rotation of a font by including the rotation
in the notional to device transformation passed to the driver when creating
the font. This member has meaning only when the FM_INFO_ARB_XFORMS flag has
not been set.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_OPTICALLY_FIXED_PITCH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that this font is considered typographically as fixed pitch. This is
an optical quality of the font and does not necessarily indicate that all the
glyphs of the font have the same character increment.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_DO_NOT_ENUMERATE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that this font will not be enumerated by either <B>EnumFontFamilies</B>
or <B>EnumFonts</B>. Moreover, under <B>GetTextFace</B>, the string returned
to the application will be retrieved from the string <B>dpwszUniqueName</B>.
This flag allows the font provider to associate more than one IFIMETRICS
structure with one of its fonts.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_ISOTROPIC_SCALING_ONLY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font supports arbitrary isotropic scaling only. That is,
transforms are equivalent to the identity matrix multiplied by a positive real
number. If this flag is set, then neither the FM_INFO_ARB_XFORMS nor the
FM_INFO_ANISOTROPIC_SCALING_ONLY flags can be set. If the
FM_INFO_90DEGREE_ROTATIONS flag is set, the font supports transformations
equivalent to an isotropic scaling followed by a rotation by a multiple of 90
degrees.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
&nbsp;FM_INFO_ANISOTROPIC_SCALING_ONLY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the font supports only arbitrary anisotropic scaling. That is,
transforms are equivalent to a diagonal matrix multiplied by a positive real
number. If this flag is set, then the FM_INFO_ARB_XFORMS and the
FM_INFO_ISOTROPIC_SCALING_ONLY flags cannot be set. If the
FM_INFO_90DEGREE_ROTATIONS flag is also set, the font supports transformations
that are a combination of a simple anisotropic scaling followed by a rotation
by a multiple of 90 degrees.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_TID_EMBEDDED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This flag is used for font embedding; it is TrueType specific and should be
set to zero for all other font providers.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_FAMILY_EQUIV
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the <B>dpwszFamilyName</B>&nbsp;offset in IFIMETRICS is actually the
offset to a list of equivalent family names or aliases. The first name is the
base or real name; the subsequent names are equivalents or aliases. Each name
in the list is zero-terminated; the list is terminated by two zeros.
<P>
<TT><FONT FACE="COURIER" SIZE=2>&lt;base name&gt; &lt;0&gt; &lt;alias 1&gt; &lt;0&gt;...&lt;alias n&gt;<BR>
&nbsp; &nbsp; &lt;0&gt; &lt;0&gt;</FONT></TT>
<P>
The based names are used only for mapping; they are not enumerated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_DBCS_FIXED_PITCH
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that double-byte characters for this font are fixed pitch. Nothing
is implied about single byte characters. This flag is meaningful only for
fonts that support a double-byte character set (DBCS), such as shift JIS.
Fonts that do not support a DBCS should not set this flag.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_NONNEGATIVE_AC
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that all glyphs of this font have nonnegative a and c spacing. That
is, the glyph black box never extends outside the region bordered by the
character origin and the character concatenation point.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_INFO_IGNORE_TC_RA_ABLE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that, for this font, the TC_RA_ABLE flag is ignored.
</FONT></TABLE>
<DT>
<B>fsSelection</B>
<DD>
Specifies a combination of the following flags:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_ITALIC
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font are italic.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_UNDERSCORE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if all the characters of the font are underscored by default; otherwise
underscoring must be simulated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_NEGATIVE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font have the foreground and background reversed.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_OUTLINED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font are hollow.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_STRIKEOUT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font are struck out by default; otherwise
strikeouts must be simulated.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_BOLD
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font are bold.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_SEL_REGULAR
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the characters of the font are normal weight.
</FONT></TABLE>
<DT>
<B>fsType</B>
<DD>
This is a TrueType-specific bit field indicating certain properties for the
font, such as font embedding and licensing rights for the font. Embeddable
fonts can be stored in a document. When a document with embedded fonts is
opened on a system that does not have the font installed (the remote system),
the embedded font can be loaded for temporary (and in some cases permanent)
use on that system by an embedding-aware application. Embedding licensing
rights are granted by the font vendor. The following flags can be set:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_TYPE_LICENSED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the font is a Restricted License font. When only this bit is set, this
font <I>must not be modified, embedded, or exchanged in any manner</I>&nbsp;without
first obtaining permission of the legal owner. For Restricted License
embedding to take effect, it must be the only level of embedding selected.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_READONLY_EMBED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if read-write embedding is not permitted; only “preview and print”<I>&nbsp;</I>encapsulation
is allowed. When this bit is set, the font can be embedded and temporarily
loaded on the remote system. Documents containing “preview and print” fonts
must be opened “read-only;” no edits can be applied to the document.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
FM_EDITABLE_EMBED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Set if the font can be embedded and temporarily loaded on other systems.
Documents containing Editable fonts can be opened for reading and writing.
</FONT></TABLE>
<P>
Fonts with the FM_READONLY_EMBED bit set indicate that they can be embedded
within documents but must only be installed <I>temporarily</I>&nbsp;on the remote
system. Any document that includes an FM_READONLY_EMBED font must be opened
“read-only.” That is, the application can let the user view and/or print the
document, but not edit it.
<P>
Fonts with the FM_EDITABLE_EMBED bit set indicate that they can be embedded in
documents, but must only be installed <I>temporarily</I>&nbsp;on the remote system.
In contrast to FM_READONLY_EMBED fonts, documents containing Editable fonts
can be opened “read-write;” editing is permitted, and changes can be saved.
<P>
Fonts with no <B>fsType</B>&nbsp;bits set indicate that they can be embedded and
permanently installed on the remote system by an application. The user of the
remote system acquires the identical rights, obligations, and licenses for
that font as the original purchaser of the font, and is subject to the same
end-user license agreement, copyright, design patent, and/or trademark as was
the original purchaser.
<P>
Applications that implement support for font embedding, either through use of
the Font Embedding DLL or through other means, must not embed fonts that are
not licensed to permit embedding. Further, applications loading embedded fonts
for temporary use <I>must</I>&nbsp;delete the fonts when the document containing
the embedded font is closed.
<P>
If multiple embedding bits are set, the <I>least</I>&nbsp;restrictive license
granted takes precedence. For example, if bits 1 and 3 are set, bit 3 takes
precedence over bit 1and the font can be embedded with Editable rights. For
compatibility purposes, most vendors granting Editable embedding rights also
set the Preview &amp; Print bit (0x000C). This permits an application that
only supports Preview &amp; Print embedding to detect that font embedding is
allowed.
<BR>
<DT>
<B>fwdUnitsPerEm</B>
<DD>
Specifies the em-height of the font.
<BR>
<DT>
<B>fwdLowestPPEm</B>
<DD>
Specifies the smallest readable size of the font, in pixels. This value is
ignored for bitmap fonts.
<BR>
<DT>
<B>fwdWinAscender</B>
<DD>
Specifies the Windows ascender value for the font.
<BR>
<DT>
<B>fwdWinDescender</B>
<DD>
Specifies the Windows descender value for the font.
<BR>
<DT>
<B>fwdMacAscender</B>
<DD>
Specifies the Macintosh ascender value for the font.
<BR>
<DT>
<B>fwdMacDescender</B>
<DD>
Specifies the Macintosh descender value for the font. This number is typically
less than zero. It measures the signed displacement from the base line of the
lowest descender in the Macintosh character set.
<BR>
<DT>
<B>fwdMacLineGap</B>
<DD>
Specifies the Macintosh line gap for the font. The suggested Macintosh
interline spacing is equal to <B>fwdMacLineGap</B>&nbsp;+ <B>fwdMacAscender</B>
<FONT FACE="Symbol">&#45;</FONT> <B>fwdMacDescender</B>.
<BR>
<DT>
<B>fwdTypoAscender</B>
<DD>
Specifies the typographic ascender value for the font.
<BR>
<DT>
<B>fwdTypoDescender</B>
<DD>
Specifies the typographic descender value for the font. This value specifies
the signed displacement of the lowest descender from the baseline.
<BR>
<DT>
<B>fwdTypoLineGap</B>
<DD>
Specifies the typographic line gap for the font.
<BR>
<DT>
<B>fwdAveCharWidth</B>
<DD>
Specifies the arithmetic average of the width of all of the 26 lower case
letters ‘a’ through ‘z’ of the Latin alphabet and the space character. If any
of the 26 lowercase letters are not present, then this member should be set
equal to the weighted average of all glyphs in the font.
<BR>
<DT>
<B>fwdMaxCharInc</B>
<DD>
Specifies the maximum character increment of all glyphs in the font.
<BR>
<DT>
<B>fwdCapHeight</B>
<DD>
Specifies the height of the optical line describing the top of the uppercase
‘H’ in font units (FUnits). This might not be the same as the measured height
of the uppercase ‘H.’ If this information does not exist, <B>fwdCapHeight</B>
should be set to zero, which indicates that it is undefined.
<BR>
<DT>
<B>fwdXHeight</B>
<DD>
Specifies the height of the optical line describing the height of the
lowercase ‘x’ in font units. This might not be the same as the measured height
of the lowercase ‘x.’ A value of zero indicates that this member is undefined.
<BR>
<DT>
<B>fwdSubScriptXSize</B>
<DD>
Specifies the suggested character width (the size along the baseline
direction) of the subscript font.
<BR>
<DT>
<B>fwdSubScriptYSize</B>
<DD>
Specifies the suggested character height (the size along the ascender
direction) of the subscript font.
<BR>
<DT>
<B>fwdSubScriptXOffset</B>
<DD>
Specifies the suggested offset in the baseline direction of the subscript
character. The offset is with respect to the character origin of the base
character.
<BR>
<DT>
<B>fwdSubScriptYOffset</B>
<DD>
Specifies the suggested offset in the baseline direction of the subscript
character. The offset is taken from the character origin of the base
character.
<BR>
<DT>
<B>fwdSuperScriptXSize</B>
<DD>
Specifies the suggested character width (the size along the baseline
direction) of the superscript font.
<BR>
<DT>
<B>fwdSuperScriptYSize</B>
<DD>
Specifies the suggested character height (the size along the ascender
direction) of the superscript font.
<BR>
<DT>
<B>fwdSuperScriptXOffset</B>
<DD>
Specifies the suggested offset in the baseline direction of the superscript
character. The offset is taken from the character origin of the base
character.
<BR>
<DT>
<B>fwdSuperScriptYOffset</B>
<DD>
Specifies the suggested offset in the baseline direction of the superscript
character. The offset is taken from the character origin of the base
character.
<BR>
<DT>
<B>fwdUnderscoreSize</B>
<DD>
Specifies the suggested width of the underscore bar, in font units.
<BR>
<DT>
<B>fwdUnderscorePosition</B>
<DD>
Specifies the suggested displacement, in font units, from the base line to the
middle of the underscore bar.
<BR>
<DT>
<B>fwdStrikeoutSize</B>
<DD>
Specifies the suggested width of the strike-out bar, in font coordinates.
<BR>
<DT>
<B>fwdStrikeoutPosition</B>
<DD>
Specifies the suggested displacement of the middle of the strikeout bar from
the baseline.
<BR>
<DT>
<B>chFirstChar</B>
<DD>
Specifies the lowest supported character in the code page specified in <B>jWinCharSet</B>.
This field is provided for Windows 3.1 compatibility.
<BR>
<DT>
<B>chLastChar</B>
<DD>
Specifies the highest supported character in the code page specified in <B>jWinCharSet</B>.
This field is provided for Windows 3.1 compatibility.
<BR>
<DT>
<B>chDefaultChar</B>
<DD>
Specifies the default character in the code page specified in <B>jWinCharSet</B>.
This field is provided for Windows 3.1 compatibility.
<BR>
<DT>
<B>chBreakChar</B>
<DD>
Specifies the break character in the code page specified in <B>jWinCharSet</B>.
This field is provided for Windows 3.1 compatibility.
<BR>
<DT>
<B>wcFirstChar</B>
<DD>
Specifies the supported character with the smallest Unicode character code.
<BR>
<DT>
<B>wcLastChar</B>
<DD>
Specifies the supported character with the largest Unicode character code.
<BR>
<DT>
<B>wcDefaultChar</B>
<DD>
Specifies the character to be substituted when an application requests a
character that is not supported by the font.
<BR>
<DT>
<B>wcBreakChar</B>
<DD>
Specifies the code point of the space character or its equivalent.
<BR>
<DT>
<B>ptlBaseline</B>
<DD>
Specifies the intended writing direction of this font. For example, a typical
Latin font specifies a value of (1,0).
<BR>
<DT>
<B>ptlAspect</B>
<DD>
Specifies the aspect ratio of the pixel centers for which the bitmap font was
designed. This value is used only by bitmap fonts.
<BR>
<DT>
<B>ptlCaret</B>
<DD>
Specifies the direction of the ascender direction of the font. For example,
the value for a non-italicized Latin font is (0,1) while an italicized Latin
font might specify a value of (2,5).
<BR>
<DT>
<B>rclFontBox</B>
<DD>
Specifies the bounding box of all glyphs in the font in design space.
<BR>
<DT>
<B>achVendId</B>
<DD>
Specifies a four character identifier for the font vendor. Identifiers are
documented in the Microsoft TrueType specification.
<BR>
<DT>
<B>cKerningPairs</B>
<DD>
Specifies the number of kerning pairs associated with this font.
<BR>
<DT>
<B>ulPanoseCulture</B>
<DD>
Specifies the manner in which to interpret the panose number. This number
should be set to FM_PANOSE_CULTURE_LATIN for Latin-based fonts. See the <I>Win32
SDK</I>&nbsp;for information about the PANOSE structure.
<BR>
<DT>
<B>panose</B>
<DD>
An array of 10 bytes used to describe the visual characteristics of a given
typeface. These characteristics are then used to associate the font with other
fonts of similar appearance having different names. See the <I>Win32 SDK</I>
for information about the PANOSE structure.
</DL>
<H3>Comments</H3>
<P>
The IFIMETRICS structure defines all the information per typeface that GDI
understands. Most of the members are FWORD values, which are signed 16-bit
quantities in design space. If the font is a raster font, design space and
device space are the same and a font unit is equivalent to the distance
between pixels.
<P>
The coordinate system in the font/notional space is such that the y coordinate
increases in an upward direction and the x coordinate increases to the right.
<H3>See Also</H3>
<P>
<A HREF="grstrcts_27.htm">PATHOBJ</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
