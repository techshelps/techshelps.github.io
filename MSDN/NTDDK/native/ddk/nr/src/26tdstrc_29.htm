<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TRANSPORT_ADDRESS</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TRANSPORT_ADDRESS_NR"></A>TRANSPORT_ADDRESS</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _TRANSPORT_ADDRESS {<B>&nbsp;</B>
&nbsp; &nbsp; LONG        TAAddressCount;<B>&nbsp;</B>
&nbsp; &nbsp; TA_ADDRESS  Address[1];<B>&nbsp;</B>
} TRANSPORT_ADDRESS, *PTRANSPORT_ADDRESS;<B>&nbsp;</B>
<B>&nbsp;</B></FONT></PRE>
<P>
TRANSPORT_ADDRESS defines the general format for an array of TDI
driver-specific transport addresses. 
<H3>Members</H3>
<DL>
<DT>
<B>TAAddressCount</B>
<DD>
Specifies the number of elements in the array at <B>Address</B>. 
<BR>
<DT>
<B>Address[1]</B>
<DD>
Specifies an array of one or more TA_ADDRESS structures each specifying a
transport address of a particular TDI_ADDRESS_TYPE_<I>XXX</I>. 
</DL>
<H3>Comments</H3>
<P>
Although any address specified in a TRANSPORT_ADDRESS structure is always
driver-specific, all transports of a particular protocol type (for example,
all NetBIOS transports or all IPX transports) use the same address format. 
<P>
When it is given a TRANSPORT_ADDRESS structure, the transport uses the first
recognizable address in the array at <B>Address</B>. For instance, if its
client passes in several TDI_ADDRESS_TYPE_NETBIOS addresses, a NetBIOS
transport would use only the first such address. If a transport can use some
number of TDI_ADDRESS_TYPE_<I>XXX</I>&nbsp;addresses and it is given an array of
mixed types, it uses only the first valid address of each such type.
<P>
A transport returns an error if it is given a TRANSPORT_ADDRESS structure
containing elements of a type it is unable to parse. If the transport is given
an address of a recognizable type that it cannot use, the transport can search
the array elements for a usable address and return an error if it finds no
valid address. 
<H3>See Also</H3>
<P>
<B><A HREF="26tdstrc_1.htm">TA_ADDRESS</A></B>, <B><A HREF="26tdstrc_2.htm">TA_APPLETALK_ADDR</A></B>,
<B><A HREF="26tdstrc_3.htm">TA_ADDRESS_IP</A></B>, <B><A HREF="26tdstrc_4.htm">TA_ADDRESS_IPX</A></B>,
<B><A HREF="26tdstrc_5.htm">TA_NETBIOS_ADDRESS</A></B>, <B><A HREF="26tdstrc_6.htm">TA_ADDRESS_NS</A></B>,
<B><A HREF="26tdstrc_7.htm">TA_ADDRESS_VNS</A></B>,  
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
