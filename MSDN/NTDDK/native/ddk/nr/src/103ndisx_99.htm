<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMDeregisterIoPortRange</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMDeregisterIoPortRange_NR"></A>NdisMDeregisterIoPortRange</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; NdisMDeregisterIoPortRange(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN NDIS_HANDLE</B>&nbsp;<I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>InitialPort</I><B>,</B><I><BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>NumberOfPorts</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp;<I>PortOffset<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMDeregisterIoPortRange</B>&nbsp;releases a mapping that was set up with <B>NdisMRegisterIoPortRange</B>
during driver initialization.
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle input to MiniportInitialize.
<BR>
<DT>
<I>InitialPort</I>
<DD>
Specifies the bus-relative address of the first port in the range of ports.
<BR>
<DT>
<I>NumberOfPorts</I>
<DD>
Specifies the number of ports in the range.
<BR>
<DT>
<I>PortOffset</I>
<DD>
Specifies the mapped base port address returned by <B>NdisMRegisterIoPortRange</B>.
</DL>
<H3>Comments</H3>
<P>
The miniport must pass the same <I>InitialPort</I>&nbsp;and <I>NumberOfPorts</I>&nbsp;to
<B>NdisMDeregisterIoPortRange</B>&nbsp;that were passed when MiniportInitialize
called <B>NdisMRegisterIoPortRange</B>&nbsp;to get the mapped <I>PortOffset</I>
value. That is, a miniport cannot call <B>NdisMDeregisterIoPortRange</B>&nbsp;to
release a subrange of a mapped port range. 
<P>
<B>NdisMDeregisterIoPortRange</B>&nbsp;can be called from the MiniportInitialize or
MiniportHalt functions only if MiniportInitialize previously made a successful
call to <B>NdisMRegisterIoPortRange</B>.
<P>
<B>NdisMDeregisterIoPortRange</B>&nbsp;also releases the driver’s claim on the I/O
port range in the registry. 
<P>
After it calls <B>NdisMRegisterIoPortRange</B>, the miniport can no longer
access the NIC’s port range with calls to the <B>NdisRaw..Port</B><I>Xxx</I>
functions.
<P>
Callers of <B>NdisMDeregisterIoPortRange</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_6.htm">MiniportHalt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,
<B><A HREF="103ndisx_124.htm">NdisMRegisterIoPortRange</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
