<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSHEnumProtocols</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WSHEnumProtocols_NR"></A>WSHEnumProtocols</H2>
<P>
<B>INT</B><BR>
<B>&nbsp; &nbsp; WSHEnumProtocols(</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN LPINT</B>&nbsp; <I>lpiProtocols  </I><B>OPTIONAL,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN LPWSTR</B>&nbsp; <I>lpTransportKeyName</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN OUT LPVOID</B>&nbsp; <I>lpProtocolBuffer</I><B>,</B><I><BR>
</I><B>&nbsp; &nbsp; &nbsp; &nbsp; IN OUT LPDWORD</B>&nbsp; <I>lpdwBufferLength<BR>
</I><B>&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
<B>WSHEnumProtocols</B>&nbsp;returns a set of PROTOCOL_INFO structures that inform
the caller of the Win32 function <B>EnumProtocols</B>&nbsp;about protocols
supported by this helper DLL. 
<H3>Parameters</H3>
<DL>
<DT>
<I>lpiProtocols</I>
<DD>
Optionally specifies a filter selecting information to be returned about the
protocols supported by the helper DLL. If this is NULL, the helper DLL should
return information for all protocols it supports. 
<P>
Otherwise, <I>lpiProtocols</I>&nbsp;points to a zero-terminated array of protocol
ID numbers. <B>WSHEnumProtocols</B>&nbsp;should return information only on
protocols whose ID appears in the <I>lpiProtocols</I>&nbsp;array. Protocol ID
numbers are the third parameter to the <B>socket</B>&nbsp;call (for example,
IPPROTO_TCP). 
<BR>
<DT>
<I>lpTransportKeyName</I>
<DD>
Points to a buffer that contains the name of the registry key that Windows
Sockets uses to access this helper DLL. This parameter can be irrelevant; it
is useful only if the helper DLL supports protocols that set up several
registry keys.
<BR>
<DT>
<I>lpProtocolBuffer</I>
<DD>
Points to the output buffer in which <B>WSHEnumProtocols</B>&nbsp;returns the
requested set of PROTOCOL_INFO structures. The PROTOCOL_INFO structures must
be copied into this buffer as a contiguous array starting at the beginning of
the buffer. Variable-length data, such as the protocol name pointed to by the
PROTOCOL_INFO structure’s <B>lpProtocol</B>&nbsp;member must be written at the end
of the buffer.
<BR>
<DT>
<I>lpdwBufferLength</I>
<DD>
On input, points to a variable specifying the total length in bytes of the
buffer at <I>lpProtocolBuffer</I>. On output, this variable is set to the
number of bytes of information returned or available from <B>WSHEnumProtocols</B>
for this call. If the given input buffer is too small, <B>WSHEnumProtocols</B>
sets the value at <I>lpdwBufferLength</I>&nbsp;to the number of bytes of available
information before it returns control.
</DL>
<H3>Return Value</H3>
<P>
<B>WSHEnumProtocols</B>&nbsp;either returns<B>&nbsp;</B>a count of PROTOCOL_INFO
structures written to the buffer at <I>lpProtocolBuffer</I>, or it returns
SOCKET_ERROR if there was an error. If -1 is returned, <B>WSHEnumProtocols</B>
must call <B>SetLastError</B>&nbsp;to set the Windows Sockets error code of the
error which occurred. 
<P></FONT>
</BODY>
</HTML>
