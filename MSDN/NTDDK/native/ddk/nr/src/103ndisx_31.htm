<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisDprAllocatePacketNonInterlocked</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisDprAllocatePacketNonInterlocked_NR"></A>NdisDprAllocatePacketNonInterlocked</H2>
<P>
<B>VOID</B><BR>
&nbsp; &nbsp; <B>NdisDprAllocatePacketNonInterlocked(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_STATUS</B>&nbsp; <I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_PACKET</B>&nbsp; <B>*</B><I>Packet</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>PoolHandle</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
<B>NdisDprAllocatePacketNonInterlocked</B>&nbsp;allocates and initializes a packet
descriptor when the caller is running at IRQL DISPATCH_LEVEL and that caller
provides internal synchronization for accessing packet pool.
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the final
status of the request, which can be one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The caller can use the packet descriptor returned at <I>Packet</I>. 
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
The free list for the packet pool currently has no available entries. A
subsequent call to <B>NdisDprFreePacketNonInterlocked</B>&nbsp;will return the
given entry to the free list. The variable at <I>Packet</I>&nbsp;is set to NULL. 
</DL>
<DT>
<I>Packet</I>
<DD>
Points to a caller-supplied variable in which this function returns a pointer
to the allocated packet descriptor.
<BR>
<DT>
<I>PoolHandle</I>
<DD>
Specifies the handle returned by a preceding call to <B>NdisAllocatePacketPool</B>.
</DL>
<H3>Comments</H3>
<P>
A caller of <B>NdisDprAllocatePacketNonInterlocked</B>&nbsp;and its reciprocal <B>NdisDprFreePacketNonInterlocked</B>
is responsible for synchronizing all accesses to the packet pool that driver
allocated with <B>NdisAllocatePacketPool</B>. Otherwise, the driver should let
NDIS manage this synchronization on its behalf by calling <B>NdisAllocatePacket</B>
or <B>NdisDprAllocatePacket</B>. 
<P>
<B>NdisDprAllocatePacketNonInterlocked</B>&nbsp;runs slightly faster than <B>NdisAllocatePacket</B>
because NDIS need not acquire a spin lock, which NDIS typically uses to
synchronize access to packet pools that drivers allocate. 
<P>
Instead, a caller of <B>NdisDprAllocatePacketNonInterlocked</B>&nbsp;and <B>NdisDprFreePacketNonInterlocked</B>
manages the synchronization of its accesses to packet pool internally. 
<P>
Usually, such a driver protects its packet pool with a driver-allocated spin
lock. Before calling <B>NdisDprAllocatePacketNonInterlocked</B>, the driver
calls <B>NdisAcquireSpinLock</B>, which raises IRQL to DISPATCH_LEVEL. Only
when the driver resumes execution holding its spin lock does it call <B>NdisDprAllocatePacketNonInterlocked</B>.
Such a driver releases its spin lock with <B>NdisReleaseSpinLock</B>&nbsp;when <B>NdisDprAllocatePacketNonInterlocked</B>
returns control. 
<P>
In a similar manner, such a driver calls <B>NdisAcquireSpinLock</B>&nbsp;before it
releases a packet descriptor back to pool with <B>NdisDprFreePacketNonInterlocked</B>
and, then, it calls <B>NdisReleaseSpinLock</B>.  
<P>
Any packet descriptor allocated with <B>NdisDprAllocatePacketNonInterlocked</B>
must be freed with <B>NdisDprFreePacketNonInterlocked</B>&nbsp;except, possibly,
when a driver is releasing its allocated resources just before being unloaded.
Otherwise, it is a runtime synchronization error that can cause race
conditions to release any packet descriptor with <B>NdisDprFreePacket</B>&nbsp;or <B>NdisFreePacket</B>
if that packet descriptor was allocated with <B>NdisDprAllocatePacketNonInterlocked</B>.
<P>
The caller of <B>NdisDprAllocatePacketNonInterlocked</B>&nbsp;must be running at
IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_6.htm">NdisAcquireSpinLock</A></B>, <B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>,
<B><A HREF="103ndisx_12.htm">NdisAllocatePacketPool</A></B>, <B><A HREF="103ndisx_13.htm">NdisAllocateSpinLock</A></B>,
<B><A HREF="103ndisx_30.htm">NdisDprAllocatePacket</A></B>, <B><A HREF="103ndisx_32.htm">NdisDprFreePacket</A></B>,
<B><A HREF="103ndisx_33.htm">NdisDprFreePacketNonInterlocked</A></B>,
<B><A HREF="103ndisx_40.htm">NdisFreePacket</A></B>, <B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>
<P></FONT>
</BODY>
</HTML>
