<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TdiBuildSendDatagram</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TdiBuildSendDatagram_NR"></A>TdiBuildSendDatagram</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; TdiBuildSendDatagram (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIRP</B>&nbsp; <I>Irp</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DevObj</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PFILE_OBJECT</B>&nbsp; <I>FileObj</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>CompRoutine</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Contxt</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PMDL</B>&nbsp; <I>MdlAddr</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>SendLen</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PTDI_CONNECTION_INFORMATION</B>&nbsp; <I>SendDatagramInfo<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>TdiBuildSendDatagram</B>&nbsp;sets up an internal device control IRP for a
TDI_SEND_DATAGRAM request to the underlying transport in which the local-node
client has already opened a file object representing an address.
<H3>Parameters</H3>
<DL>
<DT>
<I>Irp</I>
<DD>
Points to a client-supplied IRP, either originating in a higher level network
component or allocated with <B>TdiBuildInternalDeviceControlIrp</B>. 
<BR>
<DT>
<I>DevObj</I>
<DD>
Points to the device object created by the next lower TDI transport driver.
<BR>
<DT>
<I>FileObj</I>
<DD>
Points to a file object representing an address.
<BR>
<DT>
<I>CompRoutine</I>
<DD>
Specifies the entry point of a client-supplied IoCompletion routine or NULL.
The I/O Manager calls this routine when the given IRP is completed, unless the
client sets this parameter to NULL. 
<BR>
<DT>
<I>Contxt</I>
<DD>
Points to a client-determined context. This client-supplied pointer is passed
in to the IoCompletion routine when it is called with the completed IRP. <I>Contxt</I>
should be NULL if <I>CompRoutine</I>&nbsp;is NULL.
<BR>
<DT>
<I>MdlAddr</I>
<DD>
Points to an MDL, possibly the initial MDL in a chain of MDLs, mapping a
client-supplied buffer from which the transport is to transfer the datagram to
be sent. 
<BR>
<DT>
<I>SendLen</I>
<DD>
Specifies the size in bytes of the buffer mapped at <I>MdlAddr</I>. The
maximum datagram size depends on the underlying transport. Whether zero is
valid also depends on the underlying transport.
<BR>
<DT>
<I>SendDatagramInfo</I>
<DD>
Points to a TDI_CONNECTION_INFORMATION structure specifying the remote-node
address to which the caller-supplied datagram is to be sent.
</DL>
<H3>Comments</H3>
<P>
<B>TdiBuildSendDatagram </B>sets IRP_MJ_INTERNAL_DEVICE_CONTROL as the <B>MajorFunction</B>
and TDI_SEND_DATAGRAM as the <B>MinorFunction</B>&nbsp;codes in the transport&#39;s
I/O stack location of the given IRP.
<P>
TDI transports never fragment datagrams. Consequently, their clients make one
send-datagram request to transmit each datagram, which is associated only with
the particular request for a connectionless data transfer to the given
destination address. To determine the maximum possible value for <I>SendLen</I>,
the client usually issued a preceding query-information request, set up with <B>TdiBuildQueryInformation</B>
for any of the <I>QType</I>&nbsp;values TDI_QUERY_PROVIDER_INFO,
TDI_QUERY_DATAGRAM_INFO, or TDI_QUERY_MAX_DATAGRAM_INFO. 
<P>
Certain transports support broadcast and/or multicast datagram transmissions.
The client of such a transport can send a datagram to a multicast or broadcast
address on the remote node. However, the syntax of the multicast or broadcast
address is driver-specific. The client can obtain such a transport&#39;s
broadcast address by issuing a query-information request with the <I>QType</I>
value TDI_QUERY_BROADCAST_ADDRESS.
<P>
Any connectionless transfer is inherently unreliable. The underlying transport
can lose or duplicate any given datagram at the discretion of the driver
writer.
<P>
When a client issues send-datagram request, the transport usually queues the
request internally. Transports process send-datagram requests in FIFO order.
They queue send-datagram requests separately from endpoint-to-endpoint send
requests from the same client.
<H3>See Also</H3>
<P>
<B><A HREF="25tdicli_3.htm">ClientEventChainedReceiveDatagram</A></B>,
<B><A HREF="25tdicli_8.htm">ClientEventReceiveDatagram</A></B>,
<B><A HREF="24bldmac_7.htm">TdiBuildInternalDeviceControlIrp</A></B>,
<B><A HREF="24bldmac_11.htm">TdiBuildQueryInformation</A></B>, <B><A HREF="24bldmac_13.htm">TdiBuildReceiveDatagram</A></B>,
<B><A HREF="24bldmac_14.htm">TdiBuildSend</A></B>, <B><A HREF="26tdstrc_21.htm">TDI_CONNECTION_INFORMATION</A></B>,
<B><A HREF="22ioctl_12.htm">TDI_SEND_DATAGRAM</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
