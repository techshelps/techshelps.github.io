<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSHGetSocketInformation</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WSHGetSocketInformation_NR"></A>WSHGetSocketInformation</H2>
<P>
<B>INT</B><BR>
<B>&nbsp; &nbsp; WSHGetSocketInformation(</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN PVOID</B>&nbsp; <I>HelperDllSocketContext</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN SOCKET</B>&nbsp; <I>SocketHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN HANDLE</B>&nbsp; <I>TdiAddressObjectHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN HANDLE</B>&nbsp; <I>TdiConnectionObjectHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN INT</B>&nbsp; <I>Level</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN INT</B>&nbsp; <I>OptionName</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; OUT PCHAR</B>&nbsp; <I>OptionValue</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; OUT INT</B>&nbsp; <I>OptionLength</I><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<PRE><FONT FACE="Courier" SIZE="2">&nbsp;</FONT></PRE>
<P>
<B>WSHGetSocketInformation</B>&nbsp;is called when <B>getsockopt</B>&nbsp;is passed an
option that Windows Sockets does not explicitly handle.
<H3>Parameters</H3>
<DL>
<DT>
<I>HelperDllSocketContext</I>
<DD>
Points to a per-socket context area, allocated and initialized by the WSH DLL <B>WSHOpenSocket
</B>or <B>WSHOpenSocket2 </B>function.
<BR>
<DT>
<I>SocketHandle</I>
<DD>
Specifies the handle to the socket returned by <B>socket</B>&nbsp;or <B>accept</B>.
<BR>
<DT>
<I>TdiAddressObjectHandle</I>
<DD>
Specifies the file object handle representing an open transport address
associated with the socket, or NULL if the socket is not yet bound to an
address. A nonNULL handle allows the WSH DLL to perform operations directly
with the transport through the use of this handle.
<BR>
<DT>
<I>TdiConnectionObjectHandle</I>
<DD>
Specifies the file object handle representing an open connection endpoint
associated with the socket, or NULL if the socket is a datagram socket or is
not yet connected. A nonNULL handle allows the helper DLL to perform
operations directly with the transport through the use of this handle.
<BR>
<DT>
<I>Level</I>
<DD>
Specifies the <I>level</I>&nbsp;passed in the <B>getsockopt</B>&nbsp;call.
<BR>
<DT>
<I>OptionName</I>
<DD>
Specifies the <I>optname</I>&nbsp;passed in the <B>getsockopt</B>&nbsp;call. If this is
NULL, the Windows Sockets DLL is simply querying the length of the helper
DLL’s context information for the socket. 
<BR>
<DT>
<I>OptionValue</I>
<DD>
Points to a buffer in which <B>WSHGetSocketInformation </B>returns the
requested information.
<BR>
<DT>
<I>OptionLength</I>
<DD>
Points to a variable in which <B>WSHGetSocketInformation</B>&nbsp;returns the
number of bytes transferred into the buffer at <I>OptionValue</I>.
</DL>
<H3>Return Value</H3>
<P>
<B>WSHGetSocketInformation</B>&nbsp;returns zero if it successfully interprets the
given option and carries out whatever operation it requires. Otherwise it
returns a Windows Sockets error code, the <B>getsockopt</B>&nbsp;call is failed,
and its return is set to the error returned by this helper DLL function.
<H3>Comments</H3>
<P>
<B>WSHGetSocketInformation</B>&nbsp;can provide support for arbitrary options
beyond those defined by Windows Sockets. Certain defined options also are
passed to the helper DLL because of the different ways in which transport
drivers provide support for these options, in particular for the SO_KEEPALIVE<B>
</B>and SO_DONTROUTE options.
<P>
Any option passed in an application call to <B>getsockopt</B>&nbsp;that the Windows
Sockets DLL does not recognize is forwarded to <B>WSHGetSocketInformation</B>.
The Windows Sockets DLL relies on each helper DLL to fail calls for which the
given option is invalid or unsupported by the helper DLL. 
<P>
<B>WSHGetSocketInformation</B>&nbsp;and <B>WSHSetSocketInformation</B>&nbsp;are also
used to support socket handles shared between separate processes. However, the
context information maintained by a helper DLL is not automatically shared
between processes because virtual memory in a process is private to that
process unless both processes set up shared memory.
<P>
To support shared socket handles, the Windows Sockets DLL calls <B>WSHGetSocketInformation
</B>with the <I>Level</I>&nbsp;SOL_INTERNAL and the <I>OptionName</I>&nbsp;SO_CONTEXT.
If necessary, the Windows Sockets DLL calls <B>WSHGetSocketInformation</B>
twice: first to determine how large a buffer to allocate for context
information and again to get the context information.
<P>
Windows Sockets allocates a buffer of the size of the helper DLL&#39;s context
for the socket before it calls <B>WSHGetSocketInformation</B>&nbsp;with a pointer
to the allocated buffer at <I>OptionValue</I>.<I>&nbsp;</I>This call requests <B>WSHGetSocketInformation</B>
to retrieve all context information the helper DLL has for the socket. The
helper DLL copies its context information into the buffer at <I>OptionValue</I>
and returns.
<P>
When a socket handle is valid in a new process, either by inheritance of the
handle or a call to the Win32 function <B>DuplicateHandle</B>, Windows Sockets
first calls <B>WSHOpenSocket </B>or <B>WSHOpenSocket2 </B>in the normal manner
to inform the helper DLL that a new socket is being opened. Next Windows
Sockets calls <B>WSHSetSocketInformation</B>&nbsp;with the <I>OptionLevel</I>
SOL_INTERNAL, the <I>OptionName</I>&nbsp;SO_CONTEXT, and the context information
returned by <B>WSHGetSocketInformation</B>&nbsp;in the <I>OptionValue</I>&nbsp;buffer. <B>WSHSetSocketInformation</B>
uses the supplied context information to recreate the socket context for the
new process.
<H3>See Also</H3>
<P>
<B><A HREF="27wshfun_14.htm">WSHOpenSocket</A></B>, <B><A HREF="27wshfun_15.htm">WSHOpenSocket2</A></B>,
<B><A HREF="27wshfun_16.htm">WSHSetSocketInformation</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
