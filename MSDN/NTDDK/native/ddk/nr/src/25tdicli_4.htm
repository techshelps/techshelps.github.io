<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClientEventChainedReceiveExpedited</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ClientEventChainedReceiveExpedited_NR"></A>ClientEventChainedReceiveExpedited</H2>
<P>
<B>NTSTATUS</B><BR>
&nbsp; &nbsp; <B>ClientEventChainedReceiveExpedited(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>TdiEventContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN CONNECTION_CONTEXT</B>&nbsp; <I>ConnectionContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>ReceiveFlags</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>ReceiveLength</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>StartingOffset</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PMDL</B>&nbsp; <I>Tsdu</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>TsduDescriptor</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ClientEventChainedReceiveExpedited is an event handler that the underlying TDI
transport calls in response to an incoming expedited receive from a remote
node with which the client has an established endpoint-to-endpoint connection.
<P>
The transport calls this handler, rather than ClientEventReceiveExpedited,
when it is indicating a full TSDU and the client can be given direct read-only
access to the buffered TSDU until the client has consumed the data. 
<H3>Parameters</H3>
<DL>
<DT>
<I>TdiEventContext</I>
<DD>
Points to the context the client provided in the IRP it previously set up with
<B>TdiBuildSetEventHandler</B>&nbsp;to register ClientEventChainedReceiveExpedited.
<BR>
<DT>
<I>ConnectionContext</I>
<DD>
Points to the client&#39;s context area for this connection endpoint. The
client previously supplied this value to its underlying transport when its
ClientEventConnect handler accepted a connection offer from the remote-node
peer and/or when it opened the connection endpoint with <B>ZwCreateFile</B>. 
<BR>
<DT>
<I>ReceiveFlags</I>
<DD>
Specifies the nature of the receive indication as a combination (ORed) of the
following flags:
<DL>
<DT>
TDI_RECEIVE_EXPEDITED
<DD>
The buffer mapped at <I>Tsdu</I>&nbsp;contains expedited data received from the
client&#39;s remote-node peer. This flag is always set when
ClientEventChainedReceiveExpedited is called. 
<BR>
<DT>
TDI_RECEIVE_ENTIRE_MESSAGE
<DD>
The buffer mapped at <I>Tsdu</I>&nbsp;contains a full TSDU, and the client retains
read-only access to this buffer until the client consumes the indicated data
if ClientEventChainedReceiveExpedited returns STATUS_PENDING. This flag is
always set when ClientEventChainedReceiveExpedited is called. 
<BR>
<DT>
TDI_RECEIVE_AT_DISPATCH_LEVEL
<DD>
The receive is being indicated at IRQL DISPATCH_LEVEL. This flag restricts the
set of support routines that the client can call in processing this
indication. Some transports never set this flag, whatever the current IRQL,
when making receive-event notifications.  
</DL>
<DT>
<I>ReceiveLength</I>
<DD>
Specifies the number of bytes of client data in the buffer mapped at <I>Tsdu</I>.
<BR>
<DT>
<I>StartingOffset</I>
<DD>
Specifies the byte offset at which the client data starts within the buffer
mapped at <I>Tsdu</I>. 
<BR>
<DT>
<I>Tsdu</I>
<DD>
Points to an MDL, possibly the initial MDL in a chain, mapping the buffer
containing the received TSDU.
<BR>
<DT>
<I>TsduDescriptor</I>
<DD>
Points to a descriptor for the received TSDU. The client must call <B>TdiReturnChainedReceives</B>
with this pointer subsequently if ClientEventChainedReceiveExpedited returns
STATUS_PENDING for this receive indication. This pointer should be treated as
a handle to an opaque variable, to be used by the client only as a parameter
to <B>TdiReturnChainedReceives</B>&nbsp;if ClientEventChainedReceiveExpedited
returns STATUS_PENDING.  
</DL>
<H3>Return Value</H3>
<P>
ClientEventChainedReceiveExpedited can return one of the following:
<DL>
<DT>
STATUS_SUCCESS
<DD>
Indicates the client consumed all the data in the given TSDU and is returning
ownership of the buffer immediately.
<BR>
<DT>
STATUS_PENDING
<DD>
Indicates the client is retaining ownership of the buffer containing the given
TSDU until it calls <B>TdiReturnChainedPackets</B>&nbsp;with the given <I>TsduDescriptor</I>.
<BR>
<DT>
STATUS_DATA_NOT_ACCEPTED
<DD>
Indicates the client is not interested in the TSDU. 
<P>
If the underlying transport buffers receives internally, the client might
retrieve the data with a TDI_RECEIVE request, unless the transport discards
buffered data indicated to ClientEventChainedReceive(<I>Xxx</I>) handlers. 
</DL>
<H3>Comments</H3>
<P>
A call to ClientEventChainedReceiveExpedited gives the client read-only access
to the indicated TSDU for the range within the buffer specified by the input <I>StartingOffset</I>
and <I>ReceiveLength</I>. If the indicated data is of interest to the client,
ClientEventChainedReceiveExpedited either copies the indicated range of TSDU
data into a client-allocated internal buffer and returns STATUS_SUCCESS
immediately or retains control of the buffer by returning STATUS_PENDING. If
it returns STATUS_PENDING, the client must call <B>TdiReturnChainedReceives</B>
subsequently with the input <I>TsduDescriptor</I>&nbsp;to relinquish control of the
buffer after the client has consumed the data. 
<P>
In general, such a call to <B>TdiReturnChainedReceives</B>&nbsp;should occur as
quickly as possible. Holding on to a buffer passed to
ClientEventChainedReceiveExpedited for any extended period constrains I/O
throughput in underlying driver(s), because the driver that allocated the
buffer cannot reuse this resource for subsequent receive indications until <B>TdiReturnChainedReceives</B>
is called. 
<P>
Because calls to ClientEventChainedReceiveExpedited always indicate the
availability of a full TSDU, the client never has to set up TDI_RECEIVE
requests for such an indication, as the corresponding
ClientEventReceiveExpedited handler sometimes must to obtain a full TSDU.
Consequently, receive indications made to ClientEventChainedReceiveExpedited
increase network I/O throughput and performance by decreasing call overhead
for the client, for its underlying transport, and for the system overall. A
transport never calls the corresponding ClientEventReceiveExpedited handler
with the same indication it makes to ClientEventChainedReceiveExpedited.
<P>
When ClientEventChainedReceiveExpedited returns control with either
STATUS_SUCCESS or STATUS_DATA_NOT_ACCEPTED, the underlying transport assumes
the client is done with this receive indication.  
<P>
By default, ClientEventChainedReceiveExpedited runs at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="25tdicli_2.htm">ClientEventChainedReceive</A></B>, <B><A HREF="25tdicli_9.htm">ClientEventReceiveExpedited</A></B>,
<B><A HREF="24bldmac_16.htm">TdiBuildSetEventHandler</A></B>, <B><A HREF="23tdifun_7.htm">TdiReturnChainedReceives</A></B>
<P></FONT>
</BODY>
</HTML>
