<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMFddiIndicateReceive</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMFddiIndicateReceive_NR"></A>NdisMFddiIndicateReceive</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; NdisMFddiIndicateReceive(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN</B>&nbsp;<B>NDIS_HANDLE</B>&nbsp;<I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN</B>&nbsp;<B>NDIS_HANDLE</B>&nbsp;<I>MiniportReceiveContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN</B>&nbsp;<B>PVOID</B>&nbsp;<I>HeaderBuffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN</B>&nbsp;<B>UINT</B>&nbsp;<I>HeaderBufferSize</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp;<I>LookaheadBuffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>LookaheadBufferSize</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN</B>&nbsp;<B>UINT</B>&nbsp;<I>PacketSize<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMFddiIndicateReceive</B>&nbsp;notifies NDIS that an FDDI packet (or some
initial lookahead portion of the packet) has arrived so NDIS can forward the
packet to bound protocols. 
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle originally input to MiniportInitialize.
<BR>
<DT>
<I>MiniportReceiveContext</I>
<DD>
Specifies a context handle supplied by the caller. NDIS returns this handle as
an input parameter to the MiniportTransferData function if it is called. The
miniport can use the context area designated by this handle to determine which
packet, on which NIC, is being received.
<BR>
<DT>
<I>HeaderBuffer</I>
<DD>
Specifies the base virtual address of the buffered packet header. 
<BR>
<DT>
<I>HeaderBufferSize</I>
<DD>
Specifies the size in bytes of the packet header.
<BR>
<DT>
<I>LookaheadBuffer</I>
<DD>
Specifies the base virtual address of a buffer containing the initial <I>LookaheadBufferSize</I>
bytes of the data in the packet. 
<BR>
<DT>
<I>LookaheadBufferSize</I>
<DD>
Specifies the size in bytes of the lookahead buffer. This value must be at
least as large as the lookahead size set when MiniportSetInformation was
called with OID_GEN_CURRENT_LOOKAHEAD, or as large as the packet, whichever is
smaller. When the packet is smaller than the lookahead size, the lookahead
buffer contains the entire frame.
<P>
A miniport can (and should) set <I>LookaheadBufferSize</I>&nbsp;to something larger
than the minimum required if sufficient received data is available on its NIC.
<BR>
<DT>
<I>PacketSize</I>
<DD>
Specifies the size in bytes of the received packet data. This value does not
include the <I>HeaderBufferSize</I>. 
<P>
When <I>PacketSize</I>&nbsp;is larger than <I>LookaheadBufferSize</I>, a protocol
driver call to <B>NdisTransferData</B>&nbsp;causes a subsequent call to the
MiniportTransferData function, which transfers the remaining data in the
packet. 
</DL>
<H3>Comments</H3>
<P>
A miniport calls <B>NdisMFddiIndicateReceive</B>&nbsp;if it designates its NIC as
of type <B>NdisMediumFddi</B>&nbsp;in response to the OID_GEN_MEDIA_IN_USE query,
unless the miniport indicates receives with <B>NdisMIndicateReceivePacket</B>.
<P>
When a miniport calls <B>NdisMFddiIndicateReceive</B>, NDIS passes a pointer
to the header of the packet and a pointer to some or all of the data in the
packet to the ProtocolReceive function(s) of bound protocol driver(s). Each
protocol that receives the indication can do the following:
<OL>
<LI>
Inspect the header and data in the packet to decide whether the indication is
of interest to the protocol’s client(s).
<P>
<LI>
If it is, copy as much of the header or data as is visible into
protocol-allocated memory with <B>NdisMoveMemory</B>. 
<P>
<LI>
Get the remaining data, if any, for the indication by allocating a packet
descriptor with sufficient chained buffer descriptors and calling <B>NdisTransferData</B>.
The call to <B>NdisTransferData</B>&nbsp;causes the NIC driver’s
MiniportTransferData function to copy the data into the protocol-supplied
packet.
</OL>
<P>
For any protocol driver that receives an indiation through <B>NdisMFddiIndicateReceive</B>,
the <I>HeaderBuffer</I>&nbsp;and <I>LookaheadBuffer</I>&nbsp;addresses are valid only
during the current call to its ProtocolReceive function, and these buffers are
read-only. A protocol driver cannot retain a pointer to the indicated packet
with these associated buffers nor can it retain any pointers to these buffers
for later use. Any data that a protocol driver needs from such a packet must
be copied and saved during the receive indication.
<P>
The data in the header is the same as that received on the NIC. A miniport
need not remove any headers or trailers from the data its NIC receives.
<P>
The transmitting driver adds padding to any packet that is too short for the
requirements of the medium. The receiving miniport can include such padding in
the data and length it subsequently indicates. Each bound protocol is
responsible for detecting any such padding and ignoring it.
<P>
Callers of <B>NdisMFddiIndicateReceive</B>&nbsp;run at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_7.htm">MiniportHandleInterrupt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,<B>
<A HREF="101mini_10.htm">MiniportQueryInformation</A>, <A HREF="101mini_16.htm">MiniportSetInformation</A></B>,
<B><A HREF="101mini_19.htm">MiniportTimer</A></B>, <B><A HREF="101mini_20.htm">MiniportTransferData</A></B>,
<B><A HREF="103ndisx_103.htm">NdisMFddiIndicateReceiveComplete</A></B>,
<B><A HREF="103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>,
<B><A HREF="103ndisx_210.htm">NdisTransferData</A></B>, <B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>
<P></FONT>
</BODY>
</HTML>
