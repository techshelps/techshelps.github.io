<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisCopyBuffer</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisCopyBuffer_NR"></A>NdisCopyBuffer</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisCopyBuffer(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_STATUS</B>&nbsp; <I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_BUFFER  *</B><I>Buffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>PoolHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>MemoryDescriptor</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>Offset</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>Length</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisCopyBuffer</B>&nbsp;creates a buffer descriptor for a specified virtual
(sub)range, given a handle for a block of already allocated memory and a
pointer to the memory descriptor for the block. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the final
status of the buffer descriptor copy operation, which can be one of the
following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The driver can use the buffer descriptor or buffer descriptor chain returned
at <I>Buffer</I>. 
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
An attempt to map the given range failed, possibly because of an out-of-range <I>Offset</I>
and <I>Length</I>&nbsp;specification. 
</DL>
<DT>
<I>Buffer</I>
<DD>
Points to a caller-supplied variable in which this function returns a pointer
to the new buffer descriptor if the call is successful.
<BR>
<DT>
<I>PoolHandle</I>
<DD>
Specifies the handle returned by a preceding call to <B>NdisAllocateBufferPool</B>.
<BR>
<DT>
<I>MemoryDescriptor</I>
<DD>
Points to the memory descriptor, which can be of type NDIS_BUFFER.
<BR>
<DT>
<I>Offset</I>
<DD>
Specifies the byte offset within the memory block at which to start the copy.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the number of bytes to copy.
</DL>
<H3>Comments</H3>
<P>
<B>NdisCopyBuffer </B>creates a buffer descriptor mapping a (sub)range within
a block of memory, described by a given memory descriptor. This function
allocates storage for the new buffer descriptor and then copies information
from the given <I>MemoryDescriptor</I>&nbsp;into the new buffer descriptor. 
<P>
If the given memory descriptor contains chained elements, the buffer
descriptor that <B>NdisCopyBuffer</B>&nbsp;creates can be the head of a chain of
buffer descriptors. A driver can call <B>NdisGetNextBuffer</B>&nbsp;and then <B>NdisQueryBuffer</B>
to query each chained buffer descriptor. 
<P>
The driver must release any spin lock it is holding before calling<B>
NdisCopyBuffer</B>. The driver must call <B>NdisFreeBuffer</B>&nbsp;to release the
buffer descriptor when it is no longer needed.
<P>
Callers of <B>NdisCopyBuffer</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_9.htm">NdisAllocateBufferPool</A></B>, <B><A HREF="103ndisx_37.htm">NdisFreeBuffer</A></B>,
<B><A HREF="103ndisx_49.htm">NdisGetNextBuffer</A></B>, <B><A HREF="103ndisx_157.htm">NdisQueryBuffer</A></B>,
<B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
