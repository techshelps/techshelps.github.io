<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisOpenFile</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisOpenFile_NR"></A>NdisOpenFile</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisOpenFile(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_STATUS</B>&nbsp;<I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_HANDLE</B>&nbsp;<I>FileHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PUINT</B>&nbsp;<I>FileLength</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_STRING</B>&nbsp;<I>FileName</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_PHYSICAL_ADDRESS</B>&nbsp;<I>HighestAcceptableAddress</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisOpenFile</B>&nbsp;returns a handle for an opened file. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the status
of the open file operation, which can be one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The handle at <I>FileHandle</I>&nbsp;is valid for a subsequent call to <B>NdisMapFile</B>.
<BR>
<DT>
NDIS_STATUS_FILE_NOT_FOUND
<DD>
The given string at <I>FileName</I>&nbsp;did not specify a name found in the system
object namespace. 
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
NDIS could not allocate the resources it needed to open the file and allocate
a buffer for the file contents. 
<BR>
<DT>
NDIS_STATUS_ERROR_READING_FILE
<DD>
The specified file’s data could not be read into system memory for subsequent
access by the caller. 
</DL>
<DT>
<I>FileHandle</I>
<DD>
Points to a caller-supplied variable in which this function returns the handle
of the opened file if the call succeeds.
<BR>
<DT>
<I>FileLength</I>
<DD>
Points to a caller-supplied variable in which this function writes the number
of bytes of data in the opened file if the call succeeds.
<BR>
<DT>
<I>FileName</I>
<DD>
Points to a buffered, caller-initialized counted string, in the system-default
character set, naming the file to be opened. For Windows NT drivers, this
string contains Unicode characters.
<BR>
<DT>
<I>HighestAcceptableAddress</I>
<DD>
Specifies the highest physical address in which the file data can be stored,
or specifies -1 if the driver places no restrictions.
</DL>
<H3>Comments</H3>
<P>
<B>NdisOpenFile</B>&nbsp;opens a disk file, typically a file the driver will later
download to program an intelligent NIC. <B>NdisOpenFile</B>&nbsp;also allocates
storage to hold file contents for the driver’s subsequent call to <B>NdisMapFile</B>.
<P>
A NIC driver should call <B>NdisOpenFile</B>&nbsp;only from MiniportInitialize.
<P>
When <B>NdisOpenFile</B>&nbsp;returns, the NIC driver can access file data by
calling <B>NdisMapFile</B>. It can call <B>NdisUnmapFile</B>&nbsp;to page out the
file so it does not consume resources unnecessarily while the driver is not
accessing the file data. When finished using the file, MiniportInitialize must
call <B>NdisCloseFile</B>.
<P>
Callers of <B>NdisOpenFile</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_95.htm">NdisMCreateLog</A></B>,
<B><A HREF="103ndisx_21.htm">NdisCloseFile</A></B>, <B><A HREF="103ndisx_88.htm">NdisMapFile</A></B>,
<B><A HREF="103ndisx_214.htm">NdisUnmapFile</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
