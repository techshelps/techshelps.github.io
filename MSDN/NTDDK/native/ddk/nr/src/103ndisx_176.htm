<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisReadEisaSlotInformation</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisReadEisaSlotInformation_NR"></A>NdisReadEisaSlotInformation</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisReadEisaSlotInformation(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_STATUS</B>&nbsp; <I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>WrapperConfigurationContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PUINT</B>&nbsp; <I>SlotNumber</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_EISA_FUNCTION_INFORMATION</B>&nbsp; <I>EisaData</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisReadEisaSlotInformation</B>&nbsp;returns EISA configuration information for
a NIC on an EISA bus. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the status
of the call as one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The NIC driver can examine the buffered configuration data to determine
whether a NIC that it supports has been found and, if so, can use the
bus-relative configuration values as parameters to certain <B>Ndis</B><I>Xxx</I>
initialization functions.
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
NDIS could not allocate the resources it needs to collect the EISA
configuration information. 
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
This is a default status, returned if no NIC can be found on an EISA bus or if
the caller supplied an invalid parameter. For example, if the caller set the <I>AdapterType</I>
to something other than <B>NdisInterfaceEisa</B>&nbsp;when it called <B>NdisMSetAttributes(Ex)</B>,
<B>NdisReadEisaSlotInformation</B>&nbsp;returns this status. 
</DL>
<DT>
<I>WrapperConfigurationContext</I>
<DD>
Specifies the handle input to MiniportInitialize. 
<BR>
<DT>
<I>SlotNumber</I>
<DD>
Points to a variable in which this function returns the slot number of a NIC
found on the EISA bus if this call is successful.
<BR>
<DT>
<I>EisaData</I>
<DD>
Points to a caller-allocated buffer, which must be at least <B>sizeof(</B>NDIS_EISA_SLOT_INFORMATION
+ NDIS_EISA_FUNCTION_INFORMATION<B>)</B>. 
</DL>
<H3>Comments</H3>
<P>
<B>NdisReadEisaSlotInformation</B>&nbsp;reads standard EISA bus configuration
information for a NIC that it finds on an EISA I/O bus and copies the
bus-relative configuration information into a buffer. 
<P>
If the call to <B>NdisReadEisaSlotInformation</B>&nbsp;succeeds, this function
returns information in the caller-supplied buffer at <I>EisaData</I>,
formatted as an NDIS_EISA_SLOT_INFORMATION structure followed by an
NDIS_EISA_FUNCTION_INFORMATION structure.
<P>
The NDIS_EISA_SLOT_INFORMATION structure is defined as follows:
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _NDIS_EISA_SLOT_INFORMATION {
&nbsp; &nbsp; UCHAR ReturnCode;
&nbsp; &nbsp; UCHAR ReturnFlags;
&nbsp; &nbsp; UCHAR MajorRevision;
&nbsp; &nbsp; UCHAR MinorRevision;
&nbsp; &nbsp; USHORT Checksum;
&nbsp; &nbsp; UCHAR NumberFunctions;
&nbsp; &nbsp; UCHAR FunctionInformation;
&nbsp; &nbsp; ULONG CompressedId;
} NDIS_EISA_SLOT_INFORMATION, *NDIS_EISA_SLOT_INFORMATION; 
&nbsp; &nbsp; &nbsp;</FONT></PRE>
<P>
Members of interest to NIC drivers include the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Member</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Checksum</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The checksum value allows validation of the configuration data.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>NumberFunctions</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The number of functions at this slot.  
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>FunctionInformation</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Whether NDIS_EISA_FUNCTION_INFORMATION is available for this slot.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>CompressedId</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The EISA compressed identification of the device at this slot.  
</FONT></TABLE>
<P>
The caller of <B>NdisReadEisaSlotInformation</B>&nbsp;can use the <B>CompressedId</B>
value to confirm whether the NIC at this slot is its own. At most, <B>NdisReadEisaSlotInformation</B>
retrieves the function information for the initial function. A NIC driver can
call <B>NdisReadEisaSlotInformationEx </B>to retrieve the EISA configuration
information for additional functions, if any. 
<P>
The NDIS_EISA_FUNCTION_INFORMATION structure is defined as follows: 
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _NDIS_EISA_FUNCTION_INFORMATION {
&nbsp; &nbsp; ULONG CompressedId;
&nbsp; &nbsp; UCHAR IdSlotFlags1;
&nbsp; &nbsp; UCHAR IdSlotFlags2;
&nbsp; &nbsp; UCHAR MinorRevision;
&nbsp; &nbsp; UCHAR MajorRevision;
&nbsp; &nbsp; UCHAR Selections[26];
&nbsp; &nbsp; UCHAR FunctionFlags;
&nbsp; &nbsp; UCHAR TypeString[80];
&nbsp; &nbsp; EISA_MEMORY_CONFIGURATION EisaMemory[9];
&nbsp; &nbsp; EISA_IRQ_CONFIGURATION EisaIrq[7];
&nbsp; &nbsp; EISA_DMA_CONFIGURATION EisaDma[4];
&nbsp; &nbsp; EISA_PORT_CONFIGURATION EisaPort[60];
&nbsp; &nbsp; UCHAR InitializationData[60];
} NDIS_EISA_FUNCTION_INFORMATION, *PNDIS_EISA_FUNCTION_INFORMATION;
&nbsp; &nbsp; </FONT></PRE>
<P>
The members of this structure correspond to the standard EISA configuration
function block, as follows: 
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Member</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>CompressedId</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies the EISA compressed identification for the device. This value is
identical to that of the <B>CompressedId</B>&nbsp;in the returned
NDIS_EISA_SLOT_INFORMATION structure. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>IdSlotFlags1</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies byte 0 identifier and slot information. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>IdSlotFlags2</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies byte 1 identifier and slot information. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>MinorRevision</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies the .<I>cfg</I>&nbsp;file minor revision level. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>MajorRevision</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies the .<I>cfg</I>&nbsp;file major revision level. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Selections[26]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array for 26 selections. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>FunctionFlags</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies function flags. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>TypeString[80]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array for a type and subtype ASCII string. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>EisaMemory[9]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array in which each element is an EISA_MEMORY_CONFIGURATION
structure, defining the bus-relative device memory range. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>EisaIrq[7]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array in which each element is an EISA_IRQ_CONFIGURATION
structure, defining the bus-relative device interrupt. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>EisaDma[4]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array in which each element is an EISA_DMA_CONFIGURATION
structure, defining the bus-relative DMA capacity, timing, and channel number,
if any. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>EisaPort[60]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array in which each element is an EISA_PORT_CONFIGURATION
structure, defining the bus-relative I/O port ranges of the device. 
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>InitializationData[60]</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Specifies an array of EISA initialization data. 
</FONT></TABLE>
<P>
NIC drivers call <B>NdisReadEisaSlotInformation</B>&nbsp;to identify their
respective adapters in the current platform. When a particular driver’s NIC is
found, the bus-relative configuration parameters returned at <I>EisaData</I>
are passed in subsequent calls to functions such as <B>NdisMRegisterInterrupt</B>
(<B>EisaIrq</B>), <B>NdisMMapIoSpace</B>&nbsp;(<B>EisaMemory</B>), and <B>NdisMRegisterIoPortRange
</B>(<B>EisaPort</B>). 
<P>
After consuming the returned information, the caller of <B>NdisReadEisaSlotInformation</B>
is responsible for releasing the memory allocated at <I>EisaData</I>. 
<P>
Callers of <B>NdisReadEisaSlotInformation</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_39.htm">NdisFreeMemory</A></B>,
<B><A HREF="103ndisx_112.htm">NdisMMapIoSpace</A></B>, <B><A HREF="103ndisx_123.htm">NdisMRegisterInterrupt</A></B>,
<B><A HREF="103ndisx_124.htm">NdisMRegisterIoPortRange</A></B>, <B><A HREF="103ndisx_129.htm">NdisMSetAttributes</A></B>,
<B><A HREF="103ndisx_130.htm">NdisMSetAttributesEx</A></B>, <B><A HREF="103ndisx_149.htm">NdisOpenConfiguration</A></B>,
<B><A HREF="103ndisx_177.htm">NdisReadEisaSlotInformationEx</A></B>
<P></FONT>
</BODY>
</HTML>
