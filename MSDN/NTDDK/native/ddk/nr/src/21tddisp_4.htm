<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TdiDispatchDeviceControl</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TdiDispatchDeviceControl_NR"></A>TdiDispatchDeviceControl</H2>
<P>
<B>NTSTATUS <BR>
</B>&nbsp; &nbsp; <B>TdiDispatchDeviceControl (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DeviceObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIRP</B>&nbsp; <I>Irp</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIO_STACK</B>&nbsp; <I>IrpSp<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>TdiDispatchDeviceControl</B>&nbsp;processes IRPs set with the major function
code IRP_MJ_DEVICE_CONTROL.
<H3>Parameters</H3>
<DL>
<DT>
<I>DeviceObject</I>
<DD>
Points to the device object created by the TDI driver.
<BR>
<DT>
<I>Irp</I>
<DD>
Points to the IRP.
<BR>
<DT>
<I>IrpSp</I>
<DD>
Points to the I/O stack location of the transport driver in the given IRP.
</DL>
<H3>Return Value</H3>
<P>
<B>TdiDispatchDeviceControl</B>&nbsp;returns STATUS_SUCCESS if it satisfied the
given request. Otherwise, it returns a driver-determined error status,
depending on the given IOCTL_<I>XXX</I>&nbsp;minor function code in the IRP. 
<H3>Comments</H3>
<P>
Usually, TdiDispatchDeviceControl calls <B>TdiMapUserRequest</B>&nbsp;and, if it
returns STATUS_SUCCESS, calls the transport&#39;s
TdiDispatchInternalDeviceControl function with the input <I>DeviceObject</I>
and <I>Irp</I>&nbsp;pointers. If <B>TdiMapUserRequest</B>&nbsp;returns an error
indicating that the given IOCTL_<I>XXX</I>&nbsp;in the Irp did not match any of the
system-defined IOCTL_TDI_<I>XXX</I>&nbsp;codes, most transports simply complete the
IRP with a driver-determined error status, such as
STATUS_INVALID_DEVICE_REQUEST or STATUS_NOT_SUPPORTED. 
<P>
However, if a transport supports any driver-defined &quot;private&quot; IOCTLs
that a transport-dedicated application uses to communicate with the transport,
its TdiDispatchDeviceControl <B>switch</B>es on these IOCTL_<I>XXX</I>&nbsp;and
calls internal driver functions to process them, as well as calling
TdiDispatchInternalDeviceControl when <B>TdiMapUserRequest</B>&nbsp;returns
STATUS_SUCCESS. 
<P>
For more information about driver-defined IOCTL codes, see the <I>Kernel-Mode
Driver Reference</I>. 
<H3>See Also</H3>
<P>
<B><A HREF="21tddisp_5.htm">TdiDispatchFastDeviceControl</A></B>,
<B><A HREF="21tddisp_6.htm">TdiDispatchInternalDeviceControl</A></B>,
<B><A HREF="23tdifun_6.htm">TdiMapUserRequest</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
