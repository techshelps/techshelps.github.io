<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisAllocateMemory</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisAllocateMemory_NR"></A>NdisAllocateMemory</H2>
<P>
<B>NDIS_STATUS<BR>
&nbsp; &nbsp; NdisAllocateMemory(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PVOID</B>&nbsp; *<I>VirtualAddress</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>Length</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>MemoryFlags</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_PHYSICAL_ADDRESS</B>&nbsp; <I>HighestAcceptableAddress</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisAllocateMemory</B>&nbsp;allocates resident (nonpaged) system-space memory,
optionally within a specified address limit, as a physically contiguous
allocation, and/or as a noncached allocation. 
<H3>Parameters</H3>
<DL>
<DT>
<I>VirtualAddress</I>
<DD>
Points to a caller-supplied variable in which this function returns the base
virtual address of the allocated memory or NULL if memory of the specified
type is unavailable.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the size in bytes to be allocated.
<BR>
<DT>
<I>MemoryFlags</I>
<DD>
Specifies zero or a bitmask designating the type(s) of memory to allocate, as
follows: 
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
zero
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Allocate nonpaged system-space memory.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
NDIS_MEMORY_CONTIGUOUS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Allocate physically contiguous memory.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
NDIS_MEMORY_NONCACHED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Allocate noncached memory.
</FONT></TABLE>
<P>
Only NIC drivers specify the allocation of contiguous and/or noncached memory
during driver initialization. These two flags can be ORed into <I>MemoryFlags</I>
before <B>NdisAllocateMemory</B>&nbsp;is called. 
<BR>
<DT>
<I>HighestAcceptableAddress</I>
<DD>
Specifies -1. 
</DL>
<H3>Return Value</H3>
<P>
<B>NdisAllocateMemory</B>&nbsp;can return either of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The caller can use the allocated memory range starting at the value returned
at <I>VirtualAddress</I>. 
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
An attempt to allocate the requested memory failed. This return does not
necessarily mean that a subsequent call will fail.
</DL>
<H3>Comments</H3>
<P>
Any NDIS driver might call <B>NdisAllocateMemory</B>&nbsp;with the <I>MemoryFlags</I>
set to zero. For example, NDIS drivers that export a set of NDIS upper-edge
(Miniport<I>Xxx</I>) functions can call <B>NdisAllocateMemory</B>&nbsp;to allocate
a context area in which the driver will maintain per-NIC (or per-virtual-NIC)
runtime state information and pass the pointer returned at <I>VirtualAddress</I>
to <B>NdisMSetAttributes(Ex)</B>. NDIS drivers that export a set of NDIS
lower-edge (Protocol<I>Xxx</I>) functions also can call <B>NdisAllocateMemory</B>
whenever such a driver needs to allocate buffer space. 
<P>
Only NIC miniports can set the <I>MemoryFlags</I>&nbsp;with either or both of the
NDIS_MEMORY_<I>XXX</I>&nbsp;when they make initialization-time calls to <B>NdisAllocateMemory</B>.
During initialization, miniport drivers allocate these types of memory to be
shared with their NICs. 
<P>
If such a miniport specifies physically contiguous memory in a call to <B>NdisAllocateMemory</B>,
the virtual memory allocation maps to a single physically contiguous region.
If a miniport specifies noncached memory, the allocated virtual range is not
cached. A NIC driver can access noncached memory without flushing cache
buffers during DMA operations.
<P>
Whatever the value of the input <I>MemoryFlags</I>, a successful caller of <B>NdisAllocateMemory</B>
uses a range of virtual addresses to access the allocated memory. Depending on
the size of the allocation and on the type of memory requested, one or more
physical memory ranges (pages) back this single virtual range. 
<P>
While the NDIS_MEMORY_<I>XXX</I>&nbsp;can be ORed in <I>MemoryFlags</I>&nbsp;to request
a contiguous and noncached allocation by a NIC driver, both contiguous and
noncached memory are very limited system resources. A NIC driver should never
request more contiguous memory and/or more noncached memory than it needs.
Attempts to allocate either of these types of memory except during driver
initialization are a programming error. Such an attempt is unlikely to be
successful because system-space memory becomes fragmented due to allocations
by other kernel-mode components, including other drivers, and due to runtime
paging. 
<P>
If such an initialization-time call fails, a NIC driver can attempt to
allocate one or more smaller blocks of contiguous and/or noncached memory,
rather than failing to initialize if it cannot allocate a large block.
<P>
Callers of <B>NdisAllocateMemory</B>&nbsp;can run at IRQL &lt;= DISPATCH_LEVEL to
allocate memory from nonpaged pool. NIC drivers that allocate contiguous
and/or noncached memory must be running at IRQL PASSIVE_LEVEL during
initialization.
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_39.htm">NdisFreeMemory</A></B>,
<B><A HREF="103ndisx_86.htm">NdisMAllocateSharedMemory</A></B>, <B><A HREF="103ndisx_129.htm">NdisMSetAttributes</A></B>,
<B><A HREF="103ndisx_130.htm">NdisMSetAttributesEx</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
