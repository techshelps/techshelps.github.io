<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMAllocateSharedMemoryAsync</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMAllocateSharedMemoryAsync_NR"></A>NdisMAllocateSharedMemoryAsync</H2>
<P>
<B>NDIS_STATUS</B><BR>
&nbsp; &nbsp; <B>NdisMAllocateSharedMemoryAsync(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Length</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>Cached</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Context</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMAllocateSharedMemoryAsync</B>&nbsp;allocates additional memory shared
between a miniport and its busmaster DMA NIC, usually when the miniport is
running low on available NIC receive buffers. 
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle originally input to MiniportInitialize.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the number of bytes to allocate. 
<BR>
<DT>
<I>Cached</I>
<DD>
Specifies TRUE if the memory can be cached. 
<BR>
<DT>
<I>Context</I>
<DD>
Points to driver-detemined context to be passed to the
MiniportAllocateComplete function when it is called. 
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMAllocateSharedMemoryAsync</B>&nbsp;can return one of the following:
<DL>
<DT>
NDIS_STATUS_PENDING
<DD>
The caller’s MiniportAllocateComplete function will be called with mapped
virtual and device-accessible logical base addresses for the shared memory
range, its <I>Length</I>&nbsp;and the <I>Context</I>&nbsp;pointer when the requested
memory is allocated. Otherwise, MiniportAllocateComplete will be called with
NULL pointers if the attempt to allocate shared memory fails. 
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
The requested memory could not be allocated at this time. If <B>NdisMAllocateSharedMemoryAsync</B>
returns this status, a subsequent call with the same parameters might succeed,
depending on whether system resources have become available. 
</DL>
<H3>Comments</H3>
<P>
Drivers of busmaster DMA NICs call <B>NdisMAllocateSharedMemoryAsync</B>&nbsp;to
dynamically allocate shared memory for transfer operations when high network
traffic places excessive demands on the shared memory space that the driver
allocated during initialization. 
<P>
Such a NIC driver usually maintains one or more state variables to track the
number of shared memory buffers available for incoming transfers. When the
number of available buffers reaches a driver-determined low, the miniport
calls <B>NdisMAllocateSharedMemoryAsync</B>&nbsp;to allocate more buffer space in
shared memory. When the number of available buffers climbs to a
driver-determined high, it calls <B>NdisMFreeSharedMemory</B>&nbsp;one or more
times to release its preceding dynamic allocation(s). 
<P>
Usually, such a driver retains the block of shared memory that its
MiniportInitialize function allocated with <B>NdisMAllocateSharedMemory</B>
until the NIC is removed, when its MiniportHalt function is called. This
allocation is sufficient to handle an average demand for transfers through the
NIC. 
<P>
Any miniport that calls <B>NdisMAllocateSharedMemoryAsync</B>&nbsp;or <B>NdisMAllocateSharedMemory</B>
must release all outstanding allocations with one or more calls to <B>NdisMFreeSharedMemory</B>
when its NIC is removed. 
<P>
Callers of <B>NdisMAllocateSharedMemoryAsync</B>&nbsp;run at IRQL &lt;=
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_2.htm">MiniportAllocateComplete</A></B>, <B><A HREF="101mini_6.htm">MiniportHalt</A></B>,
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_8.htm">NdisAllocateBuffer</A></B>,
<B><A HREF="103ndisx_86.htm">NdisMAllocateSharedMemory</A></B>, <B><A HREF="103ndisx_106.htm">NdisMFreeSharedMemory</A></B>
<P></FONT>
</BODY>
</HTML>
