<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMIndicateReceivePacket</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMIndicateReceivePacket_NR"></A>NdisMIndicateReceivePacket</H2>
<P>
<B>VOID</B><BR>
&nbsp; &nbsp; <B>NdisMIndicateReceivePacket(<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PPNDIS_PACKET</B>&nbsp; <I>ReceivePackets</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>NumberOfPackets</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
<B>NdisMIndicateReceivePacket</B>&nbsp;notifies NDIS that an array of received
packets is available to be forwarded to the appropriate bound protocol
driver(s). 
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle originally input to MiniportInitialize. 
<BR>
<DT>
<I>ReceivePackets</I>
<DD>
Points to an array of packet descriptor pointers, with each descriptor set up
by the caller to specify the received data. 
<BR>
<DT>
<I>NumberOfPackets</I>
<DD>
Specifies how many pointers are in the array at <I>ReceivePackets</I>. The
value must be at least one. 
</DL>
<H3>Comments</H3>
<P>
Drivers of busmaster DMA NICs are most likely to show significant gains in
performance by making multipacket receive indications with <B>NdisMIndicateReceivePacket</B>.
However, drivers that indicate out-of-band data with receive packets, such as
packet priority and/or timestamps, also can call this function with a single
packet at a time. 
<P>
When a miniport calls <B>NdisMIndicateReceivePacket</B>, NDIS passes each
pointer at <I>ReceivePackets</I>&nbsp;separately, in the miniport-determined order,
to the ProtocolReceivePacket function(s) of bound protocol(s) that export this
function. To other bound protocols, NDIS passes each packet pointer to the
ProtocolReceive function(s).
<P>
If the miniport did not designate its NIC’s medium as a type for which the
system supplies a filter package in response to the OID_GEN_MEDIA_IN_USE
query, NDIS forwards that driver’s receive indications to all bound protocol
drivers that export a ProtocolReceivePackets function. Otherwise, NDIS
automatically applies the appropriate filter library to the miniport’s receive
indications.  
<P>
Any caller of <B>NdisMIndicateReceivePacket</B>&nbsp;must first set up the packet
array, as follows: 
<UL>
<LI>
Each element is the pointer to a packet descriptor, which the caller must
allocate from packet pool. Each packet descriptor can have at most 16 bytes in
its <B>ProtocolReserved</B>&nbsp;section. 
<P>
<LI>
All buffer descriptors chained to such a packet descriptor must be allocated
from buffer pool. The miniport must call <B>NdisAdjustBufferLength</B>&nbsp;with
any buffer descriptor mapping a receive buffer on the NIC that contains less
received data than the full range of the receive buffer so that the buffer
descriptor will map only the received data for the indication. (The NIC driver
must readjust the mapping with <B>NdisAdjustBufferLength</B>&nbsp;when it regains
ownership of such a buffer descriptor, as well.) 
<P>
<LI>
If the miniport indicates timestamps for received packets, it must set the <B>TimeReceived</B>
and/or <B>TimeSent</B>&nbsp;members in the NDIS_PACKET_OOB_DATA associated with the
packet descriptor using the NDIS_SET_PACKET_TIME_RECEIVED and/or
NDIS_SET_PACKET_TIME_SENT macros. It can call <B>NdisGetCurrentSystemTime</B>
once to set the receive timestamp for all packets of a particular packet
array. 
<P>
<LI>
The <B>HeaderSize</B>&nbsp;in the out-of-band data block must match the header size
of each received packet for the medium. For example, a driver that selects
Ethernet as its preferred medium at initialization would initialize the
NDIS_PACKET_OOB_DATA block <B>HeaderSize</B>&nbsp;to 14 when it allocated the
packet descriptor. 
<P>
<LI>
If the driver indicates additional out-of-band information with receives, it
must set the <B>SizeMediaSpecificInfo</B>&nbsp;to the number of bytes of
information supplied in the caller-allocated buffer at <B>MediaSpecificInformation</B>.
The miniport can use the NDIS_SET_PACKET_MEDIA_SPECIFIC_INFO macro to set
these values. Otherwise, <B>SizeMediaSpecificInfo</B>&nbsp;should be zero, and <B>MediaSpecificInformation</B>
should be NULL. 
<P>
<LI>
The miniport can set the <B>Status</B>&nbsp;member of the out-of-band data block to
NDIS_STATUS_RESOURCES if it needs to retain ownership of the packet descriptor
and buffer descriptors of some element(s) in a particular indication. Setting
this status for a packet implicitly sets the same status for all subsequent
packets of the indicated array. 
<P>
Setting NDIS_STATUS_RESOURCES forces NDIS to indicate each such packet, one at
a time, to bound protocols’ ProtocolReceive functions, thereby forcing each
protocol to copy the packet data and release each packet to be returned back
to the miniport. Otherwise, the call to <B>NdisMIndicateReceivePacket</B>
gives interested protocols exclusive, read-only access to the buffers chained
to each packet until either of the following occurs:
<P>
<UL>
<LI>
The <B>Status</B>&nbsp;in the out-of-band data block is set to NDIS_STATUS_SUCCESS
on return from <B>NdisMIndicateReceivePacket</B>. In this case, the miniport
regains ownership of the packet descriptor and all buffers chained to the
packet. It can prepare these descriptors immediately for reuse in subsequent
receive indications.
<P>
<LI>
The <B>Status</B>&nbsp;is set to NDIS_STATUS_PENDING on return from <B>NdisMIndicateReceivePacket</B>.
In this case, the driver’s MiniportReturnPacket function will be called when
the miniport regains ownership of the packet and buffer descriptors. It can
then prepare these descriptors for reuse in subsequent receive indications. 
</UL>
</UL>
<P>
The miniport should use NDIS_GET_PACKET_STATUS to determine whether it has
regained ownership of indicated packets when <B>NdisMIndicateReceivePackets</B>
returns control.
<P>
When the miniport regains ownership of an indicated packet descriptor, it can
prepare the associated out-of-band data block for reuse by passing the pointer
returned by NDIS_OOB_DATA_FROM_PACKET to <B>NdisZeroMemory</B>. As an
alternative, the miniport can simply reset the relevant member(s) at the
subsequent receive with the NDIS_SET_PACKET_<I>XXX</I>&nbsp;macro(s) or with the
pointer returned by NDIS_OOB_DATA_FROM_PACKET.
<P>
A miniport must <I>not</I>&nbsp;pass a packet descriptor pointer to <B>NdisZeroMemory</B>.
Doing this destroys the packet descriptor, rendering it unusable for
subsequent indications. To clear the associated out-of-band data block, the
driver must pass the pointer returned by NDIS_OOB_DATA_FROM_PACKET.
<P>
Packet arrays passed to <B>NdisMIndicateReceivePacket</B>&nbsp;can be allocated on
the stack, which cannot be paged out in the NDIS library’s receive-indication
code path. 
<P>
When NDIS calls the ProtocolReceive function of a driver that exports a
ProtocolReceivePacket function, ProtocolReceive can call <B>NdisQueryReceiveInformation</B>
to retrieve the out-of-band information associated with an incoming packet
that was indicated as part of a packet array. 
<P>
Any miniport that calls <B>NdisMIndicateReceivePacket</B>&nbsp;must indicate full
packets. Consequently, such a driver has no MiniportTransferData function. 
<P>
Callers of <B>NdisMIndicateReceivePacket</B>&nbsp;can run at IRQL &lt;=
DISPATCH_LEVEL, but usually callers are running at DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_7.htm">MiniportHandleInterrupt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,
<B><A HREF="101mini_10.htm">MiniportQueryInformation</A></B>, <B><A HREF="101mini_13.htm">MiniportReturnPacket</A></B>,
<B><A HREF="101mini_19.htm">MiniportTimer</A></B>, <B><A HREF="103ndisx_7.htm">NdisAdjustBufferLength</A></B>,
<B><A HREF="103ndisx_8.htm">NdisAllocateBuffer</A></B>, <B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>,
<B><A HREF="103ndisx_17.htm">NdisChainBufferAtBack</A></B>, <B><A HREF="103ndisx_18.htm">NdisChainBufferAtFront</A></B>,
<B><A HREF="103ndisx_47.htm">NdisGetCurrentSystemTime</A></B>, <B><A HREF="103ndisx_53.htm">NDIS_GET_PACKET_STATUS</A></B>,
<B><A HREF="103ndisx_87.htm">NdisMAllocateSharedMemoryAsync</A></B>,
<B><A HREF="103ndisx_147.htm">NDIS_OOB_DATA_FROM_PACKET</A></B>, <B><A HREF="103ndisx_161.htm">NdisQueryReceiveInformation</A></B>,
<B><A HREF="106nstru_4.htm">NDIS_PACKET</A></B>, <B><A HREF="106nstru_5.htm">NDIS_PACKET_OOB_DATA</A></B>,
<B><A HREF="103ndisx_200.htm">NDIS_SET_PACKET_TIME_RECEIVED</A></B>,
<B><A HREF="103ndisx_201.htm">NDIS_SET_PACKET_TIME_SENT</A></B>, <B><A HREF="103ndisx_223.htm">NdisZeroMemory</A></B>,
<B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>, <B><A HREF="104tdlow_7.htm">ProtocolReceivePacket</A></B>
<P></FONT>
</BODY>
</HTML>
