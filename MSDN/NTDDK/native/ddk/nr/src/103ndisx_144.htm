<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMWanIndicateReceiveComplete</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMWanIndicateReceiveComplete_NR"></A>NdisMWanIndicateReceiveComplete</H2>
<P>
<B>VOID</B><BR>
&nbsp; &nbsp; <B>NdisMWanIndicateReceiveComplete(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>MiniportAdapterHandle</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMWanIndicateReceiveComplete</B>&nbsp;notifies NDISWAN that one or more
receives have been completed so that NDISWAN can notify the appropriate bound
protocol(s).
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle originally input to MiniportInitialize.
</DL>
<H3>Comments</H3>
<P>
After any WAN receive indication, a miniport must eventually call <B>NdisMWanIndicateReceiveComplete</B>.
<P>
<B>NdisMWanIndicateReceiveComplete</B>&nbsp;both indicates the completion of a
transfer operation for a receive and notifies any bound protocol that has
already consumed the initial indication that it can begin postprocessing the
received data.
<P>
When a miniport calls <B>NdisMWanIndicateReceiveComplete</B>, NDISWAN calls
the ProtocolReceiveComplete function(s) of bound protocol driver(s).
ProtocolReceiveComplete functions need not operate under the severe time
constraints of the corresponding ProtocolReceive functions.
<P>
A WAN miniport need not call <B>NdisMWanIndicateReceiveComplete</B>&nbsp;in
one-to-one correspondence with its calls to <B>NdisMWanIndicateReceive</B>.
That is, a NIC driver can issue a single receive-complete indication for some
number of receive indications, particularly when a sequence of receives is
coming in to its NIC. Such a driver can call <B>NdisMWanIndicateReceiveComplete</B>
after several calls to <B>NdisMWanIndicateReceive</B>&nbsp;have occurred, thereby
giving bound protocols the opportunity to notify clients of received packets
without incurring the overhead of processing one-to-one completion
notifications. As a general rule, a miniport should call <B>NdisMWanIndicateReceiveComplete</B>
once for every ten receive indications when network traffic is high. 
<P>
On the other hand, a miniport might call <B>NdisMWanIndicateReceiveComplete</B>
once for each indication when network traffic is low so that the driver can
regain ownership of the memory it allocated for receives promptly. 
<P>
A ProtocolReceive function is re-entrant, and ProtocolReceiveComplete can run
concurrently with ProtocolReceive, particularly in SMP machines.
<P>
Callers of <B>NdisMWanIndicateReceiveComplete</B>&nbsp;run at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_143.htm">NdisMWanIndicateReceive</A></B>,
<B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>, <B><A HREF="104tdlow_6.htm">ProtocolReceiveComplete</A></B>
<P></FONT>
</BODY>
</HTML>
