<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClientEventConnect</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ClientEventConnect_NR"></A>ClientEventConnect</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ClientEventConnect (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>TdiEventContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN LONG</B>&nbsp; <I>RemoteAddressLength</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>RemoteAddress</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN LONG</B>&nbsp; <I>UserDataLength</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>UserData</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN LONG</B>&nbsp; <I>OptionsLength</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Options</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT CONNECTION_CONTEXT</B>&nbsp; <B>*</B><I>ConnectionContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PIRP</B>&nbsp; <B>*</B><I>AcceptIrp<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ClientEventConnect is an event handler the TDI driver calls in response to an
incoming endpoint-to-endpoint connection offer from a remote node. 
<H3>Parameters</H3>
<DL>
<DT>
<I>TdiEventContext</I>
<DD>
Points to the client-supplied context provided in the IRP that was set up with
<B>TdiBuildSetEventHandler</B>&nbsp;when ClientEventConnect was registered with the
underlying transport.
<BR>
<DT>
<I>RemoteAddressLength</I>
<DD>
Specifies the size in bytes of the buffer at <I>RemoteAddress</I>.
<BR>
<DT>
<I>RemoteAddress</I>
<DD>
Points to a buffer containing the transport address of the remote-node client
that offered this connection.
<BR>
<DT>
<I>UserDataLength</I>
<DD>
Specifies the size in bytes of the buffer at <I>UserData</I>. Zero indicates
either that no data is available or that the underlying transport(s) do not
support sending data with an offered connection. <I>UserData </I>is NULL if
this parameter is zero. 
<BR>
<DT>
<I>UserData</I>
<DD>
Points to a buffer containing connect data provided by the remote-node client
with its connection offer. This parameter is NULL if <I>UserDataLength</I>&nbsp;is
zero. 
<BR>
<DT>
<I>OptionsLength</I>
<DD>
Specifies the size in bytes of the buffer at <I>Options</I>. Zero implies no
option string. <I>Options</I>&nbsp;is NULL if this parameter is zero.
<BR>
<DT>
<I>Options</I>
<DD>
Points to a buffer containing options for the connection in a
transport-specific format. This parameter is NULL if <I>OptionsLength</I>&nbsp;is
zero. 
<BR>
<DT>
<I>ConnectionContext</I>
<DD>
Points to a caller<FONT FACE="Symbol">&#45;</FONT>supplied variable in which
ClientEventConnect returns a pointer to the client&#39;s context area in which
it maintains client-determined state for this connection endpoint. Usually,
the specified address is identical to the value that the client set for the
value at <I>EaBuffer</I>&nbsp;when it originally called <B>ZwCreateFile</B>&nbsp;to open
the local connection endpoint. If ClientEventConnect rejects the offered
connection, the value it returns is NULL. 
<BR>
<DT>
<I>AcceptIrp</I>
<DD>
Points to a caller-supplied variable in which ClientEventConnect returns a
pointer to an IRP, set up by ClientEventConnect with <B>TdiBuildAccept</B>.
The transport completes this IRP if it is supplied as it does any normal
accept request. If ClientEventConnect rejects the connection offer, this
parameter is NULL. 
</DL>
<H3>Return Value</H3>
<P>
ClientEventConnect can return one of the the following:
<DL>
<DT>
STATUS_MORE_PROCESSING_REQUIRED
<DD>
ClientEventConnect is accepting the offered connection and has supplied an
accept request at <I>AcceptIrp</I>. 
<P>
Some transports assume the connection offer is being rejected if
ClientEventConnect returns anything other than this value. 
<BR>
<DT>
STATUS_CONNECTION_REFUSED
<DD>
ClientEventConnect is rejecting the offered connection.
<BR>
<DT>
STATUS_INSUFFICIENT_RESOURCES
<DD>
ClientEventConnect could not allocate sufficient resources to accept the
offered connection. The transport will send a rejection to the remote node. 
</DL>
<H3>Comments</H3>
<P>
This call notifies the local-node client of an incoming connection offer from
a remote-node peer process. The local-node ClientEventConnect handler inspects
the transport-supplied address information identifying the remote-node client
and any data at <I>UserData</I>&nbsp;and/or <I>Options</I>&nbsp;to determine whether to
accept this connection offer.
<P>
To accept an offered endpoint-to-endpoint connection, ClientEventConnect must
set up the buffer at <I>ConnectionContext</I>, together with a TDI_ACCEPT
request, and, then, return STATUS_MORE_PROCESSING_REQUIRED. The local-node
transport notifies the remote node of the acceptance, transmitting any connect
data that its client supplied in the accept IRP, and completes the TDI_ACCEPT
request normally. 
<P>
A client should preallocate the IRP it will use to accept a connection offer
before its ClientEventConnect handler is called. In general, any client should
preallocate a few IRPs for the TDI_<I>XXX</I>&nbsp;IOCTL requests it might
subsequently submit to the underlying transport while running at IRQL
DISPATCH_LEVEL. Client calls to <B>TdiBuildInternalDeviceControlIrp</B>&nbsp;can
occur at IRQL PASSIVE_LEVEL. 
<P>
When ClientEventConnect returns control with STATUS_MORE_PROCESSING_REQUIRED,
the underlying transport can indicate incoming receives on the
endpoint-to-endpoint connection to the client&#39;s registered
ClientEvent(Chained)Receive(Expedited) handler(s), even before the transport
completes the given accept IRP back to its local-node client. A client must be
prepared to accept received data as soon as it agrees to accept an
endpoint-to-endpoint connection offer from a remote-node peer. 
<P>
To reject an offered endpoint-to-endpoint connection, ClientEventConnect can
simply return STATUS_CONNECTION_REFUSED. For this return status, the
local-node transport notifies the remote-node transport that the connection
offer has been rejected. 
<P>
If the client either does not have or cannot allocate sufficient resources to
accept the connection offer, ClientEventConnect returns
STATUS_INSUFFICIENT_RESOURCES. For this return status, the TDI transport
either sends a rejection of the remote-node client&#39;s connection offer to
the corresponding transport on the remote node or simply drops the connection
offer.
<P>
By default, ClientEventConnect runs at IRQL DISPATCH_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="25tdicli_2.htm">ClientEventChainedReceive</A></B>, <B><A HREF="25tdicli_4.htm">ClientEventChainedReceiveExpedited</A></B>,
<B><A HREF="25tdicli_7.htm">ClientEventReceive</A></B>, <B><A HREF="25tdicli_9.htm">ClientEventReceiveExpedited</A></B>,
<B><A HREF="22ioctl_1.htm">TDI_ACCEPT</A></B>, <B><A HREF="24bldmac_1.htm">TdiBuildAccept</A></B>,
<B><A HREF="24bldmac_7.htm">TdiBuildInternalDeviceControlIrp</A></B>,
<B><A HREF="24bldmac_8.htm">TdiBuildListen</A></B>, <B><A HREF="24bldmac_16.htm">TdiBuildSetEventHandler</A></B>,
<B><A HREF="21tddisp_3.htm">TdiDispatchCreate</A></B>, <B><A HREF="26tdstrc_1.htm">TA_ADDRESS</A></B>
<P></FONT>
</BODY>
</HTML>
