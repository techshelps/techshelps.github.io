<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ClientEventError</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ClientEventError_NR"></A>ClientEventError</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ClientEventError (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>TdiEventContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NTSTATUS</B>&nbsp; <I>Status<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ClientEventError is an event handler that the underlying TDI transport calls
in response to an error, either in the transport itself or in a still lower
network driver, that makes I/O on a particular local transport address
unreliable or impossible. 
<H3>Parameters</H3>
<DL>
<DT>
<I>TdiEventContext</I>
<DD>
Points to the client-supplied context provided in the IRP that was set up with
<B>TdiBuildSetEventHandler</B>&nbsp;when ClientEventError was registered with the
underlying transport.
<BR>
<DT>
<I>Status</I>
<DD>
Specifies an NTSTATUS value that provides information about the condition that
caused this call to ClientEventError.
</DL>
<H3>Return Value</H3>
<P>
ClientEventError can return STATUS_SUCCESS.
<H3>Comments</H3>
<P>
A call to ClientEventError notifies the local-node client of an error
condition in the underlying TDI transport, in one of the lower protocol layers
of the transport stack, or in the underlying NDIS NIC driver to which the
transport stack is bound. If such an error occurs, the TDI transport calls all
currently registered ClientEventError handlers for each client on every open
address that depends on the underlying driver that encountered the error
condition.
<P>
In general, a call to ClientEventError indicates a catastrophic failure. After
this call, the client should cease to use, and in some cases close, the file
object representing the transport address associated with this notification.
If this address is associated with an endpoint-to-endpoint connection,
ClientEventError can assume the connection is broken as well. 
<P>
Consequently, a ClientEventError handler usually cleans up any state it was
maintaining for the address and for all connection endpoints it has associated
with that address. That is, the client notifies higher level components for
which it is handling pending operations on the address of the failure. Then,
the client releases all resources it previously allocated that are relevant to
those operations. 
<P>
ClientEventError can be called at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="24bldmac_16.htm">TdiBuildSetEventHandler</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
