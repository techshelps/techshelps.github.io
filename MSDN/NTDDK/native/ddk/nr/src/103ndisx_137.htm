<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMSynchronizeWithInterrupt</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMSynchronizeWithInterrupt_NR"></A>NdisMSynchronizeWithInterrupt</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; NdisMSynchronizeWithInterrupt(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PNDIS_MINIPORT_INTERRUPT</B>&nbsp;<I>Interrupt</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp;<I>SynchronizeFunction</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp;<I>SynchronizeContext<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMSynchronizeWithInterrupt</B>&nbsp;synchronizes execution of a
miniport-supplied function with the MiniportISR or MiniportDisableInterrupt
function. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Interrupt</I>
<DD>
Points to the caller-supplied storage for the interrupt object initialized
with <B>NdisMRegisterInterrupt</B>.
<BR>
<DT>
<I>SynchronizeFunction</I>
<DD>
Specifies the entry point of the driver’s MiniportSynchronizeISR function. 
<BR>
<DT>
<I>SynchronizeContext</I>
<DD>
Points to miniport-determined context area to be passed to the
MiniportSynchronizeISR function when it is called. 
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMSynchronizeWithInterrupt</B>&nbsp;returns the Boolean value returned by
MiniportSynchronizeISR.
<H3>Comments</H3>
<P>
The value returned by MiniportSynchronizeISR is also returned by <B>NdisMSynchronizeWithInterrupt</B>.
This propagated value can be used to provide a status to the caller.
<P>
Any miniport function that shares resources with any other driver function
that runs at DIRQL must use <B>NdisMSynchronizeWithInterrupt</B>&nbsp;to
synchronize its access to those resources. The MiniportSynchronizeISR function
also runs at DIRQL, and the shared resources are protected by a
system-allocated spin lock on multiprocessor platforms. Thus, the shared
resources are protected from simultaneous access by the MiniportISR or
MiniportDisableInterrupt function and the caller whenever the driver is
running on a multiprocessor machine. 
<P>
<B>NdisMSynchronizeWithInterrupt</B>&nbsp;releases the system spin lock and
restores the orginal IRQL of its caller before it returns control.  
<P>
Callers of <B>NdisMSynchronizeWithInterrupt</B>&nbsp;run at IRQL &lt;= DIRQL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_4.htm">MiniportDisableInterrupt</A></B>,<B>&nbsp;<A HREF="101mini_9.htm">MiniportISR</A></B>,<B><A HREF="101mini_18.htm">
MiniportSynchronizeISR</A></B>, <B><A HREF="103ndisx_98.htm">NdisMDeregisterInterrupt</A></B>,<B>
<A HREF="103ndisx_123.htm">NdisMRegisterInterrupt</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
