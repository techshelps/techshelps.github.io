<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisAllocateBufferPool</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisAllocateBufferPool_NR"></A>NdisAllocateBufferPool</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisAllocateBufferPool(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_STATUS</B>&nbsp; <I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PNDIS_HANDLE</B>&nbsp; <I>PoolHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>NumberOfDescriptors</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisAllocateBufferPool</B>&nbsp;returns a handle with which the caller can
allocate buffer descriptors by calling <B>NdisAllocateBuffer</B>. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the final
status of the buffer pool allocation, which is always NDIS_STATUS_SUCCESS.
<BR>
<DT>
<I>PoolHandle</I>
<DD>
Points to a caller-supplied variable in which this function returns a handle
to the buffer pool. This handle is a required parameter to the <B>Ndis..Buffer</B>
functions that the driver calls subsequently. 
<BR>
<DT>
<I>NumberOfDescriptors</I>
<DD>
Specifies the number of buffer descriptors the caller expects to allocate from
the buffer pool without releasing any allocated buffer descriptors back to the
pool.
</DL>
<H3>Comments</H3>
<P>
After <B>NdisAllocateBufferPool</B>&nbsp;returns, the driver calls <B>NdisAllocateBuffer</B>
one or more times to allocate the buffer descriptors that it requires. A
driver should call <B>NdisAllocateBufferPool</B>&nbsp;during initialization. 
<P>
The <I>NumberOfDescriptors</I>&nbsp;specified by a NIC driver usually depends on
the features of the NIC. For example, the driver of a busmaster DMA NIC with
ring buffers would specify at least a large enough <I>NumberOfDescriptors</I>
to map the full ring.
<P>
The <I>NumberOfDescriptors</I>&nbsp;specified in the call to <B>NdisAllocateBufferPool</B>
is the effective limit on how many times the driver can call <B>NdisAllocateBuffer</B>
before it must call <B>NdisFreeBuffer</B>&nbsp;to return a buffer descriptor to the
free list for the buffer pool. 
<P>
When a driver no longer needs the buffer pool it allocated, it calls <B>NdisFreeBufferPool</B>
to release the buffer pool handle.
<P>
The driver must release any spin lock it is holding before calling <B>NdisAllocateBufferPool</B>.
<P>
All lower-level NDIS drivers must allocate all buffer descriptors that they
chain to packets from buffer pool. Only highest-level protocol drivers can be
given OS-dependent descriptors mapping virtual memory ranges, and, if these
memory descriptors are equivalent to NDIS buffer descriptors, a highest-level
protocol can pass such descriptors as parameters to <B>Ndis</B><I>Xxx</I>
functions. 
<P>
Callers of <B>NdisAllocateBufferPool</B>&nbsp;run at IRQL &lt;= DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_7.htm">NdisAdjustBufferLength</A></B>, <B><A HREF="103ndisx_8.htm">NdisAllocateBuffer</A></B>,
<B><A HREF="103ndisx_17.htm">NdisChainBufferAtBack</A></B>, <B><A HREF="103ndisx_18.htm">NdisChainBufferAtFront</A></B>,
<B><A HREF="103ndisx_24.htm">NdisCopyBuffer</A></B>, <B><A HREF="103ndisx_26.htm">NdisCreateLookaheadBufferFromSharedMemory</A></B>,
<B><A HREF="103ndisx_37.htm">NdisFreeBuffer</A></B>, <B><A HREF="103ndisx_38.htm">NdisFreeBufferPool</A></B>,
<B><A HREF="103ndisx_157.htm">NdisQueryBuffer</A></B>, <B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>
<P></FONT>
</BODY>
</HTML>
