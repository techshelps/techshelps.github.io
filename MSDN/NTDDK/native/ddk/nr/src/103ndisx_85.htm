<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMAllocateMapRegisters</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMAllocateMapRegisters_NR"></A>NdisMAllocateMapRegisters</H2>
<P>
<B>NDIS_STATUS <BR>
&nbsp; &nbsp; NdisMAllocateMapRegisters(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN NDIS_HANDLE</B>&nbsp;<I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>DmaChannel</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp;<I>Dma32BitAddresses</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>PhysicalMapRegistersNeeded</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>MaximumPhysicalMapping<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMAllocateMapRegisters</B>&nbsp;reserves system resources during NIC driver
initialization for subsequent busmaster DMA operations. 
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle input to MiniportInitialize.
<BR>
<DT>
<I>DmaChannel</I>
<DD>
Specifies the bus-relative DMA channel for an ISA busmaster NIC. If the NIC is
on another type of I/O bus, this parameter must be zero.
<BR>
<DT>
<I>Dma32BitAddresses</I>
<DD>
Specifies TRUE if the NIC is capable of using 32-bit addressing for DMA
operations.
<BR>
<DT>
<I>PhysicalMapRegistersNeeded</I>
<DD>
Specifies the maximum number of map registers, each mapping a discrete
physical page or contiguous range within a physical page, that the NIC can use
in a DMA operation. Together with <I>MaximumPhysicalMapping</I>, this
parameter describes the DMA-transfer capabilities of the NIC. 
<BR>
<DT>
<I>MaximumPhysicalMapping</I>
<DD>
Specifies the maximum number of bytes that the NIC can transfer as a single
DMA operation.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMAllocateMapRegisters</B>&nbsp;can return one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The requested number of map registers has been allocated for the NIC and, if <I>DmaChannel</I>
was nonzero, the specified channel has been reserved. 
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
Either the caller specified incompatible parameters when MiniportInitialize
called <B>NdisMSetAttributesEx</B>&nbsp;or the requested number of map registers
could not be allocated due to system resource constraints. 
</DL>
<H3>Comments</H3>
<P>
Drivers of busmaster DMA NICs call <B>NdisMAllocateMapRegisters</B>&nbsp;from their
MiniportInitialize functions. 
<P>
Such a driver’s MiniportInitialize function must call <B>NdisMSetAttributes</B>
or <B>NdisMSetAttributesEx</B>&nbsp;before it calls <B>NdisMAllocateMapRegisters</B>.
It should call <B>NdisQueryMapRegisterCount</B>&nbsp;before calling <B>NdisMAllocateMapRegisters</B>
as well. 
<P>
The given <I>PhysicalMapRegistersNeeded</I>&nbsp;is constrained by one of the
following:
<UL>
<LI>
The number of physical discontiguities backing any specified virtual range for
a DMA transfer that the NIC can handle 
<P>
<LI>
The relative sizes of the NIC’s <I>MaximumPhysicalMapping</I>&nbsp;and the memory
PAGE_SIZE of the current platform
<P>
For a busmaster NIC, <I>MaximumPhysicalMapping</I>&nbsp;is the largest number of
bytes in any virtual range described by an NDIS_BUFFER-type descriptor that
can be passed to <B>NdisMStartBufferPhysicalMapping</B>&nbsp;subsequently. 
<P>
<LI>
The number of available map registers for the NIC’s I/O bus in the current
platform 
</UL>
<P>
Map registers are a limited system resource, so a miniport should <I>never</I>
allocate more map registers than its NIC can use in a DMA transfer operation. <B>NdisQueryMapRegisterCount</B>
returns the maximum number of map registers that can be allocated on the
current platform for the type of I/O bus the NIC uses. MiniportInitialize
should pass the minimum of the following values for <I>PhysicalMapRegistersNeeded</I>
to <B>NdisMAllocateMapRegisters</B>:
<UL>
<LI>
The result of (<I>MaximumBytesPerTransferOfNIC</I>&nbsp;/ PAGE_SIZE + 1)
<P>
<LI>
The number of physical discontiguites per virtual transfer range that the NIC
can handle in any DMA transfer operation
<P>
<LI>
The value returned by <B>NdisQueryMapRegisterCount</B>&nbsp;
</UL>
<P>
The map registers allocated with <B>NdisMAllocateMapRegisters</B>&nbsp;are
implicitly numbered from zero through (<I>PhysicalMapRegistersNeeded</I>&nbsp;
<FONT FACE="Symbol">&#45;</FONT>  1). When calling <B>NdisMStartBufferPhysicalMapping</B>,
the driver of a busmaster NIC specifies which map register to use in each call
by specifying that map register’s zero-based index.
<P>
The driver of a busmaster DMA NIC must call <B>NdisMAllocateMapRegisters</B>
before it calls <B>NdisMAllocateSharedMemory</B>. 
<P>
Drivers of NICs that use PIO or the host DMA controller as slave devices do
not call <B>NdisMAllocateMapRegisters</B>&nbsp;during initialization.
<P>
Callers of <B>NdisMAllocateMapRegisters</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,<B>&nbsp;<A HREF="103ndisx_86.htm">NdisMAllocateSharedMemory</A></B>,<B>
<A HREF="103ndisx_105.htm">NdisMFreeMapRegisters</A></B>, <B><A HREF="103ndisx_122.htm">NdisMRegisterDmaChannel</A></B>,
<B><A HREF="103ndisx_129.htm">NdisMSetAttributes</A></B>, <B><A HREF="103ndisx_130.htm">NdisMSetAttributesEx</A></B>,
<B><A HREF="103ndisx_136.htm">NdisMStartBufferPhysicalMapping</A></B>,
<B><A HREF="103ndisx_159.htm">NdisQueryMapRegisterCount</A>&nbsp;</B>
<P></FONT>
</BODY>
</HTML>
