<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisDprFreePacketNonInterlocked</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisDprFreePacketNonInterlocked_NR"></A>NdisDprFreePacketNonInterlocked</H2>
<P>
<B>VOID</B><BR>
&nbsp; &nbsp; <B>NdisDprFreePacketNonInterlocked(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_PACKET</B>&nbsp; <I>Packet</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisDprFreePacketNonInterlocked</B>&nbsp;releases a driver-allocated packet
descriptor and returns it to the free list when the caller is running at IRQL
DISPATCH_LEVEL and that caller provides internal synchronization for accessing
packet pool.
<H3>Parameters</H3>
<DL>
<DT>
<I>Packet</I>
<DD>
Points to a packet descriptor returned by <B>NdisDprAllocatePacketNonInterlocked</B>.
</DL>
<H3>Comments</H3>
<P>
Before calling <B>NdisDprFreePacketNonInterlocked</B>, the driver either must
call <B>NdisFreeBuffer</B>&nbsp;as many times as necessary to release all buffer
descriptors chained to the packet, or it must call an <B>NdisUnchainBufferAt</B><I>Xxx</I>
function as many times as necessary to save all pointers to buffer
descriptors. Otherwise, memory associated with buffer descriptors in the chain
remains unusable by the driver 
<P>
A caller of <B>NdisDprFreePacketNonInterlocked</B>&nbsp;and its reciprocal <B>NdisDprAllocatePacketNonInterlocked</B>
is responsible for synchronizing all accesses to the packet pool that driver
allocated with <B>NdisAllocatePacketPool</B>. Otherwise, the driver should let
NDIS manage this synchronization on its behalf by calling <B>NdisAllocate/FreePacket</B>
or <B>NdisDprAllocate/FreePacket</B>. 
<P>
Usually, such a driver protects its packet pool with a driver-allocated spin
lock. Before calling <B>NdisDprFreePacketNonInterlocked</B>, the driver calls <B>NdisAcquireSpinLock</B>,
which raises IRQL to DISPATCH_LEVEL. Only when the driver resumes execution
holding its spin lock does it call <B>NdisDprFreePacketNonInterlocked</B>.
Such a driver releases its spin lock with <B>NdisReleaseSpinLock</B>&nbsp;when <B>NdisDprFreePacketNonInterlocked</B>
returns control. 
<P>
Callers of <B>NdisDprFreePacketNonInterlocked</B>&nbsp;must be running at IRQL
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_6.htm">NdisAcquireSpinLock</A></B>, <B><A HREF="103ndisx_12.htm">NdisAllocatePacketPool</A></B>,
<B><A HREF="103ndisx_31.htm">NdisDprAllocatePacketNonInterlocked</A></B>,
<B><A HREF="103ndisx_32.htm">NdisDprFreePacket</A></B>, <B><A HREF="103ndisx_37.htm">NdisFreeBuffer</A></B>,
<B><A HREF="103ndisx_40.htm">NdisFreePacket</A></B>, <B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>,
<B><A HREF="103ndisx_211.htm">NdisUnchainBufferAtBack</A></B>, <B><A HREF="103ndisx_212.htm">NdisUnchainBufferAtFront</A></B>
<P></FONT>
</BODY>
</HTML>
