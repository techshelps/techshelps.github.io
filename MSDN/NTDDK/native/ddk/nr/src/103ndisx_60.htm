<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisIMInitializeDeviceInstance</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisIMInitializeDeviceInstance_NR"></A>NdisIMInitializeDeviceInstance</H2>
<P>
<B>NDIS_STATUS</B><BR>
&nbsp; &nbsp; <B>NdisIMInitializeDeviceInstance(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>DriverHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_STRING</B>&nbsp; <I>DeviceInstance</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
<B>NdisIMInitializeDeviceInstance</B>&nbsp;calls an NDIS intermediate driver’s
MiniportInitialize function to set up the driver’s virtual NIC for I/O
operations on an underlying NIC driver to which the intermediate driver is
bound.  
<H3>Parameters</H3>
<DL>
<DT>
<I>DriverHandle</I>
<DD>
Specifies the handle returned by <B>NdisIMRegisterLayeredMiniport</B>. 
<BR>
<DT>
<I>DeviceInstance</I>
<DD>
Points to a buffered, caller-initialized counted string, in the system-default
character set, naming the registry key in which the driver stores information
about its virtual NIC and, possibly, binding-specific information. For Windows
NT drivers, this string contains Unicode characters.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisIMInitializeDeviceInstance</B>&nbsp;propagates the status returned by the
MiniportInitialize function. 
<H3>Comments</H3>
<P>
An NDIS intermediate driver usually calls <B>NdisIMInitializeDeviceInstance</B>
from its ProtocolBindAdapter function. 
<P>
The driver’s installation script created the key designated by <I>DeviceInstance</I>
in the <B>HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services</B>&nbsp;registry
tree. 
<P>
Before it calls <B>NdisIMInitializeDeviceInstance</B>, ProtocolBindAdapter
must make a successful call to <B>NdisOpenAdapter</B>, thereby binding the
intermediate driver to the underlying NIC driver. Then, its subsequent call to
<B>NdisIMInitializeDeviceInstance</B>&nbsp;allows the driver’s MiniportInitialize
function to allocate any resources the driver needs to carry out network I/O
operations and to initialize the driver’s virtual NIC, to which higher-level
protocol drivers can bind themselves when the NDIS intermediate driver’s
initialization is complete.  
<P>
Callers of <B>NdisIMInitializeDeviceInstance</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_59.htm">NdisIMDeInitializeDeviceInstance</A></B>,
<B><A HREF="103ndisx_72.htm">NdisIMRegisterLayeredMiniport</A></B>,
<B><A HREF="103ndisx_79.htm">NdisInitializeString</A></B>, <B><A HREF="103ndisx_148.htm">NdisOpenAdapter</A></B>,
<B><A HREF="104tdlow_2.htm">ProtocolBindAdapter</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
