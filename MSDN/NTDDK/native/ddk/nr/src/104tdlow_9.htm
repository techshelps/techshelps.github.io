<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProtocolResetComplete</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ProtocolResetComplete_NR"></A>ProtocolResetComplete</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; ProtocolResetComplete(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>ProtocolBindingContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_STATUS</B>&nbsp; <I>Status</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ProtocolResetComplete is a required driver function that completes a
protocol-initiated reset operation for which <B>NdisReset</B>&nbsp;returned
NDIS_STATUS_PENDING. 
<H3>Parameters</H3>
<DL>
<DT>
<I>ProtocolBindingContext</I>
<DD>
Specifies the handle to a protocol-allocated context area in which the
protocol driver maintains per-binding runtime state. The driver supplied this
handle when it called <B>NdisOpenAdapter</B>.  
<BR>
<DT>
<I>Status</I>
<DD>
Specifies the final status of the protocol-initiated reset operation. 
</DL>
<H3>Comments</H3>
<P>
ProtocolResetComplete completes processing for an asynchronous reset of the
underlying driver’s NIC or virtual NIC. 
<P>
The underlying miniport’s call to <B>NdisMResetComplete</B>&nbsp;causes NDIS to
call the ProtocolResetComplete function. NDIS forwards the miniport-determined
<I>Status</I>&nbsp;passed to <B>NdisMResetComplete</B>&nbsp;as the input <I>Status</I>
to ProtocolStatusComplete. 
<P>
ProtocolResetComplete can be called before the protocol has had time to
inspect the status code that <B>NdisReset</B>&nbsp;returns at <I>Status</I>. 
<P>
The ProtocolResetComplete function of an NDIS intermediate driver cannot
simply forward completion indications to still higher-level protocols. Such an
attempt can cause a deadlock. Instead, such a driver must call <B>NdisIMSwitchToMiniport</B>
to forward the indication from the appropriate context. If <B>NdisIMSwitchToMiniport</B>
returns FALSE, the driver must call <B>NdisIMQueueMiniportCallback</B>&nbsp;and
forward the indication from a protocol-supplied MiniportCallback function. 
<P>
By default ProtocolResetComplete runs at IRQL DISPATCH_LEVEL in an arbitrary
thread context. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_12.htm">MiniportReset</A></B>, <B><A HREF="103ndisx_71.htm">NdisIMQueueMiniportCallback</A></B>,
<B><A HREF="103ndisx_74.htm">NdisIMSwitchToMiniport</A></B>, <B><A HREF="103ndisx_126.htm">NdisMResetComplete</A></B>,
<B><A HREF="103ndisx_189.htm">NdisReset</A></B>, <B><A HREF="104tdlow_11.htm">ProtocolStatus</A></B>,
<B><A HREF="104tdlow_12.htm">ProtocolStatusComplete</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
