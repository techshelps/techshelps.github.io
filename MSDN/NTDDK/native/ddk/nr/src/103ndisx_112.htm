<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMMapIoSpace</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMMapIoSpace_NR"></A>NdisMMapIoSpace</H2>
<P>
<B>NDIS_STATUS <BR>
&nbsp; &nbsp; NdisMMapIoSpace(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; OUT PVOID  *</B><I>VirtualAddress</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE  </B><I>MiniportAdapterHandle</I><B>,</B><I><BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_PHYSICAL_ADDRESS </B>&nbsp;<I>PhysicalAddress</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT </B>&nbsp;<I>Length<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMMapIoSpace</B>&nbsp;maps a given bus-relative “physical” range of device
RAM or registers onto a system-space virtual range.
<H3>Parameters</H3>
<DL>
<DT>
<I>Virtual Address</I>
<DD>
Points to a caller-supplied variable that is set to the converted virtual
address if the call is successful.
<BR>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle input to MiniportInitialize.
<BR>
<DT>
<I>PhysicalAddress</I>
<DD>
Specifies the bus-relative base physical address of the device memory range to
be mapped.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the number of bytes to be mapped.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMMapIoSpace</B>&nbsp;can return any of the following status values:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The device memory range was mapped successfully so the value at <I>VirtualAddress</I>
is valid and the mapped range has been claimed in the registry for the NIC. 
<BR>
<DT>
NDIS_STATUS_RESOURCE_CONFLICT
<DD>
An attempt to claim the device memory range in the registry has failed,
possibly because another driver has already claimed the range for its device. <B>NdisMMapIoSpace
</B>logs an error if this occurs.
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
The memory could not be mapped or sufficient virtual memory could not be
allocated.
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
Either the bus type or bus number is out of range or the given <I>PhysicalAddress</I>
and <I>Length</I>&nbsp;were invalid (possibly not within the I/O space of the
current platform). 
</DL>
<H3>Comments</H3>
<P>
This function is called by drivers of NICs that have on-board memory or a bank
of device registers appearing in the I/O space of the host. For example, the
driver of a NIC that uses PIO calls <B>NdisMMapIoSpace</B>. 
<P>
A successful call to <B>NdisMMapIoSpace</B>&nbsp;claims hardware resources in the
registry for the driver’s NIC. Consequently, only MiniportInitialize functions
call <B>NdisMMapIoSpace</B>.
<P>
<B>NdisMMapIoSpace </B>sets the variable at <I>VirtualAddress</I>&nbsp;to NULL if
it does not return NDIS_STATUS_SUCCESS.
<P>
MiniportInitialize either gets the <I>PhysicalAddress</I>&nbsp;value from the
driver’s <B>Parameters</B>&nbsp;registry key or by calling a bus-type-specific <B>Ndis</B><I>Xxx</I>
configuration function. The given physical address range must fall within the
I/O space of the current platform. It is a programming error to call <B>NdisMMapIoSpace</B>
with a host physical memory address.
<P>
A miniport must call the reciprocal <B>NdisMUnmapIoSpace</B>&nbsp;to release its
claim on system resources if MiniportInitialize subsequently fails to
initialize the NIC, if its NIC is removed from the machine, and/or when the
driver is unloading. 
<P>
Callers of <B>NdisMMapIoSpace</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_6.htm">MiniportHalt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,
<B><A HREF="103ndisx_141.htm">NdisMUnmapIoSpace</A></B>, <B><A HREF="103ndisx_149.htm">NdisOpenConfiguration</A></B>,
<B><A HREF="103ndisx_176.htm">NdisReadEisaSlotInformation</A></B>,
<B><A HREF="103ndisx_178.htm">NdisReadMcaPosInformation</A></B>, <B><A HREF="103ndisx_180.htm">NdisReadPciSlotInformation</A></B>,
<B><A HREF="103ndisx_181.htm">NdisReadRegisterUchar</A></B>, <B><A HREF="103ndisx_182.htm">NdisReadRegisterUlong</A></B>,
<B><A HREF="103ndisx_183.htm">NdisReadRegisterUshort</A></B>, <B><A HREF="103ndisx_219.htm">NdisWriteRegisterUchar</A></B>,
<B><A HREF="103ndisx_220.htm">NdisWriteRegisterUlong</A></B>, <B><A HREF="103ndisx_221.htm">NdisWriteRegisterUshort</A></B>
<P></FONT>
</BODY>
</HTML>
