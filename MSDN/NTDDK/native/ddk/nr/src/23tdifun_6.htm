<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TdiMapUserRequest</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TdiMapUserRequest_NR"></A>TdiMapUserRequest</H2>
<P>
<B>NTSTATUS</B><BR>
&nbsp; &nbsp; <B>TdiMapUserRequest(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DeviceObject</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIRP</B>&nbsp; <I>Irp</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIO_STACK_LOCATION</B>&nbsp; <I>IrpSp</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>TdiMapUserRequest</B>&nbsp;converts a given IRP in which <B>MajorFunction</B>&nbsp;is
set to IRP_MJ_DEVICE_CONTROL into an IRP_MJ_INTERNAL_DEVICE_CONTROL request if
it recognizes the IOCTL_TDI_<I>XXX</I>&nbsp;code specified in the input IRP. 
<H3>Parameters</H3>
<DL>
<DT>
<I>DeviceObject</I>
<DD>
Points to the device object created by the transport driver.
<BR>
<DT>
<I>Irp</I>
<DD>
Points to the user IOCTL_<I>XXX</I>&nbsp;request to be converted.
<BR>
<DT>
<I>IrpSp</I>
<DD>
Points to the I/O stack location to be converted. 
<P>
The transport&#39;s TdiDispatchDeviceControl routine already called <B>IoGetCurrentIrpStackLocation</B>
to obtain this pointer. 
</DL>
<H3>Return Value</H3>
<P>
<B>TdiMapUserRequest</B>&nbsp;returns STATUS_SUCCESS if it converted the given
IOCTL_TDI_<I>XXX</I>&nbsp;device-control request into a TDI_<I>XXX</I>&nbsp;internal
device-control request. Otherwise, it can return either of the following:
<DL>
<DT>
STATUS_INVALID_PARAMETER
<DD>
If IOCTL_TDI_SET_EVENT_HANDLER is specified in the given I/O stack location of
the input IRP
<BR>
<DT>
STATUS_NOT_IMPLEMENTED
<DD>
If <B>TdiMapUserRequest</B>&nbsp;does not recognize the IOCTL_<I>XXX</I>&nbsp;code
specified in the given I/O stack location of the input IRP
</DL>
<H3>Comments</H3>
<P>
For the majority of system-defined IOCTL_TDI_<I>XXX</I>&nbsp;codes that can be set
in IRPs passed to a transport&#39;s TdiDispatchDeviceControl routine, <B>TdiMapUserRequest</B>
converts the current I/O stack location into the format of the corresponding
kernel-mode TDI_<I>XXX</I>&nbsp;request. 
<P>
For example, if <I>IrpSp</I><B>-&gt;Parameters.DeviceIoControl.IoControlCode</B>
is set to IOCTL_TDI_LISTEN in the input IRP, <B>TdiMapUserRequest</B>
reformats the I/O stack location as follows:
<UL>
<LI>
Resets <B>MajorFunction</B>&nbsp;to IRP_MJ_INTERNAL_DEVICE_CONTROL
<P>
<LI>
Sets <B>MinorFunction</B>&nbsp;to TDI_LISTEN 
<P>
<LI>
If the input <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;is not NULL, sets <B>IrpSp-&gt;Parameters</B>
to the address of a TDI_REQUEST_KERNEL_LISTEN structure, which it sets up with
the caller-supplied information
</UL>
<P>
TdiDispatchDeviceControl can call TdiDispatchInternalDeviceControl with such a
converted IRP, thereby saving the transport from having duplicate code paths
for processing system-defined IOCTL_TDI_<I>XXX</I>&nbsp;and the corresponding TDI_<I>XXX</I>
requests. 
<P>
While the kernel-mode TDI_REGISTER_EVENT_HANDLER has a corresponding user
IOCTL_TDI_REGISTER_EVENT_HANDLER, <B>TdiMapUserRequest</B>&nbsp;fails any attempt
to map such an input IRP. Only kernel-mode clients can register event handlers
with a TDI transport, so a transport&#39;s TdiDispatchDeviceControl routine
cannot be called with a valid request to set up an event handler. 
<P>
If a transport defines any private IOCTL_<I>XXX</I>&nbsp;codes to be used by a
transport-dedicated Win32 application for communication with the transport,
its TdiDispatchDeviceControl routine can process such a request whenever <B>TdiMapUserRequest</B>
returns STATUS_NOT_SUPPORTED. For more information about defining
driver-specific, private IOCTLs, see the <I>Kernel-Mode Driver Reference</I>. 
<P>
Callers of <B>TdiMapUserRequest</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="21tddisp_4.htm">TdiDispatchDeviceControl</A></B>, <B><A HREF="21tddisp_6.htm">TdiDispatchInternalDeviceControl</A></B>
<P></FONT>
</BODY>
</HTML>
