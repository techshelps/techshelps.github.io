<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NDIS_MAC_LINE_UP</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NDIS_MAC_LINE_UP_NR"></A>NDIS_MAC_LINE_UP</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _NDIS_MAC_LINE_UP {
&nbsp; &nbsp; IN ULONG            LinkSpeed;
&nbsp; &nbsp; IN NDIS_WAN_QUALITY Quality;
&nbsp; &nbsp; IN USHORT           SendWindow;
&nbsp; &nbsp; IN NDIS_HANDLE      ConnectionWrapperID;
&nbsp; &nbsp; IN NDIS_HANDLE      NdisLinkHandle;
&nbsp; &nbsp; IN OUT NDIS_HANDLE  NdisLinkContext;
} NDIS_MAC_LINE_UP, *PNDIS_MAC_LINE_UP;
</FONT></PRE>
<P>
NDIS_MAC_LINE_UP contains information associated with a line-up indication
made by a WAN NIC miniport. 
<H3>Members</H3>
<DL>
<DT>
<B>LinkSpeed</B>
<DD>
Specifies the speed of the link, in units of 100 bps. 
<P>
Zero indicates no change from the speed the miniport originally returned for
the OID_GEN_LINK_SPEED query.
<BR>
<DT>
<B>Quality</B>
<DD>
Specifies the quality of service (QOS) of the new line as returned when the
protocol called <B>NdisRequest</B>&nbsp;with OID_WAN_QUALITY_OF_SERVICE.
<BR>
<DT>
<B>SendWindow</B>
<DD>
Specifies the number of send packets the miniport (or its NIC) can accept at a
time, effectively how many NDIS_WAN_PACKET-type send packets the WAN NIC
driver queues internally. Zero indicates that NDISWAN should use the value
returned for <B>MaxTransmit</B>&nbsp;in response to the OID_WAN_GET_INFO query.
<BR>
<DT>
<B>ConnectionWrapperID</B>
<DD>
Specifies the handle by which this link (or data channel on a link) will be
known to TAPI client(s). This handle must be unique, so the miniport uses the <B>htCall</B>
handle supplied by NDISTAPI. Before the miniport makes the initial line-up
indication that establishes such a link (or data channel), it already acquired
the NDISTAPI-assigned <B>htCall</B>&nbsp;handle in one of the following ways:
<UL>
<LI>
For an outbound call, the driver’s MiniportQueryInformation function saved the
<B>htCall</B>&nbsp;handle that NDISTAPI supplied in a preceding OID_TAPI_MAKE_CALL
request. 
<P>
<LI>
For an incoming call, the miniport saved the <B>htCall</B>&nbsp;handle that
NDISTAPI returned in <B>ulParam2</B>&nbsp;of the NDIS_TAPI_EVENT structure that the
miniport passed to <B>NdisMIndicateStatus</B>&nbsp;with <B>ulMsg</B>&nbsp;set to
LINE_NEWCALL. 
</UL>
<DT>
<B>NdisLinkHandle</B>
<DD>
Specifies the handle, originally supplied by the NIC driver, that is passed
down in subsequent calls, such as to MiniportWanSend, to identify a particular
link, or to identify a particular channel on a link capable of handling more
than one data stream. 
<BR>
<DT>
<B>NdisLinkContext</B>
<DD>
Specifies zero when a WAN NIC driver calls <B>NdisMIndicateStatus</B>&nbsp;with
this structure to establish a link. On return from <B>NdisMIndicateStatus</B>,
this member contains a handle, supplied by NDISWAN, to be used in future
calls, such as to indicate receives, for the established link.
</DL>
<H3>Comments</H3>
<P>
A WAN NIC driver calls <B>NdisMIndicateStatus</B>&nbsp;with this type of indication
in either of the following conditions:
<UL>
<LI>
When a link between a local node and a remote node in a wide area network
becomes active in the process of establishing the new link, the
MiniportQueryInformation function makes this indication in the context of an
OID_TAPI_GET_ID request for which <B>ulSelect</B>&nbsp;is set to
LINECALLSELECT_CALL. 
<P>
When <B>NdisMIndicateStatus</B>&nbsp;returns, the miniport must save the <B>NdisLinkContext</B>
handle, supplied by NDISWAN, for subsequent calls to <B>NdisMIndicateStatus</B>
and <B>NdisWan</B><I>Xxx</I>&nbsp;functions affecting the just established link. 
<P>
MiniportQueryInformation also must use the returned <B>NdisLinkContext</B>
handle as the value returned to NDISTAPI at <B>DeviceID</B>&nbsp;in the
NDIS_TAPI_GET_ID structure. 
<P>
If it can handle more than one data channel on a link, a WAN NIC driver’s
MiniportQueryInformation function is called once with OID_TAPI_GET_ID as each
such channel on the link is opened. On such a link, <B>NdisLinkContext</B>
handles are channel-specific rather than link-specific. 
<P>
<LI>
After such a link is established, the NIC driver makes this indication with
the given <B>NdisLinkContext</B>&nbsp;handle if line characteristics change, or to
dynamically change the value of <B>SendWindow</B>&nbsp;specifying the number of
outstanding sends the NIC driver accepts for its internal queue. For example,
a miniport can make a subsequent line-up indication if the originally
specified <B>Quality</B>&nbsp;of the line changes. 
</UL>
<P>
Typically, a WAN NIC driver provides a pointer to a driver-allocated control
block for each link as <B>NdisLinkHandle</B>. This handle is link-specific or,
if the driver manages more than one data stream per link,
data-channel-specific. In either case, a WAN NIC miniport must set up its <B>NdisLinkHandle</B>
at the first NDIS_MAC_LINE_UP indication that the miniport makes for each link
or data channel. 
<P>
After NDISWAN has submitted the number of packets specified in <B>SendWindow</B>
to MiniportWanSend, NDISWAN holds incoming send packets queued until the
miniport returns a completed send packet or calls <B>NdisMWanSendComplete</B>
with a packet for which it previously returned NDIS_STATUS_PENDING, whichever
occurs first. Subsequent NDIS_MAC_LINE_UPs can be indicated if the NIC driver
needs to change the <B>SendWindow</B>&nbsp;value dynamically. 
<P>
Whenever subsequent NDIS_MAC_LINE_UP indications are made, whether to change
the <B>SendWindow</B>&nbsp;value or for changes in line characteristics, the <B>NdisLinkHandle</B>
member must be filled with the value set in the driver’s initial line-up call
to <B>NdisMIndicateStatus</B>&nbsp;for the same link.
<P>
NDISWAN supplies a unique handle at <B>NdisLinkContext</B>&nbsp;for every initial
NDIS_MAC_LINE_UP indication that establishes a new link or channel. The
miniport must supply the given <B>NdisLinkContext</B>&nbsp;handle when it makes any
subsequent NDIS_MAC_LINE_UP, NDIS_MAC_LINE_DOWN, and NDIS_MAC_FRAGMENT
indications for the same link or channel.
<P>
For more information about WAN and TAPI OIDs, see <A HREF="105ndoid.htm">Chapter
5</A>. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_10.htm">MiniportQueryInformation</A></B>, <B><A HREF="101mini_16.htm">MiniportSetInformation</A></B>,
<B><A HREF="106nstru_1.htm">NDIS_MAC_FRAGMENT</A></B>, <B><A HREF="106nstru_2.htm">NDIS_MAC_LINE_DOWN</A></B>,
<B><A HREF="103ndisx_108.htm">NdisMIndicateStatus</A></B>, <B><A HREF="103ndisx_143.htm">NdisMWanIndicateReceive</A></B>,
<B><A HREF="103ndisx_188.htm">NdisRequest</A></B>, <B><A HREF="106nstru_8.htm">NDIS_TAPI_EVENT</A></B>,
<B><A HREF="104tdlow_11.htm">ProtocolStatus</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
