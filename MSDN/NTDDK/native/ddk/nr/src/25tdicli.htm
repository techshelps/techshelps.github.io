<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 5  TDI Client Event Handlers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_TDI_Client_Event_Handlers_NR"></A>Chapter 5  TDI Client Event Handlers</H1>
<P>
This describes the system-defined ClientEvent<I>Xxx</I>&nbsp;callback routines that
can be implemented in kernel-mode clients of TDI transports. Such a client
registers each such callback by setting up an IRP for the underlying transport
driver with <B><A HREF="24bldmac_16.htm">TdiBuildSetEventHandler</A></B>,
to contain the IOCTL <A HREF="22ioctl_13.htm">TDI_SET_EVENT_HANDLER</A>
code, and calling <B>IoCallDriver</B>&nbsp;with the IRP.
<P>
The names of these client-supplied callback routines in this reference are
metanames, chosen to describe their basic functionality. Because any client
passes only the entry points for these event handlers in calls to <B>TdiBuildSetEventHandler</B>,
their names actually can be anything the writer of each client chooses. 
<P>
The following ClientEvent<I>Xxx</I>&nbsp;routine references are in alphabetic
order. 
<P></FONT>
</BODY>
</HTML>
