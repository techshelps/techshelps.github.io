<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WSHNotify</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_WSHNotify_NR"></A>WSHNotify</H2>
<P>
<B>INT</B><BR>
<B>&nbsp; &nbsp; WSHNotify(</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN PVOID</B>&nbsp; <I>HelperDllSocketContext</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN SOCKET</B>&nbsp; <I>SocketHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN HANDLE</B>&nbsp; <I>TdiAddressObjectHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN HANDLE</B>&nbsp; <I>TdiConnectionObjectHandle</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN DWORD</B>&nbsp; <I>NotifyEvent</I><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
<B>WSHNotify</B>&nbsp;is called by the Windows Sockets DLL when a socket-state
transition occurs for which the helper DLL&#39;s <B>WSHOpenSocket</B>&nbsp;or <B>WSHOpenSocket2
</B>function already requested notifications. 
<H3>Parameters</H3>
<DL>
<DT>
<I>HelperDllSocketContext</I>
<DD>
Points to a per-socket context area, allocated and initialized by the WSH DLL <B>WSHOpenSocket
</B>or <B>WSHOpenSocket2 </B>function.
<BR>
<DT>
<I>SocketHandle</I>
<DD>
Specifies the handle to the socket returned by <B>socket</B>&nbsp;or <B>accept</B>.
<BR>
<DT>
<I>TdiAddressObjectHandle</I>
<DD>
Specifies the handle to a file object representing the open transport address
for the socket. If the socket is not currently bound to an address, this
parameter is NULL.
<BR>
<DT>
<I>TdiConnectionObjectHandle</I>
<DD>
Specifies the handle to a file object representing the connection endpoint
associated with the socket. If the socket is not currently connected, this
parameter is NULL.
<BR>
<DT>
<I>NotifyEvent</I>
<DD>
Specifies the state change that just occurred. Exactly one bit of the
WSH_NOTIFY_<I>XXX</I>&nbsp;values, defined in <I>wsahelp.h, </I>is set in this
parameter at each call to <B>WSHNotify</B>. The WSH_NOTIFY_<I>XXX</I>&nbsp;values
include the following: 
<DL>
<DT>
WSH_NOTIFY_BIND
<DD>
A successful call to <B>bind</B>&nbsp;occurred.
<BR>
<DT>
WSH_NOTIFY_LISTEN
<DD>
A successful call to <B>listen</B>&nbsp;occurred.
<BR>
<DT>
WSH_NOTIFY_ACCEPT
<DD>
A socket handle is being returned from a call to <B>accept</B>.
<BR>
<DT>
WSH_NOTIFY_CONNECT
<DD>
A successful call to <B>connect</B>&nbsp;occurred.
<BR>
<DT>
WSH_NOTIFY_SHUTDOWN_RECEIVE
<DD>
A successful call to <B>shutdown </B>for the receive side of the socket
occurred.
<BR>
<DT>
WSH_NOTIFY_SHUTDOWN_SEND
<DD>
A successful call to <B>shutdown </B>for the send side of the socket occurred.
<BR>
<DT>
WSH_NOTIFY_SHUTDOWN_ALL
<DD>
A successful call to <B>shutdown </B>for both sides of the socket occurred.
<BR>
<DT>
WSH_NOTIFY_CLOSE
<DD>
The socket is being closed.
<BR>
<DT>
WSH_NOTIFY_CONNECT_ERROR
<DD>
A failed call to <B>WSAConnect</B>&nbsp;or <B>connect</B>.
</DL>
<P>
The helper DLL&#39;s <B>WSHOpenSocket(2)</B>&nbsp;function already selected the set
of possible events for which <B>WSHNotify</B>&nbsp;will be called from the
preceding values. 
</DL>
<H3>Return Value</H3>
<P>
<B>WSHNotify</B>&nbsp;returns zero to confirm that the specified state-transition
occurred. Otherwise, it returns a Windows Sockets error code. When the return
value is nonzero, the application&#39;s call to the socket function that would
cause a state transition fails and the error is set to the value returned by <B>WSHNotify</B>.
<P>
Because <B>WSHNotify</B>&nbsp;is called after all other aspects of a particular
state-change succeeded, the socket can be left in a state where the only valid
operation is to close the socket when <B>WSHNotify</B>&nbsp;returns an error.
<H3>Comments</H3>
<P>
<B>WSHNotify</B>&nbsp;serves two purposes: 
<OL>
<LI>
To allow a helper DLL to track the state of a socket
<P>
<LI>
To give a helper DLL an opportunity to support options requiring the socket to
be in a specific state 
</OL>
<P>
For example, the Windows Sockets helper DLL for TCP/IP uses this routine to
set a reminder to enable its keep-alive option when an application calls <B>setsockopt
</B>before the socket is connected. In these circumstances, no TDI connection
object exists when the keep-alive reminder is set, but the helper DLL can
actually set the option as soon as the socket becomes connected.
<P>
Whenever a helper DLL&#39;s <B>WSHNotify</B>&nbsp;function receives a
WSH_NOTIFY_CLOSE<B>&nbsp;</B>event, it can free any context it has set up for the
socket. After a successful call to <B>WSHNotify </B>with this event, the
Windows Sockets DLL never again calls the helper DLL with the same <I>HelperDllSocketContext</I>
unless that helper DLL reuses the context areas it allocates. That is, the
helper DLL returns the same value from a subsequent call to <B>WSHOpenSocket </B>or
<B>WSHOpenSocket2</B>.
<H3>See Also</H3>
<P>
<B><A HREF="27wshfun_14.htm">WSHOpenSocket</A></B>, <B><A HREF="27wshfun_15.htm">WSHOpenSocket2</A></B>
<P></FONT>
</BODY>
</HTML>
