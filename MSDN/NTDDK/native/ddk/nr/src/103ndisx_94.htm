<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMCompleteDmaTransfer</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMCompleteDmaTransfer_NR"></A>NdisMCompleteDmaTransfer</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; NdisMCompleteDmaTransfer(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; OUT PNDIS_STATUS</B>&nbsp;<I>Status</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_HANDLE</B>&nbsp;<I>MiniportDmaHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_BUFFER</B>&nbsp;<I>Buffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG </B>&nbsp;<I>Offset</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>Length</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp;<I>WriteToDevice<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMCompleteDmaTransfer</B>&nbsp;indicates that a system DMA transfer operation
has completed. It resets the system DMA controller in preparation for further
DMA transfers.
<H3>Parameters</H3>
<DL>
<DT>
<I>Status</I>
<DD>
Points to a caller-supplied variable in which this function returns the final
status of the DMA transfer, which can be one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The data has been transferred and flushed to host memory or to the device to
maintain data integrity.
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
The DMA controller was released but the data transfer might be incoherent. 
</DL>
<DT>
<I>MiniportDmaHandle</I>
<DD>
Specifies the handle returned when MiniportInitialize called <B>NdisMRegisterDmaChannel</B>.
<BR>
<DT>
<I>Buffer</I>
<DD>
Points to the buffer descriptor previously passed to <B>NdisMSetupDmaTransfer</B>.
<BR>
<DT>
<I>Offset </I>
<DD>
Specifies the byte offset at which the transfer began. This value also was
passed to <B>NdisMSetupDmaTransfer</B>.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the length in bytes of the transfer. This value also was passed to <B>NdisMSetupDmaTransfer</B>.
<BR>
<DT>
<I>WriteToDevice</I>
<DD>
Specifies TRUE if the transfer was from the host to the NIC, as, for example,
a send operation.
</DL>
<H3>Comments</H3>
<P>
<B>NdisMCompleteDmaTransfer</B>&nbsp;must be called with <I>WriteToDevice</I>&nbsp;set
to TRUE before the transferred data is considered present in the NIC’s memory.
<B>NdisMCompleteDmaTransfer</B>&nbsp;must be called with <I>WriteToDevice</I>&nbsp;set
to FALSE before the transferred data can be read from host memory.
<P>
Callers of <B>NdisMCompleteDmaTransfer</B>&nbsp;run at IRQL &lt;= DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_7.htm">MiniportHandleInterrupt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,
<B><A HREF="101mini_19.htm">MiniportTimer</A></B>, <B><A HREF="103ndisx_97.htm">NdisMDeregisterDmaChannel</A></B>,
<B><A HREF="103ndisx_122.htm">NdisMRegisterDmaChannel</A></B>, <B><A HREF="103ndisx_134.htm">NdisMSetupDmaTransfer</A></B>
<P></FONT>
</BODY>
</HTML>
