<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMWriteLogData</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMWriteLogData_NR"></A>NdisMWriteLogData</H2>
<P>
<B>NDIS_STATUS</B><BR>
&nbsp; &nbsp; <B>NdisMWriteLogData(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>LogHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>LogBuffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>LogBufferSize</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
<B>NdisMWriteLogData</B>&nbsp;transfers driver-supplied information into the log
file for consumption and display by a driver-dedicated Win32 application. 
<H3>Parameters</H3>
<DL>
<DT>
<I>LogHandle</I>
<DD>
Specifies the handle returned by <B>NdisMCreateLog</B>. 
<BR>
<DT>
<I>LogBuffer</I>
<DD>
Points to a driver-allocated buffer containing the information to be written.
<BR>
<DT>
<I>LogBufferSize</I>
<DD>
Specifies how many bytes of data to copy into the log file. 
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMWriteLogData</B>&nbsp;can return one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The driver-supplied data at <I>LogBuffer</I>&nbsp;has been copied into the log
file. 
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
The given <I>LogBufferSize</I>&nbsp;is too large, that is, larger than the log file
itself. 
</DL>
<H3>Comments</H3>
<P>
If the driver-dedicated application has an outstanding request for log file
data, <B>NdisMWriteLogData</B>&nbsp;satisfies that request as soon as it has copied
the driver-supplied information into the log file. 
<P>
The miniport can supply a <I>LogBuffer</I>&nbsp;pointer to a location on the kernel
stack if it is currently running at IRQL DISPATCH_LEVEL. Otherwise, <I>LogBuffer</I>
must access a buffer that the driver allocated from nonpaged pool. 
<P>
The driver must release any spin lock it is holding before calling <B>NdisMWriteLogData</B>.
<P>
An NDIS intermediate driver cannot call <B>NdisMWriteLogData</B>&nbsp;from any of
its Protocol<I>Xxx</I>&nbsp;functions. Such a driver must call <B>NdisIMSwitchToMiniport</B>
and make this call from a miniport context. If <B>NdisIMSwitchToMiniport</B>
returns FALSE, the driver must call <B>NdisIMQueueMiniportCallback</B>&nbsp;so that
its driver-supplied MiniportCallback function can call <B>NdisMWriteLogData</B>.
<P>
Callers of <B>NdisMWriteLogData</B>&nbsp;can be running at IRQL &lt;=
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_10.htm">NdisAllocateMemory</A></B>, <B><A HREF="103ndisx_71.htm">NdisIMQueueMiniportCallback</A></B>,
<B><A HREF="103ndisx_74.htm">NdisIMSwitchToMiniport</A></B>, <B><A HREF="103ndisx_92.htm">NdisMCloseLog</A></B>,
<B><A HREF="103ndisx_95.htm">NdisMCreateLog</A></B>, <B><A HREF="103ndisx_104.htm">NdisMFlushLog</A></B>,
<B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
