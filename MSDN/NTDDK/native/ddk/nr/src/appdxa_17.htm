<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MacRequest</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MacRequest_NR"></A>MacRequest</H2>
<P>
<B>NDIS_STATUS<BR>
</B>&nbsp; &nbsp; <B>MacRequest(<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>MacBindingHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_REQUEST</B>&nbsp; <I>NdisRequest</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
MacRequest is called when a protocol driver calls <B>NdisRequest</B>&nbsp;to query
or set NIC information in the underlying driver’s MIB. 
<H3>Parameters</H3>
<DL>
<DT>
<I>MacBindingHandle</I>
<DD>
Specifies the handle that the NIC driver associates with the binding. 
<BR>
<DT>
<I>NdisRequest</I>
<DD>
Points to a request structure containing the OID identifying the object to
query or set. 
</DL>
<H3>Return Value</H3>
<P>
MacRequest can return any of the following status codes: 
<P>
NDIS_STATUS_FAILURE<BR>
NDIS_STATUS_INVALID_DATA<BR>
NDIS_STATUS_INVALID_LENGTH<BR>
NDIS_STATUS_INVALID_OID<BR>
NDIS_STATUS_NOT_ACCEPTED<BR>
NDIS_STATUS_NOT_SUPPORTED<BR>
NDIS_STATUS_PENDING<BR>
NDIS_STATUS_REQUEST_ABORTED<BR>
NDIS_STATUS_RESET_IN_PROGRESS<BR>
NDIS_STATUS_RESOURCES<BR>
NDIS_STATUS_SUCCESS
<H3>Comments</H3>
<P>
In its call to<B>&nbsp;NdisRequest</B>, the protocol driver passes an
NDIS_REQUEST-type structure containing an OID for the MIB object. 
<P>
The protocol-driver-supplied NDIS_REQUEST structure contains a substructure
filled with data related to either querying information or setting
information, depending on the <B>RequestType</B>&nbsp;specified. If the protocol
driver calls <B>NdisRequest</B>&nbsp;with a query, MacRequest writes the requested
information for the specified OID in the appropriate members of the
NDIS_REQUEST structure. If the protocol driver requests a set, MacRequest uses
the protocol-driver-supplied, OID-specific information from the NDIS_REQUEST
structure to set the information for the NIC. 
<P>
If the NDIS_REQUEST buffer is not large enough to return queried information,
MacRequest writes the number of bytes needed for the data in the <B>BytesNeeded</B>
member of NDIS_REQUEST and returns NDIS_STATUS_INVALID_LENGTH. It does not
fill in the <B>BytesWritten</B>&nbsp;member. If a query request specifies an OID
that the NIC driver does not support, MacRequest sets the <B>BytesWritten</B>
member to zero and returns the appropriate status code. 
<P>
For a set operation, MacRequest determines whether the protocol-supplied
information is valid. If not, MacRequest writes the number of bytes processed
in the <B>BytesRead</B>&nbsp;member of NDIS_REQUEST and returns
NDIS_STATUS_INVALID_DATA. 
<P>
For more information about system-defined OIDs and OID-specific data
structures, see Part I. 
<P>
MacRequest completes synchronously if it finishes processing the request
before it returns with any status code other than NDIS_STATUS_PENDING. If
MacRequest satisfies a given request, it fills the request’s <B>BytesWritten</B>
or <B>BytesRead</B>&nbsp;member with the number of bytes transferred before it
returns NDIS_STATUS_SUCCESS. 
<P>
The driver completes such a request asynchronously if MacRequest returns
NDIS_STATUS_PENDING. The NIC driver eventually calls <B>NdisCompleteRequest</B>,
which, in turn, calls the ProtocolRequestComplete function of the driver that
initiated the query or set request. This asynchronous completion allows
protocol driver postprocessing of the completed request. 
<P>
MacRequest runs at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="appdxa_15.htm">MacQueryGlobalStatistics</A></B>, <B><A HREF="101mini_10.htm">MiniportQueryInformation</A></B>,
<B><A HREF="101mini_16.htm">MiniportSetInformation</A></B>, <B><A HREF="appdxa_70.htm">NdisCompleteRequest</A></B>,
<B><A HREF="106nstru_7.htm">NDIS_REQUEST</A></B>, <B><A HREF="103ndisx_188.htm">NdisRequest</A></B>,
<B><A HREF="104tdlow_8.htm">ProtocolRequestComplete</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
