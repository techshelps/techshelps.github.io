<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisSetPacketFlags</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisSetPacketFlags_NR"></A>NdisSetPacketFlags</H2>
<P>
<B>VOID</B><BR>
&nbsp; &nbsp; <B>NdisSetPacketFlags(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_PACKET</B>&nbsp; <I>Packet</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>Flags</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisSetPacketFlags</B>&nbsp;sets caller-determined and medium-specific
information in the flags of a given packet descriptor.  
<H3>Parameters</H3>
<DL>
<DT>
<I>Packet</I>
<DD>
Points to the packet descriptor in which the flags should be set. 
<BR>
<DT>
<I>Flags</I>
<DD>
Specifies the value to be set in the flags, which are in the private portion
of the packet descriptor reserved for use by NDIS. 
<P>
For protocols, the format of this value<B>&nbsp;</B>is specific to the medium that
the underlying driver selected when the protocol called <B>NdisOpenAdapter</B>
to set up the binding. 
</DL>
<H3>Comments</H3>
<P>
Setting the flags in a packet descriptor allows a protocol driver to pass
information, usually about about a send request, that is not included in the
packet data. 
<P>
A protocol driver usually calls <B>NdisSetPacketFlags</B>&nbsp;to set the flags in
packets sent on any medium that transmits data in an expedited manner. Some
types of media include flags information in the packet header contained in
buffers chained to the send packet. When a protocol driver is bound to an
underlying driver for these types of media, a call to <B>NdisSetPacketFlags</B>
is unnecessary. 
<P>
When a bound protocol calls <B>NdisSetPacketFlags</B>, an underlying driver’s
MiniportSendPackets function can read these flags only by calling <B>NdisGetPacketFlags</B>.
For underlying drivers that have MiniportSend functions, a call to <B>NdisGetPacketFlags</B>
is unnecessary because the flags are passed as an input parameter to the
MiniportSend function. 
<P>
All packet descriptors allocated with <B>NdisAllocatePacket</B>&nbsp;are
zero-initialized, including the flags. If the value returned by <B>NdisGetPacketFlags</B>
is zero, the underlying driver can assume that the packet has no protocol-set
flags information. 
<P>
However, protocols can supply far more media-specific information, such as the
packet priority, in the out-of-band data block associated with each packet
descriptor than a call to <B>NdisSetPacketFlags</B>&nbsp;with a single packet
allows. 
<P>
Callers of <B>NdisSetPacketFlags</B>&nbsp;run at IRQL &lt;= DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_14.htm">MiniportSend</A></B>, <B><A HREF="101mini_15.htm">MiniportSendPackets</A></B>,
<B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>, <B><A HREF="103ndisx_50.htm">NdisGetPacketFlags</A></B>,
<B><A HREF="103ndisx_148.htm">NdisOpenAdapter</A></B>, <B><A HREF="106nstru_4.htm">NDIS_PACKET</A></B>,
<B><A HREF="106nstru_5.htm">NDIS_PACKET_OOB_DATA</A></B>, <B><A HREF="103ndisx_193.htm">NdisSend</A></B>,
<B><A HREF="103ndisx_194.htm">NdisSendPackets</A></B>, <B><A HREF="103ndisx_198.htm">NDIS_SET_PACKET_MEDIA_SPECIFIC_INFO</A></B>,
<B><A HREF="104tdlow_10.htm">ProtocolSendComplete</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
