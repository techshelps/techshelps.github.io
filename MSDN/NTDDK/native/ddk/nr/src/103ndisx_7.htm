<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisAdjustBufferLength</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisAdjustBufferLength_NR"></A>NdisAdjustBufferLength</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisAdjustBufferLength(</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN PNDIS_BUFFER</B>&nbsp; <I>Buffer</I><B>,</B><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN UINT</B>&nbsp; <I>Length</I><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
<B>NdisAdjustBufferLength</B>&nbsp;modifies the length specified in a buffer
descriptor allocated or copied by the caller. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Buffer</I>
<DD>
Points to the buffer descriptor, previously allocated with <B>NdisAllocateBuffer</B>
or <B>NdisCopyBuffer</B>.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the new length in bytes to be set in the buffer descriptor. 
</DL>
<H3>Comments</H3>
<P>
The caller of <B>NdisAdjustBufferLength</B>&nbsp;can pass only a buffer descriptor
that was allocated by the caller. It cannot pass a buffer descriptor that was
allocated by another driver. 
<P>
For example, the driver of a busmaster DMA NIC calls this function with buffer
descriptors that it allocated to specify receive buffers in its shared memory
block. Before such a driver indicates received data, it calls <B>NdisAdjustBufferLength</B>
to make the buffer descriptor that it will include in the receive indication
match the size of the received data if it is less than the size of the NIC’s
receive buffer. When a receive packet with such an adjusted buffer descriptor
has been consumed and returned to the miniport, the driver again calls <B>NdisAdjustBufferLength</B>
to make the buffer descriptor match the actual size of its receive buffer
again. 
<P>
The <I>Length</I>&nbsp;passed to <B>NdisAdjustBufferLength</B>&nbsp;cannot be larger
than the <I>Length</I>&nbsp;that was passed to <B>NdisAllocateBuffer</B>&nbsp;or <B>NdisCopyBuffer</B>
when the buffer descriptor was allocated. 
<P>
The caller of <B>NdisAdjustBufferLength</B>&nbsp;must restore the length to its
original value before it frees the buffer descriptor with <B>NdisFreeBuffer</B>.
<P>
The driver must release any spin lock it is currently holding before calling <B>NdisAdjustBufferLength</B>.
<P>
Callers of <B>NdisAdjustBufferLength</B>&nbsp;can run at any IRQL, but usually run
at IRQL &lt;= DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_8.htm">NdisAllocateBuffer</A></B>, <B><A HREF="103ndisx_24.htm">NdisCopyBuffer</A></B>,
<B><A HREF="103ndisx_37.htm">NdisFreeBuffer</A></B>, <B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>
<P></FONT>
</BODY>
</HTML>
