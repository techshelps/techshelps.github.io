<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MiniportTimer</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MiniportTimer_NR"></A>MiniportTimer</H2>
<P>
<B>VOID</B>&nbsp;<BR>
&nbsp; &nbsp;<B>&nbsp;MiniportTimer(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID </B>&nbsp;<I>SystemSpecific1</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>FunctionContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific2</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific3<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
MiniportTimer is a required function if a driver’s NIC does not generate
interrupts. Otherwise, one or more MiniportTimer functions are optional. 
<H3>Parameters</H3>
<DL>
<DT>
<I>SystemSpecific1</I>
<DD>
Points to a system-specific variable, which is opaque to MiniportTimer and
reserved for system use. 
<BR>
<DT>
<I>FunctionContext</I>
<DD>
Specifies the context pointer passed to <B>NdisMInitializeTimer</B>&nbsp;when
MiniportInitialize set up the associated timer object. 
<BR>
<DT>
<I>SystemSpecific2</I>
<DD>
Points to a system-specific value that is reserved for system use.
<BR>
<DT>
<I>SystemSpecific3</I>
<DD>
Points to a system-specific value that is reserved for system use.
</DL>
<H3>Comments</H3>
<P>
The driver of a NIC that does not generate interrupts must have a
MiniportTimer function to poll the state of the NIC. After such a driver’s
MiniportInitialize function sets up the driver-allocated timer object with <B>NdisMInitializeTimer</B>,
a call to <B>NdisMSetPeriodicTimer</B>&nbsp;causes the MiniportTimer function
associated with the timer object to be run repeatedly and automatically at the
interval specified by <I>MillisecondsPeriod</I>. Such a polling MiniportTimer
function monitors the state of the NIC to determine when to make indications,
when to complete pending sends, and so forth. In effect, such a polling
MiniportTimer function has the same functionality as the
MiniportHandleInterrupt function in the driver of a NIC that does generate
interrupts. 
<P>
By contrast, calling <B>NdisMSetTimer</B>&nbsp;causes the MiniportTimer function
associated with the timer object to be run once when the given <I>MillisecondsToDelay</I>
expires. Such a MiniportTimer function usually performs some driver-determined
action if a particular operation times out. 
<P>
If either type of MiniportTimer function shares resources with other driver
functions, the driver should synchronize access to those resources with a spin
lock.
<P>
Any NIC driver or intermediate driver can have more than one MiniportTimer
function at the discretion of the driver writer. Each such MiniportTimer
function must be associated with a driver-allocated and initialized timer
object. 
<P>
A call to <B>NdisMCancelTimer</B>&nbsp;cancels execution of a nonpolling
MiniportTimer function, provided that the interval passed in the immediately
preceding call to <B>NdisMSetTimer</B>&nbsp;has not yet expired. After a call to <B>NdisMSetPeriodicTimer</B>,
a call to <B>NdisMSetTimer</B>&nbsp;or <B>NdisMCancelTimer</B>&nbsp;with the same timer
object disables a polling MiniportTimer function: either the MiniportTimer
function runs once, or it is canceled. 
<P>
The MiniportHalt function of any driver with a MiniportTimer function should
call <B>NdisMCancelTimer</B>&nbsp;to ensure that the MiniportTimer function does
not attempt to access resources that MiniportHalt has already released.  
<P>
By default, MiniportTimer runs at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_6.htm">MiniportHalt</A></B>, <B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,
<B><A HREF="103ndisx_6.htm">NdisAcquireSpinLock</A></B>, <B><A HREF="103ndisx_13.htm">NdisAllocateSpinLock</A></B>,
<B><A HREF="103ndisx_29.htm">NdisDprAcquireSpinLock</A></B>, <B><A HREF="103ndisx_91.htm">NdisMCancelTimer</A></B>,
<B><A HREF="103ndisx_110.htm">NdisMInitializeTimer</A></B>, <B><A HREF="103ndisx_132.htm">NdisMSetPeriodicTimer</A></B>,
<B><A HREF="103ndisx_133.htm">NdisMSetTimer</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
