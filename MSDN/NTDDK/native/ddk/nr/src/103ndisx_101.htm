<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMEthIndicateReceiveComplete</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMEthIndicateReceiveComplete_NR"></A>NdisMEthIndicateReceiveComplete</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; NdisMEthIndicateReceiveComplete(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN</B>&nbsp;<B>NDIS_HANDLE</B>&nbsp;<I>MiniportAdapterHandle<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMEthIndicateReceiveComplete</B>&nbsp;notifies NDIS that an Ethernet receive
packet, identified in a preceding call to <B>NdisMEthIndicateReceive</B>, has
been fully transferred by the NIC so that NDIS can notify the appropriate
bound protocols. 
<H3>Parameters</H3>
<DL>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle originally input to MiniportInitialize.
</DL>
<H3>Comments</H3>
<P>
After any Ethernet receive indication, a miniport eventually must call <B>NdisMEthIndicateReceiveComplete</B>
to indicate the end of the transfer operation over the net, even if a
particular packet is accepted by no bound protocol. 
<P>
<B>NdisMEthIndicateReceiveComplete</B>&nbsp;both indicates the completion of a
transfer operation for a receive and notifies any bound protocol that has
already consumed the initial indication that it can begin postprocessing the
received data. 
<P>
When a miniport calls <B>NdisMEthIndicateReceiveComplete</B>, NDIS indicates
the completion of the receive operation to each such protocol by calling its
ProtocolReceiveComplete function. 
<P>
ProtocolReceiveComplete functions need not operate under the severe time
constraints of the corresponding ProtocolReceive functions. However, another
receive indication to the ProtocolReceive function can come in while the
ProtocolReceiveComplete function is running. 
<P>
A miniport need not call <B>NdisMEthIndicateReceiveComplete</B>&nbsp;in one-to-one
correspondence with its calls to <B>NdisMEthIndicateReceive</B>. That is, a
NIC driver can issue a single receive-complete indication for some number of
receive indications, particularly when network traffic is high. For example,
when a miniport is continually indicating receives from the same source, it
might call <B>NdisMEthIndicateReceiveComplete</B>&nbsp;once for every ten
indications. On the other hand, a miniport might call <B>NdisMEthIndicateReceiveComplete</B>
once for each indication when network traffic is low so that the driver can
regain ownership of the memory it allocated for receives promptly. 
<P>
Callers of <B>NdisMEthIndicateReceiveComplete</B>&nbsp;run at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>,<B>&nbsp;<A HREF="103ndisx_100.htm">NdisMEthIndicateReceive</A></B>,
<B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>, <B><A HREF="104tdlow_6.htm">ProtocolReceiveComplete</A></B>
<P></FONT>
</BODY>
</HTML>
