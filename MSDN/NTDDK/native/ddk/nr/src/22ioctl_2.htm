<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TDI_ACTION</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TDI_ACTION_NR"></A>TDI_ACTION</H2>
<P>
When a kernel-mode client makes a TDI_ACTION request, it asks the underlying
TDI transport driver to make transport-specific extensions available to that
client. 
<H3>IRP</H3>
<P>
The transport calls <B>IoGetCurrentIrpStackLocation</B>&nbsp;with the given <I>Irp</I>
to get a pointer to its own stack location in the IRP, shown in the following
list as <B>IrpSp</B>. IRP members relevant to this request include the
following:
<DL>
<DT>
<B>IoStatus.Status</B>
<DD>
Specifies the final status of the action request. The transport sets this
member before it completes the IRP, possibly to one of the following:
<P>
STATUS_SUCCESS <BR>
STATUS_PENDING<BR>
STATUS_INVALID_CONNECTION<BR>
STATUS_INSUFFICIENT_RESOURCES<BR>
STATUS_NOT_IMPLEMENTED
<BR>
<DT>
<B>IoStatus.Information</B>
<DD>
Specifies how many bytes of data were transferred for this request. The
transport sets this member of the I/O status block before it completes the
IRP. 
<BR>
<DT>
<B>IrpSp-&gt;MajorFunction</B>
<DD>
Specifies IRP_MJ_INTERNAL_DEVICE_CONTROL. The transport can ignore this member
if it exports a TdiDispatchInternalDeviceControl routine that handles only
TDI_<I>XXX</I>&nbsp;requests. 
<BR>
<DT>
<B>IrpSp-&gt;MinorFunction</B>
<DD>
Specifies TDI_ACTION.
<BR>
<DT>
<B>IrpSp-&gt;FileObject</B>
<DD>
Points to an open file object representing an address, connection endpoint, or
control channel. The transport uses the <B>FsContext</B>&nbsp;and, possibly, <B>FsContext2</B>
fields to access the state it maintains about this address, connection, or
control channel. 
<BR>
<DT>
<B>MdlAddress</B>
<DD>
Points to an MDL, possibly the initial MDL in a chain, mapping a buffer
containing the client-supplied action parameter block. The initial part of
this buffer always contains a system-defined TDI_ACTION_HEADER structure,
followed by whatever transport-defined contents are required to carry out the
action request. 
</DL>
<H3>Comments</H3>
<P>
The successful completion of any client&#39;s action request makes the
transport-provided extension applicable to that client but not to any other
TDI clients or drivers. The set of possible actions is defined by the
transport at the discretion of the TDI transport driver writer. 
<P>
Such a client makes an action request for transport-defined extensions related
to an address, a connection, or a control channel. The client supplies a
buffer containing all information concerning the requested action in the
parameter block mapped at <B>MdlAddress</B>. 
<P>
Every action parameter block begins with a TDI_ACTION_HEADER containing a
transport identifier and an action code. On receipt of such a request, the
transport uses the value of <B>TransportId</B>&nbsp;in this header to validate the
request. The <B>ActionCode</B>&nbsp;member specifies the transport-defined
operation to carry out and determines the transport-required contents for the
remainder of the parameter block.
<P>
<B>TdiBuildAction</B>&nbsp;is the macro a client uses to fill in this IRP.
<H3>See Also</H3>
<P>
<B><A HREF="26tdstrc_8.htm">TDI_ACTION_HEADER</A></B>, <B><A HREF="24bldmac_2.htm">TdiBuildAction</A></B>,
<B><A HREF="21tddisp_6.htm">TdiDispatchInternalDeviceControl</A></B>
<P></FONT>
</BODY>
</HTML>
