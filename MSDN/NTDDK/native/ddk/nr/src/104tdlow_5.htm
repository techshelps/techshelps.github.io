<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProtocolReceive</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ProtocolReceive_NR"></A>ProtocolReceive</H2>
<P>
<B>NDIS_STATUS<BR>
&nbsp; &nbsp; ProtocolReceive(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>ProtocolBindingContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>MacReceiveContext</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>HeaderBuffer</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>HeaderBufferSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>LookAheadBuffer</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>LookaheadBufferSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp; <I>PacketSize</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ProtocolReceive is a required driver function that determines whether a
received network packet is of interest to the protocol’s client(s) and, if so,
copies the indicated data and, possibly, calls <B>NdisTransferData</B>&nbsp;to
retrieve the rest of the indicated packet. 
<H3>Parameters</H3>
<DL>
<DT>
<I>ProtocolBindingContext</I>
<DD>
Specifies the handle to a protocol-allocated context area in which the
protocol driver maintains per-binding runtime state. The driver supplied this
handle when it called <B>NdisOpenAdapter</B>.  
<BR>
<DT>
<I>MacReceiveContext</I>
<DD>
Specifies a context handle that the underlying NIC driver associates with the
packet received from the network. This handle is opaque to the protocol,
reserved for use by the underlying driver that made the indication, and a
required parameter to <B>NdisTransferData</B>. 
<BR>
<DT>
<I>HeaderBuffer</I>
<DD>
Points to the base virtual address of a range containing the buffered packet
header. The address is valid only within the current call to ProtocolReceive. 
<BR>
<DT>
<I>HeaderBufferSize</I>
<DD>
Specifies the number of bytes in the packet header. 
<BR>
<DT>
<I>LookAheadBuffer</I>
<DD>
Points to the base virtual address of a range that contains <I>LookaheadBufferSize</I>
bytes of buffered network packet data. This address is valid only within the
current call to ProtocolReceive. 
<BR>
<DT>
<I>LookaheadBufferSize</I>
<DD>
Specifies the number of bytes of network packet data in the lookahead buffer. 
<P>
The indicating driver ensures this number is at least as large as the size it
returned for the protocol’s preceding call to <B>NdisRequest</B>&nbsp;with
OID_GEN_CURRENT_LOOKAHEAD or the size of the packet, whichever is less. 
<P>
If <I>PacketSize</I>&nbsp;is less than or equal to the given <I>LookaheadBufferSize</I>,
the lookahead buffer contains the entire packet. If the underlying driver made
the indication with <B>NdisMIndicateReceivePacket</B>, the lookahead buffer
always contains a full network packet. 
<BR>
<DT>
<I>PacketSize</I>
<DD>
Specifies the size, in bytes, of the network packet data. The length of the
packet does not include the length of the header. 
<P>
ProtocolReceive determines whether the protocol must call <B>NdisTransferData</B>
by comparing this parameter to the given <I>LookaheadBufferSize</I>. 
</DL>
<H3>Return Value</H3>
<P>
ProtocolReceive can return either of the following: 
<DL>
<DT>
NDIS_STATUS_NOT_ACCEPTED
<DD>
The protocol has no use for the indicated packet, that is, it has no current
clients interested in the indicated network data. 
<P>
Returning this status quickly for rejected packets yields higher performance
for the protocol and the highest possible network I/O throughput for the
system as a whole. 
<BR>
<DT>
NDIS_STATUS_SUCCESS
<DD>
ProtocolReceive has processed the header information and accepted the packet,
that is, it has copied the indicated network data from the header and
lookahead buffers and, possibly, called <B>NdisTransferData</B>&nbsp;to retrieve
the remaining data if less than a full network packet was indicated. 
</DL>
<H3>Comments</H3>
<P>
NDIS provides equal packet access for any number of protocol drivers bound
above an underlying NIC miniport. NDIS can use the status that ProtocolReceive
returns to optimize the order in which bound protocols receive indications for
subsequent packets. 
<P>
When a miniport calls a filter-specific <B>NdisM..IndicateReceive</B>
function, NDIS calls the ProtocolReceive functions of bound protocols. A call
to an <B>NdisM..IndicateReceive</B>&nbsp;function indicates that a network packet,
or some initial lookahead portion of it, is available for inspection by bound
protocols. Each ProtocolReceive function, in turn, inspects the packet header
and data, optionally copies as much of the header and/or data as is made
available, and calls <B>NdisTransferData</B>&nbsp;to instruct the NIC driver to
copy any remaining data into a protocol-supplied buffer chained to a
protocol-allocated packet descriptor if the protocol accepts the packet.
ProtocolReceive can call <B>NdisTransferData</B>&nbsp;only once per receive
indication. 
<P>
Before a miniport calls <B>NdisMIndicateReceivePacket</B>&nbsp;with a packet array,
it can set the <B>Status</B>&nbsp;member of an out-of-band block associated with a
packet descriptor in the array to NDIS_STATUS_RESOURCES. This also causes NDIS
to call the ProtocolReceive functions of bound protocols with the network
packet header and data specified by that packet descriptor and, separately,
with the received network packets specified in all subsequent descriptors in
the indicated packet array. Each ProtocolReceive function, in turn, inspects
the given network packet header and data and each optionally copies the
indicated network packet data. 
<P>
If the underlying miniport supplies out-of-band information with the receives
it indicates, ProtocolReceive can call <B>NdisQueryReceiveInformation</B>&nbsp;to
retrieve the out-of-band information for each such packet. Because such an
underlying miniport always indicates full-packet receives, ProtocolReceive
will never call <B>NdisTransferData</B>&nbsp;for a packet indicated with <B>NdisMIndicateReceivePacket</B>.
&nbsp;
<P>
NDIS calls ProtocolReceive functions sequentially as calls to <B>NdisM..IndicateReceive</B>
or <B>NdisMIndicateReceivePacket</B>&nbsp;occur, but it can indicate a packet to
bound protocols using separate calls. However, every protocol must be able to
handle out-of-order received packets since neither NDIS nor the underlying NIC
miniport has any control over the network over which packets are transmitted. 
<P>
A driver writer should minimize the amount of time spent in the
ProtocolReceive function so that the protocol does not lose additional
incoming packets, particularly from underlying drivers that call the
filter-specific <B>NdisM..IndicateReceive</B>&nbsp;functions. ProtocolReceive must
either reject an incoming packet or recognize the packet as of interest to its
client(s) quickly. If it accepts the packet, ProtocolReceive must find a place
to put packet data and copy the data quickly. Shortly after ProtocolReceive
returns, when time constraints are not so severe, any underlying miniport that
made one or more indications with <B>NdisM..IndicateReceive</B>&nbsp;will call the
corresponding <B>NdisM..IndicateReceiveComplete</B>. The protocol driver’s
ProtocolReceiveComplete function then performs any necessary postprocessing
for the original indication(s). 
<P>
The underlying driver does not remove any headers or trailers from the packet
data received on its NIC, nor does it remove any received padding. In other
words, a packet can include padding in the data and length indicated to
protocols. ProtocolReceive is responsible for detecting and ignoring such
padding. 
<P>
The buffers at <I>HeaderBuffer</I>&nbsp;and <I>LookAheadBuffer</I>&nbsp;passed to
ProtocolReceive are read-only and valid only until ProtocolReceive returns
control. ProtocolReceive must copy all the indicated data that the driver
needs into protocol-allocated storage. Whether the protocol can copy the
indication directly depends on the NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA flag
returned for the OID_GEN_MAC_OPTIONS query. If this flag was set,
ProtocolReceive can use <B>NdisMoveMemory</B>&nbsp;to copy the indicated data to
its own storage; otherwise, it should use <B>TdiCopyLookaheadData</B>.
However, the protocol can call <B>TdiCopyLookaheadData</B>&nbsp;even if the
underlying driver set the NDIS_MAC_OPTION_COPY_LOOKAHEAD_DATA flag. 
<P>
The ProtocolReceive function of an NDIS intermediate driver cannot simply
forward receive indications to still higher-level protocols. Such an attempt
can cause a deadlock. Instead, such a driver must repackage the indication in
a fresh packet descriptor and call <B>NdisIMSwitchToMiniport</B>&nbsp;to forward
the indication from the appropriate context. If <B>NdisIMSwitchToMiniport</B>
returns FALSE, the driver must call <B>NdisIMQueueMiniportCallback</B>&nbsp;and
forward the indication from a protocol-supplied MiniportCallback function. 
<P>
By default, ProtocolReceive runs at IRQL DISPATCH_LEVEL in an arbitrary thread
context. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_20.htm">MiniportTransferData</A></B>, <B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>,
<B><A HREF="103ndisx_48.htm">NdisGetFirstBufferFromPacket</A></B>,
<B><A HREF="103ndisx_71.htm">NdisIMQueueMiniportCallback</A></B>,
<B><A HREF="103ndisx_74.htm">NdisIMSwitchToMiniport</A></B>, <B><A HREF="103ndisx_89.htm">NdisMArcIndicateReceive</A></B>,
<B><A HREF="103ndisx_100.htm">NdisMEthIndicateReceive</A></B>, <B><A HREF="103ndisx_102.htm">NdisMFddiIndicateReceive</A></B>,
<B><A HREF="103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>,
<B><A HREF="103ndisx_115.htm">NdisMoveMemory</A></B>, <B><A HREF="103ndisx_139.htm">NdisMTrIndicateReceive</A></B>,
<B><A HREF="103ndisx_143.htm">NdisMWanIndicateReceive</A></B>, <B><A HREF="103ndisx_161.htm">NdisQueryReceiveInformation</A></B>,
<B><A HREF="104tdlow_6.htm">ProtocolReceiveComplete</A></B>, <B><A HREF="104tdlow_7.htm">ProtocolReceivePacket</A></B>,
<B><A HREF="104tdlow_13.htm">ProtocolTransferDataComplete</A></B>,
<B><A HREF="23tdifun_3.htm">TdiCopyLookaheadData</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
