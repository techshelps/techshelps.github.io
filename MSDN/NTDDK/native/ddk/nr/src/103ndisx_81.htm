<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisInterlockedAddUlong</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisInterlockedAddUlong_NR"></A>NdisInterlockedAddUlong</H2>
<P>
<B>VOID<BR>
&nbsp; &nbsp; NdisInterlockedAddUlong(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PULONG</B>&nbsp; <I>Addend</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Increment</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_SPIN_LOCK</B>&nbsp; <I>SpinLock</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisInterlockedAddUlong</B>&nbsp;adds an unsigned long value to a given unsigned
integer as an atomic operation, using a caller-supplied spin lock to
synchronize access to the integer variable. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Addend</I>
<DD>
Points to the variable for which the value is to be adjusted by the given <I>Increment</I>.
<BR>
<DT>
<I>Increment</I>
<DD>
Specifies the value to be added to that at <I>Addend</I>. 
<BR>
<DT>
<I>SpinLock</I>
<DD>
Points to a caller-initialized spin lock.
</DL>
<H3>Comments</H3>
<P>
The caller must provide resident storage for the spin lock, which must be
initialized with <B>NdisAllocateSpinLock</B>&nbsp;before the initial call to <B>NdisInterlockedAddUlong</B>.
<P>
The <I>SpinLock</I>&nbsp;passed to <B>NdisInterlockedAddUlong</B>&nbsp;is used to assure
that the addition to the variable at <I>Addend</I>&nbsp;is atomic with respect to
any other operations on the same variable that synchronize with the same spin
lock. 
<P>
<B>NdisInterlockedAddUlong</B>&nbsp;raises IRQL to DISPATCH_LEVEL when it acquires
the given spin lock and restores the original IRQL before it returns control.
Consequently, any driver function that calls <B>NdisInterlockedAddUlong</B>
cannot be pageable code. 
<P>
Callers of <B>NdisInterlockedAddUlong</B>&nbsp;run at IRQL &lt;= DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_6.htm">NdisAcquireSpinLock</A></B>, <B><A HREF="103ndisx_13.htm">NdisAllocateSpinLock</A></B>,
<B><A HREF="103ndisx_187.htm">NdisReleaseSpinLock</A></B>, <B><A HREF="103ndisx_191.htm">NdisRetrieveUlong</A></B>,
<B><A HREF="103ndisx_207.htm">NdisStoreUlong</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
