<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NDIS_OOB_DATA_FROM_PACKET</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NDIS_OOB_DATA_FROM_PACKET_NR"></A>NDIS_OOB_DATA_FROM_PACKET</H2>
<P>
<B>PNDIS_PACKET_OOB_DATA</B><BR>
&nbsp; &nbsp; <B>NDIS_OOB_DATA_FROM_PACKET(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_PACKET</B>&nbsp; _<I>Packet</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
NDIS_OOB_DATA_FROM_PACKET returns a pointer to the out-of-band data block
associated with a given packet descriptor. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Packet</I>
<DD>
Points to a packet descriptor.
</DL>
<H3>Return Value</H3>
<P>
NDIS_OOB_DATA_FROM_PACKET returns a pointer to the out-of-band data block
associated with the given packet descriptor, or it returns NULL if there is no
out-of-band information for the packet.
<H3>Comments</H3>
<P>
Lower-level NDIS drivers that supply out-of-band information with the packet
descriptors they allocate for indications can use NDIS_OOB_DATA_FROM_PACKET to
gain access to the out-of-band block associated with a driver-allocated packet
descriptor. Such a driver would then set up out-of-band information before
indicating a receive packet. 
<P>
For example, an NDIS intermediate driver might copy the out-of-band
information from a received packet into a fresh packet descriptor with <B>NdisMoveMemory</B>
before forwarding the indication up to bound protocols. In these
circumstances, the intermediate driver calls <B>NdisMoveMemory</B>&nbsp;with the
pointers returned by NDIS_OOB_DATA_FROM_PACKET as the <I>Source</I>&nbsp;and <I>Destination</I>
pointers and <B>sizeof(</B>NDIS_PACKET_OOB_DATA<B>)</B>&nbsp;as the <I>Length</I>. 
<P>
Lower-level NDIS drivers also might use this macro when the <B>Status</B>&nbsp;of
an indicated packet is returned from <B>NdisMIndicateReceivePacket</B>&nbsp;with
NDIS_STATUS_SUCCESS or when MiniportReturnPacket is called with a packet
descriptor to be reinitialized for reuse. In these circumstances, the driver
can call <B>NdisZeroMemory</B>&nbsp;with the pointer returned by
NDIS_OOB_DATA_FROM_PACKET and <B>sizeof(</B>NDIS_PACKET_OOB_DATA<B>)</B>&nbsp;to
clear the out-of-band data block associated with the packet descriptor.
Alternatively, such a driver can use the appropriate NDIS_SET_PACKET_<I>XXX</I>
macros to reinitialize specific members in the out-of-band data block for
subsequent indications with the returned packet descriptor. 
<P>
Higher-level NDIS drivers can use NDIS_OOB_DATA_FROM_PACKET to reinitialize
the out-of-band data block associated with the packet descriptors they
allocate to specify sends when such a packet descriptor has been returned to
the ProtocolSendComplete function. Consequently, drivers underlying such a
protocol might use NDIS_OOB_DATA_FROM_PACKET to read the out-of-band
information for an incoming send packet. 
<P>
A driver should <I>never</I>&nbsp;pass a packet descriptor to <B>NdisZeroMemory</B>
in an attempt to clear the out-of-band data block associated with a packet
descriptor. Doing this destroys the given packet descriptor, renders it
useless for subsequent indications or sends, and causes a memory leak. A
driver must pass the pointer returned by NDIS_OOB_DATA_FROM_PACKET to
zero-(re)initialize the out-of-band data block associated with a
driver-allocated packet descriptor. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_7.htm">MiniportHandleInterrupt</A></B>, <B><A HREF="101mini_13.htm">MiniportReturnPacket</A></B>,
<B><A HREF="101mini_14.htm">MiniportSend</A></B>, <B><A HREF="101mini_15.htm">MiniportSendPackets</A></B>,
<B><A HREF="101mini_19.htm">MiniportTimer</A></B>, <B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>,
<B><A HREF="103ndisx_51.htm">NDIS_GET_PACKET_HEADER_SIZE</A></B>,
<B><A HREF="103ndisx_52.htm">NDIS_GET_PACKET_MEDIA_SPECIFIC_INFO</A></B>,
<B><A HREF="103ndisx_53.htm">NDIS_GET_PACKET_STATUS</A></B>, <B><A HREF="103ndisx_54.htm">NDIS_GET_PACKET_TIME_RECEIVED</A></B>,
<B><A HREF="103ndisx_55.htm">NDIS_GET_PACKET_TIME_SENT</A></B>, <B><A HREF="103ndisx_56.htm">NDIS_GET_PACKET_TIME_TO_SEND</A></B>,
<B><A HREF="103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>,
<B><A HREF="103ndisx_115.htm">NdisMoveMemory</A></B>, <B><A HREF="106nstru_5.htm">NDIS_PACKET_OOB_DATA</A></B>,
<B><A HREF="103ndisx_197.htm">NDIS_SET_PACKET_HEADER_SIZE</A></B>,
<B><A HREF="103ndisx_198.htm">NDIS_SET_PACKET_MEDIA_SPECIFIC_INFO</A></B>,
<B><A HREF="103ndisx_199.htm">NDIS_SET_PACKET_STATUS</A></B>, <B><A HREF="103ndisx_200.htm">NDIS_SET_PACKET_TIME_RECEIVED</A></B>,
<B><A HREF="103ndisx_201.htm">NDIS_SET_PACKET_TIME_SENT</A></B>, <B><A HREF="103ndisx_202.htm">NDIS_SET_PACKET_TIME_TO_SEND</A></B>,
<B><A HREF="103ndisx_223.htm">NdisZeroMemory</A></B>, <B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>,
<B><A HREF="104tdlow_7.htm">ProtocolReceivePacket</A></B>, <B><A HREF="104tdlow_10.htm">ProtocolSendComplete</A></B>
<P></FONT>
</BODY>
</HTML>
