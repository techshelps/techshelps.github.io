<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TdiBuildInternalDeviceControlIrp</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TdiBuildInternalDeviceControlIrp_NR"></A>TdiBuildInternalDeviceControlIrp</H2>
<P>
<B>PIRP <BR>
</B>&nbsp; &nbsp; <B>TdiBuildInternalDeviceControlIrp (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN CCHAR</B>&nbsp; <I>IrpSubFunction</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DeviceObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PFILE_OBJECT</B>&nbsp; <I>FileObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKEVENT</B>&nbsp; <I>Event</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIO_STATUS_BLOCK</B>&nbsp; <I>IoStatusBlock<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>TdiBuildInternalDeviceControlIrp</B>&nbsp;allocates an IRP for a
client-initiated internal device control request. After it returns, the client
calls another <B>TdiBuild</B><I>Xxx</I>&nbsp;macro with the returned IRP to set up
the I/O stack location of the underlying transport driver before making the
request with <B>IoCallDriver</B>.
<H3>Parameters</H3>
<DL>
<DT>
<I>IrpSubFunction</I>
<DD>
Specifies the TDI_<I>XXX </I>code that will be set in a subsequent call to a <B>TdiBuild</B><I>Xxx</I>
macro as the <B>MinorFunction</B>&nbsp;for the returned IRP. This parameter can be
one of the following:
<DL>
<DT>
TDI_ASSOCIATE_ADDRESS
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_3.htm">TdiBuildAssociateAddress</A></B>.
<BR>
<DT>
TDI_DISASSOCIATE_ADDRESS
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_5.htm">TdiBuildDisassociateAddress</A></B>.
<BR>
<DT>
TDI_CONNECT
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_4.htm">TdiBuildConnect</A></B>.
<BR>
<DT>
TDI_LISTEN
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_8.htm">TdiBuildListen</A></B>.
<BR>
<DT>
TDI_ACCEPT
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_1.htm">TdiBuildAccept</A></B>.
<BR>
<DT>
TDI_DISCONNECT
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_6.htm">TdiBuildDisconnect</A></B>.
<BR>
<DT>
TDI_SEND
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_14.htm">TdiBuildSend</A></B>.
<BR>
<DT>
TDI_RECEIVE
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_12.htm">TdiBuildReceive</A></B>.
<BR>
<DT>
TDI_SEND_DATAGRAM
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_15.htm">TdiBuildSendDatagram</A></B>.
<BR>
<DT>
TDI_RECEIVE_DATAGRAM
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_13.htm">TdiBuildReceiveDatagram</A></B>.
<BR>
<DT>
TDI_SET_EVENT_HANDLER
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_16.htm">TdiBuildSetEventHandler</A></B>.
<BR>
<DT>
TDI_QUERY_INFORMATION
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_11.htm">TdiBuildQueryInformation</A></B>.
<BR>
<DT>
TDI_SET_INFORMATION
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_17.htm">TdiBuildSetInformation</A></B>.
<BR>
<DT>
TDI_ACTION
<DD>
The caller will pass the returned IRP to <B><A HREF="24bldmac_2.htm">TdiBuildAction</A></B>.
</DL>
<DT>
<I>DeviceObject</I>
<DD>
Points to the device object created by the next lower TDI transport driver.
<BR>
<DT>
<I>FileObject</I>
<DD>
Points to a file object representing an address, connection endpoint, or
control channel, depending on the given <I>IrpSubFunction</I>. 
<BR>
<DT>
<I>Event</I>
<DD>
Points to an initialized event object for which the caller provides the
storage. 
<BR>
<DT>
<I>IoStatusBlock</I>
<DD>
Points to a caller-supplied variable of type IO_STATUS_BLOCK. 
</DL>
<H3>Return Value</H3>
<P>
<B>TdiBuildInternalDeviceControlIrp</B>&nbsp;returns a pointer to the IRP it
allocated, or it returns NULL if the allocation attempt failed.
<H3>Comments</H3>
<P>
Kernel-mode clients of TDI transports frequently pass IRPs sent down by still
higher level network components directly to <B>TdiBuild</B><I>Xxx</I>&nbsp;macros
without calling <B>TdiBuildInternalDeviceControlIrp</B>. 
<P>
However, such a client should never hijack an incoming IRP and reuse it to
make an internal device control request to the underlying transport on its own
behalf. Instead the client can call <B>TdiBuildInternalDeviceControlIrp</B>&nbsp;to
get an IRP of its own with which to make such requests. 
<P>
After <B>TdiBuildInternalDeviceControl</B>&nbsp;returns a pointer to an IRP, the
client must pass the IRP to the appropriate <B>TdiBuild</B><I>Xxx</I>&nbsp;macro,
along with the additional parameters the TDI_<I>XXX</I>&nbsp;requires, before it
passes the IRP on to the transport with <B>IoCallDriver</B>. <B>TdiBuildInternalDeviceControl</B>
partially sets up the I/O stack location of the underlying transport in the
IRP it allocates. However, it does not format the I/O stack location according
to a TDI transport&#39;s expectations for a TDI_<I>XXX</I>&nbsp;request as the <B>TdiBuild</B><I>Xxx</I>
macros do.  
<P>
If the client supplies an <I>Event</I>&nbsp;pointer when it calls <B>TdiBuildInternalDeviceControlIrp</B>,
the I/O Manager will set the event to the Signaled state when the IRP is
completed by lower drivers. However, the client cannot wait on that event for
completion of its IRP unless it waits at IRQL PASSIVE_LEVEL in an appropriate
thread context, either that of a client-created thread or, possibly, that of
the thread in which it was executing when it made this call. 
<P>
Callers of <B>TdiBuildInternalDeviceControlIrp</B>&nbsp;must be running at IRQL
PASSIVE_LEVEL. Consequently, a client should preallocate a few IRPs with this
function so the client can use them to submit TDI_<I>XXX</I>&nbsp;requests when it
is running at a higher IRQL. 
<P></FONT>
</BODY>
</HTML>
