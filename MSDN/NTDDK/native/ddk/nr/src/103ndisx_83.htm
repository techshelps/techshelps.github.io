<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisInterlockedInsertTailList</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisInterlockedInsertTailList_NR"></A>NdisInterlockedInsertTailList</H2>
<P>
<B>PLIST_ENTRY<BR>
&nbsp; &nbsp; NdisInterlockedInsertTailList(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PLIST_ENTRY</B>&nbsp;<I>ListHead</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PLIST_ENTRY</B>&nbsp;<I>ListEntry</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_SPIN_LOCK</B>&nbsp;<I>SpinLock</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisInterlockedInsertTailList</B>&nbsp;inserts an entry, usually a packet, at
the tail of a doubly linked list so that access to the list is synchronized in
a multiprocessor-safe way. 
<H3>Parameters</H3>
<DL>
<DT>
<I>ListHead</I>
<DD>
Points to the head of the doubly linked list into which an entry is to be
inserted. 
<BR>
<DT>
<I>ListEntry</I>
<DD>
Points to the entry to be inserted at the end of the list.
<BR>
<DT>
<I>SpinLock</I>
<DD>
Points to a caller-supplied spin lock, used to synchronize access to the list.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisInterlockedInsertTailList</B>&nbsp;returns a pointer to the entry that was
at the tail of the queue before the given entry was inserted. If the queue was
empty, it returns NULL. 
<H3>Comments</H3>
<P>
Before calling <B>NdisInterlockedInsertTailList</B>, a driver must initialize
the variable at <I>ListHead</I>&nbsp;with <B>NdisInitializeListHead</B>&nbsp;and the
variable at <I>SpinLock</I>&nbsp;with <B>NdisAllocateSpinLock</B>. The driver also
must provide resident storage for these variables and for its internal queue. 
<P>
The caller-supplied spin lock prevents any other function from accessing the
driver’s internal queue while <B>NdisInterlockedInsertTailList</B>&nbsp;is
inserting the given entry, even when the driver is running on a multiprocessor
machine. 
<P>
<B>NdisInterlockedInsertTailList</B>&nbsp;raises IRQL to DISPATCH_LEVEL when it
acquires the given spin lock and restores the original IRQL before it returns
control. Consequently, any driver function that calls <B>NdisInterlockedInsertTailList</B>
cannot be pageable code. 
<P>
To convert a returned value back to the address of the inserted entry, a
driver can use the CONTAINING_RECORD macro (see the <I>Kernel-Mode Driver
Reference</I>).
<P>
Callers of <B>NdisInterlockedInsertTailList</B>&nbsp;run at IRQL &lt;=
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_13.htm">NdisAllocateSpinLock</A></B>, <B><A HREF="103ndisx_78.htm">NdisInitializeListHead</A></B>,
<B><A HREF="103ndisx_82.htm">NdisInterlockedInsertHeadList</A></B>,
<B><A HREF="103ndisx_84.htm">NdisInterlockedRemoveHeadList</A></B>
&nbsp;
<P></FONT>
</BODY>
</HTML>
