<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ProtocolReceivePacket</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ProtocolReceivePacket_NR"></A>ProtocolReceivePacket</H2>
<P>
<B>INT</B><BR>
&nbsp; &nbsp; <B>ProtocolReceivePacket(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; <I>ProtocolBindingContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PNDIS_PACKET</B>&nbsp; <I>Packet</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
ProtocolReceivePacket is an optional driver function that processes receive
indications made by underlying driver(s) that call <B>NdisMIndicateReceivePacket</B>
either with packet arrays because the underlying driver supports multipacket
receive indications or with individual packets that have associated
out-of-band information. 
<H3>Parameters</H3>
<DL>
<DT>
<I>ProtocolBindingContext</I>
<DD>
Specifies the handle to a protocol-allocated context area in which the
protocol driver maintains per-binding runtime state. The driver supplied this
handle when it called <B>NdisOpenAdapter</B>. 
<BR>
<DT>
<I>Packet</I>
<DD>
Specifies a pointer to a packet descriptor for the received net packet. NDIS
extracted this pointer from an array of packet descriptor pointers that an
underlying driver passed to <B>NdisMIndicateReceivePacket</B>. 
</DL>
<H3>Comments</H3>
<P>
Any protocol driver that might bind itself to an underlying NIC driver that
supports multipacket receive indications should have a ProtocolReceivePacket
function. Such an underlying driver always indicates full-packet receives.
<P>
A protocol can achieve better performance if it has a ProtocolReceivePacket
function. Such a protocol (or the TDI clients of a highest level protocol) can
hold on to all received data, to which it is given read-only access, specified
at <I>Packet</I>&nbsp;if ProtocolReceivePacket returns a nonzero value. For a
highest level protocol driver, the return value for such an input <I>Packet</I>
descriptor pointer can be a reference count of clients the protocol has
notified about the received net packet by forwarding the input <I>Packet</I>
descriptor. For an intermediate NDIS driver, the return value can be a count
of higher level protocols to which it has made a corresponding indication or
one if the driver tracks the number of higher level protocols to which it
forwards the processed indication. For a highest level protocol that forwards
the input <I>Packet</I>&nbsp;descriptor pointer to some number of interested
clients, each client retains read-only access to the indicated data until the
client calls <B>TdiReturnChainedReceives</B>. An intermediate NDIS driver
retains ownership of the indicated packet until it calls <B>NdisReturnPackets</B>
with <I>Packet</I>&nbsp;as many times as the reference count returned by
ProtocolReceivePacket. 
<P>
ProtocolReceivePacket <I>cannot</I>&nbsp;call <B>NdisReturnPackets</B>. The
protocol must pass the input <I>Packet</I>&nbsp;pointer to <B>NdisReturnPackets</B>
after ProtocolReceivePacket returns control. Consequently,
ProtocolReceivePacket should save the input <I>Packet</I>&nbsp;pointer in the <I>ProtocolBindingContext</I>
area when it will return a nonzero value. The NDIS library maintains the
reference count for such an indicated packet, and the protocol retains
ownership of the packet until it has called <B>NdisReturnPackets</B>&nbsp;with that
packet as many times as the value returned by its ProtocolReceivePacket
function. 
<P>
ProtocolReceivePacket returns zero to relinquish ownership of the given <I>Packet</I>
if the protocol has no current clients or bound higher level protocols
interested in the indicated network packet or if the ProtocolReceivePacket
function copies the data from the given packet and associated out-of-band
block, if any, to protocol-allocated storage itself. When
ProtocolReceivePacket returns zero, NDIS either calls another bound protocol
with the receive indication or returns the given packet descriptor at <I>Packet</I>
to the miniport that made the indication. 
<P>
Any protocol that binds itself to an underlying driver that supplies
out-of-band information for receives must have a ProtocolReceivePacket
function to interpret the miniport-supplied out-of-band information when
processing receive indications. Such a protocol can retrieve the associated
out-of-band information for the given <I>Packet</I>&nbsp;with the appropriate
NDIS_GET_PACKET_<I>XXX</I>&nbsp;macro(s). 
<P>
The ProtocolReceivePacket function of an NDIS intermediate driver cannot
simply forward received indications to still higher-level protocols. Such an
attempt can cause a deadlock. Instead, such a driver must repackage the
indication in a fresh packet descriptor and call <B>NdisIMSwitchToMiniport</B>
to forward the indication from the appropriate context. If <B>NdisIMSwitchToMiniport</B>
returns FALSE, the driver must call <B>NdisIMQueueMiniportCallback</B>&nbsp;and
forward the indication from a protocol-supplied MiniportCallback function. 
<P>
By default, ProtocolReceivePacket runs at IRQL DISPATCH_LEVEL in an arbitrary
thread context. 
<H3>See Also</H3>
<P>
<B><A HREF="103ndisx_11.htm">NdisAllocatePacket</A></B>, <B><A HREF="103ndisx_51.htm">NDIS_GET_PACKET_HEADER_SIZE</A></B>,
<B><A HREF="103ndisx_52.htm">NDIS_GET_PACKET_MEDIA_SPECIFIC_INFO</A></B>,
<B><A HREF="103ndisx_54.htm">NDIS_GET_PACKET_TIME_RECEIVED</A></B>,
<B><A HREF="103ndisx_55.htm">NDIS_GET_PACKET_TIME_SENT</A></B>, <B><A HREF="103ndisx_71.htm">NdisIMQueueMiniportCallback</A></B>,
<B><A HREF="103ndisx_74.htm">NdisIMSwitchToMiniport</A></B>, <B><A HREF="103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>,
<B><A HREF="106nstru_4.htm">NDIS_PACKET</A></B>, <B><A HREF="106nstru_5.htm">NDIS_PACKET_OOB_DATA</A></B>,
<B><A HREF="103ndisx_192.htm">NdisReturnPackets</A></B>, <B><A HREF="104tdlow_5.htm">ProtocolReceive</A></B>,
<B><A HREF="23tdifun_7.htm">TdiReturnChainedReceives</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
