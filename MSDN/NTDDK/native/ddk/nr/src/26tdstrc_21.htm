<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TDI_CONNECTION_INFORMATION</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TDI_CONNECTION_INFORMATION_NR"></A>TDI_CONNECTION_INFORMATION</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _TDI_CONNECTION_INFORMATION {<B>&nbsp;</B>
&nbsp; &nbsp; LONG   UserDataLength;<B>&nbsp;</B>
&nbsp; &nbsp; PVOID  UserData;<B>&nbsp;</B>
&nbsp; &nbsp; LONG   OptionsLength;<B>&nbsp;</B>
&nbsp; &nbsp; PVOID  Options;<B>&nbsp;</B>
&nbsp; &nbsp; LONG   RemoteAddressLength;<B>&nbsp;</B>
&nbsp; &nbsp; PVOID  RemoteAddress;<B>&nbsp;</B>
} TDI_CONNECTION_INFORMATION, *PTDI_CONNECTION_INFORMATION;<B>&nbsp;</B>
<B>&nbsp;</B></FONT></PRE>
<P>
TDI_CONNECTION_INFORMATION defines the structure of information that a
kernel-mode client passes to or receives from the underlying transport for a
subset of the TDI_<I>XXX</I>&nbsp;internal-device-control requests, particularly
those relevant to endpoint-to-endpoint connections. 
<H3>Members</H3>
<DL>
<DT>
<B>UserDataLength</B>
<DD>
Specifies the size in bytes of the buffer at <B>UserData</B>&nbsp;or zero if <B>UserData</B>
is NULL. 
<BR>
<DT>
<B>UserData</B>
<DD>
Points to client-supplied buffer for user data, generally sent or received
when an endpoint-to-endpoint connection is being established or, possibly,
disconnected. 
<BR>
<DT>
<B>OptionsLength</B>
<DD>
Specifies the size in bytes of the buffer at <B>Options</B>. 
<BR>
<DT>
<B>Options</B>
<DD>
Points to a client-supplied buffer, either containing client-supplied data or
awaiting transport-returned data for the given IOCTL request. 
<BR>
<DT>
<B>RemoteAddressLength</B>
<DD>
Specifies the size in bytes of the buffer at <B>RemoteAddress</B>. 
<BR>
<DT>
<B>RemoteAddress</B>
<DD>
Points to a buffer containing a remote-node transport address either specified
by the client or returned by the transport to the client. The syntax of this
address depends on the type of network and/or the underlying transport (see
TA_ADDRESS).
</DL>
<H3>Comments</H3>
<P>
While several <B>TdiBuild</B><I>Xxx</I>&nbsp;macros and the corresponding TDI_<I>XXX</I>
IOCTL requests use this structure to pass information between TDI transports
and their clients, each does not use every member of the
TDI_CONNECTION_INFORMATION structure. 
<P>
As a general rule, a transport does not return any information in this
structure if it returns STATUS_PENDING for a given IOCTL request. Instead, the
driver defers setting the data in this structure until just before it
completes the IRP. 
<H4>Supplying and Receiving UserData</H4>
<P>
After an endpoint-to-endpoint connection is established, a local-node client
can send TSDUs to its remote-node peer by submitting TDI_SEND requests to the
underlying transport. The local-node client can either receive TSDUs from its
remote-node peer by submitting TDI_RECEIVE requests or through calls to its
registered ClientEvent(Chained)Receive(Expedited) handlers. 
<P>
However, until such a connection is established, two TDI clients in the
process of establishing an endpoint-to-endpoint connection can send data to
each other by supplying it in a buffer at <B>UserData</B>&nbsp;with their
TDI_CONNECT, TDI_LISTEN, and, possibly, TDI_ACCEPT requests to their
respective underlying transports. In a similar manner, two such clients also
can supply disconnection data to each other in the process of
controlled-disconnect operation, assuming their respective transports support
controlled disconnections. 
<P>
A client can determine the transport-specific limit on the amount of user data
by submitting a query-information request, set up with <B>TdiBuildQueryInformation</B>
for the <I>QType</I>&nbsp;TDI_QUERY_PROVIDER_INFO. 
<P>
When the client can send user data with a particular TDI IOCTL request, a <B>UserDataLength</B>
set to zero implies that the client has provided no user data in its request
to the transport. When the client can receive user data with a particular TDI
IOCTL request, a <B>UserDataLength</B>&nbsp;set to zero implies that the transport
returned no data in the buffer at <B>UserData</B>. Otherwise, the transport
sets <B>UserDataLength</B>&nbsp;to the number of bytes of data it received for the
client. 
<P>
If the client specifies a nonzero <B>UserDataLength</B>&nbsp;and the transport
receives more data from the remote node than it can fit into the
client-supplied buffer, the transport returns as much data as it can in the
client&#39;s buffer. In this case, the transport completes the operation
normally but returns a status indicating data truncation to its client.
<P>
<B>UserDataLength</B>&nbsp;must be zero and <B>UserData</B>&nbsp;must NULL for the
following TDI_<I>XXX</I>&nbsp;IOCTL requests:
<DL>
<DT>
TDI_RECEIVE_DATAGRAM and TDI_SEND_DATAGRAM
<DD>
The TDI_CONNECTION_INFORMATION structure is used only to specify the
remote-node address for these requests. 
<BR>
<DT>
TDI_LISTEN if the client requests a delayed-connection acceptance
<DD>
Such a client can supply any necessary user data with its subsequent
TDI_ACCEPT request when it accepts a connection offer from a remote-node peer.
</DL>
<P>
When the transport does not allow its clients to supply user data for a
particular TDI IOCTL request, the transport fails all such requests in which a
client specifies a nonzero <B>UserDataLength</B>.
<H4>Using Options and OptionsLength</H4>
<P>
For a TDI_LISTEN request, the <B>OptionsLength</B>&nbsp;is either zero or <B>sizeof(</B>ULONG<B>)</B>
if the client set TDI_QUERY_ACCEPT in the <I>Flags</I>&nbsp;parameter to <B>TdiBuildListen</B>,
and <B>Options</B>&nbsp;is either NULL or the buffer contains TDI_QUERY_ACCEPT. 
<P>
Except for the TDI_LISTEN request, the transport defines the syntax and
semantics of any additional options it supports for its clients, usually along
the following lines: 
<UL>
<LI>
When a client can supply transport-specific information at <B>Options</B>,
setting <B>OptionsLength</B>&nbsp;to zero implies that the underlying driver can
use its default values for options. When the transport can return information
at <B>Options</B>, setting <B>OptionsLength</B>&nbsp;to zero implies that the
client would not use the returned data so the transport should ignore <B>Options</B>.
<P>
<LI>
If such a client sets <B>OptionsLength</B>&nbsp;to a nonzero value, but the
transport receives an option string too large for the client-supplied buffer,
the transport truncates the options string and completes the client&#39;s
request normally with a status that indicates data truncation occurred.
<P>
<LI>
When the client of such a transport uses <B>Options</B>&nbsp;to specify option
values for the driver to transfer, the values the driver actually writes can
be different from the client-specified values.
</UL>
<H4>Using RemoteAddress and RemoteAddressLength</H4>
<P>
Use of these members depends on the TDI_<I>XXX</I>&nbsp;IOCTL and on the size of
the transport-specific address. In general, a local-node client uses <B>RemoteAddress</B>
to specify the target remote-node address when it initiates network-transfer
operations, such as connection offers and sends. The transport returns
information to <B>RemoteAddress</B>&nbsp;when such an operation was initiated at
the remote node, such as to satisfy listen and receive requests. 
<P>
If the client specifies zero for <B>RemoteAddressLength</B>, the transport
assumes <B>RemoteAddress</B>&nbsp;is NULL. If the client specifies a nonzero value
for <B>RemoteAddressLength</B>&nbsp;but the transport has received an address too
long for the client-supplied buffer, the driver function truncates the address
to fit in the client&#39;s buffer. In this case, the transport completes the
operation normally but returns a status code indicating data truncation to the
client.
<H3>See Also</H3>
<P>
<B><A HREF="26tdstrc_1.htm">TA_ADDRESS</A></B>, <B><A HREF="22ioctl_1.htm">TDI_ACCEPT</A></B>,
<B><A HREF="24bldmac_11.htm">TdiBuildQueryInformation</A></B>, <B><A HREF="22ioctl_4.htm">TDI_CONNECT</A></B>,
<B><A HREF="22ioctl_6.htm">TDI_DISCONNECT</A></B>, <B><A HREF="22ioctl_7.htm">TDI_LISTEN</A></B>,
<B><A HREF="22ioctl_10.htm">TDI_RECEIVE_DATAGRAM</A></B>, <B><A HREF="22ioctl_12.htm">TDI_SEND_DATAGRAM</A></B>,
<B><A HREF="22ioctl_14.htm">TDI_SET_INFORMATION</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
