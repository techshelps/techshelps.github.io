<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TdiBuildSetEventHandler</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TdiBuildSetEventHandler_NR"></A>TdiBuildSetEventHandler</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; TdiBuildSetEventHandler (<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PIRP</B>&nbsp; <I>Irp</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DevObj</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PFILE_OBJECT</B>&nbsp; <I>FileObj</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>CompRoutine</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Contxt</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN INT</B>&nbsp; <I>InEventType</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>InEventHandler</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>InEventContext<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>TdiBuildSetEventHandler</B>&nbsp;sets up an internal device control IRP for a
TDI_SET_EVENT_HANDLER request to the underlying transport in which the
local-node client has already opened a file object representing an address.
<H3>Parameters</H3>
<DL>
<DT>
<I>Irp</I>
<DD>
Points to a client-supplied IRP, either originating in a higher level network
component or, usually, allocated with <B>TdiBuildInternalDeviceControlIrp</B>.
<BR>
<DT>
<I>DevObj</I>
<DD>
Points to the device object created by the next lower TDI transport driver.
<BR>
<DT>
<I>FileObj</I>
<DD>
Points to a file object representing an address. 
<BR>
<DT>
<I>CompRoutine</I>
<DD>
Specifies the entry point of a client-supplied IoCompletion routine or NULL.
The I/O Manager calls this routine when the given IRP is completed, unless the
client sets this parameter to NULL. 
<BR>
<DT>
<I>Contxt</I>
<DD>
Points to a client-determined context. This client-supplied pointer is passed
in to the IoCompletion routine when it is called with the completed IRP. <I>Contxt</I>
should be NULL if <I>CompRoutine</I>&nbsp;is NULL.
<BR>
<DT>
<I>InEventType</I>
<DD>
Specifies the type of event handler being registered as one of the following:
<DL>
<DT>
TDI_EVENT_CONNECT
<DD>
Register the given <A HREF="25tdicli_1.htm">ClientEventConnect</A>
handler to be called when an endpoint-to-endpoint connection is offered by a
remote-node peer. 
<BR>
<DT>
TDI_EVENT_DISCONNECT
<DD>
Register the given <A HREF="25tdicli_5.htm">ClientEventDisconnect</A>
handler to be called when an established endpoint-to-endpoint connection is
being closed by the remote-node peer. 
<BR>
<DT>
TDI_EVENT_RECEIVE
<DD>
Register the given <A HREF="25tdicli_7.htm">ClientEventReceive</A>
handler to be called when a normal receive comes in on an endpoint-to-endpoint
connection from the remote node and the client will be given the opportunity
to copy all or part of the buffered TSDU. 
<BR>
<DT>
TDI_EVENT_CHAINED_RECEIVE
<DD>
Register the given <A HREF="25tdicli_2.htm">ClientEventChainedReceive</A>
handler to be called when a normal receive comes in on an endpoint-to-endpoint
connection from the remote node and the client will be given read-only access
to the buffered full TSDU until it calls <B>TdiReturnChainedReceives</B>. 
<BR>
<DT>
TDI_EVENT_RECEIVE_EXPEDITED
<DD>
Register the given <A HREF="25tdicli_9.htm">ClientEventReceiveExpedited</A>
handler to be called when an expedited receive comes in on an
endpoint-to-endpoint connection from the remote node and the client will be
given the opportunity to copy all or part of the buffered TSDU. 
<BR>
<DT>
TDI_EVENT_CHAINED_RECEIVE_EXPEDITED
<DD>
Register the given <A HREF="25tdicli_4.htm">ClientEventChainedReceiveExpedited</A>
handler to be called when an expedited receive comes in on an
endpoint-to-endpoint connection from the remote node and the client will be
given read-only access to the buffered full TSDU until it calls <B>TdiReturnChainedReceives</B>.
<BR>
<DT>
TDI_EVENT_RECEIVE_DATAGRAM
<DD>
Register the given <A HREF="25tdicli_8.htm">ClientEventReceiveDatagram</A>
handler to be called when a datagram comes in from a remote node and the
client will be given the opportunity to copy all or part of the buffered TSDU.
<BR>
<DT>
TDI_EVENT_CHAINED_RECEIVE_DATAGRAM
<DD>
Register the given <A HREF="25tdicli_3.htm">ClientEventChainedReceiveDatagram</A>
handler to be called when a datagram comes in from a remote node and the
client will be given read-only access to the buffered full TSDU until it calls
<B>TdiReturnChainedReceives</B>. 
<BR>
<DT>
TDI_EVENT_ERROR
<DD>
Register the given <A HREF="25tdicli_6.htm">ClientEventError</A>&nbsp;handler
to be called if an error occurs in an underlying driver such that network I/O
on this local-node address has become unreliable or impossible. 
<BR>
<DT>
TDI_EVENT_SEND_POSSIBLE
<DD>
Register the given <A HREF="25tdicli_10.htm">ClientEventSendPossible</A>
handler to be called when the underlying transport, which previously returned
a submitted send request with STATUS_DEVICE_NOT_READY, again has internal
buffer space available into which it can copy the resubmitted client-supplied
data to be sent. 
</DL>
<P>
In addition to the preceding system-defined events, a transport can extend
this interface to support transport-specific notifications of events to its
clients. Such a transport must define TDI_EVENT_<I>XXX</I>&nbsp;codes in which the
most significant bit is set. 
<BR>
<DT>
<I>InEventHandler</I>
<DD>
Specifies the entry point of the ClientEvent<I>Xxx</I>&nbsp;handler being
registered. The client can set this parameter to NULL to cancel notifications
to a previously registered event handler. 
<BR>
<DT>
<I>InEventContext</I>
<DD>
Points to caller-determined context to be passed in to the ClientEvent<I>Xxx</I>
routine when it is called by the transport. This parameter must be NULL if <I>InEventHandler</I>
is NULL. 
</DL>
<H3>Comments</H3>
<P>
When its client first opens a file object that represents an address, the
underlying transport initializes all event handlers to NULL.
<P>
<B>TdiBuildSetEventHandler</B>&nbsp;sets IRP_MJ_INTERNAL_DEVICE_CONTROL as the <B>MajorFunction</B>
and TDI_SET_EVENT_HANDLER as the <B>MinorFunction</B>&nbsp;codes in the
transport&#39;s I/O stack location of the given IRP.
<P>
With each IRP set up by <B>TdiBuildSetEventHandler</B>&nbsp;and submitted to the
underlying transport with <B>IoCallDriver</B>, the client registers one event
handler for a given event type that can occur on a particular transport
address. Indications from lower level NDIS drivers that are forwarded by the
transport to ClientEvent<I>Xxx</I>&nbsp;routines usually occur at IRQL
DISPATCH_LEVEL. For these client-supplied event handlers, the caller should
allocate the area at <I>InEventContext</I>&nbsp;from nonpaged pool. 
<P>
A client can register its ClientEvent(Chained)ReceiveDatagram and
ClientEventError handlers as soon as it has opened a file object representing
an address with a successful call to <B>ZwCreateFile</B>. It can register its
ClientEventConnect handler as soon as it has opened file objects representing
an address and a connection endpoint and made a successful associate-address
request to the underlying transport. 
<P>
For some <I>InEventType</I>&nbsp;values, the address represented by the given file
object should be associated with a connection endpoint by the client before it
registers certain ClientEvent<I>Xxx</I>&nbsp;handlers. In particular, a client
should associate a connection endpoint with a local-node address before it
registers its ClientEvent(Chained)Receive(Expedited), ClientEventDisconnect,
and/or ClientEventSendPossible handlers for network transfers that are made on
a connection-specific basis. Unless its transport supports delayed-connection
acceptances, the client should assume that an endpoint-to-endpoint connection,
already associated with the open file object representing the address, is
active when it makes the set-event-handler request to register any of these
event handlers. 
<P>
Only clients of transports that buffer send data internally can register a
ClientEventSendPossible handler. 
<P>
In general, a TDI transport can indicate an event to a client while an event
of the same kind is in progress. In other words, ClientEventXxx handlers are
re-entrant. The transport also can call ClientEvent(Chained)Receive(Expedited)
or ClientEvent(Chained)Receive(Datagram) before the client&#39;s
set-event-handler IRP to register one of these routines is fully completed.
Consequently, the client must be prepared to handle receives as soon as it
requests the registration of a ClientEvent(Chained)Receive(<I>Xxx</I>)
handler. 
<P>
Calls to registered ClientEvent(Chained)Receive(<I>Xxx</I>) handlers are
disabled whenever the client submits a receive or receive-datagram IRP set up
with <B>TdiBuildReceive</B>&nbsp;or <B>TdiBuildReceiveDatagram</B>&nbsp;to the
underlying transport. After it is called with such an IRP, the underlying
transport carries out all operations necessary to complete that IRP before it
resumes calling registered ClientEvent(Chained)Receive(<I>Xxx</I>) routine(s)
with incoming receive indications. 
<P>
A client can disable any registered event handler by making another
set-event-handler request with the same <I>InEventType</I>&nbsp;but specifying NULL
as the <I>InEventHandler</I>&nbsp;and <I>InEventContext</I>&nbsp;parameters to <B>TdiBuildSetEventHandler</B>.
<H3>See Also</H3>
<P>
<B><A HREF="24bldmac_1.htm">TdiBuildAccept</A></B>, <B><A HREF="24bldmac_3.htm">TdiBuildAssociateAddress</A></B>,
<B><A HREF="24bldmac_4.htm">TdiBuildConnect</A></B>, <B><A HREF="24bldmac_6.htm">TdiBuildDisconnect</A></B>,
<B><A HREF="24bldmac_8.htm">TdiBuildListen</A></B>, <B><A HREF="24bldmac_7.htm">TdiBuildInternalDeviceControlIrp</A></B>,
<B><A HREF="24bldmac_12.htm">TdiBuildReceive</A></B>, <B><A HREF="24bldmac_13.htm">TdiBuildReceiveDatagram</A></B>,
<B><A HREF="22ioctl_13.htm">TDI_SET_EVENT_HANDLER</A></B>, <B><A HREF="23tdifun_7.htm">TdiReturnChainedReceives</A></B>
<P></FONT>
</BODY>
</HTML>
