<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisMRegisterIoPortRange</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisMRegisterIoPortRange_NR"></A>NdisMRegisterIoPortRange</H2>
<P>
<B>NDIS_STATUS <BR>
&nbsp; &nbsp; NdisMRegisterIoPortRange(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; OUT PVOID *</B><I>PortOffset</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp;<I>MiniportAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>InitialPort</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN UINT</B>&nbsp;<I>NumberOfPorts<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisMRegisterIoPortRange</B>&nbsp;sets up driver access to device I/O ports with
the <B>NdisRawReadPort</B><I>Xxx</I>&nbsp;and <B>NdisRawWritePort</B><I>Xxx</I>
functions and claims the range of I/O port addresses in the registry for that
driver’s NIC.
<H3>Parameters</H3>
<DL>
<DT>
<I>PortOffset</I>
<DD>
Specifies a caller-supplied variable in which this function returns the mapped
base virtual address for the given bus-relative I/O port range specified by <I>InitialPort</I>
and <I>NumberOfPorts</I>. 
<BR>
<DT>
<I>MiniportAdapterHandle</I>
<DD>
Specifies the handle input to MiniportInitialize.
<BR>
<DT>
<I>InitialPort</I>
<DD>
Specifies the bus-relative base port address for a range of ports to be
mapped.
<BR>
<DT>
<I>NumberOfPorts</I>
<DD>
Specifies the number of ports in the range to be mapped.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisMRegisterIoPortRange</B>&nbsp;can return one of the following:
<DL>
<DT>
NDIS_STATUS_SUCCESS
<DD>
The given range of I/O ports was mapped successfully so the value at <I>PortOffset</I>
is valid and the mapped range has been claimed in the registry for the NIC. 
<BR>
<DT>
NDIS_STATUS_RESOURCE_CONFLICT
<DD>
An attempt to claim the I/O port range in the registry has failed, possibly
because another driver already claimed the range for its device. <B>NdisMRegisterIoPortRange</B>
logs an error if this occurs. 
<BR>
<DT>
NDIS_STATUS_RESOURCES
<DD>
The port range could not be mapped or NDIS could not allocate resources to
check the registry for hardware-resource conflicts.
<BR>
<DT>
NDIS_STATUS_FAILURE
<DD>
Either the bus type or bus number is out of range or the given <I>InitialPort</I>
and <I>NumberOfPorts</I>&nbsp;were invalid (possibly not within the I/O port space
of the current platform). 
</DL>
<H3>Comments</H3>
<P>
A NIC driver calls <B>NdisMRegisterIoPortRange</B>&nbsp;from its MiniportInitialize
function. MiniportInitialize must call <B>NdisMSetAttributes</B>&nbsp;or <B>NdisMSetAttributesEx</B>
before calling <B>NdisMRegisterIoPortRange</B>. 
<P>
<B>NdisMRegisterIoPortRange</B>&nbsp;maps a bus-relative device address range that
the miniport can use subsequently to access an I/O port range on its NIC by
calling the <B>NdisRaw</B><I>Xxx</I>&nbsp;functions. A successful call claims the
specified range of I/O ports in the registry for the caller’s NIC. 
<P>
Because the parameters passed to the <B>NdisRaw</B><I>Xxx </I>have been
mapped, these functions run significantly faster than the corresponding <B>NdisImmediate..Port</B><I>Xxx</I>.
After a successful call to <B>NdisMRegisterIoPortRange</B>, a miniport cannot
call any of the <B>NdisImmediate..Port</B><I>Xxx</I>&nbsp;functions with either
bus-relative addresses or mapped virtual addresses within such an I/O port
range. 
<P>
If its call to <B>NdisMRegisterIoPortRange</B>&nbsp;fails, MiniportInitialize
should release all resources it already allocated for its NIC and, then, fail
initialization for that NIC. 
<P>
Drivers of NICs with device registers in the host memory space call <B>NdisMMapIoSpace</B>
and, subsequently, the <B>NdisRead/WriteRegister</B><I>Xxx</I>&nbsp;functions to
access the NIC registers. 
<P>
Callers of <B>NdisMRegisterIoPortRange</B>&nbsp;run at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_99.htm">NdisMDeregisterIoPortRange</A></B>,
<B><A HREF="103ndisx_112.htm">NdisMMapIoSpace</A></B>, <B><A HREF="103ndisx_163.htm">NdisRawReadPortBufferUchar</A></B>,
<B><A HREF="103ndisx_164.htm">NdisRawReadPortBufferUlong</A></B>,
<B><A HREF="103ndisx_165.htm">NdisRawReadPortBufferUshort</A></B>,
<B><A HREF="103ndisx_166.htm">NdisRawReadPortUchar</A></B>, <B><A HREF="103ndisx_167.htm">NdisRawReadPortUlong</A></B>,
<B><A HREF="103ndisx_168.htm">NdisRawReadPortUshort</A></B>, <B><A HREF="103ndisx_169.htm">NdisRawWritePortBufferUchar</A></B>,
<B><A HREF="103ndisx_170.htm">NdisRawWritePortBufferUlong</A></B>,
<B><A HREF="103ndisx_171.htm">NdisRawWritePortBufferUshort</A></B>,
<B><A HREF="103ndisx_172.htm">NdisRawWritePortUchar</A></B>, <B><A HREF="103ndisx_173.htm">NdisRawWritePortUlong</A></B>,
<B><A HREF="103ndisx_174.htm">NdisRawWritePortUshort</A></B>, <B><A HREF="103ndisx_181.htm">NdisReadRegisterUchar</A></B>,
<B><A HREF="103ndisx_182.htm">NdisReadRegisterUlong</A></B>, <B><A HREF="103ndisx_183.htm">NdisReadRegisterUshort</A></B>,
<B><A HREF="103ndisx_219.htm">NdisWriteRegisterUchar</A></B>, <B><A HREF="103ndisx_220.htm">NdisWriteRegisterUlong</A></B>,
<B><A HREF="103ndisx_221.htm">NdisWriteRegisterUshort</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
