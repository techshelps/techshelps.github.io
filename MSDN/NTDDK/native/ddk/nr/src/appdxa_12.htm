<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MacDeferredProcessingRoutine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MacDeferredProcessingRoutine_NR"></A>MacDeferredProcessingRoutine</H2>
<P>
<B>VOID<BR>
</B>&nbsp; &nbsp; <B>MacDeferredProcessingRoutine(<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific1</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>InterruptContext</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific2</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific3</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
MacDeferredProcessingRoutine is called to complete interrupt processing that
the driver’s MacInterruptServiceRoutine, which should return control as
quickly as possible, does not. 
<H3>Parameters</H3>
<DL>
<DT>
<I>SystemSpecific1</I>
<DD>
Points to a first OS-specific value. In Windows NT drivers, this pointer is
reserved for use by NDIS. 
<BR>
<DT>
<I>InterruptContext</I>
<DD>
Points to the context that the NIC driver associates with the adapter that
generated the interrupt. The NIC driver provided this context area (<I>MacAdapterContext</I>)
when it called <B>NdisInitializeInterrupt</B>&nbsp;during initialization. 
<BR>
<DT>
<I>SystemSpecific2</I>
<DD>
Points to a second OS-specific value. In Windows NT drivers, this pointer is
reserved. 
<BR>
<DT>
<I>SystemSpecific3</I>
<DD>
Points to a third OS-specific value. In Windows NT drivers, this pointer is
reserved. 
</DL>
<H3>Comments</H3>
<P>
MacDeferredProcessingRoutine runs at a lower hardware priority than
MacInterruptServiceRoutine and typically executes immediately after the ISR
returns control. 
<P>
MacDeferredProcessingRoutine does all the work of interrupt handling except
for determining whether the interrupt belongs to the network interface card
and, if necessary, saving enough interrupt state information for the driver’s
MacDeferredProcessingRoutine to complete the operation that caused the
interrupt. Because it runs at DIRQL, the MacInterruptServiceRoutine handles
only the minimum necessary operations before it returns control. 
<P>
MacDeferredProcessingRoutine must be able to handle processing for any number
of NIC interrupts unless the NIC driver’s MacInterruptServiceRoutine disables
interrupts on the NIC. In such a driver, MacDeferredProcessingRoutine clears
the state of the network interface card and re-enables interrupts, handling
only the most recent device interrupt. 
<P>
If MacDeferredProcessingRoutine shares resources, such as state, with other
nonISR driver functions, it can call <B>NdisDprAcquireSpinLock</B>&nbsp;and <B>NdisDprReleaseSpinLock</B>
to synchronize its access to the shared resources. Like any other driver
function that shares resources with the ISR, MacDeferredProcessingRoutine must
call <B>NdisSynchronizeWithInterrupt</B>&nbsp;when it needs to access resources
shared with MacInterruptServiceRoutine. 
<P>
MacDeferredProcessingRoutine runs at IRQL DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="appdxa_4.htm">MacAddAdapter</A></B>, <B><A HREF="appdxa_13.htm">MacInterruptServiceRoutine</A></B>,
<B><A HREF="appdxa_21.htm">MacSynchronizeFunction</A></B>, <B><A HREF="101mini_7.htm">MiniportHandleInterrupt</A></B>,
<B><A HREF="103ndisx_29.htm">NdisDprAcquireSpinLock</A></B>, <B><A HREF="103ndisx_34.htm">NdisDprReleaseSpinLock</A></B>,
<B><A HREF="appdxa_83.htm">NdisInitializeInterrupt</A></B>, <B><A HREF="appdxa_96.htm">NdisRegisterAdapter</A></B>,
<B><A HREF="appdxa_104.htm">NdisSynchronizeWithInterrupt</A></B>
<P></FONT>
</BODY>
</HTML>
