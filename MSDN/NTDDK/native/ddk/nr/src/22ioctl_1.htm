<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TDI_ACCEPT</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TDI_ACCEPT_NR"></A>TDI_ACCEPT</H2>
<P>
When a kernel-mode client makes a TDI_ACCEPT request, it asks the underlying
TDI transport driver to accept an incoming connection offer from a remote-node
peer and, thereby, to enable network data transfers on the
endpoint-to-endpoint connection between that local-node client and its
remote-node peer. 
<H3>IRP</H3>
<P>
The transport calls <B>IoGetCurrentIrpStackLocation</B>&nbsp;with the given <I>Irp</I>
to get a pointer to its own I/O stack location in the IRP, shown in the
following list as <B>IrpSp</B>. IRP members relevant to this request include
the following:
<DL>
<DT>
<B>IoStatus.Status</B>
<DD>
Specifies the final status of the accept request. The transport sets this
member before it completes the IRP, possibly to one of the following:
<P>
STATUS_SUCCESS <BR>
STATUS_INVALID_CONNECTION
<BR>
<DT>
<B>IrpSp-&gt;MajorFunction</B>
<DD>
Specifies IRP_MJ_INTERNAL_DEVICE_CONTROL. The transport can ignore this member
if it exports a TdiDispatchInternalDeviceControl routine that handles only
TDI_<I>XXX</I>&nbsp;requests. 
<BR>
<DT>
<B>IrpSp-&gt;MinorFunction</B>
<DD>
Specifies TDI_ACCEPT.
<BR>
<DT>
<B>IrpSp-&gt;FileObject</B>
<DD>
Points to an open file object representing the connection endpoint at which a
listen request has completed. The transport uses the <B>FsContext</B>&nbsp;and,
possibly, <B>FsContext2</B>&nbsp;fields to access the state it maintains about this
connection. 
<BR>
<DT>
<B>IrpSp-&gt;Parameters</B>
<DD>
Specifies a TDI_REQUEST_KERNEL_ACCEPT structure, defined as follows:
<PRE><FONT FACE="Courier" SIZE="2">struct _TDI_REQUEST_KERNEL_ACCEPT {<B>&nbsp;</B>
&nbsp; &nbsp; PTDI_CONNECTION_INFORMATION RequestConnectionInformation;<B>&nbsp;</B>
&nbsp; &nbsp; PTDI_CONNECTION_INFORMATION ReturnConnectionInformation;<B>&nbsp;</B>
} TDI_REQUEST_KERNEL_ACCEPT, *PTDI_REQUEST_KERNEL_ACCEPT;<B>&nbsp;</B>
<B>&nbsp;</B></FONT></PRE>
<P>
The transport uses the members of this structure as follows:
<DL>
<DT>
<B>RequestConnectionInformation</B>
<DD>
Points to a TDI_CONNECTION_INFORMATION structure, possibly containing
connection information supplied by the client. This information can include a
pointer (in the <B>UserData</B>&nbsp;member) to a buffer of client-supplied accept
data to be sent to the remote node when the transport notifies the remote-node
transport that the offered connection is accepted. 
<BR>
<DT>
<B>ReturnConnectionInformation</B>
<DD>
Points to a client-supplied variable of type TDI_CONNECTION_INFORMATION in
which the transport returns connection information, if any, to the client.
This member is NULL if the transport does not return information for
delayed-connection acceptances.
</DL>
</DL>
<H3>Comments</H3>
<P>
In normal operation, a client submits an accept request in response to a
return from a preceding listen request in which it set the TDI_QUERY_ACCEPT
flag. If the client did not set this flag in its TDI_LISTEN request for this
connection, the transport should fail this accept request.
<P>
The transport can call already registered
ClientEvent(Chained)Receive(Expedited) handler(s) with incoming receive(s)
from the remote node on this connection before the I/O Manager formally
completes its processing of the client&#39;s accept IRP.
<P>
Most TDI transport drivers have a time-out feature to prevent communication
sequences from hanging when a remote node is not responding. Therefore, a TDI
client must either accept or reject a connection as soon as possible after
completion of its listen request. As a general rule, a transport-determined
time-out interval between client notification of an offered connection and the
local-node client&#39;s connection acceptance or rejection should be less than
one second.
<P>
<B>TdiBuildAccept</B>&nbsp;is the macro a client uses to fill in this IRP.
<H3>See Also</H3>
<P>
<B><A HREF="25tdicli_2.htm">ClientEventChainedReceive</A></B>, <B><A HREF="25tdicli_4.htm">ClientEventChainedReceiveExpedited</A></B>,
<B><A HREF="25tdicli_7.htm">ClientEventReceive</A></B>, <B><A HREF="25tdicli_9.htm">ClientEventReceiveExpedited</A></B>,
<B><A HREF="24bldmac_1.htm">TdiBuildAccept</A></B>, <B><A HREF="26tdstrc_21.htm">TDI_CONNECTION_INFORMATION</A></B>,
<B><A HREF="21tddisp_6.htm">TdiDispatchInternalDeviceControl</A></B>,
<B><A HREF="22ioctl_7.htm">TDI_LISTEN</A></B>, <B><A HREF="22ioctl_9.htm">TDI_RECEIVE</A></B>
<P></FONT>
</BODY>
</HTML>
