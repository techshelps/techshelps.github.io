<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NdisReadPciSlotInformation</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_NdisReadPciSlotInformation_NR"></A>NdisReadPciSlotInformation</H2>
<P>
<B>ULONG <BR>
&nbsp; &nbsp; NdisReadPciSlotInformation(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN NDIS_HANDLE</B>&nbsp;<I>NdisAdapterHandle</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>SlotNumber</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>Offset</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp;<I>Buffer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG<I>&nbsp;</B>Length<BR>
</I>&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>NdisReadPciSlotInformation</B>&nbsp;returns bus-specific PCI configuration
information from the PCI configuration space for a device at a particular slot
on the bus.
<H3>Parameters</H3>
<DL>
<DT>
<I>NdisAdapterHandle</I>
<DD>
Specifies the <I>MiniportAdapterHandle</I>&nbsp;passed in to MiniportInitialize and
to most other Miniport<I>Xxx</I>&nbsp;functions.
<BR>
<DT>
<I>SlotNumber</I>
<DD>
Specifies the slot number of a NIC on the I/O bus.
<BR>
<DT>
<I>Offset</I>
<DD>
Specifies the byte offset within the PCI configuration space at which to begin
transferring the configuration information.
<BR>
<DT>
<I>Buffer</I>
<DD>
Points to a caller-allocated buffer in which to return the requested
configuration information. 
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the size in bytes of the buffer at <I>Buffer</I>&nbsp;and, therefore, how
many bytes of configuration information to return.
</DL>
<H3>Return Value</H3>
<P>
<B>NdisReadPciSlotInformation</B>&nbsp;returns how many bytes of configuration
information it returned at <I>Buffer</I>. 
<H3>Comments</H3>
<P>
<B>NdisReadPciSlotInformation</B>&nbsp;helps a driver find a NIC that it supports
on a PCI bus. When it does, the driver can call <B>NdisMPciAssignResources</B>
to determine the bus-relative configuration parameters it can use in
subsequent calls to other <B>Ndis</B><I>Xxx</I>&nbsp;configuration functions, such
as <B>NdisMRegisterInterrupt</B>, <B>NdisMMapIoSpace</B>, and/or <B>NdisMRegisterIoPortRange</B>.
<P>
<B>NdisReadPciSlotInformation</B>&nbsp;returns the same bus-relative PCI
configuration information as <B>NdisImmediateReadPciSlotInformation</B>.
However, callers of <B>NdisReadPciSlotInformation</B>&nbsp;pass the <I>MiniportAdapterHandle</I>
passed to the MiniportInitialize function, rather than the <I>WrapperConfigurationContext</I>
handle. 
<P>
The caller is responsible for releasing the memory at <I>Buffer</I>&nbsp;when the
driver has consumed the configuration information with <B>NdisFreeMemory</B>. 
<P>
Miniport drivers call this function from their MiniportInitialize functions. 
<P>
Callers of <B>NdisReadPciSlotInformation</B>&nbsp;can run at IRQL &lt;=
DISPATCH_LEVEL. Usually, callers are running at IRQL PASSIVE_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_8.htm">MiniportInitialize</A></B>, <B><A HREF="103ndisx_39.htm">NdisFreeMemory</A></B>,
<B><A HREF="103ndisx_112.htm">NdisMMapIoSpace</A></B>, <B><A HREF="103ndisx_117.htm">NdisMPciAssignResources</A></B>,
<B><A HREF="103ndisx_123.htm">NdisMRegisterInterrupt</A></B>, <B><A HREF="103ndisx_124.htm">NdisMRegisterIoPortRange</A></B>,
<B><A HREF="103ndisx_129.htm">NdisMSetAttributes</A></B>, <B><A HREF="103ndisx_130.htm">NdisMSetAttributesEx</A></B>,
<B><A HREF="103ndisx_149.htm">NdisOpenConfiguration</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
