<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DriverEntry of NDIS Full-NIC Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DriverEntry_of_NDIS_Full_NIC_Drivers_NR"></A>DriverEntry of NDIS Full-NIC Drivers</H2>
<P>
<B>ULONG</B><BR>
&nbsp; &nbsp; <B>DriverEntry(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific1</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>SystemSpecific2</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>&nbsp;
<P>
<B>DriverEntry</B>&nbsp;is the initial entry point for Windows NT NDIS drivers,
called automatically when the driver is loaded by the system. 
<H3>Parameters</H3>
<DL>
<DT>
<I>SystemSpecific1</I>
<DD>
Points to an OS-specific argument. For Windows NT drivers, this parameter is a
<I>DriverObject</I>&nbsp;pointer. 
<BR>
<DT>
<I>SystemSpecific2</I>
<DD>
Points to an OS-specific argument. For Windows NT drivers, this parameter is a
<I>RegistryPath</I>&nbsp;pointer. 
</DL>
<H3>Return Value</H3>
<P>
The <B>DriverEntry</B>&nbsp;function of a full-NIC driver usually returns the value
returned by <B>NdisRegisterMac</B>. 
<H3>Comments</H3>
<P>
<B>DriverEntry</B>&nbsp;first must call <B>NdisInitializeWrapper</B>, passing the
pointers it was given as parameters to <B>NdisInitializeWrapper</B>. The
returned <I>NdisWrapperHandle</I>&nbsp;is a required parameter for its subsequent
call to <B>NdisRegisterMac</B>. 
<P>
Next, <B>DriverEntry</B>&nbsp;calls <B>NdisRegisterMac</B>. If its call to <B>NdisRegisterMac</B>
returns something other than NDIS_STATUS_SUCCESS, the driver will not remain
loaded after <B>DriverEntry</B>&nbsp;returns control. 
<P>
If <B>NdisRegisterMac</B>&nbsp;returns something other than NDIS_STATUS_SUCCESS, <B>DriverEntry</B>
calls <B>NdisTerminateWrapper</B>&nbsp;and returns control with the error
NDIS_STATUS_<I>XXX</I>&nbsp;returned by <B>NdisRegisterMac</B>&nbsp;or, possibly, with
the general error NDIS_STATUS_FAILURE. 
<P>
Otherwise, <B>DriverEntry</B>&nbsp;returns control with NDIS_STATUS_SUCCESS, and
the driver’s MacAddAdapter function is called next to initialize and configure
each NIC the driver supports. 
<P>
<B>DriverEntry</B>&nbsp;runs at IRQL PASSIVE_LEVEL in the context of a system
thread. 
<H3>See Also</H3>
<P>
<B><A HREF="101mini_1.htm">DriverEntry of NDIS
Miniport Drivers</A></B>, <B><A HREF="appdxa_4.htm">MacAddAdapter</A></B>, <B><A HREF="appdxa_85.htm">NdisInitializeWrapper</A></B>,
<B><A HREF="appdxa_98.htm">NdisRegisterMac</A></B>, <B><A HREF="103ndisx_209.htm">NdisTerminateWrapper</A></B>
<P></FONT>
</BODY>
</HTML>
