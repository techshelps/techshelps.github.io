<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HalGetAdapter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HalGetAdapter_KR"></A>HalGetAdapter</H2>
<P>
<B>PADAPTER_OBJECT <BR>
&nbsp; &nbsp; HalGetAdapter(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_DESCRIPTION</B>&nbsp; <I>DeviceDescription</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PULONG</B>&nbsp; <I>NumberOfMapRegisters</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>HalGetAdapter</B>&nbsp;returns a pointer to the adapter object for the DMA
device defined in the device description structure.
<H3>Parameters</H3>
<DL>
<DT>
<I>DeviceDescription</I>
<DD>
Points to the following structure that describes the attributes of the device.
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _DEVICE_DESCRIPTION {
&nbsp; &nbsp; ULONG Version;
&nbsp; &nbsp; &nbsp; &nbsp; //Currently, DEVICE_DESCRIPTION_VERSION or
&nbsp; &nbsp; &nbsp; &nbsp; //DEVICE_DESCRIPTION_VERSION1 to use IgnoreCount
&nbsp; &nbsp; BOOLEAN Master;
&nbsp; &nbsp; &nbsp; &nbsp; //TRUE = busmaster adapter
&nbsp; &nbsp; &nbsp; &nbsp; //FALSE = slave DMA device
&nbsp; &nbsp; BOOLEAN ScatterGather;
&nbsp; &nbsp; &nbsp; &nbsp; //Device supports scatter/gather
&nbsp; &nbsp; BOOLEAN DemandMode;
&nbsp; &nbsp; &nbsp; &nbsp; //Uses system DMA controller&#39;s demand mode
&nbsp; &nbsp; BOOLEAN AutoInitialize;
&nbsp; &nbsp; &nbsp; &nbsp; //Uses system DMA controller&#39;s autoinit mode
&nbsp; &nbsp; BOOLEAN Dma32BitAddresses;
&nbsp; &nbsp; BOOLEAN IgnoreCount;
&nbsp; &nbsp; &nbsp; &nbsp; //DMA controller in this platform does not maintain 
&nbsp; &nbsp; &nbsp; &nbsp; //an accurate transfer counter, so requires workaround, 
&nbsp; &nbsp; &nbsp; &nbsp; //and Version must be DEVICE_DESCRIPTION_VERSION1
&nbsp; &nbsp; BOOLEAN Reserved1;
&nbsp; &nbsp; BOOLEAN Reserved2;
&nbsp; &nbsp; &nbsp; &nbsp; //Preceding Reserved members must be FALSE, and
&nbsp; &nbsp; &nbsp; &nbsp; //Version must be DEVICE_DESCRIPTION_VERSION1
&nbsp; &nbsp; ULONG BusNumber;
&nbsp; &nbsp; &nbsp; &nbsp; //System-assigned value for I/O bus
&nbsp; &nbsp; ULONG DmaChannel;
&nbsp; &nbsp; &nbsp; &nbsp; //Slave device attached to this number channel
&nbsp; &nbsp; INTERFACE_TYPE InterfaceType;
&nbsp; &nbsp; DMA_WIDTH DmaWidth;    // 8-bit, 16-bit, etc.
&nbsp; &nbsp; DMA_SPEED DmaSpeed;
&nbsp; &nbsp; ULONG MaximumLength;
&nbsp; &nbsp; &nbsp; &nbsp; //max number of bytes device can handle per DMA operation
&nbsp; &nbsp; ULONG DmaPort;
&nbsp; &nbsp; &nbsp; &nbsp; //MicroChannel-type bus port number
} DEVICE_DESCRIPTION, *PDEVICE_DESCRIPTION;
</FONT></PRE>
<DT>
<I>NumberOfMapRegisters</I>
<DD>
Returns the maximum number of map registers the device driver can allocate for
any DMA transfer operation. The <B>MaximumLength</B>&nbsp;specified in the <I>DeviceDescription</I>
effectively constrains the input value to no more than (<B>MaximumLength</B>&nbsp;/
PAGE_SIZE + 1). On return, the updated value of this parameter can be less
than the maximum possible input value.
</DL>
<H3>Return Value</H3>
<P>
<B>HalGetAdapter</B>&nbsp;returns a pointer to the requested adapter object, or it
returns NULL if an adapter object could not be created.
<H3>Comments</H3>
<P>
The caller should fill in values for all members of the device-description
structure that are pertinent to its device. All other members must be set to
zero before calling <B>HalGetAdapter</B>.
<P>
The <B>InterfaceType</B>&nbsp;specifies the bus interface. Its value can be one of
the following: <B>Internal</B>, <B>Isa</B>, <B>Eisa</B>, <B>MicroChannel</B>, <B>TurboChannel,</B>
or <B>PCIBus</B>. However, additional types of buses will be supported in
future versions of Windows NT. The upper bound on the types of buses supported
is always <B>MaximumInterfaceType</B>. 
<P>
The <B>DmaWidth</B>&nbsp;specifies one of the following: <B>Width8Bits</B>, <B>Width16Bits</B>,
or <B>Width32Bits</B>. The <B>DmaSpeed</B>&nbsp;specifies one of the following: <B>Compatible</B>,
<B>TypeA</B>, <B>TypeB</B>, or <B>TypeC</B>.
<P>
Setting <B>Version</B>&nbsp;to DEVICE_DESCRIPTION_VERSION1 and <B>IgnoreCount</B>
to TRUE indicates that the current platform’s DMA controller cannot be relied
on to maintain an accurate transfer counter. In platforms with such a DMA
controller, the HAL ignores the DMA counter but must take extra precautions to
maintain data integrity during transfer operations. Using this workaround to
compensate for such a deficient DMA controller degrades the speed of DMA
transfers. 
<P>
A successful caller must save the returned adapter object pointer in resident
memory because this pointer is a required parameter to the DMA support
routines. Usually, device drivers save this pointer in their device
extensions. 
<P>
<B>HalGetAdapter</B>&nbsp;must only be called during initialization when the caller
is running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k103_1.htm">HalAllocateCommonBuffer</A></B>, <B><A HREF="k103_8.htm">HalGetDmaAlignmentRequirement</A></B>,
<B><A HREF="k104_2.htm">IoAllocateAdapterChannel</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
