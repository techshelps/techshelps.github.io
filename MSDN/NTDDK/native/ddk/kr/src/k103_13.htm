<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HalSetBusDataByOffset</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HalSetBusDataByOffset_KR"></A>HalSetBusDataByOffset</H2>
<P>
<B>ULONG <BR>
&nbsp; &nbsp; HalSetBusDataByOffset(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BUS_DATA_TYPE</B>&nbsp; <I>BusDataType</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>BusNumber</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>SlotNumber</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Buffer</I><B>,<BR>
</B><I>&nbsp; &nbsp; &nbsp; &nbsp; </I><B>IN ULONG  </B><I>Offset</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Length</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>HalSetBusDataByOffset</B>&nbsp;sets bus-configuration data for a device on a
dynamically configurable I/O bus with a published, standard interface.
<H3>Parameters</H3>
<DL>
<DT>
<I>BusDataType</I>
<DD>
Specifies the type of bus data to be set. Currently, its value can be the
following: <B>PCIConfiguration</B>. However, additional types of bus
configuration will be supported in future versions of Windows NT. The upper
bound on the bus types supported is always <B>MaximumBusDataType</B>.
<BR>
<DT>
<I>BusNumber</I>
<DD>
Specifies the zero-based and system-assigned number of the bus in systems with
more than one bus of the same <I>BusDataType</I>.
<BR>
<DT>
<I>SlotNumber</I>
<DD>
Specifes the logical slot number. When <B>PCIConfiguration</B>&nbsp;is specified,
this is a PCI_SLOT_NUMBER-type value.
<BR>
<DT>
<I>Buffer</I>
<DD>
Points to a caller-supplied buffer with configuration information specific to <I>BusDataType</I>.
<P>
When <B>PCIConfiguration</B>&nbsp;is specified, the buffer contains some or all of
the PCI_COMMON_CONFIG information for the given <I>SlotNumber</I>. The
specified <I>Offset</I>&nbsp;and <I>Length</I>&nbsp;determine how much information is
supplied. Certain members of PCI_COMMON_CONFIG have read-only values, and the
caller is responsible for preserving the system-supplied values of read-only
members.
<BR>
<DT>
<I>Offset</I>
<DD>
Specifies the byte offset in the PCI_COMMON_CONFIG structure at which the
caller-supplied configuration values begin. Callers can use the system-defined
constant PCI_COMMON_HDR_LENGTH to specify the device-specific area of
PCI_COMMON_CONFIG.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the number of bytes in the <I>Buffer</I>.
</DL>
<H3>Return Value</H3>
<P>
<B>HalSetBusDataByOffset</B>&nbsp;returns the number of bytes of data successfully
set for the given <I>SlotNumber</I>. If the given <I>BusDataType</I>&nbsp;is not
valid for the current platform or if the supplied information is invalid, this
routine returns zero.
<H3>Comments</H3>
<P>
Callers of <B>HalAssignSlotResources</B>&nbsp;or <B>IoAssignResources</B>&nbsp;seldom
call <B>HalSetBusDataByOffset</B>&nbsp;or <B>HalSetBusData</B>, because each of
these <I>Xx</I><B>Assign</B><I>Xxx</I>&nbsp;routines sets up the configuration
information for the given <I>SlotNumber</I>&nbsp;and returns the information to the
caller. However, a driver can call <B>HalSetBusDataByOffset</B>&nbsp;or <B>HalSetBusData</B>
if unusual circumstances or the nature of its device requires such a call. For
example, a driver might call either of these routines to clear a bit in the
PCI status register if its device signals a target abort during
initialization.
<P>
When accessing the device-specific area of the PCI configuration space, <B>HalSetBusDataByOffset
</B>guarantees the following:
<UL>
<LI>
This routine never reads or writes data outside the range specified by the
input <I>Offset</I>&nbsp;and <I>Length</I>.
<P>
<LI>
Even if the input <I>Length</I>&nbsp;is exactly a byte or a (two-byte) word, this
routine never accesses any data outside the requested range.
</UL>
<P>
If the input <I>BusDataType</I>&nbsp;is <B>PCIConfiguration</B>, callers of <B>HalSetBusDataByOffset</B>
can be running at IRQL &lt;= DISPATCH_LEVEL. Otherwise, callers of <B>HalSetBusDataByOffset</B>
must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k103_2.htm">HalAssignSlotResources</A></B>, <B><A HREF="k103_6.htm">HalGetBusData</A></B>,
<B><A HREF="k103_7.htm">HalGetBusDataByOffset</A></B>, <B><A HREF="k103_14.htm">HalTranslateBusAddress</A></B>,
<B><A HREF="k104_8.htm">IoAssignResources</A></B>, <A HREF="k112_36.htm">PCI_COMMON_CONFIG</A>,
<A HREF="k112_37.htm">PCI_SLOT_NUMBER</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
