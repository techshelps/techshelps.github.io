<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HwScsiEnableInterruptsCallback</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HwScsiEnableInterruptsCallback_KR"></A>HwScsiEnableInterruptsCallback</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; HwScsiEnableInterruptsCallback(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>DeviceExtension</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
HwScsiEnableInterruptsCallback is called after a miniport’s HwScsiInterrupt
routine disables interrupts on the HBA and calls <B>ScsiPortNotification </B>with
the <I>NotificationType</I>&nbsp;<B>CallEnableInterrupts</B>. Miniport drivers of
HBAs that require interrupt processing that takes more than 50 microseconds in
the ISR should have a pair of HwScsi..InterruptsCallback routines.
<H3>Parameters</H3>
<DL>
<DT>
<I>DeviceExtension</I>
<DD>
Points to the miniport driver’s per-HBA storage area.
</DL>
<H3>Return Value</H3>
<P>
HwScsiEnableInterruptsCallback returns TRUE.
<H3>Comments</H3>
<P>
All system interrupts are enabled when the HwScsiEnableInterruptsCallback
routine gets control, except for interrupts from the HBA. Because the
miniport’s HwScsiInterrupt routine disables interrupts on the HBA before it
calls <B>ScsiPortNotification</B>, the HwScsiEnableInterruptsCallback routine
should be optimized to run as quickly as possible.
<P>
HwScsiEnableInterruptsCallback is responsible for completing the
interrupt-driven I/O processing deferred by the HwScsiInterrupt routine, using
the information it saved in the <I>DeviceExtension</I>. That is,
HwScsiEnableInterruptsCallback completes the request that caused the interrupt
to occur.
<P>
Then, HwScsiEnableInterruptsCallback calls <B>ScsiPortNotification</B>&nbsp;again
with the <I>NotificationType</I>&nbsp;<B>CallDisableInterrupts</B>&nbsp;before it
returns control.
<H3>See Also</H3>
<P>
<A HREF="k302_3.htm">HwScsiDisableInterruptsCallback</A>,
<A HREF="k302_8.htm">HwScsiInterrupt</A>, <B><A HREF="k301_17.htm">ScsiPortNotification</A></B>
<P></FONT>
</BODY>
</HTML>
