<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 3  I/O Requests for Beep Device Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_I_O_Requests_for_Beep_Device_Drivers_KR"></A>Chapter 3  I/O Requests for Beep Device Drivers</H1>
<P>
Any replacement for the system beep driver must handle the following requests:
<H2>IRP_MJ_CREATE</H2>
<H3>Operation</H3>
<P>
Returns STATUS_SUCCESS, indicating that the device exists.
<H3>When Called</H3>
<P>
An application or higher-level driver has opened the file object representing
the beep device.
<H3>I/O Status Block</H3>
<P>
Always sets <B>Status</B>&nbsp;to STATUS_SUCCESS and <B>Information</B>&nbsp;to zero.
<H2>IRP_MJ_CLEANUP</H2>
<H3>Operation</H3>
<P>
Cancels every IRP currently in the device queue for the target device object,
setting STATUS_CANCELLED in each IRP’s I/O status block and completing each
queued IRP before completing the cleanup request. (The next request will be a
close request.)
<H3>When Called</H3>
<P>
An application, subsystem, or higher-level driver with a handle for the file
object representing the beep device has relinquished the handle or has been
canceled.
<H3>I/O Status Block</H3>
<P>
Sets <B>Status</B>&nbsp;to STATUS_SUCCESS and <B>Information</B>&nbsp;to zero for the
cleanup request.
<H2>IRP_MJ_CLOSE</H2>
<H3>Operation</H3>
<P>
Returns STATUS_SUCCESS.
<H3>When Called</H3>
<P>
Following a cleanup request.
<H3>I/O Status Block</H3>
<P>
Always sets <B>Status</B>&nbsp;to STATUS_SUCCESS and <B>Information</B>&nbsp;to zero.
<H2>IRP_MJ_DEVICE_CONTROL</H2>
<H3>Operation</H3>
<P>
Causes the device to emit a beep.
<H3>When Called</H3>
<P>
Any time after the successful completion of a create request. A Win32
application, VDM, Console Manager, or the Windows NT subsystem has called <B>DeviceIoControl</B>
to request a beep.
<H3>Input</H3>
<P>
The I/O control code in the I/O stack location at <B>Parameters.DeviceIoControl.IoControlCode</B>
is IOCTL_BEEP_SET, the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>
contains BEEP_SET_PARAMETERS data (frequency and duration), and the I/O stack
location contains the size in bytes of the input buffer at <B>Parameters.DeviceIoControl.InputBufferLength</B>.
<H3>Output</H3>
<P>
None
<H3>I/O Status Block</H3>
<P>
Always sets <B>Information</B>&nbsp;to zero, whether <B>Status</B>&nbsp;is set to
STATUS_SUCCESS, to STATUS_CANCELLED, or to STATUS_INVALID_PARAMETER if the
input frequency or duration is invalid or missing.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
