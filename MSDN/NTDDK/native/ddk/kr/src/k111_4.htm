<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ZwCreateKey</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ZwCreateKey_KR"></A>ZwCreateKey</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ZwCreateKey(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PHANDLE</B>&nbsp; <I>KeyHandle</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ACCESS_MASK</B>&nbsp; <I>DesiredAccess</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN POBJECT_ATTRIBUTES</B>&nbsp; <I>ObjectAttributes</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>TitleIndex</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PUNICODE_STRING</B>&nbsp; <I>Class</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* optional*/<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>CreateOptions</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PULONG</B>&nbsp; <I>Disposition</I>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* optional*/<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ZwCreateKey</B>&nbsp;opens an existing key or creates a new key in the registry.
<H3>Parameters</H3>
<DL>
<DT>
<I>KeyHandle</I>
<DD>
Points to a returned handle for a newly created or existing key if this call
is successful.
<BR>
<DT>
<I>DesiredAccess</I>
<DD>
Specifies the type of access that the caller requires to the key. The set of
system-defined <I>DesiredAccess</I>&nbsp;flags determines the following specific
access rights for key objects:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>DesiredAccess Flags</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_QUERY_VALUE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Value entries for the key can be read.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_SET_VALUE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Value entries for the key can be written.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_CREATE_SUB_KEYS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Subkeys for the key can be created.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_ENUMERATE_SUB_KEYS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
All subkeys for the key can be read.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_NOTIFY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
This flag is irrelevant to device and intermediate drivers, and to other
kernel-mode code.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_CREATE_LINK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
A symbolic link to the key can be created. This flag is irrelvant to device
and intermediate drivers.
</FONT></TABLE>
<P>
Callers of <B>ZwCreateKey</B>&nbsp;can specify one or a compatible combination of
the following for any key object:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>DesiredAccess to Key Values</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Maps to </B><I>DesiredAccess</I><B>&nbsp;Flags</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_READ
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STANDARD_RIGHTS_READ, KEY_QUERY_VALUE, KEY_ENUMERATE_SUB_KEYS, and KEY_NOTIFY
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_WRITE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STANDARD_RIGHTS_WRITE, KEY_SET_VALUE, and KEY_CREATE_SUBKEY
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_EXECUTE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_READ. This value is irrelevant to device and intermediate drivers.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
KEY_ALL_ACCESS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STANDARD_RIGHTS_ALL, KEY_QUERY_VALUE, KEY_SET_VALUE, KEY_CREATE_SUB_KEY,
KEY_ENUMERATE_SUBKEY, KEY_NOTIFY and KEY_CREATE_LINK
</FONT></TABLE>
<P>
The STANDARD_RIGHTS_<I>XXX</I>&nbsp;are predefined system values used to enforce
security on system objects.
<BR>
<DT>
<I>ObjectAttributes</I>
<DD>
Points to the initialized object attributes of the key being opened or
created. An <B>ObjectName</B>&nbsp;string for the key must be specified. If a <B>RootDirectory</B>
handle also is supplied, the given name is relative to the key represented by
the handle. Any given name must be within the object name space allocated to
the registry, meaning that all names must begin with <B>\Registry</B>. <B>RootHandle,</B>
if present, must be a handle to the root directory object, to <B>\Registry</B>,
or to a key under <B>\Registry</B>.
<BR>
<DT>
<I>TitleIndex</I>
<DD>
Device and intermediate drivers should set this parameter to zero.
<BR>
<DT>
<I>Class</I>
<DD>
Points to the object class of the key. To the Configuration Manager, this is
just a Unicode string.
<BR>
<DT>
<I>CreateOptions</I>
<DD>
Specifies options to be applied when creating a key, as a compatible
combination of the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_OPTION_VOLATILE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Key is not to be stored across boots.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_OPTION_NON_VOLATILE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Key is preserved when the system is rebooted.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_OPTION_CREATE_LINK
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The created key is a symbolic link. This value is irrelevant to device and
intermediate drivers.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_OPTION_BACKUP_RESTORE
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Key is being opened or created with special privileges allowing backup/restore
operations. This value is irrelevant to device and intermediate drivers.
</FONT></TABLE>
<DT>
<I>Disposition</I>
<DD>
Points to a variable that receives a value indicating whether a new key was
created in the <B>\Registry</B>&nbsp;tree or an existing one opened:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_CREATED_NEW_KEY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
A new key object was created.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
REG_OPENED_EXISTING_KEY
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
An existing key object was opened.
</FONT></TABLE>
</DL>
<H3>Return Value</H3>
<P>
<B>ZwCreateKey</B>&nbsp;returns STATUS_SUCCESS if the given key was created or
opened.
<H3>Comments</H3>
<P>
If the key specified by <I>ObjectAttributes</I>&nbsp;does not exist, an attempt is
made to create it. For this attempt to succeed, the new key must be a direct
subkey of the key referred to by <I>KeyHandle</I>, and the given <I>KeyHandle</I>
must have been opened for KEY_CREATE_SUB_KEY access.
<P>
If the specified key already exists, it is opened and its value is not
affected in any way.
<P>
The security attributes specified by <I>ObjectAttributes</I>&nbsp;when a key is
created determine whether the specified <I>DesiredAccess</I>&nbsp;is granted on
subsequent calls to <B>ZwCreateKey</B>&nbsp;and <B>ZwOpenKey</B>.
<P>
Callers of <B>ZwCreateKey</B>&nbsp;must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k109_2.htm">InitializeObjectAttributes</A></B>,
<B><A HREF="k111_1.htm">ZwClose</A></B>, <B><A HREF="k111_5.htm">ZwDeleteKey</A></B>,
<B><A HREF="k111_6.htm">ZwEnumerateKey</A></B>, <B><A HREF="k111_7.htm">ZwEnumerateValueKey</A></B>,
<B><A HREF="k111_8.htm">ZwFlushKey</A></B>, <B><A HREF="k111_11.htm">ZwOpenKey</A></B>,
<B><A HREF="k111_15.htm">ZwQueryValueKey</A></B>, <B><A HREF="k111_19.htm">ZwSetValueKey</A></B>
<P></FONT>
</BODY>
</HTML>
