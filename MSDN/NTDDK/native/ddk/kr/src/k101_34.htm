<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.12  Error Handling</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Error_Handling_KR"></A>1.12  Error Handling</H2>
<DL>
<DT>
<B><A HREF="k104_4.htm">IoAllocateErrorLogEntry</A>&nbsp;</B>
<DD>
Allocates and initializes an error log packet; returns a pointer so the caller
can supply error-log data and call <B>IoWriteErrorLogEntry</B>&nbsp;with the
packet.
<BR>
<DT>
<B><A HREF="k104_81.htm">IoWriteErrorLogEntry</A>&nbsp;</B>
<DD>
Queues a previously allocated error log packet, filled in by the driver, to
the system error logging thread.
<BR>
<DT>
<B><A HREF="k104_52.htm">IoIsErrorUserInduced</A>&nbsp;</B>
<DD>
Returns a Boolean indicating whether an I/O request failed due to one of the
following (user-correctable) conditions: STATUS_IO_TIMEOUT,
STATUS_DEVICE_NOT_READY, STATUS_UNRECOGNIZED_MEDIA, STATUS_VERIFY_REQUIRED,
STATUS_WRONG_VOLUME, STATUS_MEDIA_WRITE_PROTECTED, or
STATUS_NO_MEDIA_IN_DEVICE. If the result is TRUE, a removable-media driver
must call <B>IoSetHardErrorOrVerifyDevice</B>&nbsp;before completing the IRP.
<BR>
<DT>
<B><A HREF="k104_69.htm">IoSetHardErrorOrVerifyDevice</A>&nbsp;</B>
<DD>
Supplies the device object for which the given IRP was failed due to a
user-induced error, such as supplying the incorrect media for the requested
operation or changing the media before the requested operation was completed.
(A file system driver uses the associated device object to send a popup to the
user, who can then correct the error and/or retry the operation.)
<BR>
<DT>
<B><A HREF="k104_43.htm">IoGetDeviceToVerify</A>&nbsp;</B>
<DD>
Returns a pointer to the device object, representing a removable-media device,
that is the target of the given thread’s I/O request. (This routine is useful
only to file systems or other highest-level drivers.)
<BR>
<DT>
<B><A HREF="k104_58.htm">IoRaiseHardError</A>&nbsp;</B>
<DD>
Causes a popup to be sent to the user indicating that the given IRP was failed
on the given device object for an optional VPB, so that the user can correct
the error and/or can retry the operation.
<BR>
<DT>
<B><A HREF="k104_59.htm">IoRaiseInformationalHardError</A>
</B>
<DD>
Causes a popup to be sent to the user, showing an I/O error status and
optional string supplying more information.
<BR>
<DT>
<B><A HREF="k102_58.htm">ExRaiseStatus</A>&nbsp;</B>
<DD>
Raises an error status so that a caller-supplied structured exception handler
is called. (This routine is useful only to highest-level drivers that supply
exception handlers, in particular to file systems.)
<BR>
<DT>
<B><A HREF="k105_4.htm">KeBugCheckEx</A>&nbsp;</B>
<DD>
Brings down the system in a controlled manner, displaying the bugcheck code
and possibly more information, when the caller discovers an unrecoverable
inconsistency that will corrupt the system unless it is brought down. (This
routine can be called when debugging under-development drivers. Otherwise,
drivers should never call this routine when they can handle an error by
failing an IRP and by calling <B>IoAllocateErrorLogEntry</B>&nbsp;and <B>IoWriteErrorLogEntry</B>.)
<BR>
<DT>
<B><A HREF="k105_3.htm">KeBugCheck</A>&nbsp;</B>
<DD>
Brings down the system in a controlled manner when the caller discovers an
unrecoverable inconsistency that will corrupt the system if the caller
continues to run. <B>KeBugCheckEx</B>&nbsp;is preferable.
<BR>
<DT>
<B><A HREF="k105_14.htm">KeInitializeCallbackRecord</A></B>&nbsp;
<DD>
Initializes a bug-check callback record before a device driver calls <B>KeRegisterBugCheckCallback</B>.
<BR>
<DT>
<B><A HREF="k105_37.htm">KeRegisterBugCheckCallback</A></B>
<DD>
Registers a device driver’s bug-check callback routine, which is called if a
system bug check occurs. Such a driver-supplied routine saves
driver-determined state information, such as the contents of device registers,
that would not otherwise be written into the system crash-dump file. 
<BR>
<DT>
<B><A HREF="k105_8.htm">KeDeregisterBugCheckCallback</A></B>
<DD>
Removes a device driver’s callback routine from the set of registered
bug-check callbacks. 
</DL>
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
