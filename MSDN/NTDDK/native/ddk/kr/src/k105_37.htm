<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeRegisterBugCheckCallback</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_KeRegisterBugCheckCallback_KR"></A>KeRegisterBugCheckCallback</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; KeRegisterBugCheckCallback(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKBUGCHECK_CALLBACK_RECORD</B>&nbsp; <I>CallbackRecord</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKBUGCHECK_CALLBACK_ROUTINE</B>&nbsp; <I>CallbackRoutine</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Buffer</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Length</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PUCHAR</B>&nbsp; <I>Component</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
Device drivers can call <B>KeRegisterBugCheckCallback</B>&nbsp;to register their
bug-check callback routines. If a system bug check occurs, such a callback
usually saves device-state information to be written into the system crash
dump file. 
<H3>Parameters</H3>
<DL>
<DT>
<I>CallbackRecord</I>
<DD>
Points to a callback record, already initialized with <B>KeInitializeCallbackRecord</B>,
for which the caller provides nonpaged storage. 
<BR>
<DT>
<I>CallbackRoutine</I>
<DD>
Specifies the entry point of the caller-supplied routine to be registered,
declared to conform to the following function type:
<PRE><FONT FACE="Courier" SIZE="2">VOID<BR>(*PKBUGCHECK_CALLBACK_ROUTINE) (<BR>    IN PVOID Buffer,<BR>    IN ULONG Length<BR>    );
</FONT></PRE>
<P>
This caller-supplied routine is responsible for writing driver-determined
state information at <I>Buffer</I>&nbsp;if a bug check occurs. 
<BR>
<DT>
<I>Buffer</I>
<DD>
Points to a caller-supplied buffer, which must be allocated from nonpaged
pool. 
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the size in bytes of the caller-allocated buffer. 
<BR>
<DT>
<I>Component</I>
<DD>
Points to a zero-terminated ANSI string identifying the caller. Usually, this
is the name of the device driver, or possibly of its device. 
</DL>
<H3>Return Value</H3>
<P>
<B>KeRegisterBugCheckCallback</B>&nbsp;returns TRUE if the caller-supplied routine
has been successfully added to the set of registered bug-check callbacks. 
<H3>Comments</H3>
<P>
<B>KeRegisterBugCheckCallback</B>&nbsp;sets up a driver-supplied routine to be
called if a bug check occurs so a device driver can save state information,
such as the contents of device registers, that would not otherwise be saved in
a system crash-dump file. 
<P>
A driver-supplied bug-check callback routine writes whatever information the
driver designer chooses into the memory at <I>Buffer</I>. The format of the
data written at <I>Buffer</I>&nbsp;is driver-determined. This memory cannot be
freed unless the driver first calls <B>KeDeregisterBugCheckCallback</B>. Like
the driver-allocated memory at <I>Buffer</I>, such a bug-check callback
routine cannot be pageable. 
<P>
When the callback routine runs, interrupts are disabled. A callback routine
cannot allocate resources, such as memory, because the system is being shut
down. A bug-check callback also cannot use synchronization mechanisms, such as
a spin lock. However, it should not need to acquire synchronization resources
because other driver routines are effectively disabled while the system is
being shut down for a bug check. The callback routine can safely call the
HAL’s READ_PORT_<I>XXX</I>&nbsp;and/or READ_REGISTER_<I>XXX</I>&nbsp; to collect state
information from the device and transfer this data to the driver-allocated
buffer. It can call any <B>Ke</B><I>Xxx</I>&nbsp;or <B>Hal</B><I>Xxx</I>&nbsp;that
neither allocates memory nor acquires a synchronization resource. 
<P>
The given <I>Component</I>&nbsp;string should identify the driver to aid in
crash-dump debugging. During driver development, the <I>Component</I>
identifier can be passed to the debugger to select only that component’s dump
data for examination. A bug-check callback routine also can be debugged. 
<P>
Callers of <B>KeRegisterBugCheckCallback</B>&nbsp;can be running at any IRQL.
Usually, a device driver is running at IRQL PASSIVE_LEVEL in its DriverEntry
routine when it calls <B>KeRegisterBugCheckCallback</B>. 
<H3>See Also</H3>
<P>
<B><A HREF="k102_11.htm">ExAllocatePool</A></B>, <B><A HREF="k105_3.htm">KeBugCheck</A></B>,
<B><A HREF="k105_4.htm">KeBugCheckEx</A></B>, <B><A HREF="k105_8.htm">KeDeregisterBugCheckCallback</A></B>,
<B><A HREF="k105_14.htm">KeInitializeCallbackRecord</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
