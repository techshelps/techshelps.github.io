<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExAllocatePoolWithQuotaTag</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExAllocatePoolWithQuotaTag_KR"></A>ExAllocatePoolWithQuotaTag</H2>
<P>
<B>PVOID <BR>
&nbsp; &nbsp; ExAllocatePoolWithQuotaTag(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN POOL_TYPE</B>&nbsp; <I>PoolType</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>NumberOfBytes</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN ULONG  </B><I>Tag</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExAllocatePoolWithQuotaTag</B>&nbsp;allocates pool memory, charging the quota
against the current thread. A call to this routine is equivalent to calling <B>ExAllocatePoolWithQuota,</B>
except it inserts a caller-supplied tag before the allocation. This tag
appears in any crash dump of the system that occurs.
<H3>Parameters</H3>
<DL>
<DT>
<I>PoolType</I>
<DD>
Specifies the type of pool to allocate, which can be one of the following:
<P>
<B>NonPagedPool<BR>
NonPagedPoolMustSucceed<BR>
NonPagedPoolCacheAligned<BR>
NonPagedPoolCacheAlignedMustS<BR>
PagedPool<BR>
PagedPoolCacheAligned</B>
<BR>
<DT>
<I>NumberOfBytes</I>
<DD>
Specifies the number of bytes to allocate.
<BR>
<DT>
<I>Tag</I>
<DD>
Is a string, delimited by single quote marks, with up to four characters,
usually specified in reversed order.
</DL>
<H3>Return Value</H3>
<P>
If the <I>PoolType</I>&nbsp;is one of the <I>Xxx</I><B>MustS(ucceed)</B>&nbsp;values,
this call succeeds if the system has <I>any</I>&nbsp;available memory, and <B>ExAllocatePoolWithQuotaTag</B>
returns a pointer to the allocated pool.
<P>
<B>ExAllocatePoolWithQuotaTag</B>&nbsp;returns a NULL pointer when the <I>PoolType</I>
is not one of the <I>Xxx</I><B>MustS(ucceed)</B>&nbsp;values and not enough pool
can be allocated to satisfy the request.
<H3>Comments</H3>
<P>
During driver development on a checked build of the system, this routine can
be useful for crash debugging. Calling this routine, rather than <B>ExAllocatePoolWithQuota</B>,
inserts the caller-supplied tag into a crash dump of pool memory.
<P>
The <I>Tag</I>&nbsp;passed to this routine is more readable if its bytes are
reversed when this routine is called. For example, if a caller passes ‘Fred’
as a <I>Tag</I>, it would appear as ‘derF’ if pool is dumped or when tracking
pool usage in the debugger.
<P>
Callers of <B>ExAllocatePoolWithQuotaTag,</B>&nbsp;like callers of <B>ExAllocatePoolWithQuota,</B>
must be running at IRQL &lt; DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="k102_12.htm">ExAllocatePoolWithQuota</A></B>, <B><A HREF="k102_21.htm">ExFreePool</A></B>
<P></FONT>
</BODY>
</HTML>
