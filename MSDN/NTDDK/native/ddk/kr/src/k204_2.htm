<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.2  Parallel I/O Control Codes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Parallel_I_O_Control_Codes_KR"></A>4.2  Parallel I/O Control Codes</H2>
<P>
Since a printer is the standard device connected to a parallel port, this
section summarizes the public I/O control codes that must be supported by
parallel class drivers for printing devices. A class driver for another type
of device might handle a completely different set of I/O control codes,
depending on what kind of application support it must provide and on the
nature of its device.
<P>
This section also summarizes the set of internal I/O control codes that all
class drivers set into IRPs that they send down to the parallel port driver.
<H3>IOCTL_PAR_QUERY_INFORMATION</H3>
<H4>Operation</H4>
<P>
Returns the status of the printer represented by the input device object.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size in
bytes of the buffer, which must be &gt;= <B>sizeof</B>(UCHAR).
<H4>Output</H4>
<P>
Returns the <B>Status</B>&nbsp;of the printer, one of PARALLEL_PAPER_EMPTY, PARALLEL_OFF_LINE, PARALLEL_POWER_OFF, PARALLEL_NOT_CONNECTED, PARALLEL_BUSY, or PARALLEL_SELECTED, to the buffer at <BR>
<B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;is set to <B>sizeof</B>(UCHAR) when the <B>Status</B>
field is set to STATUS_SUCCESS. Otherwise, the <B>Information</B>&nbsp;field is set
to zero, and the <B>Status</B>&nbsp;field can be set to STATUS_CANCELLED,
STATUS_PENDING, or STATUS_BUFFER_TOO_SMALL.
<H3>IOCTL_PAR_SET_INFORMATION</H3>
<H4>Operation</H4>
<P>
Sets up the printer for a job (write operation), according to the specified
constant, PARALLEL_INIT, optionally ORed with PARALLEL_AUTOFEED.
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the value to
be set, and <B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the
size of the buffer, which must be &gt;= <B>sizeof</B>(UCHAR).
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field can be
set to STATUS_SUCCESS or possibly to STATUS_PENDING, STATUS_CANCELLED, or
STATUS_INVALID_PARAMETER.
<H3>IOCTL_PAR_QUERY_DEVICE_ID</H3>
<H4>Operation</H4>
<P>
Returns the IEEE 1284 device identifier for the device.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size in
bytes of the buffer. A device identifier can be up to 64 K. An application can
use IOCTL_PAR_QUERY_DEVICE_ID_SIZE to determine the size of the ID for a
particular device.
<H4>Output</H4>
<P>
Returns the device ID to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
When the driver sets <B>Status</B>&nbsp;to STATUS_SUCCESS, it sets the <B>Information</B>
field to the size of the returned device ID. When <B>Status</B>&nbsp;is an error,
such as STATUS_IO_DEVICE_ERROR or STATUS_BUFFER_TOO_SMALL, the driver sets <B>Information</B>
to zero.
<H3>IOCTL_PAR_QUERY_DEVICE_ID_SIZE</H3>
<H4>Operation</H4>
<P>
Returns the size of the IEEE 1284 device identifier for the device.
<H4>Input</H4>
<P>
<B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;of type
PPAR_DEVICE_ID_SIZE_INFORMATION to receive the ID size.
<H4>Output</H4>
<P>
Returns the size of the device ID to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
When the driver sets <B>Status</B>&nbsp;to STATUS_SUCCESS, it sets the <B>Information</B>
field to <B>sizeof</B>(PPAR_DEVICE_ID_SIZE_INFORMATION). When <B>Status</B>&nbsp;is
an error, such as STATUS_IO_DEVICE_ERROR, the driver sets <B>Information</B>
to zero.
<H3>IOCTL_SERIAL_GET_TIMEOUTS</H3>
<H4>Operation</H4>
<P>
Returns the current time-out setting on the printer for writes to the device.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size of the
buffer, which must be &gt;= <B>sizeof</B>(SERIAL_TIMEOUTS).
<H4>Output</H4>
<P>
The driver returns the information to the buffer at <BR>
<B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to <B>sizeof</B>(SERIAL_TIMEOUTS) if the <B>Status</B>
field is set to STATUS_SUCCESS. Otherwise, the <B>Status</B>&nbsp;field is set to
STATUS_BUFFER_TOO_SMALL.
<H3>IOCTL_SERIAL_SET_TIMEOUTS</H3>
<H4>Operation</H4>
<P>
Resets the time-out value for writes to the printer.
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the value to
be set, and <B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the
size of the buffer, which must be &gt;= <B>sizeof</B>(SERIAL_TIMEOUTS).
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field can be
set to STATUS_SUCCESS, or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_INVALID_PARAMETER, STATUS_PENDING, or STATUS_CANCELLED.
<H3>IOCTL_INTERNAL_GET_PARALLEL_PORT_INFO</H3>
<H4>Operation</H4>
<P>
Returns the address range, as a controller base address and span of bytes, for
the port controller registers so the class driver can do I/O operations on its
device. Class drivers can store the port address range in their device
extensions when they initialize.  A class driver can access and program the
controller registers only when it has successfully allocated the port, for
example with an IOCTL_INTERNAL_PARALLEL_PORT_ALLOCATE request.
<P>
Also returns pointers to three functions: TryAllocatePort, FreePort and
QueryNumWaiters. 
<P>
TryAllocate Port returns immediately from the port driver with a TRUE status
if the port was successfully allocated or a FALSE status if the port was busy.
<P>
FreePort releases a previously allocated port that the class driver has been
using. The class driver must switch the device back to compatibility mode if
necessary. 
<P>
QueryNumWaiters is used by a class driver to query the number of other class
drivers waiting for a port so that a driver that allocates a port for a long
time can release the port if it detects that another driver is waiting.
QueryNumWaiters returns the number of IRPs queued to a port.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size in
bytes of the output buffer, which must be &gt;= <B>sizeof</B>(PARALLEL_PORT_INFORMATION).
<H4>Output</H4>
<P>
The port driver returns the information to the buffer at <BR>
<B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned if the <B>Status</B>
field is set to STATUS_SUCCESS.  Otherwise, the <B>Information</B>&nbsp;field is
set to zero and the <B>Status</B>&nbsp;field can be set to STATUS_BUFFER_TOO_SMALL.
<H3>IOCTL_INTERNAL_PARALLEL_PORT_ALLOCATE</H3>
<H4>Operation</H4>
<P>
Gives a class driver exclusive access to a parallel port temporarily. The port
driver queues this IRP, that is cancelable, if the port is currently in use by
a class driver.  A class driver that has allocated the port should call the
FreePort function when it has satisfied its current IRP or when its device is
busy, if possible.  This allows other class drivers to use the port.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero.  When the port has been allocated
to the caller, the <B>Status</B>&nbsp;field is set to STATUS_SUCCESS.  Otherwise,
the <B>Status </B>field can be set to STATUS_PENDING or STATUS_CANCELLED.
<H3>IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT</H3>
<H4>Operation</H4>
<P>
A parallel class driver uses the IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT
function to supply an interrupt service routine to a port driver. This ISR
will be called by the port driver whenever the parallel port generates an
interrupt.
<P>
A parallel class driver can also use this IOCTL to supply a deferred port
check function that will be called by the port driver whenever the port is not
in use.  The port is allocated by the port driver prior to calling this
deferred port check function and freed by the port driver after this deferred
port check function returns.
<P>
The IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT function returns a pointer to
the Interrupt object as well as pointers to functions to allocate the port and
free the port at DIRQL.
<P>
If the class driver does not already have the port allocated, it can attempt
to allocate the port in the ISR by calling TryAllocatePortAtInterruptLevel.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the size in
bytes of the input buffer which must be &gt;= <B>sizeof</B>(PARALLEL_INTERRUPT_SERVICE_ROUTINE).
&nbsp;<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size in
bytes of the output buffer which must be &gt;= <B>sizeof</B>(PARALLEL_INTERRUPT_INFORMATION).
<H4>Output</H4>
<P>
The port driver returns the information to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned if the <B>Status</B>
field is set to STATUS_SUCCESS.  Otherwise the <B>Information</B>&nbsp;field is set
to zero and the <B>Status</B>&nbsp;field can be set to STATUS_BUFFER_TOO_SMALL.
<H3>IOCTL_INTERNAL_PARALLEL_DISCONNECT_INTERRUPT</H3>
<H4>Operation</H4>
<P>
This function is called during Unload by a class driver that called
IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT.  It disconnects the Interrupt
Service Routine and the Deferred Port Check Routine if one was specified in
the Connect call.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the length in
bytes of the input buffer, which must be &gt;= <B>sizeof</B>(PARALLEL_INTERRUPT_SERVICE_ROUTINE).
&nbsp;The parameters in the input buffer must be the same as those supplied to
IOCTL_INTERNAL_PARALLEL_CONNECT_INTERRUPT.
<H4>Output</H4>
<P>
None
<H4>Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field can be
set to STATUS_SUCCESS, or possibly STATUS_BUFFER_TOO_SMALL or
STATUS_INVALID_PARAMETER.
<P></FONT>
</BODY>
</HTML>
