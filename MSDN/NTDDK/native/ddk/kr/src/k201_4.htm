<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.4  Device-type-specific I/O Requests</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Device_type_specific_I_O_Requests_KR"></A>1.4  Device-type-specific I/O Requests</H2>
<P>
The remaining chapters in this part of the manual summarize the
device-type-specific I/O requests handled by the system drivers of the most
common kinds of devices.
<P>
Any new kernel-mode driver must handle the same set of I/O requests as a
system-supplied driver if the new driver meets any of the following
conditions:
<UL>
<LI>
The new driver will replace a system driver for the same type of device.
<P>
<LI>
The new driver is for another device of a type already in the system.
<P>
<LI>
The new driver is an intermediate driver to be layered between two system
drivers.
</UL>
<P>
Such a new driver must handle every IRP_MJ_<I>XXX</I>&nbsp;that the system-supplied
driver(s) handle. In most cases, a new device driver should also handle the
same set of IOCTL_<I>XXX</I>&nbsp;for IRP_MJ_DEVICE_CONTROL requests, even if the
new driver must emulate the behavior of the corresponding system-supplied
driver. Otherwise, the new driver might “break” user-mode applications that
expect these kinds of requests to be honored.
<P>
The remaining chapters in this part of the manual  also supply tips about the
NTSTATUS values that drivers can set in the I/O status block of IRPs, set as
necessary in an error log packet, and return for specific requests. These tips
for selecting request-specific NTSTATUS values do not include STATUS_PENDING,
which any driver can return for an IRP it has not yet completed. Use this
information to decide on the appropriate status values to be returned by new
drivers for similar types of devices, or as an aide in determining the
appropriate status values to be returned by the driver for a new type of
device. 
<P>
For more information about the following kinds of drivers and the requests
that each is required to support, see the following:
<UL>
<LI>
Keyboard and mouse drivers in <A HREF="k202.htm">Chapter
2</A>&nbsp;
<P>
<LI>
Beep device drivers in <A HREF="k203.htm">Chapter
3</A>&nbsp;
<P>
<LI>
Parallel and serial drivers in <A HREF="k204.htm">Chapter
4</A>&nbsp;
<P>
<LI>
Multimedia sound, wave, midi, aux, and mixer drivers in <A HREF="k205.htm">Chapter
5</A>&nbsp;
<P>
<LI>
Disk and floppy drivers in <A HREF="k206.htm">Chapter
6</A>&nbsp;
<P>
<LI>
CD-ROM drivers in <A HREF="k207.htm">Chapter 7</A>&nbsp;
<P>
<LI>
Tape drivers in <A HREF="k208.htm">Chapter 8</A>&nbsp;
<P>
<LI>
SCSI drivers in <A HREF="k209.htm">Chapter 9</A>&nbsp;
<P>
<LI>
Video miniport drivers in the <I>Graphics Driver Reference</I>
</UL>
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
