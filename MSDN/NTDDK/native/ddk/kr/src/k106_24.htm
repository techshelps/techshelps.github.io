<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MmLockPagableDataSection</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MmLockPagableDataSection_KR"></A>MmLockPagableDataSection</H2>
<P>
<B>PVOID <BR>
&nbsp; &nbsp; MmLockPagableDataSection(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>AddressWithinSection</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>MmLockPagableDataSection</B>&nbsp;locks an entire section of driver data into
system space.
<H3>Parameters</H3>
<DL>
<DT>
<I>AddressWithinSection</I>
<DD>
Is the symbolic address of one item of data within the pageable section.
</DL>
<H3>Return Value</H3>
<P>
<B>MmLockPagableDataSection</B>&nbsp;returns a handle to the section. This handle
must be passed subsequently to <B>MmLockPagableSectionByHandle</B>&nbsp;or to <B>MmUnlockPagableImageSection</B>.
<H3>Comments</H3>
<P>
This routine, <B>MmLockPagableSectionByHandle</B>&nbsp;and <B>MmUnlockPagableImageSection</B>
are used by drivers to make data pageable but locked in memory on demand.
<P>
Data can be pageable if:
<UL>
<LI>
The data is accessed at &lt;DISPATCH_LEVEL.
<P>
<LI>
The driver uses the data infrequently and predictably.
</UL>
<P>
Drivers for mixer devices use pageable-data sections. Because the driver uses
sufficient data to make creating a pageable-data section worthwhile and the
driver knows when the data is needed, such a driver uses <B>MmLockPagableDataSection</B>,
&nbsp;<B>MmLockPagableSectionByHandle</B>&nbsp;and <B>MmUnlockPagableImageSection</B>&nbsp;to
bring a data section into system space when needed and make it available to be
paged out when not needed.
<P>
A single call to <B>MmLockPagableDataSection</B>&nbsp;causes the entire section,
containing the referenced data, to be locked into system space.
<P>
It is an expensive operation to lock down a section. If a pageable-data
section is locked down in more than one place by a driver, use <B>MmLockPagableDataSection</B>
for the first request.  Make subsequent lock requests by calling <B>MmLockPagableSectionByHandle</B>,
passing the handle returned by <B>MmLockPagableDataSection</B>.  Locking by
handle significantly improves driver performance. A locked down section is
unlocked by calling <B>MmUnlockPagableImageSection</B>.
<P>
The memory manager maintains a reference count on the handle to a section. A
pageable-data section is only available to be paged out when the reference
count is zero. Every lock request increments the count; every unlock request
decrements the count. A driver must unlock a section as many times as it locks
a section to insure that such a section will be available to be paged out when
the section is not needed. A handle is always valid, no matter what the count.
If the count on a handle is zero and a call is made to <B>MmLockPagableSectionByHandle</B>,
the count is set to one, and if the section has been paged out, it will be
paged in.
<P>
Callers of <B>MmLockPagableDataSection </B>and <B>MmLockPagableCodeSection</B>
must use the former for data sections and the latter for code sections. If the
incorrect form of <B>MmLockPagableXxxxSection</B>&nbsp;is used, a fatal error will
occur on some platforms.
<P>
Data in a pageable-data section is marked by a directive available in Windows
NT-compatible compilers. To create a pageable data section, use <B>#pragma
data_seg (“PAGE”</B>), at the beginning of the data module, and <B>#pragma
data_seg () </B>at the end of the module. The keyword <B>PAGE</B>&nbsp;is
case-sensitive, that is, <B>PAGE</B>&nbsp;must be capitalized.
<P>
Note that there is also a <B>#pragma data_seg(“INIT”) </B>that is used to make
data discardable after system initialization. Except for the use of <B>INIT</B>
rather than <B>PAGE, </B>the syntax is the same. However the result is not;
use of the <B>PAGE</B>&nbsp;directive makes the data section pageable. When the <B>INIT</B>
directive is used, the data in the section is discarded as soon as the driver
returns from its driver entry routine or its reinitialization routine if the
driver has one.
<P>
For more information about paging data, see <I>The Programmer’s Guide</I>.
<P>
Callers of <B>MmLockPagableDataSection</B>&nbsp;run at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k106_23.htm">MmLockPagableCodeSection</A></B>, <B><A HREF="k106_25.htm">MmLockPagableSectionByHandle</A></B>,
<B><A HREF="k106_28.htm">MmPageEntireDriver</A></B>, <B><A HREF="k106_29.htm">MmResetDriverPaging</A></B>,
<B><A HREF="k106_35.htm">MmUnlockPagableImageSection</A></B>
<P></FONT>
</BODY>
</HTML>
