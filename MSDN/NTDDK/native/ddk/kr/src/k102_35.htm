<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExInitializeZone</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExInitializeZone_KR"></A>ExInitializeZone</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ExInitializeZone(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PZONE_HEADER</B>&nbsp; <I>Zone</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>BlockSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>InitialSegment</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>InitialSegmentSize</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExInitializeZone</B>&nbsp;initializes a zone header. After a successful
initialization, fixed-size blocks can be allocated from and freed to the zone.
<H3>Parameters</H3>
<DL>
<DT>
<I>Zone</I>
<DD>
Points to the zone header to be initialized, which is defined as follows:
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _ZONE_HEADER {
&nbsp; &nbsp; SINGLE_LIST_ENTRY FreeList;
&nbsp; &nbsp; SINGLE_LIST_ENTRY SegmentList;
&nbsp; &nbsp; ULONG BlockSize;
&nbsp; &nbsp; ULONG TotalSegmentSize;
} ZONE_HEADER, *PZONE_HEADER;
</FONT></PRE>
<DT>
<I>BlockSize</I>
<DD>
The size in bytes of the allocatable unit within the zone. This value must be
less than <I>InitialSegmentSize</I>&nbsp;and must be 8-byte aligned.
<BR>
<DT>
<I>InitialSegment</I>
<DD>
Points to a segment of storage allocated by the caller. The base address of
this segment must be aligned on an 8-byte boundary.
<BR>
<DT>
<I>InitialSegmentSize</I>
<DD>
Is the size in bytes of <I>InitialSegment</I>.
</DL>
<H3>Return Value</H3>
<P>
<B>ExInitializeZone</B>&nbsp;returns one of the following: 
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Status</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_UNSUCCESSFUL
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<I>BlockSize</I>&nbsp;or <I>InitialSegment</I>&nbsp;was not aligned properly, or <I>BlockSize</I>
was larger than the initial segment size.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_SUCCESS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The zone was successfully initialized.
</FONT></TABLE>
<H3>Comments</H3>
<P>
Consider using a lookaside list instead of a zone. Lookaside lists are more
efficient are are easier to manage.
<P>
The first ZONE_SEGMENT_HEADER-sized portion of the caller-allocated segment is
used by the zone allocator. The remainder of the segment is divided into <I>BlockSize</I>
blocks and made available for allocation and deallocation from the zone.
<P>
A driver should call <B>MmQuerySystemSize</B>&nbsp;and <B>MmIsThisAnNtAsSystem</B>&nbsp;<I>before</I>
calling <B>ExInitializeZone</B>&nbsp;to determine an appropriate <I>InitialSegmentSize</I>.
Callers of <B>ExInitializeZone</B>&nbsp;should specify an <I>InitialSegmentSize</I>
of &lt;= PAGE_SIZE if a preceding call to <B>MmQuerySystemSize</B>&nbsp;returns <B>MmSmallSystem</B>.
<P>
Memory for a zone must be resident if the zone blocks can be accessed by any
code running at IRQL &gt;= DISPATCH_LEVEL. Resident memory can be allocated
with <B>ExAllocatePool,</B>&nbsp;using the input <I>PoolType</I>&nbsp;<B>NonPagedPool</B>.
<P>
Callers of the <B>ExInterlocked..Zone</B>&nbsp;routines also must provide resident
storage for a spin lock, which must be initialized with <B>KeInitializeSpinLock</B>
before any call is made to an <B>ExInterlocked..Zone</B>&nbsp;routine.
<P>
Callers of <B>ExInitializeZone</B>&nbsp;must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k102_10.htm">ExAllocateFromZone</A></B>, <B><A HREF="k102_11.htm">ExAllocatePool</A></B>,
<B><A HREF="k102_21.htm">ExFreePool</A></B>, <B><A HREF="k102_24.htm">ExFreeToZone</A></B>,
<B><A HREF="k102_29.htm">ExInitializeNPagedLookasideList</A></B>,
<B><A HREF="k102_30.htm">ExInitializePagedLookasideList</A></B>,
<B><A HREF="k102_38.htm">ExInterlockedAllocateFromZone</A></B>,
<B><A HREF="k102_42.htm">ExInterlockedFreeToZone</A></B>, <B><A HREF="k105_20.htm">KeInitializeSpinLock</A></B>,
<B><A HREF="k106_22.htm">MmIsThisAnNtAsSystem</A></B>, <B><A HREF="k106_32.htm">MmQuerySystemSize</A></B>
<P></FONT>
</BODY>
</HTML>
