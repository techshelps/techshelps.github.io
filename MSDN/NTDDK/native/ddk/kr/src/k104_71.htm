<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IoSetPartitionInformation</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IoSetPartitionInformation_KR"></A>IoSetPartitionInformation</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; IoSetPartitionInformation(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DeviceObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>SectorSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>PartitionNumber</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>PartitionType</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>IoSetPartitionInformation</B>&nbsp;sets the partition type and number in a
partition table entry for a given disk represented by the device object.
<H3>Parameters</H3>
<DL>
<DT>
<I>DeviceObject</I>
<DD>
Points to the device object representing the device on which the partition
type is to be set.
<BR>
<DT>
<I>SectorSize</I>
<DD>
Specifies the size, in bytes, of sectors on the disk.
<BR>
<DT>
<I>PartitionNumber</I>
<DD>
Specifies the partition number on the device whose partition type is to be
set.
<BR>
<DT>
<I>PartitionType</I>
<DD>
Specifies the type for the partition. For the currently defined <I>PartitionType</I>
values, see the Win32 SDK.
</DL>
<H3>Return Value</H3>
<P>
If <B>IoSetPartitionInformation</B>&nbsp;returns STATUS_SUCCESS, the disk driver
updates its notion of the partition type for this partition in its device
extension.
<H3>Comments</H3>
<P>
This routine is called when a disk device driver is asked to set the partition
type in a partition table entry by an IRP_MJ_DEVICE_CONTROL request. This
request is generally issued by the format utility, which performs I/O control
functions on the partition. The driver passes a pointer to the device object
representing the physical disk and the number of the partition associated with
the device object that the format utility has open.
<P>
This routine is synchronous and must be called by the disk driver’s Dispatch
routine or by a driver thread. Thus, all user and file system threads must be
prepared to enter a wait state when issuing the device control request to set
the partition type for the device.
<P>
This routine assumes the partition number passed in by the disk driver
actually exists.
<P>
This routine must be called at PASSIVE_LEVEL IRQL because it uses a kernel
event object to synchronize I/O completion on the device. The event cannot be
set to the Signaled state without queuing and executing the I/O system’s
special kernel APC routine for I/O completion.
<H3>See Also</H3>
<P>
<B><A HREF="k104_60.htm">IoReadPartitionTable</A></B>, <B><A HREF="k104_82.htm">IoWritePartitionTable</A></B>
<P></FONT>
</BODY>
</HTML>
