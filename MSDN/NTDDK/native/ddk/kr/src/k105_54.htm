<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeWaitForMultipleObjects</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_KeWaitForMultipleObjects_KR"></A>KeWaitForMultipleObjects</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; KeWaitForMultipleObjects(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Count</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Object[]</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN WAIT_TYPE</B>&nbsp; <I>WaitType</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN KWAIT_REASON</B>&nbsp; <I>WaitReason</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN KPROCESSOR_MODE</B>&nbsp; <I>WaitMode</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>Alertable</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PLARGE_INTEGER</B>&nbsp; <I>Timeout</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKWAIT_BLOCK</B>&nbsp; <I>WaitBlockArray</I>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>KeWaitForMultipleObjects</B>&nbsp;puts the current thread into an alertable or
nonalertable wait state until any or all of a number of dispatcher objects are
set to the Signaled state or (optionally) until the wait times out.
<H3>Parameters</H3>
<DL>
<DT>
<I>Count</I>
<DD>
Specifies the number of objects to be waited on.
<BR>
<DT>
<I>Object</I>
<DD>
Points to an array of pointers to dispatcher objects (events, mutexes,
semaphores, threads, and timers) for which the caller supplies the storage.
<BR>
<DT>
<I>WaitType</I>
<DD>
Specifies either <B>WaitAll</B>, indicating that all of the specified objects
must attain a state of Signaled before the wait is satisfied, or <B>WaitAny</B>,
indicating that any one of the objects must attain a state of Signaled before
the wait is satisfied.
<BR>
<DT>
<I>WaitReason</I>
<DD>
Specifies the reason for the wait. Drivers should set this value to <B>Executive</B>
or, if the driver is doing work on behalf of a user and is running in the
context of a User thread, to <B>UserRequest</B>.
<BR>
<DT>
<I>WaitMode</I>
<DD>
Specifies whether the caller waits in <B>KernelMode</B>&nbsp;or <B>UserMode</B>.
Intermediate and lowest level drivers should specify <B>KernelMode</B>. If the
set of objects waited on includes a mutex, the caller must specify <B>KernelMode</B>.
<BR>
<DT>
<I>Alertable</I>
<DD>
Specifies a Boolean value that indicates whether the thread can be alerted
while it is in the waiting state.
<BR>
<DT>
<I>Timeout</I>
<DD>
Points to an absolute or relative value representing the upper limit for the
wait. A negative value specifies an interval relative to the current system
time. The value should be expressed in units of 100 nanoseconds. Absolute
expiration times track any changes in the system time; relative expiration
times are not affected by system time changes.
<BR>
<DT>
<I>WaitBlockArray</I>
<DD>
Points to an optional array of Wait blocks that describe the Wait operation.
</DL>
<H3>Return Value</H3>
<P>
<B>KeWaitForMultipleObjects</B>&nbsp;can return one of the following NTSTATUS
values:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_SUCCESS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Depending on the specified <I>WaitType</I>, one or all of the dispatcher
objects in the <I>Object</I>&nbsp;array satisfied the wait.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_ALERTED
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The wait is completed because of an alert to the thread.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_USER_APC
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
A user APC was delivered to the current thread before the specified <I>Timeout</I>
interval expired.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_TIMEOUT
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
A time-out occurred before the specified set of wait conditions was met. This
value can be returned when an explicit time-out value of zero is specified,
but the specified set of wait conditions cannot be met immediately.
</FONT></TABLE>
<P>
If <B>KeWaitForMultipleObjects</B>&nbsp;returns STATUS_SUCCESS and if <B>WaitAny</B>
is specified as the <I>WaitType</I>, <B>KeWaitForMultipleObjects</B>&nbsp;also
returns the zero-based index of the object that satisfied the wait at
NTSTATUS.
<H3>Comments</H3>
<P>
Each thread object has a built-in array of wait blocks that can be used to
wait on several objects concurrently. Whenever possible, the built-in array of
wait blocks should be used in a wait-multiple operation because no additional
wait block storage need be allocated and later deallocated. However, if the
number of objects to be waited on concurrently is greater than the number of
built-in wait blocks, use the <I>WaitBlockArray</I>&nbsp;parameter to specify an
alternate set of wait blocks to be used in the wait operation.
<P>
If the <I>WaitBlockArray</I>&nbsp;parameter is NULL, the <I>Count</I>&nbsp;parameter
must be less than or equal to THREAD_WAIT_OBJECTS or a bug check will occur.
<P>
If the <I>WaitBlockArray</I>&nbsp;pointer is nonNULL, the <I>Count</I>&nbsp;parameter
must be less than or equal to MAXIMUM_WAIT_OBJECTS or a bug check will occur.
<P>
The current state for each of the specified objects is examined to determine
whether the wait can be satisfied immediately. If the necessary side effects
are performed on the objects, an appropriate value is returned.
<P>
If the wait cannot be satisfied immediately and either no time-out value or a
nonzero time-out value has been specified, the current thread is put in a
waiting state and a new thread is selected for execution on the current
processor. If no <I>Timeout</I>&nbsp;is supplied, the calling thread will remain in
a Wait state until the conditions specified by <I>Object</I>&nbsp;and <I>WaitType</I>
are satisfied.
<P>
If <I>Timeout</I>&nbsp;is specified, the wait will be automatically satisfied if
none of the specified wait conditions is met when the given interval expires.
<P>
A <I>Timeout</I>&nbsp;value of zero allows the testing of a set of wait conditions,
conditionally performing any side effects if the wait can be immediately
satisfied, as in the acquisition of a mutex.
<P>
The <I>Alertable</I>&nbsp;parameter specifies whether the thread can be alerted in
the wait state. If the value of this parameter is TRUE and the thread is
alerted for a mode that is equal to or more privileged than the given <I>WaitMode</I>,
the thread’s wait will be satisfied with a completion status of
STATUS_ALERTED.
<P>
If the <I>WaitMode</I>&nbsp;parameter is <B>UserMode</B>&nbsp;and the <I>Alertable</I>
parameter is TRUE, the thread can also be awakened to deliver a user-mode APC.
Kernel-mode APCs always cause the subject thread to be awakened if the wait
IRQL is PASSIVE_LEVEL and no kernel APC is in progress.
<P>
Callers of <B>KeWaitForMultipleObjects</B>&nbsp;can be running at IRQL &lt;=
DISPATCH_LEVEL. However, the caller cannot wait at raised IRQL for a nonzero
interval nor in an arbitrary thread context on any dispatcher object, so
callers usually are running at IRQL PASSIVE_LEVEL. A call while running at
IRQL DISPATCH_LEVEL is valid if and only if the caller specifies a <I>Timeout</I>
of zero.  That is, a driver must not wait for a nonzero interval at IRQL
DISPATCH_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k102_28.htm">ExInitializeFastMutex</A></B>, <B><A HREF="k105_17.htm">KeInitializeEvent</A></B>,
<B><A HREF="k105_18.htm">KeInitializeMutex</A></B>, <B><A HREF="k105_19.htm">KeInitializeSemaphore</A></B>,
<B><A HREF="k105_21.htm">KeInitializeTimer</A></B>, <B><A HREF="k105_55.htm">KeWaitForMutexObject</A></B>,
<B><A HREF="k105_56.htm">KeWaitForSingleObject</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
