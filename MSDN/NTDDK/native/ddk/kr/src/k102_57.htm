<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExQueueWorkItem</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExQueueWorkItem_KR"></A>ExQueueWorkItem</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; ExQueueWorkItem(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PWORK_QUEUE_ITEM</B>&nbsp; <I>WorkItem</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN WORK_QUEUE_TYPE</B>&nbsp; <I>QueueType</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExQueueWorkItem</B>&nbsp;inserts a given work item into a queue from which a
system worker thread removes the item and gives control to the routine that
the caller supplied to <B>ExInitializeWorkItem</B>.
<H3>Parameters</H3>
<DL>
<DT>
<I>WorkItem</I>
<DD>
Points to the work item that was set up by a preceding call to <B>ExInitializeWorkItem</B>.
<BR>
<DT>
<I>QueueType</I>
<DD>
Specifies the queue into which <I>WorkItem</I>&nbsp;is inserted. <I>QueueType</I>
can be either of the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Value</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>CriticalWorkQueue</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Insert the <I>WorkItem</I>&nbsp;into the queue from which a system thread with a
real-time priority attribute will dequeue the entry.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>DelayedWorkQueue</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Insert the <I>WorkItem</I>&nbsp;into the queue from which a system thread with a
variable priority attribute will dequeue the entry.
</FONT></TABLE>
</DL>
<P>
The <I>QueueType</I>&nbsp;value <B>HyperCriticalWorkQueue</B>&nbsp;is reserved for
system use.
<H3>Comments</H3>
<P>
Highest-level drivers can call <B>ExQueueWorkItem</B>.
<P>
The callback is run within a system thread context at IRQL PASSIVE_LEVEL. This
caller-supplied routine is responsible for calling <B>ExFreePool</B>&nbsp;to
reclaim the storage allocated for <I>WorkItem</I>.
<P>
A driver must not wait for its callback routine to complete an operation if it
is already holding one synchronization object and might attempt to acquire
another. For example, a driver should release any currently held semaphores,
mutexes, resource variables, and so forth <I>before</I>&nbsp;it calls <B>ExQueueWorkItem</B>.
Releasing synchronization resources before queueing a synchronous
worker-thread operation prevents deadlocks.
<P>
The value of <I>QueueType</I>&nbsp;determines the runtime priority at which the
callback routine is run, as follows:
<UL>
<LI>
If the callback runs in the system thread with a real-time priority attribute,
the callback routine cannot be preempted except by threads with higher
real-time priorities.
<P>
<LI>
If the callback runs in the system thread with a variable priority attribute,
the callback can be preempted by threads with higher variable and real-time
priorities, and the callback is scheduled to run round-robin with other
threads of the same priority for a quantum each.
</UL>
<P>
Threads at either priority remain interruptible.
<P>
Callers of <B>ExQueueWorkItem</B>&nbsp;must be running at IRQL &lt;=
DISPATCH_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k102_21.htm">ExFreePool</A></B>, <B><A HREF="k102_34.htm">ExInitializeWorkItem</A></B>
<P></FONT>
</BODY>
</HTML>
