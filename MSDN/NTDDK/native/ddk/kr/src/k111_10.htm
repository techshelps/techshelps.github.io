<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ZwMapViewOfSection</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ZwMapViewOfSection_KR"></A>ZwMapViewOfSection</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ZwMapViewOfSection(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN HANDLE</B>&nbsp; <I>SectionHandle</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN HANDLE</B>&nbsp; <I>ProcessHandle</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PVOID</B>&nbsp; <I>*BaseAddress</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>ZeroBits</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>CommitSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PLARGE_INTEGER</B>&nbsp; <I>SectionOffset</I><B>,</B>&nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PULONG</B>&nbsp; <I>ViewSize</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN SECTION_INHERIT</B>&nbsp; <I>InheritDisposition</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>AllocationType</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>Protect</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ZwMapViewOfSection</B>&nbsp;maps a view of a section into the virtual address
space of a subject process.
<H3>Parameters</H3>
<DL>
<DT>
<I>SectionHandle</I>
<DD>
Is the handle returned by a successful call to <B>ZwOpenSection</B>.
<BR>
<DT>
<I>ProcessHandle</I>
<DD>
Is the handle of an opened process object, representing the process for which
the view should be mapped.
<BR>
<DT>
<I>BaseAddress</I>
<DD>
Points to a variable that will receive the base address of the view. If the
initial value of this argument is nonNULL, the view is allocated starting at
the specified virtual address rounded down to the next 64-kilobyte address
boundary.
<BR>
<DT>
<I>ZeroBits</I>
<DD>
Specifies the number of high-order address bits that must be zero in the base
address of the section view. The value of this argument must be less than 21
and is used only when the operating system determines where to allocate the
view, as when <I>BaseAddress</I>&nbsp;is NULL.
<BR>
<DT>
<I>CommitSize</I>
<DD>
Specifies the size, in bytes, of the initially committed region of the view. <I>CommitSize</I>
is only meaningful for page-file backed sections. For mapped sections, both
data and image are always committed at section creation time. This parameter
is ignored for mapped files. This value is rounded up to the next
host-page-size boundary.
<BR>
<DT>
<I>SectionOffset</I>
<DD>
Points to the offset, in bytes, from the beginning of the section to the view.
If this pointer is nonNULL, the given value is rounded down to the next
allocation granularity size boundary.
<BR>
<DT>
<I>ViewSize</I>
<DD>
Points to a variable that will receive the actual size, in bytes, of the view.
If the value of this parameter is zero, a view of the section will be mapped
starting at the specified section offset and continuing to the end of the
section. Otherwise, the initial value of this argument specifies the size of
the view, in bytes, and is rounded up to the next host page-size boundary.
<BR>
<DT>
<I>InheritDispostion</I>
<DD>
Specifies how the view is to be shared by a child process created with a
create process operation. Device and intermediate drivers should set this
parameter to zero.
<BR>
<DT>
<I>AllocationType</I>
<DD>
A set of flags that describes the type of allocation to be performed for the
specified region of pages.
<BR>
<DT>
<I>Protect</I>
<DD>
Specifies the protection for the region of initially committed pages. Device
and intermediate drivers should set this value to PAGE_READWRITE.
</DL>
<H3>Return Value</H3>
<P>
<B>ZwMapViewOfSection</B>&nbsp;can return one of the following values:
<P>
STATUS_SUCCESS<BR>
STATUS_ACCESS_DENIED<BR>
STATUS_INVALID_HANDLE
<H3>Comments</H3>
<P>
Several different views of a section can be concurrently mapped into the
virtual address space of a process. Likewise, several different views of a
section can be concurrently mapped into the virtual address space of several
processes.
<P>
If the specified section does not exist or the access requested is not
allowed, <B>ZwMapViewOfSection</B>&nbsp;returns an error.
<P>
Callers of <B>ZwMapViewOfSection</B>&nbsp;must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k111_12.htm">ZwOpenSection</A></B>, <B><A HREF="k111_20.htm">ZwUnmapViewOfSection</A></B>
<P></FONT>
</BODY>
</HTML>
