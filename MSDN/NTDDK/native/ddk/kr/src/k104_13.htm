<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IoBuildDeviceIoControlRequest</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IoBuildDeviceIoControlRequest_KR"></A>IoBuildDeviceIoControlRequest</H2>
<P>
<B>PIRP <BR>
&nbsp; &nbsp; IoBuildDeviceIoControlRequest(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>IoControlCode</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>DeviceObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>InputBuffer</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>InputBufferLength</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PVOID</B>&nbsp; <I>OutputBuffer</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>OutputBufferLength</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>InternalDeviceIoControl</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKEVENT</B>&nbsp; <I>Event</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PIO_STATUS_BLOCK</B>&nbsp; <I>IoStatusBlock</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>IoBuildDeviceIoControlRequest</B>&nbsp;allocates and sets up an IRP for a device
control request, optionally with an I/O buffer if the I/O control code
requires the caller to supply an input or output buffer.
<H3>Parameters</H3>
<DL>
<DT>
<I>IoControlCode</I>
<DD>
Specifies the IOCTL_<I>XXX</I>&nbsp;to be set up. For more information about
device-type-specific I/O codes, see Part II of this manual.
<BR>
<DT>
<I>DeviceObject</I>
<DD>
Points to the next-lower driver’s device object, representing the target
device.
<BR>
<DT>
<I>InputBuffer</I>
<DD>
Points to an input buffer to be passed to the lower driver or NULL if the
request does not pass input data to lower driver(s).
<BR>
<DT>
<I>InputBufferLength</I>
<DD>
Specifies the length in bytes of the input buffer. If <I>InputBuffer</I>&nbsp;is
NULL, this value must be zero.
<BR>
<DT>
<I>OutputBuffer</I>
<DD>
Points to an output buffer in which the lower driver is to return data or NULL
if the request does not require lower driver(s) to return data.
<BR>
<DT>
<I>OutputBufferLength</I>
<DD>
Specifies the length in bytes of the output buffer. If <I>OutputBuffer</I>&nbsp;is
NULL, this value must be zero.
<BR>
<DT>
<I>InternalDeviceIoControl</I>
<DD>
If <I>InternalDeviceControl</I>&nbsp;is TRUE the target driver’s Dispatch routine
for IRP_MJ_INTERNAL_DEVICE_CONTROL or IRP_MJ_SCSI is called; otherwise, the
Dispatch routine for IRP_MJ_DEVICE_CONTROL is called.
<BR>
<DT>
<I>Event</I>
<DD>
Points to an initialized event object for which the caller provides the
storage. The event is set to the Signaled state when lower driver(s) have
completed the requested operation. The caller can wait on the event object for
the completion of the IRP allocated by this routine.
<BR>
<DT>
<I>IoStatusBlock</I>
<DD>
Specifies an I/O status block to be set when the request is completed by lower
drivers.
</DL>
<H3>Return Value</H3>
<P>
<B>IoBuildDeviceIoControlRequest</B>&nbsp;returns a pointer to an IRP with the
next-lower driver’s I/O stack location partially set up from the supplied
parameters. The returned pointer is NULL if an IRP cannot be allocated.
<H3>Comments</H3>
<P>
An intermediate or highest-level driver can call <B>IoBuildDeviceIoControlRequest</B>
to set up IRPs for requests sent to lower-level drivers. The next-lower
driver’s I/O stack location is set up with the given <I>IoControlCode</I>&nbsp;at <B>Parameters.DeviceIoControl.IoControlCode</B>.
Because the caller can wait on the completion of this driver-allocated IRP by
calling <B>KeWaitForSingleObject</B>&nbsp;on the given <I>Event</I>, the caller
need not set an IoCompletion routine in the IRP before calling <B>IoCallDriver</B>.
When the next-lower driver completes this IRP, the I/O Manager releases it.
<P>
Callers of <B>IoBuildDeviceIoControlRequest</B>&nbsp;must be running at IRQL
PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<A HREF="k112_26.htm">IO_STACK_LOCATION</A>, <B><A HREF="k104_5.htm">IoAllocateIrp</A></B>,
<B><A HREF="k104_12.htm">IoBuildAsynchronousFsdRequest</A></B>,
<B><A HREF="k104_15.htm">IoBuildSynchronousFsdRequest</A></B>,
<B><A HREF="k104_16.htm">IoCallDriver</A></B>, <B><A HREF="k104_19.htm">IoCompleteRequest</A></B>,
<A HREF="k112_28.htm">IRP</A>, <B><A HREF="k105_17.htm">KeInitializeEvent</A></B>,
<B><A HREF="k105_56.htm">KeWaitForSingleObject</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
