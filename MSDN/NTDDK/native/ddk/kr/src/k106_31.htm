<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MmProbeAndLockPages</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MmProbeAndLockPages_KR"></A>MmProbeAndLockPages</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; MmProbeAndLockPages(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PMDL</B>&nbsp; <I>MemoryDescriptorList</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN KPROCESSOR_MODE</B>&nbsp; <I>AccessMode</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN LOCK_OPERATION</B>&nbsp; <I>Operation</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>MmProbeAndLockPages</B>&nbsp;probes specified pages, makes them resident, and
locks the physical pages mapped by the virtual address range in memory. The
MDL is updated to describe the physical pages.
<H3>Parameters</H3>
<DL>
<DT>
<I>MemoryDescriptorList</I>
<DD>
Points to an MDL that supplies a virtual address, byte offset, and length. The
physical page portion of the MDL is updated when the pages are locked in
memory.
<BR>
<DT>
<I>AccessMode</I>
<DD>
Specifies the access mode in which to probe the arguments, either <B>KernelMode</B>
or <B>UserMode</B>.
<BR>
<DT>
<I>Operation</I>
<DD>
Specifies the type of operation for which the caller wants the access rights
probed and the pages locked, one of <B>IoReadAccess</B>, <B>IoWriteAccess</B>,
or <B>IoModifyAccess</B>.
</DL>
<H3>Comments</H3>
<P>
The highest-level driver in a chain of layered drivers that use direct I/O
calls this routine. Drivers that use buffered I/O never call <B>MmProbeAndLockPages</B>.
<P>
If this routine fails, an exception is raised.  Any driver that calls <B>MmProbeAndLockPages</B>
must handle such an exception.
<P>
A lower-level driver cannot attempt to pass such an exception on to a
higher-level driver.  It cannot assume anything about a higher-level driver’s
exception handling capabilities. In particular, the driver cannot call <B>ExRaiseStatus</B>
to pass on such an exception. 
<P>
Callers of <B>MmProbeAndLockPages</B>&nbsp;must be running at IRQL &lt;
DISPATCH_LEVEL for pageable addresses, or at IRQL &lt;= DISPATCH_LEVEL for
nonpageable addresses.
<H3>See Also</H3>
<P>
<B><A HREF="k106_34.htm">MmUnlockPages</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
