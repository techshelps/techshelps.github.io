<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MmUnlockPagableImageSection</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_MmUnlockPagableImageSection_KR"></A>MmUnlockPagableImageSection</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; MmUnlockPagableImageSection(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>ImageSectionHandle</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>MmUnlockPagableImageSection</B>&nbsp;releases a section of driver code or driver
data, previously locked into system space with <B>MmLockPagableCodeSection</B>,
<B>MmLockPagableDataSection</B>&nbsp;or <B>MmLockPagableSectionByHandle</B>, so the
section can be paged out again.
<H3>Parameters</H3>
<DL>
<DT>
<I>ImageSectionHandle</I>
<DD>
Is the handle returned by a call to <B>MmLockPagableCodeSection</B>&nbsp;or <B>MmLockPagableDataSection</B>.
</DL>
<H3>Comments</H3>
<P>
The handle for a driver’s pageable section must not be released if the driver
has any outstanding IRPs in its device queue(s) or internal queue(s). A call
to <B>MmUnlockPagableImageSection</B>&nbsp;restores the pageability of that entire
section when there are no more references to the handle for that section. 
<P>
The memory manager maintains the reference count on the handle to a section. A
pageable section is only available to be paged out when the reference count is
zero. Every lock request increments the count; every unlock request decrements
the count. A driver must unlock a section as many times as it locks a section
to make the section available to be paged out.
<P>
A handle is always valid, no matter what the count. If the count on a handle
is zero and a call is made to <B>MmLockPagableSectionByHandle</B>, the count
is set to one, and if the section has been paged out, it will be paged in.
<P>
In most cases, <B>MmUnlockPagableImageSection</B>&nbsp;is called before a driver’s
Unload routine. That is, a driver with a pageable section is likely to have
its DispatchClose and/or DispatchShutdown routine call <B>MmUnlockPagableImageSection</B>
before its Unload routine is called. However, care should be taken in
unloadable drivers to release any pageable section before the driver itself is
unloaded from the system.
<P>
For more information on paging code and data, see <I>The Programmer’s Guide</I>.
<P>
Callers of <B>MmUnlockPagableImageSection</B>&nbsp;must be running at IRQL
PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k106_28.htm">MmPageEntireDriver</A></B>,<B><A HREF="k106_29.htm">
MmResetDriverPaging</A></B>,<B><A HREF="k106_23.htm">
MmLockPagableCodeSection</A></B>, <B><A HREF="k106_24.htm">MmLockPagableDataSection</A></B>,
<B><A HREF="k106_25.htm">MmLockPagableSectionByHandle</A></B>
<P></FONT>
</BODY>
</HTML>
