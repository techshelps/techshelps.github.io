<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExAcquireSharedWaitForExclusive</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExAcquireSharedWaitForExclusive_KR"></A>ExAcquireSharedWaitForExclusive</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; ExAcquireSharedWaitForExclusive(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PERESOURCE</B>&nbsp; <I>Resource</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>Wait</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExAcquireSharedWaitForExclusive</B>&nbsp;acquires the given resource for shared
access immediately if shared access can be granted. Optionally, the caller can
wait for other thread(s) to acquire and release exclusive ownership of the
resource. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Resource</I>
<DD>
Points to the resource to be acquired for shared access.
<BR>
<DT>
<I>Wait</I>
<DD>
Is set to TRUE if the caller will wait until the resource becomes available
when access cannot be granted immediately. 
</DL>
<H3>Return Value</H3>
<P>
<B>ExAcquireSharedWaitForExclusive</B>&nbsp;returns TRUE if the requested access is
granted or an exclusive owner releases the resource. This routine returns
FALSE if the input <I>Wait</I>&nbsp;is FALSE and shared access cannot be granted
immediately. 
<H3>Comments</H3>
<P>
Whether or when the caller is given shared access to the given resource
depends on the following:
<UL>
<LI>
If the resource is currently unowned, shared access is granted immediately to
the current thread.
<P>
<LI>
If the caller already has exclusive access to the resource, the current thread
is granted the same type of access recursively. 
<P>
<LI>
If the resource is currently owned as shared and there are no pending attempts
to acquire exclusive access, shared access is granted to the caller
immediately. 
<P>
<LI>
If the resource is currently owned as shared but there is a pending attempt to
acquire exclusive access, the caller either is put into a wait state (<I>Wait</I>
set to TRUE) or <B>ExAcquireSharedWaitForExclusive</B>&nbsp;returns FALSE. 
<P>
When the current thread waits to acquire the resource until after a pending
exclusive ownership has been released, <B>ExAcquireSharedWaitForExclusive</B>
returns TRUE when the current thread is granted shared access to the resource
and resumes execution. 
</UL>
<P>
Callers of <B>ExAcquireSharedWaitForExclusive</B>&nbsp;must be running at IRQL &lt;
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="k102_5.htm">ExAcquireResourceSharedLite</A></B>,
<B><A HREF="k102_6.htm">ExAcquireSharedStarveExclusive</A></B>,
<B><A HREF="k102_15.htm">ExConvertExclusiveToSharedLite</A></B>,
<B><A HREF="k102_26.htm">ExGetExclusiveWaiterCount</A></B>, <B><A HREF="k102_53.htm">ExIsResourceAcquiredExclusiveLite</A></B>,
<B><A HREF="k102_54.htm">ExIsResourceAcquiredSharedLite</A></B>,
<B><A HREF="k102_67.htm">ExTryToAcquireResourceExclusiveLite</A></B>
<P></FONT>
</BODY>
</HTML>
