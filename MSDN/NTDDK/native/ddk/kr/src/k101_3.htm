<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.1.2  Registry</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Registry_KR"></A>1.1.2  Registry</H3>
<DL>
<DT>
<B><A HREF="k104_8.htm">IoAssignResources</A>&nbsp;</B>
<DD>
Takes an input list of preferred and alternative, or required, hardware
resources needed for a driver or device, inspects the registry for available
hardware resources, claims hardware resources in the registry <B>ResourceMap</B>
tree, and returns configuration information about the hardware resources it
claimed for the caller.
<BR>
<DT>
<B><A HREF="k103_2.htm">HalAssignSlotResources</A>&nbsp;</B>
<DD>
Like <B>IoAssignResources</B>, takes an input list of preferred and
alternative hardware resources and claims available hardware resources in the
registry <B>ResourceMap</B>&nbsp;tree, returning information about the resources it
claimed to the caller. However, this routine claims hardware resources only
for drivers of devices on any given type of dynamically configurable I/O bus
with a published standard interface.
<BR>
<DT>
<B><A HREF="k104_57.htm">IoQueryDeviceDescription</A>&nbsp;</B>
<DD>
Supplies basic hardware information about one or more of the given bus type
and bus number, controller type and controller number, and/or peripheral type
and peripheral number from the registry to a driver-supplied
configuration-callback routine.
<BR>
<DT>
<B><A HREF="k104_65.htm">IoReportResourceUsage</A>&nbsp;</B>
<DD>
Claims hardware resources, such as ports in I/O space or device registers in
memory space, an interrupt vector, or a particular DMA controller channel, in
the registry so that a subsequently loaded driver cannot attempt to use the
same resources. To claim most types of resources, calling <B>IoAssignResources</B>
or <B>HalAssignSlotResources</B>&nbsp;is preferable.
<BR>
<DT>
<B><A HREF="k109_16.htm">RtlCheckRegistryKey</A>&nbsp;</B>
<DD>
Returns STATUS_SUCCESS if a key exists in the registry along the given
relative path.
<BR>
<DT>
<B><A HREF="k109_26.htm">RtlCreateRegistryKey</A>&nbsp;</B>
<DD>
Adds a key object in the registry along the given relative path.
<BR>
<DT>
<B><A HREF="k109_66.htm">RtlQueryRegistryValues</A>&nbsp;</B>
<DD>
Gives the driver-supplied QueryRegistry callback (read only) access to the
entries for the specified value name along the specified relative path in the
registry when the QueryRegistry routine is given control.
<BR>
<DT>
<B><A HREF="k109_79.htm">RtlWriteRegistryValue</A>&nbsp;</B>
<DD>
Writes caller-supplied data into the registry along the specified relative
path at the given value name.
<BR>
<DT>
<B><A HREF="k109_28.htm">RtlDeleteRegistryValue</A>&nbsp;</B>
<DD>
Removes the specified value name (and the associated value entries) from the
registry along the given relative path.
<BR>
<DT>
<B><A HREF="k109_2.htm">InitializeObjectAttributes</A>&nbsp;</B>
<DD>
Sets up a parameter of type OBJECT_ATTRIBUTES for a subsequent call to a <B>ZwCreate</B><I>Xxx</I>
or <B>ZwOpen</B><I>Xxx</I>&nbsp;routine.
<BR>
<DT>
<B><A HREF="k111_4.htm">ZwCreateKey</A>&nbsp;</B>
<DD>
Creates a new key in the registry with the given object attributes, allowed
access, and creation options (such as whether the key is re-created when the
system is booted), or opens an existing key, and returns a handle for the key
object.
<BR>
<DT>
<B><A HREF="k111_11.htm">ZwOpenKey</A>&nbsp;</B>
<DD>
Returns a handle for a key in the registry, given the object’s attributes
(which must include a name for the key) and the desired access to the object.
<BR>
<DT>
<B><A HREF="k111_14.htm">ZwQueryKey</A>&nbsp;</B>
<DD>
Returns information about the class of a key, and the number and sizes of its
subkeys, such as the length of subkey names and the size of value entries.
<BR>
<DT>
<B><A HREF="k111_6.htm">ZwEnumerateKey</A>&nbsp;</B>
<DD>
Returns the specified information about the subkeys of an opened key in the
registry.
<BR>
<DT>
<B><A HREF="k111_7.htm">ZwEnumerateValueKey</A>&nbsp;</B>
<DD>
Returns the specified information about the value entry, as selected by a
zero-based index, of an opened key in the registry.
<BR>
<DT>
<B><A HREF="k111_15.htm">ZwQueryValueKey</A>&nbsp;</B>
<DD>
Returns the value entry, as selected by a zero-based index, for an opened key
in the registry.
<BR>
<DT>
<B><A HREF="k111_19.htm">ZwSetValueKey</A>&nbsp;</B>
<DD>
Replaces (or creates) a value entry for an opened key in the registry.
<BR>
<DT>
<B><A HREF="k111_8.htm">ZwFlushKey</A>&nbsp;</B>
<DD>
Forces changes made by <B>ZwCreateKey</B>&nbsp;or <B>ZwSetValueKey</B>&nbsp;for the
opened key object to be written to disk.
<BR>
<DT>
<B><A HREF="k111_5.htm">ZwDeleteKey</A>&nbsp;</B>
<DD>
Removes a key and its value entries from the registry as soon as the key is
closed.
<BR>
<DT>
<B><A HREF="k111_1.htm">ZwClose</A>&nbsp;</B>
<DD>
Releases the handle for an opened object, causing the handle to become invalid
and decrementing the reference count of the object handle.
</DL>
<P></FONT>
</BODY>
</HTML>
