<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IoAttachDeviceToDeviceStack</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IoAttachDeviceToDeviceStack_KR"></A>IoAttachDeviceToDeviceStack</H2>
<P>
<B>PDEVICE_OBJECT <BR>
&nbsp; &nbsp; IoAttachDeviceToDeviceStack(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>SourceDevice</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>TargetDevice</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>IoAttachDeviceToDeviceStack</B>&nbsp;attaches the caller’s device object to the
highest device object in the chain and returns a pointer to the previously
highest device object. I/O requests bound for the target device are routed
first to the caller.
<H3>Parameters</H3>
<DL>
<DT>
<I>SourceDevice</I>
<DD>
Points to the caller-created device object.
<BR>
<DT>
<I>TargetDevice</I>
<DD>
Points to another driver’s device object, such as a pointer returned by a
preceding call to <B>IoGetDeviceObjectPointer</B>.
</DL>
<H3>Return Value</H3>
<P>
<B>IoAttachDeviceToDeviceStack</B>&nbsp;returns a pointer to the device object to
which the <I>SourceDevice</I>&nbsp;was attached. The returned device object pointer
can differ from <I>TargetDevice</I>&nbsp;if <I>TargetDevice</I>&nbsp;had additional
drivers layered on top of it.
<P>
<B>IoAttachDeviceToDeviceStack</B>&nbsp;returns NULL if it could not attach the
device object because, for example, the target device was being unloaded.
<H3>Comments</H3>
<P>
<B>IoAttachDeviceToDeviceStack</B>&nbsp;establishes layering between drivers so
that the same IRPs are sent to each driver in the chain.
<P>
An intermediate driver can use this routine during initialization to attach
its own device object to another driver’s device object. Subsequent I/O
requests sent to <I>TargetDevice</I>&nbsp;are sent first to the intermediate
driver.
<P>
This routine sets the <B>AlignmentRequirement</B>&nbsp;in <I>SourceDevice</I>&nbsp; to
the value in the next-lower device object and sets the <B>StackSize</B>&nbsp;to the
value in the next-lower-object plus one.
<P>
A driver writer must take care to call this routine <I>before</I>&nbsp;any drivers
that must layer on top of their driver. <B>IoAttachDeviceToDeviceStack</B>
attaches <I>SourceDevice</I>&nbsp;to the highest device object currently layered in
the chain and has no way to determine whether drivers are being layered in the
correct order.
<P>
A driver that acquired a pointer to the target device by calling <B>IoGetDeviceObjectPointer
</B>should call <B>ObDereferenceObject</B>&nbsp;with the file object pointer that
was returned by <B>IoGetDeviceObjectPointer</B>&nbsp;to release its reference to
the file object before it detaches its own device object, for example, when
such a higher-level driver is unloaded.<B>&nbsp;</B>
<P>
Callers of <B>IoAttachDeviceToDeviceStack</B>&nbsp;must be running at IRQL
PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k104_9.htm">IoAttachDevice</A></B>, <B><A HREF="k104_31.htm">IoDetachDevice</A></B>,
<B><A HREF="k107_1.htm">ObDereferenceObject</A></B>, <B><A HREF="k104_42.htm">IoGetDeviceObjectPointer</A></B>
<P></FONT>
</BODY>
</HTML>
