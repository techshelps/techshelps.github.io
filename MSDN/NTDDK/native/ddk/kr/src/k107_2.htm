<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ObReferenceObjectByHandle</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ObReferenceObjectByHandle_KR"></A>ObReferenceObjectByHandle</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ObReferenceObjectByHandle(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN HANDLE</B>&nbsp; <I>Handle</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ACCESS_MASK</B>&nbsp; <I>DesiredAccess</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN POBJECT_TYPE</B>&nbsp; <I>ObjectType</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN KPROCESSOR_MODE</B>&nbsp; <I>AccessMode</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PVOID</B>&nbsp; <I>*Object</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT POBJECT_HANDLE_INFORMATION</B>&nbsp; <I>HandleInformation</I>&nbsp;&nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ObReferenceObjectByHandle</B>&nbsp;provides access validation on the object
handle, and, if access can be granted, returns the corresponding pointer to
the object’s body.
<H3>Parameters</H3>
<DL>
<DT>
<I>Handle</I>
<DD>
Specifies an open handle for an object.
<BR>
<DT>
<I>DesiredAccess</I>
<DD>
Specifies the requested types of access to the object. The interpretation of
this field is dependent on the object type.
<BR>
<DT>
<I>ObjectType</I>
<DD>
Points to the object type structure for the object’s type (optional).
<BR>
<DT>
<I>AccessMode</I>
<DD>
Specifies the access mode to use for the access check. It must be either <B>UserMode</B>
or <B>KernelMode</B>. Lower-level drivers should specify <B>KernelMode</B>.
<BR>
<DT>
<I>Object</I>
<DD>
Points to a variable that receives a pointer to the object’s body.
<BR>
<DT>
<I>HandleInformation</I>
<DD>
Points to a structure that receives the handle attributes and the granted
access rights for the object.
</DL>
<H3>Return Value</H3>
<P>
<B>ObReferenceObjectByHandle</B>&nbsp;can return one of the following status codes:
<P>
STATUS_SUCCESS<BR>
STATUS_OBJECT_TYPE_MISMATCH<BR>
STATUS_ACCESS_DENIED<BR>
STATUS_INVALID_HANDLE
<H3>Comments</H3>
<P>
A pointer to the object body is retrieved from the object table entry and
returned to the caller by means of the <I>Object</I>&nbsp;parameter.
<P>
If the <I>AccessMode</I>&nbsp;parameter is <B>KernelMode</B>, the requested access
is always allowed. If <I>AccessMode</I>&nbsp;is <B>UserMode</B>, the requested
access is compared to the granted access for the object. Only highest-level
drivers can safely specify <B>UserMode</B>&nbsp;for the input <I>AccessMode</I>.
<P>
If the call succeeds, a pointer to the object body is returned to the caller
and the pointer reference count is incremented. Incrementing this count
prevents the object from being deleted while the pointer is being referenced.
<P>
Callers of this function must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k107_1.htm">ObDereferenceObject</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
