<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IoMapTransfer</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IoMapTransfer_KR"></A>IoMapTransfer</H2>
<P>
<B>PHYSICAL_ADDRESS <BR>
&nbsp; &nbsp; IoMapTransfer(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PADAPTER_OBJECT</B>&nbsp; <I>AdapterObject</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PMDL</B>&nbsp; <I>Mdl</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>MapRegisterBase</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>CurrentVa</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PULONG</B>&nbsp; <I>Length</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>WriteToDevice</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>IoMapTransfer</B>&nbsp;sets up a number of map registers (up to the number
returned by <B>HalGetAdapter</B>) for the given adapter object to map a
transfer from a locked-down buffer specified by <I>Mdl</I>, the given <I>CurrentVa</I>
into the MDL, <I>Length</I>&nbsp;in bytes to be transferred, and transfer
direction.
<H3>Parameters</H3>
<DL>
<DT>
<I>AdapterObject</I>
<DD>
Points to the adapter object pointer returned by <B>HalGetAdapter</B>&nbsp;and
already passed in a call to <B>IoAllocateAdapterChannel</B>&nbsp;for the current
IRP’s transfer request.
<BR>
<DT>
<I>Mdl</I>
<DD>
Points to the MDL describing the buffer either in the current IRP at <B>MdlAddress</B>
or the MDL that the driver of a slave device using auto-initialize mode set up
to describe the driver’s common buffer.
<BR>
<DT>
<I>MapRegisterBase</I>
<DD>
Points to the handle returned by <B>IoAllocateAdapterChannel</B>, which the
driver already called for the current IRP.
<BR>
<DT>
<I>CurrentVa</I>
<DD>
Points to the current virtual address in the buffer, described by the <I>Mdl</I>,
to be mapped for a DMA transfer operation.
<BR>
<DT>
<I>Length</I>
<DD>
Specifies the length, in bytes, to be mapped. If the driver indicated that its
device was a busmaster with scatter/gather support when it called <B>HalGetAdapter</B>,
the value of <I>Length</I>&nbsp;on return from <B>IoMapTransfer</B>&nbsp;indicates how
many bytes were mapped. Otherwise, the input and output values of <I>Length</I>
are identical.
<BR>
<DT>
<I>WriteToDevice</I>
<DD>
Indicates the direction of the transfer operation: TRUE for a transfer from
the locked-down buffer to the device.
</DL>
<H3>Return Value</H3>
<P>
<B>IoMapTransfer</B>&nbsp;returns the logical address of the region mapped, which
the driver of a busmaster adapter can use. Drivers of devices that use a
system DMA controller cannot use this value and should ignore it.
<H3>Comments</H3>
<P>
The <I>AdapterObject</I>&nbsp;must have already been allocated to the driver in a
preceding call to <B>IoAllocateAdapterChannel</B>.
<P>
The number of map registers that can be set up cannot exceed the maximum
returned when the driver called <B>HalGetAdapter</B>.
<P>
The initial <I>CurrentVa</I>&nbsp;for the start of a packet-based DMA transfer can
be obtained by calling <B>MmGetMdlVirtualAddress</B>. However, the value
returned is an index into the <I>Mdl</I>, rather than a valid virtual address.
If the driver must split a large transfer request into more than one DMA
operation, <I>CurrentVa</I>&nbsp;and <I>Length</I>&nbsp;must be updated for each DMA
operation.
<P>
The driver of a busmaster device with scatter/gather support can use the
returned logical address and updated <I>Length</I>&nbsp;value to build a
scatter/gather list, calling <B>IoMapTransfer</B>&nbsp;repeatedly until it has used
all available map registers for the transfer operation.
<P>
Callers of <B>IoMapTransfer</B>&nbsp;must be running at IRQL &lt;= DISPATCH_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k106_1.htm">ADDRESS_AND_SIZE_TO_SPAN_PAGES</A></B>,
<B><A HREF="k103_1.htm">HalAllocateCommonBuffer</A></B>, <B><A HREF="k103_5.htm">HalGetAdapter</A></B>,
<B><A HREF="k104_2.htm">IoAllocateAdapterChannel</A></B>, <B><A HREF="k104_33.htm">IoFlushAdapterBuffers</A></B>,
<B><A HREF="k104_34.htm">IoFreeAdapterChannel</A></B>, <B><A HREF="k104_37.htm">IoFreeMapRegisters</A></B>,
<B><A HREF="k105_10.htm">KeFlushIoBuffers</A></B>, <B><A HREF="k106_16.htm">MmGetMdlVirtualAddress</A></B>
<P></FONT>
</BODY>
</HTML>
