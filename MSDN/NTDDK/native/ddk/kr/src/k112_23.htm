<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FILE_OBJECT</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_FILE_OBJECT_KR"></A>FILE_OBJECT</H2>
<P>
To user-mode protected subsystems, a file object represents an open instance
of a file, device, directory, or volume. To device and intermediate drivers, a
file object usually represents a device object.
<P>
A file object is partially opaque. Certain types of drivers, such as FSDs and
network transport drivers, use some of the fields of file objects. The
following fields in file objects are accessible to drivers.
<H3>Accessible Fields</H3>
<DL>
<DT>
<B>PDEVICE_OBJECT DeviceObject</B>
<DD>
Points to the device object on which the file is opened.
<BR>
<DT>
<B>PVOID FsContext</B>
<DD>
Points to whatever optional state a driver maintains about the file object;
otherwise, NULL.
<BR>
<DT>
<B>PVOID FsContext2</B>
<DD>
Points to whatever additional state a driver maintains about the file object;
otherwise, NULL.
<BR>
<DT>
<B>UNICODE_STRING FileName</B>
<DD>
Is the name of the file opened on the device, or the <B>Length</B>&nbsp;of the
string is zero if the device represented by <B>DeviceObject</B>&nbsp;is being
opened.
</DL>
<H3>Comments</H3>
<P>
Drivers can use the <B>FsContext</B>&nbsp;fields to maintain driver-determined
state about an open file object. A driver cannot use these fields of a file
object unless it is accessible in the driver’s I/O stack location of an IRP. 
<P>
The remaining fields in a file object are opaque. They are reserved for use by
the I/O Manager and file systems.
<P>
Undocumented fields within a file object should be considered inaccessible.
Drivers with dependencies on object field locations or access to undocumented
fields might not remain portable and interoperable with other drivers over
time.
<P>
A higher-level driver that successfully calls <B>IoGetDeviceObjectPointer</B>
during initialization is given a pointer to the file object that represents
the next-lower driver’s device object in user mode. Such a higher-level driver
should save the returned file object pointer. To release its reference to this
file object, for example when the driver is being unloaded, the driver must
call <B>ObDereferenceObject</B>&nbsp;with this file object pointer. 
<H3>See Also</H3>
<P>
<A HREF="k112_15.htm">DEVICE_OBJECT</A>, <B><A HREF="k104_42.htm">IoGetDeviceObjectPointer</A></B>,<B>
<A HREF="k107_1.htm">ObDereferenceObject</A>&nbsp;</B>
<P></FONT>
</BODY>
</HTML>
