<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExExtendZone</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExExtendZone_KR"></A>ExExtendZone</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; ExExtendZone(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PZONE_HEADER</B>&nbsp; <I>Zone</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>Segment</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>SegmentSize</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExExtendZone</B>&nbsp;extends a zone by adding another segment’s worth of blocks
to the zone.
<H3>Parameters</H3>
<DL>
<DT>
<I>Zone</I>
<DD>
Points to the address of a zone header to be extended.
<BR>
<DT>
<I>Segment</I>
<DD>
Points to a segment of storage. The base address of the segment must be
aligned on an 8-byte boundary.
<BR>
<DT>
<I>SegmentSize</I>
<DD>
Is the size in bytes of <I>Segment</I>.
</DL>
<H3>Return Value</H3>
<P>
<B>ExExtendZone</B>&nbsp;returns one of the following: 
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Status</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Meaning</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_UNSUCCESSFUL
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<I>Segment</I>&nbsp;was not aligned on an 8-byte boundary or a block size was
larger than <I>SegmentSize</I>.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
STATUS_SUCCESS
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
The zone was successfully extended.
</FONT></TABLE>
<H3>Comments</H3>
<P>
When a zone has no free blocks, additional temporary memory should be
allocated with <B>ExAllocatePool</B>, rather than <B>ExExtendZone</B>&nbsp;or <B>ExInterlockedExtendZone</B>.
Such a temporary allocation can be released with <B>ExFreePool</B>&nbsp;when the
original zone has free entries again.
<P>
<B>ExExtendZone</B>&nbsp;allocates memory that remains allocated to its caller
until the machine is rebooted. Consequently, <B>ExExtendZone</B>&nbsp;should not be
called every time a call to <B>ExIsFullZone</B>&nbsp;returns TRUE. Call <B>ExExtendZone</B>
only for a very heavy I/O demand situation when neither the original zone’s
entries are being released nor the temporary memory allocated with <B>ExAllocatePool</B>.
<P>
The first ZONE_SEGMENT_HEADER-sized portion of the segment is used by the zone
allocator. The remainder of the segment is divided into fixed-size blocks, as
specified by <I>BlockSize</I>&nbsp;in the original call to <B>ExInitializeZone</B>,
and added to the zone.
<P>
Callers of <B>ExExtendZone</B>&nbsp;must be running at IRQL &lt;= DISPATCH_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k102_10.htm">ExAllocateFromZone</A></B>, <B><A HREF="k102_11.htm">ExAllocatePool</A></B>,
<B><A HREF="k102_21.htm">ExFreePool</A></B>, <B><A HREF="k102_24.htm">ExFreeToZone</A></B>,
<B><A HREF="k102_35.htm">ExInitializeZone</A></B>, <B><A HREF="k102_38.htm">ExInterlockedAllocateFromZone</A></B>,
<B><A HREF="k102_41.htm">ExInterlockedExtendZone</A></B>, <B><A HREF="k102_42.htm">ExInterlockedFreeToZone</A></B>,
<B><A HREF="k102_51.htm">ExIsFullZone</A></B>, <B><A HREF="k102_52.htm">ExIsObjectInFirstZoneSegment</A></B>
<P></FONT>
</BODY>
</HTML>
