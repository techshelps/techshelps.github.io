<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HalAssignSlotResources</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_HalAssignSlotResources_KR"></A>HalAssignSlotResources</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; HalAssignSlotResources(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PUNICODE_STRING</B>&nbsp; <I>RegistryPath</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PUNICODE_STRING</B>&nbsp; <I>DriverClassName</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; /*
optional */<B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PDRIVER_OBJECT  </B><I>DriverObject</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PDEVICE_OBJECT  </B><I>DeviceObject</I><B>,</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /*
optional */<I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; </I><B>IN INTERFACE_TYPE  </B><I>BusType</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN ULONG</B>&nbsp; <I>BusNumber</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp; <I>SlotNumber</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN OUT PCM_RESOURCE_LIST  *</B><I>AllocatedResources</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
For drivers of devices connected to dynamically configurable I/O buses of a
type with a published standard interface, <B>HalAssignSlotResources</B>
determines the resource requirements of the target device, calls <B>IoAssignResources</B>
to allocate them, sets the target device with its assigned resources, and
returns the assignments to the caller.
<H3>Parameters</H3>
<DL>
<DT>
<I>RegistryPath</I>
<DD>
Is the <I>RegistryPath</I>&nbsp;pointer passed in to the DriverEntry routine during
initialization if the <I>DeviceObject</I>&nbsp;pointer is NULL. The buffered
Unicode string is read-only, giving access to the driver-specific registry key
<B>\Registry\Machine\System\CurrentControlSet\Services\</B><I>DriverName</I>
with its <B>\Parameters</B>&nbsp;subkey(s). The caller is responsible for creating
and updating the <I>RegistryPath</I>&nbsp;string if it calls this routine to claim
one or more sets of device-specific resources for the device(s) on a
multifunction adapter at the given <I>SlotNumber</I>.
<BR>
<DT>
<I>DriverClassName</I>
<DD>
Points to a Unicode string that describes the class of driver under which
driver-specific information should be stored in the registry. A default type
of <B>Other</B>&nbsp;is used if none is given, and a new key is created in the
registry if a unique name is supplied. If this pointer is nonNULL, the caller
is claiming a set of resources it uses in common for the device(s) at the
given <I>SlotNumber</I>.
<BR>
<DT>
<I>DriverObject</I>
<DD>
Points to the driver object that was input to the DriverEntry routine.
<BR>
<DT>
<I>DeviceObject</I>
<DD>
Points to the driver-created device object representing the physical device
for which the driver is attempting to claim device-specific resources. If this
pointer is nonNULL, the caller usually supports more than one device on a
multifunction adapter at the given <I>SlotNumber</I>. For each nonNULL <I>DeviceObject</I>,
such a driver’s calls to this routine must write resource data into the
registry under a unique, device-specific subkey of the <I>RegistryPath</I>
pointer that was input to the DriverEntry routine.
<BR>
<DT>
<I>BusType</I>
<DD>
Specifies the type of bus on which the device is connected. Currently, this
value can be the following: <B>PCIBus</B>. However, additional types of
dynamically configurable buses will be supported in future versions of Windows
NT. The upper bound on the interface types supported is always <B>MaximumInterfaceType</B>.
<BR>
<DT>
<I>BusNumber</I>
<DD>
Specifies the zero-based and system-assigned number of the bus.
<BR>
<DT>
<I>SlotNumber</I>
<DD>
Specifies the logical slot number at which the driver found its device(s) when
it called <B>HalGetBusData</B>.
<BR>
<DT>
<I>*AllocatedResources</I>
<DD>
Specifies a pointer to an uninitialized pointer. If the call is successful, <B>HalAssignSlotResources</B>
allocates a buffer, fills in the assigned resource list, and resets the
embedded pointer to the start of the CM_RESOURCE_LIST buffer.
</DL>
<H3>Return Value</H3>
<P>
<B>HalAssignSlotResources</B>&nbsp;returns STATUS_SUCCESS if a set of resources was
claimed for the caller under the registry <B>\ResourceMap</B>&nbsp;key.
<H3>Comments</H3>
<P>
A driver cannot call this routine unless its device(s) are connected to a
dynamically configurable I/O bus of a type that has a defined, publically
documented, industry-standard interface. Drivers of devices that do not meet
this condition can call <B>IoAssignResources</B>&nbsp;or <B>IoReportResourceUsage</B>
instead.
<P>
The driver should save pertinent values from the <I>AllocatedResources</I>
list so it can pass the appropriate values in calls to other configuration
routines, such as <B>HalGetInterrupt</B>&nbsp;and <B>HalGetAdapter</B>. The caller
is responsible for releasing the <I>AllocatedResources</I>&nbsp;buffer with <B>ExFreePool</B>.
<P>
Callers of <B>HalAssignSlotResources</B>&nbsp;must be running at IRQL
PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<A HREF="k112_11.htm">CM_RESOURCE_LIST</A>, <B><A HREF="k102_21.htm">ExFreePool</A></B>,
<B><A HREF="k103_6.htm">HalGetBusData</A></B>, <B><A HREF="k104_8.htm">IoAssignResources</A></B>
<P></FONT>
</BODY>
</HTML>
