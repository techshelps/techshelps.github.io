<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.4.4  Address Mappings and MDLs</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Address_Mappings_and_MDLs_KR"></A>1.4.4  Address Mappings and MDLs</H3>
<DL>
<DT>
<B><A HREF="k103_14.htm">HalTranslateBusAddress</A>&nbsp;</B>
<DD>
Returns the corresponding physical address in system memory for a given
bus-relative logical address.
<BR>
<DT>
<B><A HREF="k106_17.htm">MmGetPhysicalAddress</A>&nbsp;</B>
<DD>
Returns the corresponding physical address for a given valid virtual address.
<BR>
<DT>
<B><A HREF="k106_16.htm">MmGetMdlVirtualAddress</A>&nbsp;</B>
<DD>
Returns a (possibly invalid) virtual address for a buffer described by a given
MDL; the returned address, used as an index to a physical address entry in the
MDL, can be input to <B>IoMapTransfer</B>&nbsp;for drivers that use DMA.
<BR>
<DT>
<B><A HREF="k106_18.htm">MmGetSystemAddressForMdl</A>&nbsp;</B>
<DD>
Returns a system-space virtual address that maps the physical pages described
by a given MDL for drivers whose devices must use PIO.
<BR>
<DT>
<B><A HREF="k106_10.htm">MmBuildMdlForNonPagedPool</A>&nbsp;</B>
<DD>
Fills in the corresponding physical addresses of a given MDL that specifies a
range of virtual addresses in nonpaged pool.
<BR>
<DT>
<B><A HREF="k106_14.htm">MmGetMdlByteCount</A>&nbsp;</B>
<DD>
Returns the length in bytes of the buffer mapped by a given MDL.
<BR>
<DT>
<B><A HREF="k106_15.htm">MmGetMdlByteOffset</A></B>&nbsp;
<DD>
Returns the byte offset within a page of the buffer described by a given MDL.
<BR>
<DT>
<B><A HREF="k106_27.htm">MmMapLockedPages</A>&nbsp;</B>
<DD>
Maps already locked physical pages, described by a given MDL, to a returned
virtual address range.
<BR>
<DT>
<B><A HREF="k106_37.htm">MmUnmapLockedPages</A>&nbsp;</B>
<DD>
Releases a mapping set up by <B>MmMapLockedPages</B>.
<BR>
<DT>
<B><A HREF="k106_20.htm">MmIsAddressValid</A>&nbsp;</B>
<DD>
Returns whether a page fault will occur if a read or write is done at the
given virtual address.
<BR>
<DT>
<B><A HREF="k106_33.htm">MmSizeOfMdl</A>&nbsp;</B>
<DD>
Returns the number of bytes required for an MDL describing the buffer
specified by the given virtual address and length in bytes.
<BR>
<DT>
<B><A HREF="k106_11.htm">MmCreateMdl</A>&nbsp;</B>
<DD>
Allocates and initializes an MDL describing a buffer specified by the given
virtual address and length in bytes; returns a pointer to the MDL.
<BR>
<DT>
<B><A HREF="k106_30.htm">MmPrepareMdlForReuse</A>&nbsp;</B>
<DD>
Reinitializes a caller-created MDL for reuse.
<BR>
<DT>
<B><A HREF="k106_19.htm">MmInitializeMdl</A>&nbsp;</B>
<DD>
Initializes a caller-created MDL to describe a buffer specified by the given
virtual address and length in bytes.
<BR>
<DT>
<B><A HREF="k106_26.htm">MmMapIoSpace</A>&nbsp;</B>
<DD>
Maps a physical address range to a cached or noncached virtual address range
in nonpaged system space.
<BR>
<DT>
<B><A HREF="k106_36.htm">MmUnmapIoSpace</A>&nbsp;</B>
<DD>
Unmaps a virtual address range from a physical address range.
<BR>
<DT>
<B><A HREF="k106_31.htm">MmProbeAndLockPages</A>&nbsp;</B>
<DD>
Probes the pages specified in an MDL for a particular kind of access, makes
the pages resident, and locks them in memory; returns the MDL updated with
corresponding physical addresses. (Usually, only highest-level drivers call
this routine.)
<BR>
<DT>
<B><A HREF="k106_34.htm">MmUnlockPages</A>&nbsp;</B>
<DD>
Unlocks the previously probed and locked pages specified in an MDL.
<BR>
<DT>
<B><A HREF="k104_6.htm">IoAllocateMdl</A>&nbsp;</B>
<DD>
Allocates an MDL large enough to map the starting address and length supplied
by the caller; optionally associates the MDL with a given IRP.
<BR>
<DT>
<B><A HREF="k104_14.htm">IoBuildPartialMdl</A>&nbsp;</B>
<DD>
Builds an MDL for the specified starting virtual address and length in bytes
from a given source MDL. Drivers that split large transfer requests into a
number of smaller transfers can call this routine.
<BR>
<DT>
<B><A HREF="k104_38.htm">IoFreeMdl</A>&nbsp;</B>
<DD>
Releases a given MDL allocated by the caller.
</DL>
<P></FONT>
</BODY>
</HTML>
