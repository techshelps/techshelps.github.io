<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8.2  Tape I/O Control Codes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Tape_I_O_Control_Codes_KR"></A>8.2  Tape I/O Control Codes</H2>
<P>
All public I/O control codes for drivers of tape devices use buffered I/O.
Consequently, the input or output data for these requests is at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<P>
Class drivers for SCSI tape devices handle additional public I/O control
codes, along with those described in this section. See also <A HREF="k209.htm">Chapter
9</A>&nbsp;for more information about requirements for SCSI class drivers of
mass-storage devices.
<H3>IOCTL_TAPE_ERASE</H3>
<H4>Operation</H4>
<P>
Erases the current tape partition, either as a TAPE_ERASE_LONG (a.k.a.
“secure”) operation that overwrites data with a pattern or as a
TAPE_ERASE_SHORT (a.k.a. “quick”) operation that writes an
end-of-recorded-data mark at the current position.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_ERASE).
If the <B>Immediate</B>&nbsp;member is TRUE, the operation should be asynchronous.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes transferred. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_INFO_LENGTH_MISMATCH,
STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE, STATUS_IO_TIMEOUT,
STATUS_IO_DEVICE_ERROR, STATUS_MEDIA_WRITE_PROTECTED,
STATUS_INSUFFICIENT_RESOURCES, STATUS_NOT_IMPLEMENTED,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_PREPARE</H3>
<H4>Operation</H4>
<P>
Loads or unloads tape, resets the tape’s tension, locks or unlocks the
ejection mechanism, or formats the tape.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_PREPARE).
If the <B>Immediate</B>&nbsp;member is TRUE, the operation should be asynchronous.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes transferred. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_IO_DEVICE_ERROR, STATUS_INSUFFICIENT_RESOURCES,
STATUS_DEVICE_NOT_CONNECTED, STATUS_MEDIA_WRITE_PROTECTED,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_WRITE_MARKS</H3>
<H4>Operation</H4>
<P>
Writes one of setmarks, filemarks, short filemarks, or long filemarks to tape.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_WRITE_MARKS).
If the <B>Immediate</B>&nbsp;member is TRUE, the operation should be asynchronous.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes written. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_INFO_LENGTH_MISMATCH,
STATUS_IO_DEVICE_ERROR, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_MEDIA_WRITE_PROTECTED,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_CHECK_VERIFY</H3>
<H4>Operation</H4>
<P>
This IOCTL is replaced by IOCTL_STORAGE_CHECK_VERIFY. The only difference
between the two IOCTLs is the base code. 
<H3>IOCTL_STORAGE_CHECK_VERIFY</H3>
<H4>Operation</H4>
<P>
Determines whether the media has changed on a tape drive.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field must be
set to either of STATUS_SUCCESS or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_GET_POSITION</H3>
<H4>Operation</H4>
<P>
Returns the current absolute, logical, or pseudological partition and offset
position on the tape.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_GET_POSITION).
<H4>Output</H4>
<P>
The driver returns the TAPE_GET_POSITION data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_INFO_LENGTH_MISMATCH,
STATUS_IO_DEVICE_ERROR, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_NO_MEDIA_IN_DEVICE, or
STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_SET_POSITION</H3>
<H4>Operation</H4>
<P>
Moves the current position on the tape to the specified partition and offset,
according to the given method.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_SET_POSITION).
If the <B>Immediate</B>&nbsp;member is TRUE, the operation should be asynchronous.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INFO_LENGTH_MISMATCH,
STATUS_IO_DEVICE_ERROR, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_NO_MEDIA_IN_DEVICE, or
STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_GET_DRIVE_PARAMS</H3>
<H4>Operation</H4>
<P>
Returns information about the tape drive’s capabilities, such as its default
block size, maximum and minimum block sizes, maximum partition count, whether
the drive has EEC, compression, data padding, and report-setmark capabilities,
that is, which configurable features the drive supports, including the EOT
warning zone size.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_GET_DRIVE_PARAMETERS).
<H4>Output</H4>
<P>
The driver returns the TAPE_GET_DRIVE_PARAMETERS data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_INFO_LENGTH_MISMATCH,
STATUS_IO_DEVICE_ERROR, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, or STATUS_DEVICE_NOT_READY.
<H3>IOCTL_TAPE_SET_DRIVE_PARAMS</H3>
<H4>Operation</H4>
<P>
Adjusts a tape drive’s configurable parameters.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_SET_DRIVE_PARAMETERS).
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the values to
be set.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_IO_DEVICE_ERROR,
STATUS_INVALID_DEVICE_REQUEST, STATUS_DEVICE_DATA_ERROR,
STATUS_NO_SUCH_DEVICE, STATUS_IO_TIMEOUT, STATUS_INFO_LENGTH_MISMATCH, or
STATUS_DEVICE_NOT_READY.
<H3>IOCTL_TAPE_GET_MEDIA_PARAMS</H3>
<H4>Operation</H4>
<P>
Returns information about the media’s total and remaining capacity, its block
size, the number of partitions, and whether it is write-protected.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_GET_MEDIA_PARAMETERS).
<H4>Output</H4>
<P>
The driver returns the TAPE_GET_MEDIA_PARAMETERS data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_IO_DEVICE_ERROR,
STATUS_DEVICE_DATA_ERROR, STATUS_DATA_OVERRUN, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_INFO_LENGTH_MISMATCH,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_SET_MEDIA_PARAMS</H3>
<H4>Operation</H4>
<P>
Resets the block size of the media in the drive.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_SET_MEDIA_PARAMETERS).
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the block
size to be set.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_IO_DEVICE_ERROR,
STATUS_MEDIA_WRITE_PROTECTED, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_INFO_LENGTH_MISMATCH,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_GET_STATUS</H3>
<H4>Operation</H4>
<P>
Returns the current status of the drive.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_NO_MEDIA_IN_DEVICE, or
STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_CREATE_PARTITION</H3>
<H4>Operation</H4>
<P>
Creates the specified number of fixed, select, or initiator partition(s) of
the given size on the media.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the parameter buffer, which must be &gt;= <B>sizeof</B>(TAPE_CREATE_PARTITION).
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;specifies the
partition(s) to be created.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_IO_DEVICE_ERROR,
STATUS_MEDIA_WRITE_PROTECTED, STATUS_DEVICE_DATA_ERROR, STATUS_NO_SUCH_DEVICE,
STATUS_IO_TIMEOUT, STATUS_DEVICE_NOT_READY, STATUS_INFO_LENGTH_MISMATCH,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_TAPE_FIND_NEW_DEVICES</H3>
<H4>Operation</H4>
<P>
This IOCTL is replaced by IOCTL_STORAGE_FIND_NEW_DEVICES. The only difference
between the two IOCTLs is the base code. 
<H3>IOCTL_STORAGE_FIND_NEW_DEVICES</H3>
<H4>Operation</H4>
<P>
Determines whether another device that the driver supports has just been
connected to the I/O bus. If such a device is found, the driver sets up any
necessary system objects and resources to handle I/O requests for its new
device. It also initializes the device on receipt of this request dynamically:
that is, without requiring the machine to be rebooted. Such a driver is
assumed to support devices connected on a dynamically configurable I/O bus.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field can be
set to STATUS_SUCCESS or to any other value returned by the driver’s
(re)initialization code.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
