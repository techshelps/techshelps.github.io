<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.2  SCSI Port I/O Control Codes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_SCSI_Port_I_O_Control_Codes_KR"></A>9.2  SCSI Port I/O Control Codes</H2>
<P>
All SCSI class drivers are required to set the minor function code with
IRP_MN_SCSI_CLASS in the port driver’s I/O stack location of any IRP that a
class driver allocates and sets up to send on to the system port driver. For
example, all SCSI class drivers must set this minor function code when they
make IOCTL_SCSI_GET_INQUIRY_DATA and IOCTL_SCSI_GET_CAPABILITIES requests
during initialization.
<P>
For incoming IRPs originating with a user I/O request or with a higher-level
driver, SCSI class drivers should ignore the minor function code in the port
driver’s I/O stack location, leaving it as is. In general, such requests can
be sent directly to the system-supplied port driver <I>only if no SCSI class
driver for the target device exists</I>. Otherwise, such requests must be
directed to the SCSI class driver for the appropriate type of underlying SCSI
device.
<P>
The following shows I/O control requests that the system SCSI port driver
supports. All public I/O control codes for the SCSI port driver use buffered
I/O. Consequently, most input or output data for these requests is at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H3>IOCTL_SCSI_GET_INQUIRY_DATA</H3>
<H4>Operation</H4>
<P>
Returns the SCSI inquiry data for all devices on a given SCSI bus. Usually,
the caller is a SCSI class driver, but the caller can be an application that
makes IOCTL_SCSI_MINIPORT, IOCTL_SCSI_PASS_THROUGH,
IOCTL_SCSI_PASS_THROUGH_DIRECT, or IOCTL_SCSI_RESCAN_BUS requests to the port
driver.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;indicates the size in
bytes of the buffer which must be &gt;= (<B>sizeof</B>(SCSI_ADAPTER_BUS_INFO)
+ (<I>NumberOfBuses</I>&nbsp;-1) * <B>sizeof</B>(SCSI_BUS_DATA)) + (<I>InquiryDataSize</I>
* <I>NumberOfLUs</I>), where the <I>InquiryDataSize</I>&nbsp;is (<B>sizeof</B>(SCSI_INQUIRY_DATA)
- 1 + INQUIRYDATABUFFERSIZE) rounded up to an alignment boundary.
<H4>Output</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the returned
inquiry data.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned in the
output buffer. The <B>Status</B>&nbsp;field indicates the results of the operation.
<H3>IOCTL_SCSI_GET_CAPABILITIES</H3>
<H4>Operation</H4>
<P>
Returns the capabilities and limitations of the underlying SCSI HBA. The most
important information is returned in the <B>MaximumTransferLength</B>&nbsp;and <B>AlignmentMask
</B>members. Class drivers and users of IOCTL_SCSI_PASS_THROUGH and
IOCTL_SCSI_PASS_THROUGH_DIRECT are required to honor these limitations.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(IO_SCSI_CAPABILITIES).
<H4>Output</H4>
<P>
Updated IO_SCSI_CAPABILITIES information is returned to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned in the
output buffer. The <B>Status</B>&nbsp;field indicates the results of the operation.
<H3>IOCTL_SCSI_GET_ADDRESS</H3>
<H4>Operation</H4>
<P>
Returns the address information, such as the target id (TID) and the logical
unit number (LUN) of a particular SCSI target. This request must be directed
at a class driver.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(SCSI_ADDRESS).
<H4>Output</H4>
<P>
Updated SCSI_ADDRESS information is returned to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned in the
output buffer. The <B>Status</B>&nbsp;field indicates the results of the operation.
<H3>IOCTL_SCSI_MINIPORT</H3>
<H4>Operation</H4>
<P>
Sends a special control function to an HBA-specific miniport driver. Results
vary, depending on the particular miniport driver to which this request is
forwarded. If the caller specifies a nonzero <B>Length</B>, either the input
or output buffer must be at least (<B>sizeof</B>(SRB_IO_CONTROL) + <I>DataBufferLength</I>)).
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;must contain an
SRB_IO_CONTROL structure. <B>Parameters.DeviceIoControl.InputBufferLength</B>
indicates the size in bytes of the buffer, which must be at least <B>sizeof</B>
(SRB_IO_CONTROL), with additional storage for data if the <B>Length</B>&nbsp;field
is nonzero.
<H4>Output</H4>
<P>
An updated SRB_IO_CONTROL structure is returned to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field contains the number of bytes returned in the
output buffer. The <B>Status</B>&nbsp;field indicates the results of the operation.
<H3>IOCTL_SCSI_PASS_THROUGH</H3>
<H4>Operation</H4>
<P>
Allows an application to send almost any SCSI command to a target device, with
the following restrictions:
<UL>
<LI>
Multitarget commands, such as COPY, are not allowed.
<P>
<LI>
Bidirectional data transfer operations are not supported.
<P>
<LI>
If a class driver for the target type of device exists, the request must be
sent to that class driver. Thus, an application can send this request directly
to the system port driver for a target logical unit only if there is no class
driver for the type of device connected to that LU.
<P>
<LI>
This request cannot be used if the CDB might require the underlying miniport
driver to access memory directly. If the caller’s CDB might require direct
access to memory, use IOCTL_SCSI_PASS_THROUGH_DIRECT instead.
</UL>
<P>
The calling application creates the SCSI command descriptor block, which can
include a request for request-sense data if a CHECK CONDITION occurs. Any data
transferred is double buffered.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the size in
bytes of the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>, which must
be at least (<I>RequestSenseStorageSize</I>&nbsp;+ <B>sizeof</B>
(SCSI_PASS_THROUGH)). The size of the SCSI_PASS_THROUGH structure varies,
depending on its <B>DataTransferLength</B>&nbsp;specification.
<P>
This structure includes a SCSI CDB, which must be initialized by the caller.
For a data-out command, the data to be transferred is included in the buffer
at <B>Irp-&gt;AssociatedIrp.SystemBuffr</B>&nbsp;at <B>DataBufferOffset</B>&nbsp;in the
SCSI_PASS_THROUGH structure. However, the caller must allocate additional
storage, immediately following SCSI_PASS_THROUGH, if the caller asks for
request-sense data.
<H4>Output</H4>
<P>
The port driver returns any request-sense data and any data transferred from
the device to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>. The <B>SenseInfoLength</B>
and <B>DataTransferLength</B>&nbsp;in the SCSI_PASS_THROUGH structure are updated
to indicate the amount of data transferred.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned in the
output buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL or
STATUS_INVALID_PARAMETER if the input <B>Length </B>value in SCSI_PASS_THROUGH
is improperly set.
<H3>IOCTL_SCSI_PASS_THROUGH_DIRECT</H3>
<H4>Operation</H4>
<P>
Allows an application to send almost any SCSI command to a target device, with
the following restrictions:
<UL>
<LI>
Multitarget commands, such as COPY, are not allowed.
<P>
<LI>
Bidirectional data transfer operations are not supported.
<P>
<LI>
If a class driver for the target type of device exists, the request must be
sent to that class driver. Thus, an application can send this request directly
to the system port driver for a target logical unit only if there is no class
driver for the type of device connected to that LU.
<P>
<LI>
This request <I>must</I>&nbsp;be made if the input CDB might require the underlying
miniport driver to access memory directly.
</UL>
<P>
The calling application creates the SCSI command descriptor block, which can
include a request for request-sense data if a CHECK CONDITION occurs. If the
CDB requests a data transfer operation, the caller must set up a cache-aligned
buffer from which or into which the miniport driver can transfer data
directly.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;indicates the size in
bytes of the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>, which must
be at least (<I>RequestSenseStorageSize</I>&nbsp;+ <B>sizeof</B>
(SCSI_PASS_THROUGH_DIRECT)). The size of the SCSI_PASS_THROUGH_DIRECT
structure is fixed.
<P>
This structure includes a SCSI CDB, which must be initialized by the caller.
For a data-out command, the data to be transferred must be in a cache-aligned
buffer. The <B>DataBuffer</B>&nbsp;member of SCSI_PASS_THROUGH_DIRECT is a pointer
to this cache-aligned buffer. The caller must allocate additional storage,
following the SCSI_PASS_THROUGH_DIRECT structure, if the caller asks for
request-sense data.
<H4>Output</H4>
<P>
The port driver returns any request-sense data and the
SCSI_PASS_THROUGH_DIRECT structure to the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
The <B>SenseInfoLength</B>&nbsp;and <B>DataTransferLength</B>&nbsp;are updated to
indicate the amount of data transferred. The port driver returns any data
transferred from the device to the supplied cache-aligned buffer at <B>DataBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned in the
output buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL or
STATUS_INVALID_PARAMETER if the input <B>Length</B>&nbsp;value in SCSI_PASS_THROUGH
is improperly set.
<H3>IOCTL_SCSI_RESCAN_BUS</H3>
<H4>Operation</H4>
<P>
The port driver rescans the LUNs on the bus(es). It collects SCSI inquiry data
about all devices on the bus(es), while preserving any claims on their
respective devices for SCSI class drivers.
<P>
Usually, this request originates in a system-supplied Win32 application such
as Windisk or Setup when the user connects new device(s) on a SCSI bus
dynamically: that is, without shutting down the system. When this request is
satisfied, such an application next makes an IOCTL_SCSI_GET_INQUIRY_DATA
request to the system port driver and examines the returned inquiry data. If
the application finds any unclaimed devices of a given type, it then sends one
or more IOCTL_<I>DeviceType</I>_FIND_NEW_DEVICES requests to the appropriate
SCSI class drivers.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field indicates
the results of the operation.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
