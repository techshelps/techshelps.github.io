<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.2  CD-ROM I/O Control Codes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_CD_ROM_I_O_Control_Codes_KR"></A>7.2  CD-ROM I/O Control Codes</H2>
<P>
All public I/O control codes for drivers of CD-ROM devices use buffered I/O.
Consequently, the input or output data for these requests is at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<P>
Class drivers for SCSI CD-ROM devices handle additional public I/O control
codes, along with those described in this section. See also <A HREF="k209.htm">Chapter
9</A>&nbsp;for more information about requirements for SCSI class drivers of
mass-storage devices.
<H3>IOCTL_CDROM_GET_DRIVE_GEOMETRY</H3>
<H4>Operation</H4>
<P>
IOCTL_CDROM_GET_DRIVE_GEOMETRY returns information about the CDROM’s geometry
(media type, number of cylinders, tracks per cylinder, sectors per track, and
bytes per sector).
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
of the IRP indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(DISK_GEOMETRY).
<H4>Output</H4>
<P>
The driver returns the DISK_GEOMETRY-type information in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the size in bytes of the returned data.
The <B>Status</B>&nbsp;field is set to STATUS_SUCCESS or possibly to
STATUS_UNRECOGNIZED_MEDIA, STATUS_INVALID_PARAMETER,
STATUS_INFO_LENGTH_MISMATCH, or STATUS_BUFFER_TOO_SMALL.
<H3>IOCTL_CDROM_READ_TOC</H3>
<H4>Operation</H4>
<P>
Returns the table of contents of the media.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(CDROM_TOC).
<H4>Output</H4>
<P>
The driver returns the CDROM_TOC data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_NO_MEDIA_IN_DEVICE, STATUS_DEVICE_NOT_READY, STATUS_IO_TIMEOUT,
STATUS_IO_DEVICE_ERROR, STATUS_DEVICE_BUSY, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_GET_LAST_SESSION</H3>
<H4>Operation</H4>
<P>
The driver determines whether a disc is multisession. It compares the first
and last session and the starting track of the last session. If the first
session is the same as the last, the disc is not multisession. If the disc is
multisession, the driver stores session block addresses in the table of
contents.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST,
STATUS_DEVICE_BUSY, STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or
STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_CHECK_VERIFY</H3>
<H4>Operation</H4>
<P>
This IOCTL is replaced by IOCTL_STORAGE_CHECK_VERIFY. The only difference
between the two IOCTLs is the base code.
<H3>IOCTL_STORAGE_CHECK_VERIFY</H3>
<H4>Operation</H4>
<P>
Determines whether the media has changed on a CD-ROM drive. (For more
information about handling removable media, see the <I>Kernel-Mode Driver
Design Guide</I>.)
<H4>Input</H4>
<P>
Optionally, <B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O
stack location of the IRP indicates the size in bytes of a buffer, which must
be &gt;= <B>sizeof</B>(ULONG). This field is zero if the optional buffer is
not specified.
<H4>Output</H4>
<P>
Optionally, <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;points to a buffer to
receive the media change count. The driver fills this buffer only if <B>Parameters.DeviceIoControl.OutputBufferLength</B>
was nonzero and the return value is STATUS_SUCCESS. The media change count is
a ULONG indicating how many times the media has changed since the driver
started.
<H4>I/O Status Block</H4>
<P>
If the driver has no indication that the media has changed, the driver sets
the <B>Status</B>&nbsp;field to STATUS_SUCCESS. In addition, if the optional media
change buffer was specified, the driver returns the media change count in the
buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;and sets the <B>Information</B>
field to <B>sizeof</B>(ULONG). If the optional media change buffer was not
specified, the driver sets <B>Information</B>&nbsp;to zero.
<P>
If the driver detects that the media has changed and the volume is mounted
(VPD_MOUNTED is set in the VPB), it must: set <B>Information</B>&nbsp;to zero, set <B>Status</B>
to STATUS_VERIFY_REQUIRED, set the DO_VERIFY_VOLUME flag in the <B>DeviceObject</B>,
and call <B>IoCompleteRequest</B>&nbsp;with the input IRP.
<P>
If the driver detects that the media has changed, but the volume is not
mounted, the driver must not set the DO_VERIFY_VOLUME bit. The driver should
set <B>Status</B>&nbsp;to STATUS_IO_DEVICE_ERROR, set <B>Information</B>&nbsp;to zero,
and call <B>IoCompleteRequest</B>&nbsp;with the IRP.
<P>
If the driver detects an error such as STATUS_BUFFER_TOO_SMALL,
STATUS_INSUFFICIENT_RESOURCES, or a device error, it sets <B>Information</B>
to zero and sets the appropriate error value in the <B>Status</B>&nbsp;field. 
<H3>IOCTL_CDROM_GET_CONTROL</H3>
<H4>Operation</H4>
<P>
The driver determines the current audio playback mode.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(CDROM_AUDIO_CONTROL).
<H4>Output</H4>
<P>
The driver returns the CDROM_AUDIO_CONTROL data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_DEVICE_NOT_READY, STATUS_IO_DEVICE_ERROR, STATUS_IO_TIMEOUT,
STATUS_INSUFFICIENT_RESOURCES, STATUS_VERIFY_REQUIRED, or
STATUS_INVALID_DEVICE_REQUEST.
<H3>IOCTL_CDROM_GET_VOLUME</H3>
<H4>Operation</H4>
<P>
The driver determines the current volume for each of its device’s audio ports.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(CDROM_VOLUME_CONTROL).
<H4>Output</H4>
<P>
The driver returns the CDROM_VOLUME_CONTROL data in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to <B>sizeof</B>(CDROM_VOLUME_CONTROL)
when the <B>Status</B>&nbsp;field is set to STATUS_SUCCESS. Otherwise, the <B>Information</B>
field is set to zero, and the <B>Status</B>&nbsp;field possibly can be set to
STATUS_BUFFER_TOO_SMALL, STATUS_DEVICE_NOT_READY, STATUS_IO_DEVICE_ERROR,
STATUS_VERIFY_REQUIRED, or STATUS_IO_TIMEOUT.
<H3>IOCTL_CDROM_SET_VOLUME</H3>
<H4>Operation</H4>
<P>
The driver resets the volume for its device’s audio ports.
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the
CDROM_VOLUME_CONTROL value(s) to be set. <B>Parameters.DeviceIoControl.InputBufferLength</B>
in the I/O stack location indicates the size in bytes of the buffer, which
must be &gt;= <B>sizeof</B>(CDROM_VOLUME_CONTROL).
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_DEVICE_NOT_READY, STATUS_IO_TIMEOUT, STATUS_IO_DEVICE_ERROR,
STATUS_VERIFY_REQUIRED, or STATUS_INVALID_DEVICE_REQUEST.
<H3>IOCTL_CDROM_PLAY_AUDIO_MSF</H3>
<H4>Operation</H4>
<P>
Plays the specified range of the media.
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.System</B>&nbsp;buffer contains the starting
and ending MSF values. <B>Parameters.DeviceIoControl.InputBufferLength</B>&nbsp;in
the I/O stack location indicates the size in bytes of the buffer, which must
be &gt;= <B>sizeof</B>(CDROM_PLAY_AUDIO_MSF).
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST,
STATUS_BUFFER_TOO_SMALL, STATUS_DEVICE_NOT_READY, STATUS_IO_DEVICE_ERROR,
STATUS_IO_TIME_OUT, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_SEEK_AUDIO_MSF</H3>
<H4>Operation</H4>
<P>
Moves the heads to the specified MSF on the media.
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains the
CDROM_SEEK_AUDIO_MSF specification. <B>Parameters.DeviceIoControl.InputBufferLength</B>
indicates the size in bytes of the buffer.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_INVALID_DEVICE_REQUEST, STATUS_IO_DEVICE_ERROR,
STATUS_NO_MEDIA_IN_DEVICE, STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or
STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_STOP_AUDIO</H3>
<H4>Operation</H4>
<P>
Ends audio play.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST if audio is not
currently playing, STATUS_IO_DEVICE_ERROR, STATUS_NO_MEDIA_IN_DEVICE,
STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_PAUSE_AUDIO</H3>
<H4>Operation</H4>
<P>
Suspends audio play.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST if audio is not
currently playing, STATUS_IO_DEVICE_ERROR, STATUS_NO_MEDIA_IN_DEVICE,
STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_RESUME_AUDIO</H3>
<H4>Operation</H4>
<P>
Resumes a suspended audio operation.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST if audio is not
currently suspended, STATUS_IO_DEVICE_ERROR, STATUS_NO_MEDIA_IN_DEVICE,
STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_READ_Q_CHANNEL</H3>
<H4>Operation</H4>
<P>
Returns the current position, media catalog, and ISRC track data.
<H4>Input</H4>
<P>
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;in the I/O stack location
indicates the size in bytes of the buffer, which must be &gt;= <B>sizeof</B>(SUB_Q_CHANNEL_DATA).
<H4>Output</H4>
<P>
The driver returns the SUB_Q_CHANNEL_DATA information in the buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>.
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to the number of bytes returned. The <B>Status</B>
field is set to STATUS_SUCCESS or possibly to STATUS_BUFFER_TOO_SMALL,
STATUS_IO_DEVICE_ERROR, STATUS_INSUFFICIENT_RESOURCES,
STATUS_INVALID_DEVICE_REQUEST, STATUS_NO_MEDIA_IN_DEVICE,
STATUS_DEVICE_NOT_READY, STATUS_IO_TIME_OUT, or STATUS_VERIFY_REQUIRED.
<H3>IOCTL_CDROM_FIND_NEW_DEVICES</H3>
<H4>Operation</H4>
<P>
This IOCTL is replaced by IOCTL_STORAGE_FIND_NEW_DEVICES. The only difference
between the two IOCTLs is the base code.
<H3>IOCTL_STORAGE_FIND_NEW_DEVICES</H3>
<H4>Operation</H4>
<P>
Determines whether another device that the driver supports has just been
connected to the I/O bus. If such a device is found, the driver sets up any
necessary system objects and resources to handle I/O requests for its new
device. It also initializes the device on receipt of this request dynamically:
that is, without requiring the machine to be rebooted. Such a driver is
assumed to support devices connected on a dynamically configurable I/O bus.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field can be
set to STATUS_SUCCESS or to any value returned by the driver’s
(re)initialization code.
<H3>IOCTL_CDROM_RAW_READ</H3>
<H4>Operation</H4>
<P>
Reads data from the CD-ROM in raw mode.
<H4>Input</H4>
<P>
If the IOCTL is from user mode, <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>
contains a structure that specifies the starting disk offset, the sector
count, and the track mode (XA or CDDA) for the read. <B>Parameters.DeviceIoControl.InputBufferLength</B>
specifies the size in bytes of the structure, which must be &gt;= <B>sizeof</B>(RAW_READ_INFO).
<B>Parameters.DeviceIoControl.OutputBufferLength</B>&nbsp;specifies the size of the
buffer to be read, which must be &gt;= <B>sizeof</B>(<I>SectorCount</I>&nbsp;*
RAW_SECTOR_SIZE).
<P>
If the IOCTL is from kernel mode, <B>Parameters.DeviceIoControl.Type3InputBuffer</B>
contains a structure that specifies the starting disk offset, the sector
count, and the track mode (XA or CDDA) for the read. <B>Parameters.DeviceIoControl.OutputBufferLength</B>
specifies the size of the buffer to be read, which must be &gt;= <B>sizeof</B>(<I>SectorCount</I>
* RAW_SECTOR_SIZE).
<H4>Output</H4>
<P>
The driver writes the requested bytes directly (using DMA or PIO) to the
buffer described by the MDL at <B>Irp-&gt;MdlAddress</B>.
<H4>I/O Status Block</H4>
<P>
If the read is successful, the driver sets <B>Status</B>&nbsp;to STATUS_SUCCESS and
<B>Information</B>&nbsp;to the number of bytes transferred. If the read is not
successful, the driver sets <B>Information</B>&nbsp;to zero and <B>Status</B>&nbsp;to
possibly STATUS_INVALID_PARAMETER, STATUS_INSUFFICIENT_RESOURCES, or
STATUS_INVALID_DEVICE_REQUEST.
<H3>IOCTL_CDROM_CLOSE_DOOR</H3>
<H4>Operation</H4>
<P>
None. This I/O control code has been replaced by IOCTL_<I>DeviceType</I>_LOAD_MEDIA,
described in <A HREF="k209.htm">Chapter 9</A>.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
