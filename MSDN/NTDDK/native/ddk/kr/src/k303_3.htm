<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TapeClassInitialize</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TapeClassInitialize_KR"></A>TapeClassInitialize</H2>
<P>
<B>ULONG<BR>
&nbsp; &nbsp; TapeClassInitialize(<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PVOID  </B><I>Argument1</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PVOID  </B><I>Argument2</I><B>,<BR>
&nbsp; &nbsp; &nbsp; &nbsp; IN PTAPE_INIT_DATA  </B><I>TapeInitData</I><B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; );</B>
<P>
<B>TapeClassInitialize</B>&nbsp;performs much of the driver and device
initialization on behalf of a miniclass driver. <B>TapeClassInitialize</B>
loads the tape class driver entry points for tape I/O requests into the
miniclass driver data structure, locates and claims unclaimed SCSI tape
devices that the miniclass driver supports, and allocates and initializes the
OS resources for the miniclass driver and its devices. <B>TapeClassInitialize</B>
uses miniclass-driver-specific information supplied in <I>TapeInitData</I>&nbsp;and
calls back to the tape miniclass driver for driver-specific operations.
<H3>Parameters</H3>
<DL>
<DT>
<I>Argument1</I>
<DD>
Points to driver context information that was passed to the tape miniclass
driver’s <B>DriverEntry</B>&nbsp;routine. The format of the information is
OS-specific and must not be interpreted by a tape miniclass driver.
<BR>
<DT>
<I>Argument2</I>
<DD>
Points to the second driver context structure that was passed to the tape
miniclass driver’s<B>&nbsp;DriverEntry</B>&nbsp;routine. The format of the information
is OS-specific and must not be interpreted by a tape miniclass driver.
<BR>
<DT>
<I>TapeInitData</I>
<DD>
Points to a TAPE_INIT_DATA structure containing driver-specific information
such as the entry points for the tape miniclass driver’s command processing
routines.
</DL>
<H3>Return Value</H3>
<P>
<B>TapeClassInitialize</B>&nbsp;returns a value indicating the success or failure
of the driver initialization. The tape miniclass driver passes this value,
uninterpreted, as the return value from its <B>DriverEntry</B>&nbsp;routine.
<H3>Comments</H3>
<P>
A tape miniclass driver calls <B>TapeClassInitialize</B>&nbsp;from its <B>DriverEntry</B>
routine and passes driver-specific information in <I>TapeInitData</I>. <B>TapeClassInitialize</B>
performs a large part of the driver initialization on behalf of the miniclass
driver and insulates the miniclass driver from OS-specific details.
<P>
<B>TapeClassInitialize</B>&nbsp;calls the tape miniclass driver for driver-specific
activities required during initialization. For example, <B>TapeClassInitialize</B>
calls the tape miniclass driver’s TapeMiniVerifyInquiry routine to determine
whether the driver supports a given tape device. <B>TapeClassInitialize</B>
also calls the tape miniclass driver’s TapeMiniExtensionInit routine to
initialize the minitape extension, if the miniclass driver requested one.
<P>
A tape miniclass driver allocates a TAPE_INIT_DATA structure on the stack,
clears it with <B>TapeClassZeroMemory</B>, fills in all the appropriate
members, and passes it to <B>TapeClassInitialize</B>.
<H3>See Also</H3>
<P>
<A HREF="k305_6.htm">TAPE_INIT_DATA</A>, <B><A HREF="k304_1.htm">DriverEntry</B>
of Tape Miniclass Driver</A>&nbsp;
<P></FONT>
</BODY>
</HTML>
