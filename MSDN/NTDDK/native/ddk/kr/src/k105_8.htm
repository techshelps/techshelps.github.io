<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeDeregisterBugCheckCallback</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_KeDeregisterBugCheckCallback_KR"></A>KeDeregisterBugCheckCallback</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; KeDeregisterBugCheckCallback(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKBUGCHECK_CALLBACK_RECORD</B>&nbsp; <I>CallbackRecord</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>KeDeregisterBugCheckCallback</B>&nbsp;removes a device driver’s callback routine
from the set of registered bug-check callbacks. 
<H3>Parameters</H3>
<DL>
<DT>
<I>CallbackRecord</I>
<DD>
Points to the caller-allocated storage containing an initialized bug-check
callback record. This pointer was previously passed in successful calls to <B>KeInitializeCallbackRecord</B>
and <B>KeRegisterBugCheckCallback</B>. 
</DL>
<H3>Return Value</H3>
<P>
<B>KeDeregisterBugCheckCallback</B>&nbsp;returns TRUE if the caller-supplied
bug-check callback routine will no longer be called if a bug check occurs. If
the given callback record was not registered, it returns FALSE.
<H3>Comments</H3>
<P>
<B>KeDeregisterBugCheckCallback</B>&nbsp;is the reciprocal of <B>KeRegisterBugCheckCallback</B>.
<P>
If an unloadable device driver sets up a bug-check callback routine with <B>KeRegisterBugCheckCallback</B>,
that driver’s Unload routine must call <B>KeDeregisterBugCheckCallback</B>
before it frees the storage it allocated at <I>CallbackRecord</I>.
<P>
Callers of <B>KeDeregisterBugCheckRecord</B>&nbsp;can be running at any IRQL.
Usually, a device driver is running at IRQL PASSIVE_LEVEL in its Unload
routine when it calls <B>KeDeregisterBugCheckRecord</B>. 
<H3>See Also</H3>
<P>
<B><A HREF="k105_3.htm">KeBugCheck</A></B>, <B><A HREF="k105_4.htm">KeBugCheckEx</A></B>,
<B><A HREF="k105_14.htm">KeInitializeCallbackRecord</A></B>,
<B><A HREF="k105_37.htm">KeRegisterBugCheckCallback</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
