<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeReleaseSemaphore</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_KeReleaseSemaphore_KR"></A>KeReleaseSemaphore</H2>
<P>
<B>LONG <BR>
&nbsp; &nbsp; KeReleaseSemaphore(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PKSEMAPHORE</B>&nbsp; <I>Semaphore</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN KPRIORITY</B>&nbsp; <I>Increment</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN LONG</B>&nbsp; <I>Adjustment</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>Wait</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>KeReleaseSemaphore</B>&nbsp;releases a given semaphore object. This routine
supplies a runtime priority boost for waiting threads. If this call sets the
semaphore to the Signaled state, the semaphore count is augmented by the given
value. The caller can also specify whether it will call one of the <B>KeWait</B><I>Xxx</I>
routines as soon as <B>KeReleaseSemaphore</B>&nbsp;returns control.
<H3>Parameters</H3>
<DL>
<DT>
<I>Semaphore</I>
<DD>
Points to an initialized semaphore object for which the caller provides the
storage.
<BR>
<DT>
<I>Increment</I>
<DD>
Specifies the priority increment to be applied if releasing the semaphore
causes a wait to be satisfied.
<BR>
<DT>
<I>Adjustment</I>
<DD>
Specifies a value to be added to the current semaphore count. This value must
be positive.
<BR>
<DT>
<I>Wait</I>
<DD>
Specifies whether the call to <B>KeReleaseSemaphore</B>&nbsp;is to be followed <I>immediately</I>
by a call to one of the <B>KeWait</B><I>Xxx</I>.
</DL>
<H3>Return Value</H3>
<P>
If the return value is zero, the previous state of the semaphore object is
Not-Signaled.
<H3>Comments</H3>
<P>
Releasing a semaphore object causes the semaphore count to be augmented by the
value of the <I>Adjustment</I>&nbsp;parameter. If the resulting value is greater
than the limit of the semaphore object, the count is not adjusted and an
exception, STATUS_SEMAPHORE_COUNT_EXCEEDED, is raised.
<P>
Augmenting the semaphore object count causes the semaphore to attain a state
of Signaled, and an attempt is made to satisfy as many waits as possible on
the semaphore object.
<P>
If the value of the <I>Wait</I>&nbsp;parameter is TRUE, the return to the caller is
executed without lowering IRQL or releasing the dispatcher database spin lock.
Therefore, the call to <B>KeReleaseSemaphore</B>&nbsp;<I>must</I>&nbsp;be followed <I>immediately</I>
by a call to one of the <B>KeWait</B><I>Xxx</I>.
<P>
This capability allows the caller to release a semaphore and to wait as one
atomic operation, preventing a possibly superfluous context switch. However,
the caller cannot wait at raised IRQL nor in an arbitrary thread context for a
nonzero interval on a semaphore object.
<P>
Callers of <B>KeReleaseSemaphore</B>&nbsp;must be running at IRQL &lt;=
DISPATCH_LEVEL provided that <I>Wait</I>&nbsp;is set to FALSE. Otherwise, the
caller must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k105_19.htm">KeInitializeSemaphore</A></B>, <B><A HREF="k105_35.htm">KeReadStateSemaphore</A></B>,
<B><A HREF="k105_54.htm">KeWaitForMultipleObjects</A></B>, <B><A HREF="k105_56.htm">KeWaitForSingleObject</A></B>
<P></FONT>
</BODY>
</HTML>
