<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.1  SCSI Mass-storage Device I/O Control Codes</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_SCSI_Mass_storage_Device_I_O_Control_Codes_KR"></A>9.1  SCSI Mass-storage Device I/O Control Codes</H2>
<P>
SCSI class drivers of mass-storage devices are required to handle a superset
of the I/O control codes for IRP_MJ_DEVICE_CONTROL requests that other drivers
of the same types of devices handle. See the preceding chapters about the I/O
requests sent to disk, CD-ROM, and tape drivers for information about the
basic requirements for all drivers of these types of devices.
<P>
This section summarizes the I/O control codes that SCSI class drivers of
mass-storage devices also handle, as appropriate to the device.
<P>
The IOCTL_STORAGE_<I>XXX</I>&nbsp;control codes replace the previous IOCTL_<I>DeviceType</I>_<I>XXX</I>
control codes, where <I>DeviceType</I>&nbsp;was DISK, TAPE, or CDROM. For example,
IOCTL_STORAGE_RESERVE replaces IOCTL_DISK_RESERVE, IOCTL_TAPE_RESERVE, and
IOCTL_CDROM_RESERVE. The new storage control codes have identical values for
function code, transfer method, and required access as the previous disk,
tape, and CD-ROM codes. The only difference is the device type. Drivers that
pass unrecognized IOCTLs to the SCSI class driver do not need to make any
changes for these new IOCTLs.
<H3>IOCTL_STORAGE_RESERVE</H3>
<H4>Operation</H4>
<P>
Claims a device on a SCSI bus with multiple initiators for the exclusive use
of the caller.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST,
STATUS_DEVICE_NOT_CONNECTED, or STATUS_IO_TIMEOUT.
<H3>IOCTL_STORAGE_RELEASE</H3>
<H4>Operation</H4>
<P>
Releases a previously reserved device.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST.
<H3>IOCTL_STORAGE_LOAD_MEDIA</H3>
<H4>Operation</H4>
<P>
Causes media to be loaded in a drive.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST,
STATUS_NO_MEDIA_IN_DEVICE, STATUS_BUFFER_TOO_SMALL, or
STATUS_DEVICE_NOT_CONNECTED.
<H3>IOCTL_STORAGE_MEDIA_REMOVAL</H3>
<H4>Operation</H4>
<P>
If the driver can prevent the media from being removed while the drive is in
use, it disables or enables the mechanism that ejects media.
<P>
A driver for such a removable media which can support this IOCTL must do the
following:
<OL>
<LI>
Keep a lock count in the device object extension.
<P>
<LI>
Keep the lock count per physical device.
<P>
<LI>
When called with this IOCTL, if the flag to prevent removing the media is set,
increment the count; if the flag is clear, decrement the count.
<P>
<LI>
Prevent removal of the media unless the count is zero.
</OL>
<H4>Input</H4>
<P>
The buffer at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>&nbsp;contains a Boolean
value, with TRUE indicating that the driver should lock the media in the
drive.
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_INVALID_DEVICE_REQUEST,
STATUS_NO_MEDIA_IN_DEVICE, or STATUS_DEVICE_NOT_CONNECTED.
<H3>IOCTL_STORAGE_EJECT_MEDIA</H3>
<H4>Operation</H4>
<P>
If the device supports it, ejects the media.
<H4>Input</H4>
<P>
None
<H4>Output</H4>
<P>
None
<H4>I/O Status Block</H4>
<P>
The <B>Information</B>&nbsp;field is set to zero. The <B>Status</B>&nbsp;field is set to
STATUS_SUCCESS or possibly to STATUS_NO_MEDIA_IN_DEVICE or
STATUS_INVALID_DEVICE_REQUEST.
<P></FONT>
</BODY>
</HTML>
