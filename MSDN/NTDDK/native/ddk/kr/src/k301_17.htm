<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ScsiPortNotification</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ScsiPortNotification_KR"></A>ScsiPortNotification</H2>
<P>
<B>VOID <BR>
&nbsp; &nbsp; ScsiPortNotification(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN SCSI_NOTIFICATION_TYPE</B>&nbsp; <I>NotificationType</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID</B>&nbsp; <I>HwDeviceExtension</I><B>,</B><I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; </I><B>...&#09;</B>/* Additional parameters, as required by the
given <I>NotificationType</I>&nbsp;*/<BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <BR>
&nbsp; &nbsp; &nbsp; &nbsp; /* for <B>RequestComplete</B>&nbsp;add: */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN PSCSI_REQUEST_BLOCK</B>&nbsp;<I>Srb</I><BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; </B>/* for<B>&nbsp;NextLuRequest</B>&nbsp;add: */<B>&nbsp;<BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; IN UCHAR</B>&nbsp;<I>PathId</I><B>,</B>&nbsp;<BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN UCHAR</B>&nbsp;<I>TargetId</I><B>,</B>&nbsp;<BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN UCHAR</B>&nbsp;<I>Lun</I>&nbsp;<BR>
&nbsp; &nbsp; &nbsp; &nbsp; /* for <B>CallEnableInterrupts</B>&nbsp;or <B>CallDisableInterrupts</B>&nbsp;add: */ <BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN PHW_INTERRUPT</B>&nbsp; <I>HwScsiXxxInterruptsCallback</I><B><BR>
</B><I>&nbsp; &nbsp; &nbsp; &nbsp; </I>/* for <B>RequestTimerCall </B>add: */<B>&nbsp;</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN</B>&nbsp;<B>PHW_TIMER</B>&nbsp; <I>HwScsiTimer</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>IN ULONG</B>&nbsp;<I>MiniportTimerValue</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ScsiPortNotification</B>&nbsp;tells the OS-specific port driver of certain
events, such as when a miniport driver completes a request or is ready to
start another SRB, as well as when the HBA indicates that certain SCSI error
conditions occurred during an operation.
<H3>Parameters</H3>
<DL>
<DT>
<I>NotificationType</I>
<DD>
Specifies the type of notification, which can be one of the following:
<TABLE>
<TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Notification type</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>Description</B>
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>RequestComplete</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the given <I>Srb</I>&nbsp;has finished. If this value is set, <B>ScsiPortNotification</B>
requires one additional parameter: the address of the SRB. After this
notification, the OS-specific port driver owns the request. The miniport
driver must not access the <I>Srb</I>, and it must not pass the <I>Srb</I>&nbsp;to
another routine (such as <B>ScsiPortLogError</B>).
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>NextRequest</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates the miniport driver is ready for another request to a target that is
not currently busy. This notification should be sent by the miniport as soon
as the driver is ready for another request. Usually, this notification is sent
from the HwScsiStartIo routine but, sometimes, from the HwScsiInterrupt (or
HwScsiEnableInterruptsCallback) routine.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>NextLuRequest</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the HBA is ready for another request for the specified logical
unit. If this value is set, <B>ScsiPortNotification</B>&nbsp;requires three
additional parameters: (1) the path ID, (2) the target ID, and (3) the logical
unit number. This value should be used only if the HBA can queue multiple
requests and support auto request sense or tagged queuing.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>ResetDetected</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the HBA has detected a reset on the SCSI bus. After this
notification, the miniport driver is still responsible for completing any
active requests. The SCSI port driver will manage all required bus-reset
delays.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>CallEnableInterrupts</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the miniport driver requires the OS-specific port driver to
call the miniport’s HwScsiEnableInterruptsCallback routine. If this value is
set, <B>ScsiPortNotification</B>&nbsp;requires an additional parameter: the entry
point for the HwScsiEnableInterruptsCallback. The miniport’s HwScsiInterrupt
routine makes this call,<I>&nbsp;after </I>disabling interrupts on the HBA, to
defer some interrupt-driven I/O processing if the HBA requires polling or
stalling in the ISR. While the callback runs, system interrupts remain enabled
but the miniport driver’s HwScsiInterrupt routine will not be called. The
HwScsiEnableInterruptsCallback is responsible for completing the deferred I/O
processing and for calling <B>ScsiPortNotification</B>&nbsp;again with <B>CallDisableInterrupts</B>
and the miniport’s HwScsiDisableInterruptsCallback entry point.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>CallDisableInterrupts</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the miniport driver requires the OS-specific port driver to
call the miniport’s HwScsiDisableInterruptsCallback routine. If this value is
set, <B>ScsiPortNotification</B>&nbsp;requires an additional parameter: the entry
point for the HwScsiDisableInterruptsCallback. While this callback runs, it
cannot be preempted by an interrupt except from a device with a higher
priority interrupt than the HBA. In this callback, the miniport re-enables
interrupts on the HBA.
</FONT><TR VALIGN=top>
<TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
<B>RequestTimerCall</B>
</FONT><TD><FONT FACE="ARIAL,HELVETICA" SIZE="2">
<P>
Indicates that the miniport requires the OS-specific port driver to call the
miniport’s HwScsiTimer routine in the requested number of microseconds. If
this value is set, <B>ScsiPortNotification</B>&nbsp;requires two additional
parameters: (1) the entry point for the miniport’s HwScsiTimer routine, and
(2) a <I>MiniportTimerValue</I>&nbsp;interval, in microseconds. Note that the
resolution of the system timer is approximately 10 milliseconds.
</FONT></TABLE>
<DT>
<I>HwDeviceExtension</I>
<DD>
Points to the miniport driver’s per-HBA storage area.
</DL>
<H3>Comments</H3>
<P>
Every miniport driver must call <B>ScsiPortNotification</B>&nbsp;twice for each
call to the miniport’s HwScsiStartIo routine with an SRB that the miniport
completes successfully. First, the miniport calls <B>ScsiPortNotification</B>
with the <I>NotificationType</I>&nbsp;<B>NextRequest</B>&nbsp;or with <B>NextLuRequest</B>
if the miniport supports tagged queuing or multiple requests per LU. Then, the
miniport calls <B>ScsiPortNotification</B>&nbsp;with the <I>NotificationType</I>&nbsp;<B>RequestComplete</B>
and the request that it has just satisfied.
<P>
A miniport’s HwScsiInterrupt routine is most likely to call <B>ScsiPortNotification</B>
with the <I>NotificationType</I>&nbsp;<B>ResetDetected</B>.
<P>
If an HBA requires the miniport to use more than a millisecond processing
interrupt-driven I/O operations, its HwScsiInterrupt routine should disable
interrupts on the HBA and call <B>ScsiPortNotification</B>&nbsp;with <B>CallEnableInterrupts</B>
and a driver-supplied HwScsiEnableInterruptsCallback routine. This routine, in
turn, calls <B>ScsiPortNotification</B>&nbsp;with <B>CallDisableInterrupts</B>&nbsp;and
the corresponding driver-supplied HwScsiDisableInterruptsCallback.
<H3>See Also</H3>
<P>
<A HREF="k302_11.htm">HwScsiTimer</A>, <A HREF="k302_3.htm">HwScsiDisableInterruptsCallback</A>,
<A HREF="k302_5.htm">HwScsiEnableInterruptsCallback</A>,
<B><A HREF="k301_1.htm">ScsiPortCompleteRequest</A></B>
<P></FONT>
</BODY>
</HTML>
