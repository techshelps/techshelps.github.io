<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IoAttachDevice</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_IoAttachDevice_KR"></A>IoAttachDevice</H2>
<P>
<B>NTSTATUS <BR>
&nbsp; &nbsp; IoAttachDevice(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PDEVICE_OBJECT</B>&nbsp; <I>SourceDevice</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PUNICODE_STRING</B>&nbsp; <I>TargetDevice</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PDEVICE_OBJECT</B>&nbsp; <I>*AttachedDevice</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>IoAttachDevice</B>&nbsp;attaches the caller’s device object to a named target
device object, so that I/O requests bound for the target device are routed
first to the caller.
<H3>Parameters</H3>
<DL>
<DT>
<I>SourceDevice</I>
<DD>
Points to the caller-created device object.
<BR>
<DT>
<I>TargetDevice</I>
<DD>
Points to a buffer containing the name of the device object to which the
specified <I>SourceDevice</I>&nbsp;is to be attached.
<BR>
<DT>
<I>AttachedDevice</I>
<DD>
Points to caller-allocated storage for a pointer. On return, contains a
pointer to the target device object if the attachment succeeds.
</DL>
<H3>Return Value</H3>
<P>
<B>IoAttachDevice</B>&nbsp;can return one of the following NTSTATUS values:
<P>
STATUS_SUCCESS<BR>
STATUS_INVALID_PARAMETER<BR>
STATUS_OBJECT_TYPE_MISMATCH<BR>
STATUS_OBJECT_NAME_INVALID<BR>
STATUS_INSUFFICIENT_RESOURCES
<H3>Comments</H3>
<P>
<B>IoAttachDevice</B>&nbsp;establishes layering between drivers so that the same
IRPs can be sent to each driver in the chain.
<P>
This routine is used by intermediate drivers during initialization. It allows
such a driver to attach its own device object to another device in such a way
that any requests being made to the original device are given first to the
intermediate driver.
<P>
The caller can only be layered at the top of an existing chain of layered
drivers. <B>IoAttachDevice</B>&nbsp;searches for the highest device object layered
over <I>TargetDevice</I>&nbsp;and attaches to that object (that can be the <I>TargetDevice</I>).
Therefore, this routine must not be called if a driver that must be
higher-level has already layered itself over the target device.
<P>
This routine sets the <B>AlignmentRequirement</B>&nbsp;in <I>SourceDevice</I>&nbsp;to
the value in the next-lower device object and sets the <B>StackSize</B>&nbsp;to the
value in the next-lower-object plus one.
<P>
Callers of <B>IoAttachDevice</B>&nbsp;must be running at IRQL PASSIVE_LEVEL.
<H3>See Also</H3>
<P>
<B><A HREF="k104_11.htm">IoAttachDeviceToDeviceStack</A></B>,
<B><A HREF="k104_22.htm">IoCreateDevice</A></B>, <B><A HREF="k104_31.htm">IoDetachDevice</A></B>
<P></FONT>
</BODY>
</HTML>
