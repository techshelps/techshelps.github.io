<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PORT_CONFIGURATION_INFORMATION</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_PORT_CONFIGURATION_INFORMATION_KR"></A>PORT_CONFIGURATION_INFORMATION</H2>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _PORT_CONFIGURATION_INFORMATION {
&nbsp; &nbsp; ULONG Length;
&nbsp; &nbsp; ULONG SystemIoBusNumber;
&nbsp; &nbsp; INTERFACE_TYPE AdapterInterfaceType;
&nbsp; &nbsp; ULONG BusInterruptLevel;
&nbsp; &nbsp; ULONG BusInterruptVector;
&nbsp; &nbsp; KINTERRUPT_MODE InterruptMode;
&nbsp; &nbsp; ULONG MaximumTransferLength;
&nbsp; &nbsp; ULONG NumberOfPhysicalBreaks;
&nbsp; &nbsp; ULONG DmaChannel;
&nbsp; &nbsp; ULONG DmaPort;
&nbsp; &nbsp; DMA_WIDTH DmaWidth;
&nbsp; &nbsp; DMA_SPEED DmaSpeed;
&nbsp; &nbsp; ULONG AlignmentMask;
&nbsp; &nbsp; ULONG NumberOfAccessRanges;
&nbsp; &nbsp; ACCESS_RANGE (*AccessRanges)[];
&nbsp; &nbsp; PVOID Reserved;
&nbsp; &nbsp; UCHAR NumberOfBuses;
&nbsp; &nbsp; UCHAR InitiatorBusId[8];
&nbsp; &nbsp; BOOLEAN ScatterGather;
&nbsp; &nbsp; BOOLEAN Master;
&nbsp; &nbsp; BOOLEAN CachesData;
&nbsp; &nbsp; BOOLEAN AdapterScansDown;
&nbsp; &nbsp; BOOLEAN AtdiskPrimaryClaimed;
&nbsp; &nbsp; BOOLEAN AtdiskSecondaryClaimed;
&nbsp; &nbsp; BOOLEAN Dma32BitAddresses;
&nbsp; &nbsp; BOOLEAN DemandMode;
&nbsp; &nbsp; BOOLEAN MapBuffers;
&nbsp; &nbsp; BOOLEAN NeedPhysicalAddresses;
&nbsp; &nbsp; BOOLEAN TaggedQueuing;
&nbsp; &nbsp; BOOLEAN AutoRequestSense;
&nbsp; &nbsp; BOOLEAN MultipleRequestPerLu;
&nbsp; &nbsp; BOOLEAN ReceiveEvent;
&nbsp; &nbsp; BOOLEAN RealModeInitialized;
&nbsp; &nbsp; BOOLEAN BufferAccessScsiPortControlled;
&nbsp; &nbsp; UCHAR MaximumNumberOfTargets;
&nbsp; &nbsp; UCHAR ReservedUchars[2];
&nbsp; &nbsp; ULONG SlotNumber;
&nbsp; &nbsp; ULONG BusInterruptLevel2;
&nbsp; &nbsp; ULONG BusInterrutVector2;
&nbsp; &nbsp; KINTERRUPT_MODE InterruptMode2;
&nbsp; &nbsp; ULONG DmaChannel2;
&nbsp; &nbsp; ULONG DmaPort2;
&nbsp; &nbsp; DMA_WIDTH DmaWidth2;
&nbsp; &nbsp; DMA_SPEED DmaSpeed2;&#09;
} PORT_CONFIGURATION_INFORMATION, <BR>  *PPORT_CONFIGURATION_INFORMATION;
&nbsp;</FONT></PRE>
<P>
PORT_CONFIGURATION_INFORMATION contains configuration information for an HBA.
The OS-specific port driver allocates and initializes this structure, supplies
as much HBA-specific configuration information as possible, and passes the
structure to the miniport driver’s HwScsiFindAdapter routine. The port driver
gets some of the information for this structure from the miniport’s
HARDWARE_INITIALIZATION_DATA structure. The miniport’s HwScsiFindAdapter
routine is responsible for determining whether the miniport driver can support
the HBA and, if so, for filling in the pertinent remaining information in the
PORT_CONFIGURATION_INFORMATION structure.
<H3>Members</H3>
<DL>
<DT>
<B>Length</B>
<DD>
Specifies the size of this structure in bytes, as returned by <B>sizeof</B>().
In effect, this member, which is always initialized by the OS-specific port
driver, indicates the version of this structure used by the port driver.
<BR>
<DT>
<B>SystemIoBusNumber</B>
<DD>
Specifies the system-assigned number of the I/O bus to which the HBA is
connected. The OS-specific port driver always initializes this member. Its
value is system-assigned because the platform might have several I/O buses of
the given <B>AdapterInterfaceType</B>.
<BR>
<DT>
<B>AdapterInterfaceType</B>
<DD>
Identifies the I/O bus interface. The OS-specific port driver always sets this
member to the value specified by the miniport driver in the
HW_INITIALIZATION_DATA structure.
<BR>
<DT>
<B>BusInterruptLevel</B>
<DD>
Specifies the bus-relative interrupt request level. The OS-specific port
driver makes no assumptions about the HBA’s interrupt usage, so the default
value is zero. Depending on the given <B>AdapterInterfaceType</B>&nbsp;and HBA, the
value set for this member can correspond to the IRQL for the bus, such as for <B>Isa</B>
and <B>MicroChannel</B>&nbsp;type buses. Drivers of <B>Eisa</B>&nbsp;HBAs must set this
value to the bus-relative IRQL for the HBA if the adapter is configured for
level-sensitive interrupts.
<BR>
<DT>
<B>BusInterruptVector</B>
<DD>
Specifies the bus-relative vector returned by the HBA. The OS-specific port
driver makes no assumptions about the HBA’s interrupt usage, so the default
value is zero. This member is irrelevant to drivers that set up the <B>BusInterruptLevel</B>
member for their HBAs. It is pertinent for HBAs on types of I/O buses that use
interrupt vectors, such as <B>PCIBus</B>.
<BR>
<DT>
<B>InterruptMode</B>
<DD>
Specifies whether the HBA uses <B>LevelSensitive</B>&nbsp;or <B>Latched</B>
interrupts. The OS-specific port driver always initializes this member to <B>Latched
</B>(sometimes called “edge-triggered”). Drivers of <B>Eisa</B>&nbsp;HBAs must
reset this value if the adapter is configured for level-sensitive interrupts,
as must drivers of HBAs on I/O buses that use level-sensitive interrupts, such
as <B>MicroChannel</B>&nbsp;type buses.
<BR>
<DT>
<B>MaximumTransferLength</B>
<DD>
Specifies the maximum number of bytes the HBA can transfer in a single
transfer operation. By default, the value of this member is
SP_UNINITIALIZED_VALUE, which indicates an unlimited maximum transfer size. If
its HBA has more limited transfer support, a miniport driver must reset this
member according to the HBA’s transfer capacity. If a miniport’s
HwScsiInterrupt routine cannot disable interrupts on the HBA, this member can
be adjusted during driver development to ensure that time spent in that
miniport’s ISR does not cause the mouse to “jump” or serial/parallel
throughput to drop to a user-noticeable level.
<BR>
<DT>
<B>NumberOfPhysicalBreaks</B>
<DD>
Specifies the maximum number of breaks between address ranges that a data
buffer can have if the HBA supports scatter/gather. In other words, the number
of scatter/gather lists minus one. By default, the value of this member is
SP_UNINITIALIZED_VALUE, which indicates the HBA can support an unlimited
number of physical discontiguities. If the port driver sets a value for this
member, the miniport driver can adjust the value lower but no higher. If this
member is SP_UNINITIALIZED_VALUE, the miniport driver must reset this member
according to the HBA’s scatter/gather capacity, with zero representing no
scatter/gather support.
<BR>
<DT>
<B>DmaChannel</B>
<DD>
Specifies the DMA channel used by a slave HBA. By default, the value of this
member is SP_UNINITIALIZED_VALUE. If the HBA uses a system DMA controller and
the given <B>AdapterInterfaceType</B>&nbsp;is any value except <B>MicroChannel</B>,
the miniport driver must reset this member.
<BR>
<DT>
<B>DmaPort</B>
<DD>
Specifies the DMA port used by a slave HBA. By default, the value of this
member is SP_UNINITIALIZED_VALUE. If the HBA uses a system DMA controller and
the given <B>AdapterInterfaceType</B>&nbsp;is <B>MicroChannel</B>, the miniport
driver must reset this member.
<BR>
<DT>
<B>DmaWidth</B>
<DD>
Specifies the width of DMA transfers if the HBA uses DMA. By default, the
value of this member is zero. If its HBA does DMA, the miniport must reset
this member to one of the following: <B>Width8Bits</B>, <B>Width16Bits</B>, or
<B>Width32Bits</B>.
<BR>
<DT>
<B>DmaSpeed</B>
<DD>
Specifies the DMA data-transfer speed for <B>Eisa</B>&nbsp;HBAs. By default, the
value of this member specifies compatibility timing. Acceptable values for
this member are any of the following: <B>Compatible</B>, <B>TypeA</B>, <B>TypeB</B>,
or <B>TypeC</B>.
<BR>
<DT>
<B>AlignmentMask</B>
<DD>
Is a mask indicating the alignment boundary for buffers required by the HBA
for transfer operations. A miniport driver should set this mask to indicate
any alignment restrictions on scatter/gather buffer pointers if the HBA
supports scatter/gather. For example, the value 0x00000001 indicates
(two-byte) word alignment.
<BR>
<DT>
<B>NumberOfAccessRanges</B>
<DD>
Specifies the number of <B>AccessRanges</B>&nbsp;elements in the array, described
next. The OS-specific port driver always sets this member to the value passed
in the HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
<BR>
<DT>
<B>AccessRanges</B>
<DD>
Points to an array of ACCESS_RANGE-type elements. The given <B>NumberOfAccessRanges</B>
determines how many elements must be configured with bus-relative range
values. The <B>AccessRanges</B>&nbsp;pointer must be NULL if <B>NumberOfAccessRanges</B>
is zero. By default, all values within array elements are zero. If possible,
the OS-specific port driver initializes this member’s elements, possibly from
the registry or possibly by interrogating an I/O bus, for an HBA it found by
using the miniport’s specified HW_INITIALIZATION_DATA.
<P>
If any access range element is set to nondefault values on entry to the
miniport’s HwScsiFindAdapter routine, the miniport <I>must</I>&nbsp;map the
supplied addresses with <B>ScsiPortGetDeviceBase</B>&nbsp;and use the corresponding
logical addresses to verify whether that HBA is one it supports. If the input <B>AccessRanges</B>
have nondefault values supplied, a miniport <I>should never</I>&nbsp;<I>attempt</I>
to scan the I/O bus for HBAs it supports using a set of driver-devised
port/memory addresses that its HBA(s) might use.
<BR>
<DT>
<B>Reserved</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>NumberOfBuses</B>
<DD>
Specifies the number of SCSI buses controlled by the HBA. By default, the
value of this member is zero.
<BR>
<DT>
<B>InitiatorBusId</B>
<DD>
If the input <B>InitiatorBusId[0]</B>&nbsp;has the value zero, the miniport can
assign a default value if its HBA does not require the use of particular
value(s) determined by querying the HBA. Otherwise, the miniport should use
any nonzero value assigned by the port driver if possible. Every miniport must
update <B>InitiatorBusId</B>&nbsp;specifications to match what its HBA uses, if
necessary querying the HBA to determine the appropriate values(s).
<P>
A miniport driver must set an entry for each SCSI bus supported by the HBA, as
indicated by the value of <B>NumberOfBuses</B>.
<BR>
<DT>
<B>ScatterGather</B>
<DD>
TRUE indicates the HBA supports scatter/gather. By default, the value of this
member is FALSE.
<BR>
<DT>
<B>Master</B>
<DD>
TRUE indicates the HBA is a busmaster. By default, the value of this member is
FALSE.
<BR>
<DT>
<B>CachesData</B>
<DD>
TRUE indicates the HBA caches data or maintains cached state on the
peripherals. By default, the value of this member is FALSE. If this is reset
to TRUE, the OS-specific port driver notifies the miniport driver when certain
system events occur, such as file system cache flushes and system shutdown.
For example, if a controller on the bus mirrors two disks, the miniport driver
would normally set this member to TRUE.
<BR>
<DT>
<B>AdapterScansDown</B>
<DD>
TRUE indicates the BIOS for the HBA scans for SCSI bus targets from seven to
zero. By default, the value of this member is FALSE.
<BR>
<DT>
<B>AtdiskPrimaryClaimed</B>
<DD>
TRUE indicates that the primary “AT” (WD1003-compatible) disk address range,
0x1F0 to 0x1FF, has been claimed in the registry by another driver for its
device. The OS-specific port driver always initializes this member. If the
input value of this member is TRUE, a miniport driver should assume that an
already loaded driver has claimed the device range. If the input value is
FALSE, a miniport driver can claim the address range for an HBA that emulates
an “AT” disk controller and reset this member to TRUE, thereby preventing
access to this range by the “AT” disk driver or subsequently loaded miniport
drivers.
<BR>
<DT>
<B>AtdiskSecondaryClaimed</B>
<DD>
TRUE indicates that the secondary AT disk address range, 0x170 to 0x17F has
been claimed in the registry by another driver for its device. The OS-specific
port driver always initializes this member. Miniport drivers should treat this
member as for <B>AtdiskPrimaryClaimed</B>.
<BR>
<DT>
<B>Dma32BitAddresses</B>
<DD>
TRUE indicates that the HBA has 32 address lines and can access memory with
physical addresses greater than 0x00FFFFFF. By default, the value of this
member is FALSE.
<BR>
<DT>
<B>DemandMode</B>
<DD>
TRUE indicates the system DMA controller should be programmed for demand-mode
rather than single-cycle operations. If the HBA is not a slave device, this
member should be FALSE.
<BR>
<DT>
<B>MapBuffers</B>
<DD>
TRUE indicates data buffers must be mapped to system virtual address ranges.
The OS-specific port driver always sets this member to the value passed in the
HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
A miniport driver can reset this value for any particular HBA it controls. If
FALSE, the miniport must not access <B>Srb.DataBuffer</B>&nbsp;directly.
<BR>
<DT>
<B>NeedPhysicalAddresses</B>
<DD>
TRUE indicates the miniport driver must translate virtual addresses to
physical addresses, as required by the HBA. The OS-specific port driver always
sets this member to the value passed in the HW_INITIALIZATION_DATA structure
when the miniport driver called <B>ScsiPortInitialize</B>. A miniport driver
can reset this value for any particular HBA it controls.
<BR>
<DT>
<B>TaggedQueuing</B>
<DD>
TRUE indicates the HBA supports queuing of multiple requests with SCSI-II
tags. The OS-specific port driver always sets this member to the value passed
in the HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
A miniport driver can reset this value for any particular HBA it controls.
<BR>
<DT>
<B>AutoRequestSense</B>
<DD>
TRUE indicates the HBA supports auto request sense. The OS-specific port
driver always sets this member to the value passed in the
HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
A miniport driver can reset this value for any particular HBA it controls.
This member must be set to TRUE before the driver of a busmaster HBA calls <B>ScsiPortGetUncachedExtension</B>.
<BR>
<DT>
<B>MultipleRequestPerLu</B>
<DD>
TRUE indicates the HBA supports multiple requests per logical unit. The
mechanism by which the adapter caches the requests is adapter-defined. The
OS-specific port driver always sets this member to the value passed in the
HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
A miniport driver can reset this value for any particular HBA it controls.
<BR>
<DT>
<B>ReceiveEvent</B>
<DD>
TRUE indicates the HBA supports SCSI receive-event operations. The OS-specific
port driver always sets this member to the value passed in the
HW_INITIALIZATION_DATA structure when the miniport driver called <B>ScsiPortInitialize</B>.
A miniport driver can reset this value for any particular HBA it controls.
<BR>
<DT>
<B>RealModeInitialized</B>
<DD>
TRUE indicates an (x86-only) real-mode driver has already initialized the HBA.
The OS-dependent port driver always initializes this member. If this is set to
TRUE, the miniport driver must not initialize its HBA if the driver’s
initialization sequence is identical to real-mode HBA initialization; not
reinitializing the HBA in these circumstances makes the miniport driver load
much faster. The value of this member is irrelevant to any miniport that
always initializes its HBA while running in protected mode on x86-based
platforms and to all miniports for which it is immaterial whether they are
running on a CISC- or RISC-based platform.
<BR>
<DT>
<B>BufferAccessScsiPortControlled</B>
<DD>
TRUE indicates that the miniport always calls <B>ScsiPort</B><I>Xxx</I>&nbsp;to
access data buffers and/or request-sense information in SRBs, thereby allowing
the OS-specific port driver to optimize I/O request processing. Setting this
member to FALSE can degrade the I/O performance of the HBA. Calling routines
other than the <B>ScsiPort</B><I>Xxx</I>&nbsp;makes a miniport driver nonportable
across Microsoft operating systems.
<BR>
<DT>
<B>MaximumNumberOfTargets</B>
<DD>
Specifies the number of target peripherals the HBA can control. By default,
the value of this member is SCSI_MAXIMUM_TARGETS, according to the SCSI-II
standard. A miniport can reset this member to a lesser value if the HBA has
more limited capabilities or to a greater value, indicating that the HBA has
wide-SCSI capabilities.
<BR>
<DT>
<B>ReservedUchars[2]</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>SlotNumber</B>
<DD>
Specifies the slot number of an HBA with matching values to the <B>VendorId</B>
and <B>DeviceId</B>&nbsp;that were specified in the HW_INITIALIZATION_DATA
structure when the miniport driver called <B>ScsiPortInitialize</B>.
<BR>
<DT>
<B>BusInterruptLevel2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>BusInterruptVector2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>InterruptMode2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>DmaChannel2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>DmaPort2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>DmaWidth2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
<BR>
<DT>
<B>DmaSpeed2</B>
<DD>
Reserved for system use and not available for use by miniport drivers.
</DL>
<H3>Comments</H3>
<P>
The specific members initialized depend on the HBA miniport driver and on the
configuration information available to the OS-specific port driver. The
OS-specific port driver sets default values in all members for which it cannot
supply configuration information to the miniport’s HwScsiFindAdapter routine.
<P>
All HBA miniport drivers should have at least one set of defaults to use for
relevant members if the OS-specific port driver does not pass in all
initialized values.
<P>
The HwScsiFindAdapter routine must update all members relevant to an HBA that
the driver supports.
<P>
Windows NT SCSI class drivers, which load later than miniport drivers, depend
on the information supplied by each miniport’s HwScsiFindAdapter routine to
set up their subsequent I/O requests. For example, the <B>MaximumTransferLength
</B>and <B>NumberOfPhysicalBreaks</B>&nbsp;values supplied by each miniport driver
control whether a class driver must split large transfer requests into a set
of partial transfers to suit the limits of the HBA.
<H3>See Also</H3>
<P>
<A HREF="k305_1.htm">ACCESS_RANGE</A>, <B><A HREF="k302_1.htm">DriverEntry</A></B>,
<A HREF="k302_6.htm">HwScsiFindAdapter</A>, <B><A HREF="k301_7.htm">ScsiPortGetDeviceBase</A></B>,
<B><A HREF="k301_11.htm">ScsiPortGetUncachedExtension</A></B>,
<B><A HREF="k301_13.htm">ScsiPortInitialize</A></B>, <B><A HREF="k301_32.htm">ScsiPortValidateRange</A></B>
<P>
&nbsp;
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
