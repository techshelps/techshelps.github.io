<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ExAcquireResourceSharedLite</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_ExAcquireResourceSharedLite_KR"></A>ExAcquireResourceSharedLite</H2>
<P>
<B>BOOLEAN <BR>
&nbsp; &nbsp; ExAcquireResourceSharedLite(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PERESOURCE</B>&nbsp; <I>Resource</I><B>,<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN BOOLEAN</B>&nbsp; <I>Wait</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>ExAcquireResourceSharedLite</B>&nbsp;acquires the given resource for shared
access by the calling thread. 
<H3>Parameters</H3>
<DL>
<DT>
<I>Resource</I>
<DD>
Points to the resource to acquire.
<BR>
<DT>
<I>Wait</I>
<DD>
Is set to TRUE if the caller should be put into a wait state until the
resource can be acquired if it cannot be acquired immediately. 
</DL>
<H3>Return Value</H3>
<P>
<B>ExAcquireResourceSharedLite</B>&nbsp;returns TRUE if (or when) the resource is
acquired. This routine returns FALSE if the input <I>Wait</I>&nbsp;is FALSE and
shared access cannot be granted immediately. 
<H3>Comments</H3>
<P>
Whether or when the caller is given shared access to the given resource
depends on the following:
<UL>
<LI>
If the resource is currently unowned, shared access is granted immediately to
the current thread.
<P>
<LI>
If the caller already has acquired the resource, the current thread is granted
the same type of access recursively. Note that making this call does not
convert a caller’s exclusive ownership of a given resource to shared. 
<P>
<LI>
If the resource is currently owned as shared by another thread and no thread
is waiting for exclusive access to the resource, shared access is granted to
the caller immediately. The caller is put into a wait state if there is an
exclusive waiter. 
<P>
<LI>
If the resource is currently owned as exclusive by another thread or if there
is another thread waiting for exclusive access and the caller does not already
have shared access to the resource, the current thread either is put into a
wait state (<I>Wait</I>&nbsp;set to TRUE) or <B>ExAcquireResourceSharedLite</B>
returns FALSE. 
</UL>
<P>
Callers of <B>ExAcquireResourceSharedLite</B>&nbsp;must be running at IRQL &lt;
DISPATCH_LEVEL. 
<H3>See Also</H3>
<P>
<B><A HREF="k102_4.htm">ExAcquireResourceExclusiveLite</A></B>,
<B><A HREF="k102_6.htm">ExAcquireSharedStarveExclusive</A></B>,
<B><A HREF="k102_7.htm">ExAcquireSharedWaitForExclusive</A></B>,
<B><A HREF="k102_15.htm">ExConvertExclusiveToSharedLite</A></B>,
<B><A HREF="k102_26.htm">ExGetExclusiveWaiterCount</A></B>, <B><A HREF="k102_27.htm">ExGetSharedWaiterCount</A></B>,
<B><A HREF="k102_32.htm">ExInitializeResourceLite</A></B>, <B><A HREF="k102_59.htm">ExReinitializeResourceLite</A></B>,
<B><A HREF="k102_54.htm">ExIsResourceAcquiredSharedLite</A></B>,
<B><A HREF="k102_64.htm">ExReleaseResourceForThreadLite</A>
</B>
<P></FONT>
</BODY>
</HTML>
