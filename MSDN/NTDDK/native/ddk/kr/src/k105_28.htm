<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KeQueryPerformanceCounter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_KeQueryPerformanceCounter_KR"></A>KeQueryPerformanceCounter</H2>
<P>
<B>LARGE_INTEGER <BR>
&nbsp; &nbsp; KeQueryPerformanceCounter(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PLARGE_INTEGER</B>&nbsp; <I>PerformanceFrequency</I>&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>KeQueryPerformanceCounter</B>&nbsp;provides the finest grained running count
available in the system.
<H3>Parameters</H3>
<DL>
<DT>
<I>PerformanceFrequency</I>
<DD>
Specifies an optional pointer to a variable that is to receive the performance
counter frequency.
</DL>
<H3>Return Value</H3>
<P>
<B>KeQueryPerformanceCounter</B>&nbsp;returns the performance counter value in
hertz.
<H3>Comments</H3>
<P>
<B>KeQueryPerformanceCounter</B>&nbsp;always returns a 64-bit integer representing
the number of ticks per second. Accumulating the count begins when the system
is booted. The count is in ticks; the frequency is reported by <I>PerformanceFrequency</I>
if this optional parameter is supplied.
<P>
The resolution of the timer used to accumulate the current count can be
obtained by specifying <I>PerformanceFrequency</I>. For example, if the
returned <I>PerformanceFrequency</I>&nbsp;is 2 million, each tick is 1/2 millionth
of a second. Each 1/<I>x</I>&nbsp;millionth increment of the count corresponds to
one second of elapsed time.
<P>
<B>KeQueryPerformanceCounter</B>&nbsp;is intended for time stamping packets or for
computing performance and capacity measurements. It is not intended for
measuring elapsed time, for computing stalls or waits, or for iterations.
<P>
Use this routine sparingly, calling it as infrequently as possible. Depending
on the platform, <B>KeQueryPerformanceCounter</B>&nbsp;can disable system-wide
interrupts for a minimal interval. Consequently, calling this routine
frequently or repeatedly, as in an iteration, defeats its purpose of returning
very fine-grained, running time-stamp information. Calling this routine too
frequently can degrade I/O performance for the calling driver and for the
system as a whole.
<P>
Callers of <B>KeQueryPerformanceCounter</B>&nbsp;can be running at any IRQL.
<H3>See Also</H3>
<P>
<B><A HREF="k105_29.htm">KeQuerySystemTime</A></B>, <B><A HREF="k105_30.htm">KeQueryTickCount</A></B>,
<B><A HREF="k105_31.htm">KeQueryTimeIncrement</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
