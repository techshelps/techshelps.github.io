<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Synchronization and Timers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Synchronization_and_Timers_RN"></A>Synchronization and Timers</H4>
<UL>
<LI>
<I>New Periodic Timers</I>
<P>
The new <B>KeSetTimerEx</B>&nbsp;routine accepts an optional <I>Period</I>
parameter that specifies a recurring interval for the timer. Periodic timers
are more efficient than resetting a timer manually because periodic timers do
not incur an extra trip through the kernel. Periodic timers also do not drift.
<P>
<LI>
<I>New Synchronization Timers</I>
<P>
Previously a timer was always a notification timer, but now a timer can be a
notification timer or a synchronization timer.
<P>
When a notification timer is signaled, all waiting threads have their wait
satisfied and the state of the timer remains Signaled until it is explicitly
reset. When a synchronization timer expires, its state is set to Signaled
until a single waiting thread is released and then the timer is reset to the
Not-Signaled state.
<P>
<B>KeInitializeTimer</B>&nbsp;always creates notification timers. The new <B>KeInitializeTimerEx</B>
routine accepts a <I>Type</I>&nbsp;parameter which can be <B>NotificationTimer</B>
or <B>SynchronizationTimer</B>.
<P>
Both notification and synchronization timers can have an associated
CustomTimerDpc routine.
<P>
<LI>
<I>New <B>IoCreateNotificationEvent</I></B>&nbsp;<I>routine</I>
<P>
This new routine creates or opens a named notification event. Notification
events notify one or more threads of execution that an event has occurred.
When a notification event is Signaled, it remains in that state until it is
explicitly set to Not-Signaled.
</UL>
<P></FONT>
</BODY>
</HTML>
