<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.3.3.3  Sample Print Macros</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Sample_Print_Macros_PG"></A>4.3.3.3  Sample Print Macros</H4>
<P>
In addition to the <B>ASSERT</B>&nbsp;macros, a number of the sample kernel-mode
drivers define a print macro that uses a global debugging-level variable to
control the level of interaction with <B>WinDbg</B>. The macros differ for
different drivers, but they have a number of features in common: 
<UL>
<LI>
As with the <B>ASSERT</B>&nbsp;macros, these macros are conditionally compiled.
<P>
<LI>
Each macro’s arguments include the message to print and a level parameter that
indicates the severity of the error.
<P>
<LI>
The level parameter and the global debugging level determine the action taken
by the macro. The actions range from doing nothing, to printing the message
string, to executing an <B>ASSERT</B>&nbsp;macro. 
</UL>
<P>
For example, the ATDISK driver defines an <B>AtDebugLevel</B>&nbsp;global variable
whose default value is 0, and it defines an <B>AtDump</B>&nbsp;macro as follows:
<PRE><FONT FACE="Courier" SIZE="2">#if DBG
extern ULONG AtDebugLevel;
#define ATBUGCHECK      ((ULONG)0x80000000)
#define ATDIAG1       ((ULONG)0x00000001)
#define ATDIAG2       ((ULONG)0x00000002)
#define ATERRORS       ((ULONG)0x00000004)
#define ATINIT        ((ULONG)0x00000008)
#define AtDump(LEVEL,STRING) \
&nbsp; do { \
&nbsp; &nbsp; ULONG _level = (LEVEL); \
&nbsp; &nbsp; if (AtDebugLevel &amp; _level) { \
&nbsp; &nbsp; &nbsp; DbgPrint STRING; \
&nbsp; &nbsp; } \
&nbsp; &nbsp; if (_level == ATBUGCHECK) { \
&nbsp; &nbsp; &nbsp; ASSERT(FALSE); \
&nbsp; &nbsp; } \
&nbsp; } while (0)
#else
#define AtDump(LEVEL,STRING) do {NOTHING;} while (0)
#endif
&nbsp;</FONT></PRE>
<P>
Using this macro, you could insert statements like the following into your
code:
<PRE><FONT FACE="Courier" SIZE="2">if (SomeVariable == -1)
AtDump(ATERRORS, (&quot;Bad value for SomeVariable&quot;) );
&nbsp;</FONT></PRE>
<P>
If <B>AtDebugLevel</B>&nbsp;is 0, the message is not displayed. To enable the
display of certain levels of error messages, you can assign a hard-coded value
to <B>AtDebugLevel</B>&nbsp;and recompile. To set the variable at run time, you can
use the <B>ed</B>&nbsp;command of <B>WinDbg </B>to modify the value of <B>AtDebugLevel</B>
or have the driver obtain the debugging-level from a registry parameter for
the driver.
<P></FONT>
</BODY>
</HTML>
