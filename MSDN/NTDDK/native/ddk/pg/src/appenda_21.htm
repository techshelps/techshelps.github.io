<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.5.3  Executing an external program</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Executing_an_external_program_PG"></A>A.3.5.3  Executing an External Program</H4>
<P>
The GUI INF script language provides two commands that enable you to execute
another program from an INF script. From a shell or install section, you can
use the <B>RunProgram</B>&nbsp;and <B>StartDetachedProcess</B>&nbsp;commands to start
another program, and you can use the <B>WaitOnEvent</B>&nbsp;and <B>SignalEvent</B>
commands to synchronize execution between the INF script and a program started
by <B>StartDetachedProcess</B>.
<H5>RunProgram Command</H5>
<P>
The <B>RunProgram</B>&nbsp;command executes the specified program and stores the
program’s exit code under the <I>ExitCode</I>&nbsp;variable. To the INF script, it
appears that the program is executed synchronously, because execution of the
INF script waits for the program to terminate. Internally, however, the Setup
program executes the program asynchronously and then uses a loop to wait for
the program’s termination while yielding periodically to handle messages. This
enables the Setup program to be responsive to user interactions during the
wait. The syntax of this command is:
<P>
<B>RunProgram</B>&nbsp;<I>ExitCode DiskName Reserved ProgramPath</I>&nbsp;[<I>Args</I>]*
<DL>
<DT>
<I>ExitCode</I>
<DD>
Receives the exit code of the process, if the process is successfully started.
Otherwise, receives the string, “ERROR”.
<BR>
<DT>
<I>DiskName</I>
<DD>
String to prompt the user to insert a disk. This string is used only if <I>ProgramPath</I>
indicates that the specified file is on a floppy disk (for example,
a:\mysetup.exe) and the file is not found on the disk that is present.
<BR>
<DT>
<I>Reserved</I>
<DD>
Ignored; should be ““.
<BR>
<DT>
<I>Args</I>
<DD>
Zero or more argument strings.
</DL>
<P>
For example:
<PRE><FONT FACE="Courier" SIZE="2"><B>RunProgram</B>&nbsp;ExitCode &quot;Setup Disk #1&quot;  &quot;&quot; a:\setupprg.exe
&nbsp;</FONT></PRE>
<H5>StartDetachedProcess Command</H5>
<P>
The <B>StartDetachedProcess</B>&nbsp;command executes the specified program
asynchronously, using the <B>CreateProcess</B>&nbsp;function of the Win32 API (with
the DETACHED_PROCESS flag). Execution of the INF script continues without
waiting for the process to terminate. The syntax of the command is:
<P>
<B>StartDetachedProcess</B>&nbsp;<I>ExitCode DiskName Reserved ProgramPath</I>&nbsp;[<I>Args</I>]*
<DL>
<DT>
<I>ExitCode</I>
<DD>
Receives the exit code of the process, if the process is successfully started.
Otherwise, receives the string “ERROR”.
<BR>
<DT>
<I>DiskName</I>
<DD>
String to prompt the user to insert a disk. This string is used only if <I>ProgramPath</I>
indicates that the specified file is on a floppy disk (for example, <I>a:\mysetup.exe</I>)
and the file is not found on the disk that is present.
<BR>
<DT>
<I>Reserved</I>
<DD>
Ignored; should be ““.
<BR>
<DT>
<I>ProgramPath</I>
<DD>
A full or partial path specifying the file to be executed.
<BR>
<DT>
<I>Args</I>
<DD>
Zero or more argument strings.
</DL>
<P>
For example:
<PRE><FONT FACE="Courier" SIZE="2"><B>StartDetachedProcess</B>&nbsp;Success &quot;Setup Disk #1&quot; &quot;&quot; a:\setupprg.exe
&nbsp;</FONT></PRE>
<H5>WaitOnEvent Command</H5>
<P>
The <B>WaitOnEvent</B>&nbsp;command opens a handle to the specified event object.
It then waits for either the object’s state to be signaled or the timeout
interval to elapse. This command blocks the execution of the INF script, but,
internally, the Setup program uses a loop to wait for the event to be signaled
while yielding periodically to handle messages. This enables the Setup program
to be responsive to user interactions during the wait.
<P>
This command is useful in coordinating execution of the INF script with an
external program started by the <B>StartDetachedProcess</B>&nbsp;command. If the
first character of the <I>EventName</I>&nbsp;string is an asterisk (*), a variation
of the <B>WaitOnEvent</B>&nbsp;operation is performed. In this case, the detached
process can signal either the named event or an event named \\SETUP_FAILED. It
signals the <I>EventName</I>&nbsp;event to indicate success, and signals the
\\SETUP_FAILED event to indicate that the process failed and an error popup
has already been presented to the user.
<P>
Note that the Setup program does not create the <I>EventName</I>&nbsp;event if it
does not exist. This means that you must allow time for the detached process
to create the event. The syntax of the command is:
<P>
<B>WaitOnEvent</B>&nbsp;<I>Result EventName Timeout</I>
<DL>
<DT>
<I>Result</I>
<DD>
Receives one of the following strings:
<P>
“EventSet” - The <I>EventName</I>&nbsp;event was signaled.
<P>
“EventNotFound” - No event object exists with the specified name.
<P>
“EventTimeout” - The timeout interval elapsed before the event was signaled.
<P>
“EventFailed” - The \\SETUP_FAILED event was signaled.
<BR>
<DT>
<I>EventName</I>
<DD>
Specifies the name of the event object to wait on. If the first character of
the string is ‘*’, the name consists of the characters following the ‘*’.
<BR>
<DT>
<I>Timeout</I>
<DD>
Specifies the timeout interval in milliseconds. If zero is specified, the wait
is indefinite.
</DL>
<H5>SignalEvent Command</H5>
<P>
The <B>SignalEvent</B>&nbsp;command opens a handle to the specified event object,
and sets its state to signaled. The Setup program does not create the <I>EventName</I>
event if it does not exist. The syntax of the command is:
<P>
<B>SignalEvent</B>&nbsp;<I>Result EventName</I>
<DL>
<DT>
<I>Result</I>
<DD>
Receives one of the following strings:
<P>
“EventSignaled” - The event’s state was set to signaled.
<P>
“EventNotSet” - The event’s state could not be set to signaled.
<P>
“EventNotFound” - No event object exists with the specified name.
<BR>
<DT>
<I>EventName</I>
<DD>
Specifies the name of the event object to be signaled.
</DL>
<P></FONT>
</BODY>
</HTML>
