<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.6.4  Displaying Dialogs</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Displaying_Dialogs_PG"></A>A.3.6.4  Displaying Dialogs</H4>
<P>
The INF script language has built-in commands, dialog templates, and shell
scripts that provide a mechanism for displaying simple message box dialogs. To
display custom dialogs, create a DLL that displays the dialog and returns the
user’s input. 
<P>
The <I>subroutn.inf</I>&nbsp;file located in the Windows NT System32 directory
contains a <B>SetupMessage</B>&nbsp;shell section that displays a message box
dialog. Call <B>SetupMessage</B>&nbsp;from a driver’s <I>oemsetup.inf</I>&nbsp;file
using the following syntax:
<P>
<B>shell</B>&nbsp;“<I>subroutn.inf</I>” <B>SetupMessage</B>&nbsp;<I>LangID</I>&nbsp;<I>Template
Message</I>
<DL>
<DT>
<I>LangID</I>
<DD>
Specifies the language in which messages are displayed, for example, ENG, SPN.
You can use the STF_LANGUAGE variable, which is set by Setup to specify the
language selected by the user or the default language on the system.
<BR>
<DT>
<I>Template</I>
<DD>
Specifies the number of buttons, the default button, and the icon. Specify one
of the following:
<DL>
<DT>
WARNING
<DD>
Displays OK and Cancel buttons, and the ! icon. The Cancel button is the
default.
<BR>
<DT>
STATUS
<DD>
Displays an OK button and the Info icon.
<BR>
<DT>
NONFATAL
<DD>
Displays an OK button and the ! icon.
<BR>
<DT>
FATAL
<DD>
Displays an OK button and the Stop icon
</DL>
<DT>
<I>Message</I>
<DD>
Specifies the text to display.
</DL>
<P>
<B>SetupMessage</B>&nbsp;returns two values. The first return value indicates
success or failure. It returns STATUS_SUCCESSFUL, STATUS_FAILURE, or
STATUS_NOLANGUAGE if the <I>LangID</I>&nbsp;argument specifies an unsupported
language. If the first return value is STATUS_SUCCESSFUL, the second return
value indicates the button pressed (either OK or CANCEL).
<P>
For example, these lines from an INF script display the dialog shown below,
and handle the return values:
<PRE><FONT FACE="Courier" SIZE="2"><B>shell</B>&nbsp;&quot;subroutn.inf&quot; <B>SetupMessage</B>&nbsp;$(!STF_LANGUAGE) WARNING+
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &quot;Looks like trouble. Do you want to continue?&quot;
<B>ifstr</B>(i) $($R0) != STATUS_SUCCESSFUL
&nbsp; &nbsp; <B>goto</B>&nbsp;HandleError
<B>endif</B>
<B>ifstr</B>(i) $($R1) == &quot;OK&quot;
&nbsp; &nbsp; <B>goto</B>&nbsp;ContinueOperation
<B>else-ifstr</B>(i) $($R1) == &quot;CANCEL&quot;
&nbsp; &nbsp; <B>goto</B>&nbsp;BailOut
<B>endif</B>
&nbsp;</FONT></PRE>
<P>
<IMG SRC="../art/setup.gif" BORDER=0>
<P>
For additional customization of the message box dialog, you can use the <B>ui
start</B>&nbsp;command as shown in the following example. Note that the string
specified after <B>ui start</B>&nbsp;is required, but has no significance.
<PRE><FONT FACE="Courier" SIZE="2"><B>read-syms</B>&nbsp;CustomMessageDlg      ; setup the message box variables
<B>ui start</B>&nbsp;&quot;CustomMessageBox&quot;
<B>ifstr</B>(i) $(DLGEVENT) == &quot;ABORT&quot; ; DLGEVENT indicates button pressed
&nbsp; &nbsp; <B>goto</B>&nbsp;AbortProcedure
<B>else-ifstr</B>(i) $(DLGEVENT) == &quot;RETRY&quot;
&nbsp; &nbsp; <B>goto</B>&nbsp;RetryProcedure
<B>else-ifstr</B>(i) $(DLGEVENT) == &quot;IGNORE&quot;
&nbsp; &nbsp; <B>goto</B>&nbsp;IgnoreProcedure
<B>else</B>
&nbsp; &nbsp; <B>exit</B>
<B>endif</B>
&nbsp;
[CustomMessageDlg]
DlgType = &quot;MessageBox&quot;
&nbsp; &nbsp; STF_MB_TITLE = &quot;Message Box Dialog&quot;
&nbsp; &nbsp; STF_MB_TEXT  = &quot;Message Text&quot;
&nbsp; &nbsp; STF_MB_TYPE  = 6    ; display Abort, Retry, and Ignore buttons
&nbsp; &nbsp; STF_MB_ICON  = 5    ; ! icon
&nbsp; &nbsp; STF_MB_DEF   = 2    ; default button is Retry
&nbsp;</FONT></PRE>
<P>
For the MessageBox dialog, the STF_MB_TITLE variable is optional, but all
other variables in the following table must be set. Determine the button
pressed by examining the DLGEVENT variable, which is set to one of the
following strings: “ABORT”, “CANCEL”, “IGNORE”, “NO”, “OK”, “RETRY”, or “YES”.
<P>
DlgType = MessageBox
<DL>
<DT>
STF_MB_TITLE = <I>Title</I>
<DD>
Specifies the title of the dialog box. Can be blank.
<BR>
<DT>
STF_MB_TEXT = <I>Message</I>
<DD>
Specifies the message text.
<BR>
<DT>
STF_MB_TYPE = <I>Type</I>
<DD>
Specifies the combination of buttons. <I>Type</I>&nbsp;is one of the following:
<P>
1    OK button
<P>
2    OK and Cancel buttons
<P>
3    Yes and No buttons
<P>
4    Yes, No, and Cancel buttons
<P>
5    Retry and Cancel buttons
<P>
6    Abort, Retry, and Ignore buttons
<BR>
<DT>
STF_MB_DEF
<DD>
Specifies the default button (1, 2, or 3)
<BR>
<DT>
STF_MB_ICON = <I>Icon</I>
<DD>
Specifies the icon to display. <I>Icon</I>&nbsp;is one of the following:
<P>
1    No icon
<P>
2    Info icon
<P>
3    Stop icon
<P>
4    ? icon
<P>
5    ! icon
</DL>
<P></FONT>
</BODY>
</HTML>
