<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.2.4  Installer Function</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Installer_Function_PG"></A>2.4.2.4  Installer Function </H4>
<P>
Every installer exports an installer function. The default name for the
function is <B>ClassInstall</B>. The device installer dynamically links to and
calls this function whenever it needs the class installer to carry out a
specific installation task. 
<P>
The prototype for the installer function is as follows:
<PRE><FONT FACE="Courier" SIZE="2">typedef DWORD  (CALLBACK* CLASS_INSTALL_PROC) (
&nbsp; &nbsp; IN DI_FUNCTION       InstallFunction,
&nbsp; &nbsp; IN HDEVINFO          DeviceInfoSet,
&nbsp; &nbsp; IN PSP_DEVINFO_DATA  DeviceInfoData  /* optional */
&nbsp; &nbsp; );
&nbsp;</FONT></PRE>
<P>
The installer function receives two or three arguments: <I>InstallFunction</I>
which identifies the installation request to perform, a handle to the device
information set, and, optionally, a pointer to an SP_DEVINFO_DATA structure
that contains information about the device to install. The function either
carries out the requested task or directs the class installer to carry out the
task for it. 
<P>
To direct the class installer to carry out the task, the installer function
must return ERROR_DI_DO_DEFAULT. If the device installer performs its own
tasks, it must return the value NO_ERROR to notify the class installer that
the task completed successfully. 
<P></FONT>
</BODY>
</HTML>
