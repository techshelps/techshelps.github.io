<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetupDiOpenDeviceInfo</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_SetupDiOpenDeviceInfo_PG"></A>SetupDiOpenDeviceInfo</H4>
<P>
<B>BOOLEAN</B><BR>
&nbsp; &nbsp; <B>SetupDiOpenDeviceInfo(</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN HDEVINFO</B>&nbsp; <I>DeviceInfoSet</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PCTSTR</B>&nbsp; <I>DeviceInstanceId</I><B>,</B><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>IN HWND</B>&nbsp; <I>hwndParent</I><B>,</B>&nbsp; &nbsp; /* optional */<BR>
<B>&nbsp; &nbsp; &nbsp; &nbsp; IN DWORD</B>&nbsp; <I>OpenFlags</I><B><BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>OUT PSP_DEVINFO_DATA</B>&nbsp; <I>DeviceInfoData</I>&nbsp; &nbsp; /* optional */<BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
<B>SetupDiOpenDeviceInfo</B>&nbsp;retrieves information about an existing device
instance and adds it to the specified device information set. If a device
information element already exists for this device instance, the function
returns the existing element.
<H5>Parameters</H5>
<DL>
<DT>
<I>DeviceInfoSet</I>
<DD>
Supplies a handle to a device information set to which the opened device
information element should be added.
<BR>
<DT>
<I>DeviceInstanceId</I>
<DD>
Supplies the ID of the device instance. This is the registry path relative to
the <B>Enum</B>&nbsp;path of the device instance key. For example, <B>Root\*PNP0500\0000</B>.
<BR>
<DT>
<I>hwndParent</I>
<DD>
Supplies the window handle of the top-level window to use for any user
interface related to installing the device.
<BR>
<DT>
<I>OpenFlags</I>
<DD>
Controls how the device information element is opened. Can be the following:
<DL>
<DT>
DIOD_INHERIT_CLASSDRVS
<DD>
If this flag is specified, the resulting device information element inherits
the class driver list, if any, associated with the device information set. In
addition, if there is a selected driver for the device information set, that
same driver is selected for the new device information element.
<P>
If the device information element was already present, its class driver list,
if any, is replaced with the inherited list.
</DL>
<DT>
<I>DeviceInfoData</I>
<DD>
Supplies a pointer to a variable that receives a context structure that is
initialized for the newly-opened device information element.
</DL>
<H5>Return Value</H5>
<P>
The function returns TRUE if it is successful. Otherwise it returns FALSE and
the logged error can be retrieved with a call to <B>GetLastError</B>.
<H5>Comments</H5>
<P>
If this device instance is being added to a set that has an associated class,
the device class must be the same or the call will fail. In this case, a call
to <B>GetLastError</B>&nbsp;returns ERROR_CLASS_MISMATCH.
<P>
If the new device information element is successfully opened but the
caller-supplied <I>DeviceInfoData</I>&nbsp;buffer is invalid, this function returns
FALSE. In this case, a call to <B>GetLastError</B>&nbsp;returns
ERROR_INVALID_USER_BUFFER. However, the device information element is added as
a new member of the set anyway.
<H5>See Also</H5>
<P>
<B><A HREF="102instl_63.htm">SetupDiCreateDeviceInfo</A></B>, <B><A HREF="102instl_66.htm">SetupDiDeleteDeviceInfo</A></B>,
<B><A HREF="102instl_72.htm">SetupDiEnumDeviceInfo</A></B>&nbsp;
<P></FONT>
</BODY>
</HTML>
