<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.6.3  Setting NTSTATUS Values in Error Log Packets</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Setting_NTSTATUS_Values_in_Error_Log_Packets_KG"></A>16.6.3  Setting NTSTATUS Values in Error Log Packets</H3>
<P>
<A NAME="DDK_Figure_16..5_NG"></A>Both the <B>ErrorCode</B>&nbsp;and <B>FinalStatus</B>
members of the error log packet are of type NTSTATUS. Figure 16.5 shows the
layout for NTSTATUS values. 
<P>
<B><IMG SRC="../art/16ntstat.gif" BORDER=0></B>
<P>
<B>Figure 16.5    NTSTATUS layout</B>
<P>
NT drivers must set an NTSTATUS-type IO_ERR_<I>XXX</I>&nbsp; value for <B>ErrorCode</B>
and a STATUS_<I>XXX</I>&nbsp; value for <B>FinalStatus</B>&nbsp;in each error log
packet. 
<DL>
<DT>
The system supplies a set of public IO_ERR_<I>XXX</I>&nbsp; constants for setting
the <B>ErrorCode</B>&nbsp;in an error log packet. For example, NT drivers can use
the following system-defined constants: 
<DD>
<PRE><FONT FACE="Courier" SIZE="2">IO_ERR_RETRY_SUCCEEDED 
IO_ERR_INSUFFICIENT_RESOURCES 
IO_ERR_CONFIGURATION_ERROR 
IO_ERR_INCORRECT_IRQL 
IO_ERR_INVALID_IOBASE 
IO_ERR_DRIVER_ERROR 
IO_ERR_PARITY 
&nbsp; &nbsp; :     : 
IO_ERR_OVERRUN_ERROR 
IO_ERR_TIMEOUT 
IO_ERR_CONTROLLER_ERROR 
IO_ERR_INTERNAL_ERROR 
&nbsp;</FONT></PRE>
<DT>
The system also supplies a set of public STATUS_<I>XXX</I>&nbsp; values that NT
drivers can use to set <B>FinalStatus</B>&nbsp;in error log packets and can return
from their standard driver routines for NTSTATUS. For example, NT drivers can
return the following system-defined constants for NTSTATUS from their standard
driver routines, can set any of the following in the I/O status block of IRPs,
and can set some of the following for <B>FinalStatus</B>&nbsp;in error log packets:
<DD>
<PRE><FONT FACE="Courier" SIZE="2">STATUS_SUCCESS 
STATUS_DEVICE_CONFIGURATION_ERROR 
STATUS_DRIVER_INTERNAL_ERROR 
STATUS_INVALID_DEVICE_STATE 
STATUS_IO_DEVICE_ERROR 
&nbsp; &nbsp; :     : 
STATUS_DEVICE_BUSY 
STATUS_DEVICE_DOES_NOT_EXIST 
STATUS_ADAPTER_HARDWARE_ERROR 
&nbsp;</FONT></PRE>
</DL>
<P>
Public IO_ERR_<I>XXX</I>&nbsp; and STATUS_<I>XXX</I>&nbsp; constants are system
resources, and each such STATUS_<I>XXX</I>&nbsp; is mapped to a corresponding Win32
constant by the system. Because they are built into Windows NT, public IO_ERR_<I>XXX</I>
&nbsp;and STATUS_<I>XXX</I>&nbsp; constants can be added to the system only with the
cooperation of Microsoft Corporation. 
<P></FONT>
</BODY>
</HTML>
