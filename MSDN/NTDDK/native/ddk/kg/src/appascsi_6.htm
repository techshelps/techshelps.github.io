<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.1.3.2  SCSI Class Driver’s ClaimDevice Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_SCSI_Class_Drivers_ClaimDevice_Routine_KG"></A>A.1.3.2  SCSI Class Driver’s ClaimDevice Routine</H4>
<P>
To claim a SCSI device, a class driver either calls a ClaimDevice routine or
implements the same functionality in its DriverEntry routine. A ClaimDevice
routine sets up an SRB for the target device (designated by <B>PathId</B>, <B>TargetId</B>,
and <B>Lun</B>&nbsp;in the SRB) with the <B>Function</B>&nbsp;value
SRB_FUNCTION_CLAIM_DEVICE. 
<P>
The ClaimDevice routine allocates an IRP with <B>IoBuildDeviceIoControlRequest</B>,
setting up the port driver’s I/O stack location with the I/O control code
IOCTL_SCSI_EXECUTE_NONE and a pointer to the SRB at <B>Parameters.Scsi.Srb</B>.
ClaimDevice also must set up an event object so it can wait on the completion
of the IRP. Then, it sends the IRP on to the port driver with <B>IoCallDriver</B>.
<P>
On return from a successful call to the system port driver, the ClaimDevice
routine checks the SRB’s <B>DataBuffer</B>&nbsp;for a nonNULL pointer to the port
driver’s device object for the HBA. 
<P>
The class driver must store such a returned pointer in the device extension of
its own device object that represents the newly claimed device. The class
driver <I>must</I>&nbsp;<I>use this HBA-specific device object pointer in all
subsequent requests that the class driver sends down to the port-miniport
driver pair</I>. 
<P>
A ClaimDevice routine can serve double duty as a routine to be called from a
class driver’s Unload routine by also sending SRBs with the <B>Function</B>
value SRB_FUNCTION_RELEASE_DEVICE. If the class driver can be unloaded, its
Unload or ClaimDevice routine must dereference the pointer to the HBA-specific
device object by calling <B>ObDereferenceObject</B>. 
<P></FONT>
</BODY>
</HTML>
