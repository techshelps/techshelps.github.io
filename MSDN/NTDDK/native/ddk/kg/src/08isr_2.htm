<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>8.1.1  ISR Performance</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_ISR_Performance_KG"></A>8.1.1  ISR Performance</H3>
<P>
Windows NT is quite different from some operating systems with respect to
driver ISRs. NT device drivers actually get better performance if their ISRs
return control as quickly as possible, rather than attempting to retain
control of a CPU and doing as much I/O processing as possible in their ISRs,
particularly in SMP machines. 
<P>
Instead, the ISR should stop its device from interrupting and save any
necessary state information about or context for the operation that caused the
interrupt in resident memory, usually in the device extension. Then, it should
queue the driver’s DpcForIsr routine or a CustomDpc routine to complete the
operation at a lower IRQL, usually at IRQL DISPATCH_LEVEL. 
<P>
The ISR returns a Boolean, indicating whether the driver’s device generated
the interrupt, as shown by the declaration. For drivers of devices that share
an interrupt vector or DIRQL, each ISR should return FALSE as soon as it
determines that its device was not the source of an interrupt. 
<P></FONT>
</BODY>
</HTML>
