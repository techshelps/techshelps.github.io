<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.5.1  Getting a System-assigned Interrupt Vector, DIRQL, and Processor Mask</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Getting_a_System_assigned_Interrupt_Vector_DIRQL_and_Processor_Mask_KG"></A>3.5.1  Getting a System-assigned Interrupt Vector, DIRQL, and Processor Mask</H3>
<P>
When an NT device driver is loaded for initialization, the registry contains
whatever hardware information the system can detect about the processors, I/O
buses, and peripheral devices in the machine. An NT device driver can use the
registry to determine the system-assigned number and, for some devices, the
system-defined interface type of the bus to which its device is attached,
along with the bus-relative vector and/or IRQL for the device itself.
Otherwise, an NT device driver can call one of the <B>HalGetBus</B><I>Xxx</I>
routines to get bus-relative configuration information about its interrupt and
use other support routines to claim hardware resources in the registry. For
more information about how device drivers can get this hardware configuration
information, see Chapter 16.
<P>
<A NAME="DDK_Figure_3.15_KG"></A>The HAL is responsible for remapping bus-relative
device interrupt vectors to system interrupt vectors with system-assigned
DIRQL values, so NT device drivers call a HAL-supplied support routine to get
required parameters for setting up interrupt objects and registering their
ISRs. Figure 3.15 illustrates a call to <B>HalGetInterruptVector</B>.
<P>
<B><IMG SRC="../art/3halgvec.gif" BORDER=0></B>
<P>
<B>Figure 3.15    Getting a System Vector and IRQL</B>
<P>
As shown in Figure 3.15, <B>HalGetInterruptVector</B>&nbsp;maps driver-supplied
values for a device’s bus-relative interrupt vector and IRQL to
DeviceSystemVector and SystemDirql values. See the section on the registry in
Chapter 16 for more information about how device drivers can obtain the
BusInterfaceType, BusNumber, BusRelativeVector, and BusRelativeIrql parameters
to <B>HalGetInterruptVector</B>.
<P>
<B>HalGetInterruptVector</B>&nbsp;also returns a ProcessorMask (<I>Affinity</I>)
that indicates the platform-specific set of processors on which any particular
device can interrupt. NT device drivers must pass this value to the I/O
Manager so it can set up a Kernel-defined interrupt object for each enabled
processor when the driver registers its ISR, as explained in the next section.
<P></FONT>
</BODY>
</HTML>
