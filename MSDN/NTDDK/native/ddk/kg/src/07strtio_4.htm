<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.2.2  StartIo Routine Functionality</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_StartIo_Routine_Functionality_KG"></A>7.2.2  StartIo Routine Functionality</H3>
<P>
IRPs coming in to an NT device driver’s Dispatch routines do not necessarily
require the driver to do I/O processing on its device. Usually, each NT
driver’s Dispatch routine(s) completes a subset of required requests, as well
as those IRPs that have parameter errors in the driver’s I/O stack location,
as described in Chapter 6. 
<P>
However, every NT device driver with a StartIo routine is likely to call <B>IoStartPacket</B>
from its Dispatch routines for IRP_MJ_READ and/or IRP_MJ_WRITE requests, and
usually for a subset of the I/O control codes it supports for
IRP_MJ_DEVICE_CONTROL requests.
<P>
A StartIo routine is the second stage in satisfying a device I/O request. When
a Dispatch routine calls <B>IoStartPacket</B>&nbsp;with such an IRP, the I/O
Manager either passes the IRP directly to the StartIo routine for further
processing or inserts the packet into the device queue that was associated
with the target device object when it was created.
<P>
As a general rule, a device driver that uses buffered I/O has a simpler
StartIo routine than one that uses direct I/O. NT device drivers that use
buffered I/O transfer small amounts of data for each transfer request, while
those that use direct I/O (whether DMA or PIO) transfer large amounts of data
to or from locked-down buffers that can span physical page boundaries in
system memory. 
<P>
Higher-level NT drivers layered above NT device drivers usually set up their
device objects to match those of their respective device drivers. However, a
highest-level NT driver, particularly NT file system drivers, can set up
device objects for neither direct nor buffered I/O. For more information about
setting up device objects for buffered and direct I/O, see Chapter 3.
<P></FONT>
</BODY>
</HTML>
