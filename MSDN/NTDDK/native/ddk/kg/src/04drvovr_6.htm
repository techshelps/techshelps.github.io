<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.4.2  Choosing Names for NT Driver Routines</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Choosing_Names_for_NT_Driver_Routines_KG"></A>4.4.2  Choosing Names for NT Driver Routines</H3>
<P>
Except for the <B>DriverEntry</B>&nbsp;routine, the names used for the standard
driver routines in this documentation were chosen to describe the
functionality of each type of standard routine, and, in some cases, to provide
hints about which types of NT objects a driver with particular standard
routines must use. You can name most standard driver routines anything you
like in your driver. 
<P>
However, any NT driver is easier to develop, debug, and test when the driver
writer uses a naming scheme that distinguishes that driver’s routines from
those of other drivers. An NT driver is also easier to debug and test if the
driver writer uses names that distinguish between the driver’s standard
routines and its internal routines. 
<P>
Consequently, most system-supplied NT drivers have routine names that follow
these guidelines: 
<UL>
<LI>
Prepend a driver-specific prefix to each routine, preferably one prefix for
all standard routines and another for all internal routines. 
<P>
<LI>
Create a name for each routine that indicates its functionality and, when
debugging and testing, where in the driver a given IRP is being processed. 
</UL>
<P>
For example, the system keyboard class driver prepends KeyboardClass to its
standard driver routines, and Kbd to its internal routines. Other system
drivers use a single identifying prefix on every routine, but prepend the
lower-case letter “p” (for private) to this prefix for their internal
routines. 
<P>
Each routine in the system keyboard class driver also has a name that
indicates the routine’s functionality. This driver’s Dispatch routines are
named according to the IRP_MJ_<I>XXX</I>&nbsp; that each routine handles:
KeyboardClassOpenClose, KeyboardClassRead, KeyboardClassDeviceControl, and so
forth. Other standard routines in this driver have names such as
KeyboardClassStartIo and KeyboardClassCancel to aid the driver’s developer in
tracing the path of IRPs through the driver. 
<P>
The keyboard class driver’s naming conventions also aid system test engineers
in evaluating the performance of this driver, in finding out whether any
particular driver routine is a performance bottleneck, and in finding the
exact location of any bug if problems occur in this driver during regression
testing. 
<P></FONT>
</BODY>
</HTML>
