<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.1.1  IoTimer Routine Requirements</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_IoTimer_Routine_Requirements_KG"></A>14.1.1  IoTimer Routine Requirements</H3>
<P>
Every IoTimer routine is associated with a driver-created device object.
Consequently, an NT driver can have a single IoTimer routine for all its
device objects, a separate IoTimer routine for each of its device objects, or
some number of IoTimer routines associated with nonintersecting subsets of the
driver’s device objects, at the discretion of the driver designer.
<P>
An IoTimer routine is called approximately once per second after the driver
calls<B>&nbsp;IoStartTimer</B>&nbsp;with the <I>DeviceObject</I>&nbsp;pointer to an
associated device object unless the driver disables the timer for that device
object with a call to <B>IoStopTimer </B>using the same <I>DeviceObject</I>
pointer. The driver can re-enable the timer with another call to <B>IoStartTimer</B>,
so that its IoTimer routine again will be called automatically at one-second
intervals for a given device object.
<P>
Frequently, an NT device driver calls <B>IoStartTimer</B>&nbsp;with the <B>DeviceObject</B>
pointer in its I/O stack location of the current IRP.
<P>
Do not call <B>IoStopTimer</B>&nbsp;from within a driver’s IoTimer routine.
<P></FONT>
</BODY>
</HTML>
