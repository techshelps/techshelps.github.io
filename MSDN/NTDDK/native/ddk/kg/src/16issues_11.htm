<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.4.1.1  NT Driver Access to User-Space Memory</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_NT_Driver_Access_to_User_Space_Memory_KG"></A>16.4.1.1  NT Driver Access to User-Space Memory</H4>
<P>
NT drivers cannot allocate user-space virtual memory because they run in
kernel mode. An NT driver also cannot access memory through user-mode virtual
addresses unless it is running in the context of the user-mode thread that
caused the driver’s current I/O operation and it is using that thread’s
virtual addresses. 
<P>
Only highest-level NT drivers, such as FSDs, can be sure their Dispatch
routines will be called in the context of such a user-mode thread. A
highest-level driver can call <B>MmProbeAndLockPages</B>&nbsp;to lock down a user
buffer before setting up an IRP for lower drivers. 
<P>
NT device and intermediate drivers that set up their device objects for
buffered or direct I/O, as described in the section on device objects in
Chapter 3, can rely on the I/O Manager or a highest-level driver to pass valid
access to locked-down user buffers or to system-space buffers in IRPs. 
<P></FONT>
</BODY>
</HTML>
