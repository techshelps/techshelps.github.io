<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.6  DPC Objects</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DPC_Objects_KG"></A>3.6  DPC Objects</H2>
<P>
Like the interrupt object type described in the preceding section, the DPC
object type is defined by the NT Kernel. A DPC object represents a <I>deferred
procedure call</I>: a caller-supplied routine that is run later at a lower
hardware priority (IRQL).
<P>
Any NT device driver that registers an ISR must use one or more DPC objects to
register its DpcForIsr and/or CustomDpc routine(s). A driver-supplied
DpcForIsr or CustomDpc routine is responsible for completing interrupt-driven
I/O operations so the ISR can return control as quickly as possible.
<P>
Some system device drivers have only a single DpcForIsr routine, and such a
driver uses a single DPC object. At the driver writer’s discretion, an NT
device driver can have one or more CustomDpc routines, each using a DPC
object, in addition to or as a substitute for a DpcForIsr routine.
<P>
The NT I/O Manager provides support for registering a DpcForIsr and for
queueing this routine from the ISR, as explained in the next section. The
Kernel provides support for registering a CustomDpc and for queueing this
routine from the ISR, as explained in <A HREF="03ntobj_28.htm">Section
3.6.2</A>.
<P></FONT>
</BODY>
</HTML>
