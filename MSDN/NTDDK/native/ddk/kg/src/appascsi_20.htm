<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.2.1  Supporting I/O Requests</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Supporting_I_O_Requests_KG"></A>A.2.1  Supporting I/O Requests</H3>
<P>
Like any SCSI class driver, an SFD is a standard higher-level driver with the
following requirements common to all higher-level kernel-mode drivers: 
<UL>
<LI>
It must supply a set of Dispatch routines to which the I/O Manager and/or
still higher-level drivers can send IRPs for appropriate I/O operations. An
SFD must support the same set of IRP_MJ_<I>XXX </I>as the SCSI class driver
for its type of device. 
<P>
<LI>
For IRP_MJ_DEVICE_CONTROL requests, it must support as many of the
class-driver-supported I/O control codes as its physical device can handle,
and, if possible, emulate support for any remaining I/O control codes in the
driver. 
<P>
<LI>
It must have a DriverEntry routine and can have any other standard
higher-level driver routine, such as Unload or IoCompletion routines, as
necessary. 
</UL>
<P>
If its device has special features, an SFD can support a set of driver-defined
I/O control codes in addition to the system-required set of
device-type-specific I/O control codes for IRP_MJ_DEVICE_CONTROL requests. 
<P>
For more information about required device-type-specific requests, including
the IRP_MJ_DEVICE_CONTROL request, and about defining driver-specific I/O
control codes, see the <I>Kernel-Mode Driver Reference</I>. 
<P></FONT>
</BODY>
</HTML>
