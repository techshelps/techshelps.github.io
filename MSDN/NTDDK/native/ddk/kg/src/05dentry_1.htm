<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.1  DriverEntry Routine Requirements</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_DriverEntry_Routine_Requirements_KG"></A>5.1  DriverEntry Routine Requirements</H2>
<P>
Each NT driver must have a standard initialization routine in order to be
loaded. The NT I/O Manager defines the prototype, as shown previously, for
driver initialization routines.
<H5>Naming an NT Driver’s Initialization Routine</H5>
<P>
Each NT driver should have an initialization routine named <B>DriverEntry</B>.
Otherwise, the driver writer must define the name of an NT driver’s
initialization routine for the linker so that the driver’s transfer address is
linked into the OS loader.
<P>
Explicitly naming an NT driver’s initialization routine <B>DriverEntry</B>
creates this linkage automatically.
<H5>Linking an NT  Driver to Libraries</H5>
<P>
<I>Never</I>&nbsp;link an NT driver with the C runtime library, thereby bloating
the driver’s load image with a set of functions specific to the Win32&reg;
programming environment. NT drivers <I>cannot</I>&nbsp;call user-mode C runtime
routines from kernel mode.
<P>
NT drivers use the system-supplied support routines declared in <I>ntddk.h</I>,
which includes the NT <B>Rtl</B><I>Xxx</I>&nbsp;(for <U>R</U>un<U>t</U>ime <U>l</U>ibrary)
functions and <I>ntdef.h</I>&nbsp;with the set of kernel-mode C runtime routines
that NT drivers can call.
<P>
The system-supplied video and SCSI port drivers are implemented as
dynamic-link libraries. Kernel-mode SCSI and video miniport drivers link
themselves to the NT video or SCSI port driver and call the routines exported
by the appropriate port driver. For more information about SCSI and video
miniport drivers, see <A HREF="appascsi.htm">Appendix A</A>&nbsp;and the <I>Graphics
Driver Design Guide</I>, respectively.
<H5>Discardable and Pageable NT Driver Code</H5>
<P>
The DriverEntry routine and any other driver routines that run only during
initialization should be discarded after initialization to conserve
system-space memory.
<P>
The following driver code must be resident while an NT driver is processing
I/O requests:
<UL>
<LI>
Any code that is run at IRQL &gt;= DISPATCH_LEVEL
<P>
For a summary of the default IRQLs at which standard NT driver routines run,
see Chapter 16.
<P>
<LI>
Any code that might be in the system page-fault path, which includes any
intermediate or device driver code that handles I/O requests for an underlying
mass-storage device
</UL>
<P>
Otherwise, NT driver code can be made pageable to conserve system memory. An
NT driver of a device that is not used constantly while the system is running
can set up a pageable code section that is locked in system memory only when
that driver is called to process I/O requests, as can any NT driver layered
over such a device driver. However, a device driver’s pageable code section
cannot contain certain standard routines.
<P>
For more information about discardable and pageable NT driver code, see the <I>Programmer’s
Guide</I>.
<P></FONT>
</BODY>
</HTML>
