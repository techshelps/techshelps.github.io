<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.8.2  Getting Device Hardware Configuration Information</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Getting_Device_Hardware_Configuration_Information_KG"></A>16.8.2  Getting Device Hardware Configuration Information</H3>
<P>
When an NT device driver is loaded, the OS loader has already set up the
registry with any machine-specific information the ARC or NtDetect component
could find. Depending on the I/O buses in the machine, this information can
include the bus-relative interrupt vector for a particular peripheral
connected on a particular bus, the bus-relative physical memory range or the
bus-relative range of I/O ports that a particular device can use, or the
bus-relative DMA controller channel/port to which a particular device is
connected.
<P>
Each NT device driver must have this kind of hardware configuration
information to initialize successfully. For example, a device driver must pass
the bus-relative interrupt vector for its device to <B>HalGetInterruptVector</B>,
as described in the section on interrupt objects in Chapter 3, to get a mapped
system vector, system-assigned DIRQL, and processor affinity mask, required as
parameters to <B>IoConnectInterrupt</B>. Otherwise, the driver cannot be
loaded because it cannot register its ISR(s) to handle interrupts from its
device(s).
<P>
If a driver needs hardware configuration information that the ARC or NtDetect
component cannot supply, it can get some of the required information from its
device or by calling <B>HalGetBusData</B>, particularly for an EISA or MCA
device, or <B>HalGetBusDataByOffset</B>, particularly for a PCI device. Calls
to these support routines can return more hardware configuration data than is
available in the registry <B>..\Hardware\Description</B>&nbsp;tree since they are
called later in the system boot process. For more information about getting
hardware configuration information with these routines, see <A HREF="16issues_35.htm">Section
16.8.2.2</A>. For specifics, see the <I>Kernel-Mode Driver Reference</I>.
<P>
Otherwise, the driver must must use the <I>RegistryPath</I>&nbsp;pointer to get its
<I>DriverName</I><B>\Parameters</B>, as mentioned in <A HREF="16issues_30.htm">Section
16.8.1.1</A>. An NT driver can always supplement the system-, bus-, or
device-supplied hardware information with “user-supplied” <B>Parameters</B>
under its registry key <B>\Registry\Machine\System\CurrentControlSet\Services\</B><I>DriverName</I>
. Frequently, these <B>Parameters</B>&nbsp;are set up in the registry when the user
installs a new driver. For more information about using <B>Parameters</B>, see
also <A HREF="16issues_40.htm">Section 16.8.5</A>. For
more information about installing Windows NT drivers, see the <I>Programmer’s
Guide</I>.
<P>
Every NT device driver must claim any hardware resources it needs for its
device(s) in the <B>\Registry\Machine\Hardware\ResourceMap</B>&nbsp;tree, as
described in <A HREF="16issues_36.htm">Section 16.8.3</A>. Any
NT driver that cannot claim sufficient hardware resources for at least one
device should release any system resources it is using, such a driver-created
device object(s). Such a driver must not be loaded.
<P></FONT>
</BODY>
</HTML>
