<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>12.1.1  Cancel Routines in NT Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Cancel_Routines_in_NT_Drivers_KG"></A>12.1.1  Cancel Routines in NT Drivers</H3>
<P>
Any NT driver in which IRPs can be held pending for an indefinite interval
must have one or more Cancel routines.
<P>
For example, suppose a user-mode thread makes an I/O request, which is queued
by a highest-level device driver’s Dispatch routine, and the requesting thread
is terminated while the IRP is queued. IRPs queued on behalf of a terminated
thread should be cancelled. Consequently, such a driver must set a
driver-supplied Cancel routine in each IRP that it queues.
<P>
The number of Cancel routines any NT driver has depends on the driver’s
design. In general, an NT driver should have a Cancel routine for each stage
in its I/O processing at which an IRP might be held pending for an indefinite
interval, which is also called <I>held in a</I>&nbsp;<I>cancelable state</I>.
<H4><IMG SRC="../../../wedge.gif" BORDER=0>&nbsp; &nbsp; NT driver writers should consider the following design guidelines: </H4>
<UL>
<LI>
The highest-level driver in a chain of layered NT drivers <I>must</I>&nbsp;have at
least one Cancel routine if it queues IRPs or otherwise holds IRPs in a
cancelable state. It can have more than one Cancel routine at the driver
writer’s discretion.
<P>
<LI>
Lower-level NT drivers in which IRPs can be held in a cancelable state for
relatively long intervals also should have one or more Cancel routines.
<P>
<LI>
If a driver manages its own internal queues of IRPs, it should have a separate
Cancel routine for each of its queues.
</UL>
<P>
Certain highest-level NT drivers for interactive devices, such as keyboard,
mouse, sound, parallel class and serial drivers, must have Cancel routines.
Certain lower-level drivers, such as a parallel port driver that holds IRPs
queued for some number of higher-level class drivers for relatively long
intervals, also should have Cancel routines.
<P>
NT intermediate drivers that are layered over mass-storage device drivers and
mass-storage device drivers are unlikely to have Cancel routines. In other
words, it is the responsibility of an NT file system driver to handle the
cancelation of file I/O requests, while the IRPs input to lower-level
mass-storage drivers are usually processed to completion too quickly to be
cancelable.
<P></FONT>
</BODY>
</HTML>
