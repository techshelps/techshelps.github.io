<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>7.2.2.3  Handling Device Control Requests in StartIo</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Handling_Device_Control_Requests_in_StartIo_KG"></A>7.2.2.3  Handling Device Control Requests in StartIo</H4>
<P>
In general, only a subset of device I/O control requests are passed on from
the DispatchDevice(Internal)Control routine for further processing by a device
driver’s StartIo routine. That is, any device driver’s StartIo routine must
handle only valid device control requests that require device state changes or
return volatile information about the current state of the device. 
<P>
Each new NT device driver must support the same set of public I/O control
codes as all other NT drivers for the same kind of device. The system defines
public, device-type-specific I/O control codes for IRP_MJ_DEVICE_CONTROL
requests as buffered requests. 
<P>
Consequently, NT device drivers make data transfers to or from a system-space
buffer that each driver finds in the IRP at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>
for device control requests. Even NT drivers that set up their device objects
for direct I/O use buffered I/O to satisfy device control requests with public
I/O control codes. 
<P>
The definition of each I/O control code determines whether data transferred
for that request is buffered. Any privately defined I/O control codes for
driver-specific IRP_MJ_INTERNAL_DEVICE_CONTROL requests between paired NT
drivers can define a code with method buffered, method direct, or method
neither. As a general rule, any privately defined I/O control code should be
defined with method neither if a closely coupled higher-level NT driver must
allocate a buffer for that request. 
<P>
For more information about the I/O control codes that a new driver for any
common type of PC device must support and about defining private I/O control
codes, see the <I>Kernel-mode Driver Reference</I>.
<P></FONT>
</BODY>
</HTML>
