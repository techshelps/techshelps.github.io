<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.1.1  Video Adapter Configurations and Driver Layers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Video_Adapter_Configurations_and_Driver_Layers_KG"></A>2.4.1.1  Video Adapter Configurations and Driver Layers</H4>
<P>
<A NAME="DDK_Figure_2..5_KG"></A>Figure 2.5 illustrates a representative hardware
configuration for the video device shown previously in <A HREF="02irps_1.htm#DDK_Figure_2..1_KG">Figure
2.1</A>.
<P>
<B><IMG SRC="../art/2vidhw.gif" BORDER=0></B>
<P>
<B>Figure 2.5    Video Hardware Configuration</B>
<P>
<A NAME="DDK_Figure_2..6_KG"></A>Figure 2.6 illustrates the corresponding layered
drivers for I/O operations on the video device shown in <A HREF="#DDK_Figure_2..5_KG">Figure
2.5</A>.
<P>
<B><IMG SRC="../art/2vidlayr.gif" BORDER=0></B>
<P>
<B>Figure 2.6    Video Driver Layers</B>
<P>
Applications and other subsystems request video operations by calling the
system-supplied Win32 GDI routines in the Win32 subsystem. The Win32 GDI
interface is device-independent, insulating applications from the differences
between various video devices.
<P>
The Win32 subsystem routes graphics requests to the system-supplied graphics
engine (GDI) through the NT system services. GDI processes requests in
conjunction with hardware-specific display drivers, communicating through the
DDI interface. The display driver has the primary responsibility for
determining how applications write to the display screen. The display driver
must have a companion video miniport driver. The display driver translates
device-independent graphics commands from GDI into commands the video hardware
needs to draw graphics on the screen. Graphics hardware vendors supply a
display driver and a video miniport driver to support their video adapter.
<P>
For more information about requirements for NT display drivers and video
miniport drivers, see the <I>Graphics Driver Design Guide</I>.
<P>
The system-supplied NT video port driver, implemented as a dynamic-link
library, exports a set of support routines for use by one or more
adapter-specific video miniport drivers. The port driver’s <B>VideoPort</B><I>Xxx</I>
routines manage all OS-dependent operations on behalf of miniport drivers.
Video miniport drivers that call only the <B>VideoPort</B><I>Xxx</I>&nbsp;routines
can be portable to other Microsoft operating systems that provide a video port
driver.
<P>
For more information about the <B>VideoPort</B><I>Xxx</I>, see the <I>Graphics
Driver Reference</I>.
<P>
Each NT video miniport driver is responsible for supporting certain device I/O
control operations that the corresponding display driver need not handle. The
I/O Manager sends IRPs to the NT video port driver for these device I/O
control requests. The NT video port driver handles access checking, memory
mapping, and synchronization when it passes I/O requests on to each miniport
driver as system-defined video request packets (VRPs).
<P>
A Windows NT video adapter is an <I>exclusive</I>&nbsp;device: its miniport driver
is dedicated to supporting a single kernel-mode display driver. For
performance reasons, the NT video port driver gives the display driver a
privileged handle with special access rights for the video device and calls
the adapter-specific miniport driver to map device memory so its corresponding
display driver can access the video frame buffer directly and, in some Windows
NT platforms, the adapter registers as well. Other display drivers must “go
through” the owning display driver.
<P></FONT>
</BODY>
</HTML>
