<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.6.2  Filling in an Error Log Packet</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Filling_in_an_Error_Log_Packet_KG"></A>16.6.2  Filling in an Error Log Packet</H3>
<DL>
<DT>
The error log packet is defined as follows: 
<DD>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct _IO_ERROR_LOG_PACKET { 
&nbsp; &nbsp; UCHAR MajorFunctionCode; 
&nbsp; &nbsp; UCHAR RetryCount; 
&nbsp; &nbsp; USHORT DumpDataSize; 
&nbsp; &nbsp; USHORT NumberOfStrings; 
&nbsp; &nbsp; USHORT StringOffset; 
&nbsp; &nbsp; USHORT EventCategory; 
&nbsp; &nbsp; NTSTATUS ErrorCode; 
&nbsp; &nbsp; ULONG UniqueErrorValue; 
&nbsp; &nbsp; NTSTATUS FinalStatus; 
&nbsp; &nbsp; ULONG SequenceNumber; 
&nbsp; &nbsp; ULONG IoControlCode; 
&nbsp; &nbsp; LARGE_INTEGER DeviceOffset; 
&nbsp; &nbsp; ULONG DumpData[1]; 
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; 
&nbsp;</FONT></PRE>
</DL>
<P>
The driver should fill in an error log packet with the following data: 
<DL>
<DT>
<B>MajorFunctionCode</B><I>&nbsp;</I>
<DD>
Indicates the IRP_MJ_<I>XXX</I>&nbsp; from the driver’s I/O stack location in the
current IRP. 
<BR>
<DT>
<B>RetryCount</B><I>&nbsp;</I>
<DD>
Indicates how many times the driver has retried the operation and encountered
this error. 
<P>
<B>RetryCount</B>&nbsp;is a zero-based value. That is, the driver should set it to
zero when an error is first encountered for the current IRP. 
<BR>
<DT>
<B>DumpDataSize</B><I>&nbsp;</I>
<DD>
Indicates the size in bytes required for any <B>DumpData </B>the driver will
set in the packet. 
<P>
The specified value should be an integral multiple of <B>sizeof</B>(ULONG). 
<BR>
<DT>
<B>NumberOfStrings</B><I>&nbsp;</I>
<DD>
Indicates how many insertion strings the driver will supply with this packet.
NT drivers set this value to zero for errors that need no insertion strings. 
<P>
The NT error-logging thread can use these driver-supplied, zero-terminated
Unicode strings to fill in messages written into the Win32 event log, where it
can be examined using the Win32 event viewer. The I/O Manager assumes that the
initial insertion string, if any, is either the name of the driver or of the
device on which the error occurred. 
<P>
Insertion strings provided by a driver should be language independent. 
Drivers that log errors and use insertion strings should use strings read from
the registry or use names which are language independent or are the same in
any language, for example, file names. 
<P>
In most cases, NT device and intermediate drivers can simply log I/O errors
without having to supply insertion strings for a higher-level event-logging
component and/or without having to set up a driver-specific event-logging
component. Of the system-supplied NT drivers, only network device drivers
currently supply insertion strings in error log packets. 
<BR>
<DT>
<B>StringOffset</B><I>&nbsp;</I>
<DD>
Indicates the offset, immediately following the <B>DumpData</B>, at which any
driver-supplied insertion string data begins. 
<P>
If a driver supplies this data, each string must be a zero-terminated Unicode
string. 
<BR>
<DT>
<B>EventCategory</B><I>&nbsp;</I>
<DD>
For drivers that install themselves in the registry as event-logging
components, this is a driver-defined value that was specified in the driver’s
message file for categories. 
<P>
Most NT device and intermediate drivers set this value to zero. For more
information about setting up an event-logging component, see <A HREF="16issues_39.htm">Section
16.8.4</A>. 
<BR>
<DT>
<B>ErrorCode</B><I>&nbsp;</I>
<DD>
Indicates the type of error. 
<P>
This is a system-defined or driver-defined constant, as described in <A HREF="16issues_25.htm">Section
16.6.5</A>. 
<BR>
<DT>
<B>UniqueErrorValue</B><I>&nbsp;</I>
<DD>
Indicates where the error was detected in the driver. 
<BR>
<DT>
<B>FinalStatus</B><I>&nbsp;</I>
<DD>
Indicates the value set in the I/O status block of the IRP when it was
completed or the STATUS_<I>XXX</I>&nbsp; returned by a support routine the driver
called. 
<BR>
<DT>
<B>SequenceNumber</B><I>&nbsp;</I>
<DD>
Indicates a driver-assigned sequence number for the current IRP, which should
be constant for the life of a given request. 
<BR>
<DT>
<B>IoControlCode</B><I>&nbsp;</I>
<DD>
Indicates the I/O control code from the driver’s I/O stack location in the
current IRP if the <B>MajorFunctionCode</B>&nbsp;is IRP_MJ_DEVICE_CONTROL or
IRP_MJ_INTERNAL_DEVICE_CONTROL. Otherwise, this value should be zero. 
<P>
For more information about I/O control codes and device I/O control requests,
see the <I>Kernel-Mode</I>&nbsp;<I>Driver Reference</I>.
<BR>
<DT>
<B>DeviceOffset</B><I>&nbsp;</I>
<DD>
Indicates the offset into the device where the error occurred. 
<BR>
<DT>
<B>DumpData </B>
<DD>
Can be used to store driver-specific data, such as register values or whatever
else the driver writer decides would be useful for identifying the cause of
the error. 
<P>
Any driver-supplied insertion strings must be supplied immediately following
the dump data, starting at <B>StringOffset</B>. 
</DL>
<P></FONT>
</BODY>
</HTML>
