<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4.5  SCSI Miniport Driver’s HwScsiStartIo Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_SCSI_Miniport_Drivers_HwScsiStartIo_Routine_KG"></A>A.4.5  SCSI Miniport Driver’s HwScsiStartIo Routine</H3>
<P>
As its name suggests, a HwScsiStartIo routine is the entry point for incoming
requests to peripheral devices on the HBA-driven bus(es). HwScsiStartIo is
called with pointers to a SCSI request block (SRB) and to the miniport’s
device extension for per-HBA state. 
<P>
If the miniport’s <B>DriverEntry</B>&nbsp;routine also requested that memory be
allocated for logical unit extensions (see <A HREF="appascsi_33.htm">Section
A.4.2.1</A>), the HwScsiStartIo routine calls <B>ScsiPortGetLogicalUnit</B>&nbsp;with
the input device extension pointer and the <B>PathId</B>, <B>TargetId</B>, and
<B>Lun</B>&nbsp;values from the input SRB. 
<P>
If the <B>DriverEntry</B>&nbsp;routine requested that memory be allocated for SRB
extensions, the <B>SrbExtension</B>&nbsp;member in each SRB contains a pointer to
the miniport’s per-request storage area. Note that a miniport driver must
request that memory be allocated for <B>SrbExtension</B>s if it maintains
per-request state information. It cannot use an SRB for this purpose. 
<P></FONT>
</BODY>
</HTML>
