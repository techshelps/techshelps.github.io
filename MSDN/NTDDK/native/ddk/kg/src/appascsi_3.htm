<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.1.2  Supporting SCSI-Specific Functionality</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Supporting_SCSI_Specific_Functionality_KGB12"></A>A.1.2  Supporting SCSI-Specific Functionality</H3>
<P>
To the system SCSI port driver, a SCSI class driver is a higher-level driver
with built-in, SCSI-specific functionality. In general, every SCSI class
driver is responsible for the following: 
<UL>
<LI>
Connecting itself to the port driver so that requests can be routed to the
correct target(s) 
<P>
<LI>
Creating device objects to represent its devices on each SCSI bus in the
machine
<P>
<LI>
Initializing the appropriate controllers (TIDs) and devices (LUs) on the SCSI
bus(es) 
<P>
<LI>
Interpreting system I/O requests (IRPs) 
<P>
<LI>
Mapping IRPs to SCSI class/port interface requests (SRBs with SCSI-II CDBs) 
<P>
<LI>
Establishing time-out values for requests 
<P>
<LI>
Limiting the size of data transfers to suit the limits of the underlying HBA 
<P>
<LI>
Handling error conditions that are not already handled by the port driver or
the HBA miniport driver, such as check-condition status or bus resets 
</UL>
<P>
The following sections describe how class drivers provide this SCSI-specific
functionality in the context of each standard routine that class drivers
commonly have. 
<P></FONT>
</BODY>
</HTML>
