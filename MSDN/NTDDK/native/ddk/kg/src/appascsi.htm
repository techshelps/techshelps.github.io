<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Appendix A  SCSI Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_SCSI_Drivers_KG"></A>Appendix A  SCSI Drivers</H1>
<DL>
<DT>
This appendix contains the following information:
<DD>
<A HREF="appascsi_1.htm">A.1  Designing a SCSI Class
Driver</A>
<P>
<A HREF="appascsi_2.htm">A.1.1  Supporting I/O Requests</A>
<P>
<A HREF="appascsi_21.htm">A.1.2  Supporting
SCSI-Specific Functionality</A>
<P>
<A HREF="appascsi_4.htm">A.1.3  SCSI Class
Driver’s DriverEntry Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_5.htm">A.1.3.1  SCSI
Class Driver’s GetInquiryData Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_6.htm">A.1.3.2  SCSI
Class Driver’s ClaimDevice Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_7.htm">A.1.3.3  SCSI
Class Driver’s GetCapabilities Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_8.htm">A.1.3.4  Setting up Device
Extensions</A>
<P>
<A HREF="appascsi_9.htm">A.1.4  SCSI Class
Driver’s Dispatch Routines</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_10.htm">A.1.4.1  Handling
Requests to SCSI Peripherals</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_11.htm">A.1.4.2  Handling
SCSI Pass-Through Requests</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_12.htm">A.1.4.3  Queueing SCSI Requests</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_13.htm">A.1.4.4  SCSI Class
Driver’s BuildSrb Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_14.htm">A.1.4.5 
SCSI Class Driver’s SplitTransferRequest Routine</A>
<P>
<A HREF="appascsi_15.htm">A.1.5  SCSI Class
Driver’s IoCompletion Routines</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_16.htm">A.1.5.1  SCSI
Class Driver’s ReleaseQueue Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_17.htm">A.1.5.2 
SCSI Class Driver’s InterpretRequestSense Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_18.htm">A.1.5.3  SCSI
Class Driver’s RetryRequest Routine</A>
<DL>
<DT>
<A HREF="appascsi_19.htm">A.2  Designing a SCSI Filter
Driver</A>
<DD>
<A HREF="appascsi_20.htm">A.2.1  Supporting I/O Requests</A>
<P>
<A HREF="appascsi_21.htm">A.2.2  Supporting
SCSI-Specific Functionality</A>
<P>
<A HREF="appascsi_22.htm">A.2.3  SCSI Filter
Driver’s DriverEntry Routine</A>
<P>
<A HREF="appascsi_23.htm">A.2.4  SCSI Filter
Driver’s Dispatch Routines</A>
<P>
<A HREF="appascsi_24.htm">A.2.5  SCSI Filter
Driver’s IoCompletion Routines</A>
<BR>
<DT>
<A HREF="appascsi_25.htm">A.3  Designing a SCSI
Tape Miniclass Driver</A>
<DD>
<A HREF="appascsi_26.htm">A.3.1  Using the Tape Class
Driver</A>
<P>
<A HREF="appascsi_27.htm">A.3.2 
Supplying Required and Optional Miniclass Routines</A>
<P>
<A HREF="appascsi_28.htm">A.3.3 
Storing Miniclass Context in Optional Extensions</A>
<P>
<A HREF="appascsi_29.htm">A.3.4  Processing
Tape Device Control Requests</A>
<BR>
<DT>
<A HREF="appascsi_30.htm">A.4  Designing a SCSI
Miniport Driver</A>
<DD>
<A HREF="appascsi_31.htm">A.4.1  Required
and Optional SCSI Miniport Routines</A>
<P>
<A HREF="appascsi_32.htm">A.4.2  SCSI
Miniport Driver’s DriverEntry Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_33.htm">A.4.2.1  Calling <B>ScsiPortInitialize</A></B>
<P>
&nbsp; &nbsp; <A HREF="appascsi_34.htm">A.4.2.2  Return from DriverEntry</A>
<P>
<A HREF="appascsi_35.htm">A.4.3  SCSI
Miniport Driver’s HwScsiFindAdapter Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_36.htm">A.4.3.1 
Calling <B>ScsiPort</B><I>Xxx</I>&nbsp;from HwScsiFindAdapter</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_37.htm">A.4.3.2
&nbsp;Port-Driver-Supplied ConfigInfo for HwScsiFindAdapter</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_38.htm">A.4.3.3 
Setting up ConfigInfo in HwScsiFindAdapter</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_39.htm">A.4.3.4
&nbsp;Setting Again and Returning from HwScsiFindAdapter</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_40.htm">A.4.3.5
&nbsp;Return from HwScsiFindAdapter to <B>ScsiPortInitialize</A></B>
<P>
<A HREF="appascsi_41.htm">A.4.4  SCSI
Miniport Driver’s HwScsiInitialize Routine</A>
<P>
<A HREF="appascsi_42.htm">A.4.5  SCSI
Miniport Driver’s HwScsiStartIo Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_43.htm">A.4.5.1  Modifying SRBs</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_44.htm">A.4.5.2  Handling
SRB_FUNCTION_EXECUTE_SCSI</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_45.htm">A.4.5.3  Handling
SRB_FUNCTION_ABORT_COMMAND</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_46.htm">A.4.5.4  Handling
SRB_FUNCTION_RESET_BUS</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_47.htm">A.4.5.5
Handling SRB_FUNCTION_FLUSH and SRB_FUNCTION_SHUTDOWN</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_48.htm">A.4.5.6  Handling
SRB_FUNCTION_IO_CONTROL</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_49.htm">A.4.5.7 Handling
Unsupported SRB_FUNCTION_<I>XXX</A></I>
<P>
&nbsp; &nbsp; <A HREF="appascsi_50.htm">A.4.5.8  Return from
HwScsiStartIo</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_51.htm">A.4.5.9  Other
SRB_FUNCTION_<I>XXX</I>&nbsp;Requests</A>
<P>
<A HREF="appascsi_52.htm">A.4.6  SCSI
Miniport Driver’s HwScsiDmaStarted Routine</A>
<P>
<A HREF="appascsi_53.htm">A.4.7  SCSI
Miniport Driver’s HwScsiResetBus Routine</A>
<P>
<A HREF="appascsi_54.htm">A.4.8  SCSI
Miniport Driver’s HwScsiInterrupt Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_55.htm">A.4.8.1
&nbsp;Deferring Interrupt-Driven I/O from HwScsiInterrupt</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_56.htm">A.4.8.2
&nbsp;SCSI Miniport Driver’s HwScsiEnableInterruptsCallback Routine</A>
<P>
&nbsp; &nbsp; <A HREF="appascsi_57.htm">A.4.8.3
&nbsp;SCSI Miniport Driver’s HwScsiDisableInterruptsCallback Routine</A>
<P>
<A HREF="appascsi_58.htm">A.4.9  SCSI
Miniport Driver’s HwScsiTimer Routine</A>
<P>
<A HREF="appascsi_59.htm">A.4.10  SCSI
Miniport Driver’s HwScsiAdapterState Routine</A>
<P>
<A HREF="appascsi_60.htm">A.4.11  Error
Handling in SCSI Miniport Drivers</A>
</DL>
</DL>
<P>
This appendix contains guidelines for designing the following kinds of Windows
NT&reg; kernel-mode SCSI drivers: 
<UL>
<LI>
A class driver for a new type of peripheral device 
<P>
<LI>
A filter driver for a peripheral device of a type that already has a class
driver 
<P>
<LI>
An OS-independent tape miniclass driver for a vendor-specific tape device 
<P>
<LI>
An OS-independent miniport driver for a vendor-specific HBA 
<P>
<LI>
A miniport driver for a nonSCSI mass-storage adapter 
</UL>
<H5>I/O Request Handling in Layered SCSI Drivers</H5>
<P>
Windows NT class and filter drivers for SCSI peripheral devices act as an
interface between any intermediate or highest-level drivers layered above the
class or filter driver and the system-supplied SCSI port driver. That is, SCSI
class drivers translate the standard IRPs they get into IRPs with
system-defined SCSI request blocks (SRBs) before sending each IRP on to the
system port driver. Each SRB contains a SCSI-II command descriptor block
(CDB), as well as members that identify the target device for the requested
operation. 
<P>
In turn, the system-supplied, SCSI port driver passes SRBs with CDBs on to
OS-independent, HBA-specific miniport drivers. The port driver acts as an
interface between all SCSI class drivers and all HBA-specific miniport
drivers. 
<P>
In addition, the Windows NT SCSI port driver can act as an interface between a
SCSI mass-storage class driver and a miniport that controls a nonSCSI
mass-storage device of the same type. For example, rather than writing a
standard NT driver for a new disk-array controller, a driver writer can save
considerable design, development, and debugging effort by writing a pseudoSCSI
miniport driver that links itself to the system SCSI port driver and uses the
interface it provides. This technique requires such a miniport to translate
incoming SCSI commands into device-specific commands and to support
higher-level NT drivers as if it were a SCSI HBA miniport. On the other hand,
the system-supplied port and class drivers would handle much necessary work on
such a pseudoSCSI miniport’s behalf, including registry accesses during
initialization, all resource and object allocations, synchronization,
presizing requested transfers to suit the capabilities of the miniport’s
device, and retrying requests.
<P>
For more detailed information about SRBs, see the <I>Kernel-Mode Driver
Reference</I>. For device-type-specific information about CDBs, consult the
ANSI X3.131-199X SCSI-II standard. 
<H5>System Header Files</H5>
<P>
The system-supplied SCSI drivers include the header file <I>scsi.h</I>, which
contains SCSI-II-compliant definitions for CDBs and other structures used by
most SCSI-II-compliant drivers. This header file includes <I>srb.h</I>, which
defines the interfaces provided by the system SCSI port driver. 
<P>
System-supplied class and filter drivers also can include the header file <I>class.h</I>
so they can call the ScsiClass<I>Xxx</I>&nbsp;routines provided by <I>class.c</I>.
The Windows NT DDK provides <I>class.h</I>&nbsp;and <I>class.c</I>&nbsp;as sample source
code. However, <I>class.c</I>&nbsp;should not be considered a system-supplied
library for all future SCSI class drivers; both <I>class.h</I>&nbsp;and <I>class.c</I>
are subject to change without notice. 
<P>
OS-independent SCSI miniport drivers, which can be designed to run both with
Microsoft&reg; Windows NT and with future x86-only Microsoft Windows&reg;
systems, include the system-supplied header files <I>miniport.h</I>&nbsp;and <I>scsi.h</I>,
which includes <I>srb.h</I>. 
<P></FONT>
</BODY>
</HTML>
