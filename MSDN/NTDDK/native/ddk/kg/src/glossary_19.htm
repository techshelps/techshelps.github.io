<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>T</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_T_KG"></A>T</H2>
<H3><A NAME="DDK_tape_miniclass_driver_KG"></A>tape miniclass driver</H3>
<P>
A SCSI-device-specific driver linked with the system-supplied SCSI tape class
driver. If a tape miniclass driver calls only routines in the tape class
driver, the miniclass driver can be portable across Microsoft operating
systems that support Win32 applications.
<H3><A NAME="DDK_TB_KG"></A>TB</H3>
<P>
Translation buffer
<P>
See <I>TLB</I>.
<H3><A NAME="DDK_TEB_KG"></A>TEB</H3>
<P>
Thread environment block
<H3><A NAME="DDK_thread_object_KG"></A>thread object</H3>
<P>
A user-mode thread object represents a path of execution within the current
process. Every user-mode thread object is implemented through the use of an
embedded kernel-mode thread object.
<P>
A kernel-mode thread object is an instance of a Kernel-defined dispatcher
object type. The thread that it represents is the basic schedulable entity in
NT.
<P>
A thread object:
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;Is dispatched for execution by the
Kernel
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;Has the following properties at any
given moment:
<P>
&nbsp; &nbsp; Dispatch state
<P>
&nbsp; &nbsp; Priority
<P>
&nbsp; &nbsp; Context
<P>
&nbsp; &nbsp; Execution mode (kernel or user)
<P>
&nbsp; &nbsp; Affinity
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;Is “owned by” a process object but can
attach itself to another process’s address space
<P>
Usually, most NT drivers execute in the context of the currently running
thread, that is, in an arbitrary thread context. While a file system driver
can create an independent process for its own device-dedicated threads, NT
file systems usually avoid setting up a driver-created process and threads in
order to conserve system memory and to avoid the overhead of context switches.
<P>
FSs (and other NT drivers) can set up device-dedicated (system-process)
threads and/or FSs can use system worker threads if they need a
driver-specific thread context in which to execute. NT drivers use kernel-mode
<B>Ps</B>&nbsp;(<U>P</U>rocess <U>S</U>tructure) routines to create processes
and/or device-dedicated threads. FSs call routines supplied by the NT <B>Ex</B>ecutive
Support component to use system worker threads.
<H3><A NAME="DDK_TID_KG"></A>TID</H3>
<P>
Target identifier
<P>
One of up to eight target controllers on a SCSI-II bus through which
peripheral devices are addressable, either as numbered TIDs or as logical
units (LUs) subordinate to a particular TID.
<H3><A NAME="DDK_timer_object_KG"></A>timer object</H3>
<P>
A timer object is an instance of a Kernel-defined dispatcher object type.
User-mode timer objects can be used to synchronize the execution of specific
actions, optionally an APC, with time. Kernel-mode timer objects are used to
synchronize the execution of specific actions, in particular a DPC, with time.
<P>
When set to a specified expiration time:
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;The timer’s state is reset to
Not-Signaled.
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;The timer is placed in a queue that is
ordered according to expiration time.
<P>
When its expiration time arrives a timer is set to the Signaled state. When a <I>notification
timer</I>&nbsp;is Signaled, all waiting threads have their wait satisfied and the
state of the timer remains Signaled until it is explicitly reset. When a <I>synchronization
timer</I>&nbsp;expires, its state is set to Signaled until a single waiting thread
is released and then the timer is reset to the Not-Signaled state.
<P>
A timer can expire just once, or can be set to expire repeatedly at a given
interval (a periodic timer).
<P>
The I/O Manager also supplies timer functions for drivers to use.
<H3><A NAME="DDK_TLB_KG"></A>TLB</H3>
<P>
Translation lookaside buffer
<P>
(Not directly accessible by system software for the i386; otherwise, an
on-chip virtual-to-physical-page address translation cache for high-end x86
and MIPS microprocessors.)
<H3><A NAME="DDK_toaster_device_KG"></A>toaster device</H3>
<P>
slang: A SCSI peripheral device of an unknown class.
<H3><A NAME="DDK_token_object_KG"></A>token object</H3>
<P>
A security object type, representing an authenticated user process. Every
process has an assigned token, which becomes the default token for each of
that process’s threads. However, an individual thread can be assigned a token
that overrides this default.
<H3><A NAME="DDK_trap_handler_KG"></A>trap handler</H3>
<P>
A body of code in the Kernel to which the processor transfers control when an
interrupt or exception occurs. The trap handler determines the type of
condition that caused the interrupt or exception and transfers control to an
ISR or exception handler.
<P></FONT>
</BODY>
</HTML>
