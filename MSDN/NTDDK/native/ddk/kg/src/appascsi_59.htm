<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4.10  SCSI Miniport Driver’s HwScsiAdapterState Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_SCSI_Miniport_Drivers_HwScsiAdapterState_Routine_KG"></A>A.4.10  SCSI Miniport Driver’s HwScsiAdapterState Routine</H3>
<P>
Windows NT miniport drivers should set this entry point to NULL in the
HW_INITIALIZATION_DATA (see <A HREF="appascsi_31.htm">Section
A.4.1</A>) only if either of the following conditions hold: 
<UL>
<LI>
The miniport drives an HBA to be connected on an I/O bus commonly found only
in high-end, RISC-based platforms. That is, an x86-based platform running an
x86-only Microsoft Windows system would not have an I/O bus of a type to
support the HBA. 
<P>
<LI>
The miniport drives an HBA that could be found in an x86-based platform
running an x86-only Windows system, but the HBA has neither a BIOS nor an
x86-only real-mode driver. 
</UL>
<P>
Otherwise, a miniport driver must have a HwScsiAdapterState routine in order
to be portable across Windows NT and x86-only Microsoft Windows systems. 
<P>
A HwScsiAdapterState routine is responsible for saving and restoring the state
of its HBA, as requested by the x86-only system during transitions between x86
real and protected processor mode. 
<P>
For more information about HwScsiAdapterState routines, see also the <I>Kernel-Mode
Driver Reference</I>. 
<P></FONT>
</BODY>
</HTML>
