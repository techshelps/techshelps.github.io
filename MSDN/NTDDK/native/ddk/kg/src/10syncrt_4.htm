<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>10.1.3  SynchCritSection Routine Performance Requirements</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_SynchCritSection_Routine_Performance_Requirements_KG"></A>10.1.3  SynchCritSection Routine Performance Requirements</H3>
<P>
Like an ISR, a SynchCritSection routine must execute as quickly as possible,
doing only what is necessary to set up device registers or update context
data, before returning control to the routine that called <B>KeSynchronizeExecution</B>.
<P>
<B><IMG SRC="../../../wedge.gif" BORDER=0>&nbsp; &nbsp; </B>NT device driver writers
should consider the following a design and implementation guideline<B>&nbsp;</B>
<P>
Because it is run at DIRQL, any SynchCritSection routine <I>must</I>&nbsp;return
control as quickly as possible.
<P>
Because <B>KeSynchronizeExecution</B>&nbsp;holds a device driver’s interrupt spin
lock while its SynchCritSection routine runs, the driver’s ISR cannot get any
work done until the SynchCritSection routine returns control.
<P>
Each NT device driver should be designed to minimize the time it spends
running at DIRQL for each IRP it processes on the device.
<P>
On return from <B>KeSynchronizeExecution</B>, the caller’s IRQL is restored.
<P></FONT>
</BODY>
</HTML>
