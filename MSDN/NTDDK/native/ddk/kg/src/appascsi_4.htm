<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.1.3  SCSI Class Driver’s DriverEntry Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_SCSI_Class_Drivers_DriverEntry_Routine_KG"></A>A.1.3  SCSI Class Driver’s DriverEntry Routine</H3>
<P>
Like any other Windows NT kernel-mode higher-level driver, the DriverEntry
routine of a SCSI class driver must do the following: 
<OL>
<LI>
Define its Dispatch entry points in the input driver object. 
<P>
<LI>
Layer itself over the SCSI port driver by calling <B>IoGetDeviceObjectPointer</B>.
<P>
<LI>
Locate its device(s), if any are present in the machine. 
<P>
<LI>
Create a device object to represent each physical, logical, and/or virtual
device for which it handles IRPs.
</OL>
<P>
The class driver’s initial call to <B>IoGetDeviceObjectPointer</B>&nbsp;returns a
pointer to a generic device object created by the system port driver, rather
than a pointer to a device object that represents a particular HBA. The class
driver uses this generic device object pointer to find its device(s) on each
bus driven by one or more HBAs in the machine. 
<P></FONT>
</BODY>
</HTML>
