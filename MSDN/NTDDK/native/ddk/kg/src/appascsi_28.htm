<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.3  Storing Miniclass Context in Optional Extensions</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Storing_Miniclass_Context_in_Optional_Extensions_KG"></A>A.3.3  Storing Miniclass Context in Optional Extensions</H3>
<P>
A tape miniclass driver can use two optional extensions to store context:
<OL>
<LI>
A driver-specific minitape extension
<P>
When used, this extension typically stores SCSI inquiry data for devices. A
driver that supports several devices can store details about each device,
rather than repeatedly querying the devices.
<P>
A miniclass driver specifies the size of the minitape extension in the
TAPE_INIT_DATA structure in its <B>DriverEntry</B>&nbsp;routine. The tape class
driver allocates the requested storage on behalf of the miniclass driver. The
miniclass driver initializes the optional extension with a
TapeMiniExtensionInit routine.
<P>
<LI>
A command-specific command extension
<P>
When used, this extension stores command-specific context.
<P>
A miniclass driver specifies the size of the command extension in
TAPE_INIT_DATA in its <B>DriverEntry</B>&nbsp;routine. The tape class driver
allocates the requested storage each time it sends a command to the miniclass
driver. The miniclass driver initializes the command extension on the first
call to process a given command; that is, when the <I>CallNumber</I>&nbsp;parameter
to the TapeMiniProcessCommand routine equals zero.
</OL>
<P></FONT>
</BODY>
</HTML>
