<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.5.2  Flushing Cached Data during PIO Operations</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Flushing_Cached_Data_during_PIO_Operations_KG"></A>16.5.2  Flushing Cached Data during PIO Operations</H3>
<P>
In some Windows NT platforms, the instruction and data caches in the processor
exhibit cache coherency anomalies during PIO read operations. 
<H5><IMG SRC="../../../wedge.gif" BORDER=0>&nbsp; &nbsp; To maintain data integrity during their read operations, NT drivers that use PIO must follow this guideline: </H5>
<P>
Call <B>KeFlushIoBuffers</B>&nbsp;at the end of each read operation. 
<P>
For example, a driver making a PIO transfer from its device to system memory
should call <B>KeFlushIoBuffers</B>&nbsp;at the end of each device transfer
operation. As another example, a driver that reads a sequence of device
registers into system memory should call <B>KeFlushIoBuffers</B>&nbsp;at the end of
the sequence. Otherwise, such a driver might attempt to access data that is
still in the processor’s data cache, rather than in system memory, in some
Windows NT platforms. 
<P>
<B>KeFlushIoBuffers</B>&nbsp;does nothing if the processor can be relied on to
maintain cache coherency, so calls to this support routine have almost no
overhead in such a Windows NT platform. 
<P></FONT>
</BODY>
</HTML>
