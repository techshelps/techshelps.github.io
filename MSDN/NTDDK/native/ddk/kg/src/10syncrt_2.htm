<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>10.1.1  Using a SynchCritSection Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Using_a_SynchCritSection_Routine_KG"></A>10.1.1  Using a SynchCritSection Routine</H3>
<P>
As its name suggests, a SynchCritSection routine is a critical section of code
written to access a shared area when accesses to that area must be
synchronized with possible accesses by an ISR.
<P>
For NT device drivers, the StartIo and DpcForIsr or CustomDpc routines
frequently must access some of the same memory or device ports/registers as
the driver’s ISR. Depending on such a driver’s device or its design, Dispatch,
AdapterControl, ControllerControl, or driver-supplied timer routines also
might access driver-maintained state and/or device ports/registers shared with
its ISR.
<P>
If any nonISR routine attempted to access such a shared area directly, the
device could interrupt while that routine was programming the device or
updating state information. In other words, the ISR might change the state or
device registers out from under the Dispatch, StartIo, DpcForIsr, CustomDpc,
AdapterControl, ControllerControl, IoTimer or CustomTimerDpc routine whenever
a device interrupt occurred.
<P></FONT>
</BODY>
</HTML>
