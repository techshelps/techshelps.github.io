<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>16.8.1.2  Load-control Sets for NT Drivers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Load_control_Sets_for_NT_Drivers_KG"></A>16.8.1.2  Load-control Sets for NT Drivers</H4>
<P>
As shown in <A HREF="16issues_29.htm#DDK_Figure_16..6_NG">Figure 16.6</A>,<B>&nbsp;</B><I>RegistryPath</I>
points to a subkey of <B>\Registry\Machine\System\CurrentControlSet\Services\</B><I>DriverName</I>.
<P>
<B>CurrentControlSet</B>&nbsp;is a symbolic link to a particular <B>ControlSet</B><I>nnn</I>
in the registry. Each <B>ControlSet</B><I>nnn</I>&nbsp;is a named key with subkeys
and value entries that specify the load order for a set of NT drivers.
<P>
Every<B>&nbsp;ControlSet</B><I>nnn</I>&nbsp;has the following two subkeys:
<UL>
<LI>
<B>Control</B>, which holds miscellaneous machine-specific value entries, such
as the size of nonpaged pool, the <B>ServiceGroupOrder</B>&nbsp;that specifies the
load order for each group of layered NT drivers, and the <B>GroupOrderList</B>
that controls the load order of drivers within a group. For example, an
excerpt of the <B>Control</B>&nbsp;subkey might be:
<P>
<PRE><FONT FACE="Courier" SIZE="2">Control 
&nbsp; &nbsp; &nbsp; &nbsp; :
&nbsp; &nbsp; GroupOrderList 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :
&nbsp; &nbsp; &nbsp; &nbsp; SCSI CDROM Class:REG_BINARY:02 00 00 00 01 ...
&nbsp; &nbsp; &nbsp; &nbsp; SCSI Class:REG_BINARY:03 00 00 00 01 ...
&nbsp; &nbsp; &nbsp; &nbsp; SCSI miniport:REG_BINARY:24 00 00 00 00 ...
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :
&nbsp; &nbsp; :
&nbsp; &nbsp; ServiceGroupOrder 
&nbsp; &nbsp; &nbsp; &nbsp; List:REG_MULTI_SZ:System Bus Extender
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SCSI miniport 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; port
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Primary disk 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SCSI class 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SCSI CDROM class... 
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; :
&nbsp;</FONT></PRE>
<P>
This <B>ServiceGroupOrder</B>&nbsp;example indicates that HBA-specific SCSI
miniport drivers (each linked to the NT SCSI port driver, which is implemented
as a dynamic-link library) should be loaded before other drivers in the
Primary disk group (such as add-on disk array, “AT” disk, and/or ABIOS disk
drivers), followed by the SCSI class drivers, and so on.
<P>
The <B>GroupOrderList</B>&nbsp;defines the load order of drivers within each group.
The first number in the list defines how many tags are used; in the above
example, there are 03 tags for SCSI Class. The rest of the list defines the
order in which drivers with those tags are loaded. The tags are not
necessarily listed in increasing numerical order. The tag assignment for a
driver is defined in its entry in the <B>Services</B>&nbsp;key.
<P>
<LI>
<B>Services</B>, which holds driver-specific information about how and when
during system initialization a given driver is loaded and which, if any,
lower-level drivers must be loaded first. For example, the <B>Services</B>
subkeys pertaining to the SCSI class group might have:
<P>
<PRE><FONT FACE="Courier" SIZE="2">Services 
&nbsp; &nbsp; :
&nbsp; &nbsp; Disk                 
&nbsp; &nbsp; &nbsp; &nbsp; DependOnGroup:REG_MULTI_SZ:SCSI miniport 
&nbsp; &nbsp; &nbsp; &nbsp; ErrorControl:REG_DWORD:0  // = SERVICE_ERROR_IGNORE
&nbsp; &nbsp; &nbsp; &nbsp; Group:REG_SZ:SCSI class 
&nbsp; &nbsp; &nbsp; &nbsp; Start:REG_DWORD:0     // = SERVICE_BOOT_START 
&nbsp; &nbsp; &nbsp; &nbsp; Tag:REG_DWORD:0x2
&nbsp; &nbsp; &nbsp; &nbsp; Type:REG_DWORD:0x1    // = SERVICE_KERNEL_DRIVER 
&nbsp; &nbsp; :
&nbsp; &nbsp; Scsiscan 
&nbsp; &nbsp; &nbsp; &nbsp; DependOnGroup:REG_MULTI_SZ:SCSI miniport 
&nbsp; &nbsp; &nbsp; &nbsp; ErrorControl:REG_DWORD:0   // = SERVICE_ERROR_IGNORE
&nbsp; &nbsp; &nbsp; &nbsp; Group:REG_SZ:SCSI class 
&nbsp; &nbsp; &nbsp; &nbsp; Start:REG_DWORD:0x1   // = SERVICE_SYSTEM_START 
&nbsp; &nbsp; &nbsp; &nbsp; Tag:REG_DWORD:0x3
&nbsp; &nbsp; &nbsp; &nbsp; Type:REG_DWORD:0x1    // = SERVICE_KERNEL_DRIVER 
&nbsp; &nbsp; :
&nbsp;</FONT></PRE>
<P>
This <B>Services</B>&nbsp;example indicates:
<P>
<UL>
<LI>
These drivers are NT drivers (<B>Type</B>&nbsp;= SERVICE_KERNEL_DRIVER), rather
than user-mode subsystem-specific drivers.
<P>
<LI>
Whether each driver must be loaded by the NT boot loader because the system
itself might be loaded from the SCSI class driver’s physical device (<B>Start</B>
= SERVICE_BOOT_START) or during the next phase of system initialization (<B>Start</B>
= SERVICE_SYSTEM_START). For more information about writing NT drivers for
boot-from floppy and CD-ROM devices, see also <A HREF="16issues_43.htm">Section
16.9.2</A>.
<P>
<LI>
These drivers belong to the SCSI class <B>Group</B>&nbsp;in the <B>ServiceGroupOrder</B>
of the <B>Control</B>&nbsp;section for this <B>ControlSet</B><I>nnn</I>.
<P>
<LI>
What order these drivers will load within the SCSI class group (<B>Tag</B>).
The position of a driver’s Tag value in the <B>CurrentControlSet\Control\GroupOrderList</B>
entry determines when that driver loads relative to other drivers in the
group. A driver that has no Tag value in this list is loaded last within its
group.
<P>
<LI>
If these drivers cannot be loaded, the system will skip them. (<B>ErrorControl</B>
= SERVICE_ERROR_IGNORE). Other drivers have an <B>ErrorControl</B>&nbsp;value of
SERVICE_ERROR_NORMAL, which means that the system will continue the boot
process, possibly trying the <B>LastKnownGood</B>&nbsp;<B>ControlSet</B><I>mmm</I>,
if those drivers fail to initialize and cannot be loaded.
<P>
<LI>
These drivers cannot be loaded (<B>DependOnGroup</B>) unless at least one
driver from the SCSI miniport <B>Group</B>&nbsp;in the <B>ServiceGroupOrder</B>
section has already been loaded.
</UL>
</UL>
<P>
A new driver can be loaded in NT machines by adding appropriate subkeys with
value entries for the driver to the <B>CurrentControlSet</B>&nbsp;in the registry.
<P>
For example, a new SCSI miniport driver that enables “WD1003 emulation” on its
HBA should be loaded before any other SCSI miniport drivers so that it can
claim an <B>AtDisk..AddressSpace</B>&nbsp;in the I/O Manager’s configuration
information structure, described in <A HREF="16issues_30.htm">Section
16.8.1.1</A>. On the other hand, a SCSI miniport driver for an HBA that does not
support a BIOS should be loaded following all miniport drivers of HBAs that
do.
<H5>Using Regedt32 to Load a New NT Driver</H5>
<P>
To create a driver-specific key in the registry for an under-development
driver and to make it loadable, the driver writer can use the Windows NT
registry editor, <B>regedt32</B>, to modify and add appropriate keys and their
value entries in the registry. For example, the driver writer would modify the
<B>CurrentControlSet\Services</B>&nbsp;key to get the under-development driver to
load and add driver-specific keys, such as the <I>DriverName</I><B>\Parameters</B>
with appropriate value entries or subkeys with value entries.
<P>
However, every NT driver writer must decide whether to rely on a system
administrator or end user to “install” the retail driver in the registry with <B>regedt32</B>,
to use a setup utility, to have the driver set itself up in the registry, or
to use some combination of these methods. For more information about these
alternatives, see Sections <A HREF="16issues_40.htm">16.8.5</A>
and <A HREF="16issues_42.htm">16.9.1</A>
and the <I>Programmer’s Guide</I>.
<P>
Note that the <B>ServiceGroupOrder</B>&nbsp;key is reset to its system-supplied
value on a system upgrade. Drivers that modify this key may need to be
reinstalled after a system upgrade.
<H5>LastKnownGood Control Set</H5>
<P>
The registry always contains additional load-control specifications, including
a backup specification called <B>LastKnownGood</B>, in case modifications to
the <B>CurrentControlSet</B>&nbsp;make it impossible to load the system.
<H5>Using the \Regisry\Machine\System Tree in Higher-Level NT Drivers</H5>
<P>
Note that the registry has other subkeys under the path <B>\Registry\Machine\System</B>,
shown in <A HREF="16issues_29.htm#DDK_Figure_16..6_NG">Figure 16.6</A>, that contain configuration
information that is useful to higher-level NT drivers.
<P>
For example, the system-supplied ftdisk driver uses the subkey <B>\Registry\Machine\System\Disk</B>
to find disk devices and logical partitions so it can set up device objects
for its own mirror, stripe, stripe-with-parity, and volume sets, as mentioned
in Chapter 5.
<P></FONT>
</BODY>
</HTML>
