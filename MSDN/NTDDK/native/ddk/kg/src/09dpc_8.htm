<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.2.1  Using Buffered I/O and Satisfying Device Control IRPs</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Using_Buffered_I_O_and_Satisfying_Device_Control_IRPs_KG"></A>9.2.1  Using Buffered I/O and Satisfying Device Control IRPs</H3>
<P>
As already mentioned in Chapter 7, NT device drivers that use buffered I/O
usually have simpler StartIo routines than those that use direct I/O because
the former transfer relatively small amounts of data per interrupt into or
from a system-space buffer allocated by the I/O Manager. Most device drivers
that use buffered I/O also have simpler DpcForIsr routines than those that use
direct I/O.
<P>
Even drivers that set up their device objects for direct I/O use buffered I/O
for IRP_MJ_DEVICE_CONTROL requests when the I/O control codes are defined with
method buffered. 
<P>
Using buffered I/O, drivers transfer data to or from a system-space buffer,
allocated by the I/O Manager, at <B>Irp-&gt;AssociatedIrp.SystemBuffer</B>. 
<P>
The DpcForIsr or CustomDpc routine of any NT device driver usually completes
the I/O processing only for a subset of public I/O control codes that the
driver must support. In particular, the DPC routine completes operations for
device control requests with the following characteristics:
<UL>
<LI>
Requests that change the state of the physical device 
<P>
<LI>
Requests that require the return of inherently volatile information about the
physical device 
</UL>
<P>
For more information about the system-defined and device-type-specific I/O
control codes an NT device driver must support, see the <I>Kernel-mode Driver
Reference</I>. 
<P></FONT>
</BODY>
</HTML>
