<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.1.1.2  Setting Up Context for an IoTimer Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Setting_Up_Context_for_an_IoTimer_Routine_KG"></A>14.1.1.2  Setting Up Context for an IoTimer Routine</H4>
<P>
The <I>Context</I>&nbsp;passed to <B>IoInitializeTimer</B>&nbsp;points to a context area
where other driver routines and the IoTimer routine can maintain state about
timed operations. This <I>Context</I>&nbsp;pointer is passed to the IoTimer routine
whenever it is called, as shown by the declaration.
<P>
Such a context area must be in resident memory allocated by the driver.
Usually, this context area is in the associated device object’s device
extension. It can be in a controller extension if the driver uses a controller
object or in nonpaged pool allocated by the driver. The contents of the
context area are driver-determined.
<P>
If it shares a context area with the driver’s ISR, the IoTimer routine must
call <B>KeSynchronizeExecution</B>&nbsp;with a driver-supplied SynchCritSection
routine in order to access the shared context safely.
<P>
If the IoTimer routine shares a context area only with nonISR driver
routine(s), the shared area at <I>Context</I>&nbsp;must be protected by an
executive spin lock.
<P>
For more information about SynchCritSection routines, see Chapter 10. For more
information about using executive and interrupt spin locks, see Chapter 16.
<P></FONT>
</BODY>
</HTML>
