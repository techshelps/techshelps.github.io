<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4.8.2  SCSI Miniport Driver’s HwScsiEnableInterruptsCallback Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_SCSI_Miniport_Drivers_HwScsiEnableInterruptsCallback_Routine_KG"></A>A.4.8.2  SCSI Miniport Driver’s HwScsiEnableInterruptsCallback Routine</H4>
<P>
A HwScsiEnableInterruptsCallback routine finishes processing an
interrupt-driven I/O operation without inhibiting I/O operations for other
devices in the machine. 
<P>
When the HwScsiEnableInterruptsCallback routine gets control, all system
device interrupts are enabled except from the HBA because the HwScsiInterrupt
routine disabled interrupts on the HBA before it called <B>ScsiPortNotification</B>.
Thus, the miniport’s HwScsiInterrupt routine cannot be called and cannot
disturb the context data it set up about the current operation while the
HwScsiEnableInterruptsCallback routine is running. 
<P>
A HwScsiEnableInterruptsCallback routine should do the following: 
<OL>
<LI>
Use the context that was set up for the operation in the input device
extension to complete processing of the request that caused the interrupt. 
<P>
<LI>
Call <B>ScsiPortNotification</B>&nbsp;with the <I>NotificationType</I>&nbsp;<B>RequestComplete</B>
and the just satisfied SRB.
<P>
<LI>
Call <B>ScsiPortNotification</B>&nbsp;with the <I>NotificationType</I>&nbsp;<B>NextRequest</B>,
or with <B>NextLuRequest</B>&nbsp;if the HBA supports tagged queueing or multiple
requests per logical unit. 
<P>
<LI>
Call <B>ScsiPortNotification</B>&nbsp;with a pointer to the device extension, the <I>NotificationType</I>
<B>CallDisableInterrupts</B>, and the miniport’s
HwScsiDisableInterruptsCallback routine, described in <A HREF="appascsi_57.htm">Section
A.4.8.3</A>. 
<P>
<LI>
Return control. 
</OL>
<P>
The Windows NT <B>ScsiPortNotification</B>&nbsp;calls the
HwScsiDisableInterruptsCallback routine with a subset of the system device
interrupts disabled. No device interrupt with a system-assigned hardware
priority (IRQL) less than or equal to the HBA’s can occur. 
<P>
For more information about IRQLs, see Chapter 16. 
<P></FONT>
</BODY>
</HTML>
