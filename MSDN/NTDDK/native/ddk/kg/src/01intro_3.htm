<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.2.1  Portability</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Portability_KG"></A>1.2.1  Portability</H3>
<P>
Windows NT exports two system-specific runtime libraries, which contain
functions that begin with the prefix <B>Rtl</B>. NT drivers can use the same
kernel-mode <B>Rtl</B><I>Xxx</I>&nbsp;routines that the executive components do,
but NT drivers cannot call user-mode <B>Rtl</B><I>Xxx</I>&nbsp;routines because NT
drivers always run in kernel mode. NT file system drivers can also call the
system-supplied file system runtime library’s <B>FsRtl</B><I>Xxx</I>&nbsp;routines.
<P>
Each executive component exports a set of kernel-mode support routines that NT
drivers and all other kernel-mode components call. If the underlying
implementation of such a support routine changes over time, its callers remain
portable because the interface to the defining component does not change.
<P>
The NT kernel does not support performing floating-point operations in kernel
mode code. A kernel-mode driver cannot do floating-point operations without
causing a system crash.
<P>
Most NT components are coded entirely in C, with only small pieces of the HAL
and Kernel written in assembly language, so that Windows NT is readily
portable across CISC- and RISC-based platforms. An NT driver should also be
written in C so that it can be recompiled with an system-compatible C
compiler, relinked, and run on different Windows NT platforms without recoding
parts of the driver or replacing modules in the driver.
<P>
Driver writers should not use the features of any particular system-compatible
C compiler or C support library if they cannot assume that the same features
will be supported by other system-compatible compilers. In general, NT driver
writers should write code conforming to the ANSI C standard but avoid writing
code with dependencies on anything this standard describes as “implementation
defined.”
<P>
In particular, NT driver writers must avoid the following:
<UL>
<LI>
Dependencies on data types whose size or layout can vary from one platform to
another
<P>
<LI>
Calling any standard C runtime library function that maintains state
<P>
<LI>
Calling any other standard C runtime library function for which NT provides an
alternative function
</UL>
<P>
The DDK supplies a set of include files defining NT-specific data types and
constants that drivers (and all other NT kernel-mode components) use to help
maintain portability from one NT platform to another. Most NT drivers include
the master DDK kernel-mode include file, <I>ntddk.h</I>, which pulls in both <I>ntdef.h</I>
for these basic NT types and appropriate selections from a
processor-architecture-specific include file when each driver is compiled with
the corresponding compiler directive. Note that <I>i386.h</I>&nbsp;covers Intel
80386-based and subsequent <I>x</I>86-based Windows NT platforms, while the
header files for RISC processors also can cover a family of microprocessors.
<P>
NT driver writers should isolate any platform-dependent definitions within <B>#ifdef</B>
statements, so that each driver can be compiled and linked for the appropriate
CISC-based or RISC-based Windows NT platform.
<P>
Certain NT drivers include other system-supplied header files to maintain
portability across Windows NT platforms, in particular, SCSI and video
miniport drivers. For more information about the header files for these types
of NT drivers, see <A HREF="appascsi.htm">Appendix A</A>&nbsp;and the <I>Graphics
Driver Design Guide</I>, respectively.
<P></FONT>
</BODY>
</HTML>
