<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 6  Dispatch Routines</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_Dispatch_Routines_KG"></A>Chapter 6  Dispatch Routines</H1>
<DL>
<DT>
This chapter contains the following information:
<DD>
<A HREF="06dsptch_1.htm">6.1  Dispatch Routine
Requirements</A>
<P>
<A HREF="06dsptch_2.htm">6.1.1  Commonly
Implemented Dispatch Routines</A>
<P>
<A HREF="06dsptch_3.htm">6.1.2 
Conditionally Implemented Dispatch Routines</A>
<DL>
<DT>
<A HREF="06dsptch_4.htm">6.2  Basic Dispatch
Routine Functionality</A>
<DD>
<A HREF="06dsptch_5.htm">6.2.1  When to Check the
I/O Stack Location</A>
<P>
<A HREF="06dsptch_6.htm">6.2.2  How to
Complete an IRP in a Dispatch Routine</A>
<P>
<A HREF="06dsptch_7.htm">6.2.3  When
to Complete an IRP in the Dispatch Routine</A>
<P>
<A HREF="06dsptch_8.htm">6.2.4
&nbsp;How to Pass IRPs with Valid Parameters on from a Dispatch Routine</A>
<P>
<A HREF="06dsptch_9.htm">6.2.5  Allocating
IRPs for Lower-Level Drivers</A>
<P>
<A HREF="06dsptch_10.htm">6.2.6  Handling
Asynchronous Transfer Requests</A>
<BR>
<DT>
<A HREF="06dsptch_11.htm">6.3  Designing Dispatch Routines</A>
<DD>
<A HREF="06dsptch_12.htm">6.3.1 
DispatchCreate and DispatchClose Functionality</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_13.htm">6.3.1.1  Basic
DispatchCreateClose Routines</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_14.htm">6.3.1.2
&nbsp;Points to Consider in Implementing DispatchCreateClose</A>
<P>
<A HREF="06dsptch_15.htm">6.3.2  DispatchCleanup
Functionality</A>
<P>
<A HREF="06dsptch_16.htm">6.3.3 
DispatchRead and/or DispatchWrite Functionality</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_17.htm">6.3.3.1 
DispatchReadWrite Using Buffered I/O</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_18.htm">6.3.3.2 
DispatchReadWrite Using Direct I/O</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_19.htm">6.3.3.3 
DispatchReadWrite in Higher-Level Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_20.htm">6.3.3.4
&nbsp;Points to Consider in Implementing DispatchReadWrite</A>
<P>
<A HREF="06dsptch_21.htm">6.3.4 
Dispatch(Internal)DeviceControl Functionality</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_22.htm">6.3.4.1 
DispatchDeviceControl in Lowest-Level Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_23.htm">6.3.4.2 
DispatchDeviceControl in Higher-Level Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_24.htm">6.3.4.3
&nbsp;Dispatch(Internal)DeviceControl in Class/Port Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="06dsptch_25.htm">6.3.4.4
&nbsp;Points to Consider in Implementing Dispatch(Internal)DeviceControl</A>
</DL>
</DL>
<P>
The Dispatch routine is defined by the I/O Manager as follows:
<PRE><FONT FACE="Courier" SIZE="2">NTSTATUS 
(*PDRIVER_DISPATCH) ( 
&nbsp; &nbsp; IN PDEVICE_OBJECT DeviceObject, 
&nbsp; &nbsp; IN PIRP Irp 
&nbsp; &nbsp; ); 
&nbsp;</FONT></PRE>
<P>
This chapter summarizes the required functionality of NT drivers’ standard
Dispatch routines and some guidelines for the most commonly implemented
Dispatch routines. 
<P></FONT>
</BODY>
</HTML>
