<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>14.1.2.1  Setting Up a CustomTimerDpc Routine</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Setting_Up_a_CustomTimerDpc_Routine_KG"></A>14.1.2.1  Setting Up a CustomTimerDpc Routine</H4>
<P>
At a minimum, any NT driver that has CustomTimerDpc routines <I>must</I>
provide resident storage for at least one timer object (of type KTIMER) and
resident storage for some number, determined by how many DPC routines that
driver has, of DPC objects (of type KDPC).
<P>
With very few exceptions, NT drivers that have CustomTimerDpc routines should
provide storage for both a timer object and a DPC object for each
CustomTimerDpc routine the driver has.
<P>
The DriverEntry routine must set up each CustomTimerDpc routine as follows:
<OL>
<LI>
Call <B>KeInitializeDpc</B>&nbsp;to set up the DPC object with the CustomTimerDpc
routine and a <I>DeferredContext</I>&nbsp;pointer to the driver-determined context
area.
<P>
<LI>
Call <B>KeInitializeTimer</B>&nbsp;or <B>KeInitializeTimerEx</B>&nbsp;to set up the
timer object to be associated with the CustomTimerDpc routine.
</OL>
<P>
In other words, setting up a CustomTimerDpc routine is exactly like setting up
a CustomDpc routine with an additional step to initialize the timer object. A
CustomTimerDpc routine is not associated with a particular timer object until
the driver calls <B>KeSetTimer</B>&nbsp;or <B>KeSetTimerEx</B>&nbsp;with the <I>Dpc</I>
pointer to the corresponding DPC object and <I>Timer</I>&nbsp;pointer to that timer
object.
<P>
Note also that a driver cannot pass additional context pointers to its
CustomTimerDpc routine in calls to <B>KeSetTimer</B>&nbsp;or <B>KeSetTimerEx</B>,
while a device driver’s ISR can pass two <I>SystemArgument</I>&nbsp;pointers when
it queues a CustomDpc routine with <B>KeInsertQueueDpc</B>.
<P>
For more information about CustomDpc routines, see Chapter 9. For more
information about setting up timer objects and DPCs, see also Chapter 3. For
specific information about any support routine mentioned in this chapter, see
the <I>Kernel-Mode Driver Reference.</I>
<P></FONT>
</BODY>
</HTML>
