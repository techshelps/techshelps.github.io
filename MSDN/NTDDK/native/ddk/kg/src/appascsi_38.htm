<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4.3.3  Setting up ConfigInfo in HwScsiFindAdapter</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Setting_up_ConfigInfo_in_HwScsiFindAdapter_KG"></A>A.4.3.3  Setting up ConfigInfo in HwScsiFindAdapter</H4>
<P>
A HwScsiFindAdapter routine usually calls <B>ScsiPortGetBusData</B>&nbsp;and
examines the returned bus-type-specific configuration information, such as POS
data, EISA configuration data or PCI configuration data, for a supported HBA.
If the input PORT_CONFIGURATION_INFORMATION <B>AccessRanges</B>&nbsp;elements have
been filled in from the registry, the HwScsiFindAdapter routine should map the
bus-relative access ranges with <B>ScsiPortGetDeviceBase</B>&nbsp;and use the
returned logical range addresses to communicate with the HBA. If access range
addresses are supplied by the port driver, HwScsiFindAdapter must not scan for
adapters at other locations on that I/O bus. 
<P>
If the port driver supplies access range values, HwScsiFindAdapter should not
use the <I>HwContext</I>&nbsp;parameter. Nonzero access range values are usually
accompanied by additional configuration information, which can indicate a
plug-and-play environment. In such an environment, HwScsiFindAdapter is being
called after the miniport’s <B>DriverEntry</B>&nbsp;routine has exited and thus the
<I>HwContext</I>&nbsp;pointer is no longer valid. Legacy drivers that receive zero
access range values from the port driver and that do their own scanning for
supported HBAs can use the <I>HwContext</I>&nbsp;pointer.
<P>
If the PORT_CONFIGURATION_INFORMATION buffer input to the HwScsiFindAdapter
routine has no configuration information from the registry, HwScsiFindAdapter
can use values returned by <B>ScsiPortGetBusData</B>&nbsp;or, if necessary, set
driver-defined default values for <B>AccessRanges</B>&nbsp;elements, <B>InterruptLevel</B>
or <B>BusInterruptVector</B>, <B>DmaChannel</B>&nbsp;or <B>DmaPort</B>&nbsp;if the HBA
uses system DMA, and <B>InitiatorBusId</B>. 
<P>
The port driver is responsible for doing bus-level configuration programming,
particularly of dynamically configurable I/O buses with published standard
interfaces, such as PCI and PCMCIA. For an HBA on such an I/O bus, the
miniport driver can simply accept the interrupt configuration information
provided as values reserved for system use. For an HBA on other types of I/O
buses, a miniport should program its HBA to use any supplied interrupt value
if its HBA supports programmable interrupt configuration. If no interrupt
configuration is supplied, as indicated either by the value zero or the value
SP_UNINITIALIZED_VALUE, the miniport should either query its HBA if the HBA
supports interrupt selection using jumpers or should supply a nonzero default
interrupt configuration unless the HBA does not use interrupts. The interrupt
configuration value zero indicates that the miniport controls its HBA in a
polled mode.
<P>
The HwScsiFindAdapter routine must call <B>ScsiPortValidateRange</B>&nbsp;to check
whether such driver-supplied access ranges can be used safely <I>before</I>&nbsp;it
accesses an adapter on the bus. If <B>ScsiPortValidateRange</B>&nbsp;returns TRUE,
the miniport can call <B>ScsiPortGetDeviceBase</B>&nbsp;to map the range and use
the returned logical addresses in calls to <B>ScsiPortRead</B><I>Xxx</I>
and/or <B>ScsiPortWrite</B><I>Xxx</I>&nbsp;to determine whether it supports an HBA
on the I/O bus. If <B>ScsiPortValidateRange</B>&nbsp;returns FALSE, the miniport
driver must not attempt to map and use those bus-relative access range values.
<P>
When the HwScsiFindAdapter routine finds an HBA it can support, this routine
must fill in pertinent members, as appropriate for its HBA and the given <B>AdapterInterfaceType</B>,
in the input PORT_CONFIGURATION_INFORMATION buffer. Every miniport driver must
fill in the <B>AccessRanges</B>&nbsp;information, converting each <B>AccessRanges</B>
element’s bus-relative <B>RangeStart</B>&nbsp;value with <B>ScsiPortConvertUlongToPhysicalAddress
</B>before setting the bus-relative base address for a range in the <I>ConfigInfo</I>
buffer. 
<P>
For a supported HBA, HwScsiFindAdapter also should save the mapped logical
range addresses returned by <B>ScsiPortGetDeviceBase</B>&nbsp;in the miniport’s
device extension. Every miniport driver must call the <B>ScsiPortRead</B><I>Xxx</I>
and <B>ScsiPortWrite</B><I>Xxx</I>&nbsp;with these mapped system addresses to
communicate with its HBA(s). 
<P>
For each successfully validated and mapped range in I/O space, the miniport
driver calls the <B>ScsiPortRead/WritePort</B><I>Xxx</I>&nbsp; routines to
communicate with its HBA. For each such range in memory space, the miniport
driver calls the <B>ScsiPortRead/WriteRegister</B><I>Xxx</I>. 
<P>
For an “AT-compatible” HBA, the HwScsiFindAdapter routine should check the
input <B>Atdisk..Claimed</B>&nbsp;members and attempt to claim an “AT” range by
resetting the value to TRUE. 
<P></FONT>
</BODY>
</HTML>
