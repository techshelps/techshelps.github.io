<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 16  Common Driver Design Issues</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_Common_Driver_Design_Issues_KG"></A>Chapter 16  Common Driver Design Issues</H1>
<DL>
<DT>
This chapter contains the following information:
<DD>
<A HREF="16issues_1.htm">16.1  Managing Hardware
Priorities</A>
<DL>
<DT>
<A HREF="16issues_2.htm">16.2  Using Spin Locks</A>
<DD>
<A HREF="16issues_3.htm">16.2.1 
Providing Storage for Spin Locks and Protected Data</A>
<P>
<A HREF="16issues_4.htm">16.2.2  Initializing Spin Locks</A>
<P>
<A HREF="16issues_5.htm">16.2.3  Calling
Support Routines That Use Spin Locks</A>
<P>
<A HREF="16issues_6.htm">16.2.4  Releasing Spin Locks
Promptly</A>
<P>
<A HREF="16issues_7.htm">16.2.5 
Preventing Errors or Deadlocks While Using Spin Locks</A>
</DL>
<P>
<A HREF="16issues_8.htm">16.3  Polling a Device</A>
<DL>
<DT>
<A HREF="16issues_9.htm">16.4  Managing Memory Usage</A>
<DD>
<A HREF="16issues_10.htm">16.4.1  Using System Memory</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_11.htm">16.4.1.1  NT Driver
Access to User-Space Memory</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_12.htm">16.4.1.2 
Setting up MDLs for Partial Transfer Requests</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_13.htm">16.4.1.3  Allocating
System-Space Memory</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_14.htm">16.4.1.4
&nbsp;Remapping Bus-Relative Memory-Space Addresses to Logical Addresses</A>
<P>
<A HREF="16issues_15.htm">16.4.2  Using the Kernel Stack</A>
<P>
<A HREF="16issues_16.htm">16.4.3  Using Zone Buffers</A>
<BR>
<DT>
<A HREF="16issues_17.htm">16.5  Maintaining
Cache Coherency for DMA and PIO</A>
<DD>
<A HREF="16issues_18.htm">16.5.1  Flushing
Cached Data during DMA Operations</A>
<P>
<A HREF="16issues_19.htm">16.5.2  Flushing
Cached Data during PIO Operations</A>
<BR>
<DT>
<A HREF="16issues_20.htm">16.6  Error Logging and
NTSTATUS Values</A>
<DD>
<A HREF="16issues_21.htm">16.6.1  Calling <B>IoAllocateErrorLogEntry</A></B>
<P>
<A HREF="16issues_22.htm">16.6.2  Filling in an Error
Log Packet</A>
<P>
<A HREF="16issues_23.htm">16.6.3  Setting
NTSTATUS Values in Error Log Packets</A>
<P>
<A HREF="16issues_24.htm">16.6.4  Calling <B>IoWriteErrorLogEntry</A></B>
<P>
<A HREF="16issues_25.htm">16.6.5  Defining New IO_ERR_<I>XXX</A></I>
<P>
<A HREF="16issues_26.htm">16.6.6  Defining Private
NTSTATUS Constants</A>
</DL>
<P>
<A HREF="16issues_27.htm">16.7  Handling Removable Media</A>
<DL>
<DT>
<A HREF="16issues_28.htm">16.8  Using the Registry</A>
<DD>
<A HREF="16issues_29.htm">16.8.1  Registry Paths
Supplied to NT Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_30.htm">16.8.1.1 
RegistryPath, DriverName, and Device Object Names</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_31.htm">16.8.1.2  Load-control
Sets for NT Drivers</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_32.htm">16.8.1.3 
HardwareDatabase and the System DeviceMap</A>
<P>
<A HREF="16issues_33.htm">16.8.2 
Getting Device Hardware Configuration Information</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_34.htm">16.8.2.1  Calling <B>IoQueryDeviceDescription</A></B>
<P>
&nbsp; &nbsp; <A HREF="16issues_35.htm">16.8.2.2 
Calling <B>HalGetBusData</B>&nbsp;or <B>HalGetBusDataByOffset</A></B>
<P>
<A HREF="16issues_36.htm">16.8.3  Claiming Hardware
Resources</A>
<P>
&nbsp; &nbsp; <A HREF="16issues_37.htm">16.8.3.1  Calling <B>IoReportResourceUsage</A></B>
<P>
&nbsp; &nbsp; <A HREF="16issues_38.htm">16.8.3.2
&nbsp;Calling <B>IoAssignResources</B>&nbsp;or <B>HalAssignSlotResources</A></B>
<P>
<A HREF="16issues_39.htm">16.8.4 
Setting Up Driver-specific, User-visible Error Logging</A>
<P>
<A HREF="16issues_40.htm">16.8.5  Using the
RegistryPath Parameters</A>
<BR>
<DT>
<A HREF="16issues_41.htm">16.9  Setting Up Symbolic Links</A>
<DD>
<A HREF="16issues_42.htm">16.9.1
&nbsp;Making a Named Device Object Visible to User-mode Applications</A>
<P>
<A HREF="16issues_43.htm">16.9.2 
Creating Symbolic Links between Devices and ARC Names</A>
</DL>
</DL>
<P>
This chapter contains some information of general interest to all NT driver
writers, including the following: 
<UL>
<LI>
A summary of the default hardware priorities (IRQLs) at which standard NT
driver routines run and some guidelines for calling support routines at
appropriate IRQLs 
<P>
<LI>
General guidelines about using spin locks to synchronize access to data or
resources shared by driver routines 
<P>
<LI>
General guidelines about allocating system-space memory, using the kernel
stack, and using zone buffers 
<P>
<LI>
How NT drivers should handle I/O errors and how NTSTATUS values are defined 
<P>
<LI>
How NT drivers use the  registry to initialize themselves in a manner that
keeps them portable and configurable across Windows NT&reg; platforms 
<P>
<LI>
How to create a symbolic link between a driver’s named device object and a
Win32&reg;-visible name (such as LPT1) for the same device 
</UL>
<P>
This chapter also discusses design issues that are device-type-specific or
design-specific, including the following: 
<UL>
<LI>
For NT device driver designers, whether to have the driver poll the device or
set up a thread that waits on a Kernel-defined dispatcher object, such as an
event or semaphore
<P>
<LI>
For NT DMA or PIO device driver designers, how to maintain cache coherency and
data integrity during transfer operations
<P>
<LI>
For NT removable-media device driver designers, how to handle user-induced
errors, such as supplying the wrong media or removing the media on which a
file is open
<P>
<LI>
For NT floppy and CD-ROM device driver designers, how to set up a symbolic
link between the driver’s name for a device object that can represent a
boot-from device and the corresponding ARC name for the device
</UL>
<P></FONT>
</BODY>
</HTML>
