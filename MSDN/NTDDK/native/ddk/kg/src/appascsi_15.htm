<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.1.5  SCSI Class Driver’s IoCompletion Routines</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_SCSI_Class_Drivers_IoCompletion_Routines_KG"></A>A.1.5  SCSI Class Driver’s IoCompletion Routines</H3>
<P>
As mentioned in <A HREF="appascsi_13.htm">Section
A.1.4.4</A>, SCSI class drivers are responsible for freeing the memory they
allocate for SRBs. Like any other higher-level kernel-mode driver, they are
also responsible for releasing any IRPs that they allocate, such as an IRP to
split up a transfer request as described in the preceding section. 
<P>
A class driver’s IoCompletion routine is ultimately responsible for ensuring
that the I/O status block is set and for completing the original IRP. Note
that completing an IRP can include translating an error returned in the SRB’s <B>ScsiStatus</B>
member or <B>SrbSenseInfoBuffer</B>&nbsp;into an NTSTATUS-type value and/or logging
an error, as described in Chapter 16. 
<P>
SCSI class drivers must have one or more IoCompletion routines, unless a
particular driver waits on the completion of every IRP it sends to the port
driver, retries requests as necessary, and releases memory for SRBs from a
Dispatch or BuildSrb routine. Note that handling every IRP as such a
synchronous request would degrade the performance of any class driver.
Furthermore, SCSI class drivers for devices that might hold the system page
file must handle all transfer requests asynchronously. Such a class driver
must have an IoCompletion routine for read/write requests. 
<P>
When certain kinds of errors occur in processing a request, the system port
driver freezes its internal queue for the target LU. Consequently, class
drivers usually have internal routines to change the status of the queue for
their device I/O requests. For more information about class drivers’
ReleaseQueue routines, see <A HREF="appascsi_16.htm">Section
A.1.5.1</A>. 
<P>
If the driver’s BuildSrb routine requested that the port driver return
request-sense information for a request, its IoCompletion routine either calls
an InterpretRequestSense routine or implements the same functionality inline.
For more information about InterpretRequestSense routines, see <A HREF="appascsi_17.htm">Section
A.1.5.2</A>. 
<P>
As mentioned in <A HREF="appascsi_13.htm">Section
A.1.4.4</A>, SCSI class drivers are responsible for retrying requests that fail
due to target controller errors, bus resets, or request time-outs. When the
port driver returns a particular request with its <B>SrbStatus</B>&nbsp;set to
indicate such an error, the class driver can call a RetryRequest routine from
its IoCompletion routine or, possibly, from the InterpretRequestSense routine.
For more information about RetryRequest routines, see <A HREF="appascsi_18.htm">Section
A.1.5.3</A>. 
<P>
For more information about general requirements for IoCompletion routines, see
Chapter 13. 
<P></FONT>
</BODY>
</HTML>
