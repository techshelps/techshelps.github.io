<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.2  Parallel and Serial Devices and Driver Layers</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Parallel_and_Serial_Devices_and_Driver_Layers_KG"></A>2.4.2  Parallel and Serial Devices and Driver Layers</H3>
<P>
<A NAME="DDK_Figure_2..9_KG"></A>Figure 2.9 illustrates a representative hardware
configuration for parallel and serial devices.
<P>
<B><IMG SRC="../art/2srprhw.gif" BORDER=0></B>
<P>
<B>Figure 2.9    Parallel and Serial Hardware Configurations</B>
<P>
Both the parallel and serial devices are connected directly on the system bus.
<P>
<A NAME="DDK_Figure_2..10_KG"></A>Figure 2.10 shows the corresponding layered
drivers for I/O operations on the devices shown in Figure 2.9.
<P>
<B><IMG SRC="../art/2srprlyr.gif" BORDER=0></B>
<P>
<B>Figure 2.10    Parallel and Serial Driver Layers</B>
<P>
As mentioned in <A HREF="02irps_1.htm">Section
2.1</A>, a parallel driver traditionally writes data, which usually has been set
up by a Windows NT subsystem-specific printer driver and spooled by the
subsystem, out through a parallel port to a printer. The system’s parallel
driver (parclass in Figure 2.10) handles printer output through a parallel
port by calling down to the system parallel port driver. Other parallel class
drivers can handle input from and output to other types of devices through a
parallel port. The system parallel port driver provides all necessary port
arbitration support.
<P>
The system’s serial driver shown in Figure 2.10 is both a lowest-level and
highest-level NT driver.
<P>
When an end-user application opens a parallel or serial port, the user-mode
subsystem calls an NT I/O system service to open the file object representing
the appropriate port. If the call succeeds, that port becomes an exclusive
device: dedicated for use by the application until it closes the port and the
subsystem releases the file object handle.
<P></FONT>
</BODY>
</HTML>
