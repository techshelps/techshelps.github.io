<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.8  Reporting Hardware Status</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Reporting_Hardware_Status_NG"></A>4.8  Reporting Hardware Status</H2>
<P>
A miniport NIC driver can indicate changes in hardware status to upper layers
by calling <B><A HREF="../../nr/src/103ndisx_108.htm">NdisMIndicateStatus</A></B>. <B>NdisMIndicateStatus</B>
takes both a general status code and a buffer containing media-specific
information that further defines the reason for the status change. NDIS will
report this status change to bound protocol drivers. NDIS does not interpret
or otherwise intercept the status code. The miniport NIC driver can make one
or more such calls, however, when it has finished sending status, it must call
<B>NdisMIndicateStatusComplete</B>&nbsp;to let interested protocol drivers know
that it is done reporting status. The protocol driver or configuration manager
can log the status or take corrective action, as appropriate. 
<P>
<B>NdisMIndicateStatus</B>&nbsp;takes any valid NDIS_STATUS_<I>XXX</I>&nbsp;value. The
miniport NIC driver is responsible for indicating status codes that make sense
to a protocol or higher level driver. However, a protocol driver will ignore
any status values it is not interested in or that don’t make sense in the
context of its operations. 
<P>
For instance, a miniport NIC driver can report NDIS_STATUS_RING_STATUS to
report a ring failure. The <I>StatusBuffer</I>&nbsp;argument to <B>NdisMIndicateStatus</B>
further details the ring status. The contents of <I>StatusBuffer</I>&nbsp;encodes a
set of possible ring conditions that are the reason for the status report,
such as NDIS_RING_SIGNAL_LOSS and NDIS_RING_HARD_ERROR.
<P>
A miniport NIC driver can also be interrogated by an upper layer driver or by
NDIS about the miniport’s hardware status. When MiniportQueryInformation
receives OID_GEN_HARDWARE_STATUS, it responds with any of the applicable
statuses defined in NDIS_HARDWARE_STATUS. These include:
<UL>
<LI>
<B>NdisHardwareStatusReady</B>
<P>
<LI>
<B>NdisHardwareStatusInitializing</B>
<P>
<LI>
<B>NdisHardwareStatusReset</B>
<P>
<LI>
<B>NdisHardwareStatusClosing</B>
<P>
<LI>
<B>NdisHardwareStatusNotReady</B>
</UL>
<P>
The miniport NIC driver can be queried so that NDIS can synchronize operations
between layers of NDIS drivers, for instance by determining whether a NIC is
ready to accept packets.
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
