<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.1.2  Unloading and Deregistering a TDI Transport Driver</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Unloading_and_Deregistering_a_TDI_Transport_Driver_NG"></A>4.1.2  Unloading and Deregistering a TDI Transport Driver</H3>
<P>
When a NIC is removed from the machine, Windows NT can unload all TDI
transport drivers that are either bound directly to the underlying NIC driver
or layered over an NDIS protocol driver that is bound to that NIC driver. To
accomplish this, the system calls each TDI transport’s Unload routine. 
<P>
The transport&#39;s Unload routine will be called by the I/O Manager when the
Service Controller unloads the driver from memory. A transport driver’s Unload<B>
</B>routine frees all driver-allocated resources and, if the driver interfaces
to NDIS at its lower edge, unbinds itself from the underlying NDIS driver(s).
<P>
If the TDI driver exports a set of NDIS-defined Protocol<I>Xxx</I>&nbsp;functions,
it must call <B><A HREF="../../nr/src/103ndisx_27.htm">NdisDeregisterProtocol</A></B>
from its Unload routine.
<P>
For more information about standard intermediate driver Unload routines, see
the <I>Kernel-Mode Driver Design Guide</I>. 
<P></FONT>
</BODY>
</HTML>
