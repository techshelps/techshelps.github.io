<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.6  Receiving Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Receiving_Data_NG"></A>4.6  Receiving Data </H2>
<P>
Miniports choose between two methods of passing incoming data to upper layers.
<UL>
<LI>
Miniports call <B><A HREF="../../nr/src/103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>
with a pointer to an array of pointers to one or more packets containing the
received data. When a miniport indicates received data by calling <B>NdisMIndicateReceivePacket</B>,
each entire packet is passed up to the receiving layer. When <B>NdisMIndicateReceivePacket
</B>returns, the miniport relinquishes ownership of any packets for which the
returned status is NDIS_STATUS_PENDING. The miniport does, however, retain
ownership of the array containing the pointers. This means that when <B>NdisMIndicateReceivePacket</B>
returns, the miniport must read the <B>Status</B>&nbsp;member of the OOB block for
each packet descriptor, and must not reference any resources specified by a
packet descriptor if the <B>Status</B>&nbsp;member is set to NDIS_STATUS_PENDING.
Pending packets will be returned to the MiniportReturnPacket function when
interested protocol driver(s) have consumed the received data. If the <B>Status</B>
member is NDIS_STATUS_SUCCESS, the packet descriptor and all the resources it
specifies have been returned to the miniport. Any packets for which the
miniport set the <B>Status</B>&nbsp;to NDIS_STATUS_RESOURCES before calling <B>NdisMIndicateReceivePacket</B>,
will be returned to the miniport when <B>NdisMIndicateReceivePacket</B>
returns.
<P>
<LI>
Miniports call <B>NdisM</B><I>Xxx</I><B>IndicateReceive</B>&nbsp;with a pointer to
a lookahead buffer. Interested protocol drivers copy the data in the buffer.
If the packet is small and the entire packet is indicated up in the lookahead
buffer, the receive is complete when <B>NdisM</B><I>Xxx</I><B>IndicateReceive</B>
returns. If there is more received data for the protocol, it will call <B><A HREF="../../nr/src/103ndisx_210.htm">NdisTransferData</A></B>
from within the protocol driver’s <B>ReceivePacket</B>&nbsp;handler causing the
miniport to be called at its MiniportTransferData function to transfer the
remainder of the received data.
</UL>
<P>
Miniports that indicate receives by calling <B>NdisMIndicateReceivePacket</B>
do not need a <B>TransferData </B>handler. Miniports that indicate receives by
calling <B>NdisM</B><I>Xxx</I><B>Receive</B>&nbsp;do not need a <B>ReturnPacket </B>handler.
<P></FONT>
</BODY>
</HTML>
