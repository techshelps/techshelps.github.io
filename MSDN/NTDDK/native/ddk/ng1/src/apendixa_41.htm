<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.5  Indicating and Transferring Received Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_A.3.5_Indicating_and_Transferring_Received_Data_NG"></A>A.3.5  Indicating and Transferring Received Data</H2>
<P>
When the network interface card receives a data packet over the network, the
associated NIC driver issues a call to <B><A HREF="../../nr/src/appdxa_79.htm">NdisIndicateReceive</A></B>
as Figure A.3.5 shows. In this call, the driver includes the NDIS binding
context for delivery of indications to the transport driver. <B>NdisIndicateReceive</B>
passes this context to <B><A HREF="../../nr/src/104tdlow_5.htm">ProtocolReceive</A></B>
in the transport driver. The transport driver can use any context value that
it requires for associating incoming indications with specific network
interface cards that it has opened. 
<P>
The transport driver initiates the transfer of the data packet by calling <B><A HREF="../../nr/src/appdxa_23.htm">MacTransferData</A>
</B>through <B><A HREF="../../nr/src/103ndisx_210.htm">NdisTransferData</A></B>. The NIC
driver responds by using <B>MacTransferData</B>&nbsp;to copy the received data
frames into the packet structure that the transport driver provides in its
call. 
<P>
<B>MacTransferData</B>&nbsp;is another potentially asynchronous function. If the
function completes synchronously, it simply writes the packet to the transport
driver and returns a status other than NDIS_STATUS_PENDING. If the function is
unable to complete the transfer data operation before it returns, it writes
NDIS_STATUS_PENDING. The NIC driver later calls <B><A HREF="../../nr/src/appdxa_73.htm">NdisCompleteTransferData</A></B>
to forward the call to<B>&nbsp;<A HREF="../../nr/src/104tdlow_13.htm">ProtocolTransferDataComplete</A></B>
for postprocessing and reception of the copied data frame. 
<P>
Once all incoming data frames have been received by the network interface
card, the NIC driver calls <B><A HREF="../../nr/src/appdxa_80.htm">NdisIndicateReceiveComplete</A></B>.
The NDIS interface library then calls <B><A HREF="../../nr/src/104tdlow_6.htm">ProtocolReceiveComplete</A></B>
to indicate to the transport driver that post-receive processing can be
performed. 
<P>
<IMG SRC="../art/215-05.gif" BORDER=0>
<P>
<B>Figure A.3.5   Indicating and transferring received data </B>
<P></FONT>
</BODY>
</HTML>
