<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.3.4  Choosing a Receive Function</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Choosing_a_Receive_Function_NG"></A>3.1.3.4  Choosing a Receive Function</H4>
<P>
Miniports choose between two methods of passing incoming packets to upper
layers.
<UL>
<LI>
Miniports call <B><A HREF="../../nr/src/103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>
to pass a pointer to an array containing one or more pointers to one or more
received packets. When a miniport indicates an array of packet pointers,
entire network packet(s) are passed up to the receiving layer. That is, when
the miniport calls <B>NdisMIndicateReceivePacket</B>, it makes the entire
network packet available to upper layers including any OOB data associated
with each packet descriptor. When <B>NdisMIndicateReceivePacket</B>&nbsp;returns,
ownership of the array that contains the pointers to packet descriptors
reverts to the miniport. Actual packet descriptors and the miniport-allocated
resources they describe may or may not be returned. Any upper layer can choose
to keep a packet and return it later, consume the data in the packet and
return it immediately, or return the packet immediately unread because it is
not interested in the data. This means that when <B>NdisMIndicateReceivePacket</B>
returns, the miniport must not reference any of the individual packets whose
status in the OOB data is set to NDIS_STATUS_PENDING.
<P>
<LI>
Miniports call a filter-specific <B>NdisM</B><I>Xxx</I><B>IndicateReceive</B>
with a pointer to a lookahead buffer. An interested protocol can either copy
the packet (if the packet is small and the entire packet is indicated up) or
call <B><A HREF="../../nr/src/103ndisx_210.htm">NdisTransferData</A></B>&nbsp;from its
ProtocolReceive function and let the MiniportTransferData function copy the
entire packet.
</UL>
<P>
If a miniport indicates an array of packets by calling <B>NdisMIndicateReceivePacket</B>,
ownership of the packets can pass to the receiving protocol driver. Such a
miniport must provide a MiniportReturnPacket function. MiniportReturnPacket
will be called for each packet passed up to a protocol driver for which the
protocol driver returns NDIS_STATUS_PENDING in order to return ownership of
the packet resources to the miniport after the protocol has consumed the data.
Any miniport that supports multipacket receive indications:
<UL>
<LI>
Must allocate enough packet descriptors and insure that it has available
buffers while waiting for an upper layer to return previously indicated
packets. Packet descriptors must be allocated from packet pool. 
<P>
<LI>
Must allocate enough memory to contain one or more complete network packets
and buffer descriptors mapping the memory so that it can pass a packet or
packets to upper layers. Miniports that force an interested protocol to copy
received data only need a buffer to hold the received data or lookahead
buffer, which in some cases is buffer space on the NIC. Buffer descriptors
must be allocated from buffer pool.
</UL>
<P>
If a miniport uses <B>NdisM</B><I>Xxx</I><B>IndicateReceive</B>&nbsp;to indicate a
receive packet up to an upper-layer, that miniport must provide a
MiniportTransferData function. The miniport retains ownership of the memory
containing the indicated data and MiniportTransferData will be called to move
the received data from the miniport’s buffer to a packet supplied by the
receiving protocol driver. The buffer containing the received data can be
either a staging buffer or can be buffer space on the NIC.
<P>
A miniport chooses to indicate an array of packets by calling <B>NdisMIndicateReceivePacket</B>
<UL>
<LI>
If its NIC is a high performance busmaster DMA device that receives data in a
ring of buffers for which multiple packets can be allocated, filled, and
indicated up
<P>
<LI>
Or, the miniport supports passing media-specific information with incoming
packets 
<P>
In this case, the miniport must pass an entire packet, described by a packet
descriptor with an associated OOB data block, up to an interested protocol(s)
since the media-specific information is stored in the OOB block. A miniport
for a slow NIC that wants to pass media-specific information may choose the
multipacket receive technique but indicate up one-element packet arrays to
avoid queuing receives.
</UL>
<P></FONT>
</BODY>
</HTML>
