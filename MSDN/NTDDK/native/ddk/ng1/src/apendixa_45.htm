<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.9  Closing Network Interface Cards</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_A.3.9_Closing_Network_Interface_Cards_NG"></A>A.3.9  Closing Network Interface Cards</H2>
<P>
As Figure A.3.9 illustrates, a transport driver unbinds itself from a network
interface card by calling <B><A HREF="../../nr/src/appdxa_11.htm">MacCloseAdapter</A></B>
through <B><A HREF="../../nr/src/103ndisx_19.htm">NdisCloseAdapter</A></B>, with the
binding block indicated by the NDIS binding handle. The NIC driver uses <B>MacCloseAdapter</B>
to close the NIC binding, cancel the ISR, and prevent further requests to the
network interface card. Because multiple transport drivers can have open
bindings to one network interface card, the NIC driver keeps a reference count
of open handles. If any requests remain on a binding when a transport driver
calls <B>MacCloseAdapter</B>, the function returns NDIS_STATUS_PENDING,
regardless of the state of the network interface card. 
<P>
If <B>MacCloseAdapter</B>&nbsp;completes synchronously with either a success status
code or an error code, the function unlinks the binding block from the NIC and
transport driver block binding lists and dereferences these blocks. It then
deallocates the binding block and calls the operating system to dereference
the file object representing the open network interface card. The operating
system ultimately deletes the file object and returns control to the transport
driver. 
<P>
<B>MacCloseAdapter</B>&nbsp;can also be asynchronous, returning
NDIS_STATUS_PENDING. In this case, the NIC driver eventually calls <B><A HREF="../../nr/src/appdxa_66.htm">NdisCompleteCloseAdapter</A></B>,
which forwards the call to <B><A HREF="../../nr/src/104tdlow_3.htm">ProtocolCloseAdapterComplete</A></B>
for postprocessing. 
<P>
After the NIC driver has closed the NIC binding, the transport driver cannot
submit further requests on this binding. It cannot call <B><A HREF="../../nr/src/103ndisx_189.htm">NdisReset</A></B>
even if it concludes the NIC close operation has suspended and hung. 
<P>
<IMG SRC="../art/215-09.gif" BORDER=0>
<P>
<B>Figure A.3.9  Closing network interface cards </B>
<P>
It is possible for a NIC driver to close a binding for a known network
interface card malfunction. The driver does this by calling <B><A HREF="../../nr/src/104tdlow_11.htm">ProtocolStatus</A></B>
through <B><A HREF="../../nr/src/appdxa_81.htm">NdisIndicateStatus</A></B>, passing
an NDIS_STATUS_CLOSING general status code. Although this indication does not
change the behavior of the transport driver or the NIC driver, the transport
driver must call <B><A HREF="../../nr/src/103ndisx_19.htm">NdisCloseAdapter</A></B>&nbsp;as
soon as possible after receiving it. The NIC driver returns
NDIS_STATUS_ADAPTER_NOT_OPEN for any requests made by the transport driver
between the NDIS_STATUS_CLOSING indication and the call to <B>NdisCloseAdapter</B>.
<P></FONT>
</BODY>
</HTML>
