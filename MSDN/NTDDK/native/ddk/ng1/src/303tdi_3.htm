<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2.1  File Objects Represent Transport Addresses</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_File_Objects_Represent_Transport_Addresses_NG"></A>3.2.1  File Objects Represent Transport Addresses</H3>
<P>
TDI supports both <I>unreliable connectionless</I>&nbsp;and <I>reliable
connection-oriented</I>&nbsp;data transfer. 
<P>
Unreliable connectionless data can be sent to one or a group of processes that
have opened a particular transport address on a remote node. When sending
unreliable connectionless data, as <I>datagrams</I>, the sender need only
identify the target remote-node address for the process or group of processes
for them to receive each such datagram. 
<P>
Reliable connection-oriented data transfers can be sent between two processes
if an <I>endpoint-to-endpoint connection</I>&nbsp;(also called a <I>virtual circuit</I>)
has been established between them. An endpoint-to-endpoint connection is a
one-to-one association between two, and only two, processes. To establish such
a connection, one process must identify the process with which it wants to
establish the connection. Each such process must have opened a transport
address and a connection endpoint on its respective network node and
associated its connection endpoint with the open transport address. For more
information about connection endpoints, see <A HREF="303tdi_4.htm">Section
3.2.2</A>. 
<P>
The TDI entity used to identify a specific process, or a specific group of
processes is one or more open process-specific file object(s) that represent a
particular transport address. Such a file object contains transport-supplied
pointers to driver-maintained state that identifies the specific process and
the node on which that process resides. The state a &quot;routable&quot;
transport, such as TCP/IP, Mcsxns, AppleTalk and NWLink, maintains about such
an address also contains information that identifies the network (or subnet)
on which the node resides. 
<P>
Certain TDI-defined transport address types accommodate explicit or implicit
indications of whether the address identifies a single process (unique
address), or can identify a group of processes (group address). In the case of
a group address, the TDI-defined address can contain information that
identifies the specific processes, that is, the node on which the process
resides, and the network (or subnet) on which the node resides.
<P>
A number of address types are supported by TDI. The following describes the
format and usage of three commonly-used TDI address types:
<UL>
<LI>
<B>TDI_ADDRESS_NETBIOS</B>&nbsp;- The NetBIOS-type address consists of a standard
16-character NetBIOS name, and a member that indicates if the name is
registered (or to be registered) as a <I>unique</I>&nbsp;name (indicating that the
name identifies a <I>single</I>&nbsp;process), or as a <I>group</I>&nbsp;name
(indicating that the name can identify a <I>group </I>of processes). 
<P>
Since the transport driver assures that a unique name is in use by only one
process on the network at a time, such a name not only identifies the process,
it also implicitly identifies the node on which that process resides. 
<P>
If the registered name is a group name, it can be an address available to many
processes on many stations. Thus a group name identifies all processes that
registered the name as well as the nodes on which those processes reside.
<P>
<LI>
<B>TDI_ADDRESS_IP</B>&nbsp;- The IP-type address consists of a port number and a
standard Internet Protocol (IP) address. Since TCP/IP allows the same port
number to be registered by processes on many nodes, the IP address is required
to uniquely identify the node and the port number to uniquely identify the
process on that node.
<P>
For connectionless data transfer (using the TCP/IP UDP protocol), the same
port number can be registered by many processes on the same station. In
addition, certain IP addresses can be used by more than one node. Data sent to
a TDI address that consists of this type of port number and IP address will be
received by all nodes to which the IP address applies; on those nodes, the
data will be passed to all processes that have registered the specified (UDP)
port number.
<P>
<LI>
<B>TDI_ADDRESS_IPX</B>&nbsp;- The IPX-type address consists of a four-byte network
number, a six-byte node number, and a two-byte port number. Since IPX allows
the same port number to be registered by processes on many nodes, an IPX
address is required to uniquely identify the network and the node, while the
port number can be used to uniquely identify the process on that node.
</UL>
<P></FONT>
</BODY>
</HTML>
