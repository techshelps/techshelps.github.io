<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.4.1  Indicating Received Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Indicating_Received_Data_NG"></A>5.4.1  Indicating Received Data</H3>
<P>
A WAN miniport calls <B><A HREF="../../nr/src/103ndisx_143.htm">NdisMWanIndicateReceive</A></B>
to indicate that a packet has arrived and that the entire packet (there is <I>no
</I>lookahead) is available for inspection. When this call is made, NDISWAN
indicates the arrival of the packet to the ProtocolReceive handlers of bound
higher-level drivers.
<P>
Since the entire packet is <I>always</I><B>&nbsp;</B>passed up, the miniport driver
will <I>never</I>&nbsp;receive a transfer-data call (the data is copied by NDISWAN
and then passed up to the next higher driver). The entire packet is always
passed up due to compression and encryption that might have been applied to
the packet. Also, because the link is point-to-point, at least one bound
protocol will always want to look at the packet.
<P>
The data contained in the header is the same as that received on the NIC. The
NIC driver will not remove any headers or trailers from the data it receives.
The transmitting driver <I>cannot</I><B>&nbsp;</B>add padding to the packet.
<P>
A WAN miniport calls <B><A HREF="../../nr/src/103ndisx_144.htm">NdisMWanIndicateReceiveComplete</A></B>
to indicate the end of one or more receive indications so that protocols can
postprocess received packets. As a result, NDISWAN calls the
ProtocolReceiveComplete handler(s) of bound protocols to notifying each
protocol that it can now process the received data. In its receive-complete
handler, a protocol need not operate under the severe time constraints that it
does in its receive handler.
<P>
The protocol should assume that interrupts are enabled during the call to
ProtocolReceiveComplete. In an SMP machine, the receive handler and the
receive complete handler can be running concurrently on different processors.
<P>
Note that a WAN driver need not deliver <B>NdisMWanIndicateReceiveComplete</B>
indications in one-to-one correspondence with <B>NdisMWanIndicateReceive</B>
indications. It can issue a single receive-complete indication after several
receive indications have occurred. For example, a WAN miniport could call <B>NdisMWanIndicateReceiveComplete</B>
from its receive handler every ten packets or before exiting the handler,
whichever occurs first.
<P></FONT>
</BODY>
</HTML>
