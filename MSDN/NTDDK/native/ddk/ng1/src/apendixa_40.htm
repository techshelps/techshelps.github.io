<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.4  Sending Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_A.3.4_Sending_Data_NG"></A>A.3.4  Sending Data</H2>
<P>
In preparation for sending data to the network interface card, a transport
driver must create a packet that consists of data and a header. At this time,
the driver can make an optional call to <B><A HREF="../../nr/src/103ndisx_205.htm">NdisSetSendFlags</A></B>
to set the Flags field in the packet header to pass additional send
information to the NIC driver as Figure A.3.4 shows. After this, the transport
driver is ready to call <B><A HREF="../../nr/src/103ndisx_193.htm">NdisSend</A></B>, which
forwards the call to <B><A HREF="../../nr/src/appdxa_19.htm">MacSend</A></B>&nbsp;in the NIC
driver. 
<P>
In its send request to <B>MacSend</B>, the transport driver instructs the NIC
driver to transmit the passed packet through the network interface card onto
the network. <B>MacSend</B>&nbsp;translates the packet into data frames and carries
out the send operation. If necessary, the NIC driver can call <B><A HREF="../../nr/src/103ndisx_162.htm">NdisQuerySendFlags</A></B>
to retrieve additional send information. 
<P>
<B>MacSend</B>&nbsp;completes synchronously if it finishes the send operation
before it returns. The function returns a status code other than
NDIS_STATUS_PENDING for synchronous operation. 
<P>
Like <B><A HREF="../../nr/src/appdxa_14.htm">MacOpenAdapter</A></B>, <B>MacSend</B>&nbsp;can
also be asynchronous if it cannot complete the send operation before it
returns. In this case, it returns NDIS_STATUS_PENDING to the transport driver
to indicate that the packet has been queued for transmission. The NIC driver
eventually calls <B><A HREF="../../nr/src/104tdlow_10.htm">ProtocolSendComplete</A></B>
through <B><A HREF="../../nr/src/appdxa_72.htm">NdisCompleteSend</A></B>&nbsp;to allow
postprocessing. When <B>ProtocolSendComplete</B>&nbsp;returns, the transport driver
regains ownership of the packet. 
<P>
<IMG SRC="../art/215-04.gif" BORDER=0>
<P>
<B>Figure A.3.4   Sending Data </B>
<P></FONT>
</BODY>
</HTML>
