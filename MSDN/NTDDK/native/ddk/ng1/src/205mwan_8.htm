<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.3.2  Registering as a WAN Miniport</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Registering_as_a_WAN_Miniport_NG"></A>5.3.2  Registering as a WAN Miniport</H3>
<P>
A WAN NIC driver identifies itself as a WAN miniport when it registers itself.
When the miniport registers with NDIS in its <B>DriverEntry</B>&nbsp;function by
calling <B>NdisMRegisterMiniport</B>, it indicates that it requires WAN
services by setting the flag NDIS_USE_WAN_WRAPPER in the <B>Reserved</B>
member of the NDIS_WAN_MINIPORT_CHARACTERISTICS structure.
<P>
Following execution of the <B>DriverEntry</B>&nbsp;function and after
MiniportInitialize has completed the initialization of one or more adapters,
the NDISWAN driver calls the WAN miniport’s MiniportQueryInformation function,
with an OID_WAN_GET_INFO request. A miniport that is TAPI-capable should set
the TAPI_PROVIDER bit of the <B>FramingBits</B>&nbsp;member of the NDIS_WAN_INFO
structure passed into this call. This lets the miniport receive the TAPI OIDs
necessary to set up, use, and tear down TAPI connections. 
<P>
A WAN miniport that provides its own framing should set the PASS_THROUGH_MODE
bit. If this bit is set, NDISWAN passes frames, uninterpreted and unmodified.
<P></FONT>
</BODY>
</HTML>
