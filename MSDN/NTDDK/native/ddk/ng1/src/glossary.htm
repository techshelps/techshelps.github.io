<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Network Glossary</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_Network_Glossary_NG"></A>Network Glossary</H1>
<H3><A NAME="DDK_A_NG"></A>A</H3>
<P>
<A NAME="DDK_A_C_access_control__NG"></A><B>A/C</B>&nbsp;(access control)
<P>
Refers to token ring frames. 
<P>
<A NAME="DDK_ACE_NG"></A><B>ACE</B>
<P>
&nbsp; &nbsp; 1.&#09;access control entry 
<P>
An ACE is an individual entry in an ACL. An ACE contains a SID and describes
the access rights a particular user or group of users has to a system
resource. The set of all ACEs on an object are used to determine whether an
access request to the object is granted. See also <I>security descriptor</I>. 
<P>
&nbsp; &nbsp; 2.&#09;advanced computing environment 
<P>
A consortium of hardware and software companies formed to promote an open
computing environment. Windows NT is one of the original ACE operating
systems. 
<P>
<A NAME="DDK_ACL_access_control_list__NG"></A><B>ACL</B>&nbsp;(access control list)
<P>
An ordered list of ACEs. 
<P>
<A NAME="DDK_address_object_NG"></A><B>address object</B>
<P>
The context collection associated with a local transport driver address. An
address object is associated with a file object so several clients can open
the same address object. The address object implicitly provides the local
addressing information for a connection endpoint. 
<P>
<A NAME="DDK_APC_asynchronous_procedure_call__NG"></A><B>APC</B>&nbsp;(asynchronous
procedure call) 
<P>
An APC is a Kernel-defined control object representing a procedure that is called asynchronously. APCs are thread-context dependent; that is, they are queued to a particular thread for execution.<BR>
There are three different kinds of APCs in Windows NT: 
<P>
&nbsp; &nbsp; 1.&#09;User APCs <FONT FACE="Symbol">&#190;</FONT> These APCs are used by
certain asynchronous Windows NT system services to allow user-mode
applications or protected subsystems to synchronize the execution of a thread
with the completion of an operation or the occurrence of an event such as a
timer’s expiration. User APCs are, by default, disabled. That is, they are
queued to the user-mode thread, but they are not executed except at
well-defined points in the program. Specifically, they can only be executed
when an application or protected subsystem has called a wait service and has
enabled alerts to occur, or if it has called the test-alert service. 
<P>
&nbsp; &nbsp; 2.&#09;Kernel APCs <FONT FACE="Symbol">&#190;</FONT> These APCs are
normal kernel-mode APCs. They are much like a normal user APC except they are
executable by default. That is, they are enabled except when the thread is
already executing a kernel APC. (Note that a special always kernel preempts
these.) 
<P>
&nbsp; &nbsp; 3.&#09;Special Kernel APCs <FONT FACE="Symbol">&#190;</FONT> These APCs
cannot be blocked except by running at a raised IRQL. They are executed at
APC_LEVEL IRQL (see <I>IDT</I>), in kernel mode. These types of APCs are used
by the system to force a thread to execute a procedure in the thread’s
context. An example of this is I/O completion: the I/O Manager needs to get
back into the context of the original requestor of the I/O operation so it can
copy buffers, and so forth. In order to do this, the I/O Manager must be able
to access the virtual address space of the thread/process, and the most
efficient way to complete the operation is to be in the calling thread’s
context. 
<P></FONT>
</BODY>
</HTML>
