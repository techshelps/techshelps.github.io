<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.9  Status Indications in an Intermediate Driver</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Status_Indications_in_an_Intermediate_Driver_NG"></A>1.9  Status Indications in an Intermediate Driver </H2>
<P>
An intermediate driver is required to supply a ProtocolStatus function and a
ProtocolStatusComplete function. NDIS calls ProtocolStatus when an underlying
NIC driver calls <B><A HREF="../../nr/src/103ndisx_108.htm">NdisMIndicateStatus</A></B>
to report a change in its hardware status. ProtocolStatus is called when the
status change begins. If the action indicated by the status message is not
complete when ProtocolStatus is called, <B><A HREF="../../nr/src/103ndisx_109.htm">NdisMIndicateStatusComplete</A></B>
is subsequently called by the underlying NIC driver. When this occurs,
ProtocolStatusComplete is called to carry out any postprocessing for the
status change. Examples of <I>GeneralStatus</I>&nbsp;reported to ProtocolStatus
include:
<UL>
<LI>
NDIS_STATUS_CLOSING. This status and the actions of ProtocolStatus is
discussed in <A HREF="301int_14.htm">Section
1.7</A>. 
<P>
<LI>
NDIS_STATUS_RESET_START and NDIS_STATUS_RESET_END. Both these are reported to
both ProtocolStatus and ProtocolStatusComplete as explained in <A HREF="301int_13.htm">Section
1.8</A>.
<P>
<LI>
NDIS_STATUS_LINE_UP, if the intermediate driver is layered over a WAN-capable
NIC driver that has established a connection with a remote node. See Part 2, <A HREF="205mwan.htm">Chapter
5</A>&nbsp;and <A HREF="206tapi.htm">Chapter
6</A>, for more information on WAN drivers.
<P>
<LI>
NDIS_STATUS_RING_STATUS, for which <I>StatusBuffer</I>&nbsp;provides more detailed
information, for instance on problems specific to a Token Ring medium.
</UL>
<P>
When an intermediate driver receives a status indication, it indicates it up
to the higher level driver(s) by calling <B>NdisIndicateStatus</B>&nbsp;<I>only</I>
if the status indication causes the intermediate driver to change its internal
state in a way that affects the operation of its Miniport<I>Xxx</I>&nbsp;functions.
That is, if the status indicated to the intermediate driver causes the driver
to fail sends or requests, it can pass the status indication to the higher
level driver(s) which presumably will then hold off on submitting sends and
requests. If, however, the intermediate driver continues to accept sends and
requests, perhaps queuing them internally, it need not pass the status
indication up. 
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
