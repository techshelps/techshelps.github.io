<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.1.3.6  CheckForHang Handler</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_CheckForHang_Handler_NG"></A>3.1.3.6  CheckForHang Handler</H4>
<P>
A miniport optionally supplies a MiniportCheckForHang function when it calls <B><A HREF="../../nr/src/103ndisx_125.htm">NdisMRegisterMiniport</A>.</B>
If a miniport does not register such a handler, it relies on NDIS to detect
that its NIC is hung.
<P>
If a miniport supplies a MiniportCheckForHang function, this function will be
called, by default, every two seconds or at a driver-requested timeout
interval. The miniport’s MiniportCheckForHang function determines if its
hardware is hung. MiniportCheckForHang returns TRUE if it detects that the NIC
is hung, otherwise it returns FALSE.
<P>
If a miniport does not register a MiniportCheckForHang function, NDIS
concludes that a miniport is hung if:
<UL>
<LI>
A send packet has been pending longer than twice the timeout period. The
miniport was passed a packet to send, it returned NDIS_STATUS_PENDING, and did
not call <B><A HREF="../../nr/src/103ndisx_127.htm">NdisMSendComplete</A></B>&nbsp;for the
pending packet in a period equal to twice the timeout period.
<P>
<LI>
A request sent to MiniportQueryInformation or MiniportSetInformation has not
completed in a period equal to twice the timeout period.
</UL>
<P>
When a miniport calls <B>NdisMSendComplete</B>, NDIS updates its internal
state information it keeps to track pending sends so that it does not
incorrectly conclude that a NIC is hung.
<P>
A NIC driver can change the default behavior of NDIS with respect to timeout
in several ways by calling <B><A HREF="../../nr/src/103ndisx_130.htm">NdisMSetAttributesEx</A></B>
rather than <B><A HREF="../../nr/src/103ndisx_129.htm">NdisMSetAttributes</A></B>&nbsp;in
its MiniportInitialize function. By calling <B>NdisMSetAttributesEx</B>, the
miniport can:
<UL>
<LI>
Change the default two-second timeout interval to a driver-specified interval.
NDIS will call the driver’s MiniportCheckForHangHandler at this new interval.
Miniports for slow NICs can call <B>NdisMSetAttributesEx</B>&nbsp;to lengthen the
timeout period to match the device’s real behavior. This also changes the
timeout period used by NDIS internally.
<P>
<LI>
Specify that NDIS ignore packet timeout altogether.
<P>
<LI>
Specify that NDIS ignore request timeout altogether.
</UL>
<P>
If the miniport specifies that NDIS should ignore packet timeout and request
timeout, the miniport is responsible for detecting when a NIC is hung.
<P>
Since <B>NdisMSetAttributesEx</B>&nbsp;must be called in MiniportInitialize, this
is the only time that a driver can change the default behavior of NDIS with
respect to timeouts.
<P>
If MiniportCheckForHang returns TRUE, or if a send or a request has pended
more than twice the timeout period, NDIS calls MiniportReset.
<P></FONT>
</BODY>
</HTML>
