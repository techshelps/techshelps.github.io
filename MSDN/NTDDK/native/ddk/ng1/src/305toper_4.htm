<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.4  Setting and Querying Information</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Setting_and_Querying_Information_NG"></A>5.4  Setting and Querying Information</H2>
<P>
Figure 5.4 shows how a TDI client can make queries about the features of its
underlying transport or request its underlying transport to set its state data
to client-specified values. 
<P>
<IMG SRC="../art/426-08.gif" BORDER=0>
<P>
<B>Figure 5.4    Setting and Querying Information in the Transport</B>
<P>
A TDI client can query certain transport driver information, such as
connection-status information, activity on a particular transport address,
transport-specific limits on datagram size and number, driver statistics, and
internal send/receive buffer sizes if the transport buffers data internally. A
client also can set some state information in the underlying transport,
although it cannot override the underlying transport-determined values for
certain size limits by issuing set-information requests. 
<P>
If a client wants to query information concerning an open transport address or
a connection endpoint, it submits a <A HREF="../../nr/src/22ioctl_8.htm">TDI_QUERY_INFORMATION</A>
request, set up with <B><A HREF="../../nr/src/24bldmac_11.htm">TdiBuildQueryInformation</A></B>,
to the underlying transport. When it uses this macro, the client passes
pointers to the file object that represents the address or connection endpoint
and to a client-supplied buffer in which the transport returns the requested
information.
<P>
To set transport information, the client issues a <A HREF="../../nr/src/22ioctl_14.htm">TDI_SET_INFORMATION</A>
request, set up with <B><A HREF="../../nr/src/24bldmac_17.htm">TdiBuildSetInformation</A></B>.
<P>
For each of these operations, the client also passes a system-defined
TDI_QUERY_<I>XXX</I>&nbsp;value as the <I>QType</I>&nbsp;or <I>SType</I>&nbsp;parameter to
the <B>TdiBuild..Information</B>&nbsp;macros to discriminate among the types of
information that can be queried and set. 
<P>
To query or set information that does not specifically concern an address or a
connection endpoint, a client first must open a control channel in the TDI
driver before submitting its query/set-information request(s). For example, a
client querying information about the underlying transport&#39;s broadcast
address for connectionless-data transmission or the transport&#39;s current
statistics uses a control channel.
<P>
To open a control channel, the client calls <B>ZwCreateFile</B>&nbsp;with a NULL <I>EaBuffer</I>
pointer. The client&#39;s call to <B>ZwCreateFile</B>&nbsp;causes the I/O Manager
to create a client-process-specific file object to represent the control
channel and to call its underlying transport’s <A HREF="../../nr/src/21tddisp_3.htm">TdiDispatchCreate</A>
routine with an IRP containing the client-supplied parameters to <B>ZwCreateFile</B>.
TdiDispatchCreate notes the absence of EA information, and the transport sets
up internal state for the open control channel and for this client if the call
succeeds. 
<P>
As an alternative for opening a file object that represents a control channel,
the client can call <B>IoGetDeviceObjectPointer</B>, which returns pointers to
the named device object and corresponding file object. 
<P>
After <B>ZwCreateFile</B>&nbsp;returns a file handle to the client and the client
has obtained a pointer to the file object with <B>ObReferenceObjectByHandle</B>,
it is ready to make certain types of TDI_QUERY_INFORMATION or
TDI_QUERY_SET_INFORMATION IOCTL requests to its underlying transport. 
<P>
When its query- and/or set-information operations are complete, the client
must close the open control channel by passing the file handle that was
returned by <B>ZwCreateFile</B>&nbsp;to <B>ZwClose</B>&nbsp;or passing the file object
pointer that was returned by <B>IoGetDeviceObjectPointer</B>&nbsp;to <B>ObDereferenceObject</B>,
as described later in <A HREF="305toper_13.htm">Section
5.13</A>. 
<P></FONT>
</BODY>
</HTML>
