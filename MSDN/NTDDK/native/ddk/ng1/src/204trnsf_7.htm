<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.4.3  Packet Ownership</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Packet_Ownership_NG"></A>4.4.3  Packet Ownership</H3>
<P>
A miniport can complete a send synchronously by returning NDIS_STATUS_SUCCESS,
by returning NDIS_STATUS_FAILURE, or by returning a driver-determined status.
In all these cases, the miniport relinquishes ownership of the packet(s) after
it returns from its MiniportSendPackets or MiniportSend function.
<P>
If a miniport does not have the available internal resources to accept and
process a send packet, it can return NDIS_STATUS_RESOURCES. In this case, the
miniport also temporarily relinquishes ownership of the packet(s) for which it
returns this status. NDIS will resubmit the send request for this and, if an
array of packets was submitted, for all subsequent packets in the same array,
when the miniport calls either of the following:
<UL>
<LI>
<B><A HREF="../../nr/src/103ndisx_127.htm">NdisMSendComplete</A></B>&nbsp;to notify NDIS
that it has completed a previously submitted send.
<P>
<LI>
<B><A HREF="../../nr/src/103ndisx_128.htm">NdisMSendResourcesAvailable</A></B>
to notify NDIS that the miniport now has available resources to accept a send
request.
</UL>
<P>
If the miniport has the resources to send a packet but cannot complete the
send immediately, it returns NDIS_STATUS_PENDING. In this case, the miniport:
<UL>
<LI>
Retains ownership of the packet.
<P>
<LI>
Must call <B>NdisMSendComplete</B>&nbsp;when it completes the transmit operation,
passing the status of the operation as the <I>Status</I>&nbsp;parameter to the
call. When the miniport calls <B>NdisMSendComplete</B>, passing a pointer to
the completed packet, it gives up ownership and must not make any further
references to the packet. Ownership reverts to the protocol driver that
originally allocated the packet.
</UL>
<P>
If a miniport implements a MiniportSendPackets function, and returns
NDIS_STATUS_PENDING for any of the packets, it must call <B>NdisMSendComplete</B>
once for each such packet. 
<P></FONT>
</BODY>
</HTML>
