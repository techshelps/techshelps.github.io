<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4.1.5  Interrupt Handling</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_A.4.1.5_Interrupt_Handling_NG"></A>A.4.1.5  Interrupt Handling</H3>
<P>
A driver that can run on an SMP machine must be designed such that shared
resources are protected when concurrently executing threads may access the
same resources simultaneously. 
<P>
If two driver functions (or the same function executing on two CPUs) execute
at the same IRQL and they share data, that data may be protected with a spin
lock. The spin lock is acquired by calling <B><A HREF="../../nr/src/103ndisx_6.htm">NdisAcquireSpinLock</A></B>
and released by calling <B><A HREF="../../nr/src/103ndisx_187.htm">NdisReleaseSpinLock</A></B>.
<P>
If a driver manages a NIC that interrupts, and any nonISR function of that
driver shares data with the ISR of that driver, access to the shared data must
be synchronized. Before a nonISR function accesses the shared data, it must
call <B><A HREF="../../nr/src/appdxa_104.htm">NdisSynchronizeWithInterrupt</A></B>
which synchronizes execution of a caller-supplied routine with execution of
the ISR. <B>NdisSynchronizeWithInterrupt</B>&nbsp;temporarily raises the IRQL of
the nonISR function supplied routine to that of the ISR so that the access to
the shared resources can be serialized. The driver must be designed so that
the synchronization routine executes as quickly as possible. 
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
