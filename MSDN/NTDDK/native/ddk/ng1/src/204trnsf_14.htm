<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.6.4  Cache Considerations for Receiving Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Cache_Considerations_for_Receiving_Data_NG"></A>4.6.4  Cache Considerations for Receiving Data</H3>
<P>
If a miniport allocates cached memory, it must do the following:
<UL>
<LI>
Make receive buffers cache-aligned.
<P>
<LI>
Flush the cache before starting the receive by calling <B><A HREF="../../nr/src/103ndisx_36.htm">NdisFlushBuffer</A></B>
and <B><A HREF="../../nr/src/103ndisx_142.htm">NdisMUpdateSharedMemory</A></B>.
</UL>
<P>
A miniport that manages a busmaster DMA device receives data into memory
shared with the NIC. The miniport must ensure that incoming data is present in
shared memory (not in processor cache) before it begins to read that data. To
accomplish this, the miniport for such a DMA device must call <B>NdisFlushBuffer</B>
and <B>NdisMUpdateSharedMemory</B>&nbsp;for instance in its MiniportHandleInterrupt
function, before indicating the receive or otherwise causing a read of the
data.
<P>
A miniport must also prevent cache-line tearing by allocating cache-aligned
memory for receive buffers. If a miniport allocates a large block of memory
from which it reallocates smaller buffers for received data, the start of each
receive buffer must be cache-aligned so that the buffers do not cross cache
blocks. A miniport calls <B><A HREF="../../nr/src/103ndisx_45.htm">NdisGetCacheFillSize</A></B>
during initialization and saves this value in its adapter-specific context
area. The miniport uses this value to round up the size of a receive buffer to
a cache-line size or a multiple of that size when it allocates such a buffer.
The miniport must also use the cache block size to calculate where in the
preallocated block of memory to begin allocating receive buffers. 
<P>
In general, a miniport for a busmaster DMA NIC should allocate cached shared
memory, a faster and more available resource. There are two cases where a
miniport must use noncached memory.
<UL>
<LI>
If the NIC managed by the miniport receives consecutive packets into
immediately adjacent memory, the end of one packet can occupy the same cache
block as the start of the next packet. Therefore, the miniport must allocate
noncached memory because reading the first packet can cause stale cache data
for the start of the second one.
<P>
<LI>
If releasing the buffers involves writing to them, for instance, if the
receive buffer is contiguous with a header that contains an ownership bit
indicating whether the buffer belongs to the adapter or to the miniport, the
adapter may write to that bit before releasing the buffer. A miniport that
uses such a technique must allocate these buffers from noncached memory.
</UL>
<P></FONT>
</BODY>
</HTML>
