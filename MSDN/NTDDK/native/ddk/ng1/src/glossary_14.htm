<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>S</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_S_NG"></A>S</H2>
<P>
<A NAME="DDK_SACL_system_access_control_list__NG"></A><B>SACL</B>&nbsp;(system access
control list)
<P>
A part of the Windows NT security descriptor for an object, used to maintain
per object auditing information. See also <I>security descriptor</I>, <I>ACE</I>,
and <I>ACL</I>. 
<P>
<A NAME="DDK_SAP_service_access_point__NG"></A><B>SAP</B>&nbsp;(service access point)
<P>
<A NAME="DDK_security_descriptor_NG"></A><B>security descriptor</B>
<P>
A data structure used to hold per-object security information, including the
object’s owner, group, protection attributes, and audit information. See also <I>ACE</I>,
<I>ACL</I>, <I>SACL</I>, and <I>SID</I>. 
<P>
<A NAME="DDK_SID_security_identifier__NG"></A><B>SID</B>&nbsp;(security identifier)
<P>
A value, unique across time and space, that identifies a process in the
Security system. SIDs can either identify an individual process, usually
containing a user’s logon identifier, or a group of processes. 
<P>
<A NAME="DDK_SMP_machine_symmetric_multiprocessor_machine__NG"></A><B>SMP machine</B>
(symmetric multiprocessor machine)
<P>
See <I>multiprocessor machine</I>. 
<P>
<A NAME="DDK_SNAP_sub_network_access_protocol__NG"></A><B>SNAP</B>&nbsp;(sub-network
access protocol)
<P>
<A NAME="DDK_SONIC_systems_oriented_network_interface_controller__NG"></A><B>SONIC</B>
(systems-oriented network interface controller)
<P>
SONIC or Sonic 
<P>
<A NAME="DDK_spin_lock_NG"></A><B>spin lock</B>
<P>
A spin lock is a low-level, synchronization mechanism defined by the Windows
NT Kernel. A driver or any other kernel-mode component that runs at raised
IRQL can use a spin lock to synchronize access to a shared resource,
particularly in a multiprocessor machine. 
<P>
When one routine holds a spin lock, a second routine running on another
processor cannot access the resource protected by that spin lock until it
acquires the lock. While a routine attempts to acquire a spin lock, it cannot
carry out other operations (it <I>spins</I>) until the lock has been acquired.
<P>
Operations involving system-defined spin locks are IRQL-specific to help
prevent deadlocks: an interrupt spin lock can only be acquired while executing
at a DIRQL of the associated interrupt object(s); an executive spin lock can
only be acquired while executing at the highest IRQL (usually DISPATCH_LEVEL)
of any routine that can acquire that executive spin lock. 
<P>
<A NAME="DDK_STREAMS_NG"></A><B>STREAMS</B>
<P>
A network communication environment based on UNIX STREAMS. Windows NT STREAMS
facilitates the porting of existing stream transport drivers to Windows NT. 
<P>
<A NAME="DDK_SVR4_NG"></A><B>SVR4</B>
<P>
System V, Release 4 (UNIX). 
<P></FONT>
</BODY>
</HTML>
