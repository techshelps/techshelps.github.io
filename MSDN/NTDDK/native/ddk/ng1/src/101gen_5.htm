<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.3  Windows NT Network Driver Operating Environment</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Windows_NT_Network_Driver_Operating_Environment_NG"></A>1.3  Windows NT Network Driver Operating Environment</H2>
<P>
In Windows NT, the various network software components are linked together, or
<I>bound,</I>&nbsp;in a logical hierarchy. For example, each transport driver can
be bound to one or several network adapters (through associated NIC drivers).
Higher level network components, such as the Windows NT redirector and server,
can be bound to one or several transport drivers.
<P>
When network components are installed, information is written to the Windows
NT configuration registry that describes the order in which the network
components should be loaded, and how those network components are to be bound
together. The application that manages the network component installation and
binding is the Windows NT network control panel application (NCPA).
<P>
When the NCPA is used to install a network component, such as a transport or
NIC driver, it looks for a special file called an .<I>inf</I>&nbsp;file in the
user-specified path. If the component being installed does not ship with
Windows NT, the NCPA will locate, load, and run the file <I>oemsetup.inf</I>.
A network driver developer must provide such a file, which is a script that
performs several component installation functions, including the following:
<UL>
<LI>
Establish a <I>Manufacturer Name</I>&nbsp;registry key under <B>HKEY_LOCAL_MACHINE\SOFTWARE</B>,
create a <I>CurrentVersion</I>\<B>NetRules</B>&nbsp;subkey, and write the
component’s <I>binding rules</I>&nbsp;under this subkey.
<P>
<LI>
Establish a second registry key for the component under <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services</B>,
create <I>Parameters</I>&nbsp;and other needed subkeys, and write the component’s
configuration information under this subkey.
<P>
<LI>
Copy all component related files to the appropriate system directories.
</UL>
<P>
When the <I>inf</I>&nbsp;script completes, NCPA will perform a <I>binding analysis</I>
to determine how the various components are to be bound. This analysis uses a
combination of binding rules compiled from the system default <I>RawRules</I>
value stored in the registry under <B>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ncpa\</B><I>CurrentVersion</I>\<B>RawRules</B>
and the values contained in the <I>NetRules</I>&nbsp;subkeys of all installed
network components.
<P>
<I>RawRules</I>&nbsp;defines default binding rules that apply before any
component-specific <I>NetRules</I>&nbsp;are considered. <I>RawRules</I>&nbsp;includes
the following value entries:
<UL>
<LI>
<B>devClass</B>&nbsp;defines classes that include an NDIS NIC driver (<I>ndisdriver</I>),
an NDIS aware transport driver (<I>ndisTransport</I>), a NetBIOS transport
driver (<I>netBiosTransport</I>) as a subclass of <I>ndisTransport</I>, and an
NT network service (<I>LmNetService</I>), such as the NT redirector or server.
<P>
<LI>
<B>bindable</B>&nbsp;indicates that <I>ndisTransport</I>&nbsp;class components can bind
downward to <I>ndisDriver</I>&nbsp;class components, and <I>LmNetService</I>&nbsp;class
components can bind downward to <I>netBiosTransport</I>&nbsp;class components.
</UL>
<P>
The <I>NetRules</I>&nbsp;define component-specific <I>extensions</I>&nbsp;to the binding
rules established by <I>RawRules</I>. These rules are defined by the component
developer. <I>NetRules</I>&nbsp;value-data items include:
<UL>
<LI>
<B>class</B>&nbsp;allows a component to define one or more new component classes.
<P>
<LI>
<B>bindable </B>allows a component to define more possible binding
combinations.
<P>
<LI>
<B>type </B>specifies to which class (or classes) this component belongs. This
critical information element enables the NCPA to determine where this
component fits into the binding hierarchy.
</UL>
<P>
The NCPA compiles all of the binding rules (<I>RawRules</I>&nbsp;combined with all
the <I>NetRules</I>&nbsp;for individual components) and analyzes them to determine
how all the network components should be bound together. When this process is
complete, the NCPA uses the resulting information to create (or update) the
registry  <I>Linkage</I>&nbsp;subkey (<B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\</B><BR>
<I>&lt;network component name&gt;</I>\<B>Linkage)</B>&nbsp;of each network
component. The NCPA includes the following value-data items to each
component’s <I>Linkage</I>&nbsp;subkey:
<UL>
<LI>
<B>Bind</B>&nbsp;lists the device name of the network components to which <I>this</I>
component will bind.
<P>
<LI>
<B>Export</B>&nbsp;lists the device names that should be added to the Windows NT
object namespace to enable access to this component. This line contains one
device name per component to which <I>this</I>&nbsp;component is downwardly bound.
<P>
<LI>
<B>Route</B>&nbsp;contains a list of strings where each data string in this value
item indicates the exact path through the network component stack represented
by the binding.
</UL>
<P>
The NCPA binding engine creates <I>all possible</I>&nbsp;bindings as directed by
the binding rules. After the binding process completes and control is returned
to the user, the user can use the NCPA <I>Bindings</I>&nbsp;dialog box to view the
resulting network component bindings and, if desired, manually disable (and
later re-enable) selected bindings. Using the NCPA <I>Bindings</I>&nbsp;dialog to
disable a binding causes the associated entry to be removed from the registry <I>Linkage</I>
key  <B>Bind</B>&nbsp;value of the selected component.
<P>
At system boot, the Windows NT Service Controller (loader) uses registry
information to load the network components according to the binding
hierarchy<FONT FACE="Symbol">&#190;</FONT>from bottom to top. As each network
component is loaded, it is given an opportunity to initialize. During the
initialization process, the component can read its registry <I>Linkage</I>&nbsp;key
<B>Bind</B>&nbsp;value to discover which lower-level components are available, and
bind to those components. 
<P>
For more information about the Windows NT binding method, see later chapters
in this section that discuss network component bindings.
<P>
<IMG SRC="../art/102-01.gif" BORDER=0>
<P>
<B>Overview of Driver Binding</B>
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
