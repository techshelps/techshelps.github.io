<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.1  Opening a Transport Address</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Opening_a_Transport_Address_NG"></A>5.1  Opening a Transport Address</H2>
<P>
Figure 5.1 shows how a kernel-mode client opens a transport address in its
underlying transport driver.
<P>
<IMG SRC="../art/426-02.gif" BORDER=0>
<P>
<B>Figure 5.1    Opening a Transport Address</B>
<P>
A TDI client usually begins communicating with its local-node transport by
opening a file object that represents a transport address. To do this, the
client calls <B>ZwCreateFile</B>, passing the address specification in the EA
(extended attributes) buffer parameter to <B>ZwCreateFile</B>. Within the EA
buffer, the client sets the <B>EaName</B>&nbsp;member to the system-defined value <B>TdiTransportAddress</B>
followed by an EA value of the TDI-defined type <A HREF="../../nr/src/26tdstrc_29.htm">TRANSPORT_ADDRESS</A>,
set up by the client to specify the transport-specific address to be opened. 
<P>
The client can specify that a particular transport address be either sharable
with other clients or exclusive to the client when it calls <B>ZwCreateFile</B>.
The initial client to successfully open a particular transport address for
exclusive use prevents other clients from opening the same address until the
original client closes that address. 
<P>
To do subsequent connectionless communication over the network, the client can
specify the underlying transport&#39;s broadcast address in the EA buffer,
assuming the transport supports broadcast datagrams. Such an address cannot be
opened for exclusive use by any client. 
<P>
The client&#39;s call to <B>ZwCreateFile</B>&nbsp;causes the I/O Manager to create
a client-process-specific file object to represent the address and to call the
TDI transport driver’s <A HREF="../../nr/src/21tddisp_3.htm">TdiDispatchCreate</A>
routine with an IRP containing the client-supplied parameters to <B>ZwCreateFile</B>.
TdiDispatchCreate parses the EA information, and the transport sets up
internal state for the open address and for this client if the call succeeds. 
<P>
After <B>ZwCreateFile</B>&nbsp;returns a file handle to the client and the client
has obtained a pointer to the file object with <B>ObReferenceObjectByHandle</B>,
it is ready to make certain TDI_<I>XXX</I>&nbsp;IOCTL requests to its underlying
transport. For example, the client can send or receive datagrams on such an
open address.  
<P>
Usually, a client must first decide whether to register one or more of its
ClientEvent<I>Xxx</I>&nbsp;handlers and whether it will use the open address to
communicate with a remote-node peer process, in which case the client also
must open a connection endpoint.   
<P>
If the client wants to receive notifications of various network events, it can
register its ClientEvent<I>Xxx</I>&nbsp;handler for each type of event by
submitting one or more <A HREF="../../nr/src/22ioctl_13.htm">TDI_SET_EVENT_HANDLER</A>
requests, set up with <B><A HREF="../../nr/src/24bldmac_16.htm">TdiBuildSetEventHandler</A></B>,
to the underlying transport. For more information about setting up IOCTL
requests and submitting them to an underlying transport, see <A HREF="305toper_3.htm">Section
5.3</A>.
<P>
After the client has registered its ClientEvent<I>Xxx</I>&nbsp;handlers, if any, on
the open transport address, it is ready to make preparations for
connection-oriented communication by opening a connection endpoint, as
described in <A HREF="305toper_2.htm">Section 5.2</A>, or to
begin connectionless communication, as described in <A HREF="305toper_7.htm">Section
5.7</A>. 
<P>
When it is done with network communications on the opened transport address,
the client must close the file object that represents that transport address
by calling <B>ZwClose</B>&nbsp;with the handle returned by <B>ZwCreateFile</B>, as
described later in <A HREF="305toper_13.htm">Section
5.13</A>. 
<P></FONT>
</BODY>
</HTML>
