<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.12  Line-Up Indication</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Line_Up_Indication_NG"></A>6.12  Line-Up Indication</H2>
<P>
From the telephony standpoint, the life of a call is a series of state
transitions. For outgoing calls, a typical sequence of states might be:
dialing, proceeding, ringing, connected, disconnected, and finally, idle. For
an incoming call, this sequence might look as follows: offering, ringing,
connected, disconnected, and finally, idle. In either case, the transition to
the connected state is of particular interest, since this is the state in
which data can flow across the wire.
<P>
A WAN miniport calls <B>NdisMIndicateStatus</B>&nbsp;with a <I>GeneralStatus</I>
value of NDIS_STATUS_WAN_LINE_UP to indicate that a new data channel has
become active. The buffer at <I>StatusBuffer</I>&nbsp;is formatted as an <B><A HREF="../../nr/src/106nstru_3.htm">NDIS_MAC_LINE_UP</A></B>
structure. Prior to indicating a line up, the adapter will accept frames and
can let them succeed or fail, but it is unlikely that such packets will
actually be received by any remote system. Before a line-up indication,
protocols are encouraged to reduce their timers and retry counts so that any
outgoing connection attempts quickly fail. 
<P>
An NDIS_STATUS_WAN_LINE_UP status must be completed prior to returning from
the OID_TAPI_GET_ID request. The <B>NdisLinkContext</B>&nbsp;returned from the
NDIS_STATUS_WAN_LINE_UP indication is passed back in the NDIS_TAPI_GET_ID
structure as the <B>DeviceID</B>.
<P>
The NDIS_STATUS_WAN_LINE_UP must also be completed prior to indicating the
LINECALLSTATE_CONNECTED to NDISWAN. Otherwise, the user-mode client of the
connection might attempt to send data on a connection before NDISWAN is aware
of the line. 
<P>
When the line-up indication completes, NDISWAN and the miniport have exchanged
handles, one that NDISWAN uses to subsequently direct send packets onto a data
channel and the other that the miniport uses to identify the correct data
channel for sends and in any status indications it makes to NDISWAN. Before
NDISWAN gets a line-up indication and establishes a data channel for a
particular call instance, it will not pass send packets on to the miniport’s
MiniportWanSend function. 
<P>
A miniport indicates a line-up status in the context of an OID_TAPI_GET_ID
request if either of the following occurs:
<UL>
<LI>
The <B>ulSelect</B>&nbsp;member of NDIS_TAPI_GET_ID structure is set to
LINECALLSELECT_CALL, and 
<P>
<LI>
This request is the first OID_TAPI_GET_ID request for the <B>hdCall</B>&nbsp;member
of the NDIS_TAPI_GET_ID structure 
</UL>
<P>
or
<UL>
<LI>
The <B>ulSelect</B>&nbsp;member of NDIS_TAPI_GET_ID structure is set to
LINECALLSELECT_CALL, and 
<P>
<LI>
This request is <I>not</I>&nbsp;the first OID_TAPI_GET_ID request for the <B>hdCall</B>
member of the NDIS_TAPI_GET_ID structure, but the <B>DeviceClass</B>&nbsp;is
different from any previous get-id request for this call instance, and
<P>
<LI>
The miniport supports separate data channels for different device classes.
</UL>
<P>
The <I>StatusBuffer</I>&nbsp;passed to <B>NdisMIndicateStatus</B>&nbsp;should point to a
buffer of type NDIS_MAC_LINE_UP. This structure has the following definition:
<P>
<B>typedef struct _NDIS_MAC_LINE_UP {</B><BR>
&nbsp; &nbsp; <B>IN ULONG</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>LinkSpeed;</B><BR>
&nbsp; &nbsp; <B>IN NDIS_WAN_QUALITY</B>&nbsp; &nbsp; &nbsp;<B>Quality;</B><BR>
&nbsp; &nbsp; <B>IN USHORT</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>SendWindow;</B><BR>
&nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>ConnectionWrapperID;</B><BR>
&nbsp; &nbsp; <B>IN NDIS_HANDLE</B>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <B>NdisLinkHandle;</B><BR>
&nbsp; &nbsp; <B>IN OUT NDIS_HANDLE</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>NdisLinkContext;</B><BR>
<B>} NDIS_MAC_LINE_UP, *PNDIS_MAC_LINE_UP;</B>
<P>
The WAN miniport NIC driver should set the value of the <B>ConnectionWrapperID</B>
member in the NDIS_MAC_LINE_UP structure to that of the <B>htCall</B>&nbsp;(the
TAPI call handle) associated with the call because it is guaranteed to be
unique across all telephony-capable miniports. The <B>ConnectionWrapperID</B>
is valid until the miniport issues a line-down indication.
<P>
The <B>NdisLinkHandle</B>&nbsp;represents the miniport’s handle for this data
channel on this call instance. Typically it references the state the miniport
maintains for this call. NDISWAN will retain this handle and return it to the
miniport on any sends on this data channel. The <B>NdisLinkContext</B>&nbsp;is set
to NULL when the miniport calls <B>NdisMIndicateStatus</B>. It will be set to
a value supplied by NDISWAN before returning from <B>NdisMIndicateStatus</B>.
This opaque handle must be retained by the miniport and supplied in subsequent
calls to NDISWAN regarding this link, for instance to <B><A HREF="../../nr/src/103ndisx_143.htm">NdisMWanIndicateReceive</A></B>.
<P>
The <B>NdisLinkContext</B>&nbsp;<I>must</I>&nbsp;be returned in the <B>DeviceID</B>
member of NDIS_TAPI_GET_ID when MiniportQueryInformation returns from the
OID_TAPI_GET_ID request. This context binds the call connection and the device
class as seen by NDISTAPI with a handle that NDISWAN recognizes and has tied
to a particular data channel. NDISWAN uses this handle to ensure that packets
from a TAPI client are directed by NDISWAN to the correct miniport data
channel.
<H4>Changing the Send Window</H4>
<P>
The <B>SendWindow</B>&nbsp;member of the NDIS_MAC_LINE_UP structure specified in a
line-up indication acts as a throttle, controlling how many packets NDISWAN
passes to a MiniportWanSend function for a particular line before it starts
queuing packets. The <B>MaxTransmit</B>&nbsp;member of NDIS_WAN_INFO returned in
response to the OID_WAN_GET_INFO request during driver initialization
represents a default value for this window for all lines supported by an
adapter. The miniport can reset the send window value on a per-line basis when
it makes the first line-up indication for a new line. It can also change this
send window value for a line dynamically by making a subsequent line-up
indication to NDISWAN with a new nonzero <B>SendWindow</B>. That is, the
miniport does not have to wait for an incoming or outgoing call to generate a
line-up indication. If a miniport specifies a <B>SendWindow</B>&nbsp;of zero,
NDISWAN will revert to using the default <B>MaxTransmit</B>&nbsp;value as the send
window.
<P>
If the miniport makes a line-up indication to change the <B>SendWindow</B>, it
must fill in both the <B>NdisLinkHandle</B>&nbsp;and <B>NdisLinkContext</B>&nbsp;members
with the values that apply to the data channel on which the send window is to
be changed. <B>LinkSpeed</B>&nbsp;and <B>Quality</B>&nbsp;are set to zero or possibly to
new values. Both <B>LinkSpeed</B>&nbsp;and <B>Quality</B>&nbsp;can also be changed
dynamically and independently by making a line-up indication and resetting the
value(s).
<P></FONT>
</BODY>
</HTML>
