<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.3.10  Resetting a Network Interface Card</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_A.3.10_Resetting_a_Network_Interface_Card_NG"></A>A.3.10  Resetting a Network Interface Card</H2>
<P>
When a transport driver needs to reset a network interface card, as Figure
A.3.10 shows, it calls <B><A HREF="../../nr/src/appdxa_18.htm">MacReset</A></B>&nbsp;through<B>&nbsp;<A HREF="../../nr/src/103ndisx_189.htm">NdisReset</A></B>
with network interface card information provided in the NDIS binding handle. <B>MacReset</B>
instructs the NIC driver to issue a hardware reset to the network interface
card. The driver also sets its own software state. 
<P>
During the reset operation, the NIC driver calls <B><A HREF="../../nr/src/104tdlow_11.htm">ProtocolStatus</A></B>
(through <B><A HREF="../../nr/src/appdxa_81.htm">NdisIndicateStatus</A></B>) twice
for each bound transport driver, including the original caller. The first call
is at the beginning of the reset, and <B>NdisIndicateStatus</B>&nbsp;accordingly
delivers the general status code NDIS_STATUS_RESET_START. When the NIC driver
again calls the reset functions at the end of the reset operation, <B>NdisIndicateStatus</B>
delivers the general status code NDIS_STATUS_RESET_END. 
<P>
When the NIC driver no longer needs to indicate status changes, it calls <B><A HREF="../../nr/src/104tdlow_12.htm">ProtocolStatusComplete</A></B>
through <B><A HREF="../../nr/src/appdxa_82.htm">NdisIndicateStatusComplete</A></B>
for each bound transport driver. <B>ProtocolStatusComplete</B>&nbsp;allows each
transport driver to do postprocessing for the status operation. 
<P>
<B><A HREF="../../nr/src/appdxa_18.htm">MacReset</A></B>&nbsp;completes synchronously with a
success or error status code, or asynchronously with NDIS_STATUS_PENDING. If
the function is asynchronous, the NIC driver later calls <B><A HREF="../../nr/src/104tdlow_9.htm">ProtocolResetComplete</A></B>
through <B><A HREF="../../nr/src/appdxa_71.htm">NdisCompleteReset</A></B>&nbsp;to request
postprocessing. 
<P>
<IMG SRC="../art/215-10.gif" BORDER=0>
<P>
<B>Figure A.3.10  Resetting a network interface card </B>
<P></FONT>
</BODY>
</HTML>
