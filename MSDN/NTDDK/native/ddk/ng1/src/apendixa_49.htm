<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A.4  Writing a Full NIC Driver</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_A.4_Writing_a_Full_NIC_Driver_NG"></A>A.4  Writing a Full NIC Driver</H2>
<P>
This chapter describes full NIC drivers that comply with NDIS 3.0. If you are
providing a NIC driver, it is not necessary to write a full NIC driver because
the current version of Windows NT&reg; supports miniport NIC drivers. It is
recommended that you provide a miniport driver instead of the full NIC driver
to save time. Fewer routines need to be developed in a miniport driver because
there is more support for common routines in the NDIS library.
<P>
The current DDK only contains sample miniport NIC drivers. Samples of full NIC
drivers are only available as part of the older Windows NT 3.1 DDK. 
<P>
The Windows NT 3.1 DDK contains several sample full NIC drivers for use in
developing your own driver. Although requirements vary depending on the
network interface card the NIC driver controls, many basic functions (such as
initialization, sending data, receiving data, interrupt handling, and
deactivation) are common to all full NIC drivers. Writing a NIC driver from
scratch can be very difficult and time-consuming. By modifying an existing
driver you can take advantage of the development effort invested in a working
product. Most of your programming endeavor can then be spent in code
modifications instead of full-scale development. 
<P>
This chapter examines a full NIC driver for a SONIC Ethernet chip in detail
and offers suggestions for adapting the code to your network interface card.
It includes some general programming considerations to note before you begin.
The 3.1 DDK <I>Release Notes</I>&nbsp;provide building and loading instructions to
accompany these details of sample code modification.
<P></FONT>
</BODY>
</HTML>
