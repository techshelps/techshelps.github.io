<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>1.1  Windows NT Network Architecture and the OSI Model</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Windows_NT_Network_Architecture_and_the_OSI_Model_NG"></A>1.1  Windows NT Network Architecture and the OSI Model</H2>
<P>
The network architecture is based conceptually on the seven-layer networking
model developed by the ISO. Introduced in 1978, the ISO OSI reference model
describes networking as a series of protocol layers with a specific set of
functions allocated to each layer. Each layer offers specific <I>services</I>
to the higher layers, shielding the higher layers from the details of how the
services are implemented. There is a well-defined <I>interface</I>&nbsp;between
each pair of adjacent layers. The interface defines the services offered by
the lower layer to the higher one and how those services will be accessed. 
<P>
<IMG SRC="../art/101osi.gif" BORDER=0>
<P>
<B>The OSI Reference Model</B>
<P>
Network drivers under Windows NT and other Microsoft operating systems that
support the Win32 interface fit comfortably within this conceptual framework.
Such network drivers implement the protocols and interfaces of the bottom four
layers of this network architecture.
<P>
The <B>Physical</B>&nbsp;<B>Layer</B>&nbsp;is the lowest layer of the OSI model. This
layer is concerned with the reception and transmission of the unstructured raw
bit stream over a physical medium. It describes the electrical/optical,
mechanical, and functional interfaces to the physical medium. The physical
layer carries the signals for all of the higher layers. Under Windows NT, the
physical layer is implemented by the NIC, its transceiver, and the medium to
which it is attached. For network components that use the serial ports, the
physical layer can also include low-level network software that defines how
the serial stream of bits is divided into packets of data.
<P>
OSI divides the <B>Data Link</B>&nbsp;<B>Layer</B>&nbsp;into two sublayers: LLC and MAC.
The LLC sublayer provides error-free transfer of data <I>frames</I>&nbsp;from one
node to another. This sublayer is responsible for the establishing and
terminating logical links, controlling frame flow, sequencing frames,
acknowledging frames, and retransmitting unacknowledged frames. The LLC
sublayer uses frame acknowledgement and retransmission to provide virtually
error-free transmission over the link to the layers above. The MAC sublayer
manages access to the network media, checks frame errors, and address
recognition of received frames. Under the Windows NT network architecture, the
functions allocated to the Logical Link Control sublayer are implemented in
the transport driver, while those allocated to the Media Access Control
sublayer are implemented in the network interface card. The NIC is controlled
by a software device driver called the <I>NIC driver</I>. Windows NT ships
with NIC drivers for a number of popular network interface cards.
<P>
The <B>Network Layer</B>&nbsp;controls the operation of the subnet. It decides
which physical path the data should take based on network conditions, priority
of service, and other factors. This includes routing, traffic control, frame
fragmentation and re-assembly, logical to physical address mapping, and usage
accounting. 
<P>
The <B>Transport Layer</B>&nbsp;ensures that messages are delivered error-free, in
sequence, and with no loss or duplication. It relieves the higher layer
protocols from any concern with the transfer of data between them and their
peers. A minimal Transport Layer is required in protocol stacks that include a
reliable Network or Logical Link Control sublayer that provides virtual
circuit capability. For example, because the Windows NT NetBEUI transport
driver includes an OSI-compliant LLC sublayer, its Transport Layer functions
are minimal. If the protocol stack does not include an LLC sublayer, and if
the Network Layer is unreliable and/or supports datagrams (as with TCP/IP’s IP
layer or NWLink’s IPX layer), the Transport Layer should include frame
sequencing and acknowledgment, as well as retransmission of unacknowledged
frames.
<P>
In the Windows NT model, the Logical Link Control, Network and Transport
layers are implemented by software drivers known as <I>Transport Drivers</I>
(sometimes referred to as protocols, protocol drivers, or protocol modules).
Windows NT ships with TCP/IP, IPX/SPX, NetBEUI, and AppleTalk Transport
Drivers. 
<P></FONT>
</BODY>
</HTML>
