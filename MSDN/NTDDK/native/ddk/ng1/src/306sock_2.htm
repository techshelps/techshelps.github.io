<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.2  Communicating with a WSH DLL</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Communicating_with_a_WSH_DLL_NG"></A>6.2  Communicating with a WSH DLL</H2>
<P>
Each transport that supports Windows Sockets applications supplies a user-mode
Windows Sockets helper dynamic-link library to interpret network addresses and
to process socket options in the architecture as outlined in <A HREF="306sock_1.htm">Section
6.1</A>. 
<P>
For example, when any application calls <B>socket</B>, it specifies an address
family, a socket type, and a protocol. These three arguments must uniquely
identify a transport driver to support the socket. Windows Sockets searches
for a match between these application-supplied arguments and the standardized
configuration information stored in the registry for WSH DLLs. If it finds a
match, Windows Sockets subsequently calls down through MSAFD to the <B>WSH</B><I>Xxx</I>
functions exported by the WSH DLL as necessary. Otherwise, the
application&#39;s call to <B>socket</B>&nbsp;fails. 
<P>
When a match is found, Windows Sockets calls <B>LoadLibrary</B>&nbsp;on the WSH
DLL, and then calls <B>GetProcAddress </B>to retrieve the entry point for each
exported <B>WSH</B><I>Xxx</I>&nbsp;function. These <B>WSH</B><I>Xxx</I>&nbsp;functions
are called whenever necessary to query for protocols supported by the helper
DLL, to translate addresses, and to process WSH-supported options as <B>getsockopt</B>
and <B>setsockopt</B>&nbsp;calls occur. For example, when an application passes an
option to <B>setsockopt </B>that is not explicitly supported by Windows
Sockets, the appropriate WSH DLL is called to process the option. The WSH DLL
takes any necessary action to support each such option the corresponding
transport supports. 
<P>
The following conventions permit mechanical transformations between socket
addresses, application-specified as SOCKADDR<B>&nbsp;</B>structures, and the
TDI-defined addresses used by underlying transport drivers.
<UL>
<LI>
TDI address types, specified as values in the <B>AddressType</B>&nbsp;member of <A HREF="../../nr/src/26tdstrc_1.htm">TA_ADDRESS</A>
structures, are identical to the address family values of socket address
structures. 
<P>
<LI>
The <B>Address[ ] </B>array of a TA_ADDRESS<B>&nbsp;</B>structure has exactly the
same format as the data following <B>sa_family</B><I>&nbsp;</I>in a socket address
structure for a given address type.
</UL>
<P></FONT>
</BODY>
</HTML>
