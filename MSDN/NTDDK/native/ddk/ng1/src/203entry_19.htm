<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2.3.5  Adapter-Shared Memory Device Initialization</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Adapter_Shared_Memory_Device_Initialization_NG"></A>3.2.3.5  Memory-Mapped Device Initialization</H4>
<P>
Like a PIO device, a miniport for a NIC with on-board RAM must call <B><A HREF="../../nr/src/103ndisx_124.htm">NdisMRegisterIoPortRange</A></B>
to register its claimed port address(es). This call returns a mapped virtual
port address(es) that a miniport can use to access the registers on the
adapter. The port addresses mapped by this function are only used to manage
the device with <B>NdisRawWrite(Read)Port</B><I>Xxx</I>&nbsp;calls (clear
interrupts, set and clear requested functions) but not to move data as is done
for a PIO device.
<P>
To move data to and from the board, a miniport for this type of device must
map the NIC device memory onto a host address space. During initialization,
the miniport reads the physical address and size of the on-device memory from
the registry by calling <B><A HREF="../../nr/src/103ndisx_175.htm">NdisReadConfiguration</A>
</B>or bus-type-specific <B>Ndis</B><I>Xxx</I>&nbsp;call(s). Once the configuration
is determined, the miniport must call: 
<UL>
<LI>
<B><A HREF="../../nr/src/103ndisx_203.htm">NdisSetPhysicalAddressHigh</A></B>
and <B><A HREF="../../nr/src/103ndisx_204.htm">NdisSetPhysicalAddressLow</A></B>
to set the 32 bit physical address and then call
<P>
<LI>
<B><A HREF="../../nr/src/103ndisx_112.htm">NdisMMapIoSpace</A></B>&nbsp;with this physical
address to map the device memory into a miniport-accessible host address
space. <B>NdisMMapIoSpace</B>&nbsp;returns a virtual address pointer with which the
miniport can refer to this device memory.
</UL>
<P>
Such a driver uses <B>NdisRead(Write)Register</B><I>Xxx</I>&nbsp;to read from or
write to the NIC’s registers.
<P>
If the driver indicates using <B><A HREF="../../nr/src/103ndisx_107.htm">NdisMIndicateReceivePacket</A></B>,
it must allocate at least one packet with chained buffer(s) as described in <A HREF="203entry_17.htm">Section
3.2.3.3</A>.
<P></FONT>
</BODY>
</HTML>
