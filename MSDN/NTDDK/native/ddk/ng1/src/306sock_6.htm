<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.5.1  Client Applications and Connect Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Client_Applications_and_Connect_Data_NG"></A>6.5.1  Client Applications and Connect Data</H3>
<P>
An application written to communicate through Windows Sockets with a transport
that supports connect data should call <B>setsockopt</B>&nbsp;with SOL_SOCKET as
the level, SO_CONNDATA as the option name, and an option value that is a
pointer to a buffer containing the connect data the transport should send to
the remote node with the connection request. Such an application must call <B>setsockopt</B>
before it calls <B>connect</B>, and the application-supplied connect data is
transmitted when the application makes its call to <B>connect</B>.
<P>
Besides making a call to <B>connect</B>, retrieving response-connect data
requires two additional steps:
<OL>
<LI>
Before calling <B>connect</B>, the application must inform Windows Sockets of
how much space to reserve for the expected response-connect data. To do this,
the application calls <B>setsockopt</B>&nbsp;with option level SOL_SOCKET, option
name SO_CONNDATALEN, and option pointing to an integer that specifies the
maximum number of bytes the application expects. Windows Sockets allocates a
buffer of this size to contain connect data sent by the server application
from the remote node.
<P>
<LI>
After <B>connect</B>&nbsp;has completed successfully, the application can call <B>getsockopt</B>
with an option level of SOL_SOCKET, option name of SO_CONNDATA, and option
pointing to a large enough buffer to hold the response-connect data. Then,
Windows Sockets copies the response-connect data, if any, into the
application’s buffer.
</OL>
<P>
After an application has set up a response-connect buffer, Windows Sockets
uses that buffer for the lifetime of the socket. That is, an application can
retrieve response-connect data for a particular socket at any time after the
socket is connected and before it is closed.
<P></FONT>
</BODY>
</HTML>
