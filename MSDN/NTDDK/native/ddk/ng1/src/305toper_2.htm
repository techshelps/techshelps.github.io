<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.2  Opening a Connection Endpoint</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Opening_a_Connection_Endpoint_NG"></A>5.2  Opening a Connection Endpoint</H2>
<P>
Figure 5.2 shows how a kernel-mode client opens a connection endpoint in its
underlying transport driver.
<P>
<IMG SRC="../art/426-03.gif" BORDER=0>
<P>
<B>Figure 5.2    Opening a Connection Endpoint</B>
<P>
If a local-node client requires connection-oriented communication with a
remote-node peer process, the local-node client must first open a transport
address and then open a connection endpoint in its underlying transport. The
client makes two calls to <B>ZwCreateFile</B>, first to open an address and,
then, a connection endpoint. 
<P>
When opening a connection endpoint, the client passes a client-supplied
context for the connection in the EA (extended attributes) buffer parameter to
<B>ZwCreateFile</B>. Within the EA buffer, the client sets the <B>EaName</B>
member to the system-defined value <B>TdiConnectionContext</B>&nbsp;followed by an
EA value that is usually the address of a client-allocated context area in
which the client will subsequently maintain state about the
endpoint-to-endpoint connection to be established. 
<P>
The client&#39;s call to <B>ZwCreateFile</B>&nbsp;causes the I/O Manager to create
a client-process-specific file object to represent the connection endpoint and
to call the TDI transport driver’s <A HREF="../../nr/src/21tddisp_3.htm">TdiDispatchCreate</A>
routine with an IRP containing the client-supplied parameters to <B>ZwCreateFile</B>.
TdiDispatchCreate parses the EA information, and the transport sets up
internal state for the open connection endpoint of this client if the call
succeeds. 
<P>
After <B>ZwCreateFile</B>&nbsp;returns a file handle to the client and the client
has obtained a pointer to the file object with <B>ObReferenceObjectByHandle</B>,
it is ready to make certain TDI_<I>XXX</I>&nbsp;IOCTL requests to the underlying
transport to establish an endpoint-to-endpoint connection with a remote-node
peer. 
<P>
First, the client must associate the connection endpoint with its open
transport address by submitting a <A HREF="../../nr/src/22ioctl_3.htm">TDI_ASSOCIATE_ADDRESS</A>
request, set up with <B><A HREF="../../nr/src/24bldmac_3.htm">TdiBuildAssociateAddress</A></B>,
to its underlying transport. 
<P>
For more information about setting up TDI_<I>XXX</I>&nbsp;IOCTL IRPs, see <A HREF="305toper_3.htm">Section
5.3</A>, next. For more information about how to establish an endpoint-to-endpoint
connection, see <A HREF="305toper_5.htm">Section
5.5</A>. 
<P>
When the endpoint-to-endpoint connection has been disconnected and the client
no longer will use any connection-oriented communications, the client must
close the connection endpoint by passing the file handle that was returned by <B>ZwCreateFile</B>
to <B>ZwClose</B>, as described later in <A HREF="305toper_12.htm">Section
5.12</A>. 
<P></FONT>
</BODY>
</HTML>
