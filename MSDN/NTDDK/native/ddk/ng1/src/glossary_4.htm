<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>E</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_E_NG"></A>E</H2>
<P>
<A NAME="DDK_EISA_extended_industry_standard_architecture__NG"></A><B>EISA</B>
(extended industry standard architecture)
<P>
A standard that defines the architecture of (and interface to) the extended PC
bus. See also <I>ISA</I>.
<P>
<A NAME="DDK_ENDEC_encoder_decoder__NG"></A><B>ENDEC</B>&nbsp;(encoder/decoder)
<P>
<A NAME="DDK_event_object_NG"></A><B>event object</B>
<P>
A user-mode object upon which one or more threads can wait until the event is
set to the signaled state. Every user-mode event object is implemented through
the use of a kernel-mode event object. 
<P>
A kernel-mode event object is an instance of a kernel-defined dispatcher
object type. Each kernel-mode event can be classified as either of the
following: 
<P>
&nbsp; &nbsp; 1.&#09;When a synchronization event (a.k.a. “autoclearing event”) is set
to the signaled state, a single thread waiting on the event is released (its
dispatch state transitions from waiting to ready, standby, or running), and an
autoreset to not-signaled occurs. 
<P>
&nbsp; &nbsp; 2.&#09;When a notification event is set to the signaled state, all
threads waiting on the event are released, and the event remains in the
Signaled state until an explicit reset to not-signaled occurs. 
<P></FONT>
</BODY>
</HTML>
