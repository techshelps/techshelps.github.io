<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2.7  Handling Errors During Initialization</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Handling_Errors_During_Initialization_NG"></A>3.2.7  Handling Errors During Initialization</H3>
<P>
If a miniport returns a failure status at any time during its initialization;
for instance, if it cannot obtain the resources it needs, cannot claim the
hardware resources its NIC needs in the registry, or if it cannot find a
medium it supports, it must take care to back out actions it has taken that
affect the overall system. The miniport should deallocate any memory it has
allocated by calling <B><A HREF="../../nr/src/103ndisx_39.htm">NdisFreeMemory</A></B>, it
should release I/O resources it has claimed by calling <B><A HREF="../../nr/src/103ndisx_99.htm">NdisMDeregisterIoPortRange</A></B>
and if it has called <B><A HREF="../../nr/src/103ndisx_149.htm">NdisOpenConfiguration</A></B>,
it should call <B><A HREF="../../nr/src/103ndisx_20.htm">NdisCloseConfiguration</A></B>.
If the miniport has allocated map registers, or a DMA channel, it should call <B><A HREF="../../nr/src/103ndisx_105.htm">NdisMFreeMapRegisters</A></B>
or <B><A HREF="../../nr/src/103ndisx_97.htm">NdisMDeregisterDmaChannel</A></B>.
<P>
A miniport that fails during initialization can record the problem in the
error log by calling <B><A HREF="../../nr/src/103ndisx_217.htm">NdisWriteErrorLogEntry</A></B>
with an error code and error-type-specific values.
<P></FONT>
</BODY>
</HTML>
