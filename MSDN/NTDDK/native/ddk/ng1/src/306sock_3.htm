<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>6.3  Configuring a WSH DLL</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Configuring_a_WSH_DLL_NG"></A>6.3  Configuring a WSH DLL</H2>
<P>
Two places in the registry must be set up with standardized configuration
information for each WSH DLL:
<OL>
<LI>
Under <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>
\Services\Winsock\Parameters </B>is a value entry of type REG_MULTI_SZ
specifying a list of protocols (transport drivers) that each have a
corresponding WSH DLL. The names stored in this list match the key names for
the corresponding transport drivers under <B>..\CurrentControlSet\Services</B>.
<P>
<LI>
Under <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>
\Services\</B><I>TransportDriverName</I><B>\Parameters</B>&nbsp;for each such
transport driver is a <B>Winsock</B>&nbsp;subkey. Windows Sockets opens this key by
forming a name string from the path to its own key under the <B>Services</B>
key, the transport name specified in the list under <B>..Winsock\Parameters</B>,
and the transport&#39;s <B>..Parameters\Winsock </B>key, which must contain
the following value entries:
<P>
<UL>
<LI>
<B>Mapping <FONT FACE="Symbol">&#190;</FONT> </B>a REG_BINARY value that
describes the address family, socket type, and protocol parameter triples
supported by the WSH DLL. The format for this binary data is the
WINSOCK_MAPPING<B>&nbsp;</B>structure, as defined in <I>wsahelp.h</I>.
<P>
<LI>
<B>HelperDllName <FONT FACE="Symbol">&#190;</FONT> </B>a REG_EXPAND_SZ value
that specifies the path to the WSH DLL itself.
<P>
<LI>
<B>MinSockaddrLength <FONT FACE="Symbol">&#190;</FONT> </B>a REG_DWORD value
that specifies the smallest valid SOCKADDR size, in bytes, for the WSH DLL.
<P>
<LI>
<B>MaxSockaddrLength <FONT FACE="Symbol">&#190;</FONT> </B>a REG_DWORD value
that specifies the largest valid SOCKADDR size, in bytes, for the WSH DLL.
</UL>
</OL>
<P>
Storing this information in two distinct places under <B>..\CurrentControlSet\Services</B>
helps to localize information about a transport driver under that driver&#39;s
own <B>Parameters</B>&nbsp;key. The information under <B>..\Services\Winsock\Parameters</B>
provides a pointer to the actual information for each transport&#39;s WSH DLL,
allowing setup programs to interoperate more easily.
<P>
The Windows NT setup utilities provide functions that perform most of the
necessary work to set up WSH DDL registry information for a transport driver.
These routines are <B>AddWinsockInfo </B>and <B>RemoveWinsockInfo </B>in the
setup file <I>utility.inf</I>, which can be found in the WIndows NT <I>system</I>
directory. A transport driver&#39;s installation script can call <B>AddWinsockInfo</B>,
passing in the key name under <B>Services</B>&nbsp;of the transport driver, the
full path name of the transport-specific WSH DLL, and the minimum and maximum
SOCKADDR lengths. <B>AddWinsockInfo</B>&nbsp;then stores the standardized
information already described in the registry. 
<P>
For an example of a transport&#39;s call to this setup function, see <I>oemnxptc.inf</I>,
the installation script for TCP/IP, also located in the Windows NT <I>system</I>
directory.
<P></FONT>
</BODY>
</HTML>
