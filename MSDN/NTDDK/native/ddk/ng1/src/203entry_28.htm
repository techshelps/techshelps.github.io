<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.6  Shutdown Handler</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Shutdown_Handler_NG"></A>3.6  Shutdown Handler</H2>
<P>
All NIC drivers should register a shutdown handler during initialization. The
definition of MiniportShutdown is:
<P>
<B>VOID<BR>
</B>&nbsp; &nbsp; <B>MiniportShutdown(<BR>
</B>&nbsp; &nbsp; &nbsp; &nbsp; <B>IN PVOID  </B><I>ShutdownContext</I><BR>
&nbsp; &nbsp; &nbsp; &nbsp; <B>);</B>
<P>
A driver’s shutdown handler should at least do the following:
<UL>
<LI>
Insure that the hardware is not trying to copy any data to memory after
returning from the shutdown handler. That is, if there is a DMA operation in
progress, the operation should be terminated.
<P>
<LI>
Reset its hardware to its initial state.
</UL>
<P>
The shutdown handler can be called as a result of a user operation, in which
case it runs at IRQL PASSIVE_LEVEL. It can also be called as a result of an
unrecoverable system error. If so, MiniportShutdown can be running at any
IRQL. Only <B>Ndis</B><I>Xxx</I>&nbsp;functions that can be called at any IRQL are
safe to call from MiniportShutdown.
<P></FONT>
</BODY>
</HTML>
