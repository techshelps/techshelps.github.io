<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>B.6  Streams Transport Provider Upper-edge Translation</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_B.6_Streams_Transport_Provider_Upper_edge_Translation_NG"></A>B.6  Streams Transport Provider Upper-edge Translation</H2>
<P>
The system interface between transport user and transport provider is the TDI.
The LAN Manager redirector and server, Windows Sockets, and the NetBIOS
interface libraries use TDI. However, most STREAMS stacks use the TPI at their
upper edges. STREAMS includes a TDI-TPI mapper so that a STREAMS stack that
uses TPI can be accessed by most Windows NT transport users.
<P>
The following TPI message structures have been extended in STREAMS. The
original definitions are detailed in Further Readings on Streams, References 1
and 4.
<PRE><FONT FACE="Courier" SIZE="2">struct T_info_ack {
&nbsp; &nbsp; LONG PRIM_type;
&nbsp; &nbsp; LONG TSDU_size;
&nbsp; &nbsp; LONG ETSDU_size;
&nbsp; &nbsp; LONG CDATA_size;
&nbsp; &nbsp; LONG DDATA_size;
&nbsp; &nbsp; LONG ADDR_size;
&nbsp; &nbsp; LONG OPT_size;
&nbsp; &nbsp; LONG TIDU_size;
&nbsp; &nbsp; LONG SERV_type;
&nbsp; &nbsp; LONG CURRENT_state;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// Windows NT Extensions:
&nbsp; &nbsp; LONG ADDR_length;        // current transport address of this stream
&nbsp; &nbsp; UCHAR UNIQUE_addr[6];    // unique address for this host
};
&nbsp;
struct T_discon_ind {
&nbsp; &nbsp; LONG PRIM_type;
&nbsp; &nbsp; LONG DISCON_reason;      // may be an NTSTATUS code
&nbsp; &nbsp; LONG SEQ_number;
};
&nbsp;
struct T_error_ack {
&nbsp; &nbsp; LONG PRIM_type;
&nbsp; &nbsp; LONG ERROR_prim;
&nbsp; &nbsp; LONG TLI_error;          // if TLI_error == TNTERROR,
&nbsp; &nbsp; LONG UNIX_error;         // then UNIX_error is an NTSTATUS value
};
&nbsp;</FONT></PRE>
<P></FONT>
</BODY>
</HTML>
