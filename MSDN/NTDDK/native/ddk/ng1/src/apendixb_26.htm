<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>B.7.1  Ethernet and 802.3 Medium (DL_CSMACD)</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_B.7.1_Ethernet_and_802.3_Medium_DL_CSMACD__NG"></A>B.7.1  Ethernet and 802.3 Medium (DL_CSMACD)</H3>
<H5>dl_bind_req_t</H5>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&nbsp; &nbsp; ULONG        dl_primitive;
&nbsp; &nbsp; ULONG        dl_sap;
&nbsp; &nbsp; ULONG        dl_max_conind;
&nbsp; &nbsp; ushort       dl_service_mode;
&nbsp; &nbsp; ushort       dl_conn_mgmt;
&nbsp; &nbsp; ULONG        dl_xidtest_flg;
} dl_bind_req_t;
&nbsp;</FONT></PRE>
<H5>Members</H5>
<DL>
<DT>
<I>dl_primitive</I>
<DD>
Must be the manifest constant DL_BIND_REQ_T
<BR>
<DT>
<I>dl_sap</I>
<DD>
Specifies data link service access point (SAP), set to the 2-byte Ethernet
packet type. Type 0xFFFE signifies all 802.3 packets. Type 0xFFFF signifies
all Novell&reg; IPX 802.3 packets. All other types are interpreted as Ethernet
packets.
<BR>
<DT>
<I>dl_max_conind</I>
<DD>
Ignored.
<BR>
<DT>
<I>dl_service_mode</I>
<DD>
Specifies service mode; only DL_CLDLS supported.
<BR>
<DT>
<I>dl_conn_mgmt</I>
<DD>
Ignored.
<BR>
<DT>
<I>dl_xidtest_flg</I>
<DD>
Ignored.
</DL>
<H5>DL_BIND_ACK_T</H5>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&nbsp; &nbsp; ULONG dl_primitive;
&nbsp; &nbsp; ULONG dl_sap;
&nbsp; &nbsp; ULONG dl_addr_length;
&nbsp; &nbsp; ULONG dl_addr_offset;
&nbsp; &nbsp; ULONG dl_max_connid;
&nbsp; &nbsp; ULONG dl_xidtest_flg;
} dl_bind_ack_t;
&nbsp;</FONT></PRE>
<H5>Members</H5>
<DL>
<DT>
<I>dl_primitive</I>
<DD>
Must be the manifest constant DL_BIND_ACK_T.
<BR>
<DT>
<I>dl_sap</I>
<DD>
Specifies the SAP from the previous dl_bind_req_t structure.
<BR>
<DT>
<I>dl_addr_length</I>
<DD>
Specifies length of address; always 6.
<BR>
<DT>
<I>dl_addr_offset</I>
<DD>
Specifies offset to address.
<BR>
<DT>
<I>dl_max_connid</I>
<DD>
Specifies maximum connection ID; always 0.
<BR>
<DT>
<I>dl_xidtest_flg</I>
<DD>
Specifies flag for exchange ID test; always 0.
</DL>
<H5>DL_UNITDATA_REQ_T</H5>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&nbsp; &nbsp; ULONG     dl_primitive;
&nbsp; &nbsp; ULONG     dl_dest_addr_length;
&nbsp; &nbsp; ULONG     dl_dest_addr_offset;
&nbsp; &nbsp; ULONG     dl_priority;
} dl_unitdata_req_t;
&nbsp;</FONT></PRE>
<H5>Members</H5>
<DL>
<DT>
<I>dl_primitive</I>
<DD>
Must be the manifest constant DL_UNITDATA_REQ_T
<BR>
<DT>
<I>dl_dest_addr_length</I>
<DD>
Specifies length of destination address; must be 8.
<BR>
<DT>
<I>dl_dest_addr_offset</I>
<DD>
Specifies offset to byte sequence below. The offset must point to a byte
sequence composed of the destination media-access control address followed by
the Ethernet type.
<DL>
<DT>
media-access control address
<DD>
<I>6 bytes</I>
<BR>
<DT>
type
<DD>
<I>2 bytes</I>
</DL>
<DT>
<I>dl_priority</I>
<DD>
Specifies data link priority.
</DL>
<H5>DL_UNITDATA_IND_T</H5>
<PRE><FONT FACE="Courier" SIZE="2">typedef struct {
&nbsp; &nbsp; ULONG     dl_primitive;
&nbsp; &nbsp; ULONG     dl_dest_addr_length;
&nbsp; &nbsp; ULONG     dl_dest_addr_offset;
&nbsp; &nbsp; ULONG     dl_src_addr_length;
&nbsp; &nbsp; ULONG     dl_src_addr_offset;
&nbsp; &nbsp; ULONG     dl_group_address;
} dl_unitdata_ind_t;
&nbsp;</FONT></PRE>
<H5>Members</H5>
<DL>
<DT>
<I>dl_primitive</I>
<DD>
Must be the manifest constant DL_UNITDATA_IND_T.
<BR>
<DT>
<I>dl_dest_addr_length</I>
<DD>
Specifies length of destination address; always 6.
<BR>
<DT>
<I>dl_dest_addr_offset</I>
<DD>
Specifies offset to destination address.
<BR>
<DT>
<I>dl_src_addr_length</I>
<DD>
Specifies length of source address; always 8.
<BR>
<DT>
<I>dl_src_addr_offset</I>
<DD>
Specifies offset to byte sequence below. The offset points to the byte
sequence composed of the source media-access control address followed by the
Ethernet type.
<DL>
<DT>
media-access control address
<DD>
<I>6 bytes</I>
<BR>
<DT>
type
<DD>
<I>2 bytes</I>
</DL>
<DT>
<I>dl_group_address</I>
<DD>
Specifies group address; 1 if broadcast or multicast.
</DL>
<P></FONT>
</BODY>
</HTML>
