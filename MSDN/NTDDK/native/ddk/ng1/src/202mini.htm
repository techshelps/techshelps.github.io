<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Chapter 2  Overview of NIC Driver Operations</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H1><A NAME="DDK_Overview_of_NIC_Driver_Operations_NG"></A>Chapter 2  Overview of NIC Driver Operations</H1>
<P>
This provides an overview of NDIS miniport NIC drivers. The design goals of a
miniport are briefly discussed along with a description of the common
functions called by and implemented in such a miniport, as follows: 
<UL>
<LI>
Miniport Design Goals in <A HREF="202mini_1.htm">Section 2.1</A>&nbsp;
<P>
<LI>
Miniport Driver Structure in <A HREF="202mini_2.htm">Section
2.2</A>&nbsp;
<P>
<LI>
Miniport NIC Driver Functions in <A HREF="202mini_3.htm">Section
2.3</A>&nbsp;
<P>
<LI>
Miniport NIC Driver Operations in <A HREF="202mini_15.htm">Section
2.4</A>&nbsp;
</UL>
<P>
In addition to providing a standard interface between each NIC and
higher-level protocol drivers, NDIS also includes functions that supply
services needed by many different network interface cards. Since a miniport
needs only hardware-specific functions, the driver writer can choose to
implement those NDIS-defined upper-edge functions that are necessary to
accomplish this.
<P></FONT>
</BODY>
</HTML>
