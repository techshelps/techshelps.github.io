<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.7  Protocol Driver Unbinding Operations</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_Protocol_Driver_Unbinding_Operations_NG"></A>2.7  Protocol Driver Unbinding Operations </H2>
<P>
A protocol driver unbinds from an underlying NIC by calling <B>NdisCloseAdapter</B>.
If a protocol driver registers a ProtocolUnbindAdapter function, NDIS will
call this function if the underlying NIC is no longer available. For instance,
if the NIC timed out, an attempt to reset the NIC failed to make it
operational, and NDIS called the MiniportHalt function of the NIC driver for
the malfunctioning NIC, NDIS will subsequently call the overlying protocol
driver&#39;s ProtocolUnbindAdapter function.
<P>
If a protocol driver does not register this function, an unbind operation can
originate in the driver&#39;s ProtocolStatus function, as the result of
receiving a status of NDIS_STATUS_CLOSING at <I>GeneralStatus</I>. A protocol
driver also should unbind from an adapter during initialization if some action
subsequent to opening an adapter, such as allocating a required resource,
fails, and the driver needs to unbind because it cannot carry out network
operations on the binding. 
<P>
If a protocol driver registers a ProtocolUnbindAdapter, this function calls <B>NdisCloseAdapter</B>.
However, the protocol must not deallocate all its binding-specific resources
until it calls <B>NdisCompleteUnbindAdapter</B>. If the protocol driver does
not provide a ProtocolUnbindAdapter function, but calls <B>NdisCloseAdapter</B>,
it can deallocate any previously allocated resources when either <B>NdisCloseAdapter</B>
returns NDIS_STATUS_SUCCESS, or, if <B>NdisCloseAdapter</B>&nbsp;returns 
NDIS_STATUS_PENDING, when ProtocolCloseAdapterComplete is called. 
<P>
NDIS delays calling ProtocolCloseAdapterComplete until all outstanding
requests on the binding have completed. Once the close request completes, the <I>ProtocolBindingContext</I>
handle the protocol driver allocated to represent the binding becomes invalid.
<P></FONT>
</BODY>
</HTML>
