<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.4.6  Bindable Net Rule</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Bindable_Net_Rule_NG"></A>3.4.6  Bindable Net Rule</H3>
<P>
The syntax for a <B>bindable</B>&nbsp;entry is defined as follows:
<P>
<B>bindable: REG_MULTI_SZ :</B>&nbsp; [<I>FromClass</I>&nbsp; &nbsp; <I>ToClass</I>&nbsp; &nbsp; [<B>non</B>|<B>exclusive</B>]
&nbsp; &nbsp;<I>Value</I>&nbsp; &nbsp; [<B>non</B>|<B>exclusive</B>]   <I>Value</I>]….
<DL>
<DT>
<I>FromClass</I>&nbsp;
<DD>
Matches the <I>ClassName</I>&nbsp;specification in the <B>class</B>&nbsp;net rule for
this component. <I>FromClass</I>&nbsp;binds to <I>ToClass</I>. 
<BR>
<DT>
<I>ToClass</I>
<DD>
Specifies the <I>ClassName</I>&nbsp;of another component on which this component
depends. 
<P>
The <I>ToClass</I>&nbsp;value must be the <I>ClassName</I>&nbsp;specification of another
component under that component&#39;s <B>class</B>&nbsp;net rule. 
<BR>
<DT>
<B>non</B>|<B>exclusive</B>
<DD>
Specifies the (in)dependencies between the <I>FromClass</I>&nbsp;and <I>ToClass</I>
components. One of these values must be specified for each <I>FromClass</I>
and <I>ToClass</I>&nbsp;in the list, as follows:
<UL>
<LI>
The initial <B>non</B>&nbsp;XOR <B>exclusive</B>&nbsp;specifies whether the component
designated by <I>FromClass</I>&nbsp;can bind itself to other components than the
given <I>ToClass</I>. 
<P>
<LI>
The subsequent <B>non</B>&nbsp;XOR <B>exclusive</B>&nbsp;specifies whether the component
designated by <I>ToClass</I>&nbsp;can be bound to by components other than <I>FromClass</I>.
</UL>
<P>
A NIC driver specifies one or more <B>bindable</B>&nbsp;net rules, each with a <I>FromClass</I>
that is the driver name, such as <I>xxx</I>Driver, and a <I>ToClass</I>&nbsp;the
name of an adapter the driver controls, such as <I>xxx</I>1Adapter, <I>xxx</I>2Adapter,
and so forth. Usually, a NIC driver specifies <B>non</B>&nbsp;for its <I>FromClass</I>,
because NIC drivers typically can bind to (in other words, control) more than
one model of adapter. The NIC driver typically specifies <B>exclusive</B>&nbsp;for <I>ToClass</I>,
because an adapter can be bound to only by one NIC driver at a time.
<P>
The <B>bindable</B>&nbsp;entry for a transport protocol driver is more complex
because it is bound to by one or more services and because the transport binds
itself to one or more underlying NDIS drivers. A transport typically specifies
<B>non</B>&nbsp;for the <I>FromClass</I>&nbsp;(transport) if it can bind to other NIC
drivers and <B>non</B>&nbsp;for the underlying NIC driver if the NIC can be bound
to by other transports. Otherwise, a transport specifies <B>exclusive</B>&nbsp;for
the <I>FromClass</I>&nbsp;if that transport can bind itself only to a specific NIC
driver designated by the <I>ToClass</I>, and <B>exclusive</B>&nbsp;for the <I>ToClass</I>
if the underlying NIC is a transport-dedicated device. Such a pair of closely
coupled, interdependent drivers are very rare.
<BR>
<DT>
<I>Value</I>
<DD>
Indicates the relative importance of the binding, effectively specifying
whether this binding should be chosen or dropped if there is another competing
binding of lesser or greater value. A <I>Value</I>&nbsp;in the range 1 to 100 can
be used to weight the choice of a binding. A higher value indicates a higher
importance is assigned to a particular binding. 
<P>
A value other than 100 is occasionally used to force an exclusive binding
between components to form a monolithic network stack. A NIC driver,
intermediate, or transport driver typically specifies <I>Value</I>&nbsp;as 100.
With this default, the various bindings expressed in the registry are used
without any relative weighting among them. 
</DL>
<H4>Examples of Bindable Net Rule</H4>
<P>
The following examples show how <B>bindable</B>&nbsp;is specified in the registry
for certain system network drivers, also shown in the preceding <B>bindform</B>
rule examples, under their respective <B>..\</B><I>NameOfComponent</I><B>\NetRules</B>
keys:
<OL>
<LI>
The NIC driver for the ee16 adapter has the entry <BR>
<B>bindable : REG_MULTI_SZ : ee16Driver  ee16Adapter  non  exclusive  100</B>
<P>
This entry specifies that the ee16 driver can bind to an ee16 adapter but
possibly also to other adapters. The ee16 adapter, however, is limited to
binding to the ee16 driver. 
<P>
<LI>
The Nbf transport has no bindable entry in the registry. This transport does
not attempt to limit the devices it binds to, nor the services that can bind
to it. 
<P>
<LI>
The TCP/IP transport has the entry<BR>
<B>bindable : REG_MULTI_SZ : tcpipService  tcpipTransport  non exclusive  100 
tcpipTransport  ndisDriver  non  non  100</B>&nbsp;
<P>
This rule specifies that the higher level tcpService can possibly bind itself
to other transport drivers (<B>non</B>), but the <B>tcpipTransport</B>&nbsp;driver
can only be bound to by the <B>tcpService</B>&nbsp;(<B>exclusive</B>). This rule
also specifies the interdependency between the TCP/IP transport and lower
network drivers. The <B>tcpipTransport</B>&nbsp;driver can bind itself to any (or
all) lower network component(s) in the class <B>ndisDriver</B>, but this
transport potentially can bind itself to other underlying types of drivers (<B>non</B>)
as well. As expected, any driver in the class <B>ndisDriver</B>&nbsp;can be bound
to by more transports (<B>non</B>) than just the <B>tcpipTransport</B>. 
</OL>
<P></FONT>
</BODY>
</HTML>
