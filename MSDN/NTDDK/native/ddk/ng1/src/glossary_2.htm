<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_C_NG"></A>C</H2>
<P>
<A NAME="DDK_CAM_content_addressable_memory__NG"></A><B>CAM</B>
(content-addressable memory)
<P>
A netcard driver accesses CAM using a data field rather than a data address. 
<P>
<A NAME="DDK_connection_NG"></A><B>connection</B>
<P>
A long-term communication association between two clients on a network.
Communication through a connection is expected to be reliable and error-free. 
<P>
<A NAME="DDK_connection_endpoint_NG"></A><B>connection endpoint</B>
<P>
The context collection associated with one end of a connection. There is
exactly one connection between two connection endpoints. Each connection
endpoint is associated with exactly one address object, but an address object
can be associated with several connection endpoints. A connection endpoint is
identified by a connection endpoint identifier. 
<P>
<A NAME="DDK_context_NG"></A><B>context</B>
<P>
The execution state of a thread at any given moment: 
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;For a user-mode thread, the
platform-dependent register state, kernel stack, TEB, and user stack in the
address space of the process to which the thread belongs. 
<P>
<FONT FACE="Symbol">&#183;</FONT>&#09;For a kernel-mode thread, the
platform-dependent register state and kernel stack. 
<P>
Kernel-mode threads have neither a TEB nor a user-mode context, but they must
have an associated process. See also <I>process object</I>. 
<P>
Most Windows NT device drivers do not have a context in this sense. Unless a
driver (such as an FSD) creates its own process and/or thread(s), it does not
have its own stack space or register state. For each driver, the set of
objects it owns and the IRPs that it can access in the device queue associated
with its device object or any driver-created internal queue(s) can be
considered all or part of its context. 
<P>
<A NAME="DDK_control_channel_NG"></A><B>control channel</B>
<P>
A TDI client binding to a TDI driver. The client uses the control channel to
query and set global information. 
<P>
<A NAME="DDK_CRC_circular_redundancy_check__NG"></A><B>CRC</B>&nbsp;(circular
redundancy check)
<P>
A method of ensuring data integrity for transmissions over a network. The
receiving node uses the CRC value in a packet for comparison with a value
calculated by using the same algorithm the sender uses to calculate the
original CRC value. 
<P>
<A NAME="DDK_CTS_clear_to_send__NG"></A><B>CTS</B>&nbsp;(clear to send)
<P>
A type of signal used on a LocalTalk network. 
<P></FONT>
</BODY>
</HTML>
