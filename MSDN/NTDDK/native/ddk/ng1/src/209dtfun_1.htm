<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>9.1.1  Identify</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Identify_NG"></A>9.1.1  Identify</H3>
<P>
<B>NcDetectIdentify</B>&nbsp;returns information about the NICs supported by the
DLL being addressed. The calling function furnishes a numeric index value and
the function responds with the appropriate zero-terminated string. The return
value is zero if no error occurs; otherwise, the appropriate <I>winerror.h</I>
value appears. The function prototype is:
<P>
<B>LONG NcDetectIdentify(<BR>
LONG</B>&nbsp; &nbsp;<I>lIndex</I><B>,<BR>
WCHAR</B>&nbsp; &nbsp; *<I>pwchBuffer</I><B>,<BR>
LONG</B>&nbsp; &nbsp;<I>cwchBuffSize</I><BR>
<B>);</B>
<H4>Parameters</H4>
<DL>
<DT>
<I>lIndex</I>
<DD>
Specifies an index number indicating the information to be retrieved. The
information applies either to the DLL as a whole or to a specific NIC. The
following index numbers are defined for this parameter:
<UL>
<LI>
Index zero causes the function to output the manufacturer’s identification for
the DLL.
<P>
<LI>
Index one causes the function to output a date and version string.
<P>
<LI>
Indexes numbered from 1000, in blocks of 100 values (modulo 100), indicate
NICs. For example:
</UL>
<DL>
<DT>
1000
<DD>
Causes the function to output the internal short alphabetic token string
representing the first supported NIC. 
<BR>
<DT>
1001
<DD>
Causes the function to output the displayable name of the NIC
(language-sensitive). 
<BR>
<DT>
1002
<DD>
Causes the function to output the name of the manufacturer.
<BR>
<DT>
1100
<DD>
Causes the function to output the alphabetic token for the second NIC type
supported. 
</DL>
<P>
The values of <I>lIndex</I>&nbsp;are referred to in function prototypes as <I>lNetcardId</I>
in the following sections.
<BR>
<DT>
<I>pwchBuffer</I>
<DD>
Points to the buffer in which the retrieved information is returned.
<BR>
<DT>
<I>cwchBuffSize</I>
<DD>
Indicates the size in bytes of the buffer.
</DL>
<H4>Comments</H4>
<P>
To determine all NICs supported by a given DLL, the calling function can
repeatedly call <B>NcDetectIdentify</B>, starting at an <I>lIndex</I>&nbsp;of 1000
and incrementing by 100 with each call. When ERROR_NO_MORE_ITEMS<B>&nbsp;</B>is
returned, the enumeration is at an end. If the buffer is too small, the
function returns ERROR_INSUFFICIENT_BUFFER. This error code is consistent
throughout all NIC detection functions that return wide-character data into a
buffer.
<P>
When the calling function has the list of possible NICs, it can retrieve
information about a particular adapter. To accomplish this, it supplies the
particular NIC-information index value to <B>NcDetectIdentify</B>&nbsp;and reads
the information retrieved by the function.
<P>
If the calling function wants to examine the hardware, it performs a
NIC-detection search. This search must be ordered to prevent unavoidable
hardware interlocks that can occur if tests are made in the wrong order.
Depending on the algorithm used by the calling function, the search can be
made in a variety of ways.
<P>
The calling function can elect to make calls to <B>NcDetectIdentify</B>&nbsp;for
all recognized NICs to determine search order. In this case, each call
specifies <I>nn</I>03, where <I>nn = </I>00 specifies the base network
information index value of the NIC. In response to each call, <B>NcDetectIdentify</B>
outputs a numeric search order value for the specific NIC, ranging from 0 to
1000. This value can then be used by the user interface to sort its attempts
to detect network adapters. The lower the number, the faster the user
interface logic attempts to detect the card. Any NIC for which a search order
is not specified has a default search order value of 500.
<P></FONT>
</BODY>
</HTML>
