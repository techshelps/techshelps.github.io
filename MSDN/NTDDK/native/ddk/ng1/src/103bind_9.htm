<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.4.5  Class Net Rule</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Class_Net_Rule_NG"></A>3.4.5  Class Net Rule</H3>
<P>
The syntax for the <B>class</B>&nbsp;entry is defined as follows:
<P>
<B>class: REG_MULTI_SZ :</B>&nbsp;<I>ClassName</I>....[[<I>ExistingClassName</I>|<B>basic</B>]....{<B>no</B>|<B>yes</B>}]
….
<DL>
<DT>
<I>ClassName</I>&nbsp;
<DD>
Specifies the class to which this driver belongs. There is only one <I>ClassName</I>
per <B>class</B>&nbsp;net rule. There must be at least one and can be more than one
set of the following values specified after <I>ClassName</I>. 
<BR>
<DT>
<I>ExistingClassName</I>
<DD>
Optionally specifies a parent class of which the given <I>ClassName</I>&nbsp;is a
subclass. 
<P>
Sometimes, a transport supplies an <I>ExistingClassName</I>&nbsp;to declare itself
part of a known subset of the parent class. Usually, such a subclass has some
special capability that is not a feature of the whole parent class of drivers.
For instance, Microsoft’s Nbf transport declares its <I>ClassName</I>&nbsp;as <B>rasCapableTransport</B>
and its <I>ExistingClassName</I>&nbsp;(parent class) as <B>netBiosTransport</B>&nbsp;to
indicate that it is a NetBIOS transport that also has RAS capabilities. 
<BR>
<DT>
<B>basic</B>
<DD>
Specifies that this component is a primitive class, rather than a subclass of
a larger parent class.
<P>
NIC drivers always select <B>basic</B>&nbsp;for the second value in the <B>class</B>
specification.
<P>
Transport drivers select <B>basic</B>&nbsp;if the driver is not a subclass of a
parent class. 
<BR>
<DT>
<B>no</B>|<B>yes</B>
<DD>
Specifies <B>yes</B>&nbsp;if this component is a logical endpoint that exports only
a single name, even if it is layered above several network components. The
assumed value is <B>no</B>&nbsp;if nothing is specified.
<P>
Network drivers usually allow this option to default to <B>no</B>&nbsp;unless the
driver is designed to multiplex over several underlying devices and the driver
exports a single device name to still higher level network components. For
instance, a transport protocol might multiplex over several underlying NICs
but only export a single device name. A driver that controls a family of NICs
might do the same thing.
</DL>
<H4>Examples of Class Net Rule</H4>
<P>
The following examples show how <B>class</B>&nbsp;is specified in the registry for
certain system network drivers, also shown in the preceding <B>bindform</B>
rule examples, under their respective <B>..\</B><I>NameOfComponent</I><B>\NetRules</B>
keys:
<OL>
<LI>
The NIC driver for the ee16 adapter has the entry <BR>
<B>class : REG_MULTI_SZ : ee16Driver  basic</B>
<P>
<LI>
The Nbf transport has the entry<BR>
<B>class : REG_MULTI_SZ : rasCapableTransport  netBiosTransport</B>
<P>
<LI>
The TCP/IP transport has the entry<BR>
<B>class : REG_MULTI_SZ : tcpipTransport  basic  tcpipService  basic  yes</B>&nbsp;
</OL>
<P></FONT>
</BODY>
</HTML>
