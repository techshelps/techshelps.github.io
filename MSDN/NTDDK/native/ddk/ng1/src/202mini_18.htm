<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>2.4.3  Sending Data</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Sending_Data_NG"></A>2.4.3  Sending Data </H3>
<P>
<IMG SRC="../art/207-03a.gif" BORDER=0>
<P>
MiniportSendPackets receives a pointer to an array of pointer(s) to one or
more packets to be sent on the network. When MiniportSendPackets returns,
ownership of the array that holds the pointers to the passed packets reverts
to the caller. 
<P>
The NIC driver can extract the OOB media-specific and priority information
from the packet descriptor using NDIS macros supplied for this purpose.
<P>
The miniport NIC driver must set the send-completion status in each packet
before returning from MiniportSendPackets. That is, the NIC driver can
complete a packet synchronously and set the status to NDIS_STATUS_SUCCESS or
NDIS_STATUS_FAILURE, (or a driver-determined status other than
NDIS_STATUS_PENDING) for that packet. Any such status indicates that the
miniport is done with the packet and is returning ownership of the packet to
the caller for reuse or to be freed.
<P>
If it returns NDIS_STATUS_PENDING in a packet, the driver retains ownership of
that packet, and must later call <B><A HREF="../../nr/src/103ndisx_127.htm">NdisMSendComplete</A></B>
when it is done with the packet. Unless the NIC driver sets the status to
other than NDIS_STATUS_PENDING before returning from MiniportSendPackets or
calls <B>NdisMSendComplete </B>for those packets for which it returned
NDIS_STATUS_PENDING, the driver owns the packet. The miniport calls <B>NdisMSendComplete</B>
when it is finished with the packet, meaning it is returning the packet to the
caller for reuse or to be freed. 
<P>
A driver can indicate that it does not have any available send resources for a
packet by returning NDIS_STATUS_RESOURCES for that packet. In this case NDIS
will queue and then resubmit the packet later when the miniport NIC driver
calls either <B>NdisMSendComplete</B>&nbsp;or <B><A HREF="../../nr/src/103ndisx_128.htm">NdisMSendResourcesAvailable</A></B>.
Once a miniport specifies the return status of NDIS_STATUS_RESOURCES for a
packet that is a member of a packet array, NDIS assumes this same status for
any subsequent packets in that array.
<P>
<IMG SRC="../art/207-03.gif" BORDER=0>
<P>
<B>Sending data synchronously</B>
<P>
MiniportSend transmits a single packet through the network interface card onto
the network. MiniportSend translates the packet into a data frame and carries
out the send operation. Before the miniport actually sends the packet, it can
optionally query the packet by calling <B><A HREF="../../nr/src/103ndisx_50.htm">NdisGetPacketFlags</A></B>
to read information in the <B>Flags</B>&nbsp;member of the packet header structure
that a protocol driver passes to the NIC driver. This <B>Flags</B>&nbsp;member
contains information about the send that is not included in the packet data.
The <B>Flags</B>&nbsp;are used to communicate information between a cooperating
protocol and miniport driver that have defined the flags. The driver can also
query the media-specific and priority in the OOB data substructure of the
packet descriptor, if the driver supports such features.
<P>
If MiniportSend completes synchronously, completing the send operation before
it returns, a status code other than NDIS_STATUS_PENDING or
NDIS_STATUS_RESOURCES is returned. Completing the send means the miniport
driver is finished with the packet and is returning it to the caller for reuse
or to be freed.
<P>
In the asynchronous case, the miniport returns NDIS_STATUS_PENDING and must
call <B><A HREF="../../nr/src/103ndisx_127.htm">NdisMSendComplete</A></B>&nbsp;when it is
done with the packet to indicate that it is relinquishing the packet for reuse
or to be freed. 
<P>
When the miniport calls <B>NdisMSendComplete</B>&nbsp;or <B><A HREF="../../nr/src/103ndisx_128.htm">NdisMSendResourcesAvailable</A></B>,
it indicates to NDIS that send resources are now available and the miniport is
ready to accept a new packet. 
<P>
The miniport NIC driver returns NDIS_STATUS_RESOURCES to indicate that it does
not have enough internal resources to send a packet. In this case, NDIS queues
the packet internally and resubmits it to the NIC driver at a later time when
more resources are available, either when the miniport calls <B>NdisMSendComplete</B>
or <B>NdisMSendResourcesAvailable</B>, whichever occurs first. 
<P></FONT>
</BODY>
</HTML>
