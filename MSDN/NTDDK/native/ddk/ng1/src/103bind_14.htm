<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.5.1  Registry Entries for an NDIS Intermediate Driver</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Registry_Entries_for_an_NDIS_Intermediate_Driver_NG"></A>3.5.1  Registry Entries for an NDIS Intermediate Driver</H3>
<P>
After installation, the registry must contain an <B>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\</B><I>NameOfComponent<BR>
</I><B>\CurrentVersion\NetRules</B>&nbsp;entry that describes an NDIS intermediate
driver&#39;s upper-edge miniport behavior and, if the driver also registers a
set of Protocol<I>Xxx</I>&nbsp;functions, a <B>…NetRules</B>&nbsp;entry that describes
its lower-edge protocol behavior. The form of these entries should match those
previously described for miniport and transport protocol drivers,
respectively. 
<P>
In addition, after the binding engine runs, the registry must contain an entry
for both the miniport and protocol behavior of such an intermediate driver at <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>
\Services\</B><I>NameOfComponent</I>&nbsp;and another entry for each virtual NIC
that such a driver creates. The following illustrates how these entries should
appear for an intermediate driver that emulates a LAN miniport at its upper
edge and an ATM protocol driver at its lower edge that creates a single
virtual NIC.
<P>
For such an intermediate driver, an entry for the miniport upper edge would be
defined as follows at <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>
\Services\LaneMiniport\</B>:<B><BR>
&nbsp; &nbsp; DisplayName : REG_SZ : ATM LanEmulationMiniport<BR>
&nbsp; &nbsp; ErrorControl : REG_DWORD : 1<BR>
&nbsp; &nbsp; Group : REG_SZ : NDIS<BR>
&nbsp; &nbsp; ImagePath : REG_SZ : \SystemRoot\system32\drivers\atmlane.sys<BR>
&nbsp; &nbsp; Start : REG_SZ : 2<BR>
&nbsp; &nbsp; Type : REG_SZ : 1<BR>
&nbsp; &nbsp; Linkage<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Bind : REG_MULTI_SZ : \Device\LaneMiniport1<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Export : REG_MULTI_SZ : \Device\LaneMiniport1<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Route : REG_MULTI_SZ : “LaneMiniport1”</B>
<P>
Its entry for the protocol upper edge would be defined as follows at <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet<BR>
\Services\LaneProtocol\</B>:<B><BR>
&nbsp; &nbsp; DisplayName : REG_SZ : ATMLanEmulationProtocolDriver<BR>
&nbsp; &nbsp; ErrorControl : REG_DWORD : 1<BR>
&nbsp; &nbsp; Group : REG_SZ : TDI<BR>
&nbsp; &nbsp; Start : REG_SZ : 3<BR>
&nbsp; &nbsp; Type : REG_SZ : 4<BR>
&nbsp; &nbsp; Linkage\<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Bind : REG_MULTI_SZ : \Device\AtmMiniport1<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Export : REG_MULTI_SZ : \Device\LaneProtocol<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Route : REG_MULTI_SZ : “AtmMiniport”</B>
<P>
Such a driver also would have an entry that represents the virtual NIC created
by the upper-edge miniport, defined as follows at  <B>..SYSTEM\CurrentControlSet\Services\LaneMiniport1</B>:<B><BR>
&nbsp; &nbsp; ErrorControl : REG_DWORD : 1<BR>
&nbsp; &nbsp; Group : REG_SZ : NDIS<BR>
&nbsp; &nbsp; Start : REG_SZ : 3<BR>
&nbsp; &nbsp; Type : REG_SZ : 4<BR>
&nbsp; &nbsp; Linkage<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Bind : REG_MULTI_SZ : \Device\LaneMiniport1<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Export : REG_MULTI_SZ : \Device\LaneMiniport1<BR>
&nbsp; &nbsp; &nbsp; &nbsp; Route : REG_MULTI_SZ : “LaneMiniport1”<BR>
&nbsp; &nbsp; Parameters<BR>
&nbsp; &nbsp; &nbsp; &nbsp; ……..</B>
<P>
A <B>Type</B>&nbsp;value of 4 tells the Service Controller that the component
described should not be started. 
<H4>Pruning the Registry For an Intermediate Driver </H4>
<P>
As described previously in <A HREF="103bind_13.htm">Section 3.5</A>, the
result of the binding analysis for each component that identifies its <B>class</B>
as a <B>Transport</B>&nbsp;can be a list of all the NIC device names that appear in
the <B>Export</B>&nbsp;list of each NIC driver installed on the machine. Because an
NDIS intermediate driver appears as a transport protocol at its lower edge and
as a miniport at its upper edge, the binding analysis will list the
upper-edge-exported adapter name for the intermediate driver itself as one of
the NICs to which the lower edge miniport can bind itself.
<P>
Consequently, such an intermediate driver <I>must</I>&nbsp;request a <B>Review</B>
pass when its .<I>inf</I>&nbsp;file runs and use the review to prune the name of
its upper edge virtual NIC from the list of possible bindings. 
<P>
&nbsp;
<P></FONT>
</BODY>
</HTML>
