<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>4.4  TDI Client Callbacks</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H2><A NAME="DDK_TDI_Client_Callbacks_NG"></A>4.4  TDI Client Callbacks</H2>
<P>
Most TDI clients&#39; routines are highly variable and environment-dependent.
However, TDI defines a set of callback routines that clients can register with
the underlying TDI transport to receive notifications when network events of
interest occur. A kernel-mode TDI client can register any of these ClientEvent<I>Xxx
</I>routines if the TDI driver is to notify it of a particular type of network
event occurrence. The client can even use such a registered ClientEvent<I>Xxx</I>
handler as an alternative to issuing certain TDI_<I>XXX</I>&nbsp;IOCTL requests to
the driver. 
<P>
Like the TdiDispatch<I>Xxx</I>&nbsp;routines described already, the client-supplied
event handlers can have any names the client writer chooses. Each ClientEvent<I>Xxx</I>
mentioned here is registered as an entry point passed in a client-submitted
IRP to the TdiDispatchInternalDeviceControl routine. 
<P>
A TDI client can have one or more of the callbacks listed next, registered at
the beginning of network operations on an open transport address with the TDI
transport driver by issuing successive <A HREF="../../nr/src/22ioctl_13.htm">TDI_SET_EVENT_HANDLER</A>
requests, set up with <B><A HREF="../../nr/src/24bldmac_16.htm">TdiBuildSetEventHandler</A></B>:
<DL>
<DT>
<B><A HREF="../../nr/src/25tdicli_1.htm">ClientEventConnect</A></B>&nbsp;
<DD>
Notifies the client of a connection offer from a remote-node peer process.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_5.htm">ClientEventDisconnect</A></B>&nbsp;
<DD>
Notifies the local-node client that its remote-node peer is terminating the
endpoint-to-endpoint connection between them.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_6.htm">ClientEventError</A></B>&nbsp;
<DD>
Notifies the client of an error condition in its underlying transport driver,
in one of the lower protocol layers of the transport stack, or in a still
lower NDIS driver that has made subsequent I/O on the client&#39;s open
transport address unreliable or impossible. 
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_7.htm">ClientEventReceive</A></B>&nbsp;
<DD>
Notifies the client that its transport has received normal data from the
remote-node peer on an endpoint-to-endpoint connection and makes all or part
of the received data available to be copied by the client.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_2.htm">ClientEventChainedReceive</A></B>
<DD>
Notifies the client that its transport has received a normal TSDU from the
remote-node peer on an endpoint-to-endpoint connection and makes the full TSDU
available for consumption by the client.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_9.htm">ClientEventReceiveExpedited</A></B>
<DD>
Notifies the client that its transport has received expedited data from the
remote-node peer on an endpoint-to-endpoint connection and makes all or part
of the received data available to be copied by the client.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_4.htm">ClientEventChainedReceiveExpedited</A></B>
<DD>
Notifies the client that its transport has received an expedited TSDU from the
remote-node peer on an endpoint-to-endpoint connection and makes the full TSDU
available for consumption by the client.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_8.htm">ClientEventReceiveDatagram</A></B>&nbsp;
<DD>
Notifies the client that the TDI driver has received a datagram directed to a
transport address that the client has opened.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_3.htm">ClientEventChainedReceiveDatagram</A></B>
<DD>
Notifies the client that the TDI driver has received a datagram directed to a
transport address that the client has opened and makes the full TSDU available
for consumption by the client.
<BR>
<DT>
<B><A HREF="../../nr/src/25tdicli_10.htm">ClientEventSendPossible</A></B>&nbsp;
<DD>
Notifies the client that the transport, which buffers send data internally,
again has buffer space available for sends.
</DL>
<P></FONT>
</BODY>
</HTML>
