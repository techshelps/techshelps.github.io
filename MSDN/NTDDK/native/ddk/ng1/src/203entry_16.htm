<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>3.2.3.2  Registering Ports</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H4><A NAME="DDK_Registering_Ports_NG"></A>3.2.3.2  Registering Ports</H4>
<P>
A miniport must claim any hardware resources it needs to manage an adapter. A
miniport, regardless of NIC type, calls <B><A HREF="../../nr/src/103ndisx_124.htm">NdisMRegisterIoPortRange</A></B>
to claim the I/O port addresses it requires to write to or read from the port
using <B>NdisRawWrite(Read)Port</B><I>Xxx</I>. A call to <B>NdisMRegisterIoPortRange</B>
does two things:
<OL>
<LI>
Claims the I/O port for the NIC in the registry so no other device can use it.
<P>
<LI>
Maps the I/O port so that the miniport can write to and read from the device
registers using <B>NdisRawWrite(Read)Port</B><I>Xxx</I>. The <B>NdisRawWrite(Read)</B><I>Xxx</I>
functions cannot be used until <B>NdisMRegisterIoPortRange</B>&nbsp;completes
successfully.
</OL>
<P>
If a miniport is not ready to claim an I/O port but simply wants to perform an
operation such as checking whether a device is present, the miniport should
call <B>NdisImmediateRead(Write)Port</B><I>Xxx</I>. <B>NdisImmediateRead(Write)Port</B><I>Xxx</I>
will temporarily claim, map, perform the requested operation and release the
port before returning.
<P></FONT>
</BODY>
</HTML>
