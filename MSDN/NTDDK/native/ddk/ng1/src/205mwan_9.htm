<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>5.3.3  Sending On a WAN Miniport</TITLE>
<style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD>
<BODY BGPROPERTIES="FIXED" TEXT="#000000" BGCOLOR="#FFFFFF">

<FONT FACE="ARIAL,HELVETICA" SIZE="2">
<H3><A NAME="DDK_Sending_On_a_WAN_Miniport_NG"></A>5.3.3  Sending On a WAN Miniport</H3>
<P>
<B><A HREF="../../nr/src/101mini_21.htm">MiniportWanSend</A></B>&nbsp;transmits a packet
through the adapter onto the network. 
<P>
Ownership of both the packet descriptor and the packet data is transferred to
the WAN NIC driver until this request is completed, either synchronously or
asynchronously. If the WAN miniport returns NDIS_STATUS_PENDING, it must later
indicate completion of the request by calling <B><A HREF="../../nr/src/103ndisx_145.htm">NdisMWanSendComplete</A></B>.
If the WAN miniport returns a status other than NDIS_STATUS_PENDING, the
request is considered to be complete, and ownership of the packet immediately
reverts to the caller.
<P>
Unlike LAN miniports, the WAN driver <I>cannot</I><B>&nbsp;</B>return a status of
NDIS_STATUS_RESOURCES to indicate that it does not have enough resources
currently available to process the transmit. Instead, the WAN miniport should
queue the send internally for a later time and perhaps lower the <B>SendWindow</B>
value on the line by making a line-up indication. The NDISWAN driver will
insure that the WAN miniport driver never has more than <B>SendWindow </B>packets
outstanding. If a WAN miniport makes a line-up indication for a particular
line, and sets the <B>SendWindow</B>&nbsp;to zero, NDISWAN reverts to using the
default value of the transmit window passed as the <B>MaxTransmit</B>&nbsp;value
provided to an earlier OID_WAN_GET_INFO request.
<P>
It is also an error for the WAN miniport NIC driver to call <B>NdisMSendResourcesAvailable</B>.
<P>
The packet passed to MiniportWanSend will contain simple HDLC PPP framing if
PPP framing is set. For SLIP or RAS framing, the packet contains only the data
portion with no framing whatsoever. Simple HDLC PPP framing is discussed later
in more detail. 
<P>
A WAN NIC driver must<B>&nbsp;</B><I>not</I>&nbsp;attempt to provide software loopback
or promiscuous mode loopback. Both of these are fully supported in the NDISWAN
driver.
<P>
The <B>MacReserved</B><I>x</I>&nbsp;members as well as the <B>WanPacketQueue</B>
member of the NDIS_WAN_PACKET<I>&nbsp;</I>is fully available for use by the WAN
miniport.
<P>
The available header padding is simply <B>CurrentBuffer</B>-<B>StartBuffer</B>.
The available tail padding is <B>EndBuffer</B>-(<B>CurrentBuffer</B>+<B>CurrentLength</B>).
The header and tail padding is guaranteed to be at least the amount requested,
but it can be more.
<P>
See <B><A HREF="../../nr/src/106nstru_12.htm">NDIS_WAN_PACKET</A></B>&nbsp;in the <I>Network
Driver Reference</I>&nbsp;for details of the WAN packet descriptor structure. 
<P>
A WAN miniport calls <B>NdisMWanSendComplete</B>&nbsp;to indicate that it has
completed a previous transmit operation for which it returned
NDIS_STATUS_PENDING. This does not necessarily imply that the packet has been
transmitted, although, with the exception of intelligent adapters, it
generally has. It does however, mean the miniport is ready to release
ownership of the packet.
<P>
When a WAN miniport calls <B>NdisMWanSendComplete</B>, it passes back the
original packet to indicate which send operation was completed. If
MiniportWanSend returns a status other than NDIS_STATUS_PENDING, it does not
call <B>NdisMWanSendComplete</B>&nbsp;for that packet.
<P></FONT>
</BODY>
</HTML>
