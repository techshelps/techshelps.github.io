<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"><HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ActiveXObject Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="ActiveXObject object">
<META NAME="MS-HKWD" CONTENT="object variable">
<META NAME="MS-HKWD" CONTENT="creating objects">
<META NAME="MS-HKWD" CONTENT="creating Automation objects">
<META NAME="MS-HKWD" CONTENT="variables">
<META NAME="MS-HKWD" CONTENT="Automation objects">
<META NAME=MS-HAID CONTENT="jsobjActiveXObject"> 
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">
<META NAME="Description" CONTENT="ActiveXObject Object">
<META NAME="Keywords" CONTENT="ActiveXObject object; object variable; creating objects; creating Automation objects; variables; Automation objects">
</HEAD>

<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, Arial, Helvetica" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>
ActiveXObject Object</B></FONT>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR>
<A HREF="jsversion.htm">Version&nbsp;3</A>&nbsp;<P></FONT>
</TD></TR>
</TABLE> 
<FONT SIZE=2><P>
<A HREF="jsobjActiveXObjectC.htm">See Also</A></FONT>
<HR noshade SIZE=1>

<H5>Description</H5>
<BLOCKQUOTE>Enables and returns a reference to an <a href="glossary.htm#defAutomationObject">Automation object</a>.</BLOCKQUOTE>

<H5>Syntax</H5>
<BLOCKQUOTE>var newObject = new <b>ActiveXObject(</b><i>class</i><b>)</b><P>
The <i>class</i> argument uses the syntax <i>servername.typename</I> and has these parts: <P>

<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>

<TR VALIGN=TOP BGCOLOR="#DDDDDD">
	<TD><FONT SIZE=2><b>Part</b></FONT></TD>
		<TD><FONT SIZE=2><b>Description</b></FONT></TD></TR>

<TR VALIGN=TOP>
	<TD><FONT SIZE=2><i>servername</i></FONT></TD>
		<TD><FONT SIZE=2>The name of the application providing the object.</FONT></TD></TR>

<TR VALIGN=TOP>
	<TD><FONT SIZE=2><i>typename</i></FONT></TD><TD><FONT SIZE=2>The type or class of the object to create.</FONT></TD></TR></TABLE></BLOCKQUOTE>

<H5>Remarks</H5>
<BLOCKQUOTE>Automation servers provide at least one type of object.  For example, a word-processing application may provide an application object, a document object, and a toolbar object.<P>

To create an Automation object, assign the new <b>ActiveXObject</b> to an object variable:
<BLOCKQUOTE><PRE><FONT FACE=""Courier New, Courier" SIZE=3>var ExcelSheet;
ExcelSheet = new <FONT COLOR="#FF0000">ActiveXObject(</FONT>"Excel<FONT COLOR="#FF0000">.</FONT>Sheet"<FONT COLOR="#FF0000">)</FONT>;
</FONT></PRE></BLOCKQUOTE>

This code starts the application creating the object (in this case, a Microsoft Excel worksheet). Once an object is created, you refer to it in code using the object variable you defined. In the following example, you access properties and methods of the new object using the object variable <FONT FACE=""Courier New, Courier" SIZE=2>ExcelSheet</FONT> and other Excel objects, including the Application object and the ActiveSheet.Cells collection. For example:
<BLOCKQUOTE><PRE><FONT FACE=""Courier New, Courier" SIZE=3>// Make Excel visible through the Application object.
ExcelSheet.Application.Visible = true;
// Place some text in the first cell of the sheet.
ExcelSheet.ActiveSheet.Cells(1,1).Value = "This is column A, row 1";
// Save the sheet.
ExcelSheet.SaveAs("C:\\TEST.XLS");
// Close Excel with the Quit method on the Application object.
ExcelSheet.Application.Quit();
// Release the object variable.
ExcelSheet = "";
</FONT></PRE></BLOCKQUOTE>
</BLOCKQUOTE>

<hr noshade size=1>
 

</FONT>
</BODY>
</HTML>
