<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JScript Data Types</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="JScript tutorial">
<META NAME="MS-HKWD" CONTENT="data types">
<META NAME="MS-HKWD" CONTENT="strings">
<META NAME="MS-HKWD" CONTENT="objects">
<META NAME="MS-HKWD" CONTENT="string">
<META NAME="MS-HKWD" CONTENT="object">
<META NAME="MS-HKWD" CONTENT="number">
<META NAME="MS-HKWD" CONTENT="Boolean">
<META NAME="MS-HKWD" CONTENT="undefined">
<META NAME="MS-HKWD" CONTENT="Null">
<META NAME=MS-HAID CONTENT="datatype">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Tutorial">
<META NAME="Description" CONTENT="JScript Data Types">
<META NAME="Keywords" CONTENT="JScript tutorial; data types; strings; objects; string; object; number; Boolean; undefined; null">

</HEAD>
<BODY BGCOLOR=FFFFFF LINK=#0033CC>


<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR=#660033>Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR=#660033><B>JScript Data Types</B></FONT><br>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstutor.htm">JScript&nbspTutorial</A><br><A HREF="declare.htm">Previous</A><br><A HREF="jsoperators.htm">Next</A><P></FONT>


</TD></TR>
</TABLE><p>


<hr noshade size=1>



<h5>What Are the JScript Data Types?</h5>
<blockquote>
Microsoft JScript has six types of data. The main types are numbers, strings, objects, and Booleans. The other two are <b>null</b> and <A HREF="glossary.htm#defundefined"><b>undefined</b></a>.</blockquote>.

<h5>String Data Type</h5>
<blockquote>
Strings are delineated by single or double quotation marks. (Use single quotes to type strings that contain quotation marks.) A string is also an object in JScript, but it is a special case, with special properties. The following are examples of strings:
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>"The cow jumped over the moon." 
'"Avast, ye lubbers!" roared the technician.' 
"42"
</FONT></pre></BLOCKQUOTE>
A string can contain zero or more unicode characters. When it contains zero, it is called a zero-length string ("").
</blockquote>

<h5>Number Data Type</h5>

<blockquote>
JScript supports both integer and floating-point numbers. Integers can be positive, 0, or negative; a floating-point number can
contain either a decimal point, an "e" (uppercase or lowercase), which is used to represent "ten to the power of" in scientific notation, or both. These numbers follow the IEEE 754 standard for numerical representation. Last, there are certain number values that are special:
<UL>
<LI><B>NaN</b>, or not a Number
<LI>Positive Infinity
<LI>Negative Infinity
<LI>Positive 0
<LI>Negative 0 
</UL>

Integers can be represented in base 10 (decimal), base 8 (octal), and base 16 (hexadecimal).<p>

Octal integers are specified by a leading "0", and can contain digits 0 through 7. If a number has a leading "0" but contains the digits "8"
and/or "9", it is a decimal number. A number that would otherwise be an octal number but contains the letter "e" (or "E") generates an error.<p>

Hexadecimal ("hex") integers are specified by a leading "0x" (the "X" can be uppercase or lowercase) and can contain digits 0 through 9
and letters A through F (either uppercase or lowercase). The letter "e" is a permissible digit in hexadecimal notation and does not signify an exponential number. The letters A through F are used to represent, as single digits, the numbers that are 10 through 15 in base 10. That is, 0xF is equivalent to 15, and 0x10 is equivalent to 16.<p>

Octal and hexadecimal numbers can be negative, but cannot be fractional. A number that begins with a single "0" and contains a decimal point is a decimal floating-point number; if a number that begins with "0x" or "00" contains a decimal point, anything to the right of the decimal point is ignored.<p>
Some example numbers:
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>.0001, 0.0001, 1e-4, 1.0e-4  // Four floating-point numbers, equivalent to each other.
3.45e2                       // A floating-point number, equivalent to 345.
42                           // An integer number.
0377                         // An octal integer, equivalent to 255.
00.0001                      // As octal numbers cannot have decimal parts, this is equivalent to 0.
0378                         // An integer, equivalent to 378.
0Xff                         // A hexadecimal integer, equivalent to 255.
0x37CF                       // A hexadecimal integer, equivalent to 14287.
0x3e7                        // A hexadecimal integer, equivalent to 999.
0x3.45e2                     // As hexadecimal numbers cannot have decimal parts, this is equivalent to 3.
</FONT></pre></BLOCKQUOTE>
</blockquote>
<h5>Booleans</h5>
<blockquote>
The possible Boolean values are <b>true</b> and <b>false</b>. These are special values, and are not usable as 1 and 0. <P>

<TABLE CELLSPACING=0 CELLPADDING=0 BORDER=0 WIDTH=87%><TR><TD COLSPAN=2 VALIGN=BOTTOM><hr noshade size=1></TD></TR><TR><P><TD VALIGN=TOP><FONT SIZE=2>
<p><b>Note</b>&nbsp;&nbsp;In a comparison, any expression that evaluates to 0 is taken to be false, and any statement that evaluates to a number other than 0 is taken to be true. Thus the following expression evaluates to true:
</FONT></TD></TR>
<P><TR><TD COLSPAN=2 VALIGN=TOP>
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>
(false == 0)</FONT></pre></BLOCKQUOTE>
<hr noshade size=1></TD></TR></TABLE><P>
For more information on comparisons, see <a href="conditionals.htm">Controlling Program Flow</a>.


</BLOCKQUOTE>
<H5>Undefined Data Type</H5>
<BLOCKQUOTE>
A value that is undefined is simply a value given to a variable after it has been created, but before a value has been assigned to it.</BLOCKQUOTE>
<H5>Null Data Type</H5>
<BLOCKQUOTE>A <B>null</b> value is one that has no value and means nothing.
</BLOCKQUOTE>



<hr noshade size=1>
 
</FONT>
</BODY>
</HTML>
