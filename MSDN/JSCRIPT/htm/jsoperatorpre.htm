<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML><HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Operator Precedence</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="operator precedence">
<META NAME="MS-HKWD" CONTENT="operators">
<META NAME="MS-HKWD" CONTENT="evaluating expressions">
<META NAME=MS-HAID CONTENT="jsoperatorpre">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">
<META NAME="Description" CONTENT="JScript Operator Precedence">
<META NAME="Keywords" CONTENT="operator precedence; operators; evaluating expressions">

</HEAD>



<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="VERDANA, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=300>

<FONT SIZE=1 COLOR="#660033">Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>Operator Precedence</B></FONT>
</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR><A HREF="jsversion.htm">Version&nbsp;1</A>&nbsp;<p></FONT>
</TD></TR>
</TABLE>
<p>
<hr noshade size=1>




<blockquote>
Operators in JScript are evaluated in a particular order. This order is known as the operator precedence. The following table lists the operators in highest to lowest precedence order. Operators with the same precedence are evaluated in left to right order in the expression.
<p>

<table border=1 width=87% CELLPADDING=5 CELLSPACING=0>
<tr bgcolor="#DDDDDD"><td align=left><Font Size=2><b>Operator</b></Font></td><td align=left><Font Size=2><b>Description</b></Font></td>
<tr><td><Font Size=2>. [] ()</Font></td><td><Font Size=2>Field access, array indexing, and function calls</Font></td></tr>
<tr><td><Font Size=2>++ -- - ~ ! delete new typeof void</Font></td><td><Font Size=2>Unary operators, return data type, object creation, undefined values</Font></td></tr>
<tr><td><Font Size=2>* / %</Font></td><td><Font Size=2>Multiplication, division, modulo division</Font></td></tr>
<tr><td><Font Size=2>+ - +</Font></td><td><Font Size=2>Addition, subtraction, string concatenation</Font></td></tr>
<tr><td><Font Size=2>&lt;&lt; &gt;&gt; &gt;&gt;&gt;</Font></td><td><Font Size=2>Bit shifting</Font></td></tr>
<tr><td><Font Size=2>&lt; &lt;= &gt; &gt;=</font></td><td><Font Size=2>Less than, less than or equal, greater than, greater than or equal</Font></td></tr>
<tr><td><Font Size=2>== != === !==</Font></td><td><Font Size=2>Equality, inequality, identity, nonidentity</Font></td></tr>
<tr><td><Font Size=2>&</Font></td><td><Font Size=2>Bitwise AND</Font></td></tr>
<tr><td><Font Size=2>^</Font></td><td><Font Size=2>Bitwise XOR</Font></td></tr>
<tr><td><Font Size=2>|</Font></td><td><Font Size=2>Bitwise OR</Font></td></tr>
<tr><td><Font Size=2>&&</Font></td><td><Font Size=2>Logical AND</Font></td></tr>
<tr><td><Font Size=2>||</Font></td><td><Font Size=2>Logical OR</Font></td></tr>
<tr><td><Font Size=2>?:</Font></td><td><Font Size=2>Conditional</Font></td></tr>
<tr><td><Font Size=2>= <i>OP</i>=</Font></td><td><Font Size=2>Assignment, assignment with operation</Font></td></tr>
<tr><td><Font Size=2>,</Font></td><td><Font Size=2>Multiple evaluation</Font></td></tr>
</table>

<p>Parentheses are used to alter the order of evaluation. The expression within parentheses is fully evaluated before its value is used in the remainder of the statement.


<p>An operator with higher precedence is evaluated before one with lower precedence.  For example:
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>z = 78 * (96 + 3 + 45)
</FONT></pre></BLOCKQUOTE>
<p>There are five operators in this expression: =, *, (), +, and +.  According to precedence, they are evaluated in the following order: (), *, +, +, =.  

<ol>
<li>Evaluation of the expression within the parentheses is first:
There are two addition operators, and they have the same precedence: 96 and 3 are added together and 45 is added to that total, resulting in a value of 144.
<li>Multiplication is next: 78 and 144 are multiplied, resulting in a value of 10998.
<li>Assignment is last: 11232 is assigned into z.
</ol>



</BLOCKQUOTE>



<hr noshade size=1>

</FONT>

</BODY>
</HTML>
