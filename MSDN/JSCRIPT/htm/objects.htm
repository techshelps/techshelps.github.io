<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JScript Objects</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="JScript tutorial">
<META NAME="MS-HKWD" CONTENT="objects">
<META NAME="MS-HKWD" CONTENT="intrinsic objects">
<META NAME="MS-HKWD" CONTENT="built-in objects">
<META NAME="MS-HKWD" CONTENT="creating objects">
<META NAME="MS-HKWD" CONTENT="methods">
<META NAME="MS-HKWD" CONTENT="properties">
<META NAME="MS-HKWD" CONTENT="arrays">
<META NAME=MS-HAID CONTENT="objects">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Tutorial">
<META NAME="Description" CONTENT="JScript Objects">
<META NAME="Keywords" CONTENT="JScript tutorial; objects; intrinsic objects; built-in objects; creating objects; methods; properties; arrays">

</HEAD>



<BODY BGCOLOR=FFFFFF LINK=#0033CC>

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR=#660033>Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR=#660033><B>JScript Objects</B></FONT><br>

</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstutor.htm">JScript&nbspTutorial</A><br><A HREF="functions.htm">Previous</A><br><A HREF="jsreserved.htm">Next</A><P></FONT>
</TD></TR>
</TABLE><p>


<hr noshade size=1>
<h5>What Are Objects?</h5>
<blockquote>
In Microsoft JScript, objects are, essentially, collections of properties and methods. A method is a function that is a member of an object, and a property is a value or set of values (in the form of an array or object) that is a member of an object. JScript supports three kinds of objects: <a href="builtinobjects.htm">intrinsic objects</a>, <a href="createobjects.htm">objects you create</a>, and browser objects, which are covered elsewhere.

</blockquote>
<h5>Objects as Arrays</h5>
<blockquote>
In JScript, objects and arrays are handled identically. You can refer to any of the members of an object (its properties and methods)
either by name (using the name of the object, followed by a period, followed by the name of the property) or by its array subscript index. Subscript numbering in JScript begins with 0. For convenience, the subscript can also be referred to by its name.<p>

Thus, a property can be referred to in several ways. All of the following statements are equivalent.
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>theWidth = spaghetti.width;
theWidth = spaghetti[3];  // [3] is the "width" index.
theWidth = spaghetti["width"];
</FONT></pre></BLOCKQUOTE>

While it is possible to use brackets to refer to a property by its numeric index, it is not possible to use the dot (.) convention with index numbers. The following statement generates an error. 
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>theWidth = spaghetti.3;
</FONT></pre></BLOCKQUOTE>

When an object has another object as a property, the naming convention extends in a straightforward way.
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>var init4 = toDoToday.shoppingList[3].substring(0,1);  // shoppingList, an array, is a property of toDoToday.
</FONT></pre></BLOCKQUOTE>

The fact that objects can have other objects as properties lets you generate arrays with more than one subscript, which are not directly supported. The following code creates a multiplication table for values from 0 times 0 through 16 times 16.
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>var multTable = new Array(17);  // Make the shell that will become the table.
for (var j = 0; j &lt; multTable.length; j++)  {  // Prepare to fill it with rows.
    var aRow = new Array(17);  // Create a row.
    for (var i = 0; i &lt; aRow.length; i++)  {  // Prepare to fill the row.
    aRow[i] = (i + " times " + j + " = " + i*j);  // Make and place one value.
    }
multTable[j] = aRow;  // Put the filled row into the table.
}
</FONT></pre></BLOCKQUOTE>

To refer to one of the elements of an array of this kind, use multiple sets of brackets.
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>var multiply3x7 = multTable[3][7];
</FONT></pre></BLOCKQUOTE>

The following statement generates an error.
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>var multiply3x7 = multTable[3, 7];
</FONT></pre></BLOCKQUOTE>

</BLOCKQUOTE>


<hr noshade size=1>
 
</FONT>
</BODY>
</HTML>
