<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN"><HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Object</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="String object">
<META NAME="MS-HKWD" CONTENT="string data type">
<META NAME="MS-HKWD" CONTENT="strings">
<META NAME="MS-HKWD" CONTENT="string literals">
<META NAME="MS-HKWD" CONTENT="creating String objects">
<META NAME="MS-HKWD" CONTENT="new operator">
<META NAME="MS-HKWD" CONTENT="formatting strings">
<META NAME="MS-HKWD" CONTENT="searching strings">
<META NAME=MS-HAID CONTENT="jsobjstring">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Language Reference">
<META NAME="Keywords" CONTENT="String object; string data type; strings; string literals; creating String objects; new operator; formatting strings; searching strings">

<META NAME="Description" CONTENT="String Object">
</HEAD>



<BODY BGCOLOR="#FFFFFF" LINK="#0033CC">

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="VERDANA, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR="#660033">Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR="#660033"><B>String Object</B></FONT>



</TD>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstoc.htm">Language&nbsp;Reference</A>&nbsp;<BR><A HREF="jsversion.htm">Version&nbsp;1</A>&nbsp;<P></FONT>


</TD></TR>
</TABLE>
<p>
<FONT SIZE=2>
<a href="jsobjstringC.htm">See Also</a>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="jsobjStringM.htm">Methods</A>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<A HREF="jsobjStringP.htm">Properties</A>
</FONT>
<hr noshade size=1>


<H5>Description</H5>
<BLOCKQUOTE>Allows manipulation and formatting of text strings and determination and location of substrings within strings.
</BLOCKQUOTE>

<H5>Syntax</H5>

<BLOCKQUOTE><b>StringObj</b>[<b>.</b><em>method</em>]<br>
<b>"String Literal"</b>[<b>.</b><em>method</em>]</BLOCKQUOTE>

<H5>Remarks</H5>

<BLOCKQUOTE><b>String</b> objects can be created implicitly using string literals. <b>String</b> objects created in this fashion (referred to as standard strings) are treated differently than <b>String</b> objects created using the <b>new</b> operator. All string literals share a common, global string object. So, if a property is added to a string literal, it is available to all standard string objects:

<Blockquote><pre><FONT Face="Courier New, Courier" Size=3>var alpha, beta;
alpha = "This is a string";
beta = "This is also a string";

alpha.test = 10;
</FONT></pre></blockquote>

<p>In this example, <i>test</i> is now defined for <i>beta</i> and all future string literals. In the following example, however, added properties are treated differently:
<blockquote><pre><FONT FACE="Courier New, Courier" SIZE=3>var gamma, delta;
gamma = new String("This is a string");
delta = new String("This is also a string");

gamma.test = 10;
</FONT></pre></BLOCKQUOTE>
In this case, <i>test</i> is not defined for <i>delta</i>. Each <b>String</b> object declared as a <b>new</b> <b>String</b> object has its own set of members. This is the only case where <b>String</b> objects and string literals are handled differently.
</BLOCKQUOTE>

<hr noshade size=1>
 

</FONT>
</BODY>

</HTML>
