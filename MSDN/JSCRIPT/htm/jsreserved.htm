<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JScript Reserved Keywords</TITLE><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css">
<META NAME="MS-HKWD" CONTENT="JScript tutorial">
<META NAME="MS-HKWD" CONTENT="keywords">
<META NAME="MS-HKWD" CONTENT="reserved keywords">
<META NAME="MS-HKWD" CONTENT="intrinsic objects">
<META NAME="MS-HKWD" CONTENT="built-in objects">
<META NAME=MS-HAID CONTENT="jsreserved">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso8859-1">
<META NAME="PRODUCT" CONTENT="JScript">
<META NAME="TECHNOLOGY" CONTENT="SCRIPTING">
<META NAME="CATEGORY" CONTENT="Tutorial">
<META NAME="Description" CONTENT="JScript Reserved Keywords">
<META NAME="Keywords" CONTENT="JScript tutorial; keywords; reserved keywords; intrinsic objects; built-in objects">

</HEAD>



<BODY BGCOLOR=FFFFFF LINK=#0033CC>

<!--TOOLBAR_START-->
<!--TOOLBAR_EXEMPT-->
<!--TOOLBAR_END-->
<FONT FACE="Verdana, ARIAL, HELVETICA" SIZE=2>
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 WIDTH=100%><TR VALIGN=TOP><TD WIDTH=360>
<FONT SIZE=1 COLOR=#660033>Microsoft&#174; JScript&#153;</FONT><BR>
<FONT SIZE=5 COLOR=#660033><B>JScript Reserved Keywords</B></FONT><br>

</td>
<TD ALIGN=RIGHT>
<FONT SIZE=2>&nbsp;<A HREF="jstutor.htm">JScript&nbspTutorial</A><br><A HREF="objects.htm">Previous</A><br><A HREF="recurse.htm">Next</A><P></FONT>
</td></TR>
</TABLE><p>


<HR SIZE=1 NOSHADE>
<BLOCKQUOTE>
JScript has a number of reserved keywords. These words come in three types: JScript reserved keywords, future reserved words, and words to avoid.
<p>

<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR BGCOLOR=#DDDDDD VALIGN=TOP ALIGN=CENTER><TH COLSPAN=5><Font Size=2><b>JScript Keywords</b></font></TH></tr>
<tr><td><Font Size=2>break</Font></td><td><Font Size=2>false</Font></td><td><Font Size=2>in</Font></td><td><Font Size=2>this</Font></td><td><Font Size=2>void</Font></td></tr>

<tr><td><Font Size=2>continue</Font></td><td><Font Size=2>for</Font></td><td><Font Size=2>new</Font></td><td><Font Size=2>true</Font></td><td><Font Size=2>while</Font></td></tr>

<tr><td><Font Size=2>delete</Font></td><td><Font Size=2>function</Font></td><td><Font Size=2>null</Font></td><td><Font Size=2>typeof</Font></td><td><Font Size=2>with</Font></td></tr>

<tr><td><Font Size=2>else</Font></td><td><Font Size=2>if</Font></td><td><Font Size=2>return</Font></td><td><Font Size=2>var</Font></td><td><Font Size=2></Font>&nbsp;</td></tr>
</table>
<p>&nbsp;

<TABLE WIDTH=87% BORDER=1 CELLPADDING=5 CELLSPACING=0>
<TR BGCOLOR=#DDDDDD VALIGN=TOP ALIGN=CENTER><TH COLSPAN=4><Font Size=2><b>JScript Future Keywords</b></font></TH></tr>
<tr><td><Font Size=2>case</Font></td><td><Font Size=2>debugger</Font></td><td><Font Size=2>export</Font></td><td><Font Size=2>super</Font></td></tr>
<tr><td><Font Size=2>catch</Font></td><td><Font Size=2>default</Font></td><td><Font Size=2>extends</Font></td><td><Font Size=2>switch</Font></td></tr>
<tr><td><Font Size=2>class</Font></td><td><Font Size=2>do</Font></td><td><Font Size=2>finally</Font></td><td><Font Size=2>throw</Font></td></tr>
<tr><td><Font Size=2>const</Font></td><td><Font Size=2>enum</Font></td><td><Font Size=2>import</Font></td><td><Font Size=2>try</Font></td></tr>
</table>

<Font Size=2><p>The words to avoid are any that are already the names of intrinsic JScript objects or functions. Words like <i>String</i> or <i>parseInt</i> are included in this.
<p>Using any of the keywords from the first two categories causes a compilation error when your script is first loaded. Using a reserved word from the third set can cause odd behavior problems if you attempt to use both your variable and the original entity of the same name in the same script. For example, the following script does not do quite what you think it should:
</FONT>
<BLOCKQUOTE><pre><FONT FACE="Courier New, Courier" Size=3>var String;
var text = new String("This is a string object");
</FONT></pre></BLOCKQUOTE>
In this case, you get an error saying that String is not an object. Many cases of using a pre-existing identifier aren't this obvious.
</BLOCKQUOTE>

<hr noshade size=1>
 
</FONT> 
</BODY>
</HTML>
