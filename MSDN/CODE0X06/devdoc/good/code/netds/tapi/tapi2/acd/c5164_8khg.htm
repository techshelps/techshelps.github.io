<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5164"></a>README.TXT</h2>
<pre><code>TAPI ACD Samples <br>======================================================================= <br>ACDSMPL and ACDCLNT implement a simple ACD call center.  The purpose of <br>these samples is to highlight some of the new call center features of  <br>TAPI 2.0.  This document will give an overview of some of the design  <br>details of these two applications. <br> <br>ACDSMPL <br>======= <br>ACDSMPL is the ACD server application.  It keeps track of groups and  <br>agents, When calls come in on a group s line, ACDSMPL looks for an  <br>agent to transfer the call to.  It also keeps track of agent state information. <br> <br>Groups <br>------ <br>In the sample, a group corresponds to a single address on a line  <br>device.  When a call arrives on that address, the ACD server will look  <br>for an agent that is a member of that group to take the call.  A group  <br>has a list of agents that are allowed to log into it. <br> <br>Agents <br>------ <br>An agent corresponds to a person that has access to a single line. They  <br>are allowed to use any address on that line. This implementation is  <br>limited, however, because it only has one destination address for each  <br>agent.  That is, when a call is to be transferred to the agent, there  <br>is a single number that it will be transferred to, not a number for  <br>each address.  Most implementations should allow for a destination  <br>address for each address. <br> <br>UI <br>-- <br>The UI allows adding of agents and groups.  ACDSMPL automatically  <br>writes out the agent and group information to ACDSMPL.INI when it shuts  <br>down.  The File | Open command will read in the information from that  <br>file.  See below for a description of the ini file. <br> <br>The default UI view is the Group view.  The Group view shows each  <br>group, and underneath them, every agent that is allowed to log into the  <br>group.  If the agent is logged in, their user name will be in bold.   <br>The Agent view shows each agent.  This view can be used to change  <br>information about the Agent. <br> <br>Security <br>-------- <br>There is no security implemented in this sample.  Users are verified by  <br>the user name that TAPI puts in each LINEPROXYREQUEST structure and the  <br>line device.  ACDSMPL compares these with the information entered in  <br>through the ACDSMPL UI. <br> <br>The new TAPI features that ACDSMPL illustrates are: <br> <br>New lineOpen functionality <br>Handling of the LINE_PROXYREQUEST message <br>New lineInitializeEx functionality. <br>Unicode <br> <br>ACDCLNT <br>======= <br>ACDCLNT is the client application that works the ACDSMPL.  Using the  <br>model from ACDSMPL, ACDCLNT assumes that the user can only have access  <br>to one line.  Upon startup, it calls lineGetAgentCaps for each device.  <br>When it finds a line device that lineAgentCaps succeeds on, it uses that  <br>line device. <br> <br>ACDCLNT allows the user to set state, group and activity information.   <br>Also, when a call appears on its line, ACDCLNT will allow the user to  <br>answer that call. <br> <br>The new TAPI features that ACDCLNT illustrates are: <br> <br>The new Agent functions:  lineGetAgentList, lineGetAgentStatus,  <br>lineGetAgentCaps, lineGetAgentActivityList, lineSetAgentState,  <br>lineSetAgentActivity, and lineSetAgentGroup. <br>Unicode <br>lineInitializeEx - using completion ports for callback mechanism <br> <br> <br>ACDSMPL.INI format <br>================== <br> <br>[GENERAL] section <br>NumAgents=x <br>NumGroups=y <br>x and y are the number of agents and groups in this file <br> <br>[GROUPS] section <br>GROUPx=name,perm device id,address id <br> <br>x starts at 0 and increments for each group <br>name is the name of the group (cannot contain commas) <br>permanent device id is the permanent device id of the line device  <br>associated with the group.   <br>address id is the address id of the line that the group uses <br> <br>[AGENTS] section <br>AGENTx=name,dest address,perm device id <br> <br>x starts at 0 and increments for each group <br>name is the user name of the agent <br>dest address is the address that acdsmpl would transfer calls to that  <br>agent <br>permanent device id is the permanent device id if the user's line <br> <br>[GROUPx] section <br>each group has a section that indicates which agents are members of that group.  If the agent is in the group, the entries look like <br>AGENTy=1 where AGENTy corresponds to the agent key in the [AGENTS] section <br> <br> <br>EXAMPLE: <br> <br>[Groups] <br>GROUP0=First Group,786435,0 <br>GROUP1=Second Group,786435,1 <br>GROUP2=Third Group,786436,0 <br> <br>[GROUP0] <br>AGENT0=1 <br>AGENT1=1 <br> <br>[GROUP1] <br>AGENT0=1 <br> <br>[Agents] <br>AGENT0=scooter,3343,786432 <br>AGENT1=frankie,3342,786433 <br> <br>[General] <br>NumGroups=3 <br>NumAgents=2 <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
