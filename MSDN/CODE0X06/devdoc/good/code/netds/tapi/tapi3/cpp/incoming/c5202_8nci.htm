<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5202"></a>README.TXT</h2>
<pre><code>TAPI 3.0 <br>INCOMING Sample Application <br> <br> <br>Overview: <br> <br>Incoming is a sample TAPI 3.0 application that waits for and answers <br>incoming phone calls. <br> <br>In order to receive incoming call notifications, as well as any call <br>state event notifications, the outgoing ITCallNotification interface <br>must be implemented by the TAPI 3.0 application, and registered with <br>TAPI 3.0 through the IConnectionPoint mechanism.  For more information <br>on IConnectionPoint, and IConnectiontPointContainer, please refer <br>to the COM documentation. <br> <br>CALLNOT.CPP and CALLNOT.H show the implementation of the ITCallNotification <br>interface.  ITCallNotification is defined by TAPI 3.0, and the interface <br>definition is in tapi3.h. <br> <br>INCOMING.CPP shows how to register the interface, and how to answer <br>and incoming call. <br> <br>How to build the sample: <br> <br>To run the INCOMING sample application, set the SDK build environment, then <br>type "nmake" in the incoming directory.  This will build t3in.exe <br> <br> <br>How to use the sample: <br> <br>After the sample is built, run t3in.exe. <br> <br>A small dialog box will appear, and the status will be "Waiting for a call." <br>If your computer does not have any TAPI devices, the application will display <br>an error as is starts up.  The application will wait for calls on all TAPI <br>addresses that support audio calls.  If a call comes in that has both <br>audio and video, the sample will also set up the video stream. <br> <br>When a call arrives on one of the TAPI addresses, the "Answer" button will <br>be enabled, and the status message will change to "Incoming Owner Call". <br> <br>When the "Answer" button is clicked, the application will answer <br>the call. <br> <br> <br>What functionality does this sample show: <br> <br>The incoming sample application demonstrates to to receive new call <br>notification and call state event notifications.  It also demostrates <br>the basic TAPI 3.0 functions involved in answering a call. <br> <br>What this sample does not show: <br> <br>This sample does not let the user choose the TAPI address for the <br>application to use.  It does not allow the user to decide what media <br>types to listen for, and it does not allow the user to decide what <br>terminals to use. <br> <br>Hints: <br> <br>This sample should be able to run as long as you have TAPI devices <br>installed.  Many computers have a modem.  If the modem is installed  <br>correctly, it will show up as a TAPI device. <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
