<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CALLNOT.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5203"></a>CALLNOT.H</h2>
<pre><code>//////////////////////////////////////////////////////////////////////////// <br>// CallNotification.h : Declaration of the CCallNotification object <br>// <br>//////////////////////////////////////////////////////////////////////////// <br>#ifndef __CALLNOTIFICATION_H__ <br>#define __CALLNOTIFICATION_H__ <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CCallNotification <br>class CCallNotification : public ITCallNotification <br>{ <br>private: <br> <br>    DWORD       m_dwRefCount; <br>    ITAddress * m_pAddress; <br> <br>public: <br> <br>    // CCallNotification implements ITCallNotification <br>    //  Declare ITCallNotification methods here <br>    HRESULT STDMETHODCALLTYPE CallEventNotification( <br>        ITAddress * pAddress, <br>        CALL_EVENT_TYPE type, <br>        IDispatch * pEvent <br>        ); <br> <br> <br>// other COM stuff: <br>public: <br> <br>    // constructor <br>    CCallNotification(){} <br>    // destructor <br>    ~CCallNotification(){} <br> <br>    // initialization function <br>    // this stuff could also be done in the <br>    // constructor <br>    HRESULT Initialize( ITAddress * pAddress ) <br>    { <br>        m_dwRefCount = 1; <br>        m_pAddress = pAddress; <br>        m_pAddress-&gt;AddRef(); <br> <br>        return S_OK; <br>    } <br> <br>    void Shutdown() <br>    { <br>        if (NULL != m_pAddress) <br>        { <br>            m_pAddress-&gt;Release(); <br>        } <br>    } <br> <br>    // IUnknown implementation <br>HRESULT STDMETHODCALLTYPE QueryInterface(REFIID iid, void **ppvObject) <br>    { <br>        if (iid == IID_ITCallNotification) <br>        { <br>            m_dwRefCount++; <br>            *ppvObject = (void *)this; <br>            return S_OK; <br>        } <br> <br>        if (iid == IID_IUnknown) <br>        { <br>            m_dwRefCount++;             <br>            *ppvObject = (void *)this; <br>            return S_OK; <br>        } <br> <br>        return S_FALSE; <br>    } <br>ULONG STDMETHODCALLTYPE AddRef() <br>    { <br>        m_dwRefCount++; <br>        return m_dwRefCount; <br>    } <br>     <br>ULONG STDMETHODCALLTYPE Release() <br>    { <br>        ULONG l; <br>         <br>        l  = m_dwRefCount--; <br> <br>        if ( 0 == m_dwRefCount) <br>        { <br>            delete this; <br>        } <br>         <br>        return l; <br>    } <br> <br> <br>}; <br> <br>#endif //__CALLNOTIFICATION_H__ <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
