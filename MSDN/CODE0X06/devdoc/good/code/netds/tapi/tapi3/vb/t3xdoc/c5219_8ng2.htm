<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TOOLS.BAS</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5222"></a>TOOLS.BAS</h2>
<pre><code>Attribute VB_Name = "Tools" <br> <br>' <br>'Tools.bas <br>' <br> <br>Option Explicit <br> <br>' <br>'declarations needed for using win32 api MessageBox <br>' <br>Declare Function MessageBox Lib "user32" Alias "MessageBoxA" (ByVal hwnd As Long, ByVal lpText As String, ByVal lpCaption As String, ByVal wType As Long) As Long <br>Public Const MB_OK = &amp;H0&amp; <br>'add a new constant, that Or-ed with MB_OK will avoid the beep <br>Public Const MB_USERICON = &amp;H80&amp; <br> <br>     <br>Public Sub PrintError(strTitle As String, Error As ErrObject) <br>    Dim strMsg <br>    strMsg = strTitle &amp; ": run time error " &amp; _ <br>        Error.Number &amp; " Description: " &amp; Error.Description <br>     <br>    Debug.Print (strMsg) <br>End Sub <br> <br>Public Function MTGuidToName(guidMediaType As String) As String <br>     <br>    Select Case guidMediaType <br>        Case TAPIMEDIATYPE_String_AudioIn <br>            MTGuidToName = "AudioIn" <br>        Case TAPIMEDIATYPE_String_AudioOut <br>            MTGuidToName = "AudioOut" <br>        Case TAPIMEDIATYPE_String_DataModem <br>            MTGuidToName = "DataModem" <br>        Case TAPIMEDIATYPE_String_G3Fax <br>            MTGuidToName = "G3Fax" <br>        Case TAPIMEDIATYPE_String_VideoIn <br>            MTGuidToName = "VideoIn" <br>        Case TAPIMEDIATYPE_String_VideoOut <br>            MTGuidToName = "VideoOut" <br>        Case Else <br>            MTGuidToName = "" <br>            Debug.Print ("Error: MTGuidToName: unknown Media Type!") <br>    End Select <br>     <br>    Debug.Assert (MTGuidToName &lt;&gt; "") <br> <br>End Function <br> <br>Private Function TerminalClassToName(guidTermClass As String) As String <br>     <br>    Select Case guidTermClass <br>        Case CLSID_String_FileTerminal <br>            TerminalClassToName = "File" <br>        Case CLSID_String_HandsetTerminal <br>            TerminalClassToName = "Handset" <br>        Case CLSID_String_HeadsetTerminal <br>            TerminalClassToName = "Headset" <br>        Case CLSID_String_MicrophoneTerminal <br>            TerminalClassToName = "Microphone" <br>        Case CLSID_String_SpeakerphoneTerminal <br>            TerminalClassToName = "Speakerphone" <br>        Case CLSID_String_SpeakersTerminal <br>            TerminalClassToName = "Speakers" <br>        Case CLSID_String_VideoInputTerminal <br>            TerminalClassToName = "VideoInput" <br>        Case CLSID_String_VideoWindowTerm <br>            TerminalClassToName = "VideoWindow" <br>        Case Else <br>            TerminalClassToName = "Unknown Class" <br>            Debug.Print ("Error: TerminalClassToName: unknown Terminal Class!") <br>    End Select <br>     <br>    Debug.Assert (TerminalClassToName &lt;&gt; "") <br> <br>End Function <br> <br>'This function creates the "complete" name of the terminal, by <br>'concatenating its name and its class. It is usefull for the cases <br>'when terminal names are not unique (i.e. the same name SoundBlaster <br>'can appear twice, once for the microphone device, once for the <br>'speakers device) <br>Public Function TerminalToCompleteName(objTerminal As Terminal) As String <br>On Error GoTo ErrHandle <br>     <br>    Dim strTerminalName As String <br>    Dim strTerminalClass As String <br>     <br>    'the received terminal can be a valid terminal or the Null terminal <br>    'the Null terminal is considered valid too, but I need to create its name <br>     <br>    If objTerminal Is Nothing Then <br>        strTerminalName = "No Terminal" <br>        strTerminalClass = "" <br>    Else <br>        strTerminalName = objTerminal.Name <br>        strTerminalClass = TerminalClassToName(objTerminal.TerminalClass) <br>    End If <br>     <br>cleanup: <br>    'append terminal name and terminal class name and return it <br>    TerminalToCompleteName = strTerminalName &amp; " - " &amp; strTerminalClass <br>    Exit Function <br> <br>ErrHandle: <br>    'I resume next, because I want to retrieve as much information <br>    'as possible about the terminal's name. Maybe I end up only with <br>    'its name without the class, but it's more than nothing <br>     <br>    Call PrintError("TerminalToCompleteName", Err) <br>    Resume Next <br>End Function <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
