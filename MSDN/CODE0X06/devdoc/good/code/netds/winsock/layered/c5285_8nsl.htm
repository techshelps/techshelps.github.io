<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DLLMAIN.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5295"></a>DLLMAIN.CPP</h2>
<pre><code>/*++ <br> <br>     Copyright (c) 1996 Intel Corporation <br>     Copyright 1996 - 1998 Microsoft Corporation <br>     All Rights Reserved <br> <br>     Permission is granted to use, copy and distribute this software and <br>     its documentation for any purpose and without fee, provided, that <br>     the above copyright notice and this statement appear in all copies. <br>     Intel makes no representations about the suitability of this <br>     software for any purpose.  This software is provided "AS IS." <br> <br>     Intel specifically disclaims all warranties, express or implied, <br>     and all liability, including consequential and other indirect <br>     damages, for the use of this software, including liability for <br>     infringement of any proprietary rights, and including the <br>     warranties of merchantability and fitness for a particular purpose. <br>     Intel does not assume any responsibility for any errors which may <br>     appear in this software nor any responsibility to update it. <br> <br> <br>Module Name: <br> <br>    dllmain.cpp <br> <br>Abstract: <br>    This module contains the DllMain entry point for lsp.dll to <br>    control the global init and shutdown of the DLL. <br> <br>--*/ <br> <br>#pragma warning(disable: 4001)      /* Single-line comment */ <br> <br>#include "precomp.h" <br> <br>HINSTANCE   HDllInstance; <br>DWORD       TlsIndex=0xFFFFFFFF; <br> <br>  <br>BOOL WINAPI DllMain( <br>    IN HINSTANCE hinstDll, <br>    IN DWORD fdwReason, <br>    LPVOID lpvReserved <br>    ) <br>{ <br> <br>   switch (fdwReason) { <br> <br>   case DLL_PROCESS_ATTACH: <br>      // DLL is attaching to the address <br>      // space of the current process. <br>      DTHookInitialize(); <br>      InitializeCriticalSection(&amp;gInitCriticalSection); <br>      HDllInstance = hinstDll; <br>  TlsIndex = TlsAlloc(); <br>      break; <br> <br>   case DLL_THREAD_ATTACH: <br>      // A new thread is being created in the current process. <br>      break; <br> <br>   case DLL_THREAD_DETACH: <br>      // A thread is exiting cleanly. <br>      break; <br> <br>   case DLL_PROCESS_DETACH: <br>      // The calling process is detaching <br>      // the DLL from its address space. <br>      // <br>      // Note that lpvReserved will be NULL if the detach is due to <br>      // a FreeLibrary() call, and non-NULL if the detach is due to <br>      // process cleanup. <br>      // <br> <br>  if( lpvReserved == NULL ) { <br>  if (TlsIndex!=0xFFFFFFFF) { <br>  TlsFree (TlsIndex); <br>  TlsIndex = 0xFFFFFFFF; <br>  } <br>      } <br> <br>  DeleteCriticalSection(&amp;gInitCriticalSection); <br>      DTHookShutdown(); <br>      break; <br>   } <br> <br> <br>   return(TRUE); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
