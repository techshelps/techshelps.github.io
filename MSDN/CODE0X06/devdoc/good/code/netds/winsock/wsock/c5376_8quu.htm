<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5376"></a>README.TXT</h2>
<pre><code>Demonstration of the Windows Sockets API <br> <br> <br>SUMMARY <br>======= <br> <br>The WSOCK sample demonstrates the basics of sockets programming,  <br>specifically for Windows Sockets. It demonstrates how to accept incoming  <br>connections (using the Windows Sockets Asynchronous Extension APIs, threads,  <br>and traditional BSD-style blocking calls) and how to connect to remote  <br>hosts. Once connected, you can send a text string to the remote host. WSOCK  <br>also allows the user to view information on a user-entered host name. <br> <br>WSOCK demonstrates how to use AcceptEx which is a Microsoft specific <br>extension to Windows Sockets and which is only supported on Windows NT. <br> <br> <br>MORE INFORMATION <br>================ <br> <br>For the sample to operate correctly, the TCP/IP protocol must be properly  <br>installed. Also, if two machines are used over a network, both machines must  <br>have a HOSTS text file (for Windows NT machines, this file is located in  <br>%SYSTEMROOT%\SYSTEM32\DRIVERS\ETC\HOSTS; for Windows for Workgroups  <br>machines, this file is located in C:/WINDOWS/HOSTS). Within each HOSTS file,  <br>both the remote and local addresses of both machines must be listed. <br> <br>WSOCK can run on a single machine (execute two copies of WSOCK) or over a  <br>network with two machines. The following example explains how two separate  <br>machines over a network would test WSOCK: <br> <br> 1. Machine "Bob" executes a copy of WSOCK. <br> 2. Machine "Fred" executes a copy of WSOCK. <br> 3. Machine "Bob" chooses one of the Listen menu options (under WinSock)  <br>    [Listen (Blocking), Listen With Threads, or Async Listen]. <br> 4. Machine "Fred" selects the Connect menu option (under WinSock). <br> 5. Machine "Bob" enters "12" as a TCP port number. <br> 6. Machine "Bob" waits for a connection. <br> 7. Machine "Fred" enters "Bob" as the host name to connect to. <br> 8. Machine "Fred" enters "12" as a TCP port number. <br> <br>Both machines are now connected and can send strings back and forth by using  <br>the WinSock Send Message menu option. <br> <br>If Bob exits WSOCK while there is a connection, Fred receives a message box  <br>notification. <br> <br>FUNCTIONS USED <br>============== <br> <br>accept <br>closesocket <br>connect <br>gethostbyname <br>getservbyname <br>htons <br>listen <br>send <br>recv <br>WSAAsyncSelect <br>WSACleanup <br>WSAStartup </code></pre>
<p>&nbsp;</p></body>
</HTML>
