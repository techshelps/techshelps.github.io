<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5238"></a>README.TXT</h2>
<pre><code>This module illustrates the Win32 Winsock and Mailslot APIs to do a generic <br>broadcast over IPX, UDP and Mailslot protocols. <br> <br>    This example implements a client and a server. The example has a number <br>command line options. For example, <br> <br>    -s To run the example as a server(default role). <br> <br>    -c To run the example as a client. <br>    <br>-p &lt;i or m or u&gt; To specify the protocol to be used. <br> i - IPX. <br> m - Mailslots. <br> u - UDP(default protocol). <br> <br>    -e &lt;Endpoint&gt; To specify an end point of your choice. This is a mandatory <br>parameter. Servers create this endpoint and read broadcast messages. An  <br>endpoint in case Mailslot protocol is a Mailslot name.(default is 5005).  <br> <br>    -d &lt;DomainName&gt; - To specify a domain name or a workgroup name. This is  <br>useful for Mailslot clients, only. <br> <br>To run the application as a server, the following command lines can be  <br>specified: <br>     <br>bcast -s -e 8000 -p u <br>bcast -s -e 8000 -p i <br>bcast -s -e MAILSLOT1 -p m <br> <br>To run the application as a client, the following command lines can be <br>specified: <br> <br>bcast -c -e 8000 -p u <br>bcast -c -e 8000 -p i <br>bcast -c -e MAILSLOT1 -p m -d DOMAIN1 <br>bcast -c -e MAILSLOT1 -p m -d WORKGROUP1 </code></pre>
<p>&nbsp;</p></body>
</HTML>
