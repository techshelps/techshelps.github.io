<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HUERROR.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5246"></a>HUERROR.CPP</h2>
<pre><code>/*++ <br> <br>  Copyright (c) 1995 Intel Corp <br> <br>  File Name: <br> <br>    huerror.cpp <br> <br>  Abstract: <br> <br>    Error functions. <br> <br>--*/ <br> <br>#include "nowarn.h"  /* turn off benign warnings */ <br>#include &lt;stdio.h&gt; <br>#include "huerror.h" <br> <br>static ErrorCode_e HULastError= ENONE; <br> <br>void HUSetLastError(ErrorCode_e ErrorCode) <br>{ <br>  HULastError = ErrorCode; <br>} <br> <br>ErrorCode_e HUGetLastError() <br>{ <br>  return HULastError; <br>} <br> <br>void HUPrintError(char *func,ErrorCode_e ErrorCode) <br>{ <br>  if(func == NULL){ <br>    printf("Error: - - "); <br>  }else{ <br>    printf("Error: %s - - ",func); <br>  } <br>  switch(ErrorCode){ <br>    case ENONE: <br>printf("No error\n"); <br>break; <br>    case ALLOCERROR: <br>printf("Allocation error\n"); <br>break; <br>    case INVALIDARG: <br>printf("Invalid arguement passed in\n"); <br>break; <br>    case OBJNOTINIT: <br>printf("Object not initialized\n"); <br>break; <br>    case OBJEFFERROR: <br>printf("Object becoming ineffecient. Trying making it large\n"); <br>break; <br>    case ALREADYCONN: <br>printf("Already connected\n"); <br>break; <br>    default: <br>      printf("ErrorCode not defined\n"); <br>  } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
