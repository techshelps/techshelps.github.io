<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DT_DLL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5243"></a>DT_DLL.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1995 Intel Corp <br> <br>File Name: <br> <br>    dt_dll.h <br> <br>Abstract: <br> <br>    This header describes the interface to the WinSock 2 debug/trace <br>    DLL.  Please see the design spec for more information. <br> <br>-*/ <br> <br>#ifndef _DT_DLL_H <br>#define _DT_DLL_H <br> <br>#include "nowarn.h" <br>#include &lt;winsock2.h&gt; <br> <br> <br>// <br>// This type defines a pointer to the Pre/PostApiNotify functions <br>// <br> <br>typedef BOOL (WINAPIV * LPFNWSANOTIFY)( <br>    IN  INT    NotificationCode, <br>    OUT LPVOID ReturnCode, <br>    IN  LPSTR  LibraryName, <br>    ...); <br> <br>// <br>// Function prototypes for Pre/PostApiNotify <br>// <br> <br>BOOL WINAPIV <br>WSAPreApiNotify( <br>    IN  INT    NotificationCode, <br>    OUT LPVOID ReturnCode, <br>    IN  LPSTR  LibraryName, <br>    ...); <br> <br>BOOL WINAPIV <br>WSAPostApiNotify( <br>    IN  INT    NotificationCode, <br>    OUT LPVOID ReturnCode, <br>    IN  LPSTR  LibraryName, <br>    ...); <br> <br>// <br>// Pointer to an exception notification function. <br>// <br> <br>typedef <br>VOID <br>(WINAPI * LPFNWSAEXCEPTIONNOTIFY)( <br>    IN LPEXCEPTION_POINTERS ExceptionPointers <br>    ); <br> <br>// <br>// Function prototype for exception notify. <br>// <br> <br>VOID <br>WINAPI <br>WSAExceptionNotify( <br>    IN LPEXCEPTION_POINTERS ExceptionPointers <br>    ); <br> <br> <br>// <br>// API function codes for Pre/PostApiNotify functions.  Note:  These must start <br>// at  1  or more and be fairly densely assigned.  Small gaps can be tolerated. <br>// Note  that  a  "MAX_DTCODE"  definition  should  be updated if new codes are <br>// added. <br>// <br> <br>#define DTCODE_accept 1 <br>#define DTCODE_bind 2 <br>#define DTCODE_closesocket 3 <br>#define DTCODE_connect 4 <br>#define DTCODE_getpeername 5 <br>#define DTCODE_getsockname 6 <br>#define DTCODE_getsockopt 7 <br>#define DTCODE_htonl 8 <br>#define DTCODE_htons 9 <br>#define DTCODE_ioctlsocket 10 <br>#define DTCODE_listen 11 <br>#define DTCODE_ntohl 12 <br>#define DTCODE_ntohs 13 <br>#define DTCODE_recv 14 <br>#define DTCODE_recvfrom 15 <br>#define DTCODE_select 16 <br>#define DTCODE_send 17 <br>#define DTCODE_sendto 18 <br>#define DTCODE_setsockopt 19 <br>#define DTCODE_shutdown 20 <br>#define DTCODE_socket 21 <br>#define DTCODE_WSAAccept 22 <br>#define DTCODE_WSAAsyncSelect 23 <br>#define DTCODE_WSACancelBlockingCall 24 <br>#define DTCODE_WSACleanup 25 <br>#define DTCODE_WSACloseEvent 26 <br>#define DTCODE_WSAConnect 27 <br>#define DTCODE_WSACreateEvent 28 <br>#define DTCODE_WSADuplicateSocketA 29 <br>#define DTCODE_WSAEnumNetworkEvents 30 <br>#define DTCODE_WSAEnumProtocolsA 31 <br>#define DTCODE_WSAEventSelect 32 <br>#define DTCODE_WSAGetLastError 33 <br>#define DTCODE_WSAGetOverlappedResult 34 <br>#define DTCODE_WSAGetQOSByName 35 <br>#define DTCODE_WSAHtonl 36 <br>#define DTCODE_WSAHtons 37 <br>#define DTCODE_WSAIoctl 38 <br>#define DTCODE_WSAIsBlocking 39 <br>#define DTCODE_WSAJoinLeaf 40 <br>#define DTCODE_WSANtohl 41 <br>#define DTCODE_WSANtohs 42 <br>#define DTCODE_WSARecv 43 <br>#define DTCODE_WSARecvDisconnect 44 <br>#define DTCODE_WSARecvFrom 45 <br>#define DTCODE_WSAResetEvent 46 <br>#define DTCODE_WSASend 47 <br>#define DTCODE_WSASendDisconnect 48 <br>#define DTCODE_WSASendTo 49 <br>#define DTCODE_WSASetBlockingHook 50 <br>#define DTCODE_WSASetEvent 51 <br>#define DTCODE_WSASetLastError 52 <br>#define DTCODE_WSASocketA 53 <br>#define DTCODE_WSAStartup 54 <br>#define DTCODE_WSAUnhookBlockingHook 55 <br>#define DTCODE_WSAWaitForMultipleEvents 56 <br>#define DTCODE_gethostbyaddr 57 <br>#define DTCODE_gethostbyname 58 <br>#define DTCODE_gethostname 59 <br>#define DTCODE_getprotobyname 60 <br>#define DTCODE_getprotobynumber 61 <br>#define DTCODE_getservbyname 62 <br>#define DTCODE_getservbyport 63 <br>#define DTCODE_inet_addr 64 <br>#define DTCODE_inet_ntoa 65 <br>#define DTCODE_WSAAsyncGetHostByAddr 66 <br>#define DTCODE_WSAAsyncGetHostByName 67 <br>#define DTCODE_WSAAsyncGetProtoByName 68 <br>#define DTCODE_WSAAsyncGetProtoByNumber 69 <br>#define DTCODE_WSAAsyncGetServByName 70 <br>#define DTCODE_WSAAsyncGetServByPort 71 <br>#define DTCODE_WSACancelAsyncRequest 72 <br>#define DTCODE_WSPAccept 73 <br>#define DTCODE_WSPAsyncSelect 74 <br>#define DTCODE_WSPBind 75 <br>#define DTCODE_WSPCancelBlockingCall 76 <br>#define DTCODE_WSPCleanup 77 <br>#define DTCODE_WSPCloseSocket 78 <br>#define DTCODE_WSPConnect 79 <br>#define DTCODE_WSPDuplicateSocket 80 <br>#define DTCODE_WSPEnumNetworkEvents 81 <br>#define DTCODE_WSPEventSelect 82 <br>#define DTCODE_WSPGetOverlappedResult 83 <br>#define DTCODE_WSPGetPeerName 84 <br>// The  WSPGetProcTable  function  has  been removed, but the code numbers have <br>// been kept the same. <br>// #define DTCODE_WSPGetProcTable 85 <br>#define DTCODE_WSPGetSockName 86 <br>#define DTCODE_WSPGetSockOpt 87 <br>#define DTCODE_WSPGetQOSByName 88 <br>#define DTCODE_WSPIoctl 89 <br>#define DTCODE_WSPJoinLeaf 90 <br>#define DTCODE_WSPListen 91 <br>#define DTCODE_WSPRecv 92 <br>#define DTCODE_WSPRecvDisconnect 93 <br>#define DTCODE_WSPRecvFrom 94 <br>#define DTCODE_WSPSelect 95 <br>#define DTCODE_WSPSend 96 <br>#define DTCODE_WSPSendDisconnect 97 <br>#define DTCODE_WSPSendTo 98 <br>#define DTCODE_WSPSetSockOpt 99 <br>#define DTCODE_WSPShutdown 100 <br>#define DTCODE_WSPSocket 101 <br>#define DTCODE_WSPStartup 102 <br>#define DTCODE_WPUCloseEvent 103 <br>#define DTCODE_WPUCloseSocketHandle 104 <br>#define DTCODE_WPUCreateEvent 105 <br>#define DTCODE_WPUCreateSocketHandle 106 <br>#define DTCODE_WSCDeinstallProvider 107 <br>#define DTCODE_WSCInstallProvider 108 <br>#define DTCODE_WPUModifyIFSHandle 109 <br>#define DTCODE_WPUQueryBlockingCallback 110 <br>#define DTCODE_WPUQuerySocketHandleContext 111 <br>#define DTCODE_WPUQueueApc 112 <br>#define DTCODE_WPUResetEvent 113 <br>#define DTCODE_WPUSetEvent 114 <br>#define DTCODE_WSCEnumProtocols 115 <br>#define DTCODE_WPUGetProviderPath 116 <br>#define DTCODE_WPUPostMessage 117 <br>#define DTCODE_WPUFDIsSet 118 <br>#define DTCODE_WSADuplicateSocketW 119 <br>#define DTCODE_WSAEnumProtocolsW 120 <br>#define DTCODE_WSASocketW 121 <br>#define DTCODE___WSAFDIsSet 122 <br>#define DTCODE_WSAAddressToStringA 123 <br>#define DTCODE_WSAAddressToStringW 124 <br>#define DTCODE_WSAStringToAddressA 125 <br>#define DTCODE_WSAStringToAddressW 126 <br>#define DTCODE_WSALookupServiceBeginA 127 <br>#define DTCODE_WSALookupServiceBeginW 128 <br>#define DTCODE_WSALookupServiceNextA 129 <br>#define DTCODE_WSALookupServiceNextW 130 <br>#define DTCODE_WSALookupServiceEnd 131 <br>// <br>// WSAGetAddressByName[AW] have been removed. <br>// <br>// #define DTCODE_WSAGetAddressByNameA 132 <br>// #define DTCODE_WSAGetAddressByNameW 133 <br>#define DTCODE_WSAInstallServiceClassA 134 <br>#define DTCODE_WSAInstallServiceClassW 135 <br>#define DTCODE_WSASetServiceA 136 <br>#define DTCODE_WSASetServiceW 137 <br>#define DTCODE_WSARemoveServiceClass 138 <br>#define DTCODE_WSAGetServiceClassInfoA 139 <br>#define DTCODE_WSAGetServiceClassInfoW 140 <br>#define DTCODE_WSAEnumNameSpaceProvidersA 141 <br>#define DTCODE_WSAEnumNameSpaceProvidersW 142 <br>#define DTCODE_WSAGetServiceClassNameByClassIdA 143 <br>#define DTCODE_WSAGetServiceClassNameByClassIdW 144 <br>#define DTCODE_NSPAddressToString 145 <br>#define DTCODE_NSPStringToAddress 146 <br>#define DTCODE_NSPLookupServiceBegin 147 <br>#define DTCODE_NSPLookupServiceNext 148 <br>#define DTCODE_NSPLookupServiceEnd 149 <br>#define DTCODE_NSPGetAddressByName 150 <br>#define DTCODE_NSPInstallServiceClass 151 <br>#define DTCODE_NSPSetService 152 <br>#define DTCODE_NSPRemoveServiceClass 153 <br>#define DTCODE_NSPGetServiceClassInfo 154 <br>#define DTCODE_NSPEnumNameSpaceProviders 155 <br>#define DTCODE_NSPGetServiceClassNameByClassId 156 <br>#define DTCODE_WSCGetProviderPath 157 <br>#define DTCODE_WSCInstallNameSpace 158 <br>#define DTCODE_WSCUnInstallNameSpace 159 <br>#define DTCODE_WSCEnableNSProvider 160 <br>#define DTCODE_WSPAddressToString 161 <br>#define DTCODE_WSPStringToAddress 162 <br> <br>#define MAX_DTCODE DTCODE_WSPStringToAddress <br> <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
