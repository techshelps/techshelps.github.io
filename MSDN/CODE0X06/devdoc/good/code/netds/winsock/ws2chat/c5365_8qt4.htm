<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHATSOCK.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5368"></a>CHATSOCK.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1995 Intel Corp <br> <br>Module Name: <br> <br>    chatsock.h <br> <br>Abstract: <br> <br>    Header file containing constants, data structure definitions, and <br>    function prototypes for socket.c. <br> <br>--*/ <br> <br>#ifndef CHTSOCK_H <br>#define CHTSOCK_H <br> <br>#include "nowarn.h"  /* turn off benign warnings */ <br>#ifndef _WINSOCKAPI_ <br>#define _WINSOCKAPI_   /* Prevent inclusion of winsock.h in windows.h */ <br>#endif <br>#include &lt;windows.h&gt; <br>#include "nowarn.h"  /* some warnings may have been turned back on */ <br> <br> <br>// <br>// Manifest Constants <br>// <br> <br>#define WSA_WAIT_EVENT_1  WSA_WAIT_EVENT_0+1 <br>#define WSA_WAIT_EVENT_2  WSA_WAIT_EVENT_0+2 <br> <br> <br> <br> <br>// <br>// Typedefs <br>// <br> <br>typedef struct _CALLBACK_INFO { <br>    BOOL  DoneYet;   // has the overlapped I/O completed yet? <br>    LPSTR Buffer;    // the buffer we gave to WSASend <br>} CALLBACK_INFO, *PCALLBACK_INFO; <br> <br> <br> <br> <br>// <br>// Function Prototypes -- Exported Functions <br>// <br> <br>BOOL <br>InitWS2(void); <br> <br>BOOL <br>FindProtocols(void); <br> <br>BOOL <br>ListenAll(void); <br> <br>void <br>HandleAcceptMessage( <br>    IN HWND   ConnectionWindow, <br>    IN SOCKET Socket, <br>    IN LPARAM LParam); <br> <br>void <br>HandleConnectMessage( <br>    IN HWND   ConnectionWindow, <br>    IN LPARAM LongParam); <br> <br>BOOL <br>IsSendable( <br>    char Character); <br> <br>PCONNDATA <br>GetConnData( <br>    IN HWND ConnectionWindow); <br> <br>BOOL <br>MakeConnection( <br>    IN HWND WindowHandle); <br> <br>BOOL <br>FillInFamilies( <br>    IN HWND  DialogWindow, <br>    IN DWORD FamilyLB); <br> <br> <br>LPWSAPROTOCOL_INFO <br>GetProtoFromIndex( <br>    IN int LBIndex); <br> <br>void <br>CleanUpSockets(void); <br> <br>BOOL <br>GetAddressString( <br>    OUT char            *String, <br>    IN  LPVOID          SockAddr, <br>    IN  int             SockAddrLen, <br>    IN  LPWSAPROTOCOL_INFO ProtocolInfo); <br> <br>BOOL <br>UseProtocol( <br>    IN LPWSAPROTOCOL_INFO Proto); <br> <br>void <br>CleanupConnection( <br>    IN PCONNDATA ConnData); <br> <br>#endif // CHTSOCK_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
