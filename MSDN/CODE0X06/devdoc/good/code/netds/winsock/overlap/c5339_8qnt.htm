<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5339"></a>README.TXT</h2>
<pre><code>overlap.c: <br>--------- <br>This TCP sample demonstrates the use of AcceptEx() and overlapped I/O to  <br>multiplex different client connections in a single-threaded Win32 application. <br> <br>AcceptEx is a Microsoft-specific extension to Windows Sockets.  It is not <br>part of the Windows Sockets specification.  If you use this function, you <br>will limit your application to only run over implementations of Windows <br>Sockets that support AcceptEx -- some implementations do not. <br> <br>The server uses AcceptEx() to handle a number of asynchronous connection <br>requests effectively. When a connection is received, it is added to an array o <br>handles being monitored in a wait function.  <br>The server multiplexes between the listening socket and the various client <br>connections.  <br> <br>When a connection is first established, the server queues an overlapped <br>ReadFile operation on the socket. On subsequent notification that this <br>operation has completed, the server queues a WriteFile. Thus, the server does <br>alternate reads and writes  the socket, until the client closes the <br>connection. <br> <br>usage: <br>overlap -e &lt;endpoint&gt;  -i &lt;interface&gt; <br> <br>where, <br>endpoint is the port to listen on. <br>interface is the IP address to bind to for multi-homed hosts. </code></pre>
<p>&nbsp;</p></body>
</HTML>
