<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIALDLG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4828"></a>DIALDLG.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   dialdlg.c <br>// <br>//  PURPOSE:   Displays the "DialDlg" dialog box <br>// <br>//  FUNCTIONS: <br>//    DialDlg           - Processes messages for "DialDlg" dialog box. <br>//    MsgDialDlgInit    - To initialize the dialdlg box and make the <br>//                        RasDial call. <br>//    MsgDialDlgEvent   - Process WM_RASDIALEVENT message. <br>//    MsgDialDlgCommand - Process WM_COMMAND message. <br>//    CmdDialDlgCancel  - Free the dialdlg box and related data. <br>//    RasDialFunc       - RasDial callback function for Win32. <br>// <br>//  COMMENTS: <br>//    Dialog box to display status of connection attempt <br>// <br>// <br> <br>#include &lt;windows.h&gt;            // required for all Windows applications <br>#include &lt;windowsx.h&gt; <br>#ifdef WIN16 <br>#include "win16ext.h"           // required only for win16 applications <br>#endif <br>#include "globals.h"            // prototypes specific to this application <br>#include &lt;ras.h&gt; <br>#include &lt;raserror.h&gt; <br>#include "rasutil.h" <br>#include "dialdlg.h" <br>#include "phbkdlg.h" <br> <br>LRESULT MsgDialDlgInit(HWND, UINT, WPARAM, LPARAM); <br>LRESULT MsgDialDlgEvent(HWND, UINT, WPARAM, LPARAM); <br>LRESULT MsgDialDlgCommand(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CmdDialDlgCancel(HWND, WORD, WORD, HWND); <br> <br> <br> <br>#ifdef WIN32 <br>VOID WINAPI RasDialFunc( UINT unMsg, RASCONNSTATE rasconnstate, DWORD dwError ); <br>#endif <br> <br>// DialDlg dialog message table definition. <br>MSD rgmsdDialDlg[] = <br>{ <br>    {WM_RASDIALEVENT, MsgDialDlgEvent}, <br>    {WM_COMMAND,      MsgDialDlgCommand}, <br>    {WM_INITDIALOG,   MsgDialDlgInit} <br>}; <br> <br>MSDI msdiDialDlg = <br>{ <br>    sizeof(rgmsdDialDlg) / sizeof(MSD), <br>    rgmsdDialDlg, <br>    edwpNone <br>}; <br> <br>// DialDlg dialog command table definition. <br>CMD rgcmdDialDlg[] = <br>{ <br>    {IDCANCEL,  CmdDialDlgCancel} <br>}; <br> <br>CMDI cmdiDialDlg = <br>{ <br>    sizeof(rgcmdDialDlg) / sizeof(CMD), <br>    rgcmdDialDlg, <br>    edwpNone <br>}; <br> <br>// Module specific "globals"  Used when a variable needs to be <br>// accessed in more than on handler function. <br>HRASCONN hRasConn; <br> <br>#ifdef WIN32 <br>HWND   g_hDlg; <br>#endif <br> <br>// <br>//  FUNCTION: DialDlg(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE:  Processes messages for "DialDlg" dialog box. <br>// <br>//  PARAMETERS: <br>//    hdlg - window handle of the dialog box <br>//    wMessage - type of message <br>//    wparam - message-specific information <br>//    lparam - message-specific information <br>// <br>//  RETURN VALUE: <br>//    TRUE - message handled <br>//    FALSE - message not handled <br>// <br>//  COMMENTS: <br>// <br>// <br> <br>LRESULT CALLBACK DialDlg(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    return DispMessage(&amp;msdiDialDlg, hdlg, uMessage, wparam, lparam); <br>} <br> <br> <br>// <br>//  FUNCTION: MsgDialDlgInit(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: To initialize the dialdlg box and dial <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - WM_INITDLG. <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Registers window message for RAS event. <br>//    Makes call to RasDial with appropriate params. <br>// <br> <br>LRESULT MsgDialDlgInit(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    RASDIALPARAMS rdParams; <br>    char szEntry[RAS_MaxEntryName+1]; <br>    DWORD dwRet; <br>    char  szBuf[256]; <br>    HWND  hwndEntry; <br>    UINT  ndx; <br> <br>    hwndEntry = GetDlgItem( GetParent(hdlg), IDL_ENTRY); <br>    ndx = (UINT) SendMessage( hwndEntry, LB_GETCURSEL, 0,  0L ); <br>    SendMessage( hwndEntry, LB_GETTEXT, ndx, (LPARAM)(LPSTR)szEntry ); <br>    wsprintf( (LPSTR) szBuf, "Dialing %s...", (LPSTR) szEntry ); <br>    SetWindowText( hdlg, (LPSTR)szBuf ); <br> <br>    // setup RAS Dial Parameters <br>    rdParams.dwSize = sizeof(RASDIALPARAMS); <br>    lstrcpy(rdParams.szEntryName, szEntry ); <br>    rdParams.szPhoneNumber[0] = '\0'; <br>    rdParams.szCallbackNumber[0] = '*'; <br>    rdParams.szCallbackNumber[0] = '\0'; <br> <br>    if ( g_bUseCurrent ) <br>    { <br>        rdParams.szUserName[0] = '\0'; <br>        rdParams.szPassword[0] = '\0'; <br>        rdParams.szDomain[0] = '*'; <br>        rdParams.szDomain[1] = '\0'; <br>    } <br>    else <br>    {   <br>        lstrcpy(rdParams.szUserName, g_szUserName ); <br>        lstrcpy(rdParams.szPassword, g_szPassword ); <br>        lstrcpy(rdParams.szDomain,   g_szDomain ); <br>    } <br> <br>    hRasConn = NULL; <br> <br>#ifdef WIN16 <br>    rgmsdDialDlg[0].uMessage = RegisterWindowMessage(RASDIALEVENT); <br>    dwRet = RasDial( NULL, NULL, &amp;rdParams, NULL, hdlg, &amp;hRasConn );     <br>#else <br>    g_hDlg = hdlg; <br>    dwRet = RasDial( NULL, NULL, &amp;rdParams, 0L, (RASDIALFUNC) RasDialFunc, &amp;hRasConn ); <br>#endif <br> <br>    if ( dwRet ) <br>    { <br>        if ( RasGetErrorString( (UINT)dwRet, (LPSTR)szBuf, 256 ) != 0 ) <br>            wsprintf( (LPSTR)szBuf, "Undefined RAS Dial Error (%ld).", dwRet ); <br> <br>        MessageBox(hdlg, (LPSTR)szBuf, szAppName, MB_OK | MB_ICONSTOP ); <br>        EndDialog(hdlg, FALSE); <br>        return TRUE; <br>    } <br>    // Center the dialog over the application window <br>    CenterWindow(hdlg, GetWindow(hdlg, GW_OWNER)); <br> <br>    return TRUE; <br>} <br> <br>// <br>//  FUNCTION: MsgDialDlgEvent(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: To display messages during dialdlg <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - WM_RASDIALEVENT. <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Updates the text of IDT_MESSAGE to indicate the current <br>//    state in the connection.  The dialog is closed upon <br>//    connect or disconnect status. <br>// <br> <br>LRESULT MsgDialDlgEvent(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    char szMessage[256]; <br>         <br>    LoadString(hInst, GetRasConnState( (RASCONNSTATE) wparam ), szMessage, 64 ); <br>    SetDlgItemText( hdlg, IDT_MESSAGE, (LPCSTR) szMessage ); <br>                       <br>    if ( lparam )  // error occurred <br>    { <br>        if ( RasGetErrorString( (UINT)lparam, szMessage, 256 ) != 0 ) <br>            wsprintf( (LPSTR)szMessage, "Undefined RAS Dial Error." ); <br> <br>        MessageBox(hdlg, (LPSTR)szMessage, szAppName, MB_OK | MB_ICONSTOP ); <br>        PostMessage( hdlg, WM_COMMAND, (WPARAM) IDCANCEL, 0L ); <br>    }                                                                                                                <br>    else if ( RASCS_DONE &amp; wparam ) <br>    { <br>        EndDialog(hdlg, TRUE);          // Exit the dialog <br>    } <br> <br>    return TRUE; <br>} <br> <br>// <br>//  FUNCTION: MsgDialDlgCommand(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: Process WM_COMMAND message sent to the dialdlg box. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - The message number. (unused). <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Uses this DispCommand function defined in wndproc.c combined <br>//    with the cmdiDialDlg structure defined in this file to handle <br>//    the command messages for the dialdlg dialog box. <br>// <br> <br>LRESULT MsgDialDlgCommand(HWND   hwnd,  <br>                        UINT   uMessage,  <br>                        WPARAM wparam,  <br>                        LPARAM lparam) <br>{ <br>    return DispCommand(&amp;cmdiDialDlg, hwnd, wparam, lparam); <br>} <br> <br>// <br>//  FUNCTION: CmdDialDlgCancel(HWND, WORD, WORD,  HWND) <br>// <br>//  PURPOSE: Free the dialdlg box and related data. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handling the command. <br>//    wCommand - IDCANCEL. <br>//    wNotify - The notification to be handled (unused). <br>//    hwndCtrl - NULL (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE. <br>// <br>//  COMMENTS:     <br>//    Closes current connection attempt and calls EndDialog <br>//    to finish the dialog session. <br>// <br> <br>LRESULT CmdDialDlgCancel(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    RasHangUp( hRasConn ); <br>    EndDialog(hdlg, FALSE);          // Exit the dialog <br>    return TRUE; <br>} <br> <br> <br>#ifdef WIN32 <br>//  FUNCTION: RasDialFunc( UINT, RASCONNSTATE, DWORD ) <br>// <br>//  PURPOSE: Called by RasDial, passes params onto dialog box <br>// <br>//  PARAMETERS: <br>//    unMsg        - Yype of RAS event that occurred. <br>//    rasconnstate - Connection state about to be entered.  <br>//    dwError      - Error code that may have occurred. <br>// <br>//  COMMENTS: <br>//    appropriate action is taken in the WM_RASDIALMESSAGE handler <br> <br>VOID WINAPI RasDialFunc( UINT unMsg, RASCONNSTATE rasconnstate, DWORD dwError ) <br>{ <br>    PostMessage( g_hDlg, <br>                 rgmsdDialDlg[0].uMessage, <br>                 (WPARAM) rasconnstate, <br>                 (LPARAM) dwError ); <br> <br>} <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
