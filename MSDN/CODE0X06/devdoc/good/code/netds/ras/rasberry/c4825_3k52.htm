<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AUTHDLG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4826"></a>AUTHDLG.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   authdlg.c <br>// <br>//  PURPOSE:   Displays the "AuthDlg" dialog box <br>// <br>//  FUNCTIONS: <br>//    AuthDlg           - Processes messages for "AuthDlg" dialog box. <br>//    MsgAuthDlgInit    - To initialize the authdlg box with version info <br>//                      from resources. <br>//    MsgAuthDlgCommand - Process WM_COMMAND message sent to the authdlg box. <br>//    CmdAuthDlgOK      - Free the authdlg box and signal continue with dial. <br>//    CmdAuthDlgCancel  - Free the authdlg box. <br>// <br>//  COMMENTS: <br>//    Dialog Box to get authentication information <br>// <br>// <br> <br>#include &lt;windows.h&gt;            // required for all Windows applications <br>#include &lt;windowsx.h&gt; <br>#ifdef WIN16 <br>#include "win16ext.h"           // required only for win16 applications <br>#endif <br>#include "globals.h"            // prototypes specific to this application <br>#include &lt;ras.h&gt; <br>#include &lt;raserror.h&gt; <br>#include "authdlg.h" <br> <br>LRESULT MsgAuthDlgInit(HWND, UINT, WPARAM, LPARAM); <br>LRESULT MsgAuthDlgCommand(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CmdAuthDlgOK(HWND, WORD, WORD, HWND); <br>LRESULT CmdAuthDlgCancel(HWND, WORD, WORD, HWND); <br> <br> <br>// AuthDlg dialog message table definition. <br>MSD rgmsdAuthDlg[] = <br>{ <br>    {WM_COMMAND,      MsgAuthDlgCommand}, <br>    {WM_INITDIALOG,   MsgAuthDlgInit} <br>}; <br> <br>MSDI msdiAuthDlg = <br>{ <br>    sizeof(rgmsdAuthDlg) / sizeof(MSD), <br>    rgmsdAuthDlg, <br>    edwpNone <br>}; <br> <br>// AuthDlg dialog command table definition. <br>CMD rgcmdAuthDlg[] = <br>{ <br>    {IDOK,     CmdAuthDlgOK}, <br>    {IDCANCEL, CmdAuthDlgCancel} <br>}; <br> <br>CMDI cmdiAuthDlg = <br>{ <br>    sizeof(rgcmdAuthDlg) / sizeof(CMD), <br>    rgcmdAuthDlg, <br>    edwpNone <br>}; <br> <br>// Module specific "globals"  Used when a variable needs to be <br>// accessed in more than on handler function. <br> <br>// <br>//  FUNCTION: AuthDlg(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE:  Processes messages for "AuthDlg" dialog box. <br>// <br>//  PARAMETERS: <br>//    hdlg - window handle of the dialog box <br>//    wMessage - type of message <br>//    wparam - message-specific information <br>//    lparam - message-specific information <br>// <br>//  RETURN VALUE: <br>//    TRUE - message handled <br>//    FALSE - message not handled <br>// <br>//  COMMENTS: <br>//    Dispatches message to appropriate handler <br>// <br> <br>LRESULT CALLBACK AuthDlg(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    return DispMessage(&amp;msdiAuthDlg, hdlg, uMessage, wparam, lparam); <br>} <br> <br> <br>// <br>//  FUNCTION: MsgAuthDlgInit(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: To initialize the authdlg box <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - The message number. WM_INITDIALOG. <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Registers window message for RAS event. <br>//    Makes call to RasDial with appropriate params. <br>// <br> <br>LRESULT MsgAuthDlgInit(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    // Set text limits on edit controls <br>    SendDlgItemMessage(hdlg, IDE_USERNAME, EM_LIMITTEXT, (WPARAM) UNLEN, 0L ); <br>    SendDlgItemMessage(hdlg, IDE_PASSWORD, EM_LIMITTEXT, (WPARAM) PWLEN, 0L ); <br>    SendDlgItemMessage(hdlg, IDE_DOMAIN,   EM_LIMITTEXT, (WPARAM) DNLEN, 0L ); <br> <br>    // reset password <br>    g_szPassword[0] = '\0'; <br> <br>    // Set default text in edit controls <br>    SendDlgItemMessage(hdlg, IDE_USERNAME, WM_SETTEXT, (WPARAM) 0, (LPARAM)(LPSTR) g_szUserName ); <br>    SendDlgItemMessage(hdlg, IDE_PASSWORD, WM_SETTEXT, (WPARAM) 0, (LPARAM)(LPSTR) g_szPassword ); <br>    SendDlgItemMessage(hdlg, IDE_DOMAIN,   WM_SETTEXT, (WPARAM) 0, (LPARAM)(LPSTR) g_szDomain ); <br> <br>    // Center the dialog over the application window <br>    CenterWindow(hdlg, GetWindow(hdlg, GW_OWNER)); <br> <br>    return TRUE; <br>} <br> <br> <br>// <br>//  FUNCTION: MsgAuthDlgCommand(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: Process WM_COMMAND message sent to the authdlg box. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - The message number. (unused). <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Uses this DispCommand function defined in wndproc.c combined <br>//    with the cmdiAuthDlg structure defined in this file to handle <br>//    the command messages for the authdlg dialog box. <br>// <br> <br>LRESULT MsgAuthDlgCommand(HWND   hwnd, <br>                        UINT   uMessage, <br>                        WPARAM wparam, <br>                        LPARAM lparam) <br>{ <br>    return DispCommand(&amp;cmdiAuthDlg, hwnd, wparam, lparam); <br>} <br> <br>// <br>//  FUNCTION: CmdAuthDlgOK(HWND, WORD, WORD,  HWND) <br>// <br>//  PURPOSE: Free the authdlg box and related data. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handling the command. <br>//    wCommand - The command to be handle. IDOK. <br>//    wNotify - The notification to be handled (unused). <br>//    hwndCtrl - NULL (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE. <br>// <br>//  COMMENTS: <br>//    Calls EndDialog to finish the dialog session. <br>// <br> <br>LRESULT CmdAuthDlgOK(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    // Get text entered by the user <br>    SendDlgItemMessage(hdlg, IDE_USERNAME, WM_GETTEXT, (WPARAM) UNLEN+1, (LPARAM)(LPSTR) g_szUserName ); <br>    SendDlgItemMessage(hdlg, IDE_PASSWORD, WM_GETTEXT, (WPARAM) PWLEN+1, (LPARAM)(LPSTR) g_szPassword ); <br>    SendDlgItemMessage(hdlg, IDE_DOMAIN,   WM_GETTEXT, (WPARAM) DNLEN+1, (LPARAM)(LPSTR) g_szDomain ); <br> <br>    EndDialog(hdlg, TRUE);          // Exit the dialog <br>    return TRUE; <br>} <br> <br>// <br>//  FUNCTION: CmdAuthDlgCancel(HWND, WORD, WORD,  HWND) <br>// <br>//  PURPOSE: Free the authdlg box and related data. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handling the command. <br>//    wCommand - The command to be handled. IDCANCEL. <br>//    wNotify - The notification to be handled (unused). <br>//    hwndCtrl - NULL (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE. <br>// <br>//  COMMENTS: <br>//    Calls EndDialog to finish the dialog session. <br>// <br> <br>LRESULT CmdAuthDlgCancel(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    EndDialog(hdlg, FALSE);          // Exit the dialog <br>    return TRUE; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
