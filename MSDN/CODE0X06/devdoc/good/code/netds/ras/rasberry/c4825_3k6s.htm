<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PHBKDLG.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4834"></a>PHBKDLG.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   phbkdlg.c <br>// <br>//  PURPOSE:   Displays the "Phonebox Entries" dialog box <br>// <br>//  FUNCTIONS: <br>//    PhbkDlg           - Processes messages for "PhbkDlg" dialog box. <br>//    MsgPhbkDlgInit    - To initialize the phbkdlg box with version info <br>//                      from resources. <br>//    MsgPhbkDlgCommand - Process WM_COMMAND message sent to the phbkdlg box. <br>//    CmdPhbkDlgCancel  - Free the phbkdlg box and related data. <br>//    CmdPhbkDlgEntry   - Process LBN_DBLCLK for the entry list box <br>//    CmdPhbkDlgDial    - Calls AUTHDLG and/or DIALDLG boxes. <br>// <br>//  COMMENTS: <br>//    Displays and allow user to dial an entry from the default phonebook <br>// <br>// <br> <br>#include &lt;windows.h&gt;            // required for all Windows applications <br>#include &lt;windowsx.h&gt; <br>#ifdef WIN16 <br>#include "win16ext.h"           // required only for win16 applications <br>#endif <br>#include "globals.h"            // prototypes specific to this application <br>#include &lt;malloc.h&gt; <br>#include &lt;ras.h&gt; <br>#include &lt;raserror.h&gt; <br>#include "phbkdlg.h" <br>#include "dialdlg.h" <br>#include "authdlg.h" <br> <br>LRESULT MsgPhbkDlgInit(HWND, UINT, WPARAM, LPARAM); <br>LRESULT MsgPhbkDlgCommand(HWND, UINT, WPARAM, LPARAM); <br>LRESULT CmdPhbkDlgCancel(HWND, WORD, WORD, HWND); <br>LRESULT CmdPhbkDlgEntry(HWND, WORD, WORD, HWND); <br>LRESULT CmdPhbkDlgDial(HWND, WORD, WORD, HWND); <br> <br>  <br>// PhbkDlg dialog message table definition. <br>MSD rgmsdPhbkDlg[] = <br>{ <br>    {WM_COMMAND,    MsgPhbkDlgCommand}, <br>    {WM_INITDIALOG, MsgPhbkDlgInit} <br>}; <br> <br>MSDI msdiPhbkDlg = <br>{ <br>    sizeof(rgmsdPhbkDlg) / sizeof(MSD), <br>    rgmsdPhbkDlg, <br>    edwpNone <br>}; <br> <br>// PhbkDlg dialog command table definition. <br>CMD rgcmdPhbkDlg[] = <br>{ <br>    {IDB_DIAL,  CmdPhbkDlgDial}, <br>    {IDCANCEL,  CmdPhbkDlgCancel}, <br>    {IDL_ENTRY, CmdPhbkDlgEntry} <br>}; <br> <br>CMDI cmdiPhbkDlg = <br>{ <br>    sizeof(rgcmdPhbkDlg) / sizeof(CMD), <br>    rgcmdPhbkDlg, <br>    edwpNone <br>}; <br> <br>// Module specific "globals"  Used when a variable needs to be <br>// accessed in more than on handler function. <br> <br>#ifdef WIN16                     // for Win16 we require that the user <br>    BOOL g_bUseCurrent = FALSE;  // always enters username and password <br>#else <br>    BOOL g_bUseCurrent = TRUE; <br>#endif <br> <br>// <br>//  FUNCTION: PhbkDlg(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE:  Processes messages for "PhbkDlg" dialog box. <br>// <br>//  PARAMETERS: <br>//    hdlg - window handle of the dialog box <br>//    wMessage - type of message <br>//    wparam - message-specific information <br>//    lparam - message-specific information <br>// <br>//  RETURN VALUE: <br>//    TRUE - message handled <br>//    FALSE - message not handled <br>// <br>//  COMMENTS: <br>//    Dispatches messages for dialog box <br>// <br> <br>LRESULT CALLBACK PhbkDlg(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    return DispMessage(&amp;msdiPhbkDlg, hdlg, uMessage, wparam, lparam); <br>} <br> <br> <br>// <br>//  FUNCTION: MsgPhbkDlgInit(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: To initialize the phbkdlg box. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - The message number. WM_INITDIALOG. <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE - message handled. <br>// <br>//  COMMENTS: <br>//    Displays default phone book by calling RasEnumEntries <br>// <br> <br>LRESULT MsgPhbkDlgInit(HWND hdlg, UINT uMessage, WPARAM wparam, LPARAM lparam) <br>{ <br>    LPRASENTRYNAME lpRasEntry; <br>    LPRASENTRYNAME lpTemp; <br>    DWORD cbBuf; <br>    DWORD cEntry; <br>    DWORD dwRet; <br>    UINT  ndx; <br>    char  szMessage[256]; <br> <br>    cbBuf = sizeof(RASENTRYNAME); <br>    if ((lpRasEntry = ( LPRASENTRYNAME ) _fmalloc((UINT)cbBuf)) != NULL )  <br>    { <br>        lpRasEntry-&gt;dwSize = sizeof(RASENTRYNAME); <br>        dwRet = RasEnumEntries( NULL, NULL, lpRasEntry, &amp;cbBuf, &amp;cEntry ); <br>        if ( dwRet == ERROR_BUFFER_TOO_SMALL ) <br>        { <br>            if ((lpTemp = ( LPRASENTRYNAME ) _frealloc ( lpRasEntry, (UINT)cbBuf )) != NULL ) <br>            { <br>                lpRasEntry = lpTemp; <br>                dwRet = RasEnumEntries( NULL, NULL, lpRasEntry, &amp;cbBuf, &amp;cEntry ); <br>            } <br>            else <br>            { <br>                dwRet = ERROR_NOT_ENOUGH_MEMORY; <br>            } <br>        } <br>        else if ( dwRet != 0 ) // other error <br>        { <br>            if ( RasGetErrorString( (UINT)dwRet, szMessage, 256 ) != 0 ) <br>                wsprintf( (LPSTR)szMessage, "Undefined RasEnumEntries Error." ); <br> <br>            MessageBox(hdlg, (LPSTR)szMessage, szAppName, MB_OK | MB_ICONSTOP ); <br>        } <br> <br>        if ( dwRet == 0 )  // No errors <br>        { <br>            for ( ndx = 0; ndx &lt; cEntry; ndx++ )  <br>                SendDlgItemMessage( hdlg, <br>                                    IDL_ENTRY, <br>                                    LB_ADDSTRING, <br>                                    0, <br>                                    (LPARAM)(LPCSTR) lpRasEntry[ndx].szEntryName); <br> <br>            if ( ndx &gt; 0 ) // at least one item was added <br>            { <br>                SendDlgItemMessage( hdlg, IDL_ENTRY, LB_SETCURSEL, 0, 1L ); <br>                EnableWindow( GetDlgItem( hdlg, IDB_DIAL ), TRUE ); <br>            } <br>        } <br> <br>        _ffree( lpRasEntry ); <br>    }  <br>     <br>#ifdef WIN16 <br>    // for Win16, we require that the user enters their username <br>    ShowWindow( GetDlgItem( hdlg, IDC_USECURRENT ), SW_HIDE ); <br>#endif <br> <br>    CheckDlgButton( hdlg, IDC_USECURRENT, g_bUseCurrent ); <br> <br>    // Center the dialog over the application window <br>    CenterWindow(hdlg, GetWindow(hdlg, GW_OWNER)); <br> <br>    return TRUE; <br>} <br> <br>// <br>//  FUNCTION: MsgPhbkDlgCommand(HWND, UINT, WPARAM, LPARAM) <br>// <br>//  PURPOSE: Process WM_COMMAND message sent to the phbkdlg box. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handing the message. <br>//    uMessage - The message number. WM_COMMAND. <br>//    wparam - Message specific data (unused). <br>//    lparam - Message specific data (unused). <br>// <br>//  RETURN VALUE: <br>//    TRUE for message handled <br>//    FALSE for message not handled <br>// <br>//  COMMENTS: <br>//    Uses this DispCommand function defined in wndproc.c combined <br>//    with the cmdiPhbkDlg structure defined in this file to handle <br>//    the command messages for the phbkdlg dialog box. <br>// <br> <br>LRESULT MsgPhbkDlgCommand(HWND   hwnd,  <br>                          UINT   uMessage, <br>                          WPARAM wparam, <br>                          LPARAM lparam) <br>{ <br>    return DispCommand(&amp;cmdiPhbkDlg, hwnd, wparam, lparam); <br>} <br> <br>// <br>//  FUNCTION: CmdPhbkDlgCancel(HWND, WORD, WORD, HWND) <br>// <br>//  PURPOSE: Free the phbkdlg box and related data. <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handling the command. <br>//    wCommand - The command to be handled IDCANCEL. <br>//    wNotify  - The notification code to be handled (unused). <br>//    hwndCtrl - NULL (unused). <br>// <br>//  RETURN VALUE: <br>//    Always returns TRUE. <br>// <br>//  COMMENTS: <br>//    Calls EndDialog to finish the dialog session. <br>// <br> <br>LRESULT CmdPhbkDlgCancel(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    // save the state of the check box <br>    g_bUseCurrent = IsDlgButtonChecked( hdlg, IDC_USECURRENT ); <br>    EndDialog(hdlg, FALSE);          // Exit the dialog <br>    return TRUE; <br>} <br> <br> <br>// <br>//  FUNCTION: CmdPhbkDlgEntry(HWND, WORD, WORD, HWND) <br>// <br>//  PURPOSE: Dial selected phonebook phbkdlg <br>// <br>//  PARAMETERS: <br>//    hwnd - The window handling the command. <br>//    wCommand - The command to be handled IDL_ENTRY. <br>//    wNotify  - The notification code to be handled LBN_DBLCLK. <br>//    hwndCtrl - NULL (unused). <br>// <br>//  RETURN VALUE: <br>//    TRUE if message is processed. <br>// <br>//  COMMENTS: <br>//    Double click on an entry signifies a dial command. <br>// <br> <br>LRESULT CmdPhbkDlgEntry(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    if ( wNotify == LBN_DBLCLK ) <br>    { <br>        SendMessage( hdlg, WM_COMMAND, IDB_DIAL, 0 ); <br>        return TRUE; <br>    } <br>    return FALSE; <br>} <br> <br>// <br>//  FUNCTION: CmdPhbkDialDlg(HWND, WORD, WORD, HWND) <br>// <br>//  PURPOSE: Displays the "DialDlg" dialog box <br>// <br>//  PARAMETERS: <br>//    hdlg      - Window handle <br>//    wCommand  - IDB_DIAL(unused) <br>//    wNotify   - Notification number (unused) <br>//    hwndCtrl  - NULL (unused) <br>// <br>//  RETURN VALUE: <br>// <br>//    Always returns TRUE - Message handled <br>// <br>//  COMMENTS: <br>//    Calls authentication and dialing dialog boxes <br>// <br> <br>LRESULT CmdPhbkDlgDial(HWND hdlg, WORD wCommand, WORD wNotify, HWND hwndCtrl) <br>{ <br>    g_bUseCurrent = IsDlgButtonChecked( hdlg, IDC_USECURRENT ); <br> <br>    // short circut evaluation will cause the AuthDlg box not to be <br>    // displayed if g_bUseCurrent is true <br>    if ( g_bUseCurrent || DialogBox(hInst, "AuthDlgBox", hdlg, (DLGPROC)AuthDlg) ) <br>    { <br>        if( DialogBox(hInst, "DialDlgBox", hdlg, (DLGPROC)DialDlg)) <br>            EndDialog(hdlg, TRUE);          // Exit Phonebook dialog <br>                                            // if connection established <br>    } <br>    return TRUE; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
