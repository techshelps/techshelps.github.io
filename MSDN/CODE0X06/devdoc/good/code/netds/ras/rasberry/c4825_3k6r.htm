<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MISC.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4833"></a>MISC.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   misc.c <br>// <br>//  PURPOSE:  Contains all helper functions "global" to the application. <br>// <br>//  FUNCTIONS: <br>//    CenterWindow - Center one window over another. <br>// <br>//  COMMENTS: <br>// <br>// <br> <br>#include &lt;windows.h&gt;            // required for all Windows applications <br>#include &lt;windowsx.h&gt; <br> <br>#ifdef WIN16 <br>#include "win16ext.h"           // required only for win16 applications <br>#endif <br>#include "globals.h"            // prototypes specific to this application <br> <br> <br> <br>// <br>//  FUNCTION: CenterWindow(HWND, HWND) <br>// <br>//  PURPOSE:  Center one window over another. <br>// <br>//  PARAMETERS: <br>//    hwndChild - The handle of the window to be centered. <br>//    hwndParent- The handle of the window to center on. <br>// <br>//  RETURN VALUE: <br>// <br>//    TRUE  - Success <br>//    FALSE - Failure <br>// <br>//  COMMENTS: <br>// <br>//    Dialog boxes take on the screen position that they were designed <br>//    at, which is not always appropriate. Centering the dialog over a <br>//    particular window usually results in a better position. <br>// <br> <br>BOOL CenterWindow(HWND hwndChild, HWND hwndParent) <br>{ <br>    RECT    rcChild, rcParent; <br>    int     cxChild, cyChild, cxParent, cyParent; <br>    int     cxScreen, cyScreen, xNew, yNew; <br>    HDC     hdc; <br> <br>    // Get the Height and Width of the child window <br>    GetWindowRect(hwndChild, &amp;rcChild); <br>    cxChild = rcChild.right - rcChild.left; <br>    cyChild = rcChild.bottom - rcChild.top; <br> <br>    // Get the Height and Width of the parent window <br>    GetWindowRect(hwndParent, &amp;rcParent); <br>    cxParent = rcParent.right - rcParent.left; <br>    cyParent = rcParent.bottom - rcParent.top; <br> <br>    // Get the display limits <br>    hdc = GetDC(hwndChild); <br>    cxScreen = GetDeviceCaps(hdc, HORZRES); <br>    cyScreen = GetDeviceCaps(hdc, VERTRES); <br>    ReleaseDC(hwndChild, hdc); <br> <br>    // Calculate new X position, then adjust for screen <br>    xNew = rcParent.left + ((cxParent - cxChild) / 2); <br>    if (xNew &lt; 0) <br>    { <br>        xNew = 0; <br>    } <br>    else if ((xNew + cxChild) &gt; cxScreen) <br>    { <br>        xNew = cxScreen - cxChild; <br>    } <br> <br>    // Calculate new Y position, then adjust for screen <br>    yNew = rcParent.top  + ((cyParent - cyChild) / 2); <br>    if (yNew &lt; 0) <br>    { <br>        yNew = 0; <br>    } <br>    else if ((yNew + cyChild) &gt; cyScreen) <br>    { <br>        yNew = cyScreen - cyChild; <br>    } <br> <br>    // Set it, and return <br>    return SetWindowPos(hwndChild, <br>                        NULL, <br>                        xNew, yNew, <br>                        0, 0, <br>                        SWP_NOSIZE | SWP_NOZORDER); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
