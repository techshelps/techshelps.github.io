<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RASUTIL.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4837"></a>RASUTIL.C</h2>
<pre><code>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>// <br>// Copyright 1993 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>//  MODULE:   rasutil.c <br>// <br>//  PURPOSE:  Implement the windows procedure for the main application <br>//            windows.   <br>// <br>//  FUNCTIONS: <br>//    GetRasConnState - maps RASCONNSTATE value in index in string table <br>// <br>//  COMMENTS: <br>// <br>// <br> <br>#include &lt;windows.h&gt;            // required for all Windows applications <br>#include &lt;windowsx.h&gt; <br>#ifdef WIN16 <br>#include "win16ext.h"           // required only for win16 applications <br>#endif <br> <br>#include "globals.h"            // prototypes specific to this application <br>#include &lt;stdlib.h&gt; <br>#include &lt;ras.h&gt; <br>#include &lt;raserror.h&gt; <br>#include "rasutil.h" <br> <br> <br>// <br>//  FUNCTION: GetRasConnState( RASCONNSTATE ) <br>// <br>//  PURPOSE: get the index to the corresponding string <br>// <br>//  PARAMETERS: <br>//    rasconn - ras connection state <br>// <br>//  RETURN VALUE: <br>//    index into stringtable. <br>// <br>//  COMMENTS: <br>// <br>UINT GetRasConnState( RASCONNSTATE rasconn ) <br>{ <br>    switch( rasconn ) <br>    { <br>        case RASCS_OpenPort: <br>            return IDS_OPENPORT; <br>        case RASCS_PortOpened: <br>            return IDS_PORTOPENED;             <br>        case RASCS_ConnectDevice: <br>            return IDS_CONNECTDEVICE;         <br>        case RASCS_DeviceConnected: <br>            return IDS_DEVICECONNECTED;        <br>        case RASCS_AllDevicesConnected: <br>            return IDS_ALLDEVICESCONNECTED;    <br>        case RASCS_Authenticate: <br>            return IDS_AUTHENTICATE;           <br>        case RASCS_AuthNotify: <br>            return IDS_AUTHNOTIFY;             <br>        case RASCS_AuthRetry: <br>            return IDS_AUTHRETRY;              <br>        case RASCS_AuthCallback: <br>            return IDS_AUTHCALLBACK;           <br>        case RASCS_AuthChangePassword: <br>            return IDS_AUTHCHANGEPASSWORD;     <br>        case RASCS_AuthProject: <br>            return IDS_AUTHPROJECT;            <br>        case RASCS_AuthLinkSpeed: <br>            return IDS_AUTHLINKSPEED;          <br>        case RASCS_AuthAck:  <br>            return IDS_AUTHACK;                <br>        case RASCS_ReAuthenticate: <br>            return IDS_REAUTHENTICATE;         <br>        case RASCS_Authenticated: <br>            return IDS_AUTHENTICATED;          <br>        case RASCS_PrepareForCallback: <br>            return IDS_PREPAREFORCALLBACK;     <br>        case RASCS_WaitForModemReset: <br>            return IDS_WAITFORMODEMRESET;      <br>        case RASCS_WaitForCallback: <br>            return IDS_WAITFORCALLBACK;        <br>        case RASCS_Interactive: <br>            return IDS_INTERACTIVE;            <br>        case RASCS_RetryAuthentication:  <br>            return IDS_RETRYAUTHENTICATION;             <br>        case RASCS_CallbackSetByCaller:  <br>            return IDS_CALLBACKSETBYCALLER;    <br>        case RASCS_PasswordExpired: <br>            return IDS_PASSWORDEXPIRED;        <br>        case RASCS_Connected: <br>            return IDS_CONNECTED;             <br>        case RASCS_Disconnected: <br>            return IDS_DISCONNECTED;           <br>        default: <br>            return IDS_UNDEFINED_ERROR; <br>    } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
