<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EAP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5063"></a>EAP.H</h2>
<pre><code>/********************************************************************/ <br>/**          Copyright(c) 1985-1997 Microsoft Corporation.         **/ <br>/********************************************************************/ <br> <br>//*** <br>// <br>// Filename:    eap.h <br>// <br>// Description: Sample Extensible Authentication Protocol header file <br>// <br>// <br> <br>#ifndef _EAP_H_ <br>#define _EAP_H_ <br> <br>// <br>// This protocols Type Id <br>// <br> <br>#define PPP_EAP_PROTOCOL_ID 20 <br> <br>// <br>// Defines states within the this EAP protocol. <br>// <br> <br>typedef enum _MYSTATE  <br>{ <br>    MYSTATE_Initial, <br>    MYSTATE_WaitForUserOK, <br>    MYSTATE_WaitForRequest, <br>    MYSTATE_ReqSent, <br>    MYSTATE_WaitForAuthenticationToComplete, <br>    MYSTATE_Done <br> <br>}MYSTATE; <br> <br>typedef struct _EAPCB  <br>{ <br>    MYSTATE     EapState; <br> <br>    HANDLE      hPort; <br> <br>    BOOL        fAuthenticator; <br> <br>    LPVOID      pWorkBuffer; <br> <br>    CHAR        szIdentity[ UNLEN + 1 ]; <br> <br>    DWORD       dwIdExpected; <br> <br>    CHAR        szPassword[ PWLEN + 1 ]; <br> <br>    DWORD       dwResult; <br> <br>    PBYTE       pUIContext; <br> <br>    RAS_AUTH_ATTRIBUTE * pUserAttributes; <br> <br>} EAPCB, *PEAPCB; <br> <br>// <br>// Function Prototypes <br>// <br> <br>DWORD APIENTRY <br>EapBegin( <br>    OUT VOID** ppWorkBuf, <br>    IN  VOID*  pInfo  <br>); <br> <br>DWORD APIENTRY <br>EapEnd( <br>    IN VOID* pWorkBuf  <br>); <br> <br>DWORD APIENTRY <br>EapMakeMessage( <br>    IN  VOID*               pWorkBuf, <br>    IN  PPP_EAP_PACKET*     pReceiveBuf, <br>    OUT PPP_EAP_PACKET*     pSendBuf, <br>    IN  DWORD               cbSendBuf, <br>    OUT PPP_EAP_OUTPUT*     pResult, <br>    IN  PPP_EAP_INPUT*      pInput  <br>); <br> <br>DWORD <br>AuthenticateeMakeMessage( <br>    IN  EAPCB*              pwb, <br>    IN  PPP_EAP_PACKET*     pReceiveBuf, <br>    OUT PPP_EAP_PACKET*     pSendBuf, <br>    IN  DWORD               cbSendBuf, <br>    IN PPP_EAP_INPUT*       pInput, <br>    OUT  PPP_EAP_OUTPUT*    pResult <br>); <br> <br>DWORD <br>AuthenticatorMakeMessage( <br>    IN  EAPCB*              pwb, <br>    IN  PPP_EAP_PACKET*     pReceiveBuf, <br>    OUT PPP_EAP_PACKET*     pSendBuf, <br>    IN  DWORD               cbSendBuf, <br>    IN PPP_EAP_INPUT*       pInput, <br>    OUT  PPP_EAP_OUTPUT*    pResult <br>); <br> <br>VOID <br>MakeResponseMessage( <br>    IN  EAPCB*              pwb, <br>    IN  PPP_EAP_PACKET*     pReceiveBuf, <br>    OUT PPP_EAP_PACKET *    pSendBuf, <br>    IN DWORD                cbSendBuf <br>); <br> <br>VOID <br>MakeResultMessage( <br>    IN  DWORD              dwError, <br>    IN  BYTE               bId, <br>    OUT PPP_EAP_PACKET*    pSendBuf, <br>    IN  DWORD              cbSendBuf <br>); <br> <br>DWORD <br>GetPasswordFromResponse( <br>    IN  PPP_EAP_PACKET*    pReceiveBuf, <br>    OUT CHAR*              pszUserName <br>); <br> <br>DWORD <br>AuthenticateUser( <br>    IN CHAR *               szUserName, <br>    IN CHAR *               szPassword, <br>    IN EAPCB *              pwb <br>); <br> <br>// <br>// Globals. <br>// <br> <br>#ifdef RASEAPGLOBALS <br>#define GLOBALS <br>#define EXTERN <br>#else <br>#define EXTERN extern <br>#endif <br> <br>// <br>// Next packet identifier to assign.   <br>// <br>EXTERN DWORD dwNextId <br>#ifdef GLOBALS <br>    = 0 <br>#endif <br>; <br> <br>EXTERN <br>DWORD  (APIENTRY *FpRasAuthenticateClient)(  <br>    IN  HANDLE                  hPort, <br>    IN  RAS_AUTH_ATTRIBUTE *    pInAttributes  <br>) <br>#ifdef GLOBALS <br>    = NULL <br>#endif <br>; <br> <br>#undef EXTERN <br>#undef GLOBALS <br> <br>#endif // _EAP_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
