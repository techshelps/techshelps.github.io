<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPRTSAMP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5082"></a>IPRTSAMP.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1997  Microsoft Corporation <br> <br>Module Name: <br> <br>    sample\ip\saminfo.h <br> <br>Abstract: <br>    Data structures exposed by the Sample Routing Protocol.  These <br>    include the Global and Interface Info and the structures needed <br>    to query the MIB. <br> <br>Revision History: <br> <br> <br>--*/ <br> <br>#ifndef __IPRTSAMP_H__ <br>#define __IPRTSAMP_H__ <br> <br>typedef struct _NT_IF <br>{ <br>    LIST_ENTRY  leNtIfLink; <br>    DWORD       dwNtIndex; <br>    DWORD       fNtState; <br>    ULONG       ulNumBindings; <br>    PWCHAR      pwszIfName; <br>    DWORD       dwType; <br>    LIST_ENTRY  leInternalIfHead; <br>}NT_IF, *PNT_IF; <br> <br>#define NT_STATE_ENABLED_BIT    0x00000001 <br>#define NT_STATE_BOUND_BIT      0x00000002 <br> <br>#define NT_STATE_ENABLED_BOUND  (NT_STATE_ENABLED_BIT|NT_STATE_BOUND_BIT) <br> <br>#define ClearNtState(X)     \ <br>    ((X)-&gt;fNtState |= 0x00000000) <br> <br>#define SetNtEnabled(X)     \ <br>    ((X)-&gt;fNtState |= NT_STATE_ENABLED_BIT) <br> <br>#define ClearNtEnabled(X)   \ <br>    ((X)-&gt;fNtState &amp;= ~NT_STATE_ENABLED_BIT) <br> <br>#define IsNtEnabled(X)     \ <br>    ((X)-&gt;fNtState | NT_STATE_ENABLED_BIT) <br> <br>#define SetNtBound(X)     \ <br>    ((X)-&gt;fNtState |= NT_STATE_BOUND_BIT) <br> <br>#define ClearNtBound(X)   \ <br>    ((X)-&gt;fNtState &amp;= ~NT_STATE_BOUND_BIT)     <br> <br>#define IsNtBound(X)     \ <br>    ((X)-&gt;fNtState | NT_STATE_BOUND_BIT) <br> <br>#define IsNtEnabledAndBound(X)     \ <br>    (((X)-&gt;fNtState &amp; NT_STATE_ENABLED_BOUND) == NT_STATE_ENABLED_BOUND) <br> <br>typedef struct _INTRNL_IF <br>{ <br>    LIST_ENTRY  leInternalIfLink; <br>    DWORD       dwAddress; <br>    DWORD       dwMask; <br>    BOOL        bEnabled; <br>    DWORD       dwState; <br>    SOCKET      sSocket; <br>}INTRNL_IF, *PINTRNL_IF; <br> <br>typedef struct _MGR_MSG <br>{ <br>    LIST_ENTRY              leMsgLink; <br>    ROUTING_PROTOCOL_EVENTS rreEvent; <br>    MESSAGE                 mResult; <br>}MGR_MSG, *PMGR_MSG; <br> <br>#define MAX_PACKET_SIZE     512 <br> <br>typedef struct _RECEIVE_BUFFER <br>{ <br>    WSABUF  wbBuffer; <br>    BYTE    rgbyData[MAX_PACKET_SIZE]; <br>}RECEIVE_BUFFER, *PRECEIVE_BUFFER; <br> <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
