<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PLUGINC.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5069"></a>PLUGINC.CPP</h2>
<pre><code>// PluginC.cpp : Implementation of the CPluginCtrl OLE control class. <br> <br>#include "stdafx.h" <br>#include "plugin.h" <br>#include "PluginC.h" <br>#include "PluginP.h" <br> <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br> <br>IMPLEMENT_DYNCREATE(CPluginCtrl, COleControl) <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Message map <br> <br>BEGIN_MESSAGE_MAP(CPluginCtrl, COleControl) <br>//{{AFX_MSG_MAP(CPluginCtrl) <br>// NOTE - ClassWizard will add and remove message map entries <br>//    DO NOT EDIT what you see in these blocks of generated code ! <br>//}}AFX_MSG_MAP <br>ON_OLEVERB(AFX_IDS_VERB_PROPERTIES, OnProperties) <br>END_MESSAGE_MAP() <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Dispatch map <br> <br>BEGIN_DISPATCH_MAP(CPluginCtrl, COleControl) <br>//{{AFX_DISPATCH_MAP(CPluginCtrl) <br>DISP_FUNCTION(CPluginCtrl, "MprUISetContext", MprUISetContext, VT_I4, VTS_I4 VTS_I4) <br>DISP_FUNCTION(CPluginCtrl, "MprUIRefresh", MprUIRefresh, VT_I4, VTS_NONE) <br>//}}AFX_DISPATCH_MAP <br>END_DISPATCH_MAP() <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Event map <br> <br>BEGIN_EVENT_MAP(CPluginCtrl, COleControl) <br>//{{AFX_EVENT_MAP(CPluginCtrl) <br>// NOTE - ClassWizard will add and remove event map entries <br>//    DO NOT EDIT what you see in these blocks of generated code ! <br>//}}AFX_EVENT_MAP <br>END_EVENT_MAP() <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Property pages <br> <br>// TODO: Add more property pages as needed.  Remember to increase the count! <br>BEGIN_PROPPAGEIDS(CPluginCtrl, 1) <br>PROPPAGEID(CPluginPropPage::guid) <br>END_PROPPAGEIDS(CPluginCtrl) <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Initialize class factory and guid <br> <br>IMPLEMENT_OLECREATE_EX(CPluginCtrl, "PLUGIN.PluginCtrl.1", <br>0x85df114, 0x10e, 0x11d0, 0xaa, 0x6b, 0, 0x80, 0x5f, 0xc, 0x92, 0x32) <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Type library ID and version <br> <br>IMPLEMENT_OLETYPELIB(CPluginCtrl, _tlid, _wVerMajor, _wVerMinor) <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Interface IDs <br> <br>const IID BASED_CODE IID_DPlugin = <br>{ 0x85df112, 0x10e, 0x11d0, { 0xaa, 0x6b, 0, 0x80, 0x5f, 0xc, 0x92, 0x32 } }; <br>const IID BASED_CODE IID_DPluginEvents = <br>{ 0x85df113, 0x10e, 0x11d0, { 0xaa, 0x6b, 0, 0x80, 0x5f, 0xc, 0x92, 0x32 } }; <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// Control type information <br> <br>static const DWORD BASED_CODE _dwPluginOleMisc = <br>OLEMISC_ACTIVATEWHENVISIBLE | <br>OLEMISC_SETCLIENTSITEFIRST | <br>OLEMISC_INSIDEOUT | <br>OLEMISC_CANTLINKINSIDE | <br>OLEMISC_RECOMPOSEONRESIZE; <br> <br>IMPLEMENT_OLECTLTYPE(CPluginCtrl, IDS_PLUGIN, _dwPluginOleMisc) <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::CPluginCtrlFactory::UpdateRegistry - <br>// Adds or removes system registry entries for CPluginCtrl <br> <br>BOOL CPluginCtrl::CPluginCtrlFactory::UpdateRegistry(BOOL bRegister) <br>{ <br>// TODO: Verify that your control follows apartment-model threading rules. <br>// Refer to MFC TechNote 64 for more information. <br>// If your control does not conform to the apartment-model rules, then <br>// you must modify the code below, changing the 6th parameter from <br>// afxRegApartmentThreading to 0. <br> <br>if (bRegister) <br>return AfxOleRegisterControlClass( <br>AfxGetInstanceHandle(), <br>m_clsid, <br>m_lpszProgID, <br>IDS_PLUGIN, <br>IDB_PLUGIN, <br>afxRegApartmentThreading, <br>_dwPluginOleMisc, <br>_tlid, <br>_wVerMajor, <br>_wVerMinor); <br>else <br>return AfxOleUnregisterClass(m_clsid, m_lpszProgID); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::CPluginCtrl - Constructor <br> <br>CPluginCtrl::CPluginCtrl() <br>{ <br>InitializeIIDs(&amp;IID_DPlugin, &amp;IID_DPluginEvents); <br> <br>// TODO: Initialize your control's instance data here. <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::~CPluginCtrl - Destructor <br> <br>CPluginCtrl::~CPluginCtrl() <br>{ <br>// TODO: Cleanup your control's instance data here. <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::OnDraw - Drawing function <br> <br>void CPluginCtrl::OnDraw( <br>CDC* pdc, const CRect&amp; rcBounds, const CRect&amp; rcInvalid) <br>{ <br>// TODO: Replace the following code with your own drawing code. <br>pdc-&gt;FillRect(rcBounds, CBrush::FromHandle((HBRUSH)GetStockObject(WHITE_BRUSH))); <br>pdc-&gt;Ellipse(rcBounds); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::DoPropExchange - Persistence support <br> <br>void CPluginCtrl::DoPropExchange(CPropExchange* pPX) <br>{ <br>ExchangeVersion(pPX, MAKELONG(_wVerMinor, _wVerMajor)); <br>COleControl::DoPropExchange(pPX); <br> <br>// TODO: Call PX_ functions for each persistent custom property. <br> <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl::OnResetState - Reset control to default state <br> <br>void CPluginCtrl::OnResetState() <br>{ <br>COleControl::OnResetState();  // Resets defaults found in DoPropExchange <br> <br>// TODO: Reset any other control state here. <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginCtrl message handlers <br> <br>long CPluginCtrl::MprUISetContext(long lNode, long lContext)  <br>{ <br>// TODO: Add your dispatch handler code here <br> <br>return 0; <br>} <br> <br>long CPluginCtrl::MprUIRefresh()  <br>{ <br>// TODO: Add your dispatch handler code here <br> <br>return 0; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
