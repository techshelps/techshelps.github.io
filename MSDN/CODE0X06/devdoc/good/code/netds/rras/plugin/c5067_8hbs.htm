<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PLUGIN.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5068"></a>PLUGIN.H</h2>
<pre><code>// plugin.h : main header file for PLUGIN.DLL <br> <br>#if !defined( __AFXCTL_H__ ) <br>#error include 'afxctl.h' before including this file <br>#endif <br> <br>#include "resource.h"       // main symbols <br>#include "mprui.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginApp : See plugin.cpp for implementation. <br> <br>class CPluginApp : public COleControlModule <br>{ <br>public: <br>BOOL InitInstance(); <br>int ExitInstance(); <br>}; <br> <br>extern const GUID CDECL _tlid; <br>extern const WORD _wVerMajor; <br>extern const WORD _wVerMinor; <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPluginObj command target <br> <br>class CPluginObj : public CCmdTarget <br>{ <br>DECLARE_DYNCREATE(CPluginObj) <br> <br>CPluginObj();           // protected constructor used by dynamic creation <br> <br>// Attributes <br>public: <br> <br>// Operations <br>public: <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CPluginObj) <br>public: <br>virtual void OnFinalRelease(); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>protected: <br>IMprUIHost *m_pIMprUIHost; <br>virtual ~CPluginObj(); <br> <br>// Generated message map functions <br>//{{AFX_MSG(CPluginObj) <br>// NOTE - the ClassWizard will add and remove member functions here. <br>//}}AFX_MSG <br> <br>DECLARE_MESSAGE_MAP() <br>DECLARE_OLECREATE(CPluginObj) <br> <br> BEGIN_INTERFACE_PART(MprUIPlugin, IUnknown) <br>// Connect to router.  The plugin module should disconnect from the <br>//  router when the IMprUIPlugin is released. <br>STDMETHOD(ConnectToRouter)(LPCTSTR pRouterName, IMprUIHost *pMprUIHost); <br>// Returns the text for the given node. <br>//  Use CoTaskMemAlloc to allocate memory for ppszTitle <br>STDMETHOD(GetTitle)(PWSTR* ppszTitle); <br>// Returns a context menu for the given node. <br>//  Menu will be destroyed by host. <br>STDMETHOD(GetContextMenu)(HMENU* phMenu); <br>// Processes the command returned by the context menu <br>STDMETHOD(ProcessCommand)(WPARAM wParam, LPARAM lParam, HWND hWndParent); <br>// Returns CLSID for the ole control which displays right hand pane <br>//  Use CoTaskMemAlloc to allocate space for CLSID* <br>STDMETHOD(GetCLSID)(CLSID** ppClsid); <br>END_INTERFACE_PART(MprUIPlugin) <br> <br>DECLARE_INTERFACE_MAP() <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// </code></pre>
<p>&nbsp;</p></body>
</HTML>
