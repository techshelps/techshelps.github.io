<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5067"></a>README.TXT</h2>
<pre><code>======================================================================== <br>OLE Control DLL : PLUGIN <br>======================================================================== <br> <br>ControlWizard has created this project for your PLUGIN OLE Control DLL, <br>which contains 1 control. <br> <br>This skeleton project not only demonstrates the basics of writing an OLE <br>Control, but is also a starting point for writing the specific features <br>of your control. <br> <br>This file contains a summary of what you will find in each of the files <br>that make up your PLUGIN OLE Control DLL. <br> <br>plugin.mak <br>The Visual C++ project makefile for building your OLE Control. <br> <br>plugin.h <br>This is the main include file for the OLE Control DLL.  It <br>includes other project-specific includes such as resource.h. <br> <br>plugin.cpp <br>This is the main source file that contains code for DLL initialization, <br>termination and other bookkeeping. <br> <br>plugin.rc <br>This is a listing of the Microsoft Windows resources that the project <br>uses.  This file can be directly edited with the Visual C++ resource <br>editor. <br> <br>plugin.def <br>This file contains information about the OLE Control DLL that <br>must be provided to run with Microsoft Windows. <br> <br>plugin.clw <br>This file contains information used by ClassWizard to edit existing <br>classes or add new classes.  ClassWizard also uses this file to store <br>information needed to generate and edit message maps and dialog data <br>maps and to generate prototype member functions. <br> <br>plugin.odl <br>This file contains the Object Description Language source code for the <br>type library of your control. <br> <br>///////////////////////////////////////////////////////////////////////////// <br>Plugin control: <br> <br>PluginC.h <br>This file contains the declaration of the CPluginCtrl C++ class. <br> <br>PluginC.cpp <br>This file contains the implementation of the CPluginCtrl C++ class. <br> <br>PluginP.h <br>This file contains the declaration of the CPluginPropPage C++ class. <br> <br>PluginP.cpp <br>This file contains the implementation of the CPluginPropPage C++ class. <br> <br>PluginC.bmp <br>This file contains a bitmap that a container will use to represent the <br>CPluginCtrl control when it appears on a tool palette.  This bitmap <br>is included by the main resource file plugin.rc. <br> <br>///////////////////////////////////////////////////////////////////////////// <br>Other standard files: <br> <br>stdafx.h, stdafx.cpp <br>These files are used to build a precompiled header (PCH) file <br>named stdafx.pch and a precompiled types (PCT) file named stdafx.obj. <br> <br>resource.h <br>This is the standard header file, which defines new resource IDs. <br>The Visual C++ resource editor reads and updates this file. <br> <br>///////////////////////////////////////////////////////////////////////////// <br>Other notes: <br> <br>ControlWizard uses "TODO:" to indicate parts of the source code you <br>should add to or customize. <br> <br>///////////////////////////////////////////////////////////////////////////// </code></pre>
<p>&nbsp;</p></body>
</HTML>
