<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5060"></a>README.TXT</h2>
<pre><code><br>Description: <br> <br>This sample demonstrates how a special DLL may be created to allow an  <br>administrator to exercise additional customized control over connection <br>acceptance and IP address assignment for dialin users connecting to an <br>NT Dial-Up Server/Router.  The server is configured via the registry  <br>to use the special DLL (or DLL's), and if the DLL(s) are not present <br>the Dial-Up Server/Router will fail to start, and an error will be logged <br>in the server's eventlog. <br> <br>This sample DLL exports the following API's <br> <br>MprAdminAcceptNewConnection <br>MprAdminConnectionHangupNotification <br> <br>MprAdminAcceptNewLink <br>MprAdminLinkHangupNotification <br> <br>MprAdminGetIpAddressForUser <br>MprAdminReleaseIpAddress <br> <br> <br>Platform:  NT 5.0**  <br>  ** or NT 4.0 + "Routing and Remote Access" add-on, which is available as a  <br>     free download from www.microsoft.com <br> <br> <br>Source code: <br>admindll.c <br> <br> <br>Build instructions: <br>TBD <br> <br> <br>Requirments:  <br> <br>NT Server running Dial-Up Server/Router, configured with TCP/IP and dialin <br>ports.  The dialin ports can be any valid media (e.g. modem, ISDN, PPTP,  <br>etc), as long as a user can make a RAS connection to the server with TCP/IP. <br> <br> <br>Usage Instructions: <br> <br>To configure the Dial-Up Server/Router to use a custom admin DLL, the  <br>registry must be edited as follows for each custom DLL: <br> <br>HKEY_LOCAL_MACHINE <br>SOFTWARE <br>MICROSOFT <br>RAS <br> <br>1. Add Key --&gt; "&lt;DllName&gt;"  (e.g. "AdminDll") <br> <br>2. Under "&lt;DllName&gt;" key, add a String Value called "DllPath" <br> <br>3. Set the value of DllPath = "&lt;full path to the dll&gt;"  <br>   e.g. "C:\TEST\ADMINDLL.DLL" <br> <br>4. Restart the server to begin using the custom DLL(s). <br> <br>When dialin users connect, RAS will call the appropriate API's exported by <br>the custom DLL, allowing customized control over connection and link  <br>acceptance, and IP address assignment. <br> <br> <br> <br>Behavior of the Sample Custom DLL <br> <br>This sample DLL keeps a small database of 256 IP addresses, and will dole <br>out an IP address when the request comes in. It will mark the assigned IP <br>address as used.  In addition this database will store the user name and <br>port name.  When MprAdminReleaseIpAddress is called, it will check the port <br>name and username. If it matches then it will free up the IP address. <br> <br>MprAdminAcceptNewConnection keeps a small database of the connected users <br>and their statistics and parameter information.  During <br>MprAdminConnectionHangupNotification, it will match the passed structures <br>with the stored information.  If the information doesn't match then the DLL <br>will generate an error. MprAdminAcceptNewConnection will only accept a <br>connection if the username is not "Administrator" and the account has no <br>callback privileges.  Also, this DLL will only allow a user to connect  <br>with two or fewer links when making a Multilink connection.  This was an <br>arbitararily chosen scheme for demonstration purposes. The DLL developer  <br>can keep their own database and let users connect based on time,  <br>privliges, etc.   <br> <br>When the sample DLL's exported API are called, results and information are <br>written to debug output.  If a kernel debugger is not attached, you can  <br>attach your debugger to the MPROUTER.EXE process to observe the debug output. </code></pre>
<p>&nbsp;</p></body>
</HTML>
