<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SMPOPER.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4714"></a>SMPOPER.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996 Microsoft Corporation <br> <br>Module Name: <br> <br>    SmpOper.h <br> <br>Abstract: <br> <br>Author: <br> <br>Environment: <br> <br>    User mode <br> <br>Revision History : <br> <br>--*/ <br>#ifndef _SMPOPER_H_ <br>#define _SMPOPER_H_ <br> <br>HRESULT <br>SampleDSTypeFreeSampleDSSynId1( <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeFreeSampleDSSynId2( <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeClear( <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>void <br>SampleDSTypeFreeSampleDSObjects( <br>    PSampleDSOBJECT pSampleDSObject, <br>    DWORD dwNumValues <br>    ); <br> <br>HRESULT <br>SampleDSTypeCopySampleDSSynId1( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeCopySampleDSSynId2( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeCopy( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeCopyConstruct( <br>    LPSampleDSOBJECT pSampleDSSrcObjects, <br>    DWORD dwNumObjects, <br>    LPSampleDSOBJECT * ppSampleDSDestObjects <br>    ); <br> <br>HRESULT <br>UnMarshallSampleDSToSampleDSSynId( <br>    DWORD dwSyntaxId, <br>    DWORD dwNumValues, <br>    LPBYTE lpValue, <br>    PSampleDSOBJECT * ppSampleDSObject <br>    ); <br> <br>LPBYTE <br>CopySampleDS1ToSampleDSSynId1( <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br>        <br>LPBYTE <br>CopySampleDS2ToSampleDSSynId2( <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br> <br>LPBYTE <br>CopySampleDSToSampleDSSynId( <br>    DWORD dwSyntaxId, <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br> <br>HRESULT <br>MarshallSampleDSSynIdToSampleDS( <br>    DWORD dwSyntaxId, <br>    PSampleDSOBJECT pSampleDSObject, <br>    DWORD dwNumValues, <br>    LPBYTE lpValue <br>    ); <br> <br>LPBYTE <br>CopySampleDSSynId1ToSampleDS1( <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br> <br>LPBYTE <br>CopySampleDSSynId2ToSampleDS2( <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br> <br>LPBYTE <br>CopySampleDSSynIdToSampleDS( <br>    DWORD dwSyntaxId, <br>    LPBYTE lpByte, <br>    PSampleDSOBJECT lpSampleDSObject <br>    ); <br> <br> <br>void <br>VarTypeFreeVarObjects( <br>    VARIANT *pVarObject, <br>    DWORD dwNumValues <br>    ); <br> <br>HRESULT <br>SampleDSTypeToVarTypeCopySampleDSSynId1( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    VARIANT *lpVarDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeToVarTypeCopySampleDSSynId2( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    PVARIANT lpVarDestObject <br>    ); <br> <br> <br>HRESULT <br>SampleDSTypeToVarTypeCopy( <br>    PSampleDSOBJECT lpSampleDSSrcObject, <br>    VARIANT* lpVarDestObject <br>    ); <br> <br>HRESULT <br>SampleDSTypeToVarTypeCopyConstruct( <br>    LPSampleDSOBJECT pSampleDSSrcObjects, <br>    DWORD dwNumObjects, <br>    VARIANT *pVarDestObjects <br>    ); <br> <br>HRESULT <br>VarTypeToSampleDSTypeCopySampleDSSynId1( <br>    PVARIANT lpVarSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>VarTypeToSampleDSTypeCopySampleDSSynId2( <br>    PVARIANT lpVarSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>VarTypeToSampleDSTypeCopy( <br>    DWORD dwSampleDSType, <br>    PVARIANT lpVarSrcObject, <br>    PSampleDSOBJECT lpSampleDSDestObject <br>    ); <br> <br>HRESULT <br>VarTypeToSampleDSTypeCopyConstruct( <br>    DWORD dwSampleDSType, <br>    LPVARIANT pVarSrcObjects, <br>    DWORD dwNumObjects, <br>    LPSampleDSOBJECT * ppSampleDSDestObjects <br>    ); <br> <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
