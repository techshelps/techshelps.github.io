<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARSE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4708"></a>PARSE.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996 Microsoft Corporation <br> <br>Module Name: <br> <br>    Parse.h <br> <br>Abstract: <br> <br>Author: <br> <br>Environment: <br> <br>    User mode <br> <br>Revision History : <br> <br>--*/ <br>#ifndef _PARSE_H_ <br>#define _PARSE_H_ <br> <br>#define MAX_TOKEN_LENGTH       80 <br>#define MAX_KEYWORDS           14 <br> <br>typedef struct _kwdlist { <br>    DWORD   dwTokenId; <br>    LPWSTR  Keyword; <br>} KWDLIST, *PKWDLIST; <br> <br>class FAR CLexer <br>{ <br>public: <br>    CLexer(LPWSTR szBuffer); <br>    ~CLexer(); <br> <br>    BOOL <br>    CLexer::IsKeyword(LPWSTR szToken, LPDWORD pdwToken); <br> <br>    WCHAR <br>    CLexer::NextChar(); <br> <br>    void <br>    CLexer::PushbackChar(); <br> <br>    HRESULT <br>    CLexer::GetNextToken(LPWSTR szToken, LPDWORD pdwToken); <br> <br>    HRESULT <br>    CLexer::PushBackToken(); <br> <br>private: <br> <br>    LPWSTR _ptr; <br>    LPWSTR _Buffer; <br>    DWORD  _dwLastTokenLength; <br>    DWORD  _dwLastToken; <br>    DWORD  _dwEndofString; <br> <br>}; <br> <br>HRESULT <br>ADsObject(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>SampleDSObject(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br> <br>HRESULT <br>DsPathName(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br> <br>HRESULT <br>PathName(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>Component(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>Type(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>ProviderName(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>AddRootRDN(POBJECTINFO pObjectInfo, LPWSTR szToken); <br> <br>HRESULT <br>SetType(POBJECTINFO pObjectInfo, DWORD dwToken); <br> <br>HRESULT <br>SchemaPathName(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>HRESULT <br>SchemaComponent(CLexer * pTokenizer, POBJECTINFO pObjectInfo); <br> <br>#endif <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
