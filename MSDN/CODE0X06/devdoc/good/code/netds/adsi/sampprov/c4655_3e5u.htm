<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GETOBJ.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4692"></a>GETOBJ.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996 Microsoft Corporation <br> <br>Module Name: <br> <br>    GetObj.h <br> <br>Abstract: <br> <br>Author: <br> <br>Environment: <br> <br>    User mode <br> <br>Revision History : <br> <br>--*/ <br>#ifndef _GETOBJ_H_ <br>#define _GETOBJ_H_ <br> <br>#define MAXCOMPONENTS               20 <br> <br>#define TOKEN_IDENTIFIER                1 <br>#define TOKEN_COMMA                     2 <br>#define TOKEN_BSLASH                    3 <br>#define TOKEN_END                       4 <br>#define TOKEN_OU                        5 <br>#define TOKEN_USER                      6 <br>#define TOKEN_GROUP                     7 <br> <br>#define TOKEN_ATSIGN                   11 <br>#define TOKEN_EXCLAMATION              12 <br>#define TOKEN_COLON                    13 <br>#define TOKEN_FSLASH                   14 <br>#define TOKEN_PROVIDER                 15 <br> <br>#define TOKEN_SCHEMA                   17 <br>#define TOKEN_CLASS                    18 <br>#define TOKEN_PROPERTY                 21 <br>#define TOKEN_SYNTAX                   22 <br> <br>#define TOKEN_PERIOD                   24 <br>#define TOKEN_EQUAL                    25 <br>#define TOKEN_NAMESPACE                26 <br>#define TOKEN_DSOBJECT                 28 <br> <br> <br>typedef struct _component { <br>    LPWSTR szComponent; <br>    LPWSTR szValue; <br>}COMPONENT, *PCOMPONENT; <br> <br>typedef struct _objectinfo { <br>    LPWSTR  ProviderName; <br>    LPWSTR  RootRDN; <br>    DWORD   ObjectType; <br>    DWORD   NumComponents; <br>    COMPONENT  ComponentArray[MAXCOMPONENTS]; <br>} OBJECTINFO, *POBJECTINFO; <br> <br>HRESULT <br>RelativeGetObject( <br>    BSTR ADsPath, <br>    BSTR ClassName, <br>    BSTR RelativeName, <br>    IDispatch* FAR* ppObject, <br>    BOOL bNamespaceRelative <br>    ); <br> <br>HRESULT <br>GetObject( <br>    LPWSTR szBuffer, <br>    LPVOID * ppObject <br>    ); <br> <br>HRESULT <br>GetNamespaceObject( <br>    POBJECTINFO pObjectInfo, <br>    LPVOID * ppObject <br>    ); <br> <br>HRESULT <br>ValidateNamespaceObject( <br>    POBJECTINFO pObjectInfo <br>    ); <br> <br>HRESULT <br>GetSchemaObject( <br>    POBJECTINFO pObjectInfo, <br>    LPVOID * ppObject <br>    ); <br> <br>HRESULT <br>ValidateSchemaObject( <br>    POBJECTINFO pObjectInfo, <br>    PDWORD pdwObjectType <br>    ); <br> <br>HRESULT <br>ValidateProvider( <br>    POBJECTINFO pObjectInfo <br>    ); <br> <br>HRESULT <br>AddComponent( <br>    POBJECTINFO pObjectInfo, <br>    LPWSTR szComponent, <br>    LPWSTR szValue <br>    ); <br> <br>HRESULT <br>AddProviderName( <br>    POBJECTINFO pObjectInfo, <br>    LPWSTR szToken <br>    ); <br> <br> <br>HRESULT <br>BuildADsParentPath( <br>    LPWSTR szBuffer, <br>    LPWSTR szParent, <br>    LPWSTR szCommonName <br>    ); <br> <br>HRESULT <br>BuildDSPathFromADsPath( <br>    LPWSTR szADsPathName, <br>    LPWSTR szSampleDSPathName <br>    ); <br> <br>HRESULT <br>BuildADsParentPath( <br>    POBJECTINFO pObjectInfo, <br>    LPWSTR szParent, <br>    LPWSTR szCommonName <br>    ); <br> <br> <br>HRESULT <br>BuildDSTreeNameFromADsPath( <br>    LPWSTR szBuffer, <br>    LPWSTR szSampleDSTreeName <br>    ); <br> <br>HRESULT <br>ValidateObjectType( <br>    POBJECTINFO pObjectInfo <br>    ); <br> <br> <br>HRESULT <br>BuildSampleDSRootRDNFromADsPath( <br>    LPWSTR szBuffer, <br>    LPWSTR szDSTreeName <br>    ); <br> <br> <br>HRESULT <br>AppendComponent( <br>   LPWSTR szDSPathName, <br>   PCOMPONENT pComponent <br>   ); <br> <br>HRESULT <br>BuildDSPathFromADsPath( <br>    LPWSTR szADsPathName, <br>    LPWSTR szDSRootName, <br>    LPWSTR szDSPathName <br>    ); <br> <br>HRESULT <br>InstantiateDerivedObject( <br>    IADs FAR * pADs, <br>    REFIID riid, <br>    void  ** ppObject <br>    ); <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
