<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PACK.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4705"></a>PACK.CPP</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996 Microsoft Corporation <br> <br>Module Name: <br> <br>    Pack.cpp <br> <br>Abstract: <br> <br>Author: <br> <br>Environment: <br> <br>    User mode <br> <br>Revision History : <br> <br>--*/ <br>#include "adssmp.h" <br>#pragma hdrstop <br> <br>HRESULT <br>PackStringinVariant( <br>    BSTR bstrString, <br>    VARIANT * pvarInputData <br>    ) <br>{ <br>    HRESULT hr = S_OK; <br> <br>    if ( bstrString == NULL ) <br>        RRETURN(E_FAIL); <br> <br>    VariantInit(pvarInputData); <br> <br>    pvarInputData-&gt;vt = VT_BSTR; <br> <br>    if (!bstrString) { <br>        V_BSTR(pvarInputData) = NULL; <br>        RRETURN(S_OK); <br>    } <br> <br>    hr = ProvAllocString(bstrString, &amp;(V_BSTR(pvarInputData))); <br> <br>    RRETURN(hr); <br>} <br> <br> <br>HRESULT <br>UnpackStringfromVariant( <br>    VARIANT varSrcData, <br>    BSTR * pbstrDestString <br>    ) <br>{ <br>    HRESULT hr = S_OK; <br> <br>    if( varSrcData.vt != VT_BSTR){ <br>        RRETURN(E_ADS_CANT_CONVERT_DATATYPE); <br>    } <br> <br>    if (!V_BSTR(&amp;varSrcData)) { <br>        *pbstrDestString = NULL; <br>        RRETURN(S_OK); <br>    } <br> <br>    hr = ProvAllocString(V_BSTR(&amp;varSrcData), pbstrDestString); <br> <br>    RRETURN(hr); <br>} <br> <br> <br>HRESULT <br>PackLONGinVariant( <br>    LONG  lValue, <br>    VARIANT * pvarInputData <br>    ) <br>{ <br>    VariantInit(pvarInputData); <br> <br>    pvarInputData-&gt;vt = VT_I4; <br>    V_I4(pvarInputData) = lValue; <br> <br>    RRETURN(S_OK); <br>} <br> <br>HRESULT <br>UnpackLONGfromVariant( <br>    VARIANT varSrcData, <br>    LONG * plValue <br>    ) <br>{ <br>    if( varSrcData.vt != VT_I4){ <br>        RRETURN(E_ADS_CANT_CONVERT_DATATYPE); <br>    } <br> <br>    *plValue = V_I4(&amp;varSrcData); <br> <br>    RRETURN(S_OK); <br>} <br> <br> <br>HRESULT <br>PackDATEinVariant( <br>    DATE  daValue, <br>    VARIANT * pvarInputData <br>    ) <br>{ <br>    VariantInit(pvarInputData); <br> <br>    pvarInputData-&gt;vt = VT_DATE; <br>    V_DATE(pvarInputData) = daValue; <br> <br>    RRETURN(S_OK); <br>} <br> <br>HRESULT <br>UnpackDATEfromVariant( <br>    VARIANT varSrcData, <br>    DATE * pdaValue <br>    ) <br>{ <br>    if( varSrcData.vt != VT_DATE){ <br>        RRETURN(E_ADS_CANT_CONVERT_DATATYPE); <br>    } <br> <br>    *pdaValue = V_DATE(&amp;varSrcData); <br> <br>    RRETURN(S_OK); <br>} <br> <br> <br>HRESULT <br>PackVARIANT_BOOLinVariant( <br>    VARIANT_BOOL  fValue, <br>    VARIANT * pvarInputData <br>    ) <br>{ <br>    VariantInit(pvarInputData); <br> <br>    pvarInputData-&gt;vt = VT_BOOL; <br>    V_BOOL(pvarInputData) = fValue; <br> <br>    RRETURN(S_OK); <br>} <br> <br>HRESULT <br>UnpackVARIANT_BOOLfromVariant( <br>    VARIANT varSrcData, <br>    VARIANT_BOOL * pfValue <br>    ) <br>{ <br>    if( varSrcData.vt != VT_BOOL){ <br>        RRETURN(E_ADS_CANT_CONVERT_DATATYPE); <br>    } <br> <br>    *pfValue = V_BOOL(&amp;varSrcData); <br> <br>    RRETURN(S_OK); <br>} <br> <br> <br>HRESULT <br>PackVARIANTinVariant( <br>    VARIANT vaValue, <br>    VARIANT * pvarInputData <br>    ) <br>{ <br>    VariantInit(pvarInputData); <br> <br>    pvarInputData-&gt;vt = VT_VARIANT; <br>    RRETURN( VariantCopy( pvarInputData, &amp;vaValue )); <br>} <br> <br>HRESULT <br>UnpackVARIANTfromVariant( <br>    VARIANT varSrcData, <br>    VARIANT * pvaValue <br>    ) <br>{ <br>    VariantInit( pvaValue ); <br> <br>    RRETURN( VariantCopy( pvaValue, &amp;varSrcData )); <br>} <br> <br> <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
