<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REGDSAPI.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4712"></a>REGDSAPI.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1996 Microsoft Corporation <br> <br>Module Name: <br> <br>    RegDsAPI.h <br> <br>Abstract: <br> <br>Author: <br> <br>Environment: <br> <br>    User mode <br> <br>Revision History : <br> <br>--*/ <br>#ifndef _REGDSAPI_ <br>#define _REGDSAPI_ <br> <br>#define REG_DS      1 <br>#define REG_SCHEMA  2 <br> <br>#define SAMPLEDS_UNKNOWN  0 <br>#define SAMPLEDS_PROPERTY 1 <br>#define SAMPLEDS_CLASS    2 <br> <br>typedef struct REGDS_ENUM{ <br>    DWORD  dwIndex; <br>    HANDLE hContainerKey; <br>} *LPREGDS_ENUM; <br> <br>HRESULT <br>SampleDSOpenObject(  <br>    LPWSTR szRegPath,              <br>    HANDLE *phKey,                 <br>    LPWSTR szClass, <br>    DWORD  dwType); <br> <br>HRESULT <br>SampleDSCloseObject( <br>    HANDLE hKey); <br> <br> <br>HRESULT <br>SampleDSRDNEnum(  <br>    HANDLE *phEnum, <br>    HANDLE hContainerKey); <br> <br> <br>HRESULT <br>SampleDSNextRDN(  <br>    HANDLE hEnum,       <br>    LPWSTR *pszName,   <br>    LPWSTR *pszClass); <br> <br>HRESULT <br>SampleDSFreeEnum(HANDLE hEnum); <br> <br> <br>HRESULT <br>SampleDSModifyObject(HANDLE hKey, <br>                     HANDLE hOperationData <br>                     ); <br> <br>HRESULT <br>SampleDSReadObject( <br>    HANDLE hkey,               <br>    HANDLE *phOperationData <br>    ); <br> <br> <br>HRESULT <br>SampleDSGetPropertyDefinition(  <br>    LPSampleDS_ATTR_DEF* ppAttrDefReturn, <br>    DWORD *pnumObject <br>); <br> <br>HRESULT <br>SampleDSGetPropertyDefinition(  <br>    LPSampleDS_ATTR_DEF* ppAttrDefReturn, <br>    LPWSTR szPropName <br>); <br> <br>HRESULT <br>SampleDSGetType(HKEY hKey, <br>                LPWSTR szPropertyName, <br>                DWORD *pdwType <br>                ); <br> <br>HRESULT <br>SampleDSGetPropertyInfo(HKEY hKey, <br>                        LPWSTR szPropertyName, <br>                        LPSampleDS_ATTR_DEF pAttrDef <br>                        ); <br> <br>HRESULT <br>SampleDSGetClassDefinition(  <br>    LPSampleDS_CLASS_DEF* ppClassDefsReturn, <br>    DWORD *pnumObject <br>    ); <br> <br>HRESULT <br>SampleDSGetClassDefinition(  <br>    LPSampleDS_CLASS_DEF* ppClassDefReturn, <br>    LPWSTR szClassName <br>    ); <br> <br>HRESULT <br>SampleDSGetClassInfo(HKEY hKey, <br>                     LPWSTR szClassName, <br>                     LPSampleDS_CLASS_DEF pClassDef <br>                     ); <br>HRESULT <br>SampleDSAddObject(HANDLE hKey, <br>                  LPWSTR szObject, <br>                  LPWSTR szClass, <br>                  HANDLE hOperationData <br>                  ); <br> <br>HRESULT <br>SampleDSRemoveObject( <br>     HANDLE hKey, <br>     LPWSTR szObject); <br> <br>HRESULT <br>SampleDSGetTypeText(HKEY hKey, <br>                    LPWSTR szPropertyName, <br>                    LPWSTR szClassName, <br>                    DWORD *pdwClassName); <br>HRESULT <br>SampleDSCreateBuffer(HANDLE *phOperationData); <br> <br>HRESULT <br>SampleDSFreeBuffer(HANDLE hOperationData); <br> <br>HRESULT     <br>SampleDSFreeClassDefinition(LPSampleDS_CLASS_DEF pClassDefs, <br>                            DWORD numObject); <br> <br>HRESULT     <br>SampleDSFreePropertyDefinition(LPSampleDS_ATTR_DEF pPropertyDefs, <br>                               DWORD numObject); <br> <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
