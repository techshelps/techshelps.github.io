<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAIN.FRM</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4643"></a>MAIN.FRM</h2>
<pre><code>VERSION 4.00 <br>Begin VB.Form frmBrwsTree  <br>   BackColor       =   &amp;H00C0C0C0&amp; <br>   BorderStyle     =   1  'Fixed Single <br>   Caption         =   "Active Directory VB Browser" <br>   ClientHeight    =   7065 <br>   ClientLeft      =   4125 <br>   ClientTop       =   2790 <br>   ClientWidth     =   7575 <br>   FillStyle       =   0  'Solid <br>   ForeColor       =   &amp;H00000000&amp; <br>   Height          =   7470 <br>   Left            =   4065 <br>   LinkTopic       =   "Form1" <br>   MaxButton       =   0   'False <br>   MinButton       =   0   'False <br>   ScaleHeight     =   7065 <br>   ScaleWidth      =   7575 <br>   Top             =   2445 <br>   Width           =   7695 <br>   Begin VB.CommandButton cmdAbort  <br>      Caption         =   "Stop" <br>      Height          =   375 <br>      Left            =   6360 <br>      TabIndex        =   4 <br>      Top             =   720 <br>      Visible         =   0   'False <br>      Width           =   1095 <br>   End <br>   Begin VB.CommandButton cmdProperties  <br>      Caption         =   "Properties..." <br>      Height          =   375 <br>      Left            =   6360 <br>      TabIndex        =   3 <br>      Top             =   240 <br>      Width           =   1095 <br>   End <br>   Begin VB.CommandButton cmdExit  <br>      Caption         =   "Exit" <br>      Height          =   375 <br>      Left            =   6360 <br>      TabIndex        =   2 <br>      Top             =   1200 <br>      Width           =   1095 <br>   End <br>   Begin VB.Label txtPath  <br>      Appearance      =   0  'Flat <br>      AutoSize        =   -1  'True <br>      BackColor       =   &amp;H00C0C0C0&amp; <br>      Caption         =   "Path" <br>      BeginProperty Font  <br>         name            =   "Times New Roman" <br>         charset         =   0 <br>         weight          =   400 <br>         size            =   11.25 <br>         underline       =   0   'False <br>         italic          =   0   'False <br>         strikethrough   =   0   'False <br>      EndProperty <br>      ForeColor       =   &amp;H80000008&amp; <br>      Height          =   255 <br>      Left            =   360 <br>      TabIndex        =   7 <br>      Top             =   6720 <br>      Width           =   405 <br>   End <br>   Begin VB.Label txtName  <br>      Appearance      =   0  'Flat <br>      BackColor       =   &amp;H00C0C0C0&amp; <br>      Caption         =   "ADS:" <br>      BeginProperty Font  <br>         name            =   "Times New Roman" <br>         charset         =   0 <br>         weight          =   400 <br>         size            =   12 <br>         underline       =   0   'False <br>         italic          =   0   'False <br>         strikethrough   =   0   'False <br>      EndProperty <br>      ForeColor       =   &amp;H80000008&amp; <br>      Height          =   375 <br>      Left            =   360 <br>      TabIndex        =   6 <br>      Top             =   6000 <br>      Width           =   6255 <br>   End <br>   Begin VB.Label Label3  <br>      Caption         =   "Path:" <br>      BeginProperty Font  <br>         name            =   "Times New Roman" <br>         charset         =   0 <br>         weight          =   400 <br>         size            =   11.25 <br>         underline       =   0   'False <br>         italic          =   0   'False <br>         strikethrough   =   0   'False <br>      EndProperty <br>      Height          =   375 <br>      Left            =   240 <br>      TabIndex        =   5 <br>      Top             =   6360 <br>      Width           =   855 <br>   End <br>   Begin VB.Label Label1  <br>      Caption         =   "Name:" <br>      BeginProperty Font  <br>         name            =   "Times New Roman" <br>         charset         =   0 <br>         weight          =   400 <br>         size            =   12 <br>         underline       =   0   'False <br>         italic          =   0   'False <br>         strikethrough   =   0   'False <br>      EndProperty <br>      Height          =   375 <br>      Left            =   240 <br>      TabIndex        =   1 <br>      Top             =   5640 <br>      Width           =   855 <br>   End <br>   Begin ComctlLib.ImageList ImageList1  <br>      Left            =   11160 <br>      Top             =   6960 <br>      _Version        =   65536 <br>      _ExtentX        =   1005 <br>      _ExtentY        =   1005 <br>      _StockProps     =   1 <br>      BackColor       =   -2147483643 <br>      MaskColor       =   12632256 <br>   End <br>   Begin ComctlLib.TreeView TreeView1  <br>      Height          =   5535 <br>      Left            =   0 <br>      TabIndex        =   0 <br>      Top             =   0 <br>      Width           =   6135 <br>      _Version        =   65536 <br>      _ExtentX        =   10821 <br>      _ExtentY        =   9763 <br>      _StockProps     =   196 <br>      Appearance      =   1 <br>      ImageList       =   "" <br>      MousePointer    =   1 <br>      PathSeparator   =   "\" <br>      Sorted          =   -1  'True <br>      Style           =   7 <br>   End <br>End <br>Attribute VB_Name = "frmBrwsTree" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br>Option Explicit <br>Private Sub cmdAbort_Click() <br>' <br>' Allows the user to cancel a tree expand <br>' <br>    bAbort = True <br>End Sub <br> <br> <br> <br>Private Sub cmdExit_Click() <br>' <br>' Allows user to end program <br>' <br>    End <br>End Sub <br> <br> <br> <br> <br> <br> <br> <br> <br>Private Sub cmdProperties_Click() <br>' <br>' Allows viewing of Active Directory object properties <br>' <br>    Dim Class As IADsClass <br>    Dim Property As IADsProperty <br>    Dim v As Variant <br>    Dim Value As Variant <br>    Dim EmptyVar As Variant <br>     <br>    ' <br>    ' Set Error handler <br>    ' <br>    On Error Resume Next <br>     <br>    ' <br>    ' Don't allow exit while getting properties <br>    ' <br>    cmdExit.Visible = False <br>     <br>    ' <br>    ' Set cursor to wait/arrow <br>    ' <br>    Screen.MousePointer = 13 <br>     <br>    ' <br>    ' Get the object and its properties <br>    ' <br>    Set currentADsObj = GetObject(TreeView1.SelectedItem.Key) <br>    If Err Then <br>        MsgBox "Could not get object" <br>        GoTo skip <br>    End If <br>    frmProp.lblName.Caption = currentADsObj.Name <br>    frmProp.lblPath.Caption = currentADsObj.ADsPath <br>    frmProp.lblClass.Caption = currentADsObj.Class <br>    ' <br>    ' Namespaces object and Schema object are the only two objects that <br>    ' do not have an associated schema <br>    ' <br>    If currentADsObj.Class = "Schema" Or _ <br>            currentADsObj.Class = "NameSpaces" Then <br>        MsgBox "Please chose non schema object" <br>        GoTo skip <br>    End If <br>     <br>    ' <br>    ' Load the form <br>    ' <br>    Load frmProp <br>    Set Class = GetObject(currentADsObj.Schema) <br>    If Err Then <br>        MsgBox "Could not get schema object" <br>        GoTo skip <br>    End If <br>    If Class.Container Then <br>        frmProp.lblIsContainer.Caption = "Yes" <br>    Else <br>        frmProp.lblIsContainer.Caption = "No" <br>    End If <br>    For Each v In Class.MandatoryProperties <br>        Set Property = GetObject(Class.Parent + "\" + v) <br>        Value = EmptyVar <br>        Value = currentADsObj.Get(Property.Name) <br>        If VarType(Value) = vbEmpty Then <br>            frmProp.lstProperties.AddItem Property.Name &amp; "(" &amp; Property.Syntax &amp; _ <br>            "):" &amp; "&lt;Empty&gt;" <br>        Else <br>            frmProp.lstProperties.AddItem Property.Name &amp; "(" &amp; Property.Syntax &amp; _ <br>            "):" &amp; Value <br>        End If <br>    Next v <br>     <br>    ' <br>    'Make form visible <br>    ' <br>    frmProp.Visible = True <br>     <br>skip: <br>    cmdExit.Visible = True <br>    ' <br>    'Set cursor to default <br>    ' <br>    Screen.MousePointer = 0 <br>End Sub <br> <br>Private Sub Form_Load() <br>' <br>' Sets up the application main form <br>' <br> <br>    ' <br>    ' Define indexs for LoadResPicture API <br>    ' <br>    Const idxComputer = 101 <br>    Const idxUser = 102 <br>    Const idxDomain = 103 <br>    Const idxSyntax = 104 <br>    Const idxService = 105 <br>    Const idxGroup = 106 <br>    Const idxPrintQueue = 107 <br>    Const idxOU = 108 <br>    Const idxFileShare = 109 <br>    Const idxOrganization = 110 <br>    Const idxCountry = 111 <br>    Const idxTop = 112 <br>    Const idxNamespace = 113 <br>    Const idxDefault = 114 <br>    Const idxNamespaces = 115 <br>    ' App icon index <br>    Const idxApp = 101 <br>     <br>    ' <br>    ' Create temp Node variable <br>    ' <br>    Dim nodX As Node <br> <br>    ' <br>    ' Load pictures into ImageList control. <br>    ' <br>    'Dim pic As Picture <br>    ' <br>    'Create Image variable <br>    ' <br>    Dim imgI As ListImage <br>     <br>    ' <br>    ' Set Error handler <br>    ' <br>    On Error GoTo ErrorHandler <br> <br>    ' <br>    ' Each image/icon is loaded from the resource file.  If the image <br>    ' is not present, the default image is used. <br>    ' <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgComputer", LoadResPicture(idxComputer, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgUser", LoadResPicture(idxUser, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgDomain", LoadResPicture(idxDomain, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgSchema", LoadResPicture(idxSyntax, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgService", LoadResPicture(idxService, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgGroup", LoadResPicture(idxGroup, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgPrintQueue", LoadResPicture(idxPrintQueue, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgFileShare", LoadResPicture(idxFileShare, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgOrganization", LoadResPicture(idxOrganization, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgCountry", LoadResPicture(idxCountry, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgNameSpace", LoadResPicture(idxNamespace, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgNamespaces", LoadResPicture(idxNamespaces, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgFileService", LoadResPicture(idxDefault, vbResBitmap)) <br>    Set imgI = ImageList1.ListImages.Add(, _ <br>        "imgDefault", LoadResPicture(idxDefault, vbResBitmap)) <br>     <br>    frmBrwsTree.Icon = LoadResPicture(idxApp, vbResIcon) <br>     <br>    ' <br>    ' Set TreeView control properties. <br>    ' <br>    TreeView1.ImageList = ImageList1    ' Initialize ImageList <br>    TreeView1.Style = tvwTreelinesPlusMinusPictureText ' Style 7 <br>    TreeView1.LineStyle = tvwRootLines <br>    TreeView1.Indentation = 50 <br>    strPath = "ADS:" ' Default start of browse <br> <br>    Call enumerate_path(nodX) <br>     <br>    GoTo finish <br>     <br>ErrorHandler: <br>    errstring = "Had an error:" &amp; Err.Number <br>    ERRNUMB = Err.Number <br>    MsgBox errstring <br>    Resume Next <br>finish: <br> <br>End Sub <br> <br>Private Sub TreeView1_Collapse(ByVal Node As Node) <br>' <br>' To do when collapsing a node <br>' <br>    txtName.Caption = Node.Text <br>    txtPath.Caption = Node.Key <br>End Sub <br> <br>Private Sub TreeView1_Expand(ByVal Node As Node) <br>' <br>' Process a node expand <br>' <br>    Dim ChildNode As Node <br>    On Error GoTo ErrorHandler <br>     <br>    TreeView1.MousePointer = 13 <br>    ' Only expand once so check for "Dummy" child <br>    If Node.Child = "Dummy" Then <br> <br>        Node.Sorted = True <br>        If bStartup = False Then <br>         <br>            cmdExit.Visible = False <br>            txtName.Caption = Node.Text <br>            txtPath.Caption = Node.Key <br>         <br>            Set ChildNode = Node.Child <br>            If ChildNode.Text = "Dummy" Then <br>                TreeView1.Nodes.Remove (ChildNode.Key) <br>            End If <br>            cmdAbort.Visible = True <br>            cmdAbort.SetFocus <br>            DoEvents <br>             <br>            strPath = Node.Key <br>         <br>            Call enumerate_path(Node) <br>             <br>        End If <br>    End If <br> <br>GoTo finish <br> <br>ErrorHandler: <br>    errstring = "Had an error:" &amp; Err.Number <br>    ERRNUMB = Err.Number <br>    MsgBox errstring <br> <br>finish: <br>    cmdExit.Visible = True <br>    Node.Sorted = True <br>    cmdAbort.Visible = False <br>    TreeView1.MousePointer = 0 <br> <br>End Sub <br> <br>Private Sub TreeView1_NodeClick(ByVal Node As Node) <br>' <br>' Process a node click <br>' <br>    txtName.Caption = Node.Text <br>    txtPath.Caption = Node.Key <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
