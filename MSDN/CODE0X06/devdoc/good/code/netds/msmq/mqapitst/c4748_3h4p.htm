<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MQAPITST.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4759"></a>MQAPITST.H</h2>
<pre><code>// test.h : main header file for the TEST application <br>// <br> <br>#ifndef __AFXWIN_H__ <br>#error include 'stdafx.h' before including this file for PCH <br>#endif <br> <br>#include "resource.h"       // main symbols <br> <br>#include "mq.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestApp: <br>// See test.cpp for the implementation of this class <br>// <br> <br>class CTestApp : public CWinApp <br>{ <br>public: <br>CTestApp(); <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CTestApp) <br>public: <br>virtual BOOL InitInstance(); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br> <br>//{{AFX_MSG(CTestApp) <br>afx_msg void OnAppAbout(); <br>// NOTE - the ClassWizard will add and remove member functions here. <br>//    DO NOT EDIT what you see in these blocks of generated code ! <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br>}; <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#define BUFFERSIZE 256 <br>#define MAX_Q_PATHNAME_LEN 256 <br>#define MAX_Q_FORMATNAME_LEN 256 <br>#define DEFAULT_M_TIMETOREACHQUEUE -1 <br>#define DEFAULT_M_TIMETOBERECEIVED -1 <br>#define MAX_VAR 20 <br> <br>// <br>// A structure for the array of queues that the application handles. <br>// <br>typedef struct { <br>TCHAR szPathName[MAX_Q_PATHNAME_LEN];     // holds the Queue path name. <br>TCHAR szFormatName[MAX_Q_FORMATNAME_LEN]; // holds the Queue format name. <br>QUEUEHANDLE hHandle;                         // a handle for an open Queue. <br>DWORD dwAccess;                              // access for the queue. <br>} ARRAYQ; <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
