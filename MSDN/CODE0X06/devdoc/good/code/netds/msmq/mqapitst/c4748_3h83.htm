<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TESTVIEW.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4773"></a>TESTVIEW.CPP</h2>
<pre><code>// testView.cpp : implementation of the CTestView class <br>// <br> <br>#include "stdafx.h" <br>#include "MQApitst.h" <br>#include "mainfrm.h" <br> <br>#include "testDoc.h" <br>#include "testView.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestView <br> <br>IMPLEMENT_DYNCREATE(CTestView, CEditView) <br> <br>BEGIN_MESSAGE_MAP(CTestView, CEditView) <br>//{{AFX_MSG_MAP(CTestView) <br>ON_WM_CREATE() <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestView construction/destruction <br> <br>CTestView::CTestView() <br>{ <br>// TODO: add construction code here <br> <br>} <br> <br>CTestView::~CTestView() <br>{ <br>} <br> <br>BOOL CTestView::PreCreateWindow(CREATESTRUCT&amp; cs) <br>{ <br>// TODO: Modify the Window class or styles here by modifying <br>//  the CREATESTRUCT cs <br> <br>BOOL bPreCreated = CEditView::PreCreateWindow(cs); <br>cs.style &amp;= ~(ES_AUTOHSCROLL|WS_HSCROLL);// Enable word-wrapping <br> <br>return bPreCreated; <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestView drawing <br> <br>void CTestView::OnDraw(CDC* pDC) <br>{ <br>CTestDoc* pDoc = GetDocument(); <br>ASSERT_VALID(pDoc); <br> <br>// TODO: add draw code for native data here <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestView diagnostics <br> <br>#ifdef _DEBUG <br>void CTestView::AssertValid() const <br>{ <br>CEditView::AssertValid(); <br>} <br> <br>void CTestView::Dump(CDumpContext&amp; dc) const <br>{ <br>CEditView::Dump(dc); <br>} <br> <br>CTestDoc* CTestView::GetDocument() // non-debug version is inline <br>{ <br>ASSERT(m_pDocument-&gt;IsKindOf(RUNTIME_CLASS(CTestDoc))); <br>return (CTestDoc*)m_pDocument; <br>} <br>#endif //_DEBUG <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CTestView message handlers <br> <br>int CTestView::OnCreate(LPCREATESTRUCT lpCreateStruct)  <br>{ <br>if (CEditView::OnCreate(lpCreateStruct) == -1) <br>return -1; <br> <br>// TODO: Add your specialized creation code here <br> <br>pMainView = this; <br>return 0; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
