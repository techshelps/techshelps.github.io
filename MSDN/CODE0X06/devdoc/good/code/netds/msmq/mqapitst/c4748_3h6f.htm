<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SENDMDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4767"></a>SENDMDLG.CPP</h2>
<pre><code>// SendMDlg.cpp : implementation file <br>// <br> <br>#include "stdafx.h" <br>#include "MQApitst.h" <br>#include "SendMDlg.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CSendMessageDialog dialog <br> <br> <br>CSendMessageDialog::CSendMessageDialog(CArray&lt;ARRAYQ*, ARRAYQ*&gt;* pStrArray, CWnd* pParent /*=NULL*/) <br>: CDialog(CSendMessageDialog::IDD, pParent) <br>{ <br>m_pStrArray = pStrArray; <br> <br>//{{AFX_DATA_INIT(CSendMessageDialog) <br>m_strBody = szLastMessageBody; <br>m_strLabel = szLastMessageLabel; <br>m_bPriority = (MQ_MAX_PRIORITY - MQ_MIN_PRIORITY)/2; <br>m_iAck = MQMSG_ACKNOWLEDGMENT_NONE; <br>m_iDelivery = MQMSG_DELIVERY_EXPRESS; <br>m_szPathName = _T(""); <br>m_szAdminPathName = _T(""); <br>m_Journal = FALSE; <br>m_DeadLetter = FALSE; <br>m_Authenticated = FALSE; <br>m_Encrypted = FALSE; <br>m_dwTimeToReachQueue = (DWORD)DEFAULT_M_TIMETOREACHQUEUE; <br>m_dwTimeToBeReceived = (DWORD)DEFAULT_M_TIMETOBERECEIVED; <br>//}}AFX_DATA_INIT <br>} <br> <br> <br>void CSendMessageDialog::DoDataExchange(CDataExchange* pDX) <br>{ <br>CDialog::DoDataExchange(pDX); <br>//{{AFX_DATA_MAP(CSendMessageDialog) <br>DDX_Control(pDX, IDC_ADMIN_COMBO, m_AdminPathNameCB); <br>DDX_Control(pDX, IDC_TARGET_COMBO, m_PathNameCB); <br>DDX_Text(pDX, IDC_BODY, m_strBody); <br>DDV_MaxChars(pDX, m_strBody, 128); <br>DDX_Text(pDX, IDC_LABEL, m_strLabel); <br>DDV_MaxChars(pDX, m_strLabel, 128); <br>DDX_Text(pDX, IDC_MESSAGE_PRIORITY, m_bPriority); <br>DDV_MinMaxByte(pDX, m_bPriority, MQ_MIN_PRIORITY, MQ_MAX_PRIORITY); <br>DDX_Radio(pDX, IDC_ACK_NONE_RADIO, m_iAck); <br>DDX_Radio(pDX, IDC_DELIVERY_EXPRESS_RADIO, m_iDelivery); <br>DDX_CBString(pDX, IDC_TARGET_COMBO, m_szPathName); <br>DDV_MaxChars(pDX, m_szPathName, 128); <br>DDX_CBString(pDX, IDC_ADMIN_COMBO, m_szAdminPathName); <br>DDV_MaxChars(pDX, m_szAdminPathName, 128); <br>DDX_Check(pDX, IDC_JOURNAL, m_Journal); <br>DDX_Check(pDX, IDC_DEAD_LETTER, m_DeadLetter); <br>DDX_Check(pDX, IDC_AUTHENTICATED, m_Authenticated); <br>DDX_Check(pDX, IDC_ENCRYPTED, m_Encrypted); <br>DDX_Text(pDX, IDC_TIME_TO_REACH_QUEUE, m_dwTimeToReachQueue); <br>DDX_Text(pDX, IDC_TIME_TO_BE_RECEIVED, m_dwTimeToBeReceived); <br>//}}AFX_DATA_MAP <br>} <br> <br> <br>BEGIN_MESSAGE_MAP(CSendMessageDialog, CDialog) <br>//{{AFX_MSG_MAP(CSendMessageDialog) <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CSendMessageDialog message handlers <br> <br>BOOL CSendMessageDialog::OnInitDialog() <br>{ <br>CDialog::OnInitDialog(); <br> <br>int i; <br> <br>// TODO: Add extra initialization here <br>for  (i=0 ; i&lt;m_pStrArray-&gt;GetSize() ; i++) <br>{ <br>if (((*m_pStrArray)[i]-&gt;dwAccess &amp; MQ_SEND_ACCESS) != FALSE) <br>{ <br>VERIFY (m_PathNameCB.AddString((*m_pStrArray)[i]-&gt;szPathName) != CB_ERR); <br>} <br>        VERIFY (m_AdminPathNameCB.AddString((*m_pStrArray)[i]-&gt;szPathName) != CB_ERR); <br>} <br> <br>    // <br>    // Set the first PathName as default selection. <br>    // <br>    if (m_PathNameCB.GetCount() &gt; 0) m_PathNameCB.SetCurSel(0); <br>    if (m_AdminPathNameCB.GetCount() &gt; 0) m_AdminPathNameCB.SetCurSel(0); <br> <br>    return TRUE;  // return TRUE unless you set the focus to a control <br>              // EXCEPTION: OCX Property Pages should return FALSE <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
