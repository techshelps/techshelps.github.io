<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RECWDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4764"></a>RECWDLG.CPP</h2>
<pre><code>// RecWDlg.cpp : implementation file <br>// <br> <br>#include "stdafx.h" <br>#include "MQApitst.h" <br>#include "RecWDlg.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CReceiveWaitDialog dialog <br> <br> <br>CReceiveWaitDialog::CReceiveWaitDialog(CWnd* pParent /*=NULL*/) <br>: CDialog(CReceiveWaitDialog::IDD, pParent) <br>{ <br>//{{AFX_DATA_INIT(CReceiveWaitDialog) <br>// NOTE: the ClassWizard will add member initialization here <br>//}}AFX_DATA_INIT <br>} <br> <br> <br>void CReceiveWaitDialog::DoDataExchange(CDataExchange* pDX) <br>{ <br>CDialog::DoDataExchange(pDX); <br>//{{AFX_DATA_MAP(CReceiveWaitDialog) <br>// NOTE: the ClassWizard will add DDX and DDV calls here <br>//}}AFX_DATA_MAP <br>} <br> <br> <br>BEGIN_MESSAGE_MAP(CReceiveWaitDialog, CDialog) <br>//{{AFX_MSG_MAP(CReceiveWaitDialog) <br>// NOTE: the ClassWizard will add message map macros here <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CReceiveWaitDialog message handlers <br> <br> <br>void CReceiveWaitDialog::CenterWindow() <br>{ <br>    CWnd * pParent = GetParent(); <br>    RECT parentRect; <br>    RECT childRect; <br> <br>    pParent-&gt;GetWindowRect(&amp;parentRect); <br>    int dxP = parentRect.right-parentRect.left; <br>    int dyP = parentRect.bottom - parentRect.top; <br> <br>    GetWindowRect(&amp;childRect); <br>    int dxC = childRect.right-childRect.left; <br>    int dyC = childRect.bottom - childRect.top; <br> <br>    childRect.left = dxP/2-dxC/2; <br>    childRect.right = childRect.left+dxC; <br> <br>    childRect.top = dyP/2-dyC/2; <br>    childRect.bottom = childRect.top+dyC; <br> <br>    MoveWindow(&amp;childRect); <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
