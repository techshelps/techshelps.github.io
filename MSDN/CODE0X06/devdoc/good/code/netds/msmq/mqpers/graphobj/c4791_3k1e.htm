<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POINT.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4802"></a>POINT.CPP</h2>
<pre><code>// Point.cpp : Implementation of CPoint <br>#include "stdafx.h" <br>#include "GraphObj.h" <br>#include "Point.h" <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPoint <br> <br>STDMETHODIMP CPoint::IMyPersistStreamImpl_Load(LPSTREAM pIStream) <br>{ <br>    ULONG           cb; <br>    HRESULT         hr; <br> <br>    if (NULL==pIStream) <br>        return ResultFromScode(E_POINTER); <br> <br>    hr=pIStream-&gt;Read(&amp;m_Point, sizeof(POINT), &amp;cb); <br>    if (FAILED(hr) || sizeof(POINT) != cb) { <br>pIStream-&gt;Release(); <br>        return hr; <br>    } <br> <br>return NOERROR; <br>} <br> <br> <br> <br>STDMETHODIMP CPoint::IMyPersistStreamImpl_Save(LPSTREAM pIStream, BOOL /*fClearDirty */) <br>{ <br>    ULONG           cb; <br>    HRESULT         hr; <br> <br>    if (NULL==pIStream) <br>        return ResultFromScode(E_POINTER); <br> <br>    hr=pIStream-&gt;Write(&amp;m_Point, (ULONG)sizeof(POINT), &amp;cb); <br> <br>    if (FAILED(hr) || sizeof(POINT)!=cb) <br>       return ResultFromScode(STG_E_WRITEFAULT); <br> <br>return NOERROR; <br>} <br> <br> <br>STDMETHODIMP CPoint::IMyPersistStreamImpl_GetSizeMax(ULARGE_INTEGER FAR* pcbSize) <br>{ <br>pcbSize-&gt;LowPart = (DWORD)(sizeof(POINT)); <br>pcbSize-&gt;HighPart = 0L; <br>return NOERROR; <br>} <br> <br> <br>STDMETHODIMP CPoint::get_x(long * pVal) <br>{ <br>*pVal = m_Point.x; <br>return S_OK; <br>} <br> <br>STDMETHODIMP CPoint::put_x(long newVal) <br>{ <br>m_Point.x = newVal; <br>return S_OK; <br>} <br> <br>STDMETHODIMP CPoint::get_y(long * pVal) <br>{ <br>*pVal = m_Point.y; <br>return S_OK; <br>} <br> <br>STDMETHODIMP CPoint::put_y(long newVal) <br>{ <br>m_Point.y = newVal; <br>return S_OK; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
