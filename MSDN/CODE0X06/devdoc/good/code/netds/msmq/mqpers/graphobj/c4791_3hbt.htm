<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IPERSISTSTREAM.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4799"></a>IPERSISTSTREAM.H</h2>
<pre><code>#ifndef _IPERSISTSTREAM_H <br>#define _IPERSISTSTREAM_H <br> <br>////////////////////////////////////////////////////////////////////////////// <br>// IMyPersistStream <br>// Implements IPersistStream as a template class.  <br>// <br>// ToDo: Derive your own class form this class and implement the methods <br>//IMyPersistStreamImpl_Load <br>//IMyPersistStreamImpl_Save <br>//IMyPersistStreamImpl_GetSizeMax <br>// and the member variable <br>//m_bRequiresSave <br>//////////////////////////////////////////////////////////////////////////////  <br>template &lt;class T&gt; <br>class ATL_NO_VTABLE IMyPersistStreamImpl <br>{ <br>public: <br>// IUnknown <br>// <br>STDMETHOD(QueryInterface)(REFIID riid, void ** ppvObject) = 0; <br>_ATL_DEBUG_ADDREF_RELEASE_IMPL(IMyPersistStreamImpl) <br> <br>// IPersist <br>STDMETHOD(GetClassID)(CLSID *pClassID) <br>{ <br>ATLTRACE(_T("IMyPersistStreamImpl::GetClassID\n")); <br>T* pT = static_cast&lt;T*&gt;(this); <br>*pClassID = pT-&gt;GetObjectCLSID(); <br>return S_OK; <br>} <br> <br>// IPersistStream <br>STDMETHOD(IsDirty)() <br>{ <br>ATLTRACE(_T("IMyPersistStreamImpl::IsDirty\n")); <br>T* pT = static_cast&lt;T*&gt;(this); <br>return (pT-&gt;m_bRequiresSave) ? S_OK : S_FALSE; <br>} <br>STDMETHOD(Load)(LPSTREAM pStm) <br>{ <br>ATLTRACE(_T("IMyPersistStreamImpl::Load\n")); <br>T* pT = static_cast&lt;T*&gt;(this); <br>return pT-&gt;IMyPersistStreamImpl_Load(pStm); <br>} <br>STDMETHOD(Save)(LPSTREAM pStm, BOOL fClearDirty) <br>{ <br>T* pT = static_cast&lt;T*&gt;(this); <br>ATLTRACE(_T("IMyPersistStreamImpl::Save\n")); <br>return pT-&gt;IMyPersistStreamImpl_Save(pStm, fClearDirty); <br>} <br>STDMETHOD(GetSizeMax)(ULARGE_INTEGER FAR* pcbSize ) <br>{ <br>T* pT = static_cast&lt;T*&gt;(this); <br>ATLTRACE(_T("IMyPersistStreamImpl::GetSizeMax\n")); <br>return pT-&gt;IMyPersistStreamImpl_GetSizeMax(pcbSize); <br>} <br> <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
