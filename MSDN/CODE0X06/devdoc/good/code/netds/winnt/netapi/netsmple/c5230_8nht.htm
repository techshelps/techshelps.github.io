<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NETSMPLE.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5231"></a>NETSMPLE.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples. <br>*       Copyright 1995 - 1998 Microsoft Corporation. <br>*       All rights reserved.  <br>*       This source code is only intended as a supplement to  <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the  <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br> <br> <br>/* <br>    Net API Example <br> <br>    Create a user and a local group and add the user to the local group. <br> <br>    This sample requires NT 3.51 <br>*/ <br> <br>#define UNICODE 1 <br>#include &lt;windows.h&gt; <br>#include &lt;lmcons.h&gt; <br>#include &lt;lmaccess.h&gt; <br>#include &lt;lmerr.h&gt; <br>#include &lt;lmapibuf.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;stdlib.h&gt; <br> <br>int _CRTAPI1 main( int cArgs, char *pArgs[] ); <br> <br>NET_API_STATUS NetSample( LPWSTR lpszDomain, <br>                          LPWSTR lpszUser, <br>                          LPWSTR lpszPassword, <br>                          LPWSTR lpszLocalGroup ) <br>{ <br> <br>    USER_INFO_1               user_info; <br>    LOCALGROUP_INFO_1         localgroup_info; <br>    LOCALGROUP_MEMBERS_INFO_3 localgroup_members; <br>    LPWSTR                    lpszPrimaryDC = NULL; <br>    NET_API_STATUS            err = 0; <br>    DWORD                     parm_err = 0; <br> <br>/* First get the name of the Primary Domain Controller. */ <br>/* Be sure to free the returned buffer */ <br> <br>    err = NetGetDCName( NULL,                        /* Local Machine */ <br>                        lpszDomain,                  /* Domain Name */ <br>                        (LPBYTE *)&amp;lpszPrimaryDC );  /* returned PDC */ <br> <br>    if ( err != 0 ) <br>    { <br>        printf( "Error getting DC name: %d\n", err ); <br>        return( err ); <br>    } <br> <br> <br>/* Set up the USER_INFO_1 struct */ <br> <br>    user_info.usri1_name = lpszUser; <br>    user_info.usri1_password = lpszPassword; <br>    user_info.usri1_priv = USER_PRIV_USER; <br>    user_info.usri1_home_dir = TEXT(""); <br>    user_info.usri1_comment = TEXT("Sample User"); <br>    user_info.usri1_flags = UF_SCRIPT; <br>    user_info.usri1_script_path = TEXT(""); <br> <br>    err = NetUserAdd( lpszPrimaryDC,       /* PDC name */ <br>                      1,                   /* level */ <br>                      (LPBYTE)&amp;user_info,  /* input buffer */ <br>                      &amp;parm_err );         /* parameter in error */ <br> <br>    switch ( err ) <br>    { <br>    case 0: <br>        printf("user successfully created.\n"); <br>        break; <br>    case NERR_UserExists: <br>        printf("user already exists.\n"); <br>        err = 0; <br>        break; <br>    case ERROR_INVALID_PARAMETER: <br>        printf("Invalid Parameter Error adding user: Parameter Index = %d\n", <br>                parm_err); <br>        NetApiBufferFree( lpszPrimaryDC ); <br>        return( err ); <br>    default: <br>        printf("Error adding user: %d\n", err); <br>        NetApiBufferFree( lpszPrimaryDC ); <br>        return( err ); <br>    } <br> <br>/* Set up the LOCALGROUP_INFO_1 struct */ <br> <br>    localgroup_info.lgrpi1_name = lpszLocalGroup; <br>    localgroup_info.lgrpi1_comment = TEXT("Sample Local group."); <br> <br>    err = NetLocalGroupAdd( lpszPrimaryDC,              /* PDC name */ <br>                            1,                          /* level */ <br>                            (LPBYTE)&amp;localgroup_info,   /* input buffer */ <br>                            &amp;parm_err );                /* parm in error */ <br> <br>    switch ( err ) <br>    { <br>    case 0: <br>        printf("Local Group successfully created.\n"); <br>        break; <br>    case ERROR_ALIAS_EXISTS: <br>        printf("Local Group already exists.\n"); <br>        err = 0; <br>        break; <br>    case ERROR_INVALID_PARAMETER: <br>        printf("Invalid Parameter Error adding Local Group: Parameter Index = %d\n", <br>                err, parm_err); <br>        NetApiBufferFree( lpszPrimaryDC ); <br>        return( err ); <br>    default: <br>        printf("Error adding Local Group: %d\n", err); <br>        NetApiBufferFree( lpszPrimaryDC ); <br>        return( err ); <br>    } <br> <br>/* Now add the user to the local group */ <br> <br>    localgroup_members.lgrmi3_domainandname = lpszUser; <br> <br>    err = NetLocalGroupAddMembers( lpszPrimaryDC,        /* PDC name */ <br>                                   lpszLocalGroup,       /* group name */ <br>                                   3,                    /* passing in name */ <br>                                   (LPBYTE)&amp;localgroup_members, /* Buffer */ <br>                                   1 );                  /* count passed in */ <br> <br>    switch ( err ) <br>    { <br>    case 0: <br>        printf("User successfully added to Local Group.\n"); <br>        break; <br>    case ERROR_MEMBER_IN_ALIAS: <br>        printf("User already in Local Group.\n"); <br>        err = 0; <br>        break; <br>    default: <br>        printf("Error adding User to Local Group: %d\n", err); <br>        break; <br>    } <br> <br>    NetApiBufferFree( lpszPrimaryDC ); <br>    return( err ); <br> <br>} <br> <br>int _CRTAPI1 main( int    cArgs, <br>                   char * pArgs[] ) <br>{ <br>    NET_API_STATUS err = 0; <br> <br>    printf( "Calling NetSample.\n" ); <br>    err = NetSample( TEXT("SampleDomain"), <br>                     TEXT("SampleUser"), <br>                     TEXT("SamplePswd"), <br>                     TEXT("SampleLG") ); <br>    printf( "NetSample returned %d\n", err ); <br>    return( 0 ); <br>} <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
