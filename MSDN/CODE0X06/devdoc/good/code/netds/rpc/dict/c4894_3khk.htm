<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PLAY.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4898"></a>PLAY.H</h2>
<pre><code>/*************************************************************/ <br>/**                                                         **/ <br>/**                 Microsoft RPC Examples                  **/ <br>/**                 Dictionary Application                  **/ <br>/**        Copyright 1992 - 1998 Microsoft Corporation      **/ <br>/**                                                         **/ <br>/*************************************************************/ <br> <br>#include "rpc.h" <br>#include "rpcndr.h" <br> <br>#define IN <br>#define OUT <br>#define STRING <br>#define CONTEXT_HANDLE <br> <br>/*************************************************************************/ <br>/***            Strongly typed tree nodes and dictionaries             ***/ <br>/*************************************************************************/ <br> <br>/* <br> ************************************************************************ <br> * Record type - previously imported from util1.idl <br> * This is the type of items stored in the remote dictionary. <br> ************************************************************************ <br>*/ <br> <br>typedef struct _Record { <br>    short key;                      // RPC "generation" <br>    STRING char* name;              // contributor <br>} Record; <br> <br>/* <br> ************************************************************************ <br> * The following definitions (RDict, RecordTreeNode) are required <br> * for marshalling a complete dictionary, binary tree, respectively. <br> * All pointers are based on RPC-able types, replacing "void*" <br> * pointers in the local dictionary (dict0) which are non-transmissible. <br> ************************************************************************ <br>*/ <br> <br>typedef struct _RecordTreeNode { <br>    struct _RecordTreeNode *left;   // left child pointer <br>    struct _RecordTreeNode *right;  // right child pointer <br>    Record *item;                   // pointer to a Record structure <br>} RecordTreeNode; <br> <br>typedef struct _DictState { <br>    short ref_count;                // for shared dictionaries <br>    Record * curr_record;           // for global iterators <br>} DictState; <br> <br>typedef struct _RDict { <br>    RecordTreeNode *root;           // pointer to the root of a SAT <br>    long size;                      // number of records in dictionary <br>    DictState * state;              // pointer to state info <br>} RDict; <br> <br>/* <br> * VDict is a "virtual dictionary" object.  It is used in the client <br> * application as a handle on a dictionary maintained by a server <br>*/ <br>typedef CONTEXT_HANDLE void * VDict; <br> <br>typedef enum { <br>    DICT_SUCCESS, <br>    DICT_ITEM_ALREADY_PRESENT, <br>    DICT_ITEM_NOT_FOUND, <br>    DICT_FIRST_ITEM, <br>    DICT_LAST_ITEM, <br>    DICT_EMPTY_DICTIONARY, <br>    DICT_NULL_ITEM <br>} VDict_Status; <br> <br> <br>/*************************************************************************/ <br>/***    Generic Dictionary Operations: (From dict0.h)                  ***/ <br>/***                                                                   ***/ <br>/***    Dictionary *Dict_New(Cmp_rec*, Splay*, print_rec*)             ***/ <br>/***                                                                   ***/ <br>/***    Dict_Status Dict_Find(Dictionary*, Item*)                      ***/ <br>/***    Dict_Status Dict_Next(Dictionary*, Item*)                      ***/ <br>/***    Dict_Status Dict_Prev(Dictionary*, Item*)                      ***/ <br>/***    Dict_Status Dict_Insert(Dictionary*, Item*)                    ***/ <br>/***    Dict_Status Dict_Delete(Dictionary*, Item**)                   ***/ <br>/***                                                                   ***/ <br>/***    Item* DICT_CURR_ITEM(Dict*)                                    ***/ <br>/*************************************************************************/ </code></pre>
<p>&nbsp;</p></body>
</HTML>
