<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DYNOUTS.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4922"></a>DYNOUTS.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples. <br>*       Copyright 1995 - 1998 Microsoft Corporation. <br>*       All rights reserved. <br>*       This source code is only intended as a supplement to <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br>// <br>// Copyright 1996 - 1998 Microsoft Corporation.  All Rights Reserved. <br>// <br>// <br>// Sample code to show server-side <br>// memory allocation for an [out] parameter <br>// <br>// <br> <br>#include &lt;stdio.h&gt; <br>#include &lt;assert.h&gt; <br>#include &lt;malloc.h&gt; <br>#include "dynout.h" <br> <br>#ifdef NODEBUG <br>#define CHECK_STATUS(x) <br>#define TRACE(s) <br>#else <br>#define CHECK_STATUS(x){if (x!=RPC_S_OK) { printf("RPC Err: %d\nfile = %s, line=%d.",x,__FILE__,__LINE__); exit(x);}} <br>#define TRACE(s)puts(s) <br>#endif <br> <br>void main(int argc,char **argv) <br>{ <br>RPC_STATUSrpcStatus; <br>RPC_BINDING_VECTOR  *vectBinding; <br>unsigned char *szEntryName; <br> <br>TRACE("RpcServerRegisterIf"); <br>rpcStatus=RpcServerRegisterIf(MemStuff_v1_0_s_ifspec,0,0); <br>CHECK_STATUS(rpcStatus); <br> <br>TRACE("RpcServerUseAllProtseqs"); <br>rpcStatus=RpcServerUseAllProtseqs(RPC_C_PROTSEQ_MAX_REQS_DEFAULT,NULL); <br>CHECK_STATUS(rpcStatus); <br> <br>TRACE("RpcServerInqBindings"); <br>rpcStatus=RpcServerInqBindings(&amp;vectBinding); <br>CHECK_STATUS(rpcStatus); <br> <br>TRACE("RpcNsBindingExport"); <br>szEntryName="/.:/MyServer"; <br>rpcStatus=RpcNsBindingExport(RPC_C_NS_SYNTAX_DEFAULT,szEntryName,MemStuff_v1_0_s_ifspec,vectBinding,NULL); <br>CHECK_STATUS(rpcStatus); <br> <br>TRACE("RpcEpRegister"); <br>rpcStatus=RpcEpRegister(MemStuff_v1_0_s_ifspec, <br>vectBinding, <br>NULL,NULL); <br>CHECK_STATUS(rpcStatus); <br> <br>TRACE("RpcBindingVectorFree"); <br>rpcStatus=RpcBindingVectorFree(&amp;vectBinding); <br>CHECK_STATUS(rpcStatus); <br> <br>puts("\n\n"); <br>puts("(C) Microsoft New Zealand Limited. Written by Michael Howard, " __DATE__); <br>puts("\nListening...."); <br> <br>rpcStatus=RpcServerListen(1,RPC_C_LISTEN_MAX_CALLS_DEFAULT,FALSE); <br>CHECK_STATUS(rpcStatus); <br>} <br> <br>void  __RPC_FAR * __RPC_API midl_user_allocate(size_t len) <br>{ <br>    return malloc(len); <br>} <br> <br>void __RPC_API midl_user_free(void __RPC_FAR * ptr) <br>{ <br>    free(ptr); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
