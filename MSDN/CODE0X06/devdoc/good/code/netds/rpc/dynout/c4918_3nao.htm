<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DYNOUTC.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4920"></a>DYNOUTC.C</h2>
<pre><code><br>/******************************************************************************\ <br>*       This is a part of the Microsoft Source Code Samples. <br>*       Copyright 1995 - 1998 Microsoft Corporation. <br>*       All rights reserved. <br>*       This source code is only intended as a supplement to <br>*       Microsoft Development Tools and/or WinHelp documentation. <br>*       See these sources for detailed information regarding the <br>*       Microsoft samples programs. <br>\******************************************************************************/ <br>// <br>// Sample code to show server-side <br>// memory allocation for an [out] parameter <br>// <br>// <br>#include &lt;stdio.h&gt; <br>#include &lt;conio.h&gt; <br>#include &lt;stdlib.h&gt; <br>#include &lt;assert.h&gt; <br>#include &lt;malloc.h&gt; <br>#include "dynout.h" <br> <br>void main(int argc,char **argv) <br>{ <br>unsigned char *pr = NULL; <br>long lSize; <br>int i; <br>int bOK; <br> <br>RpcTryExcept <br>{ <br>for(;;) <br>{ <br>pr = NULL;// This is *REALLY* important! <br> <br>GrabChunk(&amp;lSize,&amp;pr); <br> <br>// quick sanity check <br>for (i=0, bOK=TRUE; (i &lt; lSize) &amp;&amp; bOK; i++) <br>{ <br>if (*pr != pr[i]) <br>{ <br>puts("***Error***"); <br>bOK=FALSE; <br>break; <br>} <br>} <br> <br>printf("Returned %d bytes of '%c'\n",lSize,*pr); <br> <br>midl_user_free(pr); <br>} <br>} <br>RpcExcept(1) <br>{ <br>printf("Err: %u\n",RpcExceptionCode()); <br>} <br>RpcEndExcept <br>} <br> <br>void  __RPC_FAR * __RPC_API midl_user_allocate(size_t len) <br>{ <br>    return malloc(len); <br>} <br> <br>void __RPC_API midl_user_free(void __RPC_FAR * ptr) <br>{ <br> <br>    free(ptr); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
