<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REPAS.IDL</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4878"></a>REPAS.IDL</h2>
<pre><code>[ uuid(56BF67C0-6503-1068-BF67-00DD010FBF25), <br>  version(1.0), <br>  pointer_default(unique) <br>] <br>interface repas <br>{ <br> <br>const short STRING_SIZE = 100; <br> <br>typedef char       CHAR_STRING[STRING_SIZE]; <br>typedef wchar_t    WCHAR_STRING[STRING_SIZE]; <br> <br>// note that the client and server side need different header files, <br>// since the represent_as ACF attribute changes the application's <br>// signatures for the next two functions <br> <br>// client side functions defined with ASCII for both functions <br>// server side functions defined with UNICODE for both functions <br> <br>// this function uses UNICODE on the wire (converted by client stub) <br>void ModifyMyWString([in, out] WCHAR_STRING *pStr); <br> <br>// this function uses ASCII on the wire (converted by server stub) <br>void ModifyMyString([in, out] CHAR_STRING * pStr ); <br> <br>void Shutdown(void); <br> <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
