<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAZPROTO.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4973"></a>MAZPROTO.H</h2>
<pre><code>/***************************************************************** <br>MODULE: MazProto.h <br> <br>This module contains function prototypes for maze lords. It should <br>ONLY be included after winmaze.h. <br>*****************************************************************/ <br> <br> <br>#ifndef _MAZ_PROTO_H_ <br>#define _MAZ_PROTO_H_ <br> <br>#include "winmaze.h" <br> <br>#ifdef WIN16 <br>                        /* Maze16.c */ <br>BOOL MaskBlt(HDC hDCDest,int X, int Y, int nWidth, int nHeight, <br>             HDC hDCSrc, int XSrc, int YSrc, HBITMAP hbmMask, int xMask, int yMask, DWORD Rop3); <br> <br>#endif <br> <br>BOOL PolyDraw95(HDC, CONST LPPOINT, CONST LPBYTE, int);     <br> <br>                        /* Bitmap.c */ <br>void FadePic(int iPicNum,BYTE bFacing,HDC hDC,LPRECT lprFrom, LPRECT lprDRect); <br>FullPicType FAR *NewFullPic(int iPicNum,FullPicType FAR *next); <br>FullPicType FAR *DeleteFullPic(FullPicType FAR *fptTrav); <br>void DrawClippedPic(int iPicNum,BYTE bFacingIndex,HDC hDC,LPRECT lprDRect, <br>                    LPRECT lprClip,LPRECT lprFrom, int iRelx, int iRely); <br>BOOL AddPic(int iPicNum); <br>BOOL DelPic(int iPicNum); <br> <br> <br> <br> <br> <br>                        /* Draw.c */ <br> <br>HoleType FAR *DelHole(HoleType FAR *h); <br>HoleType FAR *NewHole(int x1,int x2,HoleType FAR *next); <br>HoleType FAR *DrawRect(HoleType FAR *htTrav,int iRelX,int iRelY, BYTE bRelDir); <br>void DrawMaze(HDC hDC,RECT FAR *rDraw); <br>void DrawTopView(HDC hDC,BOOL bRedraw); <br>void DrawPlayers(HDC hDC,PlayerType FAR *ptTrav2,RECT FAR *rUpd); <br>PlayerDrawType FAR *NewPlayerDraw(PlayerType FAR *p,LPRECT rDraw, LPRECT rClip, <br>                              int iRelx,int iRely,PlayerDrawType FAR *next); <br> <br> <br>                        /* Drones.c */ <br> <br>PlayerType FAR *DeletePlayer(PlayerType FAR *ptTrav); <br>PlayerType FAR *NewPlayer(unsigned long ulID,DWORD dwPID,LPSTR cUserName, <br>                      LPSTR cComputerName,int ix,int iy, BYTE Facing, <br>                      int iScore,int iPicNum,int iGridNum, int iGridxPos, <br>                      int iGridyPos, <br>                      PlayerType FAR *next); <br>int RandRange(int iLow, int iHigh); <br>void InitDrones(void); <br>LRESULT CALLBACK  MoveDrone(HWND hWnd, UINT wMsg, UINT idTimer, DWORD dwTime); <br> <br> <br> <br>                        /* InitMaze.c */ <br> <br>void InitMaze(void); <br>void Calc3DMaze(void); <br>void InsertSubGrid(int SubGridNo,int iXPos, int iYPos); <br> <br> <br> <br>                        /* Maze.c */ <br> <br>BOOL InSanctuary(PositionType FAR *Pos); <br>LONG FAR PASCAL WndProc(HWND hWnd, UINT Message, UINT wParam, LONG lParam); <br>int RegisterClasses(void); <br>void UnRegisterClasses(void); <br>void OneTimeInit(void); <br>void EachTimeInit(void); <br>void OneTimeShutdown(void); <br>void EachTimeShutdown(void); <br>void StartDemo(void); <br>void StopDemo(void); <br> <br> <br>                        /* MazeDlg.c */ <br> <br>BOOL FAR PASCAL DroneDlg(HWND hWndDlg, UINT Message, UINT wParam, LONG lParam); <br>BOOL FAR PASCAL AboutDlg(HWND hWndDlg, UINT Message, UINT wParam, LONG lParam); <br>BOOL FAR PASCAL IntoneDlg(HWND hWndDlg, UINT Message, UINT wParam, LONG lParam); <br>BOOL FAR PASCAL PlayerDlg(HWND hWndDlg,UINT Message,WPARAM wParam,LPARAM lParam); <br>void cwCenter(HWND hWnd,int top); <br> <br> <br>                        /* MazeWnd.c */ <br> <br>void KillSelf(void); <br>LONG FAR PASCAL MazeWndProc(HWND hWnd, UINT Message, UINT wParam, LONG lParam); <br>void StretchBitmaps(void); <br> <br>                        /* Network.c */ <br> <br>unsigned long MemCRC(LPSTR buffer,int bytes); <br>BOOL SendNetMessage(unsigned long ulSender, unsigned long ulDest, LPVOID lpStruct, DWORD dwPacketType); <br>void MailWatchThread(HANDLE hMailSlot); <br>BOOL InitNetwork(void); <br>void ProcessNewMail(void); <br> <br> <br>                        /* ReadSGrd.c */ <br>int ReadSubGrids(VOID); <br> <br> <br>                        /* ScoreWnd.c */ <br> <br>LONG FAR PASCAL ScoreWndProc(HWND hWnd, UINT Message, UINT wParam, LONG lParam); <br> <br> <br>                        /* TextWnd.c */ <br> <br>LONG FAR PASCAL TextWndProc(HWND hWnd, UINT Message, UINT wParam, LONG lParam); <br>void PrintTextLine(LPSTR cLine); <br>LPSTR lstrdup(LPSTR s); <br>                        /* TopWnd.c */ <br> <br>LONG FAR PASCAL TopViewWndProc(HWND hWnd, UINT Message, UINT wParam, LONG lParam); <br> <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
