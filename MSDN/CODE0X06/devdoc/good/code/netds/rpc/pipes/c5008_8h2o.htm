<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PIPE.IDL</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5010"></a>PIPE.IDL</h2>
<pre><code>/*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*\ <br>|                    Copyright Microsoft Corp. 1992-1996                 | <br>|                        Remote Machine pipe sample                      | <br>|                                                                        | <br>|  FILE      :   pipe.idl                                                | <br>|                                                                        | <br>|  PURPOSE   :   This file defines the interface for the pipe example    | <br>|                                                                        | <br>\*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ <br>[ <br>uuid(60ceb4a0-c2f1-11cf-9556-00aa00374e69),     // UUID <br>pointer_default(unique),                        // Pointer default <br>version(1.0)                                    // Interface version <br>] <br>interface pipe_sample <br>{ <br>// Declare the pipe data type. This should also work for UNICODE. <br>#ifdef _UNICODE <br>    typedef pipe wchar_t CHAR_PIPE_TYPE; <br>#else <br>    typedef pipe unsigned char CHAR_PIPE_TYPE; <br>#endif <br> <br>    /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ <br>    /* ScrambleFile - This procedure sends a file from the client to    */ <br>    /*              the server, the server then "encodes" it , and the  */ <br>    /*              file is sent back to the client                     */ <br>    /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ <br>    void ScrambleFile( <br>        [in] unsigned long Action,              // Encode / Decode <br>        [in, out] CHAR_PIPE_TYPE *pipe_data);   // The file content <br> <br> <br>    /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ <br>    /* ShutDown- This procedure sends a message to the server that it  */ <br>    /*          can stop listen for remote procedure calls              */ <br>    /*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*/ <br>    void ShutDown(void);            // Procedure to shut down the server  <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
