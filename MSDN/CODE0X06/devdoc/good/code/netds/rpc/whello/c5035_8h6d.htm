<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5035"></a>README.TXT</h2>
<pre><code>WHELLO <br> <br> <br>The WHELLO program is a client/server implementation of "Hello, World". The <br>client and server applications can run on the same Windwos NT workstation. <br> <br>FILES <br>===== <br> <br>The directory samples\rpc\whello contains the following files for building <br>the sample distributed application WHELLO: <br> <br>File          Description <br> <br>README.TXT    Readme file for the WHELLO sample <br>WHELLO.IDL    Interface definition language file <br>WHELLO.ACF    Attribute configuration file <br>WHELLOC.C     Client main program <br>WHELLO.RC     Client resource file <br>WHELLO.DLG    Client dialog box definitions <br>WHELLO.DEF    Client module definition file <br>WHELLOS.C     Server main program <br>WHELLOP.C     Remote procedures <br>MAKEFILE      Nmake file for Windows NT or Windows 95 <br>MAKEFILE.WIN  Nmake file for Win 3.x <br> <br>------------------------------------------- <br>BUILDING CLIENT AND SERVER APPLICATIONS FOR <br>MICROSOFT WINDOWS NT OR WINDOWS 95: <br>------------------------------------------- <br> <br>The following environment variables should be set for you already. <br> <br>  set CPU=i386 <br>  set INCLUDE=%SDKROOT%\h <br>  set LIB=%SDKROOT%\lib <br>  set PATH=%SDKROOT%\system32;%SDKROOT%\bin; <br> <br>Where %SDKROOT% is the root directory for the 32-bit Windows SDK. <br> <br>For mips, set CPU=mips <br>For alpha, set CPU=alpha <br> <br>Build the sample server application: <br> <br>  nmake cleanall <br>  nmake <br> <br>These commands build the executable program whellos.exe <br>and whelloc.exe for Microsoft Windows NT or Windows 95. <br> <br>-------------------------------------------- <br>BUILDING THE CLIENT APPLICATION FOR WIN 3.X <br>-------------------------------------------- <br> <br>After installing the Microsoft Visual C/C++ version 1.50 development <br>environment and the 16-bit RPC SDK on a Windows NT or Windows 95 <br>computer, you can build the sample client application from Windows NT <br>or Windows 95. <br> <br>  nmake -f makefile.win cleanall <br>  nmake -f makefile.win <br> <br>This builds the client application whelloc.exe. <br> <br>You may also execute the Microsoft Visual C/C++ compiler under MS-DOS. <br>This requires a two step build process. <br> <br>  Step One: Compile the .IDL files under Windows NT or Windows 95 <br>     nmake -a -f makefile.win whello.h <br> <br>  Step Two: Compile the C sources (stub and application) under MS-DOS. <br>     nmake -f makefile.win <br> <br>------------------------------------------ <br>RUNNING THE CLIENT AND SERVER APPLICATIONS <br>------------------------------------------ <br> <br>On the server, enter <br> <br>  whellos <br> <br>On the client, enter <br> <br>  net start workstation <br>  whelloc <br> <br>Note:  The client and server applications can run on <br>the same Microsoft Windows NT or Windows 95 computer when you use <br>different screen groups.  If you run the client on the <br>Microsoft MS-DOS and Windows computer, choose the Run <br>command from the File menu in the Microsoft Windows 3.x <br>Program Manager and enter whelloc.exe. <br> <br>Several command line switches are available to change <br>settings for the server application. For a listing of <br>available switches, enter <br> <br>  whellos -? <br> <br>--------------------- <br>RUNNING ON WINDOWS 95 <br>--------------------- <br> <br>If you wish to run the server on Windows 95, you will need to use <br>the LRPC protocol. <br> <br>To start the server, enter <br> <br> whellos -p ncalrpc <br> <br>To start the client (from the same machine), enter <br> <br> whelloc <br> <br>Change the protocol to "ncalrpc" by selecting "Protocol sequence name" <br>from the "Remote Call" menu and entering <br> <br> ncalrpc </code></pre>
<p>&nbsp;</p></body>
</HTML>
