<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4991"></a>README.TXT</h2>
<pre><code>NHELLO <br> <br> <br>FILES <br>===== <br> <br>The directory samples\rpc\ns\nhello contains the following files for <br>building the sample distributed application NHELLO: <br> <br>File            Description <br> <br>README.TXT      Readme file for the NHELLO sample <br>NHELLO.IDL      Interface definition language file <br>NHELLOC.C       Client main program <br>NHELLOS.C       Server main program <br>NHELLOP.C       Remote procedures <br>NSSERV.C        NT Service program <br>SERVICE.C       Service Control Manager interface <br>MAKEFILE        Nmake file to build for Windows NT or Windows 95 <br>MAKEFILE.DOS    Nmake file to build for MS-DOS <br> <br>The directory samples\rpc\ns\cds contains the files that describe the <br>gateway protocol to the DCE Cell Directory Service (CDS) <br> <br>----------------------------------------------------------------------- <br>BUILDING CLIENT AND SERVER APPLICATIONS FOR MICROSOFT WINDOWS NT OR WINDOWS 95: <br>----------------------------------------------------------------------- <br> <br>The following environment variables should be set for you already. <br> <br>  set CPU=i386 <br>  set INCLUDE=%SDKROOT%\h <br>  set LIB=%SDKROOT%\lib <br>  set PATH=%SDKROOT%\system32;%SDKROOT%\bin; <br> <br>Where %SDKROOT% is the root directory for the 32-bit Windows SDK. <br> <br>For mips, set CPU=mips <br>For alpha, set CPU=alpha <br> <br>Build the sample distributed application: <br>  nmake cleanall <br>  nmake <br> <br>This builds the executable programs nhelloc.exe <br>(client), nhellos.exe (console server), and nsserv <br>( NT service ). <br> <br>----------------------------------------------------------------------- <br>BUILDING THE CLIENT APPLICATION FOR MS-DOS <br>----------------------------------------------------------------------- <br> <br>After installing the Microsoft Visual C/C++ version 1.50 development <br>environment and the 16-bit RPC SDK on a Windows NT or Windows 95 <br>computer, you can build the sample client application from Windows NT <br>or Windows 95. <br> <br>  nmake -f makefile.dos cleanall <br>  nmake -f makefile.dos <br> <br>This builds the client application nhelloc.exe. <br> <br>You may also execute the Microsoft Visual C/C++ compiler under MS-DOS. <br>This requires a two step build process. <br> <br>  Step One: Compile the .IDL files under Windows NT or Windows 95 <br>     nmake -a -f makefile.dos nhello.h <br> <br>  Step Two: Compile the C sources (stub and application) under MS-DOS. <br>     nmake -f makefile.dos <br> <br> <br>----------------------------------------------------------------------- <br>RUNNING THE CLIENT AND SERVER APPLICATIONS <br>----------------------------------------------------------------------- <br> <br>-- NHELLOS -- <br>On the server, enter <br> <br>  net start rpclocator <br>  set start rpcss <br>  nhellos <br> <br>(You can also start the RPC Locator and RPC Service by running <br>the Services program in Control Panel.) <br> <br> <br>-- NSSERV -- <br>To install the service, first compile everything, and then: <br> <br>    nsserv -install <br> <br>Now all you have to do is start it, either using the <br>"net start" method, the control panel Services applet, or <br>the SC.EXE utilitie in the MSTOOLS\BIN directory: <br> <br>    sc start nshelloservice <br> <br>Once the service has been started, you can use the client <br>program to verify that it really is working, using the syntax: <br> <br>    nhelloc <br> <br>which should cause to service to stop since it calls Shutdown() <br> <br> <br>If, after playing with the sample you wish to remove the service, <br>simply say: <br> <br>    nsserv -remove <br> <br>Other: NSSERV can be run as a console app by entering <br> <br>    nsserv -debug <br> <br>For more information on SERVICES see the SERVICE sample included <br>with the Win32 SDK. <br> <br> <br>-- NHELLOC -- <br>On the client, enter <br> <br>  net start workstation <br>  nhelloc <br> <br> <br>Note:  The client and server applications can run on the same Microsoft <br>Windows NT computer when you use different screen groups.  Also, only NSSERV <br>or NHELLOS should be run at one time on the same Windows NT computer. <br> <br> <br>Several command line switches are available to change settings for this <br>program. For a listing of the switches available from the client <br>program, enter: <br> <br>  nhelloc -? <br> <br>For a listing of switches available from the server program and the <br>service program enter <br> <br>  nhellos -? </code></pre>
<p>&nbsp;</p></body>
</HTML>
