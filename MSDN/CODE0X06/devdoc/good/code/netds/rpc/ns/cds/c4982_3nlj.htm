<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NSIMGM.IDL</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4987"></a>NSIMGM.IDL</h2>
<pre><code>[ <br>    uuid (d6d70ef0-0e3b-11cb-acc3-08002b1d29c4), <br>    version (1.0), <br>    pointer_default (unique) <br>] <br> <br>interface NsiM <br>{ <br> <br>import"nsicom.idl"; <br> <br> <br>/* <br> * N S I _ G R O U P _ D E L E T E <br> * <br> * Remove a group attribute from a name service entry. <br> */ <br> <br>void nsi_group_delete <br>    ( <br>    [in]        UNSIGNED32                    group_name_syntax, <br>    [in]        STRING_T                      group_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ G R O U P _ M B R _ A D D <br> * <br> * Add a an entry name to a group, if necessary, create the group. <br> */ <br> <br>void nsi_group_mbr_add <br>    ( <br>    [in]        UNSIGNED32                    group_name_syntax, <br>    [in]        STRING_T                      group_name, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [in]        STRING_T                      member_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ G R O U P _ M B R _ R E M O V E <br> * <br> * Delete a an entry name to a group. <br> */ <br> <br>void nsi_group_mbr_remove <br>    ( <br>    [in]        UNSIGNED32                    group_name_syntax, <br>    [in]        STRING_T                      group_name, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [in]        STRING_T                      member_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ G R O U P _ M B R _ I N Q _ B E G I N <br> * <br> * Create an inquiry context for an group with a certain name syntax.. <br> */ <br> <br>void nsi_group_mbr_inq_begin <br>    ( <br>    [in]        UNSIGNED32                    group_name_syntax, <br>    [in]        STRING_T                      group_name, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [out]       NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ G R O U P _ M B R _ I N Q _ N E X T <br> * <br> * Return the next group member in name service group. <br> */ <br> <br>void nsi_group_mbr_inq_next <br>    ( <br>    [in]        NSI_NS_HANDLE_T               inq_context, <br>    [out]       STRING_T                    * member_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ G R O U P _ M B R _ I N Q _ D O N E <br> * <br> * Delete a inquiry context for a group. <br> */ <br> <br>void nsi_group_mbr_inq_done <br>    ( <br>    [in,out]    NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ P R O F I L E _ D E L E T E <br> * <br> * Remove a profile attribute from a name service entry. <br> */ <br> <br>void nsi_profile_delete <br>    ( <br>    [in]        UNSIGNED32                    profile_name_syntax, <br>    [in]        STRING_T                      profile_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ P R O F I L E _ E L T _ A D D <br> * <br> * Add a an entry name to a profile, if necessary, create the profile. <br> */ <br> <br>void nsi_profile_elt_add <br>    ( <br>    [in]        UNSIGNED32                    profile_name_syntax, <br>    [in]        STRING_T                      profile_name, <br>    [in]        NSI_IF_ID_P_T                 if_id, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [in]        STRING_T                      member_name, <br>    [in]        UNSIGNED32                    priority, <br>    [in]        STRING_T                      annotation, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ P R O F I L E _ E L T _ R E M O V E <br> * <br> * Delete a an entry name to a profile. <br> */ <br> <br>void nsi_profile_elt_remove <br>    ( <br>    [in]        UNSIGNED32                    profile_name_syntax, <br>    [in]        STRING_T                      profile_name, <br>    [in]        NSI_IF_ID_P_T                 if_id, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [in]        STRING_T                      member_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ P R O F I L E _ E L T _ I N Q _ B E G I N <br> * <br> * Create an inquiry context for an profile with a certain name syntax.. <br> */ <br> <br>void nsi_profile_elt_inq_begin <br>    ( <br>    [in]        UNSIGNED32                    profile_name_syntax, <br>    [in]        STRING_T                      profile_name, <br>    [in]        UNSIGNED32                    inquiry_type, <br>    [in]        NSI_IF_ID_P_T                 if_id, <br>    [in]        UNSIGNED32                    vers_option, <br>    [in]        UNSIGNED32                    member_name_syntax, <br>    [in]        STRING_T                      member_name, <br>    [out]       NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ P R O F I L E _ E L T _ I N Q _ N E X T <br> * <br> * Return the next profile member in name service profile. <br> */ <br> <br>void nsi_profile_elt_inq_next <br>    ( <br>    [in]        NSI_NS_HANDLE_T               inq_context, <br>    [in,out]    NSI_IF_ID_P_T                 if_id, <br>    [out]       STRING_T                    * member_name, <br>    [out]       UNSIGNED32                  * priority, <br>    [out]       STRING_T                    * annotation, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ P R O F I L E _ E L T _ I N Q _ D O N E <br> * <br> * Delete a inquiry context for a profile. <br> */ <br> <br>void nsi_profile_elt_inq_done <br>    ( <br>    [in,out]    NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ E N T R Y _ O B J E C T _ B E G I N <br> * <br> * Create an inquiry context for an server entry's object UUIDs. <br> */ <br> <br>void nsi_entry_object_inq_begin <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [out]       NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ E N T R Y _ O B J E C T _ I N Q _ N E X T <br> * <br> * Return the object UUID in a server entry. <br> */ <br> <br>void nsi_entry_object_inq_next <br>    ( <br>    [in]        NSI_NS_HANDLE_T               inq_context, <br>    [in, out]   NSI_UUID_P_T                  uuid, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ E N T R Y _ O B J E C T _ I N Q _ D O N E <br> * <br> * Delete a inquiry context for a server entry's objects. <br> */ <br> <br>void nsi_entry_object_inq_done <br>    ( <br>    [in,out]    NSI_NS_HANDLE_T             * inq_context, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ E N T R Y _ E X P A N D _ N A M E <br> * <br> * Expand a cell relative name into a global one. <br> */ <br> <br>void nsi_entry_expand_name <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [out]       STRING_T                    * expanded_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br> <br>/* <br> * N S I _ M G M T _ B I N D I N G _ U N E X P O R T <br> * <br> * Remove interfaces and/or objects from a given server entry. <br> */ <br> <br>void nsi_mgmt_binding_unexport <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [in]        NSI_IF_ID_P_T                 if_id, <br>    [in]        UNSIGNED32                    vers_option, <br>    [in]        NSI_UUID_VECTOR_P_T           object_uuid_vec, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ M G M T _ E N T R Y _ D E L E T E <br> * <br> * Delete a server/group/profile name service entry. <br> */ <br> <br>void nsi_mgmt_entry_delete <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ M G M T _ E N T R Y _ C R E A T E <br> * <br> * Create a name service entry. <br> */ <br> <br>void nsi_mgmt_entry_create <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ M G M T _ E N T R Y _ I N Q _ I F D S <br> * <br> * Inquiry the interfaces at a given name service entry. <br> */ <br> <br>void nsi_mgmt_entry_inq_if_ids <br>    ( <br>    [in]        UNSIGNED32                    entry_name_syntax, <br>    [in]        STRING_T                      entry_name, <br>    [out]       NSI_IF_ID_VECTOR_T         ** if_id_vec, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>/* <br> * N S I _ M G M T _ I N Q  _ E X P _ A G E <br> * <br> * Inquiry the global age of entries cached. <br> */ <br> <br>void nsi_mgmt_inq_exp_age <br>    ( <br>    [out]       UNSIGNED32                  * expiration_age, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br> <br>/* <br> * N S I _ M G M T _ I N Q  _ S E T _ A G E <br> * <br> * Set the global age of entries cached. <br> */ <br> <br>void nsi_mgmt_inq_set_age <br>    ( <br>    [in]        UNSIGNED32                    expiration_age, <br>    [out]       UNSIGNED16                  * status <br>    ); <br> <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
