<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NSICLT.IDL</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4983"></a>NSICLT.IDL</h2>
<pre><code>[ <br> uuid (d3fbb514-0e3b-11cb-8fad-08002b1d29c3), <br> version (1.0), <br> pointer_default (unique) <br>] <br>interface NsiC <br>{ <br> <br>import"nsicom.idl"; <br> <br> <br>/* <br> * N S I _ B I N D I N G _ L O O K U P _ B E G I N <br> * <br> * Create an import context for an interface and optionally an object. <br> */ <br> <br>void nsi_binding_lookup_begin <br>    ( <br>    [in]        UNSIGNED32               entry_name_syntax, <br>    [in]        STRING_T                 entry_name, <br>    [in]        NSI_INTERFACE_ID_T     * if_spec, <br>    [in]        NSI_UUID_P_T             obj_uuid, <br>    [in]        UNSIGNED32               binding_max_count, <br>    [in]        UNSIGNED32               ignore, <br>    [out]       NSI_NS_HANDLE_T        * import_context, <br>    [out]       UNSIGNED16             * status <br>    ); <br> <br>/* <br> * N S I _ B I N D I N G _ L O O K U P _ D O N E <br> * <br> * Delete an import context. <br> */ <br> <br>void nsi_binding_lookup_done <br>    ( <br>    [in,out] NSI_NS_HANDLE_T *import_context, <br>    [out]    UNSIGNED16      *status <br>    ); <br> <br>/* <br> * N S I _ B I N D I N G _ L O O K U P _ N E X T <br> * <br> * Look up an interface and optionally an object from a name-service <br> * database and return a binding of a compatible server (if found). <br> */ <br> <br>void nsi_binding_lookup_next <br>    ( <br>    [in]     NSI_NS_HANDLE_T             import_context, <br>    [in,out] NSI_BINDING_VECTOR_P_T    * binding_vector, <br>    [out]    UNSIGNED16                * status <br>    ); <br> <br>/* <br> * N S I _ M G M T _ H A N D L E _ E N T R Y _ S E T _ E X P _ A G E <br> * <br> * Set the maxium age that a cached entry can be returned through a lookup <br> * context. <br> */ <br> <br>void nsi_mgmt_handle_set_exp_age <br>    ( <br>    [in]        NSI_NS_HANDLE_T          inq_context, <br>    [in]        UNSIGNED32               expiration_age, <br>    [out]       UNSIGNED16             * status <br>    ); <br> <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
