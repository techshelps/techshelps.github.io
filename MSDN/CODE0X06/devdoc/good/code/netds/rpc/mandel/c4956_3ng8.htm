<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MANDEL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4958"></a>MANDEL.H</h2>
<pre><code>/**************************************************************************** <br> <br>    MANDEL.H -- Constants and function definitions for MANDEL.C <br> <br>    Copyright 1990 - 1998 Microsoft Corporation <br> <br>****************************************************************************/ <br> <br>/* Constants */ <br> <br>#ifdef WIN16 <br>#define APIENTRY        PASCAL <br>#define UNREFERENCED_PARAMETER <br>#endif <br> <br>#define IDM_ABOUT        100 <br>#define IDM_ZOOMIN       101 <br>#define IDM_ZOOMOUT      105 <br>#define IDM_TOP          106 <br>#define IDM_REDRAW       107 <br>#define IDM_EXIT         108 <br>#define IDM_CONTINUOUS   109 <br>#define IDM_PROTSEQ      110 <br>#define IDD_PROTSEQNAME  111 <br>#define IDM_SERVER       112 <br>#define IDD_SERVERNAME   113 <br>#define IDM_ENDPOINT     114 <br>#define IDD_ENDPOINTNAME 115 <br>#define IDM_BIND         116 <br>#define IDM_GO           117 <br>#define IDM_1LINE        200 <br>#define IDM_2LINES       201 <br>#define IDM_4LINES       202 <br> <br>#define WIDTH            300 <br>#define HEIGHT           300 <br>#define LINES              4 <br>#define BUFSIZE         1200     // (HEIGHT * LINES) <br>#define MAX_BUFSIZE     4800     // (BUFSIZE * sizeof(short)) <br> <br>#define POLL_TIME        2000 <br> <br>#define CNLEN             25     // computer name length <br>#define UNCLEN       CNLEN+2     // \\computername <br>#define PATHLEN           260    // Path <br>#define MSGLEN            300    // arbitrary large number for message size <br>#define MAXPROTSEQ         20    // protocol sequence <br> <br>#define NCOLORS           11 <br> <br>#define SVR_TABLE_SZ      20 <br> <br>// Status of connection to server <br>#define SS_DISCONN         0 <br>#define SS_IDLE            1 <br>#define SS_READPENDING     2 <br>#define SS_PAINTING        3 <br>#define SS_LOCAL           4 <br> <br>#define MINPREC       5.0E-9 <br>#define MAXPREC       5.0E-3 <br> <br>#define WM_DOSOMEWORK   (WM_USER+0) <br>#define WM_PAINTLINE    (WM_USER+1) <br> <br>#define EXCEPT_MSG      "The remote procedure raised an exception.\n\ <br>Check your connection settings." <br> <br>/* Data Structures */ <br> <br>typedef struct _svr_table { <br>    char    name[UNCLEN];       // name of remote server <br>    int     hfPipe;             // RPC handle <br>    int     iStatus;            // status of connection <br>    int     cPicture;           // picture id for this line <br>    DWORD   dwLine;             // line we're drawing <br>    int     cLines;             // lines in this chunk <br>} svr_table; <br> <br>#ifndef RPC                     // If RPC, the following data would be <br>                                // defined in the IDL file <br>typedef struct _cpoint { <br>    double    real; <br>    double    imag; <br>} CPOINT; <br> <br>typedef CPOINT * PCPOINT; <br> <br>typedef struct _LONGRECT { <br>    long    xLeft; <br>    long    yBottom; <br>    long    xRight; <br>    long    yTop; <br>} LONGRECT; <br> <br>typedef LONGRECT *PLONGRECT; <br> <br>typedef unsigned short LINEBUF[BUFSIZE]; <br> <br>#endif <br> <br>typedef struct _calcbuf { <br>    LONGRECT  rclDraw; <br>    double    dblPrecision; <br>    DWORD     dwThreshold; <br>    CPOINT    cptLL; <br>} CALCBUF; <br> <br> <br>/* Function Prototypes */ <br> <br>int WINAPI WinMain(HINSTANCE, HINSTANCE, LPSTR, int); <br>BOOL InitApplication(HANDLE); <br>BOOL InitInstance(HANDLE, int); <br> <br>LONG APIENTRY MainWndProc(HWND, UINT, UINT, LONG); <br>BOOL APIENTRY About(HWND, UINT, UINT, LONG); <br>BOOL APIENTRY Protseq(HWND, UINT, UINT, LONG); <br>BOOL APIENTRY Server(HWND, UINT, UINT, LONG); <br>BOOL APIENTRY Endpoint(HWND, UINT, UINT, LONG); <br> <br>#ifdef RPC <br>RPC_STATUS Bind(HWND); <br>#endif <br> <br>void CountHistogram(void); <br> <br>BOOL InitRemote(HWND); <br>BOOL CheckDrawStatus(HWND); <br>void SetNewCalc(CPOINT, double, RECT); <br>void IncPictureID(void); <br>void ResetPictureID(void); <br>BOOL CheckDrawingID(int); <br>DWORD QueryThreshold(void); <br> <br>// buffer routines <br>BOOL TakeDrawBuffer(void); <br>LPVOID LockDrawBuffer(void); <br>void UnlockDrawBuffer(void); <br>void ReturnDrawBuffer(void); <br>void FreeDrawBuffer(void); <br> <br> <br>#ifndef RPC                     // If RPC, MandelCalc() would be <br>                                // defined in the IDL file <br>void MandelCalc(PCPOINT   pcptLL, <br>                PLONGRECT prcDraw, <br>                double    precision, <br>                DWORD     ulThreshold, <br>                LINEBUF * pbBuf); <br>#endif <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
