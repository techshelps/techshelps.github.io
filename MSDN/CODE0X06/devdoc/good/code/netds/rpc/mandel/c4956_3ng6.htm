<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4956"></a>README.TXT</h2>
<pre><code>MANDEL <br> <br> <br>The MANDEL program is a distributed fractal drawing application that uses  <br>reference pointers, the implicit_handle attribute and handl_t primitive types. <br> <br>FILES <br>===== <br> <br>The directory samples\rpc\mandel contains the following files for the <br>sample distributed application MANDEL: <br> <br>File          Description <br> <br>README.TXT    Readme file for the MANDEL sample <br>MDLRPC.IDL    Interface definition language file <br>MDLRPC.ACF    Attribute configuration file <br>MANDEL.C      Client main program <br>MANDEL.H      Client global data <br>REMOTE.C      Client code that calls remote procedures <br>RPC.ICO       Client icon <br>MANDEL.DEF    Client module definition file <br>MANDEL.RC     Client resource script file <br>SERVER.C      Server main program <br>CALC.C        Remote procedures <br>MAKEFILE      nmake utility for Windows NT or Windows 95 <br>MAKEFILE.WIN  nmake utility for Win 3.x <br> <br>------------------------------------------- <br>BUILDING CLIENT AND SERVER APPLICATIONS FOR <br>MICROSOFT WINDOWS NT OR WINDOWS 95 <br>------------------------------------------- <br> <br>The following environment variables should be already set for you: <br> <br>  set CPU=i386 <br>  set INCLUDE=%SDKROOT%\h <br>  set LIB=%SDKROOT%\lib <br>  set PATH=%SDKROOT%\system32;%SDKROOT%\bin <br> <br>where %SDKROOT% is the root directory for the 32-bit Windows SDK. <br> <br>For mips, set CPU=mips <br>For alpha, set CPU=alpha <br> <br>Build the sample distributed application: <br> <br>  nmake cleanall <br>  nmake <br> <br>This builds the executable programs client.exe and server.exe for Microsoft  <br>Windows NT or Windows 95. <br> <br>-------------------------------------------- <br>BUILDING THE CLIENT APPLICATION FOR WIN 3.X <br>-------------------------------------------- <br> <br>After installing the Microsoft Visual C/C++ version 1.50 development <br>environment and the 16-bit RPC SDK on a Windows NT or Windows 95 <br>computer, you can build the sample client application from Windows NT <br>or Windows 95: <br> <br>  nmake -f makefile.win cleanall <br>  nmake -f makefile.win <br> <br>This builds the client application client.exe. <br> <br>You may also execute the Microsoft Visual C/C++ compiler under MS-DOS. <br>This requires a two-step build process. <br> <br>  Step One: Compile the .IDL files under Windows NT or Windows 95: <br> <br>     nmake -a -f makefile.win yield.h <br> <br>  Step Two: Compile the C sources (stub and application) under MS-DOS: <br> <br>     nmake -f makefile.win <br> <br>------------------------------------------ <br>RUNNING THE CLIENT AND SERVER APPLICATIONS <br>------------------------------------------ <br> <br>On the server, enter: <br> <br>  server <br> <br>On the client, enter: <br> <br>  net start workstation <br>  client <br> <br>Note:  The client and server applications can run on the same Microsoft  <br>Windows NT computer when you use different screen groups. If you run the  <br>client on the Microsoft MS-DOS and Windows computer, choose the Run <br>command from the File menu in the Microsoft Windows 3.x Program Manager and  <br>enter client.exe. <br> <br>Several command line switches are available to change settings for the  <br>server program. For a listing of switches available from the server program,  <br>enter: <br> <br>  server -? </code></pre>
<p>&nbsp;</p></body>
</HTML>
