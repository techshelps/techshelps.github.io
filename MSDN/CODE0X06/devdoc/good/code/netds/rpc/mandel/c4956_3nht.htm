<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CALC.C</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4961"></a>CALC.C</h2>
<pre><code><br>/**************************************************************************** <br>                   Microsoft RPC Version 2.0 <br>           Copyright Microsoft Corp. 1992, 1993, 1994- 1996 <br>                        mandel Example <br> <br>    FILE:       calc.c <br> <br>    PURPOSE:    Server side of the RPC distributed application Mandel <br> <br>    FUNCTIONS:  MandelCalc() - Do the calculations for the Windows <br>                               Mandelbrot Set distributed drawing program. <br> <br>****************************************************************************/ <br> <br>#include &lt;stdlib.h&gt; <br>#include &lt;stdio.h&gt; <br>#include &lt;windows.h&gt; <br> <br>#ifdef RPC <br>#include "mdlrpc.h" <br>#endif <br>#include "mandel.h" <br> <br> <br>short calcmand(double, double, short); <br> <br> <br>void MandelCalc(PCPOINT    pcptLL, <br>                PLONGRECT  prcDraw, <br>                double     precision, <br>                DWORD      ulThreshold, <br>                LINEBUF *  pbBuf) <br>{ <br>    DWORD   h, height, width; <br>    double  dreal, dimag, dimag2; <br>    short   maxit = 0; <br>    short * pbPtr; <br> <br>    pbPtr = *pbBuf;   // LINEBUF is an array of shorts <br> <br>    dreal = pcptLL-&gt;real + ((double)prcDraw-&gt;xLeft * precision); <br>    dimag = pcptLL-&gt;imag + ((double)prcDraw-&gt;yBottom * precision); <br> <br>    maxit = (short) ulThreshold; <br> <br>    height = (prcDraw-&gt;yTop - prcDraw-&gt;yBottom) + 1; <br>    width = (prcDraw-&gt;xRight - prcDraw-&gt;xLeft) + 1; <br> <br>    for ( ; width &gt; 0; --width, dreal += precision) { <br>        for (dimag2 = dimag, h = height; h &gt; 0; --h, dimag2 += precision) { <br>            if ((dreal &gt; 4.0) || (dreal &lt; -4.0) || <br>                (dimag2 &gt; 4.0) || (dimag2 &lt; -4.0)) <br>                *(pbPtr++) = 0; <br>            else <br>                *(pbPtr++) = calcmand(dreal, dimag2, maxit); <br>        } <br>    } <br>} <br> <br> <br>/* C version of the assembly language program */ <br>short calcmand(double dreal, <br>               double dimag, <br>               short  maxit) <br>{ <br>    double x, y, xsq, ysq; <br>    short k; <br> <br>    k = maxit; <br>    x = dreal; <br>    y = dimag; <br> <br>    while (1) { <br>        xsq = x * x; <br>        ysq = y * y; <br>        y = 2.0 * x * y + dimag; <br>        x = (xsq - ysq) + dreal; <br>        if (--k == 0) <br>            return((short) (maxit - k)); <br>        if ((xsq + ysq) &gt; 4.0) <br>            return((short) (maxit - k)); <br>    } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
