<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MSDADC.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5117"></a>MSDADC.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 3.01.75 */ <br>/* at Tue Aug 05 15:23:57 1997 <br> */ <br>/* Compiler settings for .\msdadc.idl: <br>    Oicf (OptLev=i2), W1, Zp2, env=Win32, ms_ext, c_ext <br>    error checks: none <br>*/ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __msdadc_h__ <br>#define __msdadc_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IDataConvert_FWD_DEFINED__ <br>#define __IDataConvert_FWD_DEFINED__ <br>typedef interface IDataConvert IDataConvert; <br>#endif /* __IDataConvert_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IDCInfo_FWD_DEFINED__ <br>#define __IDCInfo_FWD_DEFINED__ <br>typedef interface IDCInfo IDCInfo; <br>#endif /* __IDCInfo_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "oaidl.h" <br>#include "ocidl.h" <br> <br> <br>#ifndef __IDataConvert_INTERFACE_DEFINED__ <br>#define __IDataConvert_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IDataConvert <br> * at Tue Aug 05 15:23:57 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br>typedef DWORD DBDATACONVERT; <br> <br> <br>enum DBDATACONVERTENUM <br>    {DBDATACONVERT_DEFAULT= 0, <br>DBDATACONVERT_SETDATABEHAVIOR= 0x1, <br>DBDATACONVERT_LENGTHFROMNTS= 0x2 <br>    }; <br> <br>DEFINE_GUID(IID_IDataConvert,0x0c733a8dL,0x2a1c,0x11ce,0xad,0xe5,0x00,0xaa,0x00,0x44,0x77,0x3d); <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("0c733a8d-2a1c-11ce-ade5-00aa0044773d") <br>    IDataConvert : public IUnknown <br>    { <br>    public: <br>        virtual /* [local] */ HRESULT STDMETHODCALLTYPE DataConvert(  <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType, <br>            /* [in] */ ULONG cbSrcLength, <br>            /* [out][in] */ ULONG __RPC_FAR *pcbDstLength, <br>            /* [in] */ void __RPC_FAR *pSrc, <br>            /* [out] */ void __RPC_FAR *pDst, <br>            /* [in] */ ULONG cbDstMaxLength, <br>            /* [in] */ DBSTATUS dbsSrcStatus, <br>            /* [out] */ DBSTATUS __RPC_FAR *pdbsStatus, <br>            /* [in] */ BYTE bPrecision, <br>            /* [in] */ BYTE bScale, <br>            /* [in] */ DBDATACONVERT dwFlags) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE CanConvert(  <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType) = 0; <br>         <br>        virtual /* [local] */ HRESULT STDMETHODCALLTYPE GetConversionSize(  <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType, <br>            /* [in] */ ULONG __RPC_FAR *pcbSrcLength, <br>            /* [out] */ ULONG __RPC_FAR *pcbDstLength, <br>            /* [size_is][in] */ void __RPC_FAR *pSrc) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IDataConvertVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IDataConvert __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IDataConvert __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IDataConvert __RPC_FAR * This); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *DataConvert )(  <br>            IDataConvert __RPC_FAR * This, <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType, <br>            /* [in] */ ULONG cbSrcLength, <br>            /* [out][in] */ ULONG __RPC_FAR *pcbDstLength, <br>            /* [in] */ void __RPC_FAR *pSrc, <br>            /* [out] */ void __RPC_FAR *pDst, <br>            /* [in] */ ULONG cbDstMaxLength, <br>            /* [in] */ DBSTATUS dbsSrcStatus, <br>            /* [out] */ DBSTATUS __RPC_FAR *pdbsStatus, <br>            /* [in] */ BYTE bPrecision, <br>            /* [in] */ BYTE bScale, <br>            /* [in] */ DBDATACONVERT dwFlags); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *CanConvert )(  <br>            IDataConvert __RPC_FAR * This, <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType); <br>         <br>        /* [local] */ HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetConversionSize )(  <br>            IDataConvert __RPC_FAR * This, <br>            /* [in] */ DBTYPE wSrcType, <br>            /* [in] */ DBTYPE wDstType, <br>            /* [in] */ ULONG __RPC_FAR *pcbSrcLength, <br>            /* [out] */ ULONG __RPC_FAR *pcbDstLength, <br>            /* [size_is][in] */ void __RPC_FAR *pSrc); <br>         <br>        END_INTERFACE <br>    } IDataConvertVtbl; <br> <br>    interface IDataConvert <br>    { <br>        CONST_VTBL struct IDataConvertVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IDataConvert_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IDataConvert_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IDataConvert_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IDataConvert_DataConvert(This,wSrcType,wDstType,cbSrcLength,pcbDstLength,pSrc,pDst,cbDstMaxLength,dbsSrcStatus,pdbsStatus,bPrecision,bScale,dwFlags)\ <br>    (This)-&gt;lpVtbl -&gt; DataConvert(This,wSrcType,wDstType,cbSrcLength,pcbDstLength,pSrc,pDst,cbDstMaxLength,dbsSrcStatus,pdbsStatus,bPrecision,bScale,dwFlags) <br> <br>#define IDataConvert_CanConvert(This,wSrcType,wDstType)\ <br>    (This)-&gt;lpVtbl -&gt; CanConvert(This,wSrcType,wDstType) <br> <br>#define IDataConvert_GetConversionSize(This,wSrcType,wDstType,pcbSrcLength,pcbDstLength,pSrc)\ <br>    (This)-&gt;lpVtbl -&gt; GetConversionSize(This,wSrcType,wDstType,pcbSrcLength,pcbDstLength,pSrc) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>/* [local] */ HRESULT STDMETHODCALLTYPE IDataConvert_DataConvert_Proxy(  <br>    IDataConvert __RPC_FAR * This, <br>    /* [in] */ DBTYPE wSrcType, <br>    /* [in] */ DBTYPE wDstType, <br>    /* [in] */ ULONG cbSrcLength, <br>    /* [out][in] */ ULONG __RPC_FAR *pcbDstLength, <br>    /* [in] */ void __RPC_FAR *pSrc, <br>    /* [out] */ void __RPC_FAR *pDst, <br>    /* [in] */ ULONG cbDstMaxLength, <br>    /* [in] */ DBSTATUS dbsSrcStatus, <br>    /* [out] */ DBSTATUS __RPC_FAR *pdbsStatus, <br>    /* [in] */ BYTE bPrecision, <br>    /* [in] */ BYTE bScale, <br>    /* [in] */ DBDATACONVERT dwFlags); <br> <br> <br>void __RPC_STUB IDataConvert_DataConvert_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDataConvert_CanConvert_Proxy(  <br>    IDataConvert __RPC_FAR * This, <br>    /* [in] */ DBTYPE wSrcType, <br>    /* [in] */ DBTYPE wDstType); <br> <br> <br>void __RPC_STUB IDataConvert_CanConvert_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>/* [local] */ HRESULT STDMETHODCALLTYPE IDataConvert_GetConversionSize_Proxy(  <br>    IDataConvert __RPC_FAR * This, <br>    /* [in] */ DBTYPE wSrcType, <br>    /* [in] */ DBTYPE wDstType, <br>    /* [in] */ ULONG __RPC_FAR *pcbSrcLength, <br>    /* [out] */ ULONG __RPC_FAR *pcbDstLength, <br>    /* [size_is][in] */ void __RPC_FAR *pSrc); <br> <br> <br>void __RPC_STUB IDataConvert_GetConversionSize_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IDataConvert_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IDCInfo_INTERFACE_DEFINED__ <br>#define __IDCInfo_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IDCInfo <br> * at Tue Aug 05 15:23:57 1997 <br> * using MIDL 3.01.75 <br> ****************************************/ <br>/* [unique][helpstring][uuid][object] */  <br> <br> <br>typedef DWORD DCINFOTYPE; <br> <br> <br>enum DCINFOTYPEENUM <br>    {DCINFOTYPE_VERSION= 1 <br>    }; <br>typedef struct  tagDCINFO <br>    { <br>    DCINFOTYPE eInfoType; <br>    VARIANT vData; <br>    }DCINFO; <br> <br> <br>DEFINE_GUID(IID_IDCInfo,0x0c733a9cL,0x2a1c,0x11ce,0xad,0xe5,0x00,0xaa,0x00,0x44,0x77,0x3d); <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface DECLSPEC_UUID("0c733a9c-2a1c-11ce-ade5-00aa0044773d") <br>    IDCInfo : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT STDMETHODCALLTYPE GetInfo(  <br>            /* [in] */ ULONG cInfo, <br>            /* [size_is][in] */ DCINFOTYPE __RPC_FAR rgeInfoType[  ], <br>            /* [size_is][out] */ DCINFO __RPC_FAR *__RPC_FAR *prgInfo) = 0; <br>         <br>        virtual HRESULT STDMETHODCALLTYPE SetInfo(  <br>            /* [in] */ ULONG cInfo, <br>            /* [size_is][in] */ DCINFO __RPC_FAR rgInfo[  ]) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IDCInfoVtbl <br>    { <br>        BEGIN_INTERFACE <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *QueryInterface )(  <br>            IDCInfo __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *AddRef )(  <br>            IDCInfo __RPC_FAR * This); <br>         <br>        ULONG ( STDMETHODCALLTYPE __RPC_FAR *Release )(  <br>            IDCInfo __RPC_FAR * This); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *GetInfo )(  <br>            IDCInfo __RPC_FAR * This, <br>            /* [in] */ ULONG cInfo, <br>            /* [size_is][in] */ DCINFOTYPE __RPC_FAR rgeInfoType[  ], <br>            /* [size_is][out] */ DCINFO __RPC_FAR *__RPC_FAR *prgInfo); <br>         <br>        HRESULT ( STDMETHODCALLTYPE __RPC_FAR *SetInfo )(  <br>            IDCInfo __RPC_FAR * This, <br>            /* [in] */ ULONG cInfo, <br>            /* [size_is][in] */ DCINFO __RPC_FAR rgInfo[  ]); <br>         <br>        END_INTERFACE <br>    } IDCInfoVtbl; <br> <br>    interface IDCInfo <br>    { <br>        CONST_VTBL struct IDCInfoVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IDCInfo_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IDCInfo_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IDCInfo_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IDCInfo_GetInfo(This,cInfo,rgeInfoType,prgInfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetInfo(This,cInfo,rgeInfoType,prgInfo) <br> <br>#define IDCInfo_SetInfo(This,cInfo,rgInfo)\ <br>    (This)-&gt;lpVtbl -&gt; SetInfo(This,cInfo,rgInfo) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT STDMETHODCALLTYPE IDCInfo_GetInfo_Proxy(  <br>    IDCInfo __RPC_FAR * This, <br>    /* [in] */ ULONG cInfo, <br>    /* [size_is][in] */ DCINFOTYPE __RPC_FAR rgeInfoType[  ], <br>    /* [size_is][out] */ DCINFO __RPC_FAR *__RPC_FAR *prgInfo); <br> <br> <br>void __RPC_STUB IDCInfo_GetInfo_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT STDMETHODCALLTYPE IDCInfo_SetInfo_Proxy(  <br>    IDCInfo __RPC_FAR * This, <br>    /* [in] */ ULONG cInfo, <br>    /* [size_is][in] */ DCINFO __RPC_FAR rgInfo[  ]); <br> <br> <br>void __RPC_STUB IDCInfo_SetInfo_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IDCInfo_INTERFACE_DEFINED__ */ <br> <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
