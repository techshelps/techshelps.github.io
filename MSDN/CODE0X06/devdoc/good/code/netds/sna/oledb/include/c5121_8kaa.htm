<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TRANSACT.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5122"></a>TRANSACT.H</h2>
<pre><code>//.------------------------------------------------------------------------- <br>//. <br>//.  Microsoft Windows <br>//.  Copyright (C) Microsoft Corporation, 1995. <br>//. <br>//.  File: transact.idl <br>//. <br>//.  Contents: The basic transaction interfaces and types. <br>//. <br>//.-------------------------------------------------------------------------- <br> <br> <br>/* File created by MIDL compiler version 2.00.0102 */ <br>/* at Tue Nov 21 16:54:32 1995 <br> */ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __transact_h__ <br>#define __transact_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __ITransaction_FWD_DEFINED__ <br>#define __ITransaction_FWD_DEFINED__ <br>typedef interface ITransaction ITransaction; <br>#endif /* __ITransaction_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionDispenser_FWD_DEFINED__ <br>#define __ITransactionDispenser_FWD_DEFINED__ <br>typedef interface ITransactionDispenser ITransactionDispenser; <br>#endif /* __ITransactionDispenser_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionOptions_FWD_DEFINED__ <br>#define __ITransactionOptions_FWD_DEFINED__ <br>typedef interface ITransactionOptions ITransactionOptions; <br>#endif /* __ITransactionOptions_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionOutcomeEvents_FWD_DEFINED__ <br>#define __ITransactionOutcomeEvents_FWD_DEFINED__ <br>typedef interface ITransactionOutcomeEvents ITransactionOutcomeEvents; <br>#endif /* __ITransactionOutcomeEvents_FWD_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionCompletionEvents_FWD_DEFINED__ <br>#define __ITransactionCompletionEvents_FWD_DEFINED__ <br>typedef interface ITransactionCompletionEvents ITransactionCompletionEvents; <br>#endif /* __ITransactionCompletionEvents_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0000 <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0000_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0000_v0_0_s_ifspec; <br> <br>#ifndef __BasicTransactionTypes_INTERFACE_DEFINED__ <br>#define __BasicTransactionTypes_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: BasicTransactionTypes <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][local] */  <br> <br> <br>/* size is 16 */ <br>typedef struct  BOID <br>    { <br>    BYTE rgb[ 16 ]; <br>    }BOID; <br> <br>#define BOID_NULL (*((BOID*)(&amp;IID_NULL))) <br> <br>#define MAX_TRAN_DESC 40// used by XACTOPT via midl - see transact.idl  <br>/* size is 16 */ <br>typedef BOID XACTUOW; <br> <br>/* size is 4 */ <br>typedef LONG ISOLEVEL; <br> <br>#if defined(_WIN32) <br>/* size is 2 */ <br>typedef  <br>enum ISOLATIONLEVEL <br>    {ISOLATIONLEVEL_UNSPECIFIED= 0xffffffff, <br>ISOLATIONLEVEL_CHAOS= 0x10, <br>ISOLATIONLEVEL_READUNCOMMITTED= 0x100, <br>ISOLATIONLEVEL_BROWSE= 0x100, <br>ISOLATIONLEVEL_CURSORSTABILITY= 0x1000, <br>ISOLATIONLEVEL_READCOMMITTED= 0x1000, <br>ISOLATIONLEVEL_REPEATABLEREAD= 0x10000, <br>ISOLATIONLEVEL_SERIALIZABLE= 0x100000, <br>ISOLATIONLEVEL_ISOLATED= 0x100000 <br>    }ISOLATIONLEVEL; <br> <br>#else <br>#define ISOLATIONLEVEL_UNSPECIFIED      0xFFFFFFFF <br>#define ISOLATIONLEVEL_CHAOS            0x00000010 <br>#define ISOLATIONLEVEL_READUNCOMMITTED  0x00000100 <br>#define ISOLATIONLEVEL_BROWSE           0x00000100 <br>#define ISOLATIONLEVEL_CURSORSTABILITY  0x00001000 <br>#define ISOLATIONLEVEL_READCOMMITTED    0x00001000 <br>#define ISOLATIONLEVEL_REPEATABLEREAD   0x00010000 <br>#define ISOLATIONLEVEL_SERIALIZABLE     0x00100000 <br>#define ISOLATIONLEVEL_ISOLATED         0x00100000 <br>#endif <br>/* size is 40 */ <br>typedef struct  XACTTRANSINFO <br>    { <br>    XACTUOW uow; <br>    ISOLEVEL isoLevel; <br>    ULONG isoFlags; <br>    DWORD grfTCSupported; <br>    DWORD grfRMSupported; <br>    DWORD grfTCSupportedRetaining; <br>    DWORD grfRMSupportedRetaining; <br>    }XACTTRANSINFO; <br> <br>/* size is 36 */ <br>typedef struct  XACTSTATS <br>    { <br>    ULONG cOpen; <br>    ULONG cCommitting; <br>    ULONG cCommitted; <br>    ULONG cAborting; <br>    ULONG cAborted; <br>    ULONG cInDoubt; <br>    ULONG cHeuristicDecision; <br>    FILETIME timeTransactionsUp; <br>    }XACTSTATS; <br> <br>/* size is 2 */ <br>typedef  <br>enum ISOFLAG <br>    {ISOFLAG_RETAIN_COMMIT_DC= 1, <br>ISOFLAG_RETAIN_COMMIT= 2, <br>ISOFLAG_RETAIN_COMMIT_NO= 3, <br>ISOFLAG_RETAIN_ABORT_DC= 4, <br>ISOFLAG_RETAIN_ABORT= 8, <br>ISOFLAG_RETAIN_ABORT_NO= 12, <br>ISOFLAG_RETAIN_DONTCARE= ISOFLAG_RETAIN_COMMIT_DC | ISOFLAG_RETAIN_ABORT_DC, <br>ISOFLAG_RETAIN_BOTH= ISOFLAG_RETAIN_COMMIT | ISOFLAG_RETAIN_ABORT, <br>ISOFLAG_RETAIN_NONE= ISOFLAG_RETAIN_COMMIT_NO | ISOFLAG_RETAIN_ABORT_NO, <br>ISOFLAG_OPTIMISTIC= 16 <br>    }ISOFLAG; <br> <br>/* size is 2 */ <br>typedef  <br>enum XACTTC <br>    {XACTTC_SYNC_PHASEONE= 1, <br>XACTTC_SYNC_PHASETWO= 2, <br>XACTTC_SYNC= 2, <br>XACTTC_ASYNC_PHASEONE= 4 <br>    }XACTTC; <br> <br>/* size is 2 */ <br>typedef  <br>enum XACTRM <br>    {XACTRM_OPTIMISTICLASTWINS= 1, <br>XACTRM_NOREADONLYPREPARES= 2 <br>    }XACTRM; <br> <br>/* size is 2 */ <br>typedef  <br>enum XACTCONST <br>    {XACTCONST_TIMEOUTINFINITE= 0 <br>    }XACTCONST; <br> <br>/* size is 2 */ <br>typedef  <br>enum XACTHEURISTIC <br>    {XACTHEURISTIC_ABORT= 1, <br>XACTHEURISTIC_COMMIT= 2, <br>XACTHEURISTIC_DAMAGE= 3, <br>XACTHEURISTIC_DANGER= 4 <br>    }XACTHEURISTIC; <br> <br>#if defined(_WIN32) <br>/* size is 2 */ <br>typedef  <br>enum XACTSTAT <br>    {XACTSTAT_NONE= 0, <br>XACTSTAT_OPENNORMAL= 0x1, <br>XACTSTAT_OPENREFUSED= 0x2, <br>XACTSTAT_PREPARING= 0x4, <br>XACTSTAT_PREPARED= 0x8, <br>XACTSTAT_PREPARERETAINING= 0x10, <br>XACTSTAT_PREPARERETAINED= 0x20, <br>XACTSTAT_COMMITTING= 0x40, <br>XACTSTAT_COMMITRETAINING= 0x80, <br>XACTSTAT_ABORTING= 0x100, <br>XACTSTAT_ABORTED= 0x200, <br>XACTSTAT_COMMITTED= 0x400, <br>XACTSTAT_HEURISTIC_ABORT= 0x800, <br>XACTSTAT_HEURISTIC_COMMIT= 0x1000, <br>XACTSTAT_HEURISTIC_DAMAGE= 0x2000, <br>XACTSTAT_HEURISTIC_DANGER= 0x4000, <br>XACTSTAT_FORCED_ABORT= 0x8000, <br>XACTSTAT_FORCED_COMMIT= 0x10000, <br>XACTSTAT_INDOUBT= 0x20000, <br>XACTSTAT_CLOSED= 0x40000, <br>XACTSTAT_OPEN= 0x3, <br>XACTSTAT_NOTPREPARED= 0x7ffc3, <br>XACTSTAT_ALL= 0x7ffff <br>    }XACTSTAT; <br> <br>#else <br>#define XACTSTAT_NONE               0x00000000 <br>#define XACTSTAT_OPENNORMAL         0x00000001 <br>#define XACTSTAT_OPENREFUSED        0x00000002 <br>#define XACTSTAT_PREPARING          0x00000004 <br>#define XACTSTAT_PREPARED           0x00000008 <br>#define XACTSTAT_PREPARERETAINING   0x00000010 <br>#define XACTSTAT_PREPARERETAINED    0x00000020 <br>#define XACTSTAT_COMMITTING         0x00000040 <br>#define XACTSTAT_COMMITRETAINING    0x00000080 <br>#define XACTSTAT_ABORTING           0x00000100 <br>#define XACTSTAT_ABORTED            0x00000200 <br>#define XACTSTAT_COMMITTED          0x00000400 <br>#define XACTSTAT_HEURISTIC_ABORT    0x00000800 <br>#define XACTSTAT_HEURISTIC_COMMIT   0x00001000 <br>#define XACTSTAT_HEURISTIC_DAMAGE   0x00002000 <br>#define XACTSTAT_HEURISTIC_DANGER   0x00004000 <br>#define XACTSTAT_FORCED_ABORT       0x00008000 <br>#define XACTSTAT_FORCED_COMMIT      0x00010000 <br>#define XACTSTAT_INDOUBT            0x00020000 <br>#define XACTSTAT_CLOSED             0x00040000 <br>#define XACTSTAT_OPEN               0x00000003 <br>#define XACTSTAT_NOTPREPARED        0x0007FFC3 <br>#define XACTSTAT_ALL                0x0007FFFF <br>#endif <br>/* size is 44 */ <br>typedef struct  XACTOPT <br>    { <br>    ULONG ulTimeout; <br>    unsigned char szDescription[ 40 ]; <br>    }XACTOPT; <br> <br> <br> <br>extern RPC_IF_HANDLE BasicTransactionTypes_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE BasicTransactionTypes_v0_0_s_ifspec; <br>#endif /* __BasicTransactionTypes_INTERFACE_DEFINED__ */ <br> <br>#ifndef __ITransaction_INTERFACE_DEFINED__ <br>#define __ITransaction_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ITransaction <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ITransaction; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface ITransaction : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall Commit(  <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ DWORD grfTC, <br>            /* [in] */ DWORD grfRM) = 0; <br>         <br>        virtual HRESULT __stdcall Abort(  <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ BOOL fAsync) = 0; <br>         <br>        virtual HRESULT __stdcall GetTransactionInfo(  <br>            /* [out] */ XACTTRANSINFO __RPC_FAR *pinfo) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ITransactionVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            ITransaction __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            ITransaction __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            ITransaction __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Commit )(  <br>            ITransaction __RPC_FAR * This, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ DWORD grfTC, <br>            /* [in] */ DWORD grfRM); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Abort )(  <br>            ITransaction __RPC_FAR * This, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ BOOL fAsync); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetTransactionInfo )(  <br>            ITransaction __RPC_FAR * This, <br>            /* [out] */ XACTTRANSINFO __RPC_FAR *pinfo); <br>         <br>    } ITransactionVtbl; <br> <br>    interface ITransaction <br>    { <br>        CONST_VTBL struct ITransactionVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ITransaction_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ITransaction_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ITransaction_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ITransaction_Commit(This,fRetaining,grfTC,grfRM)\ <br>    (This)-&gt;lpVtbl -&gt; Commit(This,fRetaining,grfTC,grfRM) <br> <br>#define ITransaction_Abort(This,pboidReason,fRetaining,fAsync)\ <br>    (This)-&gt;lpVtbl -&gt; Abort(This,pboidReason,fRetaining,fAsync) <br> <br>#define ITransaction_GetTransactionInfo(This,pinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetTransactionInfo(This,pinfo) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall ITransaction_Commit_Proxy(  <br>    ITransaction __RPC_FAR * This, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ DWORD grfTC, <br>    /* [in] */ DWORD grfRM); <br> <br> <br>void __RPC_STUB ITransaction_Commit_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransaction_Abort_Proxy(  <br>    ITransaction __RPC_FAR * This, <br>    /* [in] */ BOID __RPC_FAR *pboidReason, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ BOOL fAsync); <br> <br> <br>void __RPC_STUB ITransaction_Abort_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransaction_GetTransactionInfo_Proxy(  <br>    ITransaction __RPC_FAR * This, <br>    /* [out] */ XACTTRANSINFO __RPC_FAR *pinfo); <br> <br> <br>void __RPC_STUB ITransaction_GetTransactionInfo_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ITransaction_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionDispenser_INTERFACE_DEFINED__ <br>#define __ITransactionDispenser_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ITransactionDispenser <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ITransactionDispenser; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface ITransactionDispenser : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall GetOptionsObject(  <br>            /* [out] */ ITransactionOptions __RPC_FAR *__RPC_FAR *ppOptions) = 0; <br>         <br>        virtual HRESULT __stdcall BeginTransaction(  <br>            /* [in] */ IUnknown __RPC_FAR *punkOuter, <br>            /* [in] */ ISOLEVEL isoLevel, <br>            /* [in] */ ULONG isoFlags, <br>            /* [in] */ ITransactionOptions __RPC_FAR *pOptions, <br>            /* [out] */ ITransaction __RPC_FAR *__RPC_FAR *ppTransaction) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ITransactionDispenserVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            ITransactionDispenser __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            ITransactionDispenser __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            ITransactionDispenser __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetOptionsObject )(  <br>            ITransactionDispenser __RPC_FAR * This, <br>            /* [out] */ ITransactionOptions __RPC_FAR *__RPC_FAR *ppOptions); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *BeginTransaction )(  <br>            ITransactionDispenser __RPC_FAR * This, <br>            /* [in] */ IUnknown __RPC_FAR *punkOuter, <br>            /* [in] */ ISOLEVEL isoLevel, <br>            /* [in] */ ULONG isoFlags, <br>            /* [in] */ ITransactionOptions __RPC_FAR *pOptions, <br>            /* [out] */ ITransaction __RPC_FAR *__RPC_FAR *ppTransaction); <br>         <br>    } ITransactionDispenserVtbl; <br> <br>    interface ITransactionDispenser <br>    { <br>        CONST_VTBL struct ITransactionDispenserVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ITransactionDispenser_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ITransactionDispenser_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ITransactionDispenser_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ITransactionDispenser_GetOptionsObject(This,ppOptions)\ <br>    (This)-&gt;lpVtbl -&gt; GetOptionsObject(This,ppOptions) <br> <br>#define ITransactionDispenser_BeginTransaction(This,punkOuter,isoLevel,isoFlags,pOptions,ppTransaction)\ <br>    (This)-&gt;lpVtbl -&gt; BeginTransaction(This,punkOuter,isoLevel,isoFlags,pOptions,ppTransaction) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall ITransactionDispenser_GetOptionsObject_Proxy(  <br>    ITransactionDispenser __RPC_FAR * This, <br>    /* [out] */ ITransactionOptions __RPC_FAR *__RPC_FAR *ppOptions); <br> <br> <br>void __RPC_STUB ITransactionDispenser_GetOptionsObject_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionDispenser_BeginTransaction_Proxy(  <br>    ITransactionDispenser __RPC_FAR * This, <br>    /* [in] */ IUnknown __RPC_FAR *punkOuter, <br>    /* [in] */ ISOLEVEL isoLevel, <br>    /* [in] */ ULONG isoFlags, <br>    /* [in] */ ITransactionOptions __RPC_FAR *pOptions, <br>    /* [out] */ ITransaction __RPC_FAR *__RPC_FAR *ppTransaction); <br> <br> <br>void __RPC_STUB ITransactionDispenser_BeginTransaction_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ITransactionDispenser_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionOptions_INTERFACE_DEFINED__ <br>#define __ITransactionOptions_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ITransactionOptions <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ITransactionOptions; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface ITransactionOptions : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall SetOptions(  <br>            /* [in] */ XACTOPT __RPC_FAR *pOptions) = 0; <br>         <br>        virtual HRESULT __stdcall GetOptions(  <br>            /* [out][in] */ XACTOPT __RPC_FAR *pOptions) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ITransactionOptionsVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            ITransactionOptions __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            ITransactionOptions __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            ITransactionOptions __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *SetOptions )(  <br>            ITransactionOptions __RPC_FAR * This, <br>            /* [in] */ XACTOPT __RPC_FAR *pOptions); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetOptions )(  <br>            ITransactionOptions __RPC_FAR * This, <br>            /* [out][in] */ XACTOPT __RPC_FAR *pOptions); <br>         <br>    } ITransactionOptionsVtbl; <br> <br>    interface ITransactionOptions <br>    { <br>        CONST_VTBL struct ITransactionOptionsVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ITransactionOptions_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ITransactionOptions_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ITransactionOptions_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ITransactionOptions_SetOptions(This,pOptions)\ <br>    (This)-&gt;lpVtbl -&gt; SetOptions(This,pOptions) <br> <br>#define ITransactionOptions_GetOptions(This,pOptions)\ <br>    (This)-&gt;lpVtbl -&gt; GetOptions(This,pOptions) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall ITransactionOptions_SetOptions_Proxy(  <br>    ITransactionOptions __RPC_FAR * This, <br>    /* [in] */ XACTOPT __RPC_FAR *pOptions); <br> <br> <br>void __RPC_STUB ITransactionOptions_SetOptions_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionOptions_GetOptions_Proxy(  <br>    ITransactionOptions __RPC_FAR * This, <br>    /* [out][in] */ XACTOPT __RPC_FAR *pOptions); <br> <br> <br>void __RPC_STUB ITransactionOptions_GetOptions_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ITransactionOptions_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionOutcomeEvents_INTERFACE_DEFINED__ <br>#define __ITransactionOutcomeEvents_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ITransactionOutcomeEvents <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ITransactionOutcomeEvents; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface ITransactionOutcomeEvents : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall Committed(  <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall Aborted(  <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall HeuristicDecision(  <br>            /* [in] */ DWORD dwDecision, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall Indoubt( void) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ITransactionOutcomeEventsVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Committed )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Aborted )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *HeuristicDecision )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This, <br>            /* [in] */ DWORD dwDecision, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Indoubt )(  <br>            ITransactionOutcomeEvents __RPC_FAR * This); <br>         <br>    } ITransactionOutcomeEventsVtbl; <br> <br>    interface ITransactionOutcomeEvents <br>    { <br>        CONST_VTBL struct ITransactionOutcomeEventsVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ITransactionOutcomeEvents_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ITransactionOutcomeEvents_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ITransactionOutcomeEvents_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ITransactionOutcomeEvents_Committed(This,fRetaining,pNewUOW,hr)\ <br>    (This)-&gt;lpVtbl -&gt; Committed(This,fRetaining,pNewUOW,hr) <br> <br>#define ITransactionOutcomeEvents_Aborted(This,pboidReason,fRetaining,pNewUOW,hr)\ <br>    (This)-&gt;lpVtbl -&gt; Aborted(This,pboidReason,fRetaining,pNewUOW,hr) <br> <br>#define ITransactionOutcomeEvents_HeuristicDecision(This,dwDecision,pboidReason,hr)\ <br>    (This)-&gt;lpVtbl -&gt; HeuristicDecision(This,dwDecision,pboidReason,hr) <br> <br>#define ITransactionOutcomeEvents_Indoubt(This)\ <br>    (This)-&gt;lpVtbl -&gt; Indoubt(This) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall ITransactionOutcomeEvents_Committed_Proxy(  <br>    ITransactionOutcomeEvents __RPC_FAR * This, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionOutcomeEvents_Committed_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionOutcomeEvents_Aborted_Proxy(  <br>    ITransactionOutcomeEvents __RPC_FAR * This, <br>    /* [in] */ BOID __RPC_FAR *pboidReason, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionOutcomeEvents_Aborted_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionOutcomeEvents_HeuristicDecision_Proxy(  <br>    ITransactionOutcomeEvents __RPC_FAR * This, <br>    /* [in] */ DWORD dwDecision, <br>    /* [in] */ BOID __RPC_FAR *pboidReason, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionOutcomeEvents_HeuristicDecision_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionOutcomeEvents_Indoubt_Proxy(  <br>    ITransactionOutcomeEvents __RPC_FAR * This); <br> <br> <br>void __RPC_STUB ITransactionOutcomeEvents_Indoubt_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ITransactionOutcomeEvents_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __ITransactionCompletionEvents_INTERFACE_DEFINED__ <br>#define __ITransactionCompletionEvents_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: ITransactionCompletionEvents <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_ITransactionCompletionEvents; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface ITransactionCompletionEvents : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall Committed(  <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall Aborted(  <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall HeuristicDecision(  <br>            /* [in] */ DWORD dwDecision, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ HRESULT hr) = 0; <br>         <br>        virtual HRESULT __stdcall Indoubt( void) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct ITransactionCompletionEventsVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            ITransactionCompletionEvents __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            ITransactionCompletionEvents __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            ITransactionCompletionEvents __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Committed )(  <br>            ITransactionCompletionEvents __RPC_FAR * This, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Aborted )(  <br>            ITransactionCompletionEvents __RPC_FAR * This, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ BOOL fRetaining, <br>            /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *HeuristicDecision )(  <br>            ITransactionCompletionEvents __RPC_FAR * This, <br>            /* [in] */ DWORD dwDecision, <br>            /* [in] */ BOID __RPC_FAR *pboidReason, <br>            /* [in] */ HRESULT hr); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Indoubt )(  <br>            ITransactionCompletionEvents __RPC_FAR * This); <br>         <br>    } ITransactionCompletionEventsVtbl; <br> <br>    interface ITransactionCompletionEvents <br>    { <br>        CONST_VTBL struct ITransactionCompletionEventsVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define ITransactionCompletionEvents_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define ITransactionCompletionEvents_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define ITransactionCompletionEvents_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define ITransactionCompletionEvents_Committed(This,fRetaining,pNewUOW,hr)\ <br>    (This)-&gt;lpVtbl -&gt; Committed(This,fRetaining,pNewUOW,hr) <br> <br>#define ITransactionCompletionEvents_Aborted(This,pboidReason,fRetaining,pNewUOW,hr)\ <br>    (This)-&gt;lpVtbl -&gt; Aborted(This,pboidReason,fRetaining,pNewUOW,hr) <br> <br>#define ITransactionCompletionEvents_HeuristicDecision(This,dwDecision,pboidReason,hr)\ <br>    (This)-&gt;lpVtbl -&gt; HeuristicDecision(This,dwDecision,pboidReason,hr) <br> <br>#define ITransactionCompletionEvents_Indoubt(This)\ <br>    (This)-&gt;lpVtbl -&gt; Indoubt(This) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall ITransactionCompletionEvents_Committed_Proxy(  <br>    ITransactionCompletionEvents __RPC_FAR * This, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionCompletionEvents_Committed_Stub( </code></pre>
<p>
</p>
<pre><code>IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionCompletionEvents_Aborted_Proxy(  <br>    ITransactionCompletionEvents __RPC_FAR * This, <br>    /* [in] */ BOID __RPC_FAR *pboidReason, <br>    /* [in] */ BOOL fRetaining, <br>    /* [in] */ XACTUOW __RPC_FAR *pNewUOW, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionCompletionEvents_Aborted_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionCompletionEvents_HeuristicDecision_Proxy(  <br>    ITransactionCompletionEvents __RPC_FAR * This, <br>    /* [in] */ DWORD dwDecision, <br>    /* [in] */ BOID __RPC_FAR *pboidReason, <br>    /* [in] */ HRESULT hr); <br> <br> <br>void __RPC_STUB ITransactionCompletionEvents_HeuristicDecision_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall ITransactionCompletionEvents_Indoubt_Proxy(  <br>    ITransactionCompletionEvents __RPC_FAR * This); <br> <br> <br>void __RPC_STUB ITransactionCompletionEvents_Indoubt_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __ITransactionCompletionEvents_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0011 <br> * at Tue Nov 21 16:54:32 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>#define XACT_E_FIRST                    0x8004D000 <br>#define XACT_E_LAST                     0x8004D01E <br>#define XACT_S_FIRST                    0x0004D000 <br>#define XACT_S_LAST                     0x0004D009 <br> <br>#define XACT_E_ABORTED                  0x8004D019 <br>#define XACT_E_ALREADYOTHERSINGLEPHASE  0x8004D000 <br>#define XACT_E_ALREADYINPROGRESS        0x8004D018 <br>#define XACT_E_CANTRETAIN               0x8004D001 <br>#define XACT_E_COMMITFAILED             0x8004D002 <br>#define XACT_E_COMMITPREVENTED          0x8004D003 <br>#define XACT_E_CONNECTION_DENIED        0x8004D01D <br>#define XACT_E_CONNECTION_DOWN          0x8004D01C <br>#define XACT_E_HEURISTICABORT           0x8004D004 <br>#define XACT_E_HEURISTICCOMMIT          0x8004D005 <br>#define XACT_E_HEURISTICDAMAGE          0x8004D006 <br>#define XACT_E_HEURISTICDANGER          0x8004D007 <br>#define XACT_E_INDOUBT                  0x8004D016 <br>#define XACT_E_INVALIDCOOKIE            0x8004D015 <br>#define XACT_E_ISOLATIONLEVEL           0x8004D008 <br>#define XACT_E_LOGFULL                  0x8004D01A <br>#define XACT_E_NOASYNC                  0x8004D009 <br>#define XACT_E_NOENLIST                 0x8004D00A <br>#define XACT_E_NOIMPORTOBJECT           0x8004D014 <br>#define XACT_E_NOISORETAIN              0x8004D00B <br>#define XACT_E_NORESOURCE               0x8004D00C <br>#define XACT_E_NOTCURRENT               0x8004D00D <br>#define XACT_E_NOTIMEOUT                0x8004D017 <br>#define XACT_E_NOTRANSACTION            0x8004D00E <br>#define XACT_E_NOTSUPPORTED             0x8004D00F <br>#define XACT_E_REENLISTTIMEOUT          0x8004D01E <br>#define XACT_E_TMNOTAVAILABLE           0x8004D01B <br>#define XACT_E_UNKNOWNRMGRID            0x8004D010 <br>#define XACT_E_WRONGSTATE               0x8004D011 <br>#define XACT_E_WRONGUOW                 0x8004D012 <br>#define XACT_E_XTIONEXISTS              0x8004D013 <br> <br>#define XACT_S_ABORTING                 0x0004D008 <br>#define XACT_S_ALLNORETAIN              0x0004D007 <br>#define XACT_S_ASYNC                    0x0004D000 <br>#define XACT_S_DEFECT                   0x0004D001 <br>#define XACT_S_OKINFORM                 0x0004D004 <br>#define XACT_S_MADECHANGESCONTENT       0x0004D005 <br>#define XACT_S_MADECHANGESINFORM        0x0004D006 <br>#define XACT_S_READONLY                 0x0004D002 <br>#define XACT_S_SINGLEPHASE              0x0004D009 <br>#define XACT_S_SOMENORETAIN             0x0004D003 <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0011_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0011_v0_0_s_ifspec; <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif <br> <br>/////////////////////////////////////////////////////////////////////// <br>// <br>// IID definitions for interfaces defined in this header file <br>// <br> <br>#if !defined(_transact_iid_) &amp;&amp; defined(INITGUID) <br>#define      _transact_iid_ <br>const IID IID_ITransaction = {0x0fb15084,0xaf41,0x11ce,{0xbd,0x2b,0x20,0x4c,0x4f,0x4f,0x50,0x20}}; <br>const IID IID_ITransactionDispenser = {0x3A6AD9E1,0x23B9,0x11cf,{0xAD,0x60,0x00,0xAA,0x00,0xA7,0x4C,0xCD}}; <br>const IID IID_ITransactionOptions = {0x3A6AD9E0,0x23B9,0x11cf,{0xAD,0x60,0x00,0xAA,0x00,0xA7,0x4C,0xCD}}; <br>const IID IID_ITransactionOutcomeEvents = {0x3A6AD9E2,0x23B9,0x11cf,{0xAD,0x60,0x00,0xAA,0x00,0xA7,0x4C,0xCD}}; <br>const IID IID_ITransactionCompletionEvents = {0xB38D5220,0x23CE,0x11cf,{0xAD,0x60,0x00,0xAA,0x00,0xA7,0x4C,0xCD}}; <br>#endif <br> <br>/////////////////////////////////////////////////////////////////////// <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
