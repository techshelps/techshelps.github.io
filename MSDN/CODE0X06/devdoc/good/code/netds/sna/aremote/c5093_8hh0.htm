<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>APPCLIB.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context5094"></a>APPCLIB.H</h2>
<pre><code>#define CLEARVCB(vcb) memset(&amp;vcb, 0, sizeof(vcb)) <br> <br>#undef DEBUG <br>#undef DEBUGCALLS <br> <br>#ifdef DEBUGCALLS <br>#define ASYNCAPPC(handle, vcbp, hasync) { \ <br>printf("asyncappc: %x . . . ", APPC_FLIPI(vcbp-&gt;hdr.opcode)); \ <br>hasync = WinAsyncAPPCEx(handle, (long) vcbp); \ <br>printf("done\n");\ <br>} <br>#else <br>#define ASYNCAPPC(handle, vcbp, hasync) \ <br>hasync = WinAsyncAPPCEx(handle, (long) vcbp) <br>#endif <br> <br>#ifdef DEBUG <br>#define APPCDBG(x) x <br>#else <br>#define APPCDBG(x) <br>#endif <br> <br>#define WINAPPCVERSION 0x0001 <br> <br>typedef union vcb_u { <br>struct appc_hdr             hdr; <br>    struct receive_allocate     rcvalloc; <br>    struct mc_receive_and_wait  rcvwait; <br>    struct tp_ended             tpend; <br>struct tp_startedtpstart; <br>struct mc_allocateallocate; <br>struct mc_send_datasnddata; <br>struct mc_flushflush; <br>struct mc_prepare_to_receivetorec; <br>struct mc_confirmconfirm; <br>struct mc_confirmedconfirmed; <br>struct mc_deallocatedealloc; <br>struct mc_get_attributesgetattrib; <br>} vcb_t; <br> <br>typedef struct tpconvid_st { <br>/* TP ID and Conversation ID for read conversation */ <br>unsigned charr_tp_id[8]; <br>unsigned long int r_conv_id; <br>unsigned charr_valid; <br>/* TP ID and Conversation ID for write conversation */ <br>unsigned charw_tp_id[8]; <br>unsigned long intw_conv_id; <br>unsigned char w_valid; <br>} *tpconvid_t; <br> <br>// this has the fully qualified partner lu name and time used for identifing  <br>// incoming sessions <br>typedef struct name_time_st { <br>unsigned charfqplu_name[17]; <br>DWORDtime; <br>} name_time_t; <br> <br>typedef struct readnode_st { <br>name_time_tname_time; <br>tpconvid_ttpconv; <br>} *readnode_t; <br> <br>// --- error codes --- <br>#define APPCLIB_ERROR_BASE 0x20000000// bit 29 is user error <br> <br>#define APPCLIB_ASYNC_FAILED APPCLIB_ERROR_BASE + 0// WinAPPCAsyncEx failed <br>#define APPCLIB_NO_INIT APPCLIB_ERROR_BASE + 1// appcinit() wasn't called <br> <br>// --- exported function prototypes --- <br>int appcinit(void); <br>BOOL WINAPI appcdestroy(void); <br>tpconvid_t appclisten(TCHAR *tpname); <br>tpconvid_t appcconnect(TCHAR *lu_alias, TCHAR *plu_alias,  <br>   TCHAR *tp_name, TCHAR *loc_tp_name, TCHAR *mode_name); <br>int appcread(tpconvid_t tpconv, void *data, int maxlen); <br>void appcwrite(tpconvid_t tpconv, void *data, int len); <br>int appcvalid(tpconvid_t tpconv); <br>void appcclose(tpconvid_t tpconv); </code></pre>
<p>&nbsp;</p></body>
</HTML>
