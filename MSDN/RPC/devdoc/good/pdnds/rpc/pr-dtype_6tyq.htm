<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RPC_BINDING_VECTOR</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpc_binding_vector"></a>RPC_BINDING_VECTOR</h1>
<pre><code>#define rpc_binding_vector_t RPC_BINDING_VECTOR
typedef struct _RPC_BINDING_VECTOR {
    unsigned long       <i>Count</i>;
    RPC_BINDING_HANDLE  <i>BindingH[1]</i>;
}   RPC_BINDING_VECTOR;
 </code></pre>
<dl>
<dt>
<i>Count</i></dt>
<dd>
Specifies the number of binding handles present in the binding-handle array <i>BindingH</i>.</dd>
<dt>
<i>BindingH</i></dt>
<dd>
Specifies an array of binding handles that contains <i>Count </i>elements.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The binding-vector data structure contains a list of binding handles over which a server application can receive remote procedure calls.</p>
<p>
The binding vector contains a count member (<i>Count</i>), followed by an array of binding-handle (<i>BindingH</i>) elements.</p>
<p>
The RPC run-time library creates binding handles when a server application registers protocol sequences. To obtain a binding vector, a server application calls the <b>RpcServerInqBindings</b> routine.</p>
<p>
A client application obtains a binding vector of compatible servers from the name-service database by calling the <b>RpcNsBindingLookupNext</b> routine.</p>
<p>
In both routines, the RPC run-time library allocates memory for the binding vector. An application calls the <b>RpcBindingVectorFree</b> routine to free the binding vector.</p>
<p>
To remove an individual binding handle from the vector, the application must set the value in the vector to NULL. When setting a vector element to NULL, the application must:
<ul>
<li>
Free the individual binding</li>
<li>
Not change the value of <i>Count</i></li>
</ul>
<p>
Calling the <b>RpcBindingFree</b> routine allows an application to both free the unwanted binding handle and set the vector entry to a NULL value.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_3qqt.htm"><b>RpcBindingVectorFree</b></a>, <a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a>, <a href="pr-func1_452d.htm"><b>RpcEpRegisterNoReplace</b></a>, <a href="pr-func1_8pwy.htm"><b>RpcEpUnregister</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a>, <a href="pr-func1_8m0k.htm"><b>RpcNsBindingLookupNext</b></a>, <a href="pr-func1_8uno.htm"><b>RpcNsBindingSelect</b></a>, <a href="pr-func2_8bhv.htm"><b>RpcServerInqBindings</b></a></p>
<p>&nbsp;</p></body>
</HTML>
