<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Binding</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_string_binding"></a>String Binding</h1>
<p>
<i>ObjectUUID</i><b>@</b><i>ProtocolSequence</i><b>:</b><i>NetworkAddress</i><b>[</b><i>Endpoint</i><b>,</b><i>Option</i><b>]</b>
<dl>
<dt>
<i>ObjectUUID</i></dt>
<dd>
Specifies the UUID of the object operated on by the remote procedure call. At the server, the RPC run-time library maps the object type to a manager entry-point vector (an array of function pointers) to invoke the correct manager routine. For a discussion of how to map object UUIDs to manager entry-point vectors, see <a href="pr-func2_9prs.htm"><b>RpcServerRegisterIfEx</b></a>.</dd>
<dt>
<i>Protocol</i> Sequence</dt>
<dd>
Specifies a character string that represents a valid combination of an RPC protocol (such as "ncacn"), a transport protocol (such as "tcp"), and a network protocol (such as "ip"). Microsoft RPC supports the following protocol sequences:
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=23%>Protocol sequence</th>
<th align=left width=32%>Description</th>
<th align=left width=45%>Supporting Platforms</th>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_nb_tcp</b></td>
<td width=32%>Connection-oriented NetBIOS over TCP</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_nb_ipx</b></td>
<td width=32%>Connection-oriented NetBIOS over IPX</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_nb_nb</b></td>
<td width=32%>Connection-oriented NetBEUI</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT, Windows 95</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_ip_tcp</b></td>
<td width=32%>Connection-oriented TCP/IP</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i>,<i> </i>and Apple Macintosh<br>
client and server: Windows 95 and Windows NT</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_np</b></td>
<td width=32%>Connection-oriented named pipes</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i>, Windows 95<br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_spx</b></td>
<td width=32%>Connection-oriented SPX</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT, Windows 95</td>
</tr>
<tr valign=top>
<td width=23%><b>ncacn_dnet_nsp</b></td>
<td width=32%>Connection-oriented DECnet transport</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i></td>
</tr>
</table>
</dd>
</dl>
<table cellspacing=4 cols=4>
<tr valign=top>
<td width=24%><b>ncadg_mq</b></td>
<td width=30%>Datagram (connectionless) over the Microsoft Message Queue Server</td>
<td colspan=2 width=46%>client only: Windows 95 (DCOM version)<br>
client and server: Windows NT version 4.0, with SP3, and later</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_http</b></td>
<td width=30%>Connection-oriented TCP/IP using Microsoft Internet Information Server as HTTP proxy.</td>
<td colspan=2 width=46%>client only: Windows 95 (DCOM version)<br>
client and server: Windows NT version 5.0 and later</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_at_dsp</b></td>
<td colspan=2 width=31%>AppleTalk DSP</td>
<td width=45%>client: Apple Macintosh<br>
server: Windows NT</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_vns_spp</b></td>
<td colspan=2 width=31%>Connection-oriented Vines SPP transport</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=24%><b>ncadg_ip_udp</b></td>
<td colspan=2 width=31%>Datagram (connectionless) UDP/IP</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=24%><b>ncadg_ipx</b></td>
<td colspan=2 width=31%>Datagram (connectionless) IPX</td>
<td width=45%>client only: MS-DOS, Windows 3.<i>x</i><br>
client and server: Windows NT</td>
</tr>
<tr valign=top>
<td width=24%><b>ncalrpc</b></td>
<td colspan=2 width=31%>Local procedure call</td>
<td width=45%>client and server: Windows NT and Windows 95</td>
</tr>
</table><br>
<dl>
<dt>
<i>NetworkAddress</i></dt>
<dd>
Specifies the network address of the system to receive remote procedure calls. The format and content of the network address depend on the specified protocol sequence as follows:
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=24%>Protocol sequence</th>
<th align=left width=42%>Network address</th>
<th align=left width=34%>Examples</th>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_nb_tcp</b></td>
<td width=42%>Windows NT machine name</td>
<td width=34%>myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_nb_ipx</b></td>
<td width=42%>Windows NT machine name</td>
<td width=34%>myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_nb_nb</b></td>
<td width=42%>Windows NT or Windows 95 machine name</td>
<td width=34%>myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_ip_tcp</b></td>
<td width=42%>four-octet internet address, or host name</td>
<td width=34%>128.10.2.30<br>
anynode.microsoft.com</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_np</b></td>
<td width=42%>Windows NT server name (leading double backslashes are optional)</td>
<td width=34%>myserver \\myotherserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_spx</b></td>
<td width=42%>IPX internet address, or Windows NT server name</td>
<td width=34%>~0000000108002B30612C<br>
myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_dnet_nsp </b></td>
<td width=42%>Area and node syntax</td>
<td width=34%>4.120</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_at_dsp</b></td>
<td width=42%>Windows NT machine name, optionally followed by @ and the AppleTalk zone name. Defaults to @*, the client's zone, if no zone provided</td>
<td width=34%>servername@zonename<br>
servername</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_vns_spp</b></td>
<td width=42%>StreetTalk server name of the form item@group@organization</td>
<td width=34%>printserver@sdkdocs@microsoft</td>
</tr>
<tr valign=top>
<td width=24%><b>ncadg_mq</b></td>
<td width=42%>Windows NT server name</td>
<td width=34%>myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncacn_http</b></td>
<td width=42%>Internet address (either four-octet or friendly name, or local Windows NT server name</td>
<td width=34%>128.10.2.30<br>
somesvr@anywhere.com<p>
mylocalsvr</p>
</td>
</tr>
<tr valign=top>
<td width=24%><b>ncadg_ip_udp</b></td>
<td width=42%>four-octet internet address, or host name</td>
<td width=34%>128.10.2.30<br>
anynode.microsoft.com</td>
</tr>
<tr valign=top>
<td width=24%><b>ncadg_ipx</b></td>
<td width=42%>IPX internet address, or Windows NT server name</td>
<td width=34%>~0000000108002B30612C<br>
myserver</td>
</tr>
<tr valign=top>
<td width=24%><b>ncalrpc</b></td>
<td width=42%>Machine name </td>
<td width=34%>thismachine</td>
</tr>
</table><br>


<p>
The network-address field is optional. When you do not specify a network address, the string binding refers to your local host. It is possible to specify the name of the local machine when you use the <b>ncalrpc</b> protocol sequence, however doing so is completely unnecessary.
</dd>
<dt>
<i>Endpoint</i></dt>
<dd>
Specifies the endpoint, or address, of the process to receive remote procedure calls. An endpoint can be preceded by the keyword <b>endpoint=</b>. Specifying the endpoint is optional if the server has registered its bindings with the endpoint mapper. See <a href="pr-func1_5r5e.htm">RpcEpRegister</a>.
<p>
The format and content of an endpoint depend on the specified protocol sequence as shown in the Endpoint/Option Table, below.
</dd>
<dt>
<i>Option</i></dt>
<dd>
Specifies protocol-specific options.. The option field is not required. Each option is specified by a {name, value} pair that uses the syntax <i>option name=option value</i>. Options are defined for each protocol sequence as shown in the Endpoint/Option Table, below.
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=24%>Protocol sequence</th>
<th align=left width=31%><br>
Endpoint</th>
<th align=left width=27%><br>
Examples</th>
<th align=left width=18%>Option name</th>
</tr>
<tr valign=top>
<td width=24%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_nb_tcp">
</object><a href=JavaScript:alink_1.Click()><b>ncacn_nb_tcp</b></a></td>
<td width=31%>Integer between 1 and 254. Many values between 0 and 32 are reserved by Microsoft.</td>
<td width=27%>100</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_nb_ipx">
</object><a href=JavaScript:alink_2.Click()><b>ncacn_nb_ipx</b></a></td>
<td width=31%>(as above)</td>
<td width=27%>(as above)</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_nb_nb">
</object><a href=JavaScript:alink_3.Click()><b>ncacn_nb_nb</b></a></td>
<td width=31%>(as above)</td>
<td width=27%>(as above)</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_ip_tcp">
</object><a href=JavaScript:alink_4.Click()><b>ncacn_ip_tcp</b></a></td>
<td width=31%>Internet port number</td>
<td width=27%>1025</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_np">
</object><a href=JavaScript:alink_5.Click()><b>ncacn_np</b></a></td>
<td width=31%>Windows NT named pipe. Name must start with "\\pipe".</td>
<td width=27%>\\pipe\\pipename</td>
<td width=18%>Security <br>
(NT only)</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_spx">
</object><a href=JavaScript:alink_6.Click()><b>ncacn_spx</b></a></td>
<td width=31%>Integer between 1 and 65535.</td>
<td width=27%>5000</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_dnet_nsp">
</object><a href=JavaScript:alink_7.Click()><b>ncacn_dnet_nsp</b></a></td>
<td width=31%>DECnet phase IV object number (must be preceded by the # character), or object name</td>
<td width=27%>mailserver<br>
#17</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_at_dsp">
</object><a href=JavaScript:alink_8.Click()><b>ncacn_at_dsp</b></a></td>
<td width=31%>A character string, up to 22 bytes long </td>
<td width=27%>myservicesendpoint</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_vns_spp">
</object><a href=JavaScript:alink_9.Click()><b>ncacn_vns_spp</b></a></td>
<td width=31%>Vines SPP port number between 250 and 511</td>
<td width=27%>500</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_mq">
</object><a href=JavaScript:alink_10.Click()><b>ncadg_mq</b></a></td>
<td width=31%>Integer between 1 and 65535.</td>
<td width=27%>5000</td>
<td width=18%>None</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_http">
</object><a href=JavaScript:alink_11.Click()><b>ncacn_http</b></a></td>
<td width=31%>Internet port number</td>
<td width=27%>2215</td>
<td width=18%>HTTP and RPC proxy server names</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_12 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_ip_udp">
</object><a href=JavaScript:alink_12.Click()><b>ncadg_ip_udp</b></a></td>
<td width=31%>Internet port number</td>
<td width=27%>1025</td>
<td width=18%>Security (32-bit only)</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_13 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_ipx">
</object><a href=JavaScript:alink_13.Click()><b>ncadg_ipx</b></a></td>
<td width=31%>Integer between 1 and 65535.</td>
<td width=27%>5000</td>
<td width=18%>Security (32-bit only)</td>
</tr>
<tr valign=top>
<td width=24%><object id=alink_14 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncalrpc">
</object><a href=JavaScript:alink_14.Click()><b>ncalrpc</b></a></td>
<td width=31%>String specifying application or service name. The string cannot include any backslash characters.</td>
<td width=27%>my_printer</td>
<td width=18%>Security <br>
(NT only)</td>
</tr>
</table><br>


<p>
The Security option name, supported for the <b>ncalrpc</b>, <b>ncacn_np</b>, <b>ncadg_ip_udp</b>, and <b>ncadg_ipx</b> protocol sequences, takes the following option values:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=25%>Option name</th>
<th align=left width=75%>Option value</th>
</tr>
<tr valign=top>
<td width=25%>Security</td>
<td width=75%>{identification | anonymous | impersonation} {dynamic&nbsp;|&nbsp;static} {true&nbsp;|&nbsp;false}</td>
</tr>
</table><br>


<p>
If the Security option name is specified, one entry from each of the sets of Security option values must also be supplied. The option values must be separated by a single-space character. For example, the following <i>Option</i> fields are valid:

<pre><code>Security=identification dynamic true
Security=impersonation static true
 </code></pre>

<p>
The Security option values have the following meanings:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=28%>Security option value</th>
<th align=left width=72%>Description</th>
</tr>
<tr valign=top>
<td width=28%>Anonymous</td>
<td width=72%>The client is anonymous to the server.</td>
</tr>
<tr valign=top>
<td width=28%>Dynamic</td>
<td width=72%>A pointer to the security token is maintained. Security settings represent current settings and include changes made after the endpoint was created.</td>
</tr>
<tr valign=top>
<td width=28%>False</td>
<td width=72%>Effective = FALSE; all Windows NT security settings, including those set to OFF, are included in the token.</td>
</tr>
<tr valign=top>
<td width=28%>Identification</td>
<td width=72%>The server has information about client but cannot impersonate.</td>
</tr>
<tr valign=top>
<td width=28%>Impersonation</td>
<td width=72%>The server is the client on the client's behalf.</td>
</tr>
<tr valign=top>
<td width=28%>Static</td>
<td width=72%>Security settings associated with the endpoint represent a copy of the security information at the time the endpoint was created. The settings do not change. </td>
</tr>
<tr valign=top>
<td width=28%>True</td>
<td width=72%>Effective = TRUE; only Windows NT security settings set to ON are included in the token. </td>
</tr>
</table><br>


<p>
For more information about Microsoft Windows NT security options, see your Microsoft Windows NT programming documentation.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The string binding is an unsigned character string composed of strings that represent the binding object UUID, the RPC protocol sequence, the network address, and the endpoint and endpoint options. White space is not allowed in string bindings except where required by the <i>Option</i> syntax. </p>
<p>
Default settings for the <i>NetworkAddress, Endpoint</i>, and <i>Option</i> fields vary according to the value of the <i>ProtocolSequence</i> field.</p>
<p>
For all string-binding fields, a single backslash character (<i>\</i>) is interpreted as an escape character. To specify a single literal backslash character, you must supply two backslash characters (\\).</p>
<p>
The following are examples of valid string bindings. In these examples, <i>obj-uuid</i> is used for convenience to represent a valid UUID in string form. Instead of showing the UUID 308FB580-1EB2-11CA-923B-08002B1075A7, the examples show <i>obj-uuid</i>.</p>
<pre><code>obj-uuid@ncadg_mq:mymqserver
obj-uuid@ncacn_http:major7.somewhere.com[2225]
obj_uuid@ncacn_http:major7.somewhere.com[,HttpProxy=proxysvr:80,
    RpcProxy=websvr1.somewhere.com:80]
obj-uuid@ncacn_ip_tcp:16.20.16.27[2001]
obj-uuid@ncacn_ip_tcp:16.20.16.27[endpoint=2001]
obj-uuid@ncacn_nb_nb:
obj-uuid@ncacn_nb_nb:[100]
obj-uuid@ncacn_np:
obj-uuid@ncacn_np:[\\pipe\\p3,Security=impersonation static true]
obj-uuid@ncacn_np:\\\\marketing[\\pipe\\p2\\p3\\p4]
obj-uuid@ncacn_np:\\\\marketing[endpoint=\\pipe\\p2\\p3\\p4]
obj-uuid@ncacn_np:\\\\sales
obj-uuid@ncacn_np:\\\\sales[\\pipe\\p1,Security=identification dynamic true]
obj-uuid@ncalrpc:
obj-uuid@ncalrpc:[object1_name_demonstrating_that_these_can_be_lengthy]
obj-uuid@ncalrpc:[object2_name,Security=anonymous static true]
obj-uuid@ncacn_vns_spp:server@group@org[500]
obj-uuid@ncacn_dnet_nsp:took[elf_server]
obj-uuid@ncacn_dnet_nsp:took[endpoint=elf_server]
obj-uuid@ncadg_ip_udp:128.10.2.30
obj-uuid@ncadg_ip_udp:maryos.microsoft.com[1025]
obj-uuid@ncadg_ipx: ~0000000108002B30612C[5000]
obj-uuid@ncadg_ipx:printserver
obj-uuid@ncacn_spx:annaw[4390]
obj-uuid@ncacn_spx:~0000000108002B30612C
 </code></pre>
<p>
A string binding contains the character representation of a binding handle and sometimes portions of a binding handle. String bindings are convenient for representing portions of a binding handle, but they can't be used for making remote procedure calls. They must first be converted to a binding handle by calling the <b>RpcBindingFromStringBinding</b> routine.</p>
<p>
Additionally, a string binding does not contain all of the information from a binding handle. For example, the authentication information, if any, associated with a binding handle is not translated into the string binding returned by calling the <b>RpcBindingToStringBinding</b> routine.</p>
<p>
During the development of a distributed application, servers can communicate their binding information to clients using string bindings to establish a client-server relationship without using the endpoint-map database or name-service database. To establish such a relationship, use the function <b>RpcBindingToStringBinding</b> to convert one or more binding handles from a binding-handle vector to a string binding, and provide the string binding to the client.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_4jtz.htm"><b>RpcBindingFromStringBinding</b></a>, <a href="pr-func1_6hyf.htm"><b>RpcBindingToStringBinding</b></a>, <a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a></p>
<p>&nbsp;</p></body>
</HTML>
