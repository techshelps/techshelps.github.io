<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcBindingCopy</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcbindingcopy"></a>RpcBindingCopy</h1>
<p>
The <b>RpcBindingCopy</b> function copies binding information and creates a new binding handle.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcBindingCopy( 
  RPC_BINDING_HANDLE </b><i> SourceBinding</i><b>,</b>        
<b>  RPC_BINDING_HANDLE * </b><i> DestinationBinding  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>SourceBinding</i></dt>
<dd>
Specifies the server binding handle whose referenced binding information is copied.</dd>
<dt>
<i>DestinationBinding</i></dt>
<dd>
Returns a pointer to the server binding handle that refers to the copied binding information.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>Note</b>&nbsp;&nbsp;Microsoft RPC supports <b>RpcBindingCopy</b> only in client applications, not in server applications.</p>
<p>
The <b>RpcBindingCopy</b> routine copies the server-binding information referenced by the <i>SourceBinding</i> argument. <b>RpcBindingCopy</b> uses the <i>DestinationBinding</i> argument to return a new server binding handle for the copied binding information. <b>RpcBindingCopy</b> also copies the authentication information from the <i>SourceBinding</i> argument to the <i>DestinationBinding</i> argument.</p>
<p>
An application uses <b>RpcBindingCopy</b> when it wants to keep a change made to binding information by one thread from affecting the binding information used by other threads.</p>
<p>
Once an application calls <b>RpcBindingCopy</b>, operations performed on the <i>SourceBinding</i> binding handle do not affect the binding information referenced by the <i>DestinationBinding</i> binding handle. Similarly, operations performed on the <i>DestinationBinding</i> binding handle do not affect the binding information referenced by the <i>SourceBinding</i> binding handle.</p>
<p>
If an application wants one thread's changes to binding information to affect the binding information used by other threads, the application should share a single binding handle across the threads. In this case, the application is responsible for binding-handle concurrency control.</p>
<p>
When an application is finished using the binding handle specified by the <i>DestinationBinding</i> argument, the application should call the <b>RpcBindingFree</b> routine to release the memory used by the <i>DestinationBinding</i> binding handle and its referenced binding information.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>RPC_S_OK</td>
<td width=50%>Success</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_INVALID_BINDING</td>
<td width=50%>Invalid binding handle</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=50%>Wrong kind of binding for operation</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_86n9.htm"><b>RpcBindingFree</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
