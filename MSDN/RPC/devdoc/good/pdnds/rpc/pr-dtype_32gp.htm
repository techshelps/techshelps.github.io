<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RPC_POLICY</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpc_policy"></a>RPC_POLICY</h1>
<p>
The RPC_POLICY structure contains flags that determine port allocation and binding to multi-homed machines, over the <b>ncacn_ip_tcp </b>and <b>ncadg_ip_udp </b>protocols, and message queue properties, over the <b>ncadg_mq </b>protocol.</p>
<pre><code>typedef struct _RPC_POLICY {
    unsigned int<i> Length</i>;
    unsigned long <i>EndpointFlags</i>;
    unsigned long <i>NICFlags</i>;
}   RPC_POLICY, __RPC_FAR  *  PRPC_POLICY;
 </code></pre>
<dl>
<dt>
<i>Length</i></dt>
<dd>
The size, in bytes, of the RPC_POLICY structure. </dd>
<dt>
<i>EndpointFlags</i></dt>
<dd>
A set of flags that determine the attributes of the port or ports where the server receives remote procedure calls. See the following Members section for a description of valid flags.</dd>
<dt>
<i>NICFlags</i></dt>
<dd>
Controls binding to network interface cards (NICs). See the following Members section for a description of valid flags.
</dd>
</dl>
<h4>Remarks</h4>
<p>
You can use the RPC_Policy structure to set policies for remote procedure calls at run time. These policies include:
<ul>
<li>
Message Queuing: Allows the server to specify message-queuing properties, such as security, quality of delivery, and the lifetime of the server process queue. This policy is only effective for remote calls over the message-queuing transport (<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_mq">
</object><a href=JavaScript:alink_1.Click()><b>ncadg_mq</b></a>).</li>
<li>
Port allocation for dynamic ports: You can select the endpoint from the ports or sets of ports that are defined in the system registry as being Internet-available, or intranet-available. </li>
<li>
Selective binding: Allows multihomed machines to bind selectively to Network Interface Cards (NICs). </li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;Port allocation and selective binding policies are effective only for remote calls over TCP (<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_ip_tcp">
</object><a href=JavaScript:alink_2.Click()><b>ncacn_ip_tcp</b></a>) and UDP (<b>ncadg_ip_udp</b>) connections. For more information, see <a href="ov-cnfig_7x47.htm">Configuring the Windows NT Registry for Port Allocations and Selective Binding</a>.</p>
<h4>Members</h4>
<p>
The <i>Length</i> member allows compatibility with future versions of this structure, which may contain additional fields. Always set the <i>Length </i>equal to sizeof(RPC_POLICY) when you initialize the RPC_POLICY structure in your code.</p>
<p>
The <i>EndpointFlags</i> member controls endpoint assignments. You can specify more than one flag (by OR-ing them) from the set of values for a given protocol sequence. The following table lists the possible values for the <i>EndpointFlags</i> member:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=42%>Value </th>
<th align=left width=58%>Description</th>
</tr>
<tr valign=top>
<td width=42%>0</td>
<td width=58%>Specifies the system default</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_USE_INTERNET_PORT</td>
<td width=58%>Allocate endpoint from one of the ports defined in the Registry as "Internet Available". Valid only with <b>ncacn_ip_tcp</b> and <b>ncadg_ip_udp</b> protocol sequences.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_USE_INTRANET_PORT</td>
<td width=58%>Allocate endpoint from one of the ports defined in the Registry as "Intranet Available". Valid only with <b>ncacn_ip_tcp</b> and <b>ncadg_ip_udp</b> protocol sequences.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_TEMPORARY</td>
<td width=58%>The server process receive queue will be deleted automatically when the RPC server exits. Any outstanding calls still in the queue will be lost. This is the default. Valid only with the <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_PERMANENT</td>
<td width=58%>Specifies that the server-process receive queue persists after the server process exits. The default is that the queue is deleted when the server process terminates. Valid only with <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_CLEAR_ON_OPEN</td>
<td width=58%>If the receive queue already exists because it was opened previously as a permanent queue, then clear any outstanding calls waiting in the queue. Valid only with the <b>ncadg_mq</b> protocol sequence only</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_USE_EXISTING<br>
_SECURITY</td>
<td width=58%>If the receive queue already exists, then don't modify its existing settings for authentication or encryption. Valid only with the <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_AUTHENTICATE</td>
<td width=58%>The server-process receive queue accepts only authenticated calls from clients. The default is that both authenticated and unauthenticated calls are accepted.Valid only with <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_ENCRYPT</td>
<td width=58%>Calls to server are encrypted. The default is that both encrypted and unencrypted calls are accepted.. Valid only with <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_AUTHN_LEVEL<br>
_NONE</td>
<td width=58%>The server's receive queue accepts all calls from clients. This is the default authentication level. Valid only with the <b>ncadg_mq</b> protocol.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_AUTHN_LEVEL<br>
_PKT_INTEGRITY</td>
<td width=58%>Sets the server's receive queue to only accept client calls which have authentication level RPC_C_AUTHN_LEVEL_PKT_INTEGRITY or RPC_C_AUTHN_LEVEL_PKT_PRIVACY. Valid only with the <b>ncadg_mq</b> protocol sequence.</td>
</tr>
<tr valign=top>
<td width=42%>RPC_C_MQ_AUTHN_LEVEL<br>
_PKT_PRIVACY</td>
<td width=58%>Sets the server's receive queue to only accept client calls which have authentication level RPC_C_AUTHN_LEVEL_PKT_PRIVACY. Calls with a lower authentication level are ignored. Valid only with the <b>ncadg_mq</b> protocol sequence.</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;If the registry does not contain any of the keys that specify the default policies, then the <i>EndpointFlags</i> member will have no effect at run time. If a key is missing or contains an invalid value, then the entire configuration for that protocol (<b>ncacn_ip_tcp/ncadg_ip_udp</b> or <b>ncadg_mq</b>) is marked as invalid and all calls to <b>RpcServerUseProtseq*(</b> <b>)</b> over that protocol will fail.</p>
<p>
The <i>NICFlags</i> member specifies the policy for binding to Network Interface Cards (NICs). The following table lists the possible values for the <i>NICFlags</i> member:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value </th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%></td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%>0</td>
<td width=52%>Bind to NICs on the basis of the registry settings. Always use this value when you are using the RPC_POLICY structure to define message-queue properties.</td>
</tr>
<tr valign=top>
<td width=48%>RPC_C_BIND_TO_ALL_NICS</td>
<td width=52%>Override the registry settings and bind to all NICs. If the Bind key is missing from the registry, then the <i>NICFlags</i> member will have no effect at run time. If the key contains an invalid value, then the entire configuration is marked as invalid and all calls to <b>RpcServerUseProtseq</b>* will fail.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="ov-messq_5hlz.htm">RPC Message Queuing</a>, <a href="ov-cnfig_7x47.htm">Configuring the Windows NT Registry for Port Allocations and Selective Binding</a>, <a href="pr-func2_27y0.htm"><b>RpcServerUseAllProtseqsEx</b></a>, <a href="pr-func2_6xq0.htm"><b>RpcServerUseAllProtseqsIfEx</b></a>, <a href="pr-func2_38l4.htm"><b>RpcServerUseProtseqEx</b></a>, <a href="pr-func2_4drs.htm"><b>RpcServerUseProtseqEpEx</b></a>, <a href="pr-func2_5z94.htm"><b>RpcServerUseProtseqIfEx</b></a></p>
<p>&nbsp;</p></body>
</HTML>
