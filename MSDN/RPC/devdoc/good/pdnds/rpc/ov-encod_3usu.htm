<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynamic Buffer Serialization</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_rpc_dynamic_buffer_serialization"></a>Dynamic Buffer Serialization</h3>
<p>
When using the dynamic buffer style of serialization, the marshalling buffer is allocated by the stub and the data is encoded into this buffer and passed back to you. When unmarshalling, you supply the buffer that contains the data.</p>
<p>
The dynamic buffer style of serialization uses the following routines:
<ul>
<li>
MesEncodeDynBufferHandleCreate</li>
<li>
MesDecodeBufferHandleCreate</li>
<li>
MesBufferHandleReset</li>
<li>
MesHandleFree</li>
</ul>
<p>
<a href="pr-func1_2t0l.htm"><b>MesEncodeDynBufferHandleCreate</b></a> allocates the memory needed for the encoding handle and then initializes it. It has the following prototype:</p>
<pre><code>RPC_STATUS RPC_ENTRY MesEncodeDynBufferHandleCreate (
    char **pBuffer,                 /* pointer to buffer containing
                                    /* encoded data */
    unsigned long *pEncodedSize,    /* pointer to size of buffer
                                    /* containing encoded data */
    handle_t *pHandle);             /* pointer to the new handle */
 </code></pre>
<p>
The application can call the <b>MesBufferHandleReset</b> function to reinitialize the handle, or it can call the <b>MesHandleFree</b> function to free the handle's memory. To create a decoding handle corresponding to the dynamic buffer encoding handle, use the <b>MesDecodeBufferHandleCreate</b> routine. For prototypes of these routines, see <a href="ov-encod_5sq6.htm">Fixed Buffer Serialization</a>.  </p>
<p>&nbsp;</p></body>
</HTML>
