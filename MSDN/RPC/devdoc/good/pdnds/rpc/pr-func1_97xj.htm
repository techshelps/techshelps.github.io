<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcMgmtStopServerListening</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcmgmtstopserverlistening"></a>RpcMgmtStopServerListening</h1>
<p>
The <b>RpcMgmtStopServerListening</b> function tells a server to stop listening for remote procedure calls. This function will not affect auto-listen interfaces. See <b>RpcServerRegisterIfEx</b> for more details.</p>
<p>
This function is supported by both server platforms — Windows NT and Windows 95. </p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcMgmtStopServerListening( 
  RPC_BINDING_HANDLE </b><i> Binding  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Binding</i></dt>
<dd>
To direct a remote application to stop listening for remote procedure calls, specify a server binding handle for that application. To direct your own (local) application to stop listening for remote procedure calls, specify a value of NULL.
</dd>
</dl>
<h4>Remarks</h4>
<p>
An application calls the <b>RpcMgmtStopServerListening</b> routine to direct a server to stop listening for remote procedure calls. If <i>DontWait</i> was true, the application should call <b>RpcMgmtWaitServerListen</b> to wait for all calls to complete.</p>
<p>
When it receives a stop-listening request, the RPC run-time library stops accepting new remote procedure calls for all registered interfaces. Executing calls are allowed to complete, including callbacks.</p>
<p>
After all calls complete, the <b>RpcServerListen</b> routine returns to the caller. If <i>DontWait</i> is true, the application calls <b>RpcMgmtWaitServerListen</b> for all calls to complete.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>RPC_S_OK</td>
<td width=46%>Success</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_INVALID_BINDING</td>
<td width=46%>Invalid binding handle</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=46%>Wrong kind of binding for operation</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;From the client-side, <b>RpcMgmtStopServerListening </b>is disabled by default. To enable this routine, create an authorization function in your server application that returns TRUE (to allow a remote shutdown) whenever <b>RpcMgmtStopServerListening </b>is called. Use <a href="pr-func1_5pm6.htm"><b>RpcMgmtSetAuthorizationFn</b></a> to give the client access to the management function.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_89gn.htm"><b>RpcEpResolveBinding</b></a>, <a href="pr-func1_8fxq.htm"><b>RpcMgmtWaitServerListen</b></a>, <a href="pr-func2_8ffy.htm"><b>RpcServerListen</b></a>, <a href="pr-func2_9prs.htm"><b>RpcServerRegisterIfEx</b></a></p>
<p>&nbsp;</p></body>
</HTML>
