<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Entry-Point Vectors</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_entry_point_vectors"></a>Entry-Point Vectors</h2>
<p>
The manager EPV is an array of function pointers that point to implementations of the functions specified in the IDL file. The number of elements in the array corresponds to the number of functions specified in the IDL file. Microsoft RPC supports multiple entry-point vectors representing multiple implementations of the functions specified in the interface.</p>
<p>
The MIDL compiler automatically generates a manager EPV data type for use in constructing manager EPVs. The data type is named <i>if-name</i><b>_SERVER_EPV</b>, where <i>if-name</i> specifies the interface identifier in the IDL file. </p>
<p>
The MIDL compiler automatically creates and initializes a default manager EPV on the assumption that a manager routine of the same name exists for each procedure in the interface and is specified in the IDL file.</p>
<p>
When a server offers multiple implementations of the same interface, the server must create one additional manager EPV for each implementation. Each EPV must contain exactly one entry point (address of a function) for each procedure defined in the IDL file. The server application declares and initializes one manager EPV variable of type <i>if-name</i><b>_SERVER_EPV</b> for each additional implementation of the interface. It registers the EPVs by calling <a href="pr-func2_9prs.htm"><b>RpcServerRegisterIfEx</b></a> or <a href="pr-func2_25ye.htm"><b>RpcServerRegisterIf</b></a> once for each supported object type.</p>
<p>
When the client makes a remote procedure call to the server, the EPV containing the function pointer is selected based on the interface UUID and the object type. The object type is derived from the object UUID by the object-inquiry function or the table-driven mapping controlled by <a href="pr-func2_1n8l.htm"><b>RpcObjectSetType</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
