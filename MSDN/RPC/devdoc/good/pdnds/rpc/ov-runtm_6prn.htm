<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Naming Conventions for RPC Functions</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_naming_conventions_for_api_functions"></a>Naming Conventions for RPC Functions</h1>
<p>
RPC function names generally consist of the prefix "Rpc," an object name, and a verb that describes an operation on that object. The functions, with some exceptions, are named as shown:</p>
<p>
<b>Rpc</b><i>ObjectOperation</i>
<dl>
<dt>
<i>Object</i></dt>
<dd>
Specifies a term that identifies an RPC object; a data structure defined by the RPC function.</dd>
<dt>
<i>Operation</i></dt>
<dd>
Specifies an operation that is performed on the object specified by <i>Object</i>.
</dd>
</dl>
<p>
Functions that operate on UUID objects omit the prefix "Rpc" and start with the object name "Uuid."</p>
<p>
The functions provided with this version of Microsoft RPC operate on the following objects:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=34%><br>
Object</th>
<th align=left width=24%>Object in <br>
function name</th>
<th align=left width=42%><br>
Example</th>
</tr>
<tr valign=top>
<td width=34%>Binding handle</td>
<td width=24%><b>Binding</b></td>
<td width=42%><a href="pr-func1_86n9.htm"><b>RpcBindingFree</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Endpoint</td>
<td width=24%><b>Ep</b></td>
<td width=42%><a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Interface</td>
<td width=24%><b>If</b></td>
<td width=42%><a href="pr-func1_63dw.htm"><b>RpcIfInqId</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Management</td>
<td width=24%><b>Mgmt</b></td>
<td width=42%><a href="pr-func1_97xj.htm"><b>RpcMgmtStopServerListening</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Name-service group entry</td>
<td width=24%><b>NsGroup</b></td>
<td width=42%><a href="pr-func2_3m5h.htm"><b>RpcNsGroupDelete</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Name-service management</td>
<td width=24%><b>NsMgmt</b></td>
<td width=42%><a href="pr-func2_7ch1.htm"><b>RpcNsMgmtEntryCreate</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Name-service profile entry</td>
<td width=24%><b>NsProfile</b></td>
<td width=42%><a href="pr-func2_1ois.htm"><b>RpcNsProfileEltAdd</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Name-service server entry</td>
<td width=24%><b>NsBinding</b></td>
<td width=42%><a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Network</td>
<td width=24%><b>Network</b></td>
<td width=42%><a href="pr-func1_7lwz.htm"><b>RpcNetworkInqProtseqs</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Object, type UUID mapping</td>
<td width=24%><b>Object</b></td>
<td width=42%><a href="pr-func2_1n8l.htm"><b>RpcObjectSetType</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Protocol-sequence vector</td>
<td width=24%><b>ProtseqVector</b></td>
<td width=42%><a href="pr-func2_5ulh.htm"><b>RpcProtseqVectorFree</b></a></td>
</tr>
<tr valign=top>
<td width=34%>Server</td>
<td width=24%><b>Server</b></td>
<td width=42%><a href="pr-func2_8ffy.htm"><b>RpcServerListen</b></a></td>
</tr>
<tr valign=top>
<td width=34%>String</td>
<td width=24%><b>String</b></td>
<td width=42%><a href="pr-func2_4mud.htm"><b>RpcStringFree</b></a></td>
</tr>
<tr valign=top>
<td width=34%>String binding</td>
<td width=24%><b>StringBinding</b></td>
<td width=42%><a href="pr-func2_712d.htm"><b>RpcStringBindingCompose</b></a></td>
</tr>
<tr valign=top>
<td width=34%>UUID</td>
<td width=24%><b>Uuid</b></td>
<td width=42%><a href="pr-func2_7a3p.htm"><b>UuidCreate</b></a></td>
</tr>
</table><br>
<h4>Note for OSF-DCE Programmers</h4>
<p>
Microsoft RPC function names are derived by converting the first character of the OSF-DCE RPC function name, and every character that follows an underscore character, to uppercase and then removing underscore characters. For example, the OSF-DCE function <b>rpc_server_use_all_protseqs_if</b> is named <a href="pr-func2_284m.htm"><b>RpcServerUseAllProtseqsIf</b></a> in Microsoft RPC. </p>
<p>
Microsoft data-structure names are derived from the OSF-DCE names by converting all characters to uppercase and removing the trailing suffix <b>_t</b>. For example, the OSF-DCE data structure <b>rpc_binding_vector_t</b> is named <a href="pr-dtype_6tyq.htm"><b>RPC_BINDING_VECTOR</b></a> in Microsoft RPC. </p>
<p>
In the header files provided in Microsoft RPC, each RPC function that takes character-string parameters appears in two forms: followed by the suffix "A" and followed by the suffix "W." The "A" suffix represents the ASCII-character string version of the function and the "W" suffix represents the wide-character string version. The identifier UNICODE determines which version of the function is selected. The standard function name is mapped to either the ASCII or the wide-character string version.</p>
<p>
Wide-character versions of the RPC functions are selected when you define the identifier UNICODE. You can define the identifier either with a <b>#define</b> preprocessor directive or with the <b>/D</b> option of the Microsoft C/C++ version 7.0 compiler. For example: </p>
<pre><code>#define UNICODE
main()
 
cl /DUNICODE filename.c
 </code></pre>
<p>
You can use the wide-character version of a function on one side of the distributed application and the ASCII version on the other side. You do not need to use the same versions of the functions with both the client and server applications. You can use both versions in the same application.</p>
<p>&nbsp;</p></body>
</HTML>
