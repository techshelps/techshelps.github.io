<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACF Attributes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_acf_attributes"></a>ACF Attributes</h1>

<h4><a name="_rpc_the_include_declaration"></a>The include Declaration</h4>
<p>
The <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_include">
</object><a href=JavaScript:alink_1.Click()><b>include</b></a> statement specifies one or more header files to be included in generated stub code via the C-preprocessor <b>#include</b> statement. The user must supply the C header file when compiling the stubs. The ACF <b>include</b> statement provides some flexibility in distributed application design. The <b>include</b> statement is necessary for certain types, such as <b>implicit_handle</b> types that are not defined in the IDL or its closure under <b>#include</b> and <b>import</b> directives.</p>

<h4><a name="_rpc_implicit_binding_handles"></a>Implicit Binding Handles</h4>
<p>
When an interface contains one or more functions whose first parameters are not an explicit handle and do not have an <b>in</b> or an <b>in</b>,<b> out</b> context handle bound to a remote address space, an implicit handle is needed. The <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_implicit_handle">
</object><a href=JavaScript:alink_2.Click()><b>implicit_handle</b></a> and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_auto_handle">
</object><a href=JavaScript:alink_3.Click()><b>auto_handle</b></a> attributes provide this capability.</p>
<p>
The <b>implicit_handle</b> attribute specifies a global variable that is used as the RPC binding handle for all calls without a binding parameter.</p>
<p>
The <b>auto_handle</b> attribute indicates that any function needing implicit handles is automatically bound. When no binding handle to a server exists just prior to calling the function for the first time, the stub automatically establishes a binding handle for the call. </p>
<p>
Either<b> auto_handle or implicit_handle</b> can appear, but not both. When a function in the interface requires an implicit handle and no ACF is supplied, or the supplied ACF does not specify either <b>implicit_handle</b> or <b>auto_handle</b>, the MIDL compiler uses <b>auto_handle</b> and issues an informational message.</p>

<h4><a name="_rpc_the_code_and_nocode_attributes"></a>The code and nocode Attributes</h4>
<p>
If <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_code">
</object><a href=JavaScript:alink_4.Click()><b>code</b></a> appears in the interface attribute list, client stub code is generated for any function in the interface that does not appear in the ACF with a <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_nocode">
</object><a href=JavaScript:alink_5.Click()><b>nocode</b></a> in its function attribute list and which does not have a <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_local">
</object><a href=JavaScript:alink_6.Click()><b>local</b></a> attribute.</p>
<p>
If <b>nocode</b> appears in the interface attribute list, stub code is generated only for functions in the interface that appear in the ACF with a <b>code</b> in their function attribute lists and which do not have a <b>local</b> attribute.</p>
<p>
The <b>nocode</b> attribute is ignored when server stubs are generated. Applying <b>nocode</b> when generating server stubs in DCE-compatibility mode is an error. Either <b>code</b> or <b>nocode</b> can appear in an function attribute list, but not both.</p>

<h4><a name="_rpc_the_allocate_attribute"></a>The allocate Attribute</h4>
<p>
The <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_allocate">
</object><a href=JavaScript:alink_7.Click()><b>allocate</b></a> attribute allows you to customize the allocation and deallocation patterns used by the application and stubs. It can be applied to pointer types as a type attribute or as an interface attribute. When it occurs as an interface attribute, it affects all pointer parameters and types in the interface.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>allocate attribute</th>
<th align=left width=65%>Description</th>
</tr>
<tr valign=top>
<td width=35%><b>allocate(single_node)</b></td>
<td width=65%>Storage for each node on both the caller and callee side is allocated separately by calling <a href="ov-memmg_3rhh.htm"><b>midl_user_allocate</b></a>.</td>
</tr>
<tr valign=top>
<td width=35%><b>allocate(all_nodes)</b></td>
<td width=65%>The size of the total graph (or tree) is precomputed by the stub and <a href="ov-memmg_3rhh.htm"><b>midl_user_allocate</b></a> is called once to allocate sufficient memory for all nodes in the graph upon return from a remote call. In this case, application code has to release this storage by making a single call to <a href="ov-memmg_404l.htm"><b>midl_user_free</b></a>.</td>
</tr>
<tr valign=top>
<td width=35%><b>allocate(free)</b></td>
<td width=65%>Storage allocated for nodes on the callee side is freed by stubs upon return from the manager code. </td>
</tr>
<tr valign=top>
<td width=35%><b>allocate(dont_free)</b></td>
<td width=65%>Storage allocated for nodes on the server side is not deallocated by the server stub. This feature is useful for maintaining persistent pointer structures as part of the server application.</td>
</tr>
</table><br>

<h4><a name="_rpc_the_byte_count_attribute"></a>The byte_count Attribute</h4>
<p>
The <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_byte_count">
</object><a href=JavaScript:alink_8.Click()><b>byte_count</b></a> ACF attribute associates a pointer parameter with another parameter that specifies the size in bytes of the memory area indicated by the pointer. Memory referenced by the pointer parameter is contiguous and is not allocated or freed by the client stubs. This feature of the <b>byte_count</b> attribute lets the developer create a persistent buffer area in client memory that can be reused across multiple calls.</p>
<p>
The parameter providing the buffer must be an <object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_out_idl">
</object><a href=JavaScript:alink_9.Click()><b>out</b></a> pointer parameter and the parameter providing the length in bytes must be an <object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_in">
</object><a href=JavaScript:alink_10.Click()><b>in</b></a> parameter of integral type. The <b>byte_count</b> attribute cannot be specified on a parameter that has the size attributes (<object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_size_is">
</object><a href=JavaScript:alink_11.Click()><b>size_is</b></a>,<b> <object id=alink_12 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_max_is">
</object><a href=JavaScript:alink_12.Click()>max_is</a></b>) applied to it.</p>
<p>&nbsp;</p></body>
</HTML>
