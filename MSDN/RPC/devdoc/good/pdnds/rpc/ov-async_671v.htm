<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous Pipes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_asynchronous_pipes"></a>Asynchronous Pipes</h1>
<p>
Using <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_pipe">
</object><a href=JavaScript:alink_1.Click()><b>pipe</b></a> parameters with asynchronous RPC allows you to transmit data incrementally, as it becomes available, and without tying up the client and server. This is particularly useful when you have a large amount of data to transfer, combined with either a slow client, a slow server, or a slow network. Note that if you use a pipe in an asynchronous functional call, it is, by definition, an asynchronous pipe. Synchronous pipes are not supported in conjunction with asynchronous functions.</p>
<p>
Unlike conventional (synchronous) pipes where the server handles all the details of sending and receiving pipe data, asynchronous pipes are symmetrical. That is, both the client and the server can push and pull data through the pipe.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Pipe parameters can only be passed by reference. Even if the IDL file shows pipe parameters being passed by value, the generated stubs will accept pipe parameters by reference only. </p>
<p>
In the following discussion of asynchronous pipes, familiarity with the <b>pipe </b>type constructor is assumed. See <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_pipes">
</object><a href=JavaScript:alink_2.Click()>Pipes</a>, in the MIDL Programmer's Guide, for more information on the pipe procedures described in these topics.</p>
<p>&nbsp;</p></body>
</HTML>
