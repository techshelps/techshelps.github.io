<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcSmEnableAllocate</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcsmenableallocate"></a>RpcSmEnableAllocate</h1>
<p>
The <b>RpcSmEnableAllocate</b> function establishes the stub memory management environment.</p>
<pre><b><code>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcSmEnableAllocate (VOID);
</code></b></pre>
<h4>Remarks</h4>
<p>
In cases where the stub memory management is not enabled by the server stub itself, applications call the <b>RpcSmEnableAllocate</b> routine to establish the stub memory management environment. This environment must be established prior to making a call to <b>RpcSmAllocate</b>. In OSF-compatibility (/<b>osf</b>) mode, for server manager code called from the stub, the memory management environment may be established by the server stub itself by using pointer manipulation or the <b>enable_allocate</b> attribute. In default (Microsoft-extended) mode, the environment is established only upon request by using the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_enable_allocate">
</object><a href=JavaScript:alink_1.Click()><b>enable_allocate</b></a> attribute (see The <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_midl_language_reference">
</object><a href=JavaScript:alink_2.Click()><b>MIDL Reference</b></a>.) Otherwise, call <a href="#_rpc_rpcsmenableallocate"><b>RpcSmEnableAllocate</b></a> before calling <b>RpcSmAllocate</b>. See <a href="ov-memmg_1gfo.htm"><b>Memory Management</b></a> for a complete discussion of the memory management conditions used by RPC.  </p>
<p>
<a href="pr-func2_7hph.htm"><b>RpcSmGetThreadHandle</b></a> and <a href="pr-func2_2zmt.htm"><b>RpcSmSetThreadHandle</b></a> </p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>RPC_S_OK</td>
<td width=51%>Success</td>
</tr>
<tr valign=top>
<td width=49%>RPC_S_OUT_OF_MEMORY</td>
<td width=51%>Out of memory</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcndr.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func2_8wyt.htm"><b>RpcSmAllocate</b></a>, <a href="pr-func2_0llx.htm"><b>RpcSmDisableAllocate</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
