<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcBindingFromStringBinding</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcbindingfromstringbinding"></a>RpcBindingFromStringBinding</h1>
<p>
The <b>RpcBindingFromStringBinding</b> function returns a binding handle from a string representation of a binding handle.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcBindingFromStringBinding( 
  unsigned char * </b><i> StringBinding</i><b>,</b>   
<b>  RPC_BINDING_HANDLE * </b><i> Binding  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>StringBinding</i></dt>
<dd>
Points to a string representation of a binding handle.</dd>
<dt>
<i>Binding</i></dt>
<dd>
Returns a pointer to the server binding handle.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>RpcBindingFromStringBinding</b> routine creates a server binding handle from a string representation of a binding handle.</p>
<p>
The <i>StringBinding</i> argument does not have to contain an object UUID. In this case, the returned binding contains a nil UUID.</p>
<p>
If the provided <i>StringBinding</i> argument does not contain an endpoint field, the returned <i>Binding</i> argument is a partially bound binding handle.</p>
<p>
If the provided <i>StringBinding</i> argument contains an endpoint field, the endpoint is considered to be a well-known endpoint.</p>
<p>
If the provided <i>StringBinding</i> argument does not contain a host address field, the returned <i>Binding</i> argument references the local host.</p>
<p>
An application creates a string binding by calling the <b>RpcStringBindingCompose</b> routine or by providing a character-string constant.</p>
<p>
When an application is finished using the <i>Binding</i> argument, the application should call the <b>RpcBindingFree</b> routine to release the memory used by the binding handle.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=52%>Value</th>
<th align=left width=48%>Meaning</th>
</tr>
<tr valign=top>
<td width=52%>RPC_S_OK</td>
<td width=48%>Success</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_STRING_BINDING</td>
<td width=48%>Invalid string binding</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_PROTSEQ_NOT_SUPPORTED</td>
<td width=48%>Protocol sequence not supported on this host</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_RPC_PROTSEQ</td>
<td width=48%>Invalid protocol sequence</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_ENDPOINT_FORMAT</td>
<td width=48%>Invalid endpoint format</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_STRING_TOO_LONG</td>
<td width=48%>String too long</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_NET_ADDR</td>
<td width=48%>Invalid network address</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_ARG</td>
<td width=48%>Invalid argument</td>
</tr>
<tr valign=top>
<td width=52%>RPC_S_INVALID_NAF_ID</td>
<td width=48%>Invalid network-address-family ID</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_12wp.htm"><b>RpcBindingCopy</b></a>, <a href="pr-func1_86n9.htm"><b>RpcBindingFree</b></a>, <a href="pr-func1_6hyf.htm"><b>RpcBindingToStringBinding</b></a>, <a href="pr-func2_712d.htm"><b>RpcStringBindingCompose</b></a></p>
<p>&nbsp;</p></body>
</HTML>
