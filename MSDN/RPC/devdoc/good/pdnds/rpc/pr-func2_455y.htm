<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcServerUnregisterIf</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcserverunregisterif"></a>RpcServerUnregisterIf</h1>
<p>
The <b>RpcServerUnregisterIf</b> function unregisters an interface from the RPC run-time library.</p>
<p>
This function is supported by both 32-bit platforms — Windows&nbsp;NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcServerUnregisterIf( 
  RPC_IF_HANDLE </b><i> IfSpec</i><b>,                </b>
<b>  UUID * </b><i> MgrTypeUuid</i><b>,                  </b>
<b>  unsigned int </b><i> WaitForCallsToComplete  </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies the interface to unregister.
<p>
Specify a null value to unregister all interfaces previously registered with the type UUID value specified in the <i>MgrTypeUuid</i> argument.
</dd>
<dt>
<i>MgrTypeUuid</i></dt>
<dd>
Points to the type UUID of the manager entry-point vector (EPV) to unregister. The value of <i>MgrTypeUuid</i> should be the same value as was provided in a call to the <b>RpcServerRegisterIf</b> or <b>RpcServerRegisterIfEx</b> routine.
<p>
Specify a null value to unregister the interface specified in the <i>IfSpec</i> argument for all previously registered type UUIDs.

<p>
Specify a nil UUID to unregister the MIDL-generated default manager EPV. In this case, all manager EPVs registered with a non-nil type UUID remain registered.
</dd>
<dt>
<i>WaitForCallsToComplete</i></dt>
<dd>
Specifies a flag that indicates whether to unregister immediately or to wait until all current calls are complete. 
<p>
Specify a value of zero to disregard calls in progress and unregister immediately. Specify any non-zero value to wait until all active calls complete.

</dd>
</dl>
<h4>Remarks</h4>
<p>
A server calls the <b>RpcServerUnregisterIf</b> routine to remove the association between an interface and a manager EPV.</p>
<p>
Specify the manager EPV to remove in the <i>MgrTypeUuid</i> argument by providing the type UUID value that was specified in a call to the <b>RpcServerRegisterIf</b> routine. Once unregistered, an interface is no longer available to client applications.</p>
<p>
When an interface is unregistered, the RPC run-time library stops accepting new calls for that interface. Executing calls on the interface are allowed to complete, including callbacks.</p>
<p>
The following table summarizes the behavior of <b>RpcServerUnregisterIf</b>:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=21%>IfSpec</th>
<th align=left width=26%>MgrTypeUuid</th>
<th align=left width=53%>Behavior</th>
</tr>
<tr valign=top>
<td width=21%>Non-null</td>
<td width=26%>Non-null</td>
<td width=53%>Unregisters the manager EPV associated with the specified arguments.</td>
</tr>
<tr valign=top>
<td width=21%>Non-null</td>
<td width=26%>NULL</td>
<td width=53%>Unregisters all manager EPVs associated with the <i>IfSpec</i> argument.</td>
</tr>
<tr valign=top>
<td width=21%>NULL</td>
<td width=26%>Non-null</td>
<td width=53%>Unregisters all manager EPVs associated with the <i>MgrTypeUuid</i> argument.</td>
</tr>
<tr valign=top>
<td width=21%>NULL</td>
<td width=26%>NULL</td>
<td width=53%>Unregisters all manager EPVs. This call has the effect of preventing the server from receiving any new remote procedure calls because all the manager EPVs for all interfaces have been unregistered.</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;If <i>IfSpec</i> is NULL, this function will leave auto-listen interfaces registered. Auto-listen interfaces must be individually unregistered. See <b>RpcServerRegisterIfEx</b> for more details.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=47%>Value</th>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td width=47%>RPC_S_OK</td>
<td width=53%>Success</td>
</tr>
<tr valign=top>
<td width=47%>RPC_S_UNKNOWN_MGR_TYPE</td>
<td width=53%>Unknown manager type</td>
</tr>
<tr valign=top>
<td width=47%>RPC_S_UNKNOWN_IF</td>
<td width=53%>Unknown interface</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func2_25ye.htm"><b>RpcServerRegisterIf</b></a>, <a href="pr-func2_9prs.htm"><b>RpcServerRegisterIfEx</b></a></p>
<p>&nbsp;</p></body>
</HTML>
