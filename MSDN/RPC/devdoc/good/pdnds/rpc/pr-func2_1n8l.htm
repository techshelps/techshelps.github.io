<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcObjectSetType</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcobjectsettype"></a>RpcObjectSetType</h1>
<p>
The <b>RpcObjectSetType</b> function assigns the type of an object.</p>
<p>
This function is supported by both 32-bit platforms — Windows&nbsp;NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcObjectSetType( 
  UUID * </b><i> ObjUuid</i><b>,  </b>
<b>  UUID * </b><i> TypeUuid  </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ObjUuid</i></dt>
<dd>
Points to an object UUID to associate with the type UUID in the <i>TypeUuid</i> argument.</dd>
<dt>
<i>TypeUuid</i></dt>
<dd>
Points to the type UUID of the <i>ObjUuid</i> argument.
<p>
Specify an argument value of NULL or a nil UUID to reset the object type to the default association of object UUID/nil type UUID.

</dd>
</dl>
<h4>Remarks</h4>
<p>
A server application calls the <b>RpcObjectSetType</b> routine to assign a type UUID to an object UUID.</p>
<p>
By default, the RPC run-time library automatically assigns all object UUIDs with the nil type UUID. A server application that contains one implementation of an interface (one manager entry-point vector [EPV]) does not need to call <b>RpcObjectSetType</b> provided the server registered the interface with the nil type UUID (see <a href="pr-func2_25ye.htm"><b>RpcServerRegisterIf</b></a>).</p>
<p>
A server application that contains multiple implementations of an interface (multiple manager EPVs&nbsp;—&nbsp;that is, multiple type UUIDs) calls <b>RpcObjectSetType</b> once for each different object UUID/non-nil type UUID association the server supports. Associating each object with a type UUID tells the RPC run-time library which manager EPV (interface implementation) to use when the server receives a remote procecure call for a non-nil object UUID.</p>
<p>
The RPC run-time library allows an application to set the type for an unlimited number of objects.</p>
<p>
To remove the association between an object UUID and its type UUID (established by calling <b>RpcObjectSetType</b>), a server calls <b>RpcObjectSetType</b> again specifying a null value or a nil UUID for the <i>TypeUuid</i> argument. This resets the object UUID/type UUID association to the default association of object UUID/nil type UUID.</p>
<p>
A server cannot assign a type to the nil object UUID. The RPC run-time library automatically assigns the nil object UUID a nil type UUID.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>RPC_S_OK</td>
<td width=50%>Success</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_INVALID_OBJECT</td>
<td width=50%>Invalid object</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_ALREADY_REGISTERED</td>
<td width=50%>Object already registered</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func2_25ye.htm"><b>RpcServerRegisterIf</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
