<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcBindingReset</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcbindingreset"></a>RpcBindingReset</h1>
<p>
The <b>RpcBindingReset</b> function resets a binding handle so that the host is specified but the server on that host is unspecified.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcBindingReset( 
  RPC_BINDING_HANDLE</b><i> Binding  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Binding</i></dt>
<dd>
Specifies the server binding handle to reset.
</dd>
</dl>
<h4>Remarks</h4>
<p>
A client calls the <b>RpcBindingReset</b> routine to disassociate a particular server instance from the server binding handle specified in the <i>Binding</i> argument. The <b>RpcBindingReset</b> routine dissociates a server instance by removing the endpoint portion of the server address in the binding handle. The host remains unchanged in the binding handle. The result is a partially bound server binding handle.</p>
<p>
<b>RpcBindingReset</b> does not affect the <i>Binding</i> argument's authentication information, if there is any.</p>
<p>
If a client is willing to be serviced by any compatible server instance on the host specified in the binding handle, the client calls the <b>RpcBindingReset</b> routine before making a remote procedure call using the <i>Binding</i> binding handle.</p>
<p>
When the client makes the next remote procedure call using the reset (partially bound) binding, the client's RPC run-time library uses a well-known endpoint from the client's interface specification, if any. Otherwise, the client's run-time library automatically communicates with the endpoint-mapping service on the specified remote host to obtain the endpoint of a compatible server from the endpoint-map database. If a compatible server is located, the RPC run-time library updates the binding with a new endpoint. If a compatible server is not found, the remote procedure call fails. For calls using a connection protocol (ncacn), the RPC_S_NO_ENDPOINT_FOUND status code is returned to the client. For calls using a datagram protocol (ncadg), the RPC_S_COMM_FAILURE status code is returned to the client.</p>
<p>
Server applications should register all binding handles by calling <b>RpcEpRegister</b> and <b>RpcEpRegisterNoReplace</b> if the server wants to be available to clients that make a remote procedure call on a reset binding handle.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>RPC_S_OK</td>
<td width=46%>Success</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_INVALID_BINDING</td>
<td width=46%>Invalid binding handle</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=46%>Wrong kind of binding for operation</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a>, <a href="pr-func1_452d.htm"><b>RpcEpRegisterNoReplace</b></a></p>
<p>&nbsp;</p></body>
</HTML>
