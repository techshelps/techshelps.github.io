<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcNsBindingUnexport</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcnsbindingunexport"></a>RpcNsBindingUnexport</h1>
<p>
The <b>RpcNsBindingUnexport</b> function removes the binding handles for an interface and objects from an entry in the name-service database.</p>
<p>
This function is supported by Windows NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcNsBindingUnexport( 
  unsigned long </b><i> EntryNameSyntax</i><b>,</b>   
<b>  unsigned char * </b><i> EntryName</i><b>,</b>   
<b>  RPC_IF_HANDLE </b><i> IfSpec</i><b>,</b>        
<b>  UUID_VECTOR * </b><i> ObjectUuidVec  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>EntryNameSyntax</i></dt>
<dd>
Specifies an unsigned long value that indicates the syntax of the next argument, <i>EntryName</i>.
<p>
To use the syntax specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultSyntax, provide a value of RPC_C_NS_SYNTAX_DEFAULT.
</dd>
<dt>
<i>EntryName</i></dt>
<dd>
Points to the entry name from which to remove binding handles and object UUIDs.</dd>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies an interface. A null argument value indicates not to unexport any binding handles (only object UUIDs are to be unexported).</dd>
<dt>
<i>ObjectUuidVec</i></dt>
<dd>
Points to a vector of object UUIDs that the server no longer wants to offer. The application constructs this vector. A null argument value indicates there are no object UUIDs to unexport (only binding handles are to be unexported).
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=60%>Value</th>
<th align=left width=40%>Meaning</th>
</tr>
<tr valign=top>
<td width=60%>RPC_S_OK</td>
<td width=40%>Success</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_VERS_OPTION</td>
<td width=40%>Invalid version option</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NOTHING_TO_UNEXPORT</td>
<td width=40%>Nothing to unexport</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_NAME_SYNTAX</td>
<td width=40%>Invalid name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_UNSUPPORTED_NAME_SYNTAX</td>
<td width=40%>Unsupported name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INCOMPLETE_NAME</td>
<td width=40%>Incomplete name</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_ENTRY_NOT_FOUND</td>
<td width=40%>Name-service entry not found</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NAME_SERVICE_UNAVAILABLE</td>
<td width=40%>Name service unavailable</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INTERFACE_NOT_FOUND</td>
<td width=40%>Interface not found</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NOT_ALL_OBJS_UNEXPORTED</td>
<td width=40%>Not all objects unexported</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>RpcNsBindingUnexport</b> routine allows a server application to remove the following from a name-service database entry:
<ul>
<li>
All the binding handles for a specific interface</li>
<li>
One or more object UUIDs of resources</li>
<li>
Both the binding handles and object UUIDs of resources</li>
</ul>
<p>
The <b>RpcNsBindingUnexport</b> routine unexports only the binding handles that match the interface UUID and the major and minor interface version numbers found in the <i>IfSpec</i> argument.</p>
<p>
A server application can unexport the specified interface and objects in a single call to <b>RpcNsBindingUnexport</b>, or it can unexport them separately.</p>
<p>
Effective with version 5.0 of Windows NT, the RPC run-time environment uses the Active Directory as its name service database. This means that an authorized unexported entries will be removed both from the local cache, and from the Active Directory. Unauthorized unexports will only be removed from the local cache. See <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_access_control">
</object><a href=JavaScript:alink_1.Click()>Access Control</a> in the Security section of the Platform SDK documentation for more information on authorization and Access Control Lists.</p>
<p>
If <b>RpcNsBindingUnexport</b> does not find any binding handles for the specified interface, the routine returns an RPC_S_INTERFACE_NOT_FOUND status code and does not unexport the object UUIDs, if any were specified.</p>
<p>
If one or more binding handles for the specified interface are found and unexported without error, <b>RpcNsBindingUnexport</b> unexports the specified object UUIDs, if any.</p>
<p>
If any of the specified object UUIDs were not found, <b>RpcNsBindingUnexport</b> returns the RPC_S_NOT_ALL_OBJS_UNEXPORTED status code.</p>
<p>
In addition to calling <b>RpcNsBindingUnexport</b>, a server should also call the <b>RpcEpUnregister</b> routine to unregister the endpoints the server previously registered with the local endpoint-map database.</p>
<p>
Use <b>RpcNsBindingUnexport</b> judiciously. To keep an automatically activated server available, you must leave its binding handles in the name-service database between the times when server processes are activated. However, with dynamic bindings, if you do not unexport binding handles, the Active Directory can become so large as to be unmanageable  </p>
<p>
Therefore, before you call this routine, keep in mind how long you expect the server to be unavailable, and the type of binding in use. If you are using static bindings, reserve this routine for when you expect a server to be unavailable for an extended time&nbsp;—&nbsp;for example, when it is being permanently removed from service.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Name-service databases are designed to be relatively stable. In replicated name-service databases, frequent use of the <b>RpcNsBindingExport</b> and <b>RpcNsBindingUnexport</b> routines causes the name-service database to repeatedly remove and replace the same entry and can cause performance problems.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcnsi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcns4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_8pwy.htm"><b>RpcEpUnregister</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
