<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcNsBindingLookupBegin</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcnsbindinglookupbegin"></a>RpcNsBindingLookupBegin</h1>
<p>
The <b>RpcNsBindingLookupBegin</b> function creates a lookup context for an interface and an object.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcNsBindingLookupBegin( 
  unsigned long </b><i> EntryNameSyntax</i><b>,</b>   
<b>  unsigned char * </b><i> EntryName</i><b>,</b>   
<b>  RPC_IF_HANDLE </b><i> IfSpec</i><b>,</b>        
<b>  UUID * </b><i> ObjUuid</i><b>,</b>              
<b>  unsigned long </b><i> BindingMaxCount</i><b>,</b>   
<b>  RPC_NS_HANDLE * </b><i> LookupContext  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>EntryNameSyntax</i></dt>
<dd>
Specifies an unsigned long value that indicates the syntax of the next argument, <i>EntryName</i>.
<p>
To use the syntax specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultSyntax, provide a value of RPC_C_NS_SYNTAX_DEFAULT.
</dd>
<dt>
<i>EntryName</i></dt>
<dd>
Points to an entry name at which the search for compatible bindings begins.
<p>
To use the entry name specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultEntry, provide a null pointer or an empty string. In this case, the <i>EntryNameSyntax</i> parameter is ignored and the run-time library uses the default syntax <i>EntryName</i>.
</dd>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies a stub-generated data structure indicating the interface to look up. If the interface specification has not been exported or is of no concern to the caller, specify a null value for this argument. In this case, the bindings returned are only guaranteed to be of a compatible and supported protocol sequence and to contain the specified object UUID. The desired interface may not be supported by the contacted server.</dd>
<dt>
<i>ObjUuid</i></dt>
<dd>
Points to an optional object UUID.
<p>
For a non-nil UUID, compatible binding handles are returned from an entry only if the server has exported the specified object UUID.

<p>
For a null pointer value or a nil UUID for this argument, the returned binding handles contain one of the object UUIDs exported by the compatible server. If the server did not export any object UUIDs, the returned compatible binding handles contain a nil object UUID.
</dd>
<dt>
<i>BindingMaxCount</i></dt>
<dd>
Specifies the maximum number of bindings to return in the <i>BindingVec</i> argument from the <b>RpcNsBindingLookupNext</b> routine.
<p>
Specify a value of zero to use the default count of RPC_C_BINDING_MAX_COUNT_DEFAULT.
</dd>
<dt>
<i>LookupContext</i></dt>
<dd>
Returns a pointer to a name-service handle for use with the <b>RpcNsBindingLookupNext</b> and <b>RpcNsBindingLookupDone</b> routines.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=60%>Value</th>
<th align=left width=40%>Meaning</th>
</tr>
<tr valign=top>
<td width=60%>RPC_S_OK</td>
<td width=40%>Success</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_NAME_SYNTAX</td>
<td width=40%>Invalid name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_UNSUPPORTED_NAME_SYNTAX</td>
<td width=40%>Unsupported name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INCOMPLETE_NAME</td>
<td width=40%>Incomplete name</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_ENTRY_NOT_FOUND</td>
<td width=40%>Name-service entry not found</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NAME_SERVICE_UNAVAILABLE</td>
<td width=40%>Name service unavailable</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_OBJECT</td>
<td width=40%>Invalid object</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>RpcNsBindingLookupBegin</b> routine creates a lookup context for locating client-compatible binding handles to servers that offer the specified interface and object.</p>
<p>
Before calling the <b>RpcNsBindingLookupNext</b> routine, the client application must first call <b>RpcNsBindingLookupBegin</b> to create a lookup context. The arguments to this routine control the operation of the <b>RpcNsBindingLookupNext</b> routine.</p>
<p>
Effective with version 5.0 of Windows NT, the RPC environment uses the Active Directory as its name service database and the order in which the runtime environment performs the lookup is as follows:
<ul>
<li>
Lookup in the local cache.</li>
<li>
If entry not found in local cache, lookup in that machine's Active Directory.</li>
<li>
If entry not found on local machine, send broadcast requests to all other Active Directory Services in the domain.<br>
Note that if the entry exists in the Active Directory, but there is no information associated with the entry, the runtime will not issue this broadcast request.</li>
</ul>
<p>
When finished locating binding handles, the client application calls the <b>RpcNsBindingLookupDone</b> routine to delete the lookup context.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcnsi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcns4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_3aed.htm"><b>RpcNsBindingLookupDone</b></a>, <a href="pr-func1_8m0k.htm"><b>RpcNsBindingLookupNext</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
