<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Combining Pointer and Directional Attributes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_combining_pointer_and_directional_attributes"></a>Combining Pointer and Directional Attributes</h2>
<p>
A few caveats apply to certain combinations of directional attributes and pointer attributes.</p>

<h4><a name="_rpc_embedded_out_only_reference_pointers"></a>Embedded out-Only Reference Pointers</h4>
<p>
When you use <b>out</b>-only reference pointers in Microsoft RPC, the generated server stubs allocate only the first level of pointers accessible from the reference pointer. Pointers at deeper levels are not allocated by the stubs, but must be allocated by the server application layer.</p>
<p>
For example, consider an <b>out</b>-only array of reference pointers:</p>
<pre><code>/* IDL file (fragment) */
typedef [ref] short * PREF;

Proc1([out] PREF array[10]);
 </code></pre>
<p>
In the preceding example, the server stub allocates memory for ten pointers and sets the value of each pointer to null. The server application must allocate the memory for the ten <b>short</b> integers that are referenced by the pointers and must set the ten pointers to point to the integers.</p>
<p>
When the <b>out</b>-only data structure includes nested reference pointers, the server stubs allocate only the first pointer accessible from the reference pointer. For example:</p>
<pre><code>/* IDL file (fragment) */
typedef struct {
    [ref] small * psValue;
} STRUCT1_TYPE;

typedef struct {
    [ref] STRUCT1_TYPE * ps1;
} STRUCT_TOP_TYPE;

Proc2([out, ref] STRUCT_TOP_TYPE * psTop);
 </code></pre>
<p>
In the preceding example, the server stubs allocate the pointer psTop and the structure STRUCT_TOP_TYPE. The reference pointer ps1 in STRUCT_TOP_TYPE is set to null. The server stub does not allocate every level of the data structure, nor does it allocate the STRUCT1_TYPE or its embedded pointer, psValue.</p>

<h4><a name="_rpc_out_only_unique_pointer_parameters_not_accepted"></a>out-Only Unique or Full Pointer Parameters Not Accepted</h4>
<p>
<b>Out</b>-only unique or full pointers are not accepted by the MIDL compiler. Such specifications cause the MIDL compiler to generate an error message.</p>
<p>
The automatically generated server stub has to allocate memory for the pointer referent so the server application can store data in that memory area. According to the definition of an <b>out</b>-only parameter, no information about the parameter is transmitted from client to server. In the case of a unique pointer, which can take the value NULL, the server stub does not have enough information to correctly duplicate the unique pointer in the server's address space, nor does the stub have any information about whether the pointer should point to a valid address or whether it should be set to NULL. Therefore, this combination is not allowed.</p>
<p>
Rather than <b>out</b>, <b>unique</b> or <b>out</b>, <b>ptr</b> pointers, use <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_in">
</object><a href=JavaScript:alink_1.Click()><b>in</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_out_idl">
</object><a href=JavaScript:alink_2.Click()><b>out</b></a>, <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_unique">
</object><a href=JavaScript:alink_3.Click()><b>unique</b></a> or <b>in</b>, <b>out</b>, <b>ptr</b> pointers, or use another level of indirection such as a reference pointer that points to the valid unique or full pointer.</p>
<p>&nbsp;</p></body>
</HTML>
