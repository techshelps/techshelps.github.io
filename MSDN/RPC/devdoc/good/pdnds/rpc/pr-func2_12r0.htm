<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcServerTestCancel</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcservertestcancel"></a>RpcServerTestCancel</h1>
<p>
The server calls <b>RpcServerTestCancel</b> to test for client cancel requests. </p>
<p>
<b>#include &lt;rpc.h&gt;</b></p>
<p>
<b>RPC_STATUS RPC_ENTRY</b> <b>RpcServerTestCancel(</b></p>
<p>
<b>&nbsp;&nbsp;&nbsp;&nbsp;RPC_BINDING_HANDLE&nbsp; </b><i>BindingHandle </i><b> </b></p>
<p>
<b>&nbsp;&nbsp;&nbsp;);</b></p>
<h4>Parameters</h4>
<dl>
<dt>
<i>BindingHandle</i></dt>
<dd>
Specifies the thread on which to test for cancels. 
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=50%>Value</th>
<th align=left width=50%>Meaning</th>
</tr>
<tr valign=top>
<td width=50%>RPC_S_OK</td>
<td width=50%>The call was canceled.</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_NO_CALL_ACTIVE</td>
<td width=50%>There is no active call on the current thread. </td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_CALL_IN_PROGRESS</td>
<td width=50%>The call was not canceled.</td>
</tr>
<tr valign=top>
<td width=50%>RPC_S_INVALID_BINDING</td>
<td width=50%>The handle is not valid.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The server calls <b>RpcServerTestCancel</b> to find out if the client has requested cancellation of an outstanding call. The <i>Binding Handle </i>parameter specifies the call on which to test. If the parameter has a value of zero, the call on the current thread is tested. The server can call <b>RpcServerTestCancel(RpcAsyncGetCallHandle(</b>pAsync<b>))</b> to test for cancels using the asynchronous handle to obtain the binding handle.</p>
<h4>See Also</h4>
<p>
<a href="ov-async_1eqr.htm">Asynchronous RPC</a>, <a href="pr-dtype_876t.htm">RPC_ASYNC_STATE</a>, <a href="pr-func1_8nl8.htm"><b>RpcAsyncAbortCall</b></a>, <a href="pr-func1_3bvw.htm"><b>RpcAsyncCancelCall</b></a>, <a href="pr-func1_6pnw.htm"><b>RpcAsyncCompleteCall</b></a>, <a href="pr-func1_2d7p.htm"><b>RpcAsyncGetCallHandle</b></a>, <a href="pr-func1_76er.htm"><b>RpcAsyncGetCallStatus</b></a>, <a href="pr-func1_8mzp.htm"><b>RpcAsyncInitializeHandle</b></a>, <a href="pr-func1_2c8f.htm"><b>RpcAsyncRegisterInfo</b></a></p>
<p>&nbsp;</p></body>
</HTML>
