<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcServerUseProtseqIf</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcserveruseprotseqif"></a>RpcServerUseProtseqIf</h1>
<p>
The <b>RpcServerUseProtseqIf</b> function tells the RPC run-time library to use the specified protocol sequence combined with the endpoints in the interface specification for receiving remote procedure calls. </p>
<p>
This function is supported by both 32-bit platforms — Windows&nbsp;NT and Windows 95.</p>
<p>
For a list of Microsoft RPC's supported protocol sequences, see the reference topic <a href="pr-dtype_9omf.htm">String Binding</a> in RPC Data Types and Structures. </p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcServerUseProtseqIf( 
  unsigned char * </b><i> Protseq</i><b>,   </b>
<b>  unsigned int </b><i> MaxCalls</i><b>,   </b>
<b>  RPC_IF_HANDLE </b><i> IfSpec</i><b>,   </b>
<b>  void * </b><i> SecurityDescriptor  </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Protseq</i></dt>
<dd>
Points to a string identifier of the protocol sequence to register with the RPC run-time library.</dd>
<dt>
<i>MaxCalls</i></dt>
<dd>
Specifies the maximum number of concurrent remote procedure call requests the server wants to be able to handle.
<p>
The RPC run-time library guarantees that the server can accept at least this number of concurrent call requests. The actual number can be greater, depending on the selected protocol sequence.

<p>
Use RPC_C_PROTSEQ_MAX_REQS_DEFAULT to specify the default value.
</dd>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies the interface containing endpoint information to use in creating a binding for the protocol sequence specified in the <i>Protseq</i> argument.</dd>
<dt>
<i>SecurityDescriptor</i></dt>
<dd>
Points to an optional parameter provided for the Microsoft Windows&nbsp;NT security subsystem.
</dd>
</dl>
<h4>Remarks</h4>
<p>
<b>Note</b>&nbsp;&nbsp;The Microsoft RPC implementation of <b>RpcServerUseProtseqIf</b> includes a new, additional parameter, <i>SecurityDescriptor</i>, that does not appear in the DCE specification.</p>
<p>
A server application calls the <b>RpcServerUseProtseqIf</b> routine to register one protocol sequence with the RPC run-time library. With each protocol-sequence registration, the routine includes the endpoint-address information provided in the IDL file.</p>
<p>
To receive remote procedure call requests, a server must register at least one protocol sequence with the RPC run-time library. A server application can call this routine multiple times to register additional protocol sequences.</p>
<p>
For each protocol sequence registered by a server, the RPC run-time library creates one or more binding handles through which the server receives remote procedure call requests.</p>
<p>
The <i>MaxCalls</i> argument allows the server to specify the maximum number of concurrent remote procedure call requests the server wants to be able to handle.</p>
<p>
See <a href="ov-runtm_2usz.htm">Server Application RPC API Calls</a> for a description of the routines that a server will typically call after registering protocol sequences.</p>
<p>
To register all protocol sequences from the IDL file, a server calls the <b>RpcServerUseAllProtseqsIf</b> routine.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>RPC_S_OK</td>
<td width=44%>Success</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_PROTSEQ_NOT_FOUND</td>
<td width=44%>The endpoint for this protocol sequence not specified in the IDL file</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_PROTSEQ_NOT_SUPPORTED</td>
<td width=44%>Protocol sequence not supported on this host</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_RPC_PROTSEQ</td>
<td width=44%>Invalid protocol sequence</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_ENDPOINT_FORMAT</td>
<td width=44%>Invalid endpoint format</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_OUT_OF_MEMORY</td>
<td width=44%>Out of memory</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_SECURITY_DESC</td>
<td width=44%>Security descriptor invalid</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_3qqt.htm"><b>RpcBindingVectorFree</b></a>, <a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a>, <a href="pr-func1_452d.htm"><b>RpcEpRegisterNoReplace</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a>, <a href="pr-func2_8bhv.htm"><b>RpcServerInqBindings</b></a>, <a href="pr-func2_8ffy.htm"><b>RpcServerListen</b></a>, <a href="pr-func2_25ye.htm"><b>RpcServerRegisterIf</b></a>, <a href="pr-func2_125v.htm"><b>RpcServerUseAllProtseqs</b></a>, <a href="pr-func2_284m.htm"><b>RpcServerUseAllProtseqsIf</b></a>, <a href="pr-func2_1vsh.htm"><b>RpcServerUseProtseq</b></a>, <a href="pr-func2_38kw.htm"><b>RpcServerUseProtseqEp</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
