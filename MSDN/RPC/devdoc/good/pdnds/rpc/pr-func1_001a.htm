<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcNsBindingImportBegin</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcnsbindingimportbegin"></a>RpcNsBindingImportBegin</h1>
<p>
The <b>RpcNsBindingImportBegin</b> function creates an import context for an interface and an object.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcNsBindingImportBegin( 
  unsigned long </b><i> EntryNameSyntax</i><b>,</b>   
<b>  unsigned char * </b><i> EntryName</i><b>,</b>   
<b>  RPC_IF_HANDLE </b><i> IfSpec</i><b>,</b>        
<b>  UUID * </b><i> ObjUuid</i><b>,</b>              
<b>  RPC_NS_HANDLE * </b><i> ImportContext  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>EntryNameSyntax</i></dt>
<dd>
Specifies an unsigned long value that indicates the syntax of the next argument, <i>EntryName</i>.
<p>
To use the syntax specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultSyntax, provide a value of RPC_C_NS_SYNTAX_DEFAULT.
</dd>
<dt>
<i>EntryName</i></dt>
<dd>
Points to an entry name at which the search for compatible binding handles begins.
<p>
To use the entry name specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultEntry, provide a null pointer or an empty string. In this case, the <i>EntryNameSyntax</i> parameter is ignored and the run-time library uses the default syntax <i>EntryName</i>.
</dd>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies a stub-generated data structure indicating the interface to import. If the interface specification has not been exported or is of no concern to the caller, specify a null value for this argument. In this case, the bindings returned are only guaranteed to be of a compatible and supported protocol sequence and to contain the specified object UUID. The desired interface may not be supported by the contacted server.</dd>
<dt>
<i>ObjUuid</i></dt>
<dd>
Points to an optional object UUID.
<p>
For a non-nil UUID, compatible binding handles are returned from an entry only if the server has exported the specified object UUID.

<p>
When the <i>ObjUuid</i> argument has a null pointer value or a nil UUID, the returned binding handles contain one of the object UUIDs exported by the compatible server. If the server did not export any object UUIDs, the returned compatible binding handles contain a nil object UUID.
</dd>
<dt>
<i>ImportContext</i></dt>
<dd>
Specifies a returned name-service handle for use with the <b>RpcNsBindingImportNext</b> and <b>RpcNsBindingImportDone</b> routines.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=58%>Value</th>
<th align=left width=42%>Meaning</th>
</tr>
<tr valign=top>
<td width=58%>RPC_S_OK</td>
<td width=42%>Success</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_INVALID_NAME_SYNTAX</td>
<td width=42%>Invalid name syntax</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_UNSUPPORTED_NAME_SYNTAX</td>
<td width=42%>Unsupported name syntax</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_INCOMPLETE_NAME</td>
<td width=42%>Incomplete name</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_ENTRY_NOT_FOUND</td>
<td width=42%>Name-service entry not found</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_NAME_SERVICE_UNAVAILABLE</td>
<td width=42%>Name service unavailable</td>
</tr>
<tr valign=top>
<td width=58%>RPC_S_INVALID_OBJECT</td>
<td width=42%>Invalid object</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>RpcNsBindingImportBegin</b> routine creates an import context for importing client-compatible binding handles for servers that offer the specified interface and object.</p>
<p>
Before calling the <b>RpcNsBindingImportNext</b> routine, the client application must first call <b>RpcNsBindingImportBegin</b> to create an import context. The arguments to this routine control the operation of the <b>RpcNsBindingImportNext</b> routine.</p>
<p>
When finished importing binding handles, the client application calls the <b>RpcNsBindingImportDone</b> routine to delete the import context.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcnsi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcns4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_1145.htm"><b>RpcNsBindingImportDone</b></a>, <a href="pr-func1_6cqc.htm"><b>RpcNsBindingImportNext</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
