<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Samples</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_samples"></a>Samples</h1>
<p>
The Win32 SDK includes sample programs that demonstrate a variety of RPC concepts, as follows:
<ul>
<li>
CALLBACK demonstrates use of the <b>callback</b> attribute.</li>
<li>
CLUUID demonstrates use of the client object UUID to enable a client to select among multiple implementations of a remote procedure. </li>
<li>
DATA directory contains four programs: DUNION illustrates discriminated (nonencapsulated) unions; INOUT demonstrates <b>in</b>, <b>out</b> parameters; REPAS demonstrates the <b>represent_as</b> attribute; XMIT demonstrates the <b>transmit_as</b> attribute.</li>
<li>
DICT is a remote splay tree-based dictionary program that uses the <b>implicit_handle</b>, <b>context_handle</b>, <b>in</b>, and <b>out</b> attributes.</li>
<li>
DOCTOR is an RPC psychotherapy application that demonstrates arrays, strings, and the <b>size_is </b>attribute.</li>
<li>
DYNEPT demonstrates a client application managing its connection to the server through dynamic endpoints.</li>
<li>
DYNOUT demonstrates how to allocate memory at a server for an n-byte object and pass it back to the client as an [out]-only parameter. The client then frees the memory. This technique allows the stub to call the server without knowing in advance how much data will be returned.</li>
<li>
HANDLES directory contains three programs, AUTO, CXHNDL, USRDEF, which demonstrate <b>auto_handle</b>, <b>context_handle</b>, and generic (user-defined) handles, respectively.</li>
<li>
HELLO is a client/server implementation of "Hello, world."</li>
<li>
INTEROP demonstrates portability between OSF DCE and Microsoft® RPC.</li>
<li>
MANDEL is a distributed fractal drawing program. It uses <b>ref</b> pointers, <b>implicit_handle </b>attribute, and <b>handle_t </b>primitive types.</li>
<li>
NS directory contains the NHELLO program, which demonstrates name service usage. The CDS directory contains the files that describe the gateway protocol to the DCE Cell Directory Service (CDS).</li>
<li>
OBJECT directory contains two programs that demonstrate OLE custom interfaces. CALLAS uses the <b>call_as</b> attribute to transmit a nonremotable interface. OHELLO demonstrates correct reference counting and shutdown behavior for a multiple-use local server. OHELLO also demostrates how to use the Win32 registry functions to install a local server and a proxy DLL in the registry. </li>
<li>
PICKLE directory contains two programs: PICKLP demonstrates data procedure serialization; PICKLT demonstrates data type serialization; both programs use the <b>encode </b>and <b>decode</b> attributes.</li>
<li>
PIPES demonstrates the use of the <b>pipe </b>type constructor.</li>
<li>
RPCSSM demonstrates the rpcss memory management model.</li>
<li>
RPCSVC demonstrates the implementation of a Windows NT™ service with RPC. </li>
<li>
STROUT demonstrates how to allocate memory at a server for a two-dimensional object (an array of pointers) and pass it back to the client as an [out]-only parameter. The client then frees the memory. This technique allows the stub to call the server without knowing in advance how much data will be returned.<br>
This program also allows the user to compile either for UNICODE or ANSI.</li>
<li>
WHELLO is a client/server "Hello, World" for 16-bit Windows. Client and server applications can also run on the same Windows NT workstation.</li>
<li>
YIELD demonstrates use of the <b>RpcWinSetYieldInfo</b> API function to prevent a 16-bit Windows distributed application from blocking during lengthy remote procedure calls.</li>
</ul>
<p>
You can browse through most of these files in the Win32 SDK on-line help book Code Samples | RPC. All of the source files and makefiles for these programs are located in the Win32 SDK directory mstools\samples\rpc.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
