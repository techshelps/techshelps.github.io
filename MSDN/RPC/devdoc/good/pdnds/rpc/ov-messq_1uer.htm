<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MSMQ Security Services</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_msmq_security_services"></a>MSMQ Security Services</h1>
<p>
Synchronous RPC messages can use any of the security features available from the RPC run time. See <a href="ov-secur_6buh.htm">Security</a> for more details.</p>
<p>
Asynchronous (<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_message">
</object><a href=JavaScript:alink_1.Click()><b>message</b></a>) calls cannot use RPC security because there is no handshake between client and server. In fact, the server may not even be running at the time of the call. To access the security services provided by Microsoft Message Queue Server (MSMQ), the client application should call <a href="pr-func1_3chb.htm"><b>RpcBindingSetAuthInfo</b></a> to control the level of authentication and privacy for its calls to the server. </p>
<p>
The server application can call <a href="pr-func1_5dkk.htm"><b>RpcBindingInqAuthClient</b></a> from within a remote procedure call to determine the security level for that call. The mapping between RPC security constants and MSMQ security is:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>RPC Security Level</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=48%>RPC_AUTHN_LEVEL_NONE</td>
<td width=52%>The call is not authenticated or encrypted.</td>
</tr>
<tr valign=top>
<td width=48%>RPC_AUTHN_LEVEL_PKT_<br>
INTEGRITY</td>
<td width=52%>The call is authenticated using MSMQ security. </td>
</tr>
<tr valign=top>
<td width=48%>RPC_AUTHN_LEVEL_PKT_<br>
PRIVACY</td>
<td width=52%>The call is authenticated and encrypted as it travels between the client and server queue.</td>
</tr>
</table><br>
<p>
The server can also force call authentication and encryption by calling <a href="pr-func2_4drs.htm"><b>RpcServerUseProtseqEpEx</b></a> and setting the RPC_C_MQ_AUTHN_LEVEL_NONE, RPC_C_MQ_AUTHN_LEVEL_PKT_INTEGRITY and RPC_C_MQ_AUTHN_LEVEL_PKT_PRIVACY flags in the RPC_POLICY structure.</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
