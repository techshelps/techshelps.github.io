<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcServerUseProtseqEpEx</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcserveruseprotseqepex"></a>RpcServerUseProtseqEpEx</h1>
<p>
The <b>RpcServerUseProtseqEpEx</b> function tells the RPC run-time library to use the specified protocol sequence combined with the specified endpoint for receiving remote procedure calls. For a list of the protocol sequences supported by Microsoft RPC, see <a href="pr-dtype_9omf.htm">String Binding</a>. </p>
<p>
This function is supported only on Windows NT 4.0.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcServerUseProtseqEpEx( 
  unsigned char *</b><i> Protseq</i><b>,   </b>
<b>  unsigned int </b><i> MaxCalls</i><b>,   </b>
<b>  unsigned char *</b><i> Endpoint</i><b>,   </b>
<b>  void *</b><i> SecurityDescriptor</i><b>,  </b>
<b>  PRPC_POLICY </b><i> Policy       </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>Protseq</i></dt>
<dd>
Pointer to a string identifier of the protocol sequence to register with the RPC run-time library.</dd>
<dt>
<i>MaxCalls</i></dt>
<dd>
The maximum number of concurrent remote procedure call requests the server can handle.
<p>
The RPC run-time library guarantees that the server can accept at least this number of concurrent call requests. The actual number can be greater, depending on the selected protocol sequence. Use RPC_C_PROTSEQ_MAX_REQS_DEFAULT to specify the default value.
</dd>
<dt>
<i>Endpoint</i></dt>
<dd>
Pointer to the endpoint-address information to use in creating a binding for the protocol sequence specified by <i>Protseq</i>.</dd>
<dt>
<i>SecurityDescriptor</i></dt>
<dd>
Pointer to an optional parameter provided for the Microsoft Windows NT security subsystem.</dd>
<dt>
<i>Policy</i></dt>
<dd>
Points to the RPC_POLICY structure, which contains flags that set transport-specific attributes. In the case of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_mq">
</object><a href=JavaScript:alink_1.Click()><b>ncadg_mq</b></a><b> </b>transport, these flags specify the properties of the server-process receive queue. In the case of the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_ip_tcp">
</object><a href=JavaScript:alink_2.Click()><b>ncacn_ip_tcp</b></a> or <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_ip_udp">
</object><a href=JavaScript:alink_3.Click()><b>ncadg_ip_udp</b></a> transports, these flags restrict port allocation for dynamic ports and allow multihomed machines to selectively bind to network interface cards. The flag settings in the <i>Policy</i> fieldare effective only when the <b>ncacn_ip_tcp</b>, <b>ncadg_ip_udp</b>, or <b>ncadg_mq</b> protocol sequences are in use. For all other protocol sequences, the RPC run time ignores these values.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>RPC_S_OK</td>
<td width=44%>Success.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_PROTSEQ_NOT_SUPPORTED</td>
<td width=44%>Protocol sequence is not supported on this host.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_RPC_PROTSEQ</td>
<td width=44%>Invalid protocol sequence.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_ENDPOINT_FORMAT</td>
<td width=44%>Invalid endpoint format.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_OUT_OF_MEMORY</td>
<td width=44%>Out of memory.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_DUPLICATE_ENDPOINT</td>
<td width=44%>Endpoint is a duplicate.</td>
</tr>
<tr valign=top>
<td width=56%>RPC_S_INVALID_SECURITY_DESC</td>
<td width=44%>Security descriptor is invalid.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The parameters and effects of <b>RpcServerUseProtseqEpEx</b> subsume those of <b>RpcServerUseProtseqEp</b>. The difference is the <i>Policy</i> argument, which allows you to set specific policies at the endpoints. Setting the <i>NICFlags</i> field of the RPC_POLICY structure to zero makes this extended function equivalent to the original <b>RpcServerUseProtseqEp</b> when used with the <b>ncacn_ip_tcp</b> or <b>ncadg_ip_udp </b>transports.</p>
<p>
A server application calls the <b>RpcServerUseProtseqEpEx</b> routine to register one protocol sequence with the RPC run-time library. With each protocol sequence registration, <b>RpcServerUseProtseqEpEx</b> includes the specified endpoint-address information.</p>
<p>
To receive remote procedure call requests, a server must register at least one protocol sequence with the RPC run-time library. A server application can call this routine many times to register additional protocol sequences and endpoints.</p>
<p>
For each protocol sequence registered by a server, the RPC run-time library creates one or more binding handles through which the server receives remote procedure call requests.</p>
<p>
The <i>MaxCalls</i> argument allows the server to specify the maximum number of concurrent remote procedure call requests the server can handle.</p>
<p>
See <a href="ov-runtm_2usz.htm">Server Application RPC API Calls</a> for a description of the routines that a server will typically call after registering protocol sequences.</p>
<p>
For information on how the registry settings define the available Internet and intranet ports, see <a href="ov-cnfig_7x47.htm">Configuring the Windows NT Registry for Port Allocations and Selective Binding</a>.</p>
<p>
For information on using the message-queuing transport (<b>ncadg_mq</b>) see <a href="ov-messq_5hlz.htm">RPC Message Queuing</a> and the MIDL reference pages <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_message">
</object><a href=JavaScript:alink_4.Click()><b>message</b></a> and <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncadg_mq">
</object><a href=JavaScript:alink_5.Click()><b>ncadg_mq</b></a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-dtype_32gp.htm">RPC_POLICY</a>, <a href="pr-func2_27y0.htm"><b>RpcServerUseAllProtseqsEx</b></a>, <a href="pr-func2_6xq0.htm"><b>RpcServerUseAllProtseqsIfEx</b></a>, <a href="pr-func2_38l4.htm"><b>RpcServerUseProtseqEx</b></a>, <a href="pr-func2_5z94.htm"><b>RpcServerUseProtseqIfEx</b></a></p>
<p>&nbsp;</p></body>
</HTML>
