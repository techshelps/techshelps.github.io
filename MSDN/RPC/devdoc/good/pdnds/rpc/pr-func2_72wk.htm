<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcNsMgmtBindingUnexport</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcnsmgmtbindingunexport"></a>RpcNsMgmtBindingUnexport</h1>
<p>
The <b>RpcNsMgmtBindingUnexport</b> function removes multiple binding handles and objects from an entry in the name-service database.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcNsMgmtBindingUnexport( 
  unsigned long </b><i> EntryNameSyntax</i><b>,   </b>
<b>  unsigned char * </b><i> EntryName</i><b>,   </b>
<b>  RPC_IF_ID * </b><i> IfId</i><b>,            </b>
<b>  unsigned long </b><i> VersOption</i><b>,    </b>
<b>  UUID_VECTOR * </b><i> ObjectUuidVec  </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>EntryNameSyntax</i></dt>
<dd>
Specifies an integer value that indicates the syntax of the next argument, <i>EntryName</i>.
<p>
To use the syntax specified in the registry value HKEY_LOCAL_MACHINE\Software\Microsoft\Rpc\NameService\<br>
DefaultSyntax, provide a value of RPC_C_NS_SYNTAX_DEFAULT.
</dd>
<dt>
<i>EntryName</i></dt>
<dd>
Points to the name of the entry from which to remove binding handles and object UUIDs.</dd>
<dt>
<i>IfId</i></dt>
<dd>
Points to an interface identification. A null argument value indicates not to unexport any binding handles (only object UUIDs are to be unexported).</dd>
<dt>
<i>VersOption</i></dt>
<dd>
Specifies how the <b>RpcNsMgmtBindingUnexport</b> routine uses the <i>VersMajor</i> and <i>VersMinor</i> fields of the <i>IfId</i> argument.
<p>
The following table describes valid values for the <i>VersOption</i> argument:

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=46%><i>VersOption</i> values</th>
<th align=left width=54%>Description</th>
</tr>
<tr valign=top>
<td width=46%>RPC_C_VERS_ALL</td>
<td width=54%>Unexports all bindings for the interface UUID in <i>IfId</i>, regardless of the version numbers. For this value, specify 0 for both the major and minor versions in <i>IfId</i>.</td>
</tr>
<tr valign=top>
<td width=46%>RPC_C_VERS_IF_ID</td>
<td width=54%>Unexports the bindings for the compatible interface UUID in <i>IfId</i> with the same major version and with a minor version greater than or equal to the minor version in <i>IfId</i>.</td>
</tr>
<tr valign=top>
<td width=46%>RPC_C_VERS_EXACT</td>
<td width=54%>Unexports the bindings for the interface UUID in <i>IfId</i> with the same major and minor versions as in <i>IfId</i>.</td>
</tr>
<tr valign=top>
<td width=46%>RPC_C_VERS_MAJOR_ONLY</td>
<td width=54%>Unexports the bindings for the interface UUID in <i>IfId</i> with the same major version as in <i>IfId</i> (ignores the minor version). For this value, specify 0 for the minor version in <i>IfId</i>.</td>
</tr>
<tr valign=top>
<td width=46%>RPC_C_VERS_UPTO</td>
<td width=54%>Unexports the bindings that offer a version of the specified interface UUID less than or equal to the specified major and minor version. (For example, if the <i>IfId</i> contained V2.0 and the name-service database entry contained binding handles with the versions V1.3, V2.0, and V2.1, the <b>RpcNsMgmtBindingUnexport</b> routine unexports the binding handles with V1.3 and V2.0.)</td>
</tr>
</table><br>

</dd>
<dt>
<i>ObjectUuidVec</i></dt>
<dd>
Points to a vector of object UUIDs that the server no longer wants to offer. The application constructs this vector. A null argument value indicates there are no object UUIDs to unexport (only binding handles are to be unexported).
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=60%>Value</th>
<th align=left width=40%>Meaning</th>
</tr>
<tr valign=top>
<td width=60%>RPC_S_OK</td>
<td width=40%>Success</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_VERS_OPTION</td>
<td width=40%>Invalid version option</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NOTHING_TO_UNEXPORT</td>
<td width=40%>Nothing to unexport</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INVALID_NAME_SYNTAX</td>
<td width=40%>Invalid name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_UNSUPPORTED_NAME_SYNTAX</td>
<td width=40%>Unsupported name syntax</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INCOMPLETE_NAME</td>
<td width=40%>Incomplete name</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_ENTRY_NOT_FOUND</td>
<td width=40%>Name-service entry not found</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NAME_SERVICE_UNAVAILABLE</td>
<td width=40%>Name service unavailable</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_INTERFACE_NOT_FOUND</td>
<td width=40%>Interface not found</td>
</tr>
<tr valign=top>
<td width=60%>RPC_S_NOT_ALL_OBJS_UNEXPORTED</td>
<td width=40%>Not all objects unexported</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The <b>RpcNsMgmtBindingUnexport</b> routine allows a management application to remove one of the following from a name-service database entry:
<ul>
<li>
All the binding handles for a specified interface UUID, qualified by the interface version numbers (major and minor)</li>
<li>
One or more object UUIDs of resources</li>
<li>
Both binding handles and object UUIDs of resources</li>
</ul>
<p>
A management application can unexport interfaces and objects in a single call to <b>RpcNsMgmtBindingUnexport</b>, or it can unexport them separately.</p>
<p>
If <b>RpcNsMgmtBindingUnexport</b> does not find any binding handles for the specified interface, the routine returns an RPC_S_INTERFACE_NOT_FOUND status code and does not unexport the object UUIDs, if any were specified.</p>
<p>
If one or more binding handles for the specified interface are found and unexported without error, <b>RpcNsMgmtBindingUnexport</b> unexports the specified object UUIDs, if any.</p>
<p>
If any of the specified object UUIDs were not found, <b>RpcNsMgmtBindingUnexport</b> returns the RPC_S_NOT_ALL_OBJS_UNEXPORTED status code.</p>
<p>
In addition to calling <b>RpcNsMgmtBindingUnexport</b>, a management application should also call the <b>RpcMgmtEpUnregister</b> routine to unregister the servers that have registered with the endpoint-map database.</p>
<p>
<b>Note</b>&nbsp;&nbsp;Name-service databases are designed to be relatively stable. In replicated name services, frequent use of the <b>RpcNsBindingExport</b> and <b>RpcNsBindingUnexport</b> routines causes the name service to repeatedly remove and replace the same entry and can cause performance problems.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcnsi.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcns4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_659u.htm"><b>RpcMgmtEpUnregister</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a>, <a href="pr-func1_5cvo.htm"><b>RpcNsBindingUnexport</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
