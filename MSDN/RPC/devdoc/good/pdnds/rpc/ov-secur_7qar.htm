<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>An Overview of Authenticated RPC</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_an_overview_of_authenticated_rpc"></a>An Overview of Authenticated RPC</h2>
<p>
To use authenticated RPC, a client passes its user security information to the run-time library. This security information is called the client credentials. The client run-time library forwards the credentials to the server run-time library which then passes it to the relevant security provider for verification. (In this version of Microsoft RPC, the NT Security Service is the only supported security provider. Other security providers may be added in the future.) When a call is made, the security provider ensures that the credentials are valid. If so, the server stub is called and the call proceeds. Otherwise, the client is denied access and the call fails.</p>
<p>
Authenticated RPC involves a series of tasks performed by all servers every time a client tries to connect. The server must:
<ol>
<li>
Extract binding information about the client from the incoming call.</li>
<li>
Extract the authentication information from the binding handle and check the credentials with the NT Security Service.</li>
<li>
Compare the client's authentication information with the access control list (ACL) on the security server's database.</li>
</ol>
<p>&nbsp;</p></body>
</HTML>
