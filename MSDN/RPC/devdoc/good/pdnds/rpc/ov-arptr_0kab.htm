<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multi-Dimensional Arrays</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_multi_dimensional_arrays"></a>Multi-Dimensional Arrays</h2>
<p>
Array attributes can also be used with multidimensional arrays. However, be careful to ensure that every dimension of the array has a corresponding attribute. For example:</p>
<pre><code>/* IDL file */
[ uuid(20B309B1-015C-101A-B308-02608C4C9B53),
  version(2.0)
]
void arr2d( [in] short        dlsize,
    [in] short                d2len,
    [in,
      size_is( dlsize, ),
      length_is ( , d2len) ] long    array2d[*][30] ) ;
 </code></pre>
<p>
The array shown above is a conformant array (of size <i>dlsize</i>) of 30 element arrays (with <i>d2len</i> elements shipped for each).</p>
<p>
The <b>string</b> attribute can also be used with multidimensional arrays. The attribute applies to the least-significant dimension such as a conformant array of strings. You can also use multidimensional pointer attributes, but if you do so, the order of the attributes will be reserved because of the right-to-left behavior associated with pointers. For example:</p>
<pre><code>/* IDL file */
[ uuid(20B309B1-015C-101A-B308-02608C4C9B53),
  version(2.0)
]
void arr2d( [in] short        d1len,
    [in] short                d2len,
       [in] size_is(d1len, d2len) ] long  ** ptr2d) ;
 </code></pre>
<p>
In the example above, the variable <i>ptr2d</i> is d1len pointers to d2len pointers to long.</p>
<p>
Be sure that a multidimensional array is not equivalent to multiple levels of pointers. A multidimensional array is a single, large block of memory and should not be confused with an array of pointers. Also, ANSI C syntax allows only the most significant (leftmost) array dimension to be unspecified in a multidimensional array. Therefore, the following is a valid statement:</p>
<pre><code>long a1[] [20]
 </code></pre>
<p>
Compare this to the following invalid statement:</p>
<pre><code>long a1[20] []
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
