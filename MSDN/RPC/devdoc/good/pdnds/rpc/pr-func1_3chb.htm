<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcBindingSetAuthInfo</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcbindingsetauthinfo"></a>RpcBindingSetAuthInfo</h1>
<p>
The <b>RpcBindingSetAuthInfo</b> function sets authentication and authorization information into a binding handle.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcBindingSetAuthInfo( 
  RPC_BINDING_HANDLE </b><i> hBinding</i><b>,</b>             
<b>  unsigned char *</b><i> ServerPrincName</i><b>,</b>          
<b>  unsigned long </b><i> AuthnLevel</i><b>,</b>                
<b>  unsigned long </b><i> AuthnService</i><b>,</b>              
<b>  RPC_AUTH_IDENTITY_HANDLE </b><i> AuthIdentity</i><b>,</b>   
<b>  unsigned long </b><i> AuthzService               </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hBinding</i></dt>
<dd>
The server binding handle to which authentication and authorization information is to be applied.</dd>
<dt>
<i>ServerPrincName</i></dt>
<dd>
Points to the expected principal name of the server referenced by <i>hBinding</i>. The content of the name and its syntax are defined by the authentication service in use. Set this parameter to NULL when accessing the Microsoft Message Queue Server (MSMQ) Security.</dd>
<dt>
<i>AuthnLevel</i></dt>
<dd>
Specifies the level of authentication to be performed on remote procedure calls made using the <i>hBinding</i> binding handle. For a list of the RPC-supported authentication levels, see Authentication-Level Constants in the RPC documentation that is part of the Platform SDK online help.
<p>
Under MSMQ security this can be RPC_C_AUTHN_LEVEL_NONE, RPC_C_AUTHN_LEVEL_PKT_INTEGRITY, or RPC_C_AUTHN_LEVEL_PKT_PRIVACY. If you specify any other level it will be converted silently to the next higher supported level.
</dd>
<dt>
<i>AuthnService</i></dt>
<dd>
The authentication service to use. For a list of the RPC-supported authentication services, see <a href="pr-dtype_12er.htm">Authentication-Service Constants</a>
<p>
Specify RPC_C_AUTHN_NONE to turn off authentication for remote procedure calls made using the <i>hBinding</i> binding handle.

<p>
If RPC_C_AUTHN_DEFAULT is specified, the RPC run-time library uses the RPC_C_AUTHN_WINNT authentication service for remote procedure calls made using the <i>hBinding </i>binding handle.

<p>
The only authentication services allowed for MSMQ security are RPC_C_AUTHN_NONE and RPC_C_AUTHN_MQ. If you use RPC_C_AUTHN_WINNT or one of the other security providers your <b>message</b> calls will not be authenticated or encrypted.
</dd>
<dt>
<i>AuthIdentity</i></dt>
<dd>
A handle for the data structure that contains the client's authentication and authorization credentials appropriate for the selected authentication and authorization service.
<p>
When using the RPC_C_AUTHN_WINNT authentication service <i>AuthIdentity</i> should be a pointer to a SEC_WINNT_AUTH_IDENTITY structure (defined in rpcdce.h).

<p>
Specify a null value to use the security login context for the current address space.
</dd>
<dt>
<i>AuthzService</i></dt>
<dd>
The authorization service implemented by the server for the interface of interest. For a list of RPC-supported authorization services see Authorization-Service Constants in the RPC documentation that is part of the Platform SDK online help. 
<p>
The validity and trustworthiness of authorization data, like any application data, depends on the authentication service and authentication level selected. This parameter is ignored when using the RPC_C_AUTHN_WINNT authentication service.

</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=53%>Value</th>
<th align=left width=47%>Meaning</th>
</tr>
<tr valign=top>
<td width=53%>RPC_S_OK</td>
<td width=47%>Success.</td>
</tr>
<tr valign=top>
<td width=53%>RPC_S_INVALID_BINDING</td>
<td width=47%>Invalid binding handle.</td>
</tr>
<tr valign=top>
<td width=53%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=47%>Wrong kind of binding for operation.</td>
</tr>
<tr valign=top>
<td width=53%>RPC_S_UNKNOWN_AUTHN_SERVICE</td>
<td width=47%>Unknown authentication service.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
A client application calls the <b>RpcBindingSetAuthInfo</b> routine to set up a server binding handle for making authenticated remote procedure calls. A client is not required to call this routine.</p>
<p>
Unless a client calls <b>RpcBindingSetAuthInfo</b>, no remote procedure calls on the <i>hBinding</i> binding handle are athenticated. A server can call <a href="pr-func1_5dkk.htm"><b>RpcBindingInqAuthClient</b></a><b> </b>from within a remote procedure call to determine if that call has been authenticated.</p>
<p>
<b>Note</b>&nbsp;&nbsp;As long as the binding handle exists, RPC maintains a pointer to <i>AuthIdentity</i>. Be sure it is not on the stack and is not freed until the binding handle is freed. If the binding handle is copied, or if a context handle is created from the binding handle, then the <i>AuthIdentity</i> pointer will also be copied.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_3wku.htm"><b>RpcBindingSetOption</b></a>, <a href="pr-func1_6yy7.htm"><b>RpcBindingInqAuthInfo</b></a>, <a href="pr-func2_0jn3.htm"><b>RpcServerRegisterAuthInfo</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
