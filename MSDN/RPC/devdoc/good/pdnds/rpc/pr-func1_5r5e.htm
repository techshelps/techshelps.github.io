<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcEpRegister</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcepregister"></a>RpcEpRegister</h1>
<p>
The <b>RpcEpRegister</b> function adds to or replaces server address information in the local endpoint-map database.</p>
<p>
This function is supported by both 32-bit platforms — Windows NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcEpRegister( 
  RPC_IF_HANDLE </b><i> IfSpec</i><b>,</b>                 
<b>  RPC_BINDING_VECTOR * </b><i> BindingVector</i><b>,</b>   
<b>  UUID_VECTOR * </b><i> UuidVector</i><b>,</b>             
<b>  unsigned char * </b><i> Annotation            </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies an interface to register with the local endpoint-map database.</dd>
<dt>
<i>BindingVector</i></dt>
<dd>
Points to a vector of binding handles over which the server can receive remote procedure calls.</dd>
<dt>
<i>UuidVector</i></dt>
<dd>
Points to a vector of object UUIDs offered by the server. The server application constructs this vector.
<p>
A null argument value indicates there are no object UUIDs to register.
</dd>
<dt>
<i>Annotation</i></dt>
<dd>
Points to the character-string comment applied to each cross-product element added to the local endpoint-map database. The string can be up to 64 characters long, including the null terminating character. Specify a null value or a null-terminated string ("\0") if there is no annotation string.
<p>
The annotation string is used by applications for information only. RPC does not use this string to determine which server instance a client communicates with or for enumerating elements in the endpoint-map database.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>RpcEpRegister</b> routine adds or replaces entries in the local host's endpoint-map database. For an existing database entry that matches the provided interface specification, binding handle, and object UUID, this routine replaces the entry's endpoint with the endpoint in the provided binding handle.</p>
<p>
A server uses <b>RpcEpRegister</b> rather than <b>RpcEpRegisterNoReplace</b> when only a single instance of the server will run on the server's host. In other words, use this routine when no more than one server instance will offer the same interface UUID, object UUID, and protocol sequence at any one time.</p>
<p>
When entries are not replaced, stale data accumulates each time a server instance stops running without calling <b>RpcEpUnregister</b>. Stale entries increase the likelihood that a client will receive endpoints to nonexistent servers. The client will spend time trying to communicate with a nonexistent server before obtaining another endpoint.</p>
<p>
Using <b>RpcEpRegister</b> to replace existing endpoint-map database entries reduces the likelihood that a client will be given the endpoint of a nonexistent server instance. A server application calls this routine to register endpoints specified by calling any of the following routines:
<ul>
<li>
<b>RpcServerUseAllProtseqs</b></li>
<li>
<b>RpcServerUseProtseq</b></li>
<li>
<b>RpcServerUseProtseqEp</b></li>
</ul>
<p>
A server that calls only <b>RpcServerUseAllProtseqsIf</b> or <b>RpcServerUseProtseqIf</b> does not need to call <b>RpcEpRegister</b>. In this case, the client's run-time library uses an endpoint from the client's interface specification to fill in a partially bound binding handle.</p>
<p>
If the server also exports to the name-service database, the server calls <b>RpcEpRegister</b> with the same <i>IfSpec</i>, <i>BindingVector</i>, and <i>UuidVector</i> that the server uses when calling the <b>RpcNsBindingExport</b> routine.</p>
<p>
For automatically started servers running over a connection-oriented protocol, the RPC run-time library automatically generates a dynamic endpoint. In this case, the server can call <b>RpcServerInqBindings</b> followed by <b>RpcEpRegister</b> to make itself available to multiple clients. Otherwise, the automatically started server is known only to the client for which the server was started.</p>
<p>
Each element added to the endpoint-map database logically contains the following:
<ul>
<li>
Interface UUID</li>
<li>
Interface version (major and minor)</li>
<li>
Binding handle</li>
<li>
Object UUID (optional)</li>
<li>
Annotation (optional)</li>
</ul>
<p>
<b>RpcEpRegister</b> creates a cross-product from the <i>IfSpec</i>, <i>BindingVector</i>, and <i>UuidVector</i> arguments and adds each element in the cross-product as a separate registration in the endpoint-map database.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>RPC_S_OK</td>
<td width=46%>Success</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_NO_BINDINGS</td>
<td width=46%>No bindings</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_INVALID_BINDING</td>
<td width=46%>Invalid binding handle</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=46%>Wrong kind of binding for operation</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_4jtz.htm"><b>RpcBindingFromStringBinding</b></a>, <a href="pr-func1_452d.htm"><b>RpcEpRegisterNoReplace</b></a>, <a href="pr-func1_8pwy.htm"><b>RpcEpUnregister</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a>, <a href="pr-func2_8bhv.htm"><b>RpcServerInqBindings</b></a>, <a href="pr-func2_125v.htm"><b>RpcServerUseAllProtseqs</b></a>, <a href="pr-func2_284m.htm"><b>RpcServerUseAllProtseqsIf</b></a>, <a href="pr-func2_1vsh.htm"><b>RpcServerUseProtseq</b></a>, <a href="pr-func2_38kw.htm"><b>RpcServerUseProtseqEp</b></a>, <a href="pr-func2_38rq.htm"><b>RpcServerUseProtseqIf</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
