<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Array Attributes</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_array_attributes"></a>Array Attributes</h1>
<p>
There is a close relationship between arrays and pointers in the C language. When passed as a parameter to a function, an array name is treated as a pointer to the first element of the array, as shown in the following example:</p>
<pre><code>/* fragment */
extern void f1(char * p1);

void main(void)
{
    char chArray[MAXSIZE];

    fLocal1(chArray);
}
 </code></pre>
<p>
In a local call, you can use the pointer parameter to march through memory and examine the contents of other addresses:</p>
<pre><code>/* dump memory (fragment) */
void fLocal1(char * pch1)
{
    int i;

    for (i = 0; i &lt; MAXSIZE; i++)
       printf("%c ", *pch1++);
}
 </code></pre>
<p>
When a client passes a pointer to a remote procedure in C, the client stub transmits both the pointer and the data it points to. Unless the pointer is restricted to its corresponding data, all the client's memory must be transmitted with every remote call. By enforcing strong typing in the interface definition, MIDL limits client stub processing to the data that corresponds with the specified pointer.</p>
<p>
The size of the array and the range of array elements transmitted to the remote computer can be constant or variable. When these values are variable, and thus determined at run time, you must use attributes in the IDL file to tell the stubs how many array elements to transmit. The following MIDL attributes support array bounds:</p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=23%>Attribute</th>
<th align=left width=56%>Description</th>
<th align=left width=21%>Default</th>
</tr>
<tr valign=top>
<td width=23%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_first_is">
</object><a href=JavaScript:alink_1.Click()><b>first_is</b></a></td>
<td width=56%>Index of the first array element transmitted.</td>
<td width=21%>0</td>
</tr>
<tr valign=top>
<td width=23%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_last_is">
</object><a href=JavaScript:alink_2.Click()><b>last_is</b></a></td>
<td width=56%>Index of the last array element transmitted.</td>
<td width=21%>-</td>
</tr>
<tr valign=top>
<td width=23%><object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_length_is">
</object><a href=JavaScript:alink_3.Click()><b>length_is</b></a></td>
<td width=56%>Total number of array elements transmitted.</td>
<td width=21%>-</td>
</tr>
<tr valign=top>
<td width=23%><object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_max_is">
</object><a href=JavaScript:alink_4.Click()><b>max_is</b></a></td>
<td width=56%>Highest valid array index value.</td>
<td width=21%>-</td>
</tr>
<tr valign=top>
<td width=23%><object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_min_is">
</object><a href=JavaScript:alink_5.Click()><b>min_is</b></a></td>
<td width=56%>Lowest valid array index value.</td>
<td width=21%>0</td>
</tr>
<tr valign=top>
<td width=23%><object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_size_is">
</object><a href=JavaScript:alink_6.Click()><b>size_is</b></a></td>
<td width=56%>Total number of array elements allocated for the array.</td>
<td width=21%>-</td>
</tr>
</table><br>
<p>
<b>Note</b>&nbsp;&nbsp;The <b>min_is</b> attribute is not implemented in Microsoft® RPC. The minimum array index is always treated as zero.</p>
<p>&nbsp;</p></body>
</HTML>
