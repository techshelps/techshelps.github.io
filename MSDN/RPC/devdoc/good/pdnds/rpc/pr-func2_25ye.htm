<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcServerRegisterIf</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcserverregisterif"></a>RpcServerRegisterIf</h1>
<p>
The <b>RpcServerRegisterIf</b> function registers an interface with the RPC run-time library.</p>
<p>
This function is supported by both 32-bit platforms — Windows&nbsp;NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcServerRegisterIf( 
  RPC_IF_HANDLE </b><i> IfSpec</i><b>,   </b>
<b>  UUID * </b><i> MgrTypeUuid</i><b>,   </b>
<b>  RPC_MGR_EPV * </b><i> MgrEpv  </i>
<b>);</b>
<b> </b></code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies a MIDL-generated data structure indicating the interface to register.</dd>
<dt>
<i>MgrTypeUuid</i></dt>
<dd>
Points to a type UUID to associate with the <i>MgrEpv</i> argument. Specifying a null argument value (or a nil UUID) registers <i>IfSpec</i> with a nil type UUID.</dd>
<dt>
<i>MgrEpv</i></dt>
<dd>
Specifies the manager routines' entry-point vector (EPV). To use the MIDL-generated default EPV, specify a null value.
</dd>
</dl>
<h4>Remarks</h4>
<p>
A server can register an unlimited number of interfaces with the RPC run-time library. Registration makes an interface available to clients using a binding handle to the server.</p>
<p>
To register an interface, the server application code calls the <b>RpcServerRegisterIf</b> routine. For each implementation of an interface offered by a server, it must register a separate manager EPV.</p>
<p>
To register an interface, the server provides the following information:
<ul>
<li>
Interface specification<p>
The interface specification is a data structure that the MIDL compiler generates. The server specifies the interface using the <i>IfSpec</i> argument.
</li>
<li>
Manager type UUID and manager EPV<p>
The manager type UUID and the manager EPV determine which manager routine executes when a server receives a remote procedure call request from a client.
<p>
The server specifies the manager type UUID and EPV using the <i>MgrTypeUuid</i> and <i>MgrEpv</i> arguments. Note that when specifying a non-nil manager type UUID, the server must also call the <b>RpcObjectSetType</b> routine to register objects of this non-nil type.
</li>
</ul>
<p>
If your server application needs to register an auto-listen interface or use a callback function for authentication purposes, use <a href="pr-func2_9prs.htm"><b>RpcServerRegisterIfEx</b></a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="ov-runtm_6hph.htm">Registering the Interface</a>, <a href="pr-func1_4jtz.htm"><b>RpcBindingFromStringBinding</b></a>, <a href="pr-func1_319w.htm"><b>RpcBindingSetObject</b></a>, <a href="pr-func1_8bg4.htm"><b>RpcNsBindingExport</b></a>, <a href="pr-func1_001a.htm"><b>RpcNsBindingImportBegin</b></a>, <a href="pr-func1_4i7i.htm"><b>RpcNsBindingLookupBegin</b></a>, <a href="pr-func2_1n8l.htm"><b>RpcObjectSetType</b></a>, <a href="pr-func2_455y.htm"><b>RpcServerUnregisterIf</b></a></p>
<p>&nbsp;</p></body>
</HTML>
