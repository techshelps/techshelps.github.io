<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Management</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_memory_management"></a>Memory Management</h1>
<p>
With RPC, a single conceptual execution thread can be processed by two or more processing threads. These processing threads can run on the same computer or on different computers. RPC depends on the ability to simulate the client thread's address space in the server thread's address space and to return data, including new and changed data, from the server to the client memory.</p>
<p>
Memory management in the context of RPC involves:
<ul>
<li>
How the memory needed to simulate a single conceptual address space is allocated and deallocated in the different address spaces of the client and server's threads.</li>
<li>
Which software component is responsible for managing memory&nbsp;—&nbsp;the application or the MIDL-generated stub.</li>
<li>
MIDL attributes that affect memory management: directional attributes, pointer attributes, array attributes, and the ACF attributes <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_byte_count">
</object><a href=JavaScript:alink_1.Click()><b>byte_count</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_allocate">
</object><a href=JavaScript:alink_2.Click()><b>allocate</b></a>, and <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_enable_allocate">
</object><a href=JavaScript:alink_3.Click()><b>enable_allocate</b></a>.</li>
</ul>
<p>
As a developer, you can choose among several methods for selecting the way that memory is allocated and freed. Consider a complex data structure, such as a linked list or a tree, that consists of nodes connected with pointers. You can apply attributes that select the following models:
<ul>
<li>
Node-by-node allocation and deallocation.</li>
<li>
A single, linear buffer for the entire tree allocated by the stub.</li>
<li>
A single, linear buffer for the entire tree allocated by the client application.</li>
<li>
Persistent storage on the server.</li>
</ul>
<p>
Each of these models is described in detail in this chapter.</p>
<p>
This section does not describe the use of different Intel-architecture memory models. For information about using different Intel-architecture memory models, see <a href="ov-build_8ctv.htm">Building RPC Applications</a>. </p>
<p>&nbsp;</p></body>
</HTML>
