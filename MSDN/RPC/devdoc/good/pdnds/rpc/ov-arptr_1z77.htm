<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Reference Pointers</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_reference_pointers"></a>Reference Pointers</h2>
<p>
Reference pointers are the simplest pointers and require the least amount of processing by the client stub. These pointers are mainly used to implement reference semantics and allow for <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_out_idl">
</object><a href=JavaScript:alink_1.Click()><b>out</b></a> parameters in C.</p>
<p>
In the following example, the value of the pointer does not change during the call, although the contents of the data at the address indicated by the pointer can change. </p>
<p>
<img src="images/prog_a07.gif" border=0></p>
<p>
A reference pointer has the following characteristics:
<ul>
<li>
It always points to valid storage and never has the value NULL.</li>
<li>
It never changes during a call and always points to the same storage before and after the call.</li>
<li>
Data returned from the callee is written into the existing storage.</li>
<li>
The storage pointed to by a reference pointer cannot be accessed by any other pointer or any other name in the function.</li>
</ul>
<p>&nbsp;</p></body>
</HTML>
