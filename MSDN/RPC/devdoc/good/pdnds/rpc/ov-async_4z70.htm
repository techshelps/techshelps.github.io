<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Asynchronous RPC Over the Named-pipe Protocol</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_asynchronous_rpc_over_the_named_pipe_protocol"></a>Asynchronous RPC Over the Named-pipe Protocol</h1>
<p>
If you use named pipes (<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_np">
</object><a href=JavaScript:alink_1.Click()><b>ncacn_np</b></a>)as your transport protocol you should avoid allowing a large number of idle pending calls on the server. With named-pipes, each client waiting for a reply will have a pending named-pipe-read on the server, each of which requires a certain amount of kernel memory.</p>
<p>
For example, you would not want to use a notification call for new e-mail with the named-pipe transport, because such a call would remain pending even when clients are idle, and kernel memory could be depleted. Note that this is not a problem with the other connection-oriented protocols, such as <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_rpc_ncacn_ip_tcp">
</object><a href=JavaScript:alink_2.Click()><b>ncacn_ip_tcp</b></a>. </p>
<p>&nbsp;</p></body>
</HTML>
