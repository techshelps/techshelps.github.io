<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcEpUnregister</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpcepunregister"></a>RpcEpUnregister</h1>
<p>
The <b>RpcEpUnregister</b> function removes server-address information from the local endpoint-map database.</p>
<p>
This function is supported by both 32-bit platforms — Windows NT and Windows 95.</p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcEpUnregister( 
  RPC_IF_HANDLE </b><i> IfSpec</i><b>,</b>                 
<b>  RPC_BINDING_VECTOR * </b><i> BindingVector</i><b>,</b>   
<b>  UUID_VECTOR * </b><i> UuidVector              </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>IfSpec</i></dt>
<dd>
Specifies an interface to unregister from the local endpoint-map database.</dd>
<dt>
<i>BindingVector</i></dt>
<dd>
Points to a vector of binding handles to unregister.</dd>
<dt>
<i>UuidVector</i></dt>
<dd>
Points to an optional vector of object UUIDs to unregister. The server application constructs this vector. <b>RpcEpUnregister</b> unregisters all endpoint-map database elements that match the specified <i>IfSpec</i> and <i>BindingVector</i> arguments and the object UUID(s).
<p>
A null argument value indicates there are no object UUIDs to unregister.

</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>RpcEpUnregister</b> routine removes elements from the local host's endpoint-map database. A server application calls this routine only when the server has previously registered endpoints and the server wants to remove that address information from the endpoint-map database.</p>
<p>
Specifically, <b>RpcEpUnregister</b> allows a server application to remove its own endpoint-map database elements (server-address information) based on the interface specification or on both the interface specification and the object UUID(s) of the resource(s) offered.</p>
<p>
The server calls the <b>RpcServerInqBindings</b> routine to obtain the required <i>BindingVector</i> argument. To unregister selected endpoints, the server can prune the binding vector prior to calling this routine.</p>
<p>
<b>RpcEpUnregister</b> creates a cross-product from the <i>IfSpec</i>, <i>BindingVector</i>, and <i>UuidVector</i> arguments and removes each element in the cross-product from the endpoint-map database.</p>
<p>
Use <b>RpcEpUnregister</b> cautiously: removing elements from the endpoint-map database may make servers unavailable to client applications that have not previously communicated with the server.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=54%>Value</th>
<th align=left width=46%>Meaning</th>
</tr>
<tr valign=top>
<td width=54%>RPC_S_OK</td>
<td width=46%>Success</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_NO_BINDINGS</td>
<td width=46%>No bindings</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_INVALID_BINDING</td>
<td width=46%>Invalid binding handle</td>
</tr>
<tr valign=top>
<td width=54%>RPC_S_WRONG_KIND_OF_BINDING</td>
<td width=46%>Wrong kind of binding for operation</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<h4>See Also</h4>
<p>
<a href="pr-func1_5r5e.htm"><b>RpcEpRegister</b></a>, <a href="pr-func1_452d.htm"><b>RpcEpRegisterNoReplace</b></a>, <a href="pr-func1_5cvo.htm"><b>RpcNsBindingUnexport</b></a>, <a href="pr-func2_8bhv.htm"><b>RpcServerInqBindings</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
