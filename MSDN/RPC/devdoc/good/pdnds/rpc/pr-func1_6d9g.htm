<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RpcCancelThread</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_rpccancelthread"></a>RpcCancelThread</h1>
<p>
The <b>RpcCancelThread</b> function cancels a thread.</p>
<p>
This function is supported only by Windows NT. </p>
<pre><code><b>#include &lt;rpc.h&gt;
RPC_STATUS RPC_ENTRY RpcCancelThread( 
  HANDLE </b><i> ThreadHandle  </i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ThreadHandle</i></dt>
<dd>
Specifies the handle of the thread to cancel.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>RpcCancelThread</b> routine allows one client thread to cancel an RPC in progress on another client thread. When the routine is called, the server runtime is informed of the cancel operation. The server stub can determine if the call has been cancelled by calling <b>RpcTestCancel</b>. If the call has been cancelled, the server stub should clean up and return control to the client.</p>
<p>
By default, the client waits forever for the server to return control after a cancel. To reduce this time, call <b>RpcMgmtSetCancelTimeout</b>, specifying the number of seconds to wait for a response. If the server does not return within this interval, the call fails at the client with an RPC_S_CALL_FAILED exception. The server stub continues to execute. </p>
<p>
If you are using the named pipes protocol, <b>ncacn_np</b>, you must specify a finite timeout.</p>
<p>
<b>Note</b>&nbsp;&nbsp;You can use <b>RpcCancelThread</b> with any of the connection-oriented protocols (<b>ncacn_*</b>) except <b>ncacn_http</b>, and with any of the datagram protocols except <b>ncadg_mq</b> and <b>ncalrpc</b>.</p>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=42%>Value</th>
<th align=left width=58%>Meaning</th>
</tr>
<tr valign=top>
<td width=42%>RPC_S_OK</td>
<td width=58%>Success</td>
</tr>
<tr valign=top>
<td width=42%>RPC_S_ACCESS_DENIED</td>
<td width=58%>Thread handle does not have privilege</td>
</tr>
<tr valign=top>
<td width=42%>RPC_S_CANNOT_SUPPORT</td>
<td width=58%>Called by an MS-DOS or Windows 3.<i>x</i> client</td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Yes<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rpcdce.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rpcrt4.lib.</p>
<p>&nbsp;</p></body>
</HTML>
