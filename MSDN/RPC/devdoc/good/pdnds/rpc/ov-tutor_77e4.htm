<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tutorial</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_tutorial"></a>Tutorial</h1>
<p>
This tutorial takes you through the steps required to create a simple, single-client, single-server distributed application from an existing stand-alone application. These steps are:
<ul>
<li>
Create interface definition and application configuration files.</li>
<li>
Use the MIDL compiler to generate C-language client and server stubs and headers from those files.</li>
<li>
Write a client application that manages its connection to the server.</li>
<li>
Write a server application that contains the actual remote procedures.</li>
<li>
Compile and link these files to the RPC run-time library to produce the distributed application.</li>
</ul>
<p>
The client application passes a character string to the server in a remote procedure call and the server prints the string ("Hello, World") to its standard output.</p>
<p>
The complete source files for this example application, with additional code to handle command-line input and to output various status messages to the user, are in the Win32 SDK directory \mstools\samples\rpc\hello and in the Code Samples, RPC section of the Win32 SDK documentation.</p>
<p>&nbsp;</p></body>
</HTML>
