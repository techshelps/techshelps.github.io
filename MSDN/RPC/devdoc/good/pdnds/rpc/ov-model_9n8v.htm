<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_rpc_summary_intro"></a>Summary: RPC Extends Client-Server Computing</h1>
<p>
Microsoft RPC is an evolution of the procedural programming model familiar to all developers. It also represents a new category of specialized server and extends the model of client-server computing.</p>
<p>
Microsoft RPC is a tool developers use to leverage the power of the single personal computer by increasing its computational capacity far beyond its own resources. With RPC, you can harness all the CPU horsepower available on the network.</p>
<p>
Microsoft RPC allows a process running in one address space to make a procedure call that is executed in another address space. The call looks like a standard local procedure call but is actually made to a stub that interacts with the run-time library and performs all the steps necessary to execute the call in the remote address space.</p>
<p>
As a tool for creating distributed applications, Microsoft RPC provides the following benefits:
<ul>
<li>
The RPC programming model is already familiar. You can easily turn functions into remote procedures, which simplify the development and test cycles.</li>
<li>
RPC hides many details of the network interface from the developer. You do not have to understand specific network functions or low-level network protocols to implement powerful distributed applications.</li>
<li>
RPC solves the data-translation problems that crop up in heterogeneous networks; individual applications can ignore this problem.</li>
<li>
The RPC approach is scalable. As a network grows, applications can be distributed to more than one computer on the network.</li>
<li>
The RPC model is an industry standard. The Microsoft implementation is compatible with both client and server.</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
