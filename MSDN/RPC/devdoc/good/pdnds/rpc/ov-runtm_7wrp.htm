<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Importing from the Name-Service Database</title>
<link disabled rel=stylesheet href=../../../backsdk3.css>
<style type="text/css">
@import url(../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_rpc_importing_from_the_name_service_database"></a>Importing from the Name-Service Database</h2>
<p>
When the server application is registered with the name-service database, the client can obtain binding handles by using one of two equivalent methods:
<ul>
<li>
Importing (call <a href="pr-func1_001a.htm"><b>RpcNsBindingImportBegin</b></a>, <a href="pr-func1_6cqc.htm"><b>RpcNsBindingImportNext</b></a>, and <a href="pr-func1_1145.htm"><b>RpcNsBindingImportDone</b></a>).</li>
<li>
Looking up and selecting (call <a href="pr-func1_4i7i.htm"><b>RpcNsBindingLookupBegin</b></a>, <a href="pr-func1_8m0k.htm"><b>RpcNsBindingLookupNext</b></a>, <a href="pr-func1_8uno.htm"><b>RpcNsBindingSelect</b></a>, and <a href="pr-func1_3aed.htm"><b>RpcNsBindingLookupDone</b></a>). </li>
</ul>
<p>
The import method returns a single binding handle while the look-up method returns a binding vector from which the application selects one binding handle using the function <b>RpcNsBindingSelect</b>.</p>
<p>
The client queries the name service by supplying the logical name the client uses to refer to the server application. The name-service provider returns a binding handle.</p>
<p>
The client can also choose to supply a null name (an empty string or a null pointer). In this case, the Microsoft Locator searches for name-service database entries that match the supplied interface UUID. The search varies slightly between the OSF-DCE CDS and the Microsoft Locator.</p>
<p>
The OSF-DCE implementation of the name-service provider uses the DEFAULT_ENTRY environment variable, which is usually the name of a profile, to search for an entry that matches the interface ID specified in the import call. See NSID documentation for more details.</p>
<p>
The Microsoft Locator implementation of the name-service provider does not use DEFAULT_ENTRY and does not support group or profile entries. Instead, all entries in the primary locator (at the domain controller) are combined to form a default profile. When no matches are found in that domain, the client application can search in another domain. For more information about specifying the domain name, see <a href="ov-runtm_94mw.htm">Name Syntax</a>.</p>
<p>&nbsp;</p></body>
</HTML>
