<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MibGetFirst Sample</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_mibgetfirst_sample"></a>MibGetFirst Sample</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<pre><code>DWORD
APIENTRY
MibGetFirst(
    IN     DWORD  dwInputSize,
    IN     PVOID  pInputData,
    IN OUT PDWORD pdwOutputSize,
       OUT PVOID  pOutputData
    )
/*++
  Routine Description


  Locks


  Arguments


  Return Value
      NO_ERROR

--*/
{
    PPROTO_MIB_QUERY    pQuery;
    PPROTO_MIB_RESPONSE pResponse;
    PPROTO_MIB_INTF     pMibIf;
    PPROTO_MIB_GLOBAL   pMibGlobal;
    ULONG               ulNumIndices;
    DWORD               dwResult;
    
    
    EnterProtocolApi();

    TraceEnter("MibGet");

    if(dwInputSize &lt; sizeof(DWORD))
    {
        //
        // Need at least the OID to do the get
        //

        TraceLeave("MibGet");

        ExitProtocolApi();
        
        return ERROR_INVALID_PARAMETER;
    }

    //
    // The input to the function is the query
    //
    
    pQuery      = (PPROTO_MIB_QUERY)pInputData;
    pResponse   = (PPROTO_MIB_RESPONSE)pOutputData;
    
    //
    // It would be really bad if someone messed the sizes up
    //
    
    ASSERT(dwInputSize%sizeof(DWORD) == 0);
    
    ulNumIndices = NUM_INDICES(dwInputSize);

    dwResult = NO_ERROR;
    
    switch(pQuery-&gt;dwOid)
    {
        case PROTO_MIB_GLOBAL_ID:
        {
            //
            // Only support GET_FIRST for tables
            //

            dwResult = ERROR_INVALID_PARAMETER;
            
            break;
        }
        case PROTO_MIB_INTF_ID:
        {
            EnterCriticalSection(&amp;g_csIfListLock);

            dwResult = LocateInterface(QUERY_TYPE_GET_FIRST,
                                       pQuery,
                                       ulNumIndices,
                                       pResponse,
                                       pdwOutputSize);
            

            LeaveCriticalSection(&amp;g_csIfListLock);
            
            break;
        }
    }

    TraceLeave("MibGet");

    ExitProtocolApi();
        
    return dwResult;
}</code></pre>
<p>&nbsp;</p></body>
</HTML>
