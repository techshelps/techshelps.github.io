<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TraceDump</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_tracedump"></a>TraceDump</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>TraceDump</b> function outputs a hexadecimal dump of size <i>dwByteCount</i>, prefixed with the name associated with the calling service or application's <i>dwTraceID</i>, the associated Thread identifier used with the RRAS tracing functionality, the current system time, and a brief description of the dump.</p>
<pre><code><b>DWORD TraceDump(
</b>  <b>IN DWORD</b> <i>dwTraceID</i>,     //handle from initial TraceRegister call
  <b>IN LPBYTE</b> <i>lpbBytes</i>,     //pointer to dump buffer
  <b>IN DWORD</b> <i>dwByteCount</i>,   //number of bytes to dump
  <b>IN DWORD</b> <i>dwGroupSize</i>,   //size of byte grouping (1,2 or4)
  <b>IN BOOL</b> <i>bAddressPrefix</i>,<i>  </i>//include memory address toggle
  <b>IN LPCTSTR</b> <i>lpszPrefix   </i>//prefix
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>dwTraceID</i></dt>
<dd>
The handle returned by the calling service or application's initial <a href="trace_65rm.htm"><b>TraceRegister</b></a> call.</dd>
<dt>
<i>lpbBytes</i></dt>
<dd>
A pointer to the buffer from which the hex dump is to be generated</dd>
<dt>
<i>dwByteCount</i></dt>
<dd>
The number of bytes to dump from the buffer.</dd>
<dt>
<i>dwGroupSize</i></dt>
<dd>
The output's byte grouping size. Valid values are 1, 2, or 4.</dd>
<dt>
<i>bAddressPrefix</i></dt>
<dd>
Boolean value that determines whether each line of the hex dump has its memory address as a prefix. A value of <b>TRUE</b> includes the memory address.</dd>
<dt>
<i>lpszPrefix</i></dt>
<dd>
Pointer to the prefix.
</dd>
</dl>
<h4>Return Values</h4>
<p>
Successful execution of <b>TraceDump</b> returns the number of characters output.</p>
<p>
Otherwise, <b>TraceDump</b> returns zero. Call <b>GetLastError</b> to get the error code.</p>
<h4>Remarks</h4>
<p>
<b>TraceDump</b> generates debug style dumps, with the byte-ordering dependent on the processor's endian setting. Also note that the last line of the dump is padded with zeroes.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 5.0 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rtutils.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rtutils.lib.</p>
<h4>See Also</h4>
<p>
<a href="trace_373s.htm"><b>TraceDumpEx</b></a>, <a href="trace_65rm.htm"><b>TraceRegister</b></a>, <a href="trace_41wy.htm"><b>TraceDeregister</b></a>, <a href="trace_9y7a.htm"><b>TracePrintf</b></a>, <a href="trace_7sh2.htm"><b>TraceVprintf</b></a>, <a href="trace_2tir.htm"><b>TracePuts</b></a>, <b>GetLastError</b> </p>
<p>&nbsp;</p></body>
</HTML>
