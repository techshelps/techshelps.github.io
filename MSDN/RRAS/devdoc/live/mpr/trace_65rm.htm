<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TraceRegister</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_traceregister"></a>TraceRegister</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Use the <b>TraceRegister</b> function to register services or applications with the tracing DLL. Its successful return value is an identifier that provides a handle to subsequent tracing functions available in Windows NT Routing and Remote Access Service. This function, or its extended functionality counterpart <a href="trace_2am0.htm"><b>TraceRegisterEx</b></a>, must be called before any other tracing functions are called. <a href="trace_41wy.htm"><b>TraceDeregister</b></a> or <b>TraceDeregisterEx</b> should be called when trace functions are no longer needed, in order to free resources.</p>
<pre><code><b>DWORD TraceRegister(
</b>  <b>IN</b> <b>LPCTSTR</b> <i>lpszCallerName</i>  //caller name
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszCallerName</i></dt>
<dd>
Pointer to a null-terminated string containing the service or application name being registered. This is the name with which the service tracing functions will identify the caller.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If successful, this function will return a <b>DWORD</b> to be used as the service or application's identifier (handle) for subsequent calls to tracing functions.</p>
<p>
If the function fails, INVALID_TRACEID is returned. This indicates the caller could not be registered. Call <b>GetLastError</b> to retrieve the error code.</p>
<h4>Remarks</h4>
<p>
Upon successful execution of <b>TraceRegister</b>, configuration for the service or application calling <b>TraceRegister</b> will be created and kept in the registry path \System\CurrentControlSet\Services\Tracing\&lt;<i>lpszCallerName</i>&gt; under the HKEY_LOCAL_MACHINE key. Such configuration parameters are kept intact, even if the service or application is deregistered from tracing utilities by calling <a href="trace_41wy.htm">TraceDeregister</a>. If the registry entries cannot be created, the call to <b>TraceRegister</b> will fail. There are certain values within this key that can be modified to change the behavior of trace output.
<dl>
<dt>
<b>EnableConsoleTracing</b></dt>
<dd>
A REG_DWORD that determines whether tracing to the console is enabled. Console tracing is enabled if the value is non-zero. The default value is 1.</dd>
<dt>
<b>EnableFileTracing</b></dt>
<dd>
A REG_DWORD that determines whether tracing information should be sent to a file called <i>lpzsCallerName</i>.log. File tracing is enabled if the value is non-zero. The default value is 1.</dd>
<dt>
<b>ConsoleTracingMask</b></dt>
<dd>
A REG_DWORD that regulates whether output from an extended tracing function call is directed to the console. The bits in the high-order word correspond to components in the client; if a call to an extended output function has the flag TRACE_USE_MASK set, the value of ConsoleTracingMask is compared to the flag sent to the function to determine whether to send output to the console. The default value is 0xFFFF0000.</dd>
<dt>
<b>FileTracingMask</b></dt>
<dd>
A REG_DWORD that works in a similar way to ConsoleTracingMask, regulating whether the extended tracing function calls direct their output to File Tracing. The default value is 0xFFFF0000.</dd>
<dt>
<b>MaxFileSize</b></dt>
<dd>
A REG_DWORD that defines the maximum size a tracing file can become before it is renamed. The default value is 0x10000.</dd>
<dt>
<b>FileDirectory</b></dt>
<dd>
A REG_EXPAND_SZ that controls the directory in which the tracing file is created. The default is %windir%\tracing.
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 5.0 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in rtutils.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with rtutils.lib.</p>
<h4>See Also</h4>
<p>
<a href="trace_2am0.htm"><b>TraceRegisterEx</b></a>, <a href="trace_41wy.htm"><b>TraceDeregister</b></a>, <a href="trace_9y7a.htm"><b>TracePrintf</b></a>, <a href="trace_7sh2.htm"><b>TraceVprintf</b></a>, <a href="trace_2tir.htm"><b>TracePuts</b></a>, <a href="trace_5dww.htm"><b>TraceDump</b></a>, <b>GetLastError</b> </p>
<p>&nbsp;</p></body>
</HTML>
