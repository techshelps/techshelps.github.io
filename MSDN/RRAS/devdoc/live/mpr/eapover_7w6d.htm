<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interactive User Interface</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_interactive_user_interface"></a>Interactive User Interface</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The vendor that implements the authentication protocol may also provide an interactive user interface (UI) for the protocol. The interactive UI may be implemented in the same DLL as the authentication protocol, or in a separate DLL. Also, the DLL that implements the interactive UI may support more than one authentication protocol. The path to the DLL for the interactive UI is stored in a registry value under the key for the authentication protocol. For more information about creating this registry value, see <a href="eapover_0i0e.htm">EAP Installation</a>.</p>
<p>
The DLL for the interactive UI should export entry points for the following functions:</p>
<p class=indent1>
<a href="eapref_8km9.htm"><b>RasEapFreeInteractiveUIData</b></a> </p>
<p class=indent1>
<a href="eapref_17zd.htm"><b>RasEapInvokeInteractiveUI</b></a> </p>
<p>
The interactive UI allows the authentication protocol to obtain additional information from the user as needed during the course of the authentication session.</p>
<p>
To display the interactive UI, the authentication protocol should set the <b>fInvokeInteractiveUI</b> member of the <a href="eapref_94xg.htm"><b>PPP_EAP_OUTPUT</b></a> structure to TRUE. The authentication protocol may optionally set the <b>pUIContextData</b> and <b>dwSizeOfUIContextData</b> members as well. RAS will use the values of these members to pass context data to the interactive UI. The authentication protocol returns this <b>PPP_EAP_OUTPUT</b> as a parameter in the <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a> function. </p>
<p>
RAS invokes the interactive UI by calling <a href="eapref_17zd.htm"><b>RasEapInvokeInteractiveUI</b></a>. RAS passes the authentication protocol a pointer to the data returned by the interactive UI in the subsequent call to <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>. The pointer is passed as a member of a <a href="eapref_9xo4.htm"><b>PPP_EAP_INPUT</b></a> structure. After <b>RasEapMakeMessage</b> returns, RAS will call <a href="eapref_8km9.htm"><b>RasEapFreeInteractiveUIData</b></a> to free the memory occupied by the information. Therefore, the authentication protocol should copy the information into a private memory buffer during the call to <b>RasMakeMessage</b>. </p>
<p>&nbsp;</p></body>
</HTML>
