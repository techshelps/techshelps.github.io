<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPP_EAP_INPUT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_ppp_eap_input"></a>PPP_EAP_INPUT</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>PPP_EAP_INPUT</b> structure is used in the interaction between the RAS Connection Manager Service PPP implementation and the EAP to provide user information, and to facilitate the use authentication providers such as Microsoft® Windows Windows NT® domain authentication or Radius. </p>
<pre><code>typedef struct _PPP_EAP_INPUT { 
    DWORD     dwSizeInBytes   // size of this structure
    DWORD     fFlags          // specifies whether caller 
                              // is a router or RAS client
    HANDLE    hPort;          // passed to backend authenticator
    BOOL      fAuthenticator; // act as authenticator or authenticatee
    CHAR *    pszIdentity;    // users's identity
    CHAR *    pszPassword;    // user's account password.
    RAS_AUTH_ATTRIBUTE * pUserAttributes;
    DWORD     ( * RasAuthenticateClient ) (
        HANDLE                  hPort,
        RAS_AUTH_ATTRIBUTE *    pInAttributes 
        );
    BOOL      fAuthenticationComplete;
    DWORD     dwAuthError;
    DWORD     dwAuthResultCode;
    RAS_AUTH_ATTRIBUTE *    pAttributesFromAuthenticator;
    HANDLE    hTokenImpersonateUser    // handle to impersonate 
                                       // user being authenticated 
    DWORD     fSuccessPacketReceived   // true if success indicated 
                                       // by NCP packet
    DWORD    fDataReceivedFromInteractiveUI  // true if user exits
                                             // from interactive UI 
    PBYTE    pInteractiveConnectionData    // pointer to connection-
                                           // specific data from the
                                           // interactive UI 
    DWORD    dwSizeOfInteractiveConnectionData  // size of connection
                                                // specific data from
                                                // the interactive UI
    PBYTE    pInteractiveUserData        // pointer to user-specific
                                         // data from interactive UI 
    DWORD    dwSizeOfInteractiveUserData  // size of user-specific 
                                          // data from interactive UI
    PBYTE    pConfigConnectionData         // pointer to connection-
                                           // specific data from 
                                           // config UI
    DWORD    dwSizeOfConfigConnectionData  // size of connection-
                                           // specific data from 
                                           // config UI
    PBYTE    pConfigUserData               // pointer to user-
                                           // specific data from 
                                           // config UI
    DWORD    dwSizeOfConfigUserData        // size of user-specific
                                           // data from config UI
} PPP_EAP_INPUT, * PPPP_EAP_INPUT;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSizeInBytes</b></dt>
<dd>
Size in bytes of the <b>PPP_EAP_INPUT</b> structure. The value of this member can be used to distinguish between current and future versions of this structure.</dd>
<dt>
<b>fFlags</b></dt>
<dd>
Specifies whether the computer dialing in is a router or a RAS client. If the computer is a router, this parameter should be set to 
<p>
RAS_EAP_FLAG_ROUTER

<p>
Otherwise, this parameter should be zero.
</dd>
<dt>
<b>hPort</b></dt>
<dd>
Handle to the port for the user requesting authentication. This handle is passed to the authentication provider in the <a href="eapref_0dbo.htm"><b>RasAuthenticateClient</b></a> function.</dd>
<dt>
<b>fAuthenticator</b></dt>
<dd>
Indicates whether the authentication protocol is operating on the server or client. A value of TRUE indicates that the authentication protocol is operating on the server as the authenticator. A value of FALSE indicates that the authentication protocol is operating on the client as the authenticatee.</dd>
<dt>
<b>pszIdentity</b></dt>
<dd>
Pointer to an ASCIIZ character string containing an identifier for the user requesting authentication. Available only if <b>fAuthenticator</b> is FALSE.</dd>
<dt>
<b>pszPassword</b></dt>
<dd>
Pointer to an ASCIIZ character string containing the user's account password. Available only if <b>fAuthenticator</b> is FALSE. This member may be NULL.</dd>
<dt>
pUserAttributes</dt>
<dd>
Pointer to an array of <a href="eapref_33vp.htm"><b>RAS_AUTH_ATTRIBUTE</b></a> structures. The array is terminated by a structure with an <b>raaType</b> member that has a value of <i>raatMinimum</i> (see <a href="eapref_0ycl.htm"><b>RAS_AUTH_ATTRIBUTE_TYPE</b></a>)</dd>
<dt>
( * <b>RasAuthenticateClient</b> )</dt>
<dd>
Pointer to the <a href="eapref_0dbo.htm"><b>RasAuthenticateClient</b></a> function for the currently active authentication provider. This member is used only if the authentication protocol is using an authentication provider such as Radius or Windows NT domain authentication, and only if the <b>fAuthenticator</b> member is TRUE. The call to <a href="eapref_0dbo.htm"><b>RasAuthenticateClient</b></a> is asynchronous.</dd>
<dt>
<b>fAuthenticationComplete</b></dt>
<dd>
Boolean value indicating whether the authenticator has completed the above call to <b>RasAuthenticateClient</b>. A value of TRUE indicates authentication completion. Ignore this field if the authentication protocol is not using an authentication provider.</dd>
<dt>
<b>dwAuthError</b></dt>
<dd>
This member is only valid if <b>fAuthenticationComplete</b> is TRUE. Any value except NO_ERROR indicates an error occurred during authentication with the authentication provider. This field can be ignored if the EAP is not using an authentication provider. The following member (<b>dwAuthResultCode</b>) is valid only if <b>dwAuthError</b> is NO_ERROR. </dd>
<dt>
<b>dwAuthResultCode</b></dt>
<dd>
Result of the authentication provider's authentication process. Successful authentication results in NO_ERROR. Authentication failure codes for <b>dwAuthResultCode</b> must come only from winerror.h, raserror.h or mprerror.h. Ignore this field if the authentication protocol is not using an authentication provider. This member is valid only if <b>dwAuthError</b> is NO_ERROR. </dd>
<dt>
<b>pAttributesFromAuthenticator</b></dt>
<dd>
Pointer to an array of <a href="eapref_33vp.htm"><b>RAS_AUTH_ATTRIBUTE</b></a> structures that contains attributes returned by the authentication provider (for example Radius or Windows NT domain authentication). The array is terminated by a structure with an <b>raaType</b> member that has a value of <i>raatMinimum</i> (see <a href="eapref_0ycl.htm"><b>RAS_AUTH_ATTRIBUTE_TYPE</b></a>) 
<p>
This member will be valid only if <b>fAuthenticationComplete</b> is TRUE. The memory occupied by this array is not owned by the authentication protocol, and should be used only for read. Ignore this field if the authentication protocol is not using an authentication provider.
</dd>
<dt>
<b>hTokenImpersonateUser</b></dt>
<dd>
Handle to an impersonation token for the user requesting authentication. This member is valid only on the client side. For more information on impersonation tokens, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_access_tokens">
</object><a href=JavaScript:alink_1.Click()>Access Tokens</a>.</dd>
<dt>
<b>fSuccessPacketReceived</b></dt>
<dd>
RAS will set this member to TRUE if the client receives an  Network Control Protocol (NCP) packet even though the client has not yet received an EAP success packet. The EAP success packet is a non-acknowledged packet. Therefore, it may be lost and not resent by the server. In this situation, the receipt of an NCP packets indicates that authentication must have been successful, since the server has moved on to the NCP phase of PPP. This member should be examined only on the client side.</dd>
<dt>
<b>fDataReceivedFromInteractiveUI</b></dt>
<dd>
RAS will set this member to TRUE whenever the user exits from the authentication protocol's interactive user interface (UI).</dd>
<dt>
<b>pInteractiveConnectionData</b></dt>
<dd>
Pointer to connection-specific data received from the authentication protocol's interactive UI. This pointer will be non-NULL if the <b>fDataReceivedFromInteractiveUI</b> member is TRUE and the interactive UI did, in fact, return data. Otherwise, this pointer will be NULL. 
<p>
If non-NULL, the authentication protocol should make a copy of the data in its own memory space. RAS will free the memory occupied by this data on return from the call in which the <b>PPP_EAP_INPUT</b> structure was passed. To free the memory RAS will call the <a href="eapref_8km9.htm"><b>RasEapFreeInteractiveUIData</b></a> function.
</dd>
<dt>
<b>dwSizeOfInteractiveConnectionData</b></dt>
<dd>
Specifies the size in bytes of the data pointed to by <b>pInteractiveConnectionData</b>. If no data was returned from the interactive UI, this member will be zero.</dd>
<dt>
<b>pInteractiveUserData</b></dt>
<dd>
Pointer to user-specific data received from the authentication protocol's interactive UI. This pointer will be non-NULL if the <b>fDataReceivedFromInteractiveUI</b> member is TRUE and the interactive UI did, in fact, return data. Otherwise, this pointer will be NULL. 
<p>
If non-NULL, the authentication protocol should make a copy of the data in its own memory space. RAS will free the memory occupied by this data on return from the call in which the <b>PPP_EAP_INPUT</b> structure was passed. To free the memory RAS will call the <a href="eapref_8km9.htm"><b>RasEapFreeInteractiveUIData</b></a> function.
</dd>
<dt>
<b>dwSizeOfInteractiveUserData</b></dt>
<dd>
Specifies the size in bytes of the data pointed to by <b>pInteractiveUserData</b>. If no data was returned from the interactive UI, this member will be zero.</dd>
<dt>
<b>pConfigConnectionData</b></dt>
<dd>
Pointer to connection-specific data received from the authentication protocol's configuration user interface. This data will be available only when the <a href="#_mpr_ppp_eap_input"><b>PPP_EAP_INPUT</b></a> structure is passed in <a href="eapref_186m.htm"><b>RasEapBegin</b></a>. It will not be available in calls to <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>.
<p>
The authentication protocol should make a copy of this data in its own memory space. RAS will free the memory occupied by this data on return from the call in which the <b>PPP_EAP_INPUT</b> structure was passed. To free the memory RAS will call the <a href="eapref_68gx.htm"><b>RasEapFreeConfigUIData</b></a> function.

<p>
If the authentication protocol's configuration UI did not return any data, this member will be NULL.
</dd>
<dt>
<b>dwSizeOfConfigConnectionData</b></dt>
<dd>
Specifies the size in bytes of the data pointed to by <b>pConfigConnectionData</b>. If <b>pConfigConnectionData</b> is NULL, this member will be zero.</dd>
<dt>
<b>pConfigUserData</b></dt>
<dd>
Pointer to user-specific data received from the authentication protocol's configuration user interface. This data will be available only when the <a href="#_mpr_ppp_eap_input"><b>PPP_EAP_INPUT</b></a> structure is passed in <a href="eapref_186m.htm"><b>RasEapBegin</b></a>. It will not be available in calls to <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>.
<p>
The authentication protocol should make a copy of this data in its own memory space. RAS will free the memory occupied by this data on return from the call in which the <b>PPP_EAP_INPUT</b> structure was passed. To free the memory RAS will call the <a href="eapref_68gx.htm"><b>RasEapFreeConfigUIData</b></a> function.

<p>
If the authentication protocol's configuration UI did not return any data, this member will be NULL.
</dd>
<dt>
<b>dwSizeOfConfigUserDataI</b></dt>
<dd>
Specifies the size in bytes of the data pointed to by <b>pConfigUserData</b>. If <b>pConfigUserData</b> is NULL, this member will be zero.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The <b>pszIdentity</b> and <b>pszPassword</b> members of the <a href="#_mpr_ppp_eap_input"><b>PPP_EAP_INPUT</b></a> structure are used by the <a href="eapref_186m.htm"><b>RasEapBegin</b></a> function to obtain user information, and are available only if the <b>fAuthenticator</b> member is FALSE. </p>
<p>
If the authentication protocol is using an authentication provider, such as Radius or Windows NT domain authentication, the following members</p>
<p class=indent1>
<b>pUserAttributes</b></p>
<p class=indent1>
<b>RasAuthenticateClient</b></p>
<p class=indent1>
<b>fAuthenticationComplete</b></p>
<p class=indent1>
<b>dwAuthError</b></p>
<p class=indent1>
<b>dwAuthResultCode</b></p>
<p class=indent1>
<b>pAttributesFromAuthenticator</b></p>
<p>
are used to interface with the authentication provider. Note that the array of <a href="eapref_33vp.htm"><b>RAS_AUTH_ATTRIBUTE</b></a> structures is passed only if <b>fAuthenticator</b><i> </i>is TRUE. This array contains current session information such as port identifier or local IP address.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in raseapif.h.</p>
<h4>See Also</h4>
<p>
<a href="eapref_186m.htm"><b>RasEapBegin</b></a>, <a href="eapref_68gx.htm"><b>RasEapFreeConfigUIData</b></a>, <a href="eapref_8km9.htm"><b>RasEapFreeInteractiveUIData</b></a>, <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>, <a href="eapref_33vp.htm"><b>RAS_AUTH_ATTRIBUTE</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
