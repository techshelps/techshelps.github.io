<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PPP_EAP_INFO</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_ppp_eap_info"></a>PPP_EAP_INFO</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>PPP_EAP_INFO</b> structure provides the RAS Connection Manager information about the authentication protocol, including pointers to functions located in the EAP DLL. </p>
<pre><code>typedef struct _PPP_EAP_INFO {
    DWORD dwSizeInBytes;  // size of struct identifies version
    DWORD dwEapTypeId;    // identifies the authentication protocol
    DWORD ( * RasEapBegin ) (
        VOID * *           ppWorkBuffer,
        PPP_EAP_INPUT *    pPppEapInput 
    );
    DWORD ( * RasEapEnd ) ( 
        VOID *             pWorkBuffer 
    );
    DWORD ( * RasEapMakeMessage ) ( 
        VOID*              pWorkBuf,
        PPP_EAP_PACKET*    pReceivePacket,
        PPP_EAP_PACKET*    pSendPacket,
        DWORD              cbSendPacket,
        PPP_EAP_OUTPUT*    pEapOutput,
        PPP_EAP_INPUT*     pEapInput 
    );
} PPP_EAP_INFO, *PPPP_EAP_INFO;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwSizeInBytes</b></dt>
<dd>
Specifies the size of the <b>PPP_EAP_INFO</b> structure. RAS will pass in this value to the EAP DLL. The DLL will use this value to determine which version of the <b>PPP_EAP_INFO</b> structure RAS is using. </dd>
<dt>
<b>dwEapTypeId</b></dt>
<dd>
Identifies a particular authentication protocol. This identifier must be unique throughout industry-wide implementation of EAP (see IETF Internet Draft 1310). The implementer of an authentication protocol must obtain this identifier from the  Internet Assigned Numbers Authority (IANA).</dd>
<dt>
( * <b>RasEapBegin</b> )</dt>
<dd>
Pointer to the <a href="eapref_186m.htm"><b>RasEapBegin</b></a> function for the requested authentication protocol. For more information, see the reference page for <a href="eapref_186m.htm"><b>RasEapBegin</b></a>. The authentication protocol will set the value of this member.</dd>
<dt>
( * <b>RasEapEnd</b> )</dt>
<dd>
Pointer to the <a href="eapref_7t5w.htm"><b>RasEapEnd</b></a> function for the authentication protocol. For more information, see the reference page for <a href="eapref_7t5w.htm"><b>RasEapEnd</b></a>. The authentication protocol will set the value of this member.</dd>
<dt>
( * <b>RasEapMakeMessage</b> )</dt>
<dd>
Pointer to the <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a> for the requested authentication protocol. For more information, see the reference page for <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>. The authentication protocol will set the value of this member.
</dd>
</dl>
<h4>Remarks</h4>
<p>
A given EAP DLL may implement more than one authentication protocol. Use the <b>dwEapTypeId</b> member to specify for which protocol to retrieve information.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Use version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in raseapif.h.</p>
<h4>See Also</h4>
<p>
<a href="eapref_186m.htm"><b>RasEapBegin</b></a>, <a href="eapref_7t5w.htm"><b>RasEapEnd</b></a>,<a href="eapref_6dbj.htm"> <b>RasEapGetInfo</b></a>, <a href="eapref_2tgl.htm"><b>RasEapMakeMessage</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
