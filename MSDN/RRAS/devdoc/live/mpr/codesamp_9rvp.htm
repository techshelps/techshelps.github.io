<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetGlobalInfo Sample</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_getglobalinfo_sample"></a>GetGlobalInfo Sample</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<pre><code>DWORD
APIENTRY
GetGlobalInfo(
    IN OUT PVOID    pvConfig,
    IN OUT PDWORD   pdwSize
    )
/*++
  Routine Description
      The function is called by the IP Router Manager, usually in
      because of a query by the admin utility.  We see if we have space
      enough to return our global config. If we do we return it,
      otherwise we return the size needed.

  Arguments
      pvConfig  Pointer to allocated buffer to store our config
      pdwSize   Size of config. 

  Return Value
      ERROR_INSUFFICIENT_BUFFER If the size of the buffer is too small
      ERROR_INVALID_PARAMETER
      ERROR_INVALID_DATA
      NO_ERROR

--*/
{
    PSAMPLE_PROTOCOL_GLOBAL_INFO    pGlobalInfo;
    
    EnterProtocolApi();

    TraceEnter("GetGlobalInfo");

    if(pdwSize == NULL)
    {
        Trace0(ERR,
               "GetGlobalInfo: Router Manager called us with NULL size");
        
        TraceLeave("GetGlobalInfo");

        ExitProtocolApi();
        
        return ERROR_INVALID_PARAMETER;
    }
    
    
    if((*pdwSize &lt; sizeof(SAMPLE_PROTOCOL_GLOBAL_INFO))||
       (pvConfig == NULL))
    {
        //
        // Either the size was too small or there was no
        // storage
        //
        
        *pdwSize = sizeof(SAMPLE_PROTOCOL_GLOBAL_INFO);

        Trace3(GLOBAL,
               "GetGlobalInfo: Router Manager called us with size %d and info %x. Info size should be %d",
               *pdwSize,
               pvConfig,
               sizeof(SAMPLE_PROTOCOL_GLOBAL_INFO));

        TraceLeave("GetGlobalInfo");

        ExitProtocolApi();

        return ERROR_INSUFFICIENT_BUFFER;
    }

    *pdwSize = sizeof(SAMPLE_PROTOCOL_GLOBAL_INFO);
    
    //
    // Ok, so we have a good buffer to write our info into
    //

    pGlobalInfo = (PSAMPLE_PROTOCOL_GLOBAL_INFO)pvConfig;

    //
    // Currently that is all the info we have
    //

    EnterCriticalSection(&amp;g_csGlobalInfoLock);
    
    pGlobalInfo-&gt;dwLogLevel = g_dwLogLevel;

    LeaveCriticalSection(&amp;g_csGlobalInfoLock);
    
    TraceLeave("GetGlobalInfo");

    ExitProtocolApi();

    return NO_ERROR;
}</code></pre>
<p>&nbsp;</p></body>
</HTML>
