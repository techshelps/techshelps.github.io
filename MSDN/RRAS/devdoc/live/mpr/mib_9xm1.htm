<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About the MIB API</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_about_the_mib_api"></a>About the Management Information Base (MIB)</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Management Information Base (MIB)<b> </b>API is used to query and set the values of MIB variable exported by one of the router managers or any of the routing protocols that the router manager services. These variables do not have to correspond to the variables defined in the SNMP MIB definition. Instead, it is the SNMP Agent's job to convert the variables into a format suitable for interaction with an SNMP Manager. The variables provided by the SNMP Agent must at least cover all the variables defined in the SNMP MIB definition. </p>
<p>
The module servicing the MIB call will be a router manager or one of the routing protocols. The call must specify a router manager even if the call will be handled by one of the routing protocols. In such a case, the caller should specify the router manager that corresponds to the protocol family for that routing protocol. For example, if the Open Shortest Path First (OSPF) routing protocol were handling the MIB call, the caller would need to specify the IP Router Manager, since OSPF belongs to the IP protocol family. In each of the MIB functions, the <i>dwTransportId</i> parameter specifies a router manager, and the <i>RoutingPid</i> parameter specifies the routing protocol. The router manager also has a unique <i>RoutingPid</i>, since some of the MIB variables may be handled by the router manager itself.</p>
<p>
To query and set variables, the module that services the calls must define a set of data structures. These data structures include structures to use as Object Identifiers and structures that hold the value of the MIB variables being accessed. These data structures are opaque to all but the caller of the MIB function and the module servicing the call.</p>
<p>&nbsp;</p></body>
</HTML>
