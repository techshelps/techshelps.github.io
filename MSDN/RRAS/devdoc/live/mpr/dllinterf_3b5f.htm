<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MPR_SERVICE_CHARACTERISTICS</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_mpr_mpr_service_characteristics"></a>MPR_SERVICE_CHARACTERISTICS</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>MPR_SERVICE_CHARACTERISTICS</b> structure contains information used to register a routing protocol with the router manager.</p>
<pre><code>typedef struct _MPR_SERVICE_CHARACTERISTICS {
    DWORD                               dwVersion;
    DWORD                               dwProtocolId;
    DWORD                               fSupportedFunctionality;
    PIS_SERVICE                         pfnIsService;
    PCREATE_SERVICE_ENUMERATION_HANDLE  pfnCreateServiceEnumerationHandle;
    PENUMERATE_GET_NEXT_SERVICE         pfnEnumerateGetNextService;
    PCLOSE_SERVICE_ENUMERATION_HANDLE   pfnCloseServiceEnumerationHandle;
    PGET_SERVICE_COUNT                  pfnGetServiceCount;
    PCREATE_STATIC_SERVICE              pfnCreateStaticService;
    PDELETE_STATIC_SERVICE              pfnDeleteStaticService;
    PBLOCK_CONVERT_SERVICES_TO_STATIC   pfnBlockConvertServicesToStatic;
    PBLOCK_DELETE_STATIC_SERVICES       pfnBlockDeleteStaticServices;
    PGET_FIRST_ORDERED_SERVICE          pfnGetFirstOrderedService;
    PGET_NEXT_ORDERED_SERVICE           pfnGetNextOrderedService;
}MPR_SERVICE_CHARACTERISTICS, *PMPR_SERVICE_CHARACTERISTICS;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dwVersion</b></dt>
<dd>
On input: specifies the version of Routing and RAS currently running.
<p>
On output: the routing protocol should specify the version of Routing and RAS that it requires.

<p>
The symbol <b>MS_ROUTER_VERSION</b> in the header file routprot.h is defined to be the Routing and RAS version for a given implementation.
</dd>
<dt>
<b>dwProtocolID</b></dt>
<dd>
Specifies the routing protocol that the router manager requests the DLL to register. (A common name space is used for all protocol families.)</dd>
<dt>
<b>fSupportedFunctionality</b></dt>
<dd>
On input: specifies the functionality that the router manager supports.
<p>
On output: the routing protocol should reset these flags to indicate the subset of functionality that it supports. If this routing protocol does not provide services, <b>fSupportedFunctionality</b> should be zero.

<p>
<b>Supported Functionality Values</b>

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Description</th>
</tr>
<tr valign=top>
<td width=48%>ROUTING</td>
<td width=52%>The protocol participates in Multiprotocol routing by importing Routing Table Manager APIs.</td>
</tr>
<tr valign=top>
<td width=48%>SERVICES</td>
<td width=52%>The protocol assumes responsibility for managing services (such as IPX SAP), and provides Service Table Management APIs.</td>
</tr>
<tr valign=top>
<td width=48%>DEMAND_UPDATE_ROUTES</td>
<td width=52%>The protocol is able to perform autostatic updates of routes when requested by the router manager.</td>
</tr>
<tr valign=top>
<td width=48%>DEMAND_UPDATE_SERVICES</td>
<td width=52%>The protocol is able to perform autostatic updates of services when requested by the router manager.</td>
</tr>
</table><br>

</dd>
<dt>
<b>pfnIsService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_0uud.htm"><b>IsService</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnCreateServiceEnumerationHandle</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_5tr9.htm"><b>CreateServiceEnumerationHandle</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnEnumerateGetNextService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_9hk5.htm"><b>EnumerateGetNextService</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnCloseServiceEnumerationHandle</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_1085.htm"><b>CloseServiceEnumerationHandle</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnGetServiceCount</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_8t10.htm"><b>GetServiceCount</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnCreateStaticService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_0wbp.htm"><b>CreateStaticService</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnDeleteStaticService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_4uxx.htm"><b>DeleteStaticService</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnBlockConvertServicesToStatic</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_12jn.htm"><b>BlockConvertServicesToStatic</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnBlockDeleteStaticServices</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_0q7n.htm"><b>BlockDeleteStaticServices</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnGetFirstOrderedService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_68it.htm"><b>GetFirstOrderedService</b></a> function for this routing protocol.</dd>
<dt>
<b>pfnGetNextOrderedService</b></dt>
<dd>
Pointer to an implementation of the <a href="ipx_srvs_5vs5.htm"><b>GetNextOrderedService</b></a> function for this routing protocol.
</dd>
</dl>
<h4>Remarks</h4>
<p>
The members of this structure are pointers to Service Table Management functions implemented in the routing protocol DLL. The routing protocol fills in the address values for these pointers during a call to the <a href="dllinterf_1418.htm"><b>RegisterProtocol</b></a> function.</p>
<p>
Only routing protocol DLLs that support services need to fill in the <b>MPR_SERVICE_CHARACTERISTICS</b> structure.</p>
<p>
For a complete description of a particular function pointed to by one of the structure members, see the reference page for that function.</p>
<p>
To use this structure, the user should add -DMPR50=1 to the compiler flags.</p>
<h4>See Also</h4>
<p>
<a href="dllinterf_0jeb.htm"><b>MPR_ROUTING_CHARACTERISTICS</b></a>, <a href="dllinterf_1418.htm"><b>RegisterProtocol</b></a>, <a href="macros_7do3.htm">Protocol Identifiers</a> </p>
<p>&nbsp;</p></body>
</HTML>
