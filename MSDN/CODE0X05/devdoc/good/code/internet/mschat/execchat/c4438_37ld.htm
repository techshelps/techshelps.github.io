<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EXECC.FRM</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4441"></a>EXECC.FRM</h2>
<pre><code>VERSION 4.00 <br>'**************************************************************************** <br>' <br>'  Module:     ExecChat.EXE <br>'  File:       Execc.frm <br>' <br>'  Copyright (c) Microsoft Corporation 1996-1997 <br>' <br>' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>' ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>' THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>' PARTICULAR PURPOSE. <br>'**************************************************************************** <br>Begin VB.Form ExecC  <br>   BackColor       =   &amp;H00FFFFC0&amp; <br>   Caption         =   "Executive Chat Monitoring Tool" <br>   ClientHeight    =   8310 <br>   ClientLeft      =   990 <br>   ClientTop       =   405 <br>   ClientWidth     =   8850 <br>   Height          =   8715 <br>   Left            =   930 <br>   LinkTopic       =   "ExecC" <br>   ScaleHeight     =   8310 <br>   ScaleWidth      =   8850 <br>   Top             =   60 <br>   Width           =   8970 <br>   Begin VB.CheckBox chkAutoPaste  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Paste Clipboard Content into Send text boxes?" <br>      Height          =   615 <br>      Left            =   3840 <br>      TabIndex        =   27 <br>      Top             =   720 <br>      Width           =   2055 <br>   End <br>   Begin VB.ListBox lstPartID  <br>      Enabled         =   0   'False <br>      Height          =   255 <br>      Left            =   7920 <br>      TabIndex        =   22 <br>      Top             =   120 <br>      Visible         =   0   'False <br>      Width           =   855 <br>   End <br>   Begin VB.Frame frmGuest  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Special Guest Functions" <br>      Enabled         =   0   'False <br>      Height          =   615 <br>      Left            =   120 <br>      TabIndex        =   17 <br>      Top             =   3600 <br>      Width           =   8655 <br>      Begin VB.CommandButton cmdGWhisperToHosts  <br>         Caption         =   "Whisper To Hosts" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   4560 <br>         TabIndex        =   29 <br>         Top             =   240 <br>         Width           =   1935 <br>      End <br>      Begin VB.CommandButton cmdGWhisperToModerator  <br>         Caption         =   "Whisper To Moderator" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   6600 <br>         TabIndex        =   23 <br>         Top             =   240 <br>         Width           =   1935 <br>      End <br>   End <br>   Begin VB.Frame frmModerator  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Moderator Functions" <br>      Enabled         =   0   'False <br>      Height          =   975 <br>      Left            =   120 <br>      TabIndex        =   16 <br>      Top             =   2520 <br>      Visible         =   0   'False <br>      Width           =   8655 <br>      Begin VB.CommandButton cmdMWhisperToHosts  <br>         Caption         =   "Whisper To Hosts" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   6720 <br>         TabIndex        =   28 <br>         Top             =   240 <br>         Width           =   1815 <br>      End <br>      Begin VB.CommandButton cmdMSendToEntireRoom  <br>         Caption         =   "Send To Entire Room" <br>         Enabled         =   0   'False <br>         Height          =   615 <br>         Left            =   4680 <br>         TabIndex        =   21 <br>         Top             =   240 <br>         Width           =   1935 <br>      End <br>      Begin VB.CommandButton cmdWhisperToGuest  <br>         Caption         =   "Whisper To Guest" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   6720 <br>         TabIndex        =   20 <br>         Top             =   600 <br>         Width           =   1815 <br>      End <br>      Begin VB.CommandButton cmdSetGuestID  <br>         Caption         =   "Identify Special Guest" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   18 <br>         Top             =   240 <br>         Width           =   1815 <br>      End <br>      Begin VB.Label lblGuestAlias  <br>         BackColor       =   &amp;H00FFFF00&amp; <br>         Caption         =   "&lt;Special Guest Alias&gt;" <br>         Height          =   255 <br>         Left            =   2040 <br>         TabIndex        =   19 <br>         Top             =   240 <br>         Width           =   2415 <br>      End <br>   End <br>   Begin VB.Frame frmHost  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Host Functions" <br>      Enabled         =   0   'False <br>      Height          =   975 <br>      Left            =   120 <br>      TabIndex        =   12 <br>      Top             =   1440 <br>      Visible         =   0   'False <br>      Width           =   8655 <br>      Begin VB.CommandButton cmdHWhisperToHosts  <br>         Caption         =   "Whisper To Hosts" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   6720 <br>         TabIndex        =   26 <br>         Top             =   240 <br>         Width           =   1815 <br>      End <br>      Begin VB.CheckBox chkSpeakerView  <br>         BackColor       =   &amp;H00FFFFC0&amp; <br>         Caption         =   "Enable Send and Whisper to Room Features?" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   25 <br>         Top             =   600 <br>         Width           =   3855 <br>      End <br>      Begin VB.CommandButton cmdShowHostPanel  <br>         Caption         =   "Show Host Panel" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   6720 <br>         TabIndex        =   24 <br>         Top             =   600 <br>         Width           =   1815 <br>      End <br>      Begin VB.CommandButton cmdHWhisperToModerator  <br>         Caption         =   "Whisper To Moderator" <br>         Enabled         =   0   'False <br>         Height          =   615 <br>         Left            =   4680 <br>         TabIndex        =   15 <br>         Top             =   240 <br>         Width           =   1935 <br>      End <br>      Begin VB.CommandButton cmdSetModeratorID  <br>         Caption         =   "Identify Moderator" <br>         Enabled         =   0   'False <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   13 <br>         Top             =   240 <br>         Width           =   1575 <br>      End <br>      Begin VB.Label lblModeratorAlias  <br>         BackColor       =   &amp;H00FFFF00&amp; <br>         Caption         =   "&lt;Moderator Alias&gt;" <br>         Height          =   255 <br>         Left            =   1800 <br>         TabIndex        =   14 <br>         Top             =   240 <br>         Width           =   2175 <br>      End <br>   End <br>   Begin VB.CommandButton cmdClearHistory  <br>      Caption         =   "Clear History" <br>      Height          =   375 <br>      Left            =   6000 <br>      TabIndex        =   11 <br>      Top             =   840 <br>      Width           =   1215 <br>   End <br>   Begin VB.Frame Frame1  <br>      BackColor       =   &amp;H00FFFF00&amp; <br>      Caption         =   "User Mode" <br>      Height          =   615 <br>      Left            =   120 <br>      TabIndex        =   7 <br>      Top             =   720 <br>      Width           =   3630 <br>      Begin VB.OptionButton optGuest  <br>         BackColor       =   &amp;H00FFFF00&amp; <br>         Caption         =   "Special Guest" <br>         Height          =   255 <br>         Left            =   2160 <br>         TabIndex        =   10 <br>         Top             =   240 <br>         Value           =   -1  'True <br>         Width           =   1320 <br>      End <br>      Begin VB.OptionButton optModerator  <br>         BackColor       =   &amp;H00FFFF00&amp; <br>         Caption         =   "Moderator" <br>         Height          =   255 <br>         Left            =   960 <br>         TabIndex        =   9 <br>         Top             =   240 <br>         Width           =   1455 <br>      End <br>      Begin VB.OptionButton optHost  <br>         BackColor       =   &amp;H00FFFF00&amp; <br>         Caption         =   "Host" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   8 <br>         Top             =   240 <br>         Width           =   735 <br>      End <br>   End <br>   Begin VB.CommandButton cmdFlux  <br>      Caption         =   "Enter Chat" <br>      Height          =   375 <br>      Left            =   7320 <br>      TabIndex        =   6 <br>      Top             =   840 <br>      Width           =   1455 <br>   End <br>   Begin ComctlLib.StatusBar StatusBar  <br>      Align           =   2  'Align Bottom <br>      Height          =   255 <br>      Left            =   0 <br>      TabIndex        =   31 <br>      Top             =   8055 <br>      Width           =   8850 <br>      _Version        =   65536 <br>      _ExtentX        =   15610 <br>      _ExtentY        =   450 <br>      _StockProps     =   68 <br>      AlignSet        =   -1  'True <br>      SimpleText      =   "" <br>      NumPanels       =   3 <br>      i1              =   "execc.frx":0000 <br>      i2              =   "execc.frx":00FD <br>      i3              =   "execc.frx":0202 <br>   End <br>   Begin MSChatObjectsCtl.MSChat MSChat  <br>      Height          =   3615 <br>      Left            =   120 <br>      TabIndex        =   30 <br>      Top             =   4320 <br>      Width           =   8655 <br>      _ExtentX        =   15266 <br>      _ExtentY        =   6376 <br>      BorderStyle     =   0 <br>      UIOption        =   4093 <br>      BackColor       =   192 <br>   End <br>   Begin VB.Label lblRoomTopic  <br>      BackColor       =   &amp;H00FFFF00&amp; <br>      Height          =   255 <br>      Left            =   3840 <br>      TabIndex        =   5 <br>      Top             =   360 <br>      Width           =   4935 <br>   End <br>   Begin VB.Label lblUserName  <br>      BackColor       =   &amp;H00FFFF00&amp; <br>      Height          =   255 <br>      Left            =   2040 <br>      TabIndex        =   4 <br>      Top             =   360 <br>      Width           =   1695 <br>   End <br>   Begin VB.Label lblAlias  <br>      BackColor       =   &amp;H00FFFF00&amp; <br>      Height          =   255 <br>      Left            =   120 <br>      TabIndex        =   3 <br>      Top             =   360 <br>      Width           =   1815 <br>   End <br>   Begin VB.Label Label10  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Name" <br>      Height          =   255 <br>      Left            =   2040 <br>      TabIndex        =   2 <br>      Top             =   120 <br>      Width           =   1695 <br>   End <br>   Begin VB.Label Label8  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Room Topic" <br>      Height          =   255 <br>      Left            =   3840 <br>      TabIndex        =   1 <br>      Top             =   120 <br>      Width           =   4935 <br>   End <br>   Begin VB.Label Label7  <br>      BackColor       =   &amp;H00FFFFC0&amp; <br>      Caption         =   "Alias" <br>      Height          =   255 <br>      Left            =   120 <br>      TabIndex        =   0 <br>      Top             =   120 <br>      Width           =   1815 <br>   End <br>End <br>Attribute VB_Name = "ExecC" <br>Attribute VB_Creatable = False <br>Attribute VB_Exposed = False <br> <br> <br>Option Explicit <br> <br> <br> <br>Private Sub chkSpeakerView_Click() <br>    On Error GoTo errSpeakerView <br>    If (chkSpeakerView.Value = 1) Then <br>        MSChat.UIOption = MSChat.UIOption + 19 <br>    Else <br>        MSChat.UIOption = MSChat.UIOption - 19 <br>    End If <br>    Exit Sub <br>     <br>errSpeakerView: <br>    DisplayError "chkSpeakerView_Click" <br>End Sub <br> <br>Private Sub cmdFlux_Click() <br>    On Error GoTo errFlux <br>     <br>    Select Case (MSChat.State) <br>        Case 1: 'disconnected <br>            EnterOptions.Show <br>        Case 2: 'connecting <br>            MSChat.CancelEntering <br>            WriteLogFile "Cancelling EnterRoom operation..." <br>        Case 3: 'connected <br>            MSChat.ExitRoom <br>            WriteLogFile "Exiting Room." <br>    End Select <br>    Exit Sub <br>     <br>errFlux: <br>    DisplayError "Flux_Click" <br>End Sub <br> <br> <br>Sub GetMemberCount() <br>    On Error Resume Next <br>    StatusBar.Panels(1).Text = CStr(MSChat.MemberCount) + " Members" <br>End Sub <br> <br> <br> <br> <br>Sub SetState(NewState As Integer) <br>    On Error GoTo errSetState <br>     <br>    Select Case NewState <br>    Case 1: <br>        lModeratorID = 0 <br>        WriteLogFile "lModeratorID set to 0 in SetState(1)" <br>        lGuestID = 0 <br>        WriteLogFile "lGuestID set to 0 in SetState(1)" <br>        nRealNameType = 0 <br>         <br>        lstPartID.Clear <br>        WhispToHosts.lstHosts.Clear <br>         <br>        lblModeratorAlias.Caption = "&lt;Moderator Alias&gt;" <br>        lblGuestAlias.Caption = "&lt;Special Guest Alias&gt;" <br>         <br>        cmdFlux.Caption = "Enter Room" <br>        StatusBar.Panels(1).Text = "0 Members" <br>        StatusBar.Panels(2).Text = "Disconnected" <br>        StatusBar.Panels(3).Text = "Not in a room" <br>        lblAlias.Caption = "" <br>        lblUserName.Caption = "" <br>        lblRoomTopic.Caption = "" <br>         <br>        MSChat.BackColor = &amp;HC0&amp; <br>         <br>        optHost.Enabled = True <br>        optModerator.Enabled = True <br>        optGuest.Enabled = True <br>         <br>        frmHost.Enabled = False <br>        frmModerator.Enabled = False <br>        frmGuest.Enabled = False <br>         <br>        cmdSetModeratorID.Enabled = False <br>        cmdSetGuestID.Enabled = False <br>         <br>        cmdGWhisperToHosts.Enabled = False <br>        cmdMWhisperToHosts.Enabled = False <br>        cmdHWhisperToHosts.Enabled = False <br>         <br>        cmdGWhisperToModerator.Enabled = False <br>        cmdHWhisperToModerator.Enabled = False <br>        cmdWhisperToGuest.Enabled = False <br>         <br>        cmdMSendToEntireRoom.Enabled = False <br>        cmdShowHostPanel.Enabled = False <br>        WriteLogFile "" <br> <br>    Case 2: <br>        cmdFlux.Caption = "Cancel entering" <br>        StatusBar.Panels(2).Text = "Connecting..." <br>        MSChat.BackColor = &amp;H80FF&amp; <br>        optHost.Enabled = False <br>        optModerator.Enabled = False <br>        optGuest.Enabled = False <br>     <br>    Case 3: <br>        cmdFlux.Caption = "Leave Room" <br>        StatusBar.Panels(2).Text = "Connected" <br>        MSChat.BackColor = &amp;HC000&amp; <br>         <br>        frmHost.Enabled = True <br>        frmModerator.Enabled = True <br>        frmGuest.Enabled = True <br>         <br>        cmdSetModeratorID.Enabled = True <br>        cmdSetGuestID.Enabled = True <br>         <br>        cmdGWhisperToHosts.Enabled = True <br>        cmdMWhisperToHosts.Enabled = True <br>        cmdHWhisperToHosts.Enabled = True <br>         <br>        cmdMSendToEntireRoom.Enabled = True <br>        cmdShowHostPanel.Enabled = True <br>    End Select <br>     <br>    Exit Sub <br> <br>errSetState: <br>    DisplayError "SetState" <br>End Sub <br> <br> <br>Private Sub cmdGWhisperToHosts_Click() <br>    WhispToHosts.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToHosts.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br>Private Sub cmdGWhisperToModerator_Click() <br>    On Error Resume Next <br>    WhispToMod.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToMod.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br> <br> <br>Private Sub cmdHWhisperToHosts_Click() <br>    WhispToHosts.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToHosts.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br>Private Sub cmdMSendToEntireRoom_Click() <br>    SendToRoom.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        SendToRoom.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br> <br>Private Sub cmdMWhisperToHosts_Click() <br>    WhispToHosts.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToHosts.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br>Private Sub cmdSetGuestID_Click() <br>    Dim txtRealName As String <br>     <br>    On Error GoTo errSetGuestID <br>     <br>    nRealNameType = RN_GUEST <br>    MSChat.GetParticipantRealName -1, "", False, txtRealName <br>    Exit Sub <br>     <br>errSetGuestID: <br>    DisplayError "cmdSetGuestID_Click" <br>End Sub <br> <br>Private Sub cmdSetModeratorID_Click() <br>    Dim txtRealName As String <br>     <br>    On Error GoTo errSetModeratorID <br>     <br>    nRealNameType = RN_MODERATOR <br>    MSChat.GetParticipantRealName -1, "", False, txtRealName <br>    Exit Sub <br>     <br>errSetModeratorID: <br>    DisplayError "cmdSetModeratorID" <br>End Sub <br> <br>Private Sub cmdShowHostPanel_Click() <br>    On Error Resume Next <br>    HostPanel.Show <br>End Sub <br> <br>Private Sub cmdWhisperToGuest_Click() <br>    WhispToGuest.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToGuest.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br>Private Sub cmdHWhisperToModerator_Click() <br>    On Error Resume Next <br>    WhispToMod.Show <br>    If (chkAutoPaste.Value = 1) Then <br>        WhispToMod.txtMessage.Text = Clipboard.GetText() <br>    End If <br>End Sub <br> <br> <br> <br>Private Sub Form_Load() <br>    MSChat.Top = MSCHAT_TOP <br>    <br>    frmHost.Top = FUNCTIONS_TOP <br>    frmModerator.Top = FUNCTIONS_TOP <br>    frmGuest.Top = FUNCTIONS_TOP <br>    lModeratorID = 0 <br>    lGuestID = 0 <br>    nRealNameType = 0 <br>    Load WhispToHosts <br>     <br>    OpenLogFile <br>End Sub <br> <br>Private Sub Form_Resize() <br>    On Error Resume Next <br>    MSChat.Height = ExecC.Height - StatusBar.Height - MSChat.Top - 500 <br>    MSChat.Width = ExecC.Width - 350 <br>End Sub <br> <br> <br>Private Sub Form_Unload(Cancel As Integer) <br>    Unload EnterOptions <br>    Unload HostPanel <br>    Unload KickBan <br>    Unload UISettings <br>    Unload WhispToMod <br>    Unload WhispToGuest <br>    Unload WhispToHosts <br>    Unload SendToRoom <br>     <br>    CloseLogFile <br>End Sub <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>Private Sub cmdClearHistory_Click() <br>    On Error Resume Next <br>    MSChat.ClearHistory <br>End Sub <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br>Private Sub MSChat_OnEndEnumeration() <br>    On Error GoTo errOnEndEnumeration <br>     <br>    ' For the Moderator and the Guest, ignore all none-host members <br>    If (Not optHost.Value) Then <br>        Dim nCnt As Integer <br>        Dim nStatus As Integer <br>        Dim nAliasLen As Integer <br>     <br>        For nCnt = 0 To lstPartID.ListCount - 1 <br>            nAliasLen = InStr(lstPartID.List(nCnt), ",") - 1 <br>            nStatus = CInt(Mid(lstPartID.List(nCnt), nAliasLen + 2)) <br>            If (((nStatus And STAT_PARTICIPANT) Or (nStatus And STAT_SPECTATOR)) And (lstPartID.ItemData(nCnt) &lt;&gt; MSChat.ThisParticipantID)) Then <br>                MSChat.SetParticipantStatus lstPartID.ItemData(nCnt), MASK_IGNORED, STAT_IGNORED <br>            End If <br>        Next nCnt <br>    End If <br>     <br>    lblRoomTopic.Caption = MSChat.RoomTopic <br>    lblUserName.Caption = MSChat.ThisParticipantName <br>    StatusBar.Panels(3).Text = MSChat.RoomPath <br>     <br>    GetMemberCount <br>    Exit Sub <br>     <br>errOnEndEnumeration: <br>    DisplayError "OnEndEnumeration" <br>End Sub <br> <br>Private Sub MSChat_OnEnterParticipant(ByVal ParticipantID As Long, ByVal Alias As String, ByVal Status As Integer) <br>    On Error GoTo errOnEnterParticipant <br>     <br>    GetMemberCount <br>     <br>    lstPartID.AddItem Alias + "," + CStr(Status) <br>    lstPartID.ItemData(lstPartID.NewIndex) = ParticipantID <br>     <br>    If (Status And STAT_HOST) Then <br>        WhispToHosts.lstHosts.AddItem Alias <br>        WhispToHosts.lstHosts.ItemData(WhispToHosts.lstHosts.NewIndex) = ParticipantID <br>    End If <br>     <br>    If ((MSChat.ThisParticipantID &lt;&gt; 0) And (optGuest.Value Or optModerator.Value) And ((Status And STAT_PARTICIPANT) Or (Status And STAT_SPECTATOR))) Then <br>        ' Guest and Moderator ignore anybody that is not a host <br>        MSChat.SetParticipantStatus ParticipantID, MASK_IGNORED, STAT_IGNORED <br>    End If <br>     <br>    Exit Sub <br>     <br>errOnEnterParticipant: <br>    DisplayError "OnEnterParticipant" <br>End Sub <br> <br> <br>Private Sub MSChat_OnExitParticipant(ByVal ParticipantID As Long) <br>     <br>    On Error GoTo errOnExitPart <br>     <br>    GetMemberCount <br>     <br>    Dim nLstPos As Integer <br>    <br>    nLstPos = nFindParticipantIndex(ParticipantID) <br>    If nLstPos &gt;= 0 Then <br>        lstPartID.RemoveItem nLstPos <br>    Else <br>        WriteLogFile "Couldn't find participant in OnExitParticipant(" + CStr(ParticipantID) + ")" <br>    End If <br>     <br>    nLstPos = nFindHostIndex(ParticipantID) <br>    If nLstPos &gt;= 0 Then <br>        WhispToHosts.lstHosts.RemoveItem nLstPos <br>    End If <br>     <br>    If lModeratorID = ParticipantID Then <br>        lModeratorID = 0 <br>        WriteLogFile "lModeratorID set to 0 in OnExitParticipant because Moderator left the room." <br>        lblModeratorAlias.Caption = "&lt;Moderator Alias&gt;" <br>        cmdHWhisperToModerator.Enabled = False <br>        cmdGWhisperToModerator.Enabled = False <br>    End If <br>    If lGuestID = ParticipantID Then <br>        lGuestID = 0 <br>        WriteLogFile "lGuestID set to 0 in OnExitParticipant because Guest left the room." <br>        lblGuestAlias.Caption = "&lt;Guest Alias&gt;" <br>        cmdWhisperToGuest.Enabled = False <br>    End If <br>     <br>    Exit Sub <br>     <br>errOnExitPart: <br>    DisplayError "OnExitParticipant" <br>End Sub <br> <br>Private Function nFindParticipantIndex(ParticipantID As Long) As Integer <br>    Dim nCnt As Integer <br> <br>    On Error GoTo errFindPartIndex <br>     <br>    nFindParticipantIndex = -1 <br>    For nCnt = 0 To lstPartID.ListCount - 1 <br>        If lstPartID.ItemData(nCnt) = ParticipantID Then <br>            nFindParticipantIndex = nCnt <br>            Exit For <br>        End If <br>    Next nCnt <br>    Exit Function <br>     <br>errFindPartIndex: <br>    DisplayError "nFindPArticipantIndex" <br>End Function <br> <br>Private Function nFindHostIndex(ParticipantID As Long) As Integer <br>    Dim nCnt As Integer <br> <br>    On Error GoTo errFindHostIndex <br>     <br>    nFindHostIndex = -1 <br>    For nCnt = 0 To WhispToHosts.lstHosts.ListCount - 1 <br>        If WhispToHosts.lstHosts.ItemData(nCnt) = ParticipantID Then <br>            nFindHostIndex = nCnt <br>            Exit For <br>        End If <br>    Next nCnt <br>    Exit Function <br>     <br>errFindHostIndex: <br>    DisplayError "nFindHostIndex" <br>End Function <br> <br> <br>Private Function lFindParticipantID(Alias As String) As Long <br>    Dim nCnt As Integer <br>    Dim nAliasLen As Integer <br> <br>    On Error GoTo errFindPartID <br>     <br>    lFindParticipantID = 0 <br>    For nCnt = 0 To lstPartID.ListCount - 1 <br>        nAliasLen = InStr(lstPartID.List(nCnt), ",") - 1 <br>        If Left(lstPartID.List(nCnt), nAliasLen) = Alias Then <br>            lFindParticipantID = lstPartID.ItemData(nCnt) <br>            Exit For <br>        End If <br>    Next nCnt <br>    Exit Function <br>     <br>errFindPartID: <br>    DisplayError "lFindParticipantID" <br>End Function <br> <br>Private Function nFindStatus(Alias As String) As Integer <br>    Dim nCnt As Integer <br>    Dim nAliasLen As Integer <br> <br>    On Error GoTo errFindStatus <br>     <br>    nFindStatus = 0 <br>    For nCnt = 0 To lstPartID.ListCount - 1 <br>        nAliasLen = InStr(lstPartID.List(nCnt), ",") - 1 <br>        If Left(lstPartID.List(nCnt), nAliasLen) = Alias Then <br>            nFindStatus = CInt(Mid(lstPartID.List(nCnt), nAliasLen + 2)) <br>            Exit For <br>        End If <br>    Next nCnt <br>    Exit Function <br>     <br>errFindStatus: <br>    DisplayError "nFindStatus" <br>End Function <br>Private Sub MSChat_OnMessage(ByVal SenderID As Long, ByVal Message As Variant, ByVal MessageType As Integer) <br>    On Error GoTo errOnMessage <br>     <br>    If (optGuest.Value) Then <br>        If (VarType(Message) = vbInteger) Then <br>            If (Message = 1984) Then <br>                lModeratorID = SenderID <br>                WriteLogFile "lModeratorID set to " + CStr(SenderID) + " in OnMessage handler." <br>                cmdGWhisperToModerator.Enabled = True <br>            End If <br>        End If <br>    End If <br>     <br>    Exit Sub <br>     <br>errOnMessage: <br>    DisplayError "OnMessage" <br>End Sub <br> <br>Private Sub MSChat_OnParticipantAliasChanged(ByVal ParticipantID As Long, ByVal OldAlias As String, ByVal NewAlias As String) <br>    On Error GoTo errOnPartAliasChanged <br>         <br>    Dim nLstPos As Integer <br>         <br>    nLstPos = nFindParticipantIndex(ParticipantID) <br>    If (nLstPos &lt;&gt; -1) Then <br>        lstPartID.List(nLstPos) = NewAlias + "," + Mid(lstPartID.List(nLstPos), Len(OldAlias) + 2) <br>    Else <br>        WriteLogFile "Couldn't find participant in OnParticipantAliasChanged(" + CStr(ParticipantID) + "," + OldAlias + "," + NewAlias + ")" <br>    End If <br>     <br>    nLstPos = nFindHostIndex(ParticipantID) <br>    If nLstPos &gt;= 0 Then <br>        WhispToHosts.lstHosts.RemoveItem nLstPos <br>        WhispToHosts.lstHosts.AddItem NewAlias <br>        WhispToHosts.lstHosts.ItemData(WhispToHosts.lstHosts.NewIndex) = ParticipantID <br>    End If <br>     <br>    Exit Sub <br>     <br>errOnPartAliasChanged: <br>    DisplayError "OnParticipantAliasChanged" <br>End Sub <br> <br>Private Sub MSChat_OnParticipantRealName(ByVal Alias As String, ByVal RealName As String) <br>     <br>    On Error GoTo errOnPartRealName <br>     <br>    Select Case nRealNameType <br>    Case RN_MODERATOR: <br>        lModeratorID = lFindParticipantID(Alias) <br>        If (lModeratorID &lt;&gt; 0) Then <br>            If (lModeratorID &lt;&gt; MSChat.ThisParticipantID) Then <br>                WriteLogFile "lModeratorID set to " + CStr(lModeratorID) + " (" + Alias + ") in OnParticipantRealName handler." <br>                lblModeratorAlias.Caption = Alias <br>                cmdHWhisperToModerator.Enabled = True <br>            Else <br>                MsgBox "You cannot select yourself as the Moderator. Please select another member.", vbOKOnly, "Executive Chat Monitoring Tool" <br>                lModeratorID = 0 <br>            End If <br>        Else <br>            WriteLogFile "Couldn't find Moderator in OnParticipantRealName(" + Alias + "," + RealName + ")" <br>        End If <br>         <br>    Case RN_GUEST: <br>        lGuestID = lFindParticipantID(Alias) <br>        If (lGuestID &lt;&gt; 0) Then <br>            If (lGuestID &lt;&gt; MSChat.ThisParticipantID) Then <br>                cmdWhisperToGuest.Enabled = True <br>                lblGuestAlias.Caption = Alias <br>                MSChat.SendMessage lGuestID, 1, CVar(1984) <br>            Else <br>                MsgBox "You cannot select yourself as the Special Guest. Please select another member.", vbOKOnly, "Executive Chat Monitoring Tool" <br>                lGuestID = 0 <br>            End If <br>        Else <br>            WriteLogFile "Couldn't find Guest in OnParticipantRealName(" + Alias + "," + RealName + ")" <br>        End If <br>     <br>    Case RN_PARTICIPANT: <br>        HostPanel.lblAsyncAlias.Caption = Alias <br>        HostPanel.lblAsyncRealName.Caption = RealName <br>    End Select <br>     <br>    Exit Sub <br> <br>errOnPartRealName: <br>    DisplayError "OnParticipantRealName" <br>End Sub <br> <br> <br>Private Sub MSChat_OnParticipantStatusChanged(ByVal ParticipantID As Long, ByVal Status As Integer) <br>         <br>    On Error GoTo errOnPartStatusChanged <br>     <br>    Dim nLstPos As Integer <br>    Dim nAliasLen As Integer <br>    Dim strAlias As String <br>    <br>    nLstPos = nFindParticipantIndex(ParticipantID) <br>    If nLstPos &gt;= 0 Then <br>        nAliasLen = InStr(lstPartID.List(nLstPos), ",") - 1 <br>        If (nAliasLen) Then <br>            strAlias = Left(lstPartID.List(nLstPos), nAliasLen) <br>            lstPartID.List(nLstPos) = strAlias + "," + CStr(Status) <br>        End If <br>    Else <br>        WriteLogFile "Couldn't find participant in OnParticipantStatusChanged(" + CStr(ParticipantID) + "," + CStr(Status) + ")" <br>    End If <br>     <br>    nLstPos = nFindHostIndex(ParticipantID) <br>    If (nLstPos &gt;= 0) And (Not (Status And STAT_HOST)) Then <br>        WhispToHosts.lstHosts.RemoveItem nLstPos <br>    End If <br>     <br>    If (Status And STAT_HOST) And (nLstPos = -1) Then <br>        WhispToHosts.lstHosts.AddItem strAlias <br>        WhispToHosts.lstHosts.ItemData(WhispToHosts.lstHosts.NewIndex) = ParticipantID <br>    End If <br>    Exit Sub <br>     <br>errOnPartStatusChanged: <br>    DisplayError "OnParticipantStatusChanged" <br>End Sub <br> <br>Private Sub MSChat_OnRoomTopicChanged(ByVal NewRoomTopic As String) <br>    On Error Resume Next <br>    lblRoomTopic.Caption = NewRoomTopic <br>End Sub <br> <br> <br>Private Sub MSChat_OnStateChanged(ByVal NewState As Integer) <br>    SetState NewState <br>End Sub <br> <br> <br> <br>Private Sub optGuest_Click() <br>    On Error Resume Next <br>    HostPanel.Hide <br>    MSChat.UIOption = UIOPT_GUEST <br>    MSChat.Top = frmGuest.Top + frmGuest.Height + 100 <br>    MSChat.Height = ExecC.Height - StatusBar.Height - MSChat.Top - 500 <br>    frmHost.Visible = False <br>    frmModerator.Visible = False <br>    frmGuest.Visible = True <br>End Sub <br> <br>Private Sub optHost_Click() <br>    On Error Resume Next <br>    HostPanel.Show <br>    MSChat.UIOption = UIOPT_HOST <br>    MSChat.Top = frmHost.Top + frmHost.Height + 100 <br>    MSChat.Height = ExecC.Height - StatusBar.Height - MSChat.Top - 500 <br>    frmHost.Visible = True <br>    frmModerator.Visible = False <br>    frmGuest.Visible = False <br>End Sub <br> <br> <br>Private Sub optModerator_Click() <br>    On Error Resume Next <br>    HostPanel.Hide <br>    MSChat.UIOption = UIOPT_MODERATOR <br>    MSChat.Top = frmModerator.Top + frmModerator.Height + 100 <br>    MSChat.Height = ExecC.Height - StatusBar.Height - MSChat.Top - 500 <br>    frmHost.Visible = False <br>    frmModerator.Visible = True <br>    frmGuest.Visible = False <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
