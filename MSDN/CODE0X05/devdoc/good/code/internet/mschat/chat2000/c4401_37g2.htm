<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ENTERDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4412"></a>ENTERDLG.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chat2000.EXE <br>//  File:       EnterDlg.cpp : implementation file <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1995-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>#include "stdafx.h" <br>#include "Chat2000.h" <br>#include "EnterDlg.h" <br> <br>#include "globals.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CEnterDlg dialog <br> <br> <br>CEnterDlg::CEnterDlg(CWnd* pParent /*=NULL*/) <br>: CDialog(CEnterDlg::IDD, pParent) <br>{ <br>//{{AFX_DATA_INIT(CEnterDlg) <br>m_szNickName = _T(""); <br>m_szPassword = _T(""); <br>m_szRoom = _T(""); <br>//}}AFX_DATA_INIT <br> <br>m_iFlags = 0x00000; <br>m_iTypes = 0x00000; <br> <br>} <br> <br> <br>void CEnterDlg::DoDataExchange(CDataExchange* pDX) <br>{ <br>CDialog::DoDataExchange(pDX); <br>//{{AFX_DATA_MAP(CEnterDlg) <br>DDX_Text(pDX, IDC_EDIT_NICKNAME, m_szNickName); <br>DDX_Text(pDX, IDC_EDIT_PASSWORD, m_szPassword); <br>DDX_Text(pDX, IDC_EDIT_ROOM, m_szRoom); <br>//}}AFX_DATA_MAP <br> <br>intiControl = 0; <br>if (pDX-&gt;m_bSaveAndValidate) <br>{ <br>//we are getting the data from the controls <br> <br>m_iFlags = 0; //clean the variable from old settings <br>//get the checked flags  <br>for (iControl = IDC_CREATE; iControl &lt;= IDC_AUTENTICATED_TALK; iControl++) <br>{ <br>m_iFlags |= ((CButton *)GetDlgItem(iControl))-&gt;GetCheck() &lt;&lt; (iControl - IDC_CREATE); <br>} <br> <br>m_iTypes = 0; //clean the variable from old settings <br>//get the checked types <br>for (iControl = IDC_ANY_USER; iControl &lt;= IDC_SPECTATOR; iControl++) <br>{ <br>m_iTypes |= ((CButton *)GetDlgItem(iControl))-&gt;GetCheck() &lt;&lt; (iControl - IDC_ANY_USER); <br>} <br>} <br>else <br>{ <br>//we are putting the data in the controls <br>short iRest= m_iFlags; <br> <br>//set the checked flags  <br>for (iControl = IDC_CREATE; iControl &lt;= IDC_AUTENTICATED_TALK; iControl++) <br>{ <br>((CButton *)GetDlgItem(iControl))-&gt;SetCheck(iRest&amp;0x1); <br>iRest &gt;&gt;= 1; //pop the last decimal <br>} <br>//set the checked types  <br>iRest= m_iTypes; <br>for (iControl = IDC_ANY_USER; iControl &lt;= IDC_SPECTATOR; iControl++) <br>{ <br>((CButton *)GetDlgItem(iControl))-&gt;SetCheck(iRest&amp;0x1); <br>iRest &gt;&gt;= 1; //pop the last decimal <br>} <br>} <br>} <br> <br> <br>BEGIN_MESSAGE_MAP(CEnterDlg, CDialog) <br>//{{AFX_MSG_MAP(CEnterDlg) <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CEnterDlg message handlers <br> <br>BOOL CEnterDlg::OnInitDialog()  <br>{ <br>CDialog::OnInitDialog(); <br> <br>//default values for the controls <br>m_szRoom.LoadString(IDS_DEFAULT_CHAT_ROOM); <br>m_szNickName.LoadString(IDS_DEFAULT_NICKNAME); <br>m_iFlags = ENTER_FLAG_JOIN_CREATE; <br>m_iTypes = ENTER_TYPE_ANY_USER; <br> <br> <br>UpdateData(FALSE); //put the data into the controls <br> <br>return TRUE;  // return TRUE unless you set the focus to a control <br>              // EXCEPTION: OCX Property Pages should return FALSE <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
