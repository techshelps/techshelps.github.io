<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PARTIC.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4423"></a>PARTIC.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chat2000.EXE <br>//  File:       Partic.cpp <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1995-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>#include "stdafx.h" <br>#include "partic.h" <br> <br>CParticipant::CParticipant() <br>{ <br>} <br> <br>CParticipant::CParticipant(long ParticipantID, LPCTSTR Alias, short Status) <br>{ <br>m_iID = (short) ParticipantID; <br>//m_szName = Name; <br>m_szAlias = Alias; <br>m_iStatus = Status; <br>} <br> <br> <br>bool CParticipant::operator== ( const CParticipant &amp;src ) const <br>{ <br>if ((m_iID== src.m_iID))//&amp;&amp; <br>//(szName== src.szName)&amp;&amp; <br>//(szAlias== src.szAlias) ) <br>{ <br>return TRUE; <br>} <br>else <br>{ <br>return FALSE; <br>} <br>} <br> <br>void CParticipant::operator= ( const CParticipant&amp; src ) <br>{ <br>m_iID= src.m_iID; <br>m_szName= src.m_szName; <br>m_szAlias= src.m_szAlias; <br>m_iStatus= src.m_iStatus; <br>} <br> <br> <br>//Set Attributes <br>void CParticipant::SetAlias(LPCTSTR Alias_p) <br>{ <br>m_szAlias = Alias_p; <br>} <br> <br>void CParticipant::SetStatus (short Status_p) <br>{ <br>m_iStatus = Status_p; <br>} <br> <br>void CParticipant::SetName(LPCTSTR Name_p) <br>{ <br>m_szName = Name_p; <br>} <br> <br> <br>//get attributes <br>short CParticipant::GetID () <br>{ <br>return m_iID; <br>} <br> <br>CString CParticipant::GetAlias() <br>{ <br>return m_szAlias; <br>} <br> <br>short CParticipant::GetStatus () <br>{ <br>return m_iStatus; <br>} <br> <br>CString CParticipant::GetName() <br>{ <br>return m_szName; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
