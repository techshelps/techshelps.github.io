<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C2DOC.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4404"></a>C2DOC.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chat2000.EXE <br>//  File:       C2Doc.cpp : implementation of the CChat2000Doc class <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1995-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>#include "stdafx.h" <br>#include "Chat2000.h" <br> <br>#include "C2Doc.h" <br>#include "C2View.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CChat2000Doc <br> <br>IMPLEMENT_DYNCREATE(CChat2000Doc, CDocument) <br> <br>BEGIN_MESSAGE_MAP(CChat2000Doc, CDocument) <br>//{{AFX_MSG_MAP(CChat2000Doc) <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CChat2000Doc construction/destruction <br> <br>CChat2000Doc::CChat2000Doc() <br>{ <br>// TODO: add one-time construction code here <br> <br>} <br> <br>CChat2000Doc::~CChat2000Doc() <br>{ <br>} <br> <br>BOOL CChat2000Doc::OnNewDocument() <br>{ <br>if (!CDocument::OnNewDocument()) <br>return FALSE; <br> <br>// TODO: add reinitialization code here <br>// (SDI documents will reuse this document) <br> <br>return TRUE; <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CChat2000Doc serialization <br> <br>void CChat2000Doc::Serialize(CArchive&amp; ar) <br>{ <br>if (ar.IsStoring()) <br>{ <br>// TODO: add storing code here <br>POSITION pos = GetFirstViewPosition(); <br>//get the first (and only) view  <br>CChat2000View *pView =(CChat2000View *) GetNextView( pos ); <br>ASSERT (pView); <br>//write the ocx History <br>ar &lt;&lt; pView-&gt;GetHistory(); <br>} <br>else <br>{ <br>// TODO: add loading code here <br>} <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CChat2000Doc diagnostics <br> <br>#ifdef _DEBUG <br>void CChat2000Doc::AssertValid() const <br>{ <br>CDocument::AssertValid(); <br>} <br> <br>void CChat2000Doc::Dump(CDumpContext&amp; dc) const <br>{ <br>CDocument::Dump(dc); <br>} <br>#endif //_DEBUG </code></pre>
<p>&nbsp;</p></body>
</HTML>
