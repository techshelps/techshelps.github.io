<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C2VIEW.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4407"></a>C2VIEW.H</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chat2000.EXE <br>//  File:       C2View.h : interface of the CChat2000View class <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1995-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>//{{AFX_INCLUDES() <br>#include "mschat.h" <br>//}}AFX_INCLUDES <br> <br>#include "partic.h" <br> <br>#define POPUPMENU3 <br> <br>class CChat2000View : public CView <br>{ <br>protected: // create from serialization only <br>CChat2000View(); <br>DECLARE_DYNCREATE(CChat2000View) <br> <br>// Attributes <br>public: <br>CString GetHistory(); <br>CChat2000Doc* GetDocument(); <br> <br>// Operations <br>public: <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CChat2000View) <br>public: <br>virtual void OnDraw(CDC* pDC);  // overridden to draw this view <br>virtual BOOL PreCreateWindow(CREATESTRUCT&amp; cs); <br>protected: <br>virtual void OnActivateView(BOOL bActivate, CView* pActivateView, CView* pDeactiveView); <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>public: <br>virtual ~CChat2000View(); <br>#ifdef _DEBUG <br>virtual void AssertValid() const; <br>virtual void Dump(CDumpContext&amp; dc) const; <br>#endif <br> <br>protected: <br>//the OCX ! <br>CMSChatm_ocxChat; <br> <br>//OCX does not expose the list of participants, we have to do the job <br>//I did not put the list into the OCX itself to avoid an not-so-elegant <br>//passing back and forth notifications from the VIEW to the OCX <br>CList &lt;CParticipant, CParticipant&amp;&gt; m_ListOfPart; <br>POSITION m_posThisParticipant; <br> <br>//used to keep the video device caps to resize the OCX <br>intm_iXppli; <br>intm_iYppli; <br> <br>//track if the view has focus or not. Useful to pop up menus <br>BOOLm_bActive; <br> <br>//participant list manager <br>voidAddParticipant(CParticipant &amp;Part_p); <br>voidAddParticipant(long ParticipantID, LPCTSTR Alias, short Status); <br>voidDelParticipantID(short iID_p); <br>voidDelAll(); <br>POSITIONFindParticipantID(short iID_p); <br>CParticipant*GetParticipantPos(POSITION Pos_p); <br>CParticipant*GetParticipantID(short iID_p); <br>BOOLIsValidPos(POSITION Pos_p); <br>CStringGetParticipantAlias(); <br> <br> <br>// Generated message map functions <br>protected: <br>//{{AFX_MSG(CChat2000View) <br>afx_msg int OnCreate(LPCREATESTRUCT lpCreateStruct); <br>afx_msg void OnChatEnterRoom(); <br>afx_msg void OnChatExitRoom(); <br>afx_msg void OnUpdateChatEnterRoom(CCmdUI* pCmdUI); <br>afx_msg void OnUpdateChatExitRoom(CCmdUI* pCmdUI); <br>afx_msg void OnOnStateChangedOcxChat(short NewState); <br>afx_msg void OnSize(UINT nType, int cx, int cy); <br>afx_msg void OnParentNotify(UINT message, LPARAM lParam); <br>afx_msg void OnChatAboutmschat(); <br>afx_msg void OnChatKickParticipant(); <br>afx_msg void OnUpdateChatKickparticipant(CCmdUI* pCmdUI); <br>afx_msg void OnOnParticipantStatusChangedOcxChat(long ParticipantID, short Status); <br>afx_msg void OnOnBeginEnumerationOcxChat(); <br>afx_msg void OnOnEndEnumerationOcxChat(); <br>afx_msg void OnOnExitParticipantOcxChat(long ParticipantID); <br>afx_msg void OnOnEnterParticipantOcxChat(long ParticipantID, LPCTSTR Alias, short Status); <br>afx_msg void OnChatClearhistory(); <br>afx_msg void OnChatBanparticipant(); <br>afx_msg void OnUpdateChatBanparticipant(CCmdUI* pCmdUI); <br>afx_msg void OnChatShowinfo(); <br>afx_msg void OnOnErrorOcxChat(short ErrorCode, LPCTSTR Description); <br>afx_msg void OnChatSetroomtopic(); <br>afx_msg void OnUpdateChatSetroomtopic(CCmdUI* pCmdUI); <br>DECLARE_EVENTSINK_MAP() //needed to trap events from the OCX <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br> <br>void UpdateStatusUI(short NewState) ; <br>void UpdateStatusUI() ; <br>}; <br> <br>#ifndef _DEBUG  // debug version in C2View.cpp <br>inline CChat2000Doc* CChat2000View::GetDocument() <br>   { return (CChat2000Doc*)m_pDocument; } <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
