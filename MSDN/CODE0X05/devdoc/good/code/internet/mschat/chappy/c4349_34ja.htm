<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>INPUTRE.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4366"></a>INPUTRE.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chappy.EXE <br>//  File:       InputRE.cpp : implementation file <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1996-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>#include "stdafx.h" <br>#include "Chappy.h" <br>#include "InputRE.h" <br>#include "ChppyVw.h" <br>#include "Globals.h" <br>#include "Utility.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CInputREdit <br> <br>CInputREdit::CInputREdit() <br>{ <br>m_bIsCtrlDown = FALSE; <br>} <br> <br>CInputREdit::~CInputREdit() <br>{ <br>} <br> <br> <br>BEGIN_MESSAGE_MAP(CInputREdit, CRichEditCtrl) <br>//{{AFX_MSG_MAP(CInputREdit) <br>ON_WM_KEYUP() <br>ON_WM_KEYDOWN() <br>ON_WM_RBUTTONDOWN() <br>ON_WM_CREATE() <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CInputREdit message handlers <br> <br>void CInputREdit::OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags)  <br>{ <br>TRACE3 ("KEY_DOWN: %u %u %u\n",nChar, nRepCnt, nFlags); <br> <br>switch (nChar) <br>{ <br>case CTRL_KEY: <br>m_bIsCtrlDown = TRUE; <br>break; <br> <br>case VK_RETURN: <br>//-- RETURN == SEND <br>//-- CTRL+RETURN == new line <br>//catch the KEY_DOWN because KEY_UP it would not work with StickKeys turned on <br>// series of events with StickKeys <br>//CTRL DOWN <br>//ENTER DOWN <br>//CTRL UP <br>//ENTER UP  &lt;-- seams that we are not pressing CTRL <br>if (m_bIsCtrlDown) break; <br> <br>TRACE0 ("-- ENTER -- \n"); <br> <br>//Post the message in the chat room <br>((CChappyView *)GetParent())-&gt;PostChatMessage(msgtNormal); <br> <br>//exit function without calling the parent OnKeyDown() <br>break; <br> <br>default: <br>break; <br>} <br>CRichEditCtrl::OnKeyDown(nChar, nRepCnt, nFlags); <br>} <br> <br>void CInputREdit::OnKeyUp(UINT nChar, UINT nRepCnt, UINT nFlags)  <br>{ <br>TRACE3 ("KEY_UP: %u %u %u\n",nChar, nRepCnt, nFlags); <br> <br>switch (nChar) <br>{ <br>case VK_RETURN: <br>if (m_bIsCtrlDown) break; <br>//clear the control <br>SetSel(0,-1); <br>Clear();  <br>break; <br> <br>case CTRL_KEY: <br>m_bIsCtrlDown = FALSE; <br> <br>default: <br>break; <br>} <br> <br>CRichEditCtrl::OnKeyUp(nChar, nRepCnt, nFlags); <br>} <br> <br>void CInputREdit::OnRButtonDown(UINT nFlags, CPoint point)  <br>{ <br>CPoint pt(point); <br>ClientToScreen(&amp;pt); <br>PopMenu (INPUT_MENU, pt); <br> <br> <br>CRichEditCtrl::OnRButtonDown(nFlags, point); <br>} <br> <br> <br>int CInputREdit::OnCreate(LPCREATESTRUCT lpCreateStruct)  <br>{ <br>if (CREdit::OnCreate(lpCreateStruct) == -1) <br>return -1; <br> <br>return 0; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
