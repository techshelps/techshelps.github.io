<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REDIT.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4384"></a>REDIT.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chappy.EXE <br>//  File:       REdit.cpp : implementation file <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1996-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br> <br>#include "stdafx.h" <br>#include "chappy.h" <br>#include "REdit.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CREdit <br> <br>CREdit::CREdit() <br>{ <br>} <br> <br>CREdit::~CREdit() <br>{ <br>} <br> <br> <br>BEGIN_MESSAGE_MAP(CREdit, CRichEditCtrl) <br>//{{AFX_MSG_MAP(CREdit) <br>ON_WM_CREATE() <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br> <br>// OnFocus(BOOL bFocus_p) <br>//  bFocus_p = TRUE we received focus <br>//bFocus_p = FALSE we lost focus <br>void CREdit::OnFocus(BOOL bFocus_p) <br>{ <br>if (bFocus_p) <br>{ <br>//we received focus <br>//show the window <br>ShowWindow(SW_SHOW); <br>} <br>else <br>{ <br>//we lost focus <br>//hide the window <br>ShowWindow(SW_HIDE); <br>} <br>} <br> <br> <br>void CREdit::AddText(LPCSTR szTextIn_p, BOOL bBold_p) <br>{ <br>TogleBoldText(bBold_p); <br>//m_ctrlHistoryWnd.SetSel(0,-1); <br>int iTextLength = GetWindowTextLength(); <br>SetSel(iTextLength,iTextLength); <br>ReplaceSel(szTextIn_p); <br>//m_ctrlHistoryWnd.LineScroll(1); <br> <br>} <br> <br>void CREdit::AddText(CString &amp;szTextIn_p, BOOL bBold_p) <br>{ <br>//m_ctrlHistoryWnd.SetSel(0,-1); <br>AddText((LPCSTR) szTextIn_p, bBold_p); <br>} <br> <br>void CREdit::TogleBoldText(BOOL bIsBold_p) <br>{ <br>CHARFORMAT cf; <br> <br>cf.cbSize = sizeof (CHARFORMAT);  <br>cf.dwMask=CFM_BOLD; <br>cf.dwEffects = (bIsBold_p) ? CFE_BOLD : CFE_AUTOCOLOR; <br>//cf.yHeight; <br>//cf.yOffset; <br>//cf.crTextColor=RGB(250,0,0); <br>//cf.bCharSet; <br>//cf.bPitchAndFamily; <br>//sprintf(cf.szFaceName, "Arial"); <br> <br>SetSelectionCharFormat(cf); <br>} <br> <br>void CREdit::TogleItalicText(BOOL bIsItalic_p) <br>{ <br>CHARFORMAT cf; <br> <br>cf.cbSize = sizeof (CHARFORMAT);  <br>cf.dwMask=CFM_ITALIC; <br>cf.dwEffects = (bIsItalic_p) ? CFE_ITALIC : CFE_AUTOCOLOR; <br> <br>SetSelectionCharFormat(cf); <br> <br>} <br> <br>void CREdit::SetTextColor(COLORREF crColor_p) <br>{ <br>CHARFORMAT cf; <br> <br>cf.cbSize = sizeof (CHARFORMAT);  <br>cf.dwMask = CFM_COLOR; <br>cf.crTextColor=crColor_p; <br> <br>SetSelectionCharFormat(cf); <br>} <br> <br>int CREdit::OnCreate(LPCREATESTRUCT lpCreateStruct)  <br>{ <br>if (CRichEditCtrl::OnCreate(lpCreateStruct) == -1) <br>return -1; <br> <br>//set the default font <br>CHARFORMAT cf; <br> <br>cf.cbSize = sizeof (CHARFORMAT);  <br>cf.dwMask = CFM_FACE ; <br>//cf.dwEffects; <br>//cf.yHeight; <br>//cf.yOffset; <br>//cf.crTextColor=RGB(250,0,0); <br>//cf.bCharSet; <br>//cf.bPitchAndFamily; <br>sprintf(cf.szFaceName, "Arial"); <br> <br>SetDefaultCharFormat(cf); <br> <br>return 0; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
