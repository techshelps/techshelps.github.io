<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ROOM.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4390"></a>ROOM.H</h2>
<pre><code>//**************************************************************************** <br>//  Module:     Chappy.EXE <br>//  File:       Room.h : header file <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1996-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br>#ifndef __ROOM_H__ <br>#define __ROOM_H__ <br> <br> <br>#define IDC_OCX_CHAT2000 <br> <br>#include "RoomHstr.h" <br>#include "MSChatx.h" <br>#include "PLTree.h" <br>#include "chtitems.h" <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CRoom thread <br> <br>class CRoom  <br>{ <br> <br>// Attributes <br>private: <br>long m_iIndex; <br>CString m_szKey; <br> <br>IChannelsCollection m_IChannels; <br>IChannelObjectm_IChannel; <br> <br>public: <br>CRoomHistorym_ctrlHistoryWnd; <br>CPartListTreem_ctrlPartListWnd; <br> <br> <br>// Operations <br>public: <br>void MakeHost(BOOL bFlag); <br>void BanMember(CChatItems &amp; IChatItem_p); <br>void KickMember(CString &amp; szReason_p); <br>CString GetSelectedMember(); <br>//constructor and distructor <br>CRoom();  <br>~CRoom(); <br> <br>inline IChannelObjectGetChannelObj(){ return m_IChannel;}; <br>inline LPDISPATCHGetChannel(){ return m_IChannel.m_lpDispatch;}; <br>inline longGetIndex(){ return m_iIndex;}; <br>inline CRoomHistory*GetRoomHistoryCtrlPtr(){ return &amp;m_ctrlHistoryWnd;}; <br> <br>//void operator =( const CRoom&amp; src ); <br>//bool operator== ( const CRoom &amp;src ) const; <br> <br>BOOLCreate(CWnd &amp;wndParent_p, LPDISPATCH lpIChannels_p); <br>BOOLEnterRoom(long iIndex_p, CString &amp;szRoomName_p, CString &amp;szRoomKey_p); <br>voidLeaveChannel(); <br>voidDestroyRoom(); <br>voidSendMessage(LPCTSTR SenderNickname_p, long iMsgType_p, CString &amp;szMsgTxt_p); <br> <br>voidOnFocus(BOOL bFocus_p); <br> <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// <br> <br>#endif //__ROOM_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
