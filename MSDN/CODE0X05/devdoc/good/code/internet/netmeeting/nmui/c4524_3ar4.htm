<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CVIDEO.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4540"></a>CVIDEO.CPP</h2>
<pre><code>//**************************************************************************** <br>//  Module:     NMUI.EXE      <br>//  File:       CVIDEO.CPP <br>//  Content:    Video Channel Routines <br>//               <br>// <br>//  Copyright (c) Microsoft Corporation 1995-1997 <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//**************************************************************************** <br> <br>#include "precomp.h" <br> <br> <br>//**************************************************************************** <br>// <br>// CLASS CVideoNotify <br>// <br>//**************************************************************************** <br> <br>CVideoNotify::CVideoNotify(PFNSTATECHANGE pfnStateChange, PFNPROPERTYCHANGE pfnPropertyChange, DWORD dwParam) : RefCount(), CNotify() <br>{ <br>OBJECT_MSG("CVideoNotify created"); <br> <br>m_pfnStateChange = pfnStateChange; <br>m_pfnPropertyChange = pfnPropertyChange; <br>m_dwParam = dwParam; <br>} <br> <br>CVideoNotify::~CVideoNotify() <br>{ <br>OBJECT_MSG("CDataNotify destroyed"); <br>} <br> <br> <br>//**************************************************************************** <br>// <br>// Methods from IUnknown <br>// <br>//**************************************************************************** <br> <br>ULONG STDMETHODCALLTYPE CVideoNotify::AddRef(void) <br>{ <br>return RefCount::AddRef(); <br>} <br> <br> <br>ULONG STDMETHODCALLTYPE CVideoNotify::Release(void) <br>{ <br>return RefCount::Release(); <br>} <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::QueryInterface(REFIID riid, PVOID *ppvObject) <br>{ <br>HRESULT hr = S_OK; <br> <br>if (riid == IID_IUnknown) <br>{ <br>*ppvObject = (IUnknown *)this; <br>OBJECT_MSG("CVideoNotify::QueryInterface(): Returning IUnknown."); <br>} <br>else if (riid == IID_INmChannelVideoNotify) <br>{ <br>*ppvObject = (INmChannelVideoNotify *)this; <br>OBJECT_MSG("CVideoNotify::QueryInterface(): Returning INmChannelVideoNotify."); <br>} <br>else <br>{ <br>hr = E_NOINTERFACE; <br>*ppvObject = NULL; <br>OBJECT_MSG("CVideoNotify::QueryInterface(): Called on unknown interface."); <br>} <br> <br>if (S_OK == hr) <br>{ <br>AddRef(); <br>} <br> <br>return hr; <br>} <br> <br> <br>//**************************************************************************** <br>// <br>// Methods from ICNotify <br>// <br>//**************************************************************************** <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::Connect(IUnknown *pUnk) <br>{ <br>return CNotify::Connect(pUnk, IID_INmChannelVideoNotify, (IUnknown *)this); <br>} <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::Disconnect(void) <br>{ <br>return CNotify::Disconnect(); <br>} <br> <br> <br>//**************************************************************************** <br>// <br>// Methods from INmChannelNotify <br>// <br>//**************************************************************************** <br>HRESULT STDMETHODCALLTYPE CVideoNotify::NmUI(CONFN uNotify) <br>{ <br>NOTIFY_MSG("CVideoNotify::NmUI uNotify=%08X, pChannel=%08X", uNotify, CNotify::GetPunk()); <br>return S_OK; <br>} <br> <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::MemberChanged(NM_MEMBER_NOTIFY uNotify, INmMember *pMember) <br>{ <br>NOTIFY_MSG("CVideoNotify::MemberChanged uNotify=%08X, pMember=%08X, pChannel=%08X", uNotify, pMember, CNotify::GetPunk()); <br> <br>PUSER pUser = PUserFromINmMember(pMember); <br>if (NULL != pUser) <br>{ <br>UpdateUserChannel(pUser, (INmChannel *) (CNotify::GetPunk()), uNotify); <br>} <br> <br>return S_OK; <br>} <br> <br> <br>//**************************************************************************** <br>// <br>// Methods from IConfNotify <br>// <br>//**************************************************************************** <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::StateChanged(NM_VIDEO_STATE uState) <br>{ <br>NOTIFY_MSG("CVideoNotify::StateChanged uState=%08X, pChannel=%08X", uState, CNotify::GetPunk()); <br>if (NULL != m_pfnStateChange) <br>{ <br>m_pfnStateChange(uState, m_dwParam); <br>} <br>return S_OK; <br>} <br> <br> <br>HRESULT STDMETHODCALLTYPE CVideoNotify::PropertyChanged(DWORD dwReserved) <br>{ <br>NOTIFY_MSG("CVideoNotify::PropertyChanged dwReserved=%08X, pChannel=%08X", dwReserved, CNotify::GetPunk()); <br>if (NULL != m_pfnPropertyChange) <br>{ <br>m_pfnPropertyChange(dwReserved, m_dwParam); <br>} <br>return S_OK; <br>} <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
