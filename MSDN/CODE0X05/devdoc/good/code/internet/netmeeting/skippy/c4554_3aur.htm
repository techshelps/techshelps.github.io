<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OBLIST.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4563"></a>OBLIST.H</h2>
<pre><code>//**************************************************************************** <br>// <br>//  SKIPPY! sample for Microsoft NetMeeting SDK <br>// <br>//  File:       oblist.h <br>//  Content:    This file contains the list class functions. <br>// <br>//  Copyright (c) Microsoft Corporation 1997 <br>//  All rights reserved <br>// <br>//**************************************************************************** <br> <br>#ifndef _OBLIST_H_ <br>#define _OBLIST_H_ <br> <br>// class COBNODE; <br>#define POSITION COBNODE* <br> <br>struct COBNODE <br>{ <br>POSITION  pNext; <br>void*     pItem; <br>}; <br> <br>class COBLIST <br>{ <br>protected: <br>POSITION        m_pHead; <br>POSITION        m_pTail; <br>virtual BOOL    Compare(void* pItemToCompare, void* pComparator) <br>{return(pItemToCompare == pComparator);}; <br>public: <br>COBLIST() : m_pHead(NULL), m_pTail(NULL) { }; <br>~COBLIST() {}; <br> <br>POSITION        GetHeadPosition() { return(m_pHead); }; <br>POSITION        GetTailPosition() { return(m_pTail); }; <br>virtual void *  RemoveAt(POSITION rPos); <br>POSITION        AddTail(void* pItem); <br>BOOL            IsEmpty() { return(!m_pHead); }; <br>void *          GetTail(); <br>void *          GetNext(POSITION&amp; rPos); <br>void *          SafeGetFromPosition(POSITION rPos); <br>POSITION        GetPosition(void* pItem); <br>POSITION        Lookup(void* pComparator); <br>void            EmptyList(); <br> <br>void *          GetHead(){return GetFromPosition(GetHeadPosition());}; <br>void *          RemoveHead() { return RemoveAt(m_pHead); }; <br>void *          GetFromPosition(POSITION rPos){return(rPos-&gt;pItem);}; <br>}; <br> <br>#endif // ifndef _OBLIST_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
