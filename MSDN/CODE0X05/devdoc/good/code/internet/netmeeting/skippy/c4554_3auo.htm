<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>NOTIFY.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4560"></a>NOTIFY.CPP</h2>
<pre><code>//**************************************************************************** <br>// <br>//  SKIPPY! sample for Microsoft NetMeeting SDK <br>// <br>//  File:       notify.cpp <br>//  Content:    This file contains notification method implentations. <br>// <br>//  Copyright (c) Microsoft Corporation 1997 <br>//  All rights reserved <br>// <br>//**************************************************************************** <br> <br>#include "ilstest.h" <br>#include "notify.h" <br> <br>//**************************************************************************** <br>// CIlsNotify::CIlsNotify (HWND hwndInit) <br>// <br>//**************************************************************************** <br> <br>CIlsNotify::CIlsNotify (HWND hwndInit) : <br>CNotify(hwndInit) <br>{ <br>cRef = 0; <br>return; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsNotify::QueryInterface (REFIID riid, void **ppv) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsNotify::QueryInterface (REFIID riid, void **ppv) <br>{ <br>if (riid == IID_IIlsNotify || riid == IID_IUnknown) <br>{ <br>*ppv = (IIlsNotify *) this; <br>AddRef(); <br>return S_OK; <br>} <br>else <br>{ <br>*ppv = NULL; <br>return E_NOINTERFACE; <br>}; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsNotify::AddRef (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsNotify::AddRef (void) <br>{ <br>return cRef++; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsNotify::Release (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsNotify::Release (void) <br>{ <br>cRef--; <br> <br>if (cRef == 0) <br>{ <br>delete this; <br>return 0; <br>} <br>else <br>{ <br>return cRef; <br>}; <br>} <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsNotify::GetUserResult(ULONG uReqID, IIlsUser *pUser, HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsNotify::GetUserResult(ULONG uReqID, IIlsUser *pUser, <br>HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsNotify::GetUserResult(%x) returns %x. [%s]\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br> <br>if (SUCCEEDED(hResult)) <br>{ <br>pUser-&gt;AddRef(); <br>PostMessage(GetWindow(), WM_IT_RESOLVE_USER_RESULT, 0, (LPARAM)pUser); <br>}; <br>return S_OK; <br>} <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsNotify::EnumUserNamesResult(ULONG uReqID, IEnumIlsNames *pEnumUserName, <br>//                                 HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsNotify::EnumUserNamesResult(ULONG uReqID, IEnumIlsNames *pEnumUserName, <br>HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsNotify::EnumUserNamesResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br> <br>if (hResult == NOERROR) <br>{ <br>pEnumUserName-&gt;AddRef(); <br>PostMessage(GetWindow(), WM_IT_ENUM_NAMES_RESULT, 0, (LPARAM)pEnumUserName); <br>}; <br>return S_OK; <br>} <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsNotify::EnumUsersResult(ULONG uReqID, IEnumIlsUsers *pEnumUser, <br>//                             HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsNotify::EnumUsersResult(ULONG uReqID, IEnumIlsUsers *pEnumUser, <br>HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsNotify::EnumUsersResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br> <br>if (hResult == NOERROR) <br>{ <br>pEnumUser-&gt;AddRef(); <br>PostMessage(GetWindow(), WM_IT_ENUM_USERS_RESULT, 0, (LPARAM)pEnumUser); <br>}; <br>return S_OK; <br>} <br> <br> <br> <br>//**************************************************************************** <br>// CIlsUserNotify::CIlsUserNotify (HWND hwndInit) <br>// <br>//**************************************************************************** <br> <br>CIlsUserNotify::CIlsUserNotify (HWND hwndInit) : <br>CNotify(hwndInit) <br>{ <br>cRef = 0; <br>return; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::QueryInterface (REFIID riid, void **ppv) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::QueryInterface (REFIID riid, void **ppv) <br>{ <br>if (riid == IID_IIlsUserNotify || riid == IID_IUnknown) <br>{ <br>*ppv = (IIlsUserNotify *) this; <br>AddRef(); <br>return S_OK; <br>} <br>else <br>{ <br>*ppv = NULL; <br>return E_NOINTERFACE; <br>}; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsUserNotify::AddRef (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsUserNotify::AddRef (void) <br>{ <br>return cRef++; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsUserNotify::Release (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsUserNotify::Release (void) <br>{ <br>cRef--; <br> <br>if (cRef == 0) <br>{ <br>delete this; <br>return 0; <br>} <br>else <br>{ <br>return cRef; <br>}; <br>} <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::StateChanged(ULONG fPrimary, BSTR bstrServerName) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::StateChanged(ULONG fPrimary, BSTR bstrServerName) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::StateChanged returns %x on server %s.\r\n"), <br>fPrimary, bstrServerName); <br> <br>return S_OK; <br>} <br> <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::RegisterResult(ULONG uReqID, HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::RegisterResult(ULONG uReqID, HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::RegisterResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br>return S_OK; <br>} <br> <br> <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::UpdateResult(ULONG uReqID, HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::UpdateResult(ULONG uReqID, HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::UpdateResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br>return S_OK; <br>} <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::ProtocolChangeResult(ULONG uReqID, HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::ProtocolChangeResult(ULONG uReqID, HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::ProtocolChangeResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br>return S_OK; <br>} <br> <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::EnumProtocolsResult(ULONG uReqID, <br>//                                    IEnumIlsNames *pEnumProtocol, <br>//                                    HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::EnumProtocolsResult(ULONG uReqID, <br>IEnumIlsNames *pEnumProtocol, <br>HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::EnumProtocolsResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br> <br>if (hResult == NOERROR) <br>{ <br>pEnumProtocol-&gt;AddRef(); <br>PostMessage(GetWindow(), WM_IT_ENUM_NAMES_RESULT, 0, (LPARAM)pEnumProtocol); <br>}; <br>return S_OK; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsUserNotify::GetProtocolResult(ULONG uReqID, IIlsProtocol *pProt, <br>//                                  HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsUserNotify::GetProtocolResult(ULONG uReqID, IIlsProtocol *pProt, <br>HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsUserNotify::GetProtocolResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br> <br>if (SUCCEEDED(hResult)) <br>{ <br>pProt-&gt;AddRef(); <br>PostMessage(GetWindow(), WM_IT_RESOLVE_PROT_RESULT, 0, (LPARAM)pProt); <br>}; <br>return S_OK; <br>} <br> <br> <br> <br> <br> <br> <br>//**************************************************************************** <br>// CIlsProtocolNotify::CIlsProtocolNotify (HWND hwndInit) <br>// <br>//**************************************************************************** <br> <br>CIlsProtocolNotify::CIlsProtocolNotify (HWND hwndInit) : <br>CNotify(hwndInit) <br>{ <br>cRef = 0; <br>return; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsProtocolNotify::QueryInterface (REFIID riid, void **ppv) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsProtocolNotify::QueryInterface (REFIID riid, void **ppv) <br>{ <br>if (riid == IID_IIlsProtocolNotify || riid == IID_IUnknown) <br>{ <br>*ppv = (IIlsProtocolNotify *) this; <br>AddRef(); <br>return S_OK; <br>} <br>else <br>{ <br>*ppv = NULL; <br>return E_NOINTERFACE; <br>}; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsProtocolNotify::AddRef (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsProtocolNotify::AddRef (void) <br>{ <br>return cRef++; <br>} <br> <br>//**************************************************************************** <br>// STDMETHODIMP_(ULONG) <br>// CIlsProtocolNotify::Release (void) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP_(ULONG) <br>CIlsProtocolNotify::Release (void) <br>{ <br>cRef--; <br> <br>if (cRef == 0) <br>{ <br>delete this; <br>return 0; <br>} <br>else <br>{ <br>return cRef; <br>}; <br>} <br> <br> <br> <br>//**************************************************************************** <br>// STDMETHODIMP <br>// CIlsProtocolNotify::UpdateResult(ULONG uReqID, HRESULT hResult) <br>// <br>//**************************************************************************** <br> <br>STDMETHODIMP <br>CIlsProtocolNotify::UpdateResult(ULONG uReqID, HRESULT hResult) <br>{ <br>MyTextOut (TEXT("IIlsProtocolNotify::UpdateResult(%x) returns %x [%s].\r\n"), <br>uReqID, hResult, GetErrorString(hResult) ); <br>return S_OK; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
