<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MODULE1.BAS</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4572"></a>MODULE1.BAS</h2>
<pre><code>Attribute VB_Name = "Module1" <br>'**************************************************************************** <br>' <br>'  Module:     VBCARD.EXE <br>'  File:       Module1.frm <br>'  Content:    Implementation of the VbCard processes <br>' <br>'  Copyright (c) Microsoft Corporation 1995-1997 <br>' <br>' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>' ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>' THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>' PARTICULAR PURPOSE. <br>'**************************************************************************** <br> <br>Option Explicit <br> <br>Public Const BIZCARD_DATA_SIZE As Integer = 568 <br>Const SIZE_OFFSET As Integer = 0 <br>Const NAME_OFFSET As Integer = 4 <br>Const TITLE_OFFSET As Integer = 84 <br>Const COMPANY_OFFSET As Integer = 164 <br>Const ADDRESS_OFFSET As Integer = 244 <br>Const PHONE_OFFSET As Integer = 324 <br>Const FAX_OFFSET As Integer = 404 <br>Const EMAIL_OFFSET As Integer = 484 <br>Const IMAGESIZE_OFFSET As Integer = 564 <br>Const STRING_LENGTH As Integer = 80 <br> <br>' Beta2 NetMeeting breaks up data transfers into 4K packets <br>Const MAX_DATA_PACKET As Integer = 4096 <br> <br>' of course this is a bad thing <br>Const PictureDir As String = "c:\" <br> <br>Private Type LongBytes <br>    b0 As Byte <br>    b1 As Byte <br>    b2 As Byte <br>    b3 As Byte <br>End Type <br> <br>Private Type LongType <br>    l As Long <br>End Type <br> <br>Public Type BizCardInfo <br>    Name As String <br>    Title As String <br>    Company As String <br>    Address As String <br>    Phone As String <br>    Fax As String <br>    EMail As String <br>    PhotoFile As String <br>End Type <br> <br>Public Type MemberInfo <br>    Name As String <br>    Card As BizCardInfo <br>    Photo As Picture <br>    ImageSize As Long <br>    FileOpen As Boolean <br>End Type <br> <br>Public MyCard As BizCardInfo <br>Public ActiveCard As BizCardInfo <br>Public MemberInfoArray(15) As MemberInfo <br>Public ActiveIndex As Integer <br> <br>Public Sub ReadBizCard( _ <br>    App As String, _ <br>    Name As String, _ <br>    Card As BizCardInfo) <br>     <br>    Card.Name = GetSetting(App, Name, "Name", "") <br>    Card.Title = GetSetting(App, Name, "Title", "") <br>    Card.Company = GetSetting(App, Name, "Company", "") <br>    Card.Address = GetSetting(App, Name, "Address", "") <br>    Card.Phone = GetSetting(App, Name, "Phone", "") <br>    Card.Fax = GetSetting(App, Name, "Fax", "") <br>    Card.EMail = GetSetting(App, Name, "EMail", "") <br>    Card.PhotoFile = GetSetting(App, Name, "Photo", "") <br>End Sub <br> <br>Public Sub WriteBizCard( _ <br>    App As String, _ <br>    Name As String, _ <br>    Card As BizCardInfo) <br>     <br>    SaveSetting App, Name, "Name", Card.Name <br>    SaveSetting App, Name, "Title", Card.Title <br>    SaveSetting App, Name, "Company", Card.Company <br>    SaveSetting App, Name, "Address", Card.Address <br>    SaveSetting App, Name, "Phone", Card.Phone <br>    SaveSetting App, Name, "Fax", Card.Fax <br>    SaveSetting App, Name, "EMail", Card.EMail <br>    SaveSetting App, Name, "Photo", Card.PhotoFile <br>End Sub <br> <br>Private Sub UpdateActivePhoto() <br>    VbCard.Photo.Picture = MemberInfoArray(ActiveIndex).Photo <br>End Sub <br> <br>Public Sub UpdateActiveIndex(Name As String) <br>    ActiveIndex = GetMemberIndex(Name) <br>    If ActiveIndex &lt; 0 Then <br>        ActiveIndex = 0 <br>    End If <br>     <br>    UpdateActivePhoto <br>End Sub <br> <br>Public Function GetActiveCard() As BizCardInfo <br>    If ActiveIndex &gt;= 0 Then <br>        GetActiveCard = MemberInfoArray(ActiveIndex).Card <br>    End If <br>End Function <br> <br>Private Sub InitMember(Index As Integer) <br>    MemberInfoArray(Index).Name = "" <br>    MemberInfoArray(Index).FileOpen = False <br>    Set MemberInfoArray(Index).Photo = VbCard.Unknown.Picture <br>End Sub <br> <br>Public Sub InitMemberArray() <br>    Dim Index As Integer <br>     <br>    For Index = 0 To 15 <br>        InitMember Index <br>    Next <br>End Sub <br> <br>Public Function GetMemberIndex(Name As String) As Integer <br>    Dim Index As Integer <br>     <br>    GetMemberIndex = -1 <br>    For Index = 0 To 15 <br>        If MemberInfoArray(Index).Name = Name Then <br>            GetMemberIndex = Index <br>            Exit For <br>        End If <br>    Next <br>End Function <br> <br>Public Sub DeleteMember(Member As IConfMemberX) <br>    Dim Index As Integer <br>     <br>    Index = GetMemberIndex(Member.Name) <br>    If Index &gt;= 0 Then <br>        InitMember Index <br>    End If <br>End Sub <br> <br>Public Sub AddMember(Member As IConfMemberX) <br>    Dim Index As Integer <br> <br>    Index = GetMemberIndex(Member.Name) <br>    If Index &gt;= 0 Then <br>        ' already a member <br>        Exit Sub <br>    End If <br> <br>    ' find next empty slot <br>    Index = GetMemberIndex("") <br>    If Index &gt;= 0 Then <br>        MemberInfoArray(Index).Name = Member.Name <br>         <br>        ' If adding self, need to load user's picture <br>        If Member.IsSelf Then <br>            Dim MyPict As Picture <br>             <br>            MemberInfoArray(Index).Card = MyCard <br>            On Error Resume Next <br>            Set MyPict = LoadPicture(MyCard.PhotoFile) <br>            If Not Err Then <br>                Set MemberInfoArray(Index).Photo = MyPict <br>            End If <br>        End If <br>    End If <br>End Sub <br> <br>Public Sub ReceiveImage(Name As String, DataTransfer As IConfDataTransferX) <br>    Dim Size As Integer <br>    Dim Index As Integer <br>    Dim FileNumber As Integer <br>     <br>    ' Create the member's picture from the transferred data <br>    ' Allows for Beta2 NetMeeting 4K packet breakup <br>     <br>    Index = GetMemberIndex(Name) <br>    FileNumber = Index + 1 <br>     <br>    ' Make sure that the temporary file is open <br>    If Not MemberInfoArray(Index).FileOpen Then <br>        On Error Resume Next <br>        MemberInfoArray(Index).Card.PhotoFile = PictureDir &amp; Name &amp; ".bmp" <br>        Open MemberInfoArray(Index).Card.PhotoFile For Binary As #FileNumber <br>        If Err Then <br>            Exit Sub <br>        End If <br>        MemberInfoArray(Index).FileOpen = True <br>    End If <br>             <br>    Size = DataTransfer.BytesTransferred <br>    ReDim buf(1 To Size) As Byte <br>    buf = DataTransfer.Array(1) <br>    Put #FileNumber, , buf <br>     <br>    ' Assumes complete if the packet is not 4K <br>    ' This will cause problems if the picture is an exact multiple of 4K <br>    If Size &lt;&gt; MAX_DATA_PACKET Then <br>        'Close the file <br>        Close #FileNumber <br>        MemberInfoArray(Index).FileOpen = False <br>         <br>        ' Load the picture <br>        Set MemberInfoArray(Index).Photo = _ <br>            LoadPicture(MemberInfoArray(Index).Card.PhotoFile) <br>         <br>        ' Delete the file <br>        Kill MemberInfoArray(Index).Card.PhotoFile <br>         <br>        ' If this is the current member, update the picture <br>        If Index = ActiveIndex Then <br>            UpdateActivePhoto <br>        End If <br>    End If <br>End Sub <br> <br>Private Function getVbString( _ <br>    Buffer() As Byte, _ <br>    first As Integer, _ <br>    length As Integer) <br>     <br>    ' Convert a fixed length array of Bytes into a VB string <br>    ' (each Byte is an 8 bit ASCII character) <br>     <br>    Dim i As Integer <br>    Dim j As Integer <br>    ReDim szText(1 To length) As Byte <br>     <br>    j = first <br>    For i = 1 To length <br>        szText(i) = Buffer(j) <br>        j = j + 1 <br>    Next <br>    getVbString = StrConv(szText, vbUnicode) <br>End Function <br> <br>Public Sub ReceiveBizCard( _ <br>    Name As String, _ <br>    DataTransfer As IConfDataTransferX) <br>     <br>    ' Copy transfered data into the member's BizCardInfo structure <br>     <br>    Dim Index <br> <br>    Index = GetMemberIndex(Name) <br>    If Index &gt;= 0 Then <br>        Dim Data() As Byte <br>        Data = DataTransfer.Array(1) <br>     <br>        MemberInfoArray(Index).Card.Name = getVbString(Data, _ <br>            NAME_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.Title = getVbString(Data, _ <br>            TITLE_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.Company = getVbString(Data, _ <br>            COMPANY_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.Address = getVbString(Data, _ <br>           ADDRESS_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.Phone = getVbString(Data, _ <br>            PHONE_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.Fax = getVbString(Data, _ <br>            FAX_OFFSET, STRING_LENGTH) <br>        MemberInfoArray(Index).Card.EMail = getVbString(Data, _ <br>            EMAIL_OFFSET, STRING_LENGTH) <br>    End If <br>     <br>End Sub <br> <br>Private Sub setVbString( _ <br>    strText As String, _ <br>    Buffer() As Byte, _ <br>    first As Integer, _ <br>    length As Integer) <br>     <br>    ' Convert a VB String into an fixed length array of Bytes <br>    ' (each Byte is an 8 bit ASCII character) <br>     <br>    Dim i As Integer <br>    Dim j As Integer <br>    Dim szText() As Byte <br>     <br>    szText = StrConv(strText, vbFromUnicode) <br>     <br>    ' just in case szText is "" <br>    Buffer(first) = 0 <br>     <br>    j = first <br>    For i = LBound(szText) To UBound(szText) <br>        Buffer(j) = szText(i) <br>        j = j + 1 <br>    Next <br>End Sub <br> <br>Public Sub BizCardToBytes(ByRef Card As BizCardInfo, _ <br>    Buffer() As Byte, _ <br>    Size As Integer) <br>     <br>    ' Convert a BizCardInfo structure into an array of Bytes <br>     <br>    Dim bSize As LongBytes <br>    Dim lSize As LongType <br>    ReDim Buffer(BIZCARD_DATA_SIZE - 1) As Byte <br>     <br>    lSize.l = BIZCARD_DATA_SIZE <br>    LSet bSize = lSize <br>     <br>    Buffer(SIZE_OFFSET) = bSize.b0 <br>    Buffer(SIZE_OFFSET + 1) = bSize.b1 <br>    Buffer(SIZE_OFFSET + 2) = bSize.b2 <br>    Buffer(SIZE_OFFSET + 3) = bSize.b3 <br>     <br>    lSize.l = Size <br>    LSet bSize = lSize <br>     <br>    Buffer(IMAGESIZE_OFFSET) = bSize.b0 <br>    Buffer(IMAGESIZE_OFFSET + 1) = bSize.b1 <br>    Buffer(IMAGESIZE_OFFSET + 2) = bSize.b2 <br>    Buffer(IMAGESIZE_OFFSET + 3) = bSize.b3 <br>     <br>    setVbString Card.Name, Buffer, _ <br>        NAME_OFFSET, STRING_LENGTH <br>    setVbString Card.Title, Buffer, _ <br>        TITLE_OFFSET, STRING_LENGTH <br>    setVbString Card.Company, Buffer, _ <br>        COMPANY_OFFSET, STRING_LENGTH <br>    setVbString Card.Address, Buffer, _ <br>        ADDRESS_OFFSET, STRING_LENGTH <br>    setVbString Card.Phone, Buffer, _ <br>        PHONE_OFFSET, STRING_LENGTH <br>    setVbString Card.Fax, Buffer, _ <br>        FAX_OFFSET, STRING_LENGTH <br>    setVbString Card.EMail, Buffer, _ <br>        EMAIL_OFFSET, STRING_LENGTH <br>End Sub <br> <br>Public Function PictureToBytes( _ <br>    FileName As String, _ <br>    Buffer() As Byte) As Integer <br>    Dim FileNumber As Integer <br>     <br>    ' Convert a bitmap file into an array of Bytes <br>     <br>    FileNumber = 99 <br>    On Error Resume Next <br>    Open FileName For Binary As #FileNumber <br>    If Err Then <br>        ' check for empty file name here <br>        If FileName = "" Then <br>            MsgBox "Picture file name is empty" <br>        Else <br>            MsgBox "Unable to open " &amp; FileName <br>        End If <br>        PictureToBytes = 0 <br>    Else <br>        Dim Size As Integer <br>         <br>        Size = LOF(FileNumber) <br>        ReDim Buffer(1 To Size) As Byte <br>        Get #FileNumber, , Buffer() <br>        Close #FileNumber <br>        PictureToBytes = Size <br>    End If <br>End Function <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
