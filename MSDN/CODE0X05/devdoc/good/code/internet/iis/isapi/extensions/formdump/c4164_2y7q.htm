<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HTML.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4166"></a>HTML.H</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1997  Microsoft Corporation <br> <br>Module Name:    html.h <br> <br>Abstract: <br> <br>    Header file for HTML authoring functions  <br> <br>--*/ <br> <br> <br>// Direct write of text, no translation <br>void WriteString (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpsz); <br> <br>// Required page definition functions <br>void HtmlCreatePage (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszTitle); <br>void HtmlEndPage (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>// Rest of the calls are optional <br>void HtmlHeading (IN EXTENSION_CONTROL_BLOCK *pECB, IN int nHeading,  <br>                  IN LPCSTR lpszText); <br>void HtmlBeginHeading (IN EXTENSION_CONTROL_BLOCK *pECB, IN int nHeading); <br>void HtmlEndHeading (IN EXTENSION_CONTROL_BLOCK *pECB, IN int nHeading); <br> <br>void HtmlWriteTextLine (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpsz); <br>void HtmlWriteText (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpsz); <br>void HtmlEndParagraph (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlHyperLink (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszDoc,  <br>                    IN LPCSTR lpszText); <br> <br>void HtmlHyperLinkAndBookmark (IN EXTENSION_CONTROL_BLOCK *pECB,  <br>                               IN LPCSTR lpszDoc, IN LPCSTR lpszBookmark, <br>                               IN LPCSTR lpszText); <br> <br>void HtmlBookmarkLink (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszBookmark, <br>                       IN LPCSTR lpszText); <br> <br>void HtmlBeginListItem (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginUnnumberedList (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndUnnumberedList (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginNumberedList (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndNumberedList (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginDefinitionList (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndDefinitionList (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlDefinition (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszTerm, <br>                     LPSTR lpszDef); <br> <br>void HtmlBeginDefinitionTerm (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlBeginDefinition (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginPreformattedText (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndPreformattedText (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginBlockQuote (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndBlockQuote (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginAddress (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndAddress (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginDefine (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndDefine (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginEmphasis (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndEmphasis (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginCitation (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndCitation (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginCode (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndCode (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginKeyboard (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndKeyboard (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginStatus (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndStatus (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginStrong (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndString (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBeginVariable (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndVariable (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlBold (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszText); <br>void HtmlBeginBold (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndBold (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlItalic (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszText); <br>void HtmlBeginItalic (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndItalic (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlFixed (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszText); <br>void HtmlBeginFixed (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlEndFixed (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlLineBreak (IN EXTENSION_CONTROL_BLOCK *pECB); <br>void HtmlHorizontalRule (IN EXTENSION_CONTROL_BLOCK *pECB); <br> <br>void HtmlImage (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszPicFile, <br>                IN LPCSTR lpszAltText); <br> <br>void HtmlPrintf (IN EXTENSION_CONTROL_BLOCK *pECB, IN LPCSTR lpszFormat, ...); </code></pre>
<p>&nbsp;</p></body>
</HTML>
