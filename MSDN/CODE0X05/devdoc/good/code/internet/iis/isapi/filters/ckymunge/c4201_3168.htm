<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UTILS.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4220"></a>UTILS.H</h2>
<pre><code>#ifndef __UTILS_H__ <br>#define __UTILS_H__ <br> <br>// disable warning messages about truncating extremly long identifiers <br>#pragma warning (disable : 4786) <br>#include &lt;string&gt; <br> <br>// Needed for STL on Visual C++ 5.0 <br>#if _MSC_VER&gt;=1100 <br>using namespace std; <br>#endif <br> <br>#include "messages.h" <br> <br>#define EVENT_SOURCE "CkyMunge" <br>#define EVENT_MODULE "CkyMunge.dll" <br> <br>#define ARRAYSIZE(a)  (sizeof(a)/sizeof(*(a))) <br> <br> <br>BOOL <br>InitUtils(); <br> <br>BOOL <br>TerminateUtils(); <br> <br>BOOL <br>InitEventLog(); <br> <br>VOID <br>EventReport( <br>    LPCTSTR string1, <br>    LPCTSTR string2, <br>    WORD eventType, <br>    DWORD eventID); <br> <br>char* <br>stristr(const char*, const char*); <br> <br>LPSTR <br>FindString( <br>    LPCSTR psz, <br>    PHTTP_FILTER_RAW_DATA pRawData, <br>    int iStart); <br> <br>LPSTR <br>FindHeaderValue( <br>    LPCSTR pszHeader, <br>    LPCSTR pszValue, <br>    PHTTP_FILTER_RAW_DATA pRawData, <br>    int iStart); <br> <br>BOOL <br>DeleteLine( <br>    LPCSTR psz, <br>    PHTTP_FILTER_RAW_DATA pRawData, <br>    LPSTR  pszStart = NULL); <br> <br>BOOL <br>Cookie2SessionID( <br>    LPCSTR pszCookie, <br>    LPSTR  pszSessionID); <br> <br>BOOL <br>CopySessionID( <br>    LPCSTR psz, <br>    LPSTR  pszSessionID); <br> <br>BOOL <br>IsIgnorableUrl( <br>    LPCSTR pszUrl); <br> <br>BOOL <br>DecodeURL( <br>    LPSTR pszUrl, <br>    LPSTR pszSessionID); <br> <br>VOID* <br>AllocMem( <br>    PHTTP_FILTER_CONTEXT  pfc, <br>    DWORD                 cbSize); <br> <br> <br>enum URLTYPE { <br>    UT_NONE, <br>    UT_UNKNOWN, <br>    UT_HTTP, <br>    UT_HTTPS, <br>    UT_FTP, <br>    UT_GOPHER, <br>    UT_MAILTO, <br>    UT_NEWS, <br>    UT_NEWSRC, <br>    UT_NNTP, <br>    UT_TELNET, <br>    UT_WAIS, <br>    UT_MK, <br>}; <br> <br> <br>URLTYPE <br>UrlType( <br>    LPCTSTR ptszData, <br>    LPCTSTR ptszEnd, <br>    int&amp;    rcLen); <br> <br>#endif // __UTILS_H__ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
