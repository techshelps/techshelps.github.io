<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4196"></a>README.TXT</h2>
<pre><code>Microsoft Internet Information Server <br>AuthFilt - A Filter for Advanced Authentication <br> <br> <br>AuthFilt demonstrates how to write an authentication filter based on an <br>external datasource. Authentication is the process of accepting or <br>denying a request from a client, so AuthFilt will be notified each time <br>an authentication request comes in. This sample uses a file <br>(c:\inetsrv\userdb.txt) to keep track of authorized users, but you might <br>modify this sample to access a database which holds user info.  The file <br>c:\inetsrv\userdb.txt does not exist.  Please look at Db.c to see how to <br>construct such a file and change the location of the file if you so desire. <br> <br>For each authentication request, AuthFilt first looks in a cache of <br>recently authenticated users, and when that fails, AuthFilt looks in the <br>userdb.txt file. This shows an efficient way to authorize connections: <br>a cache allows the filter to quickly authenticate users, and because <br>each request comes in through the filter, speed is critical. <br> <br>Steps to build the sample: <br> <br>1. Type "nmake" at the command line in the AuthFilt directory.  If you  <br>   encounter problems with missing header files, make sure your INCLUDE <br>   variable points to the Win32 SDK include directory, the VC++ include <br>   directory, and the IIS 4.0 include directory.  Also, make sure LIB  <br>   variable points to the Win32 SDK lib directory. <br> <br>OR <br> <br>Load the project file (Authfilt.dsp) into VC++ and build the project  <br>by running the build AuthFilt.dll command. <br> <br>2. Run the Internet Service Manager and add the AuthFilt.dll with a fully <br>   qualified path either as a global filter or a Website filter. <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
