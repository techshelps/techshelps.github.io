<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>KEEPALIVE.C</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4185"></a>KEEPALIVE.C</h2>
<pre><code>/*++ <br> <br>Copyright (c) 1997  Microsoft Corporation <br> <br>Module Name:    KeepAlive.c <br> <br>Abstract: <br> <br>   Sample ISAPI Extension demonstrating Keep-Alive. <br> <br>--*/ <br> <br>#define WIN32_LEAN_AND_MEAN <br>#include &lt;windows.h&gt; <br>#include &lt;httpext.h&gt; <br>#include &lt;stdio.h&gt; <br> <br>  <br>BOOL WINAPI  <br>GetExtensionVersion( <br>    OUT HSE_VERSION_INFO * pVer <br>    ) <br>/*++ <br> <br>Purpose: <br> <br>    This is required ISAPI Extension DLL entry point. <br> <br>Arguments: <br> <br>    pVer - poins to extension version info structure  <br> <br>Returns: <br> <br>    always returns TRUE <br> <br>--*/ <br>{ <br>    pVer-&gt;dwExtensionVersion = MAKELONG(HSE_VERSION_MINOR, HSE_VERSION_MAJOR); <br> <br>    strncpy(  <br>        pVer-&gt;lpszExtensionDesc, <br>        "ISAPI Keep-Alive Extension Sample", <br>        HSE_MAX_EXT_DLL_NAME_LEN  <br>        ); <br> <br>    return TRUE; <br>} <br> <br>  <br>DWORD WINAPI  <br>HttpExtensionProc( <br>    IN EXTENSION_CONTROL_BLOCK * pECB <br>    ) <br>/*++ <br> <br>Purpose: <br>    Demonstrate persistent connection from ISAPI extension DLL. <br> <br>Arguments: <br> <br>    pECB - pointer to the extenstion control block  <br> <br>Returns: <br> <br>    HSE_STATUS_SUCCESS_AND_KEEP_CONN <br> <br>--*/ <br>{ <br>    // <br>    // Use the "Connection: Keep-Alive" header to keep the connection open; <br>    // also, the "Content-Length:" header is required, so that the client knows when <br>    // the server has finished.  <br>    // <br> <br>    char szHeader[] =  <br>        "Connection: Keep-Alive\r\n" <br>        "Content-Length: %lu\r\n" <br>        "Content-type: text/html\r\n\r\n"; <br> <br>    char szContent[] =  <br>        "&lt;html&gt; &lt;form method=get action=\\scripts\\KeepAlive.dll&gt;" <br>        "&lt;h1&gt;Keep-Alive Sample&lt;/h1&gt;&lt;hr&gt;" <br>        "&lt;input type=submit value=\"Send Request\"&gt;&lt;/form&gt;&lt;/html&gt;"; <br> <br>    char szBuffer[4096]; <br>    HSE_SEND_HEADER_EX_INFO HeaderExInfo; <br>    DWORD dwSize; <br> <br>    // <br>    // Send outgoing header with exact content length <br>    // <br>     <br>    sprintf( szBuffer, szHeader, strlen( szContent ) ); <br>    HeaderExInfo.pszHeader = szBuffer; <br>    HeaderExInfo.cchHeader = strlen( szBuffer ); <br>    HeaderExInfo.pszStatus = "200 OK"; <br>    HeaderExInfo.cchStatus = strlen( HeaderExInfo.pszStatus ); <br>    HeaderExInfo.fKeepConn = TRUE; <br> <br>    pECB-&gt;ServerSupportFunction(  <br>        pECB, <br>        HSE_REQ_SEND_RESPONSE_HEADER_EX, <br>        &amp;HeaderExInfo, <br>        NULL, <br>        NULL <br>        ); <br> <br> <br>    // <br>    // Send content <br>    // <br> <br>    dwSize = strlen( szContent ); <br> <br>    pECB-&gt;WriteClient( pECB, szContent, &amp;dwSize, HSE_IO_SYNC ); <br> <br> <br>    // <br>    // This return code tells IIS not to close the socket connection. <br>    // <br> <br>    return HSE_STATUS_SUCCESS_AND_KEEP_CONN; <br>} <br> <br>  <br>BOOL WINAPI <br>TerminateExtension( <br>    IN DWORD dwFlags <br>    ) <br>/*++ <br> <br>Purpose: <br> <br>    This is optional ISAPI extension DLL entry point. <br>    If present, it will be called before unloading the DLL, <br>    giving it a chance to perform any shutdown procedures. <br>     <br>Arguments: <br>     <br>    dwFlags - HSE_TERM_ADVISORY_UNLOAD or HSE_TERM_MUST_UNLOAD <br> <br>Return Value: <br> <br>    TRUE if extension is ready to be unloaded, <br>    FALSE otherwise <br>     <br>--*/ <br>{ <br>    return TRUE; <br>} <br> <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
