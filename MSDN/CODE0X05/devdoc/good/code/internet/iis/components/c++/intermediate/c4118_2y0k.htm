<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>POWER.H</title>
<link disabled rel=stylesheet href=../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4124"></a>POWER.H</h2>
<pre><code>// Power.h : Declaration of the CPower <br> <br> <br>#include "resource.h"       // main symbols <br> <br>#include &lt;asptlb.h&gt;         // ASP Definitions <br> <br>// 'asptlb.h' is installed with Active Server Pages.  Either copy it <br>// to your Include directory or add the appropriate directory to your <br>// Include Path. <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CATLPwr <br> <br>class CPower :  <br>    public CComDualImpl&lt;IPower, &amp;IID_IPower, &amp;LIBID_CATLPwr&gt;,  <br>    public ISupportErrorInfo, <br>    public CComObjectRoot, <br>    public CComCoClass&lt;CPower,&amp;CLSID_CPower&gt; <br>{ <br>public: <br>    CPower(); <br>BEGIN_COM_MAP(CPower) <br>    COM_INTERFACE_ENTRY(IDispatch) <br>    COM_INTERFACE_ENTRY(IPower) <br>    COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>COM_INTERFACE_ENTRY_AGGREGATE(IID_IMarshal, m_pUnkMarshaler.p) <br>END_COM_MAP() <br>//DECLARE_NOT_AGGREGATABLE(CPower)  <br>// Remove the comment from the line above if you don't want your object to  <br>// support aggregation.  The default is to support it <br> <br>DECLARE_REGISTRY(CPower, _T("IISSample.C++ATLPower.1"), _T("IISSample.C++ATLPower"), IDS_POWER_DESC, THREADFLAGS_BOTH) <br>// ISupportsErrorInfo <br>    STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>// IPower <br>public: <br>// for free-threaded marshalling <br>DECLARE_GET_CONTROLLING_UNKNOWN() <br>HRESULT FinalCountruct() <br>{ <br>return CoCreateFreeThreadedMarshaler( <br>GetControllingUnknown(), &amp;m_pUnkMarshaler.p ); <br>} <br>void FinalRelease() <br>{ <br>m_pUnkMarshaler.Release(); <br>} <br> <br>    STDMETHOD(get_myProperty)(BSTR* pbstrOutValue); <br>    STDMETHOD(put_myProperty)(BSTR bstrInValue); <br>    STDMETHOD(myMethod)(BSTR bstrIn, BSTR* pbstrOut); <br> <br>    // ASP-specific Property and Method <br>    STDMETHOD(get_myPowerProperty)(BSTR* pbstrOutValue); <br>    STDMETHOD(myPowerMethod)(); <br> <br>private: <br>CComPtr&lt;IUnknown&gt;m_pUnkMarshaler; <br>    CComBSTR                    m_bstrMyProperty;     // myProperty <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
