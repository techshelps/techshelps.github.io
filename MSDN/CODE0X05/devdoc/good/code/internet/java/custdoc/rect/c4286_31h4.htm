<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RECTMARSHALER.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4288"></a>RECTMARSHALER.C</h2>
<pre><code>// Copyright (c) 1996-1997  Microsoft Corporation.  All rights reserved. <br> <br>#pragma hdrstop <br> <br>#define INITGUID 1 <br>#include &lt;windows.h&gt; <br>#include "native.h" // Raw Native Interface declarations. <br> <br> <br>typedef RECT *PRECT, **PPRECT; <br> <br> <br> <br>#ifdef __cplusplus <br>#define EXTERNC     extern "C" <br>#else <br>#define EXTERNC <br>#endif <br> <br> <br>// Macro for declaring RNI Java methods's (and encapsulating the java class package.) <br>// TODO: Replace "RectMarshaler" with the name of your hook class.  <br>#define JAVAMETHOD(typ, name) \ <br>    __declspec(dllexport) \ <br>    EXTERNC \ <br>    typ __cdecl RectMarshaler_##name <br> <br>#define LOGCALL(hookname) OutputDebugString("RectMarshaler." hookname "() called.\n") <br> <br>// Export that tells what RNI version we were built under. <br>DWORD __cdecl RNIGetCompatibleVersion() <br>{ <br>  return RNIVER; <br>} <br> <br>// Cache the various class and fields we will need. <br>ClassClass*         gRectangleClass; <br>struct fieldblock*  gRectangleXField; <br>struct fieldblock*  gRectangleYField; <br>struct fieldblock*  gRectangleWidthField; <br>struct fieldblock*  gRectangleHeightField; <br> <br> <br> <br>//========================================================================== <br>// toJava <br>//========================================================================== <br>JAVAMETHOD(OBJECT*, toJava) (OBJECT*x, PPRECT ppRECT, int flags) <br>{ <br> <br>    PRECT prect = *ppRECT; <br> <br>    LOGCALL("toJava"); <br> <br> <br> <br>    return execute_java_constructor(NULL, <br>                                    NULL, <br>                                    gRectangleClass, <br>                                    "(IIII)", <br>                                    prect-&gt;left, <br>                                    prect-&gt;top, <br>                                    prect-&gt;right - prect-&gt;left, <br>                                    prect-&gt;bottom - prect-&gt;top); <br>} <br> <br> <br> <br>void copyToExternalWorker(OBJECT *javaval, PRECT pRECT) <br>{ <br> <br>    int x, y, width, height; <br> <br>    x      = Field_GetInt(javaval, gRectangleXField); <br>    y      = Field_GetInt(javaval, gRectangleYField); <br>    width  = Field_GetInt(javaval, gRectangleWidthField); <br>    height = Field_GetInt(javaval, gRectangleHeightField); <br> <br>    pRECT-&gt;left   = x; <br>    pRECT-&gt;top    = y; <br>    pRECT-&gt;right  = x + width; <br>    pRECT-&gt;bottom = y + height; <br>} <br> <br> <br>//========================================================================== <br>// copyToExternal <br>//========================================================================== <br>JAVAMETHOD(void, copyToExternal) (OBJECT*x, OBJECT* javaval, PPRECT ppRECT, int flags) <br>{ <br>    LOGCALL("copyToExternal"); <br> <br>    copyToExternalWorker(javaval, *ppRECT); <br>} <br> <br> <br> <br> <br> <br> <br>//========================================================================== <br>// toExternal <br>//========================================================================== <br>JAVAMETHOD(void, toExternal) (OBJECT*x, OBJECT* javaval, int flags, PPRECT ppRECT) <br>{ <br>    PRECT pRECT = NULL; <br> <br>    LOGCALL("toExternal"); <br> <br>    pRECT = (RECT*)CoTaskMemAlloc(sizeof(RECT)); <br>    if (!pRECT) { <br>        SignalErrorPrintf("java/lang/OutOfMemoryError", "Could not allocate from task heap!"); <br>    } else { <br>        char msg[100]; <br>        wsprintf(msg, "Hook allocated RECT at %lxh\n", pRECT); <br>        OutputDebugString(msg); <br>        copyToExternalWorker(javaval, pRECT); <br>        *ppRECT = pRECT; <br>    } <br>} <br> <br> <br>//========================================================================== <br>// releaseExternal <br>//========================================================================== <br>JAVAMETHOD(void, releaseExternal) (OBJECT*x, PPRECT ppRECT, int flags) <br>{ <br>    PRECT pRECT = *ppRECT; <br>    char msg[100]; <br> <br>    LOGCALL("releaseExternal"); <br>    wsprintf(msg, "Hook freeing RECT at %lxh\n", pRECT); <br>    OutputDebugString(msg); <br>    if (pRECT) { <br>        CoTaskMemFree(pRECT); <br>    } <br>} <br> <br> <br>//========================================================================== <br>// classInit (one time initialization routine) <br>//========================================================================== <br>JAVAMETHOD(void, classInit) (OBJECT*x) <br>{ <br>    gRectangleClass = FindClass(NULL, "java/awt/Rectangle", TRUE); <br>    if (!gRectangleClass) { <br>        SignalErrorPrintf("java/lang/ClassNotFoundException", "Could not preload java.awt.Rectangle class!"); <br>    } <br> <br>    gRectangleXField = Class_GetField(gRectangleClass, "x"); <br>    if (!gRectangleXField) { <br>        SignalErrorPrintf("java/lang/ClassNotFoundException", "Bogus java.awt.Rectangle class!"); <br>    } <br> <br>    gRectangleYField = Class_GetField(gRectangleClass, "y"); <br>    if (!gRectangleYField) { <br>        SignalErrorPrintf("java/lang/ClassNotFoundException", "Bogus java.awt.Rectangle class!"); <br>    } <br> <br>    gRectangleWidthField = Class_GetField(gRectangleClass, "width"); <br>    if (!gRectangleWidthField) { <br>        SignalErrorPrintf("java/lang/ClassNotFoundException", "Bogus java.awt.Rectangle class!"); <br>    } <br> <br>    gRectangleHeightField = Class_GetField(gRectangleClass, "height"); <br>    if (!gRectangleHeightField) { <br>        SignalErrorPrintf("java/lang/ClassNotFoundException", "Bogus java.awt.Rectangle class!"); <br>    } <br>} <br> <br> <br> <br> <br> <br>//========================================================================== <br>// TODO: Remove this copy of DllMain if you are embedding this file in your <br>//  own DLL. <br>// DLL Loader entry Rectangle. <br>//========================================================================== <br>BOOL WINAPI DllMain(HINSTANCE hmod, DWORD dwReason, <br>                                PVOID pvReserved) <br>{ <br>   return TRUE; <br>} <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
