<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FIXEDPTMARSHALER.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4279"></a>FIXEDPTMARSHALER.C</h2>
<pre><code>// Copyright (c) 1997  Microsoft Corporation.  All rights reserved. <br>//===================================================================== <br>// Sample Java/COM Marshaling Hook Class. <br>// <br>// Java Type:  double <br>// Com  Type:  struct { <br>//                 WORD     fract; <br>//                 short    value; <br>//             } FIXED; <br>//===================================================================== <br> <br> <br> <br>#pragma hdrstop <br> <br>#include &lt;windows.h&gt; <br>#include "native.h" // Raw Native Interface declarations. <br> <br> <br>typedef FIXED *PFIXED, **PPFIXED; <br> <br> <br> <br>#ifdef __cplusplus <br>#define EXTERNC     extern "C" <br>#else <br>#define EXTERNC <br>#endif <br> <br> <br>// Macro for declaring RNI Java methods's (and encapsulating the java class package.) <br>#define JAVAMETHOD(typ, name) \ <br>    __declspec(dllexport) \ <br>    EXTERNC \ <br>    typ __cdecl FixedPtMarshaler_##name <br> <br> <br>#define LOGCALL(hookname) OutputDebugString("FixedPtMarshaler." hookname "() called.\n") <br> <br>// Export that tells what RNI version we were built under. <br>DWORD __cdecl RNIGetCompatibleVersion() <br>{ <br>  return RNIVER; <br>} <br> <br> <br>//========================================================================== <br>// toJava <br>//========================================================================== <br>JAVAMETHOD(double, toJava) (OBJECT*x, PPFIXED ppFIXED, int flags) <br>{ <br>    const FIXED *pFIXED = *ppFIXED; <br> <br>    LOGCALL("toJava"); <br> <br>    // Convert FIXED to double. <br>    return ((double)(pFIXED-&gt;value)) + ((double)(pFIXED-&gt;fract)) / 65536.0; <br>} <br> <br> <br>//========================================================================== <br>// copyToExternal <br>//========================================================================== <br>JAVAMETHOD(void, copyToExternal) (OBJECT*x, double javaval, PPFIXED ppFIXED, int flags) <br>{ <br>    FIXED *pFIXED = *ppFIXED; <br> <br>    LOGCALL("copyToExternal"); <br> <br>    // Convert double to FIXED. <br>    if (javaval &gt; 32767.0 || javaval &lt; -32768.0) { <br>        SignalErrorPrintf("java/lang/IllegalArgumentException", "Overflow on double-&gt;FIXED conversion."); <br>    } else { <br>        pFIXED-&gt;value = (short)javaval; <br>        pFIXED-&gt;fract = (short) ((javaval - (short)javaval) * 65536.0); <br>    } <br>} <br> <br> <br> <br> <br>//========================================================================== <br>// TODO: Remove this copy of DllMain if you are embedding this file in your <br>//  own DLL. <br>// DLL Loader entry point. <br>//========================================================================== <br>BOOL WINAPI DllMain(HINSTANCE hmod, DWORD dwReason, <br>                                PVOID pvReserved) <br>{ <br>   return TRUE; <br>} <br> <br> <br> <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
