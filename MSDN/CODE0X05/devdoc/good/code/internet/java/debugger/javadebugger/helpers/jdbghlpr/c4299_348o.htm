<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>HELPERS.CPP</title>
<link disabled rel=stylesheet href=../../../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4308"></a>HELPERS.CPP</h2>
<pre><code>/* <br> * helpers.cpp - Native methods. <br> * <br> * (C) Copyright 1996 Microsoft Corporation <br> */ <br> <br> <br>/* Headers <br> **********/ <br> <br>#include "project.hpp" <br>#pragma hdrstop <br> <br>#include "com_ms_debug_RemoteBooleanObjectHelper.h" <br>#include "com_ms_debug_RemoteDoubleObjectHelper.h" <br>#include "com_ms_debug_RemoteFloatObjectHelper.h" <br>#include "com_ms_debug_EnumRemoteBooleanValueHelper.h" <br>#include "com_ms_debug_EnumRemoteDoubleValueHelper.h" <br>#include "com_ms_debug_EnumRemoteFloatValueHelper.h" <br>#include "com_ms_debug_ConstantPoolHelper.h" <br>#include "com_ms_debug_LockBytesHelper.h" <br> <br> <br>/***************************** Exported Functions ****************************/ <br> <br> <br>/* <br> *  Native method "helpers" are needed to marshal the following debugger interface methods: <br> * <br> *  IJavaEnumRemoteBooleanValue::GetNext() <br> *  IRemoteBooleanObject::GetValue() <br> *  IRemoteBooleanObject::SetValue() <br> *   <br> *  IJavaEnumRemoteFloatValue::GetNext() <br> *  IRemoteFloatObject::GetValue() <br> *  IRemoteFloatObject::SetValue() <br> *   <br> *  IJavaEnumRemoteDoubleValue::GetNext() <br> *  IRemoteDoubleObject::GetValue() <br> *  IRemoteDoubleObject::SetValue() <br> *   <br> *  IRemoteMethodField::GetBytes() <br> *   <br> *  IRemoteClassField::GetConstantPoolItem() <br> */ <br> <br> <br>/* boolean */ long __cdecl com_ms_debug_EnumRemoteBooleanValueHelper_GetNext(Hcom_ms_debug_EnumRemoteBooleanValueHelper *thisptr) <br>{ <br>    JAVA_BOOLEAN value; <br>    IJavaEnumRemoteBooleanValue *pierbv; <br> <br>    pierbv = (IJavaEnumRemoteBooleanValue *)convert_Java_Object_to_IUnknown((HObject *)(thisptr-&gt;m_ierbv), &amp;IID_IJavaEnumRemoteBooleanValue); <br> <br>if (pierbv) <br>{ <br>HRESULT hr; <br> <br>hr = pierbv-&gt;GetNext(&amp;value); <br> <br>switch (hr) <br>{ <br>case S_OK:// Retrieved next value. <br>break; <br> <br>case S_FALSE:// No more values. <br>SignalError(NULL, "com/ms/com/ComSuccessException", ""); <br>break; <br> <br>default:// Error. <br>SignalError(NULL, "com/ms/com/ComFailException", "IJavaEnumRemoteBooleanValue::GetNext"); <br>break; <br>} <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>/* boolean */ long __cdecl com_ms_debug_RemoteBooleanObjectHelper_GetValue(Hcom_ms_debug_RemoteBooleanObjectHelper *thisptr) <br>{ <br>    JAVA_BOOLEAN value; <br>    IRemoteBooleanObject *pirbo; <br> <br>    pirbo = (IRemoteBooleanObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irbo, &amp;IID_IRemoteBooleanObject); <br> <br>if (pirbo) <br>{ <br>if (pirbo-&gt;GetValue(&amp;value) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteBooleanObject::GetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>void __cdecl com_ms_debug_RemoteBooleanObjectHelper_SetValue(Hcom_ms_debug_RemoteBooleanObjectHelper *thisptr, /* boolean */ long newvalue) <br>{ <br>    IRemoteBooleanObject *pirbo; <br> <br>    pirbo = (IRemoteBooleanObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irbo, &amp;IID_IRemoteBooleanObject); <br> <br>if (pirbo) <br>{ <br>if (pirbo-&gt;SetValue((JAVA_BOOLEAN)newvalue) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteBooleanObject::SetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br>} <br> <br> <br>JAVA_FLOAT __cdecl com_ms_debug_EnumRemoteFloatValueHelper_GetNext(Hcom_ms_debug_EnumRemoteFloatValueHelper *thisptr) <br>{ <br>    JAVA_FLOAT value; <br>    IJavaEnumRemoteFloatValue *pierfv; <br> <br>    pierfv = (IJavaEnumRemoteFloatValue *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_ierfv, &amp;IID_IJavaEnumRemoteFloatValue); <br> <br>if (pierfv) <br>{ <br>HRESULT hr; <br> <br>hr = pierfv-&gt;GetNext(&amp;value); <br> <br>switch (hr) <br>{ <br>case S_OK:// Retrieved next value. <br>break; <br> <br>case S_FALSE:// No more values. <br>SignalError(NULL, "com/ms/com/ComSuccessException", ""); <br>break; <br> <br>default:// Error. <br>SignalError(NULL, "com/ms/com/ComFailException", "IJavaEnumRemoteFloatValue::GetNext"); <br>break; <br>} <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>JAVA_FLOAT __cdecl com_ms_debug_RemoteFloatObjectHelper_GetValue(Hcom_ms_debug_RemoteFloatObjectHelper *thisptr) <br>{ <br>    JAVA_FLOAT value; <br>    IRemoteFloatObject *pirfo; <br> <br>    pirfo = (IRemoteFloatObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irfo, &amp;IID_IRemoteFloatObject); <br> <br>if (pirfo) <br>{ <br>if (pirfo-&gt;GetValue(&amp;value) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteFloatObject::GetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>void __cdecl com_ms_debug_RemoteFloatObjectHelper_SetValue(Hcom_ms_debug_RemoteFloatObjectHelper *thisptr, float newvalue) <br>{ <br>    IRemoteFloatObject *pirfo; <br> <br>    pirfo = (IRemoteFloatObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irfo, &amp;IID_IRemoteFloatObject); <br> <br>if (pirfo) <br>{ <br>if (pirfo-&gt;SetValue((JAVA_FLOAT*)&amp;newvalue) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteFloatObject::SetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br>} <br> <br> <br>JAVA_DOUBLE __cdecl com_ms_debug_EnumRemoteDoubleValueHelper_GetNext(Hcom_ms_debug_EnumRemoteDoubleValueHelper *thisptr) <br>{ <br>    JAVA_DOUBLE value; <br>    IJavaEnumRemoteDoubleValue *pierdv; <br> <br>    pierdv = (IJavaEnumRemoteDoubleValue *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_ierdv, &amp;IID_IJavaEnumRemoteDoubleValue); <br> <br>if (pierdv) <br>{ <br>HRESULT hr; <br> <br>hr = pierdv-&gt;GetNext(&amp;value); <br> <br>switch (hr) <br>{ <br>case S_OK:// Retrieved next value. <br>break; <br> <br>case S_FALSE:// No more values. <br>SignalError(NULL, "com/ms/com/ComSuccessException", ""); <br>break; <br> <br>default:// Error. <br>SignalError(NULL, "com/ms/com/ComFailException", "IJavaEnumRemoteDoubleValue::GetNext"); <br>break; <br>} <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>JAVA_DOUBLE __cdecl com_ms_debug_RemoteDoubleObjectHelper_GetValue(Hcom_ms_debug_RemoteDoubleObjectHelper *thisptr) <br>{ <br>    JAVA_DOUBLE value; <br>    IRemoteDoubleObject *pirdo; <br> <br>    pirdo = (IRemoteDoubleObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irdo, &amp;IID_IRemoteDoubleObject); <br> <br>if (pirdo) <br>{ <br>if (pirdo-&gt;GetValue(&amp;value) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteDoubleObject::GetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>    return(value); <br>} <br> <br> <br>void __cdecl com_ms_debug_RemoteDoubleObjectHelper_SetValue(Hcom_ms_debug_RemoteDoubleObjectHelper *thisptr, double newvalue) <br>{ <br>    IRemoteDoubleObject *pirdo; <br> <br>    pirdo = (IRemoteDoubleObject *)convert_Java_Object_to_IUnknown((HObject *)thisptr-&gt;m_irdo, &amp;IID_IRemoteDoubleObject); <br> <br>if (pirdo) <br>{ <br>if (pirdo-&gt;SetValue((JAVA_DOUBLE *)&amp;newvalue) != S_OK) <br>SignalError(NULL, "com/ms/com/ComFailException", "IRemoteDoubleObject::SetValue"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br>} <br> <br> <br>ClassArrayOfByte * __cdecl com_ms_debug_LockBytesHelper_GetBytes(Hcom_ms_debug_LockBytesHelper *, Hcom_ms_debug_ILockBytes *pjilb) <br>{ <br>    ClassArrayOfByte *pjabyte = NULL; <br>ILockBytes *pilb; <br> <br>    pilb = (ILockBytes *)convert_Java_Object_to_IUnknown((Hjava_lang_Object *)pjilb, &amp;IID_ILockBytes); <br> <br>if (pilb) <br>{ <br>HRESULT hr; <br>STATSTG statstg; <br> <br>// How many bytes can be read? <br> <br>hr = pilb-&gt;Stat(&amp;statstg, STATFLAG_NONAME); <br> <br>if (hr == S_OK) <br>{ <br>pjabyte = (ClassArrayOfByte *)ArrayAlloc(T_BYTE, statstg.cbSize.LowPart); <br> <br>if (pjabyte) <br>{ <br>ULARGE_INTEGER ulnOffset; <br>ULONG ulcbRead; <br> <br>ulnOffset.QuadPart = 0; <br> <br>hr = pilb-&gt;ReadAt(ulnOffset, pjabyte-&gt;body, statstg.cbSize.LowPart, &amp;ulcbRead); <br> <br>if (hr != S_OK) <br>{ <br>SignalError(0, "com.ms.com.ComFailException", "ILockBytes::ReadAt"); <br>pjabyte = NULL; <br>} <br>} <br>else <br>SignalError(0, JAVAPKG "OutOfMemoryError", 0); <br>} <br>else <br>SignalError(0, "com.ms.com.ComFailException", "ILockBytes::Stat"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br> <br>return(pjabyte); <br>} <br> <br> <br>ClassArrayOfByte * __cdecl com_ms_debug_ConstantPoolHelper_GetConstantPoolItem(Hcom_ms_debug_ConstantPoolHelper *thisptr, int niItem) <br>{ <br>    ClassArrayOfByte *pjabyte = NULL; <br> <br>    if (thisptr-&gt;m_ircf) <br>{ <br>IRemoteClassField *pircf; <br> <br>pircf = (IRemoteClassField *)convert_Java_Object_to_IUnknown((Hjava_lang_Object *)(thisptr-&gt;m_ircf), &amp;IID_IRemoteClassField); <br> <br>if (pircf) <br>{ <br>HRESULT hr; <br>PBYTE pbyteItem; <br>ULONG ulcbLen; <br> <br>hr = pircf-&gt;GetConstantPoolItem(niItem, &amp;pbyteItem, &amp;ulcbLen); <br> <br>if (hr == S_OK) <br>{ <br>                pjabyte = (ClassArrayOfByte *)ArrayAlloc(T_BYTE, ulcbLen); <br> <br>if (pjabyte) <br>CopyMemory(pjabyte-&gt;body, pbyteItem, ulcbLen); <br>else <br>SignalError(0, JAVAPKG "OutOfMemoryError", 0); <br> <br>CoTaskMemFree(pbyteItem); <br>                pbyteItem = NULL; <br>} <br>else <br>SignalError(0, "com.ms.com.ComFailException", "IRemoteClassField::GetConstantPoolItem"); <br>} <br>else <br>SignalError(0, JAVAPKG "ClassCastException", 0); <br>} <br>else <br>SignalError(0, JAVAPKG "IllegalArgumentException", 0); <br> <br>return(pjabyte); <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
