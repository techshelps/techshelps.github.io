<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EXCEPT.CXX</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4238"></a>EXCEPT.CXX</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Copyright 1991-1998 Microsoft Corporation. <br>// <br>//  File:       Except.cxx <br>// <br>//  Contents:   Conversion to Ole errors <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include &lt;pch.cxx&gt; <br>#pragma hdrstop <br> <br>typedef LONG NTSTATUS; <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     IsOleError, public <br>// <br>//  Synopsis:   return TRUE if sc looks like an OLE SCODE. <br>// <br>//-------------------------------------------------------------------------- <br> <br>inline BOOL IsOleError (NTSTATUS sc) <br>{ <br>    return ((sc &amp; 0xFFF00000) == 0x80000000) || <br>           (SUCCEEDED(sc) &amp;&amp; (sc &amp; 0xFFFFF000) != 0); <br>} <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     GetOleError, public <br>// <br>//  Purpose:    Converts a status code to an Ole error code, because interfaces <br>//              return Ole error code only. <br>// <br>//-------------------------------------------------------------------------- <br> <br>SCODE GetOleError(CException &amp; e) <br>{ <br>    NTSTATUS scError = e.GetErrorCode(); <br> <br>    if (IsOleError(scError)) <br>    { <br>        return scError; <br>    } <br>    else if ( STATUS_NO_MEMORY == scError ) <br>    { <br>        return E_OUTOFMEMORY; <br>    } <br>    else <br>    { <br>        return E_FAIL; <br>    } <br>} <br> <br>void _cdecl SystemExceptionTranslator( unsigned int uiWhat, <br>                                       struct _EXCEPTION_POINTERS * pexcept ) <br>{ <br>    throw CException( uiWhat ) ; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
