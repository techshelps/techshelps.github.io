<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BAG.CXX</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4235"></a>BAG.CXX</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>//  Copyright 1992 - 1998 Microsoft Corporation. <br>// <br>//  File:       bag.cxx <br>// <br>//  Contents:   Bag for Html parsing elements <br>// <br>//  Classes:    CHtmlElementBag <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include &lt;pch.cxx&gt; <br>#pragma hdrstop <br> <br>#include &lt;bag.hxx&gt; <br>#include &lt;htmlelem.hxx&gt; <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Class:      CHtmlElemBagEntry::CHtmlElemBagEntry <br>// <br>//  Purpose:    Constructor <br>// <br>//-------------------------------------------------------------------------- <br> <br>CHtmlElemBagEntry::CHtmlElemBagEntry() <br>    : _pHtmlElement(0), <br>      _eTokType(GenericToken) <br>{ <br>} <br> <br> <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Class:      CHtmlElemBagEntry::~CHtmlElemBagEntry <br>// <br>//  Purpose:    Destructor <br>// <br>//-------------------------------------------------------------------------- <br> <br>CHtmlElemBagEntry::~CHtmlElemBagEntry() <br>{ <br>    delete _pHtmlElement; <br>} <br> <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     CHtmlElementBag::CHtmlElementBag <br>// <br>//  Synopsis:   Constructor <br>// <br>//  Arguments:  [cElems]  -- Count of Html elements in bag <br>// <br>//-------------------------------------------------------------------------- <br> <br>CHtmlElementBag::CHtmlElementBag( unsigned cElems ) <br>    : _uMaxSize(cElems), <br>      _uCurSize(0) <br>{ <br>    _aBagEntry = newk(mtNewX, NULL) CHtmlElemBagEntry[cElems]; <br>} <br> <br> <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     CHtmlElementBag::~CHtmlElementBag <br>// <br>//  Synopsis:   Destructor <br>// <br>//-------------------------------------------------------------------------- <br> <br>CHtmlElementBag::~CHtmlElementBag() <br>{ <br>    delete[] _aBagEntry; <br>} <br> <br> <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     CHtmlElementBag::AddElement <br>// <br>//  Synopsis:   Add a new mapping the bag <br>// <br>//  Arguments:  [eHtmlToken]  -- token type <br>//              [pHtmlElem] -- Html element corresponding to eHtmlToken <br>// <br>//-------------------------------------------------------------------------- <br> <br>void CHtmlElementBag::AddElement( HtmlTokenType eTokType, <br>                                  CHtmlElement *pHtmlElement ) <br>{ <br>    Win4Assert( _uCurSize &lt; _uMaxSize ); <br> <br>    _aBagEntry[_uCurSize].SetTokenType( eTokType ); <br>    _aBagEntry[_uCurSize].SetHtmlElement( pHtmlElement ); <br>    _uCurSize++; <br>} <br> <br> <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Method:     CHtmlElementBag::QueryElement <br>// <br>//  Synopsis:   Retrieve the Html element corresponding to given token type <br>// <br>//  Arguments:  [eHtmlToken]  -- token type <br>// <br>//-------------------------------------------------------------------------- <br> <br>CHtmlElement *CHtmlElementBag::QueryElement( HtmlTokenType eTokType ) <br>{ <br>    for (unsigned i=0; i&lt;_uCurSize; i++) <br>    { <br>        if ( _aBagEntry[i].GetTokenType() == eTokType ) <br>            return _aBagEntry[i].GetHtmlElement(); <br>    } <br> <br>    htmlDebugOut(( DEB_ERROR, <br>                 "Unknown Html token type 0x%x in CHtmlElementBag::QueryElement\n", <br>                 eTokType )); <br>    Win4Assert( !"Cannot map Html token type" ); <br>    return 0; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
