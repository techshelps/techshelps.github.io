<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAIN.CXX</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4249"></a>MAIN.CXX</h2>
<pre><code>//+--------------------------------------------------------------------------- <br>// <br>// Copyright (C) 1996, Microsoft Corporation. <br>// <br>// File:        main.cxx <br>// <br>// Contents:    DLL entry point for query.dll <br>// <br>//---------------------------------------------------------------------------- <br> <br>#include &lt;pch.cxx&gt; <br>#pragma hdrstop <br> <br>#define _DECL_DLLMAIN 1 <br>#include &lt;process.h&gt; <br> <br>#include &lt;osv.hxx&gt; <br> <br>// global function to find OS platform <br>#define UNINITIALIZED -1 <br>int g_nOSWinNT = UNINITIALIZED; <br> <br>//+------------------------------------------------------------------------- <br>// <br>//  Function:   GetOSVersion <br>// <br>//  Synopsis:   Determine OS version <br>// <br>//-------------------------------------------------------------------------- <br> <br>void InitOSVersion() <br>{ <br>    if ( g_nOSWinNT == UNINITIALIZED ) <br>    { <br>        OSVERSIONINFOA OSVersionInfo; <br>        OSVersionInfo.dwOSVersionInfoSize = sizeof( OSVERSIONINFOA ); <br> <br>        if ( GetVersionExA( &amp;OSVersionInfo ) ) <br>        { <br>            g_nOSWinNT = OSVersionInfo.dwPlatformId; <br>        } <br>    } <br>} <br> <br>//+--------------------------------------------------------------------------- <br>// <br>//  Function:   DllMain <br>// <br>//  Synopsis:   Called from C-Runtime on process/thread attach/detach <br>// <br>//  Arguments:  [hInstance]  -- <br>//              [dwReason]   -- <br>//              [lpReserved] -- <br>// <br>//---------------------------------------------------------------------------- <br> <br>BOOL WINAPI DllMain( HANDLE hInstance, DWORD dwReason , void * lpReserved ) <br>{ <br>    if ( DLL_PROCESS_ATTACH == dwReason ) <br>    { <br>        DisableThreadLibraryCalls( (HINSTANCE)hInstance ); <br> <br>        InitOSVersion(); <br>    } <br> <br>    return TRUE; <br>} <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
