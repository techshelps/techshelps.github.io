<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WPSPIHLP.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4629"></a>WPSPIHLP.CPP</h2>
<pre><code>/*------------------------------------------------*\ <br> * <br> *Copyright (c) 1997 Microsoft Corporation <br> * <br> *Module Name: <br> * <br> *wpspihlp.cpp <br> * <br> *Abstract: <br> * <br> *Implementation of WebPost Service Provider <br> *Interface helper functions. <br> * <br>\*------------------------------------------------*/ <br> <br> <br>#include "stdafx.h" <br>#include &lt;windows.h&gt; <br>#include "util.h" <br>#include &lt;wptypes.h&gt; <br>#include "wpprov.h" <br>#include "wppobj.h" <br>#include "wpspi.h" <br>#include &lt;wpapi.h&gt; <br> <br> <br>#define IN_WPPDLL <br>#include &lt;wpspihlp.h&gt; <br> <br> <br>HRESULT WPPFUNC WINAPI WppBindToSiteW( <br>HWNDhwnd, <br>LPCWSTRwsSiteName, <br>LPCWSTRwsURL, <br>    REFIIDriid, <br>DWORDdwFlag, <br>DWORDdwReserved, <br>    PVOID *ppvUnk) <br>{ <br>HRESULThRetCode = S_OK; <br>HRESULThResult; <br>CComObject&lt;CWPProvider&gt;*pWPP; <br> <br>// <br>//Check arguments <br>// <br> <br>if (!IsEqualIID(riid, IID_IUnknown) &amp;&amp; <br>!IsEqualIID(riid, IID_IWPSiteW) &amp;&amp; <br>!IsEqualIID(riid, IID_IWPProvider)) <br>leave(E_NOINTERFACE); <br> <br>if (IsBadWritePtr(ppvUnk, sizeof(IUnknown *))) <br>leave(E_INVALIDARG); <br> <br>// <br>//Create new Service Provider object <br>// <br> <br>pWPP = new CComObject&lt;CWPProvider&gt;; <br>if (NULL == pWPP) <br>leave(E_OUTOFMEMORY); <br> <br>pWPP-&gt;AddRef(); <br> <br>//Initialize object state <br> <br>hResult = pWPP-&gt;Init(wsSiteName, wsURL); <br>if (FAILED(hResult)) <br>leave(hResult); <br> <br>//If this is an autobind, try a test post <br> <br>if (0 == (dwFlag &amp; WPF_FORCE_BIND)) <br>{ <br>hResult = pWPP-&gt;DoTestPost(); <br>if (FAILED(hResult)) <br>leave(hResult); <br>} <br> <br>// <br>//Set pointer provided to point to new object <br>// <br> <br>*ppvUnk = pWPP; <br> <br> <br>leave_routine: <br> <br>return(hRetCode); <br>} <br> <br> <br>HRESULT WPPFUNC WINAPI WppDeleteSiteW(LPCWSTR sSiteName) <br>{ <br>HRESULThRetCode = S_OK; <br> <br>// <br>//TO DO:Place implementation of site deletion code here <br>// <br> <br>leave(S_OK); <br> <br>leave_routine: <br> <br>return(hRetCode); <br>} <br> <br> <br> <br> <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
