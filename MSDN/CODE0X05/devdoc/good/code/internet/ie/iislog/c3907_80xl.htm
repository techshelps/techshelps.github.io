<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LOGPARSE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3909"></a>LOGPARSE.H</h2>
<pre><code>#if !defined(AFX_LOGPARSE_H__F7BCDEE3_DE91_11D0_BB1C_00C04FB66F63__INCLUDED_) <br>#define AFX_LOGPARSE_H__F7BCDEE3_DE91_11D0_BB1C_00C04FB66F63__INCLUDED_ <br> <br>// LOGPARSE.H - Header file for your Internet Server <br>//    LogParse Extension <br> <br>#include "resource.h" <br> <br>const GUID CLSID_StdEncodingFilterFac = {0x54c37cd0,0xd944,0x11d0,{0xa9,0xf4,0x00,0x60,0x97,0x94,0x23,0x11}}; <br>const GUID IID_IEncodingFilterFactory = {0x70bdde00,0xc18e,0x11d0,{0xa9,0xce,0x00,0x60,0x97,0x94,0x23,0x11}}; <br> <br>static const TCHAR c_szEncodingType[] = _T("HTTP_CONTENT_TRANSFER_ENCODING"); <br> <br>static const TCHAR g_szRegW3SVC[]  <br>          = _T("SYSTEM\\CurrentControlSet\\Services\\W3SVC\\Parameters"); <br>static const TCHAR g_szRegLogFileDirectory[] <br>          = _T("LogFileDirectory"); <br>static const TCHAR g_szLogFilePath[] <br>          = _T("\\ie4\\"); <br> <br>static const TCHAR g_szFields[]    = _T("#Fields: "); <br>static const TCHAR g_szURIFields[] = _T("#Fields: s-URI "); <br>static const TCHAR g_szURI[]       = _T("s-URI "); <br>static const TCHAR g_szContext[]   = _T("x-context "); <br>static const TCHAR g_szCache[]     = _T("x-cache "); <br>static const TCHAR g_szDate[]      = _T("x-date "); <br>static const TCHAR g_szTime[]      = _T("x-time "); <br>static const TCHAR g_szDuration[]  = _T("x-duration "); <br>static const TCHAR g_szMeta[]      = _T("x-meta "); <br> <br>#define interselog_cookiename "INTERSE" <br> <br>#define sizeof_header   4096 <br>/* <br> * The "name" of the cookie assigned to each user. We strongly recommend that <br> * the default value (INTERSE) be used. This value can be set to anything, but <br> * once set, should never be changed. If you have used previous versions of <br> * this Inters  ISAPI extension and have used a different cookie name before, <br> * you will need to edit the cookie name to specify the name that you had used <br> * with the previous release. <br> * <br> */ <br> <br>class CLogParseExtension : public CHttpServer <br>{ <br>public: <br>CLogParseExtension(); <br>~CLogParseExtension(); <br> <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>// NOTE - the ClassWizard will add and remove member functions here. <br>//    DO NOT EDIT what you see in these blocks of generated code ! <br>//{{AFX_VIRTUAL(CLogParseExtension) <br>public: <br>virtual BOOL GetExtensionVersion(HSE_VERSION_INFO* pVer); <br>//}}AFX_VIRTUAL <br> <br>// TODO: Add handlers for your commands here. <br>// For example: <br> <br>    void    LogParse(CHttpServerContext* pCtxt, LPTSTR pszString); <br> <br>    DECLARE_PARSE_MAP() <br> <br>    protected: <br>    BOOL    OpenLogFile(CHttpServerContext* pCtxt); <br>    DWORD   AppendContentToLogfile(CHttpServerContext* pCtxt, LPCTSTR pszContent, DWORD ContentLen, BOOL fEncoded); <br>    BOOL    DecodeContent(CHttpServerContext* pCtxt, LPCTSTR pszEncodedString, DWORD cbEncode,  <br>                            LPTSTR pszDecString, DWORD cbDecode); <br>    DWORD   ConvertToW3CFlexible(CHttpServerContext* pCtxt, LPTSTR pszClientLog); <br>    DWORD   ProcessFixedLogFields(CHttpServerContext* pCtxt); <br>    BOOL    GetUserCookie(CHttpServerContext* pCtxt, LPTSTR pszCookie, LPDWORD pcb); <br>    DWORD   ProcessClientLog(CHttpServerContext* pCtxt, LPTSTR pszClientLog, LPDWORD pMove); <br> <br>    private: <br>    HANDLE  m_hFile; <br>    DWORD   m_ContentLen; <br>    LPTSTR  m_szEncoding; <br>    TCHAR   m_szLogFile[MAX_PATH*2]; <br> <br>    DWORD   m_cbURILen; <br>    DWORD   m_cbLogLen; <br>    BOOL    m_fInLog; <br>    //{{AFX_MSG(CLogParseExtension) <br>//}}AFX_MSG <br>}; <br> <br> <br>//{{AFX_INSERT_LOCATION}} <br>// Microsoft Developer Studio will insert additional declarations immediately before the previous line. <br> <br>#endif // !defined(AFX_LOGPARSE_H__F7BCDEE3_DE91_11D0_BB1C_00C04FB66F63__INCLUDED) </code></pre>
<p>&nbsp;</p></body>
</HTML>
