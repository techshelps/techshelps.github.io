<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PADFRAME.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3973"></a>PADFRAME.CPP</h2>
<pre><code>//=------------------------------------------------------------------------= <br>// PadFrame.Cpp <br>//=------------------------------------------------------------------------= <br>// Copyright 1992-1997 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// implementation of the CPadFrame class <br>// <br> <br>#include "stdafx.h" <br>#include "superpad.h" <br>#include "padframe.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPadFrame <br> <br>IMPLEMENT_DYNCREATE(CPadFrame, CMDIChildWnd) <br> <br>int CPadFrame::m_nDefCmdShow = SW_SHOWMAXIMIZED; <br>int CPadFrame::m_nDefCmdShowOld = SW_SHOWMAXIMIZED; <br> <br>static TCHAR BASED_CODE szSec[] = _T("Settings"); <br>static TCHAR BASED_CODE szShowCmd[] = _T("ShowCmd"); <br> <br>void CPadFrame::ActivateFrame(int nCmdShow) <br>{ <br>if (nCmdShow == -1) <br>nCmdShow = m_nDefCmdShow;   // use our default <br>CMDIChildWnd::ActivateFrame(nCmdShow); <br>} <br> <br>void CPadFrame::Initialize() <br>{ <br>m_nDefCmdShow = AfxGetApp()-&gt;GetProfileInt(szSec, szShowCmd, m_nDefCmdShow); <br>m_nDefCmdShowOld = m_nDefCmdShow; <br>} <br> <br>void CPadFrame::Terminate() <br>{ <br>if (m_nDefCmdShow != m_nDefCmdShowOld) <br>{ <br>AfxGetApp()-&gt;WriteProfileInt(szSec, szShowCmd, m_nDefCmdShow); <br>m_nDefCmdShowOld = m_nDefCmdShow; <br>} <br>} <br> <br>BEGIN_MESSAGE_MAP(CPadFrame, CMDIChildWnd) <br>//{{AFX_MSG_MAP(CPadFrame) <br>ON_WM_SIZE() <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CPadFrame message handlers <br> <br>void CPadFrame::OnSize(UINT nType, int cx, int cy) <br>{ <br>CMDIChildWnd::OnSize(nType, cx, cy); <br>if (!IsWindowVisible()) <br>return; <br> <br>switch (nType) <br>{ <br>case SIZE_MAXIMIZED: <br>m_nDefCmdShow = SW_SHOWMAXIMIZED; <br>break; <br>case SIZE_RESTORED: <br>m_nDefCmdShow = SW_SHOWNORMAL; <br>break; <br>} <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
