<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IELNKCTL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3892"></a>IELNKCTL.H</h2>
<pre><code>// IELnkCtl.h : Declaration of the CIELnkCtl <br> <br>#ifndef __IELNKCTL_H_ <br>#define __IELNKCTL_H_ <br> <br>#include "resource.h"       // main symbols <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CIELnkCtl <br>class ATL_NO_VTABLE CIELnkCtl :  <br>public CComObjectRootEx&lt;CComSingleThreadModel&gt;, <br>public CComCoClass&lt;CIELnkCtl, &amp;CLSID_IELnkCtl&gt;, <br>public CComControl&lt;CIELnkCtl&gt;, <br>public IDispatchImpl&lt;IIELnkCtl, &amp;IID_IIELnkCtl, &amp;LIBID_IELNKLib&gt;, <br>public IProvideClassInfo2Impl&lt;&amp;CLSID_IELnkCtl, NULL, &amp;LIBID_IELNKLib&gt;, <br>public IPersistStreamInitImpl&lt;CIELnkCtl&gt;, <br>public IPersistStorageImpl&lt;CIELnkCtl&gt;, <br>public IQuickActivateImpl&lt;CIELnkCtl&gt;, <br>public IOleControlImpl&lt;CIELnkCtl&gt;, <br>public IOleObjectImpl&lt;CIELnkCtl&gt;, <br>public IOleInPlaceActiveObjectImpl&lt;CIELnkCtl&gt;, <br>public IViewObjectExImpl&lt;CIELnkCtl&gt;, <br>public IOleInPlaceObjectWindowlessImpl&lt;CIELnkCtl&gt;, <br>public IDataObjectImpl&lt;CIELnkCtl&gt;, <br>public ISupportErrorInfo, <br>public ISpecifyPropertyPagesImpl&lt;CIELnkCtl&gt;, <br>public IPersistPropertyBagImpl&lt;CIELnkCtl&gt;, <br>public IObjectSafetyImpl&lt;CIELnkCtl&gt; <br>{ <br>public: <br>CIELnkCtl() <br>{ <br>#ifndef _UNICODE <br>m_pANSIHLink = NULL; <br>#endif <br> <br>m_lFlags = 1; <br>m_lMode = 0; <br>} <br> <br>~CIELnkCtl() <br>{ <br>#ifndef _UNICODE <br>if(m_pANSIHLink) <br>free(m_pANSIHLink); <br>#endif <br>} <br> <br>DECLARE_REGISTRY_RESOURCEID(IDR_IELNKCTL) <br> <br>BEGIN_COM_MAP(CIELnkCtl) <br>COM_INTERFACE_ENTRY(IIELnkCtl) <br>COM_INTERFACE_ENTRY(IDispatch) <br>COM_INTERFACE_ENTRY_IMPL(IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IViewObject2, IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IViewObject, IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL(IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IOleInPlaceObject, IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IOleWindow, IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL(IOleInPlaceActiveObject) <br>COM_INTERFACE_ENTRY_IMPL(IOleControl) <br>COM_INTERFACE_ENTRY_IMPL(IOleObject) <br>COM_INTERFACE_ENTRY_IMPL(IQuickActivate) <br>COM_INTERFACE_ENTRY_IMPL(IPersistStorage) <br>COM_INTERFACE_ENTRY_IMPL(IPersistStreamInit) <br>COM_INTERFACE_ENTRY_IMPL(ISpecifyPropertyPages) <br>COM_INTERFACE_ENTRY_IMPL(IDataObject) <br>COM_INTERFACE_ENTRY(IProvideClassInfo) <br>COM_INTERFACE_ENTRY(IProvideClassInfo2) <br>COM_INTERFACE_ENTRY(ISupportErrorInfo) <br>COM_INTERFACE_ENTRY_IMPL(IPersistPropertyBag) <br>COM_INTERFACE_ENTRY_IMPL(IObjectSafety) <br>END_COM_MAP() <br> <br>BEGIN_PROPERTY_MAP(CIELnkCtl) <br>// Example entries <br>// PROP_ENTRY("Property Description", dispid, clsid) <br>PROP_ENTRY("Flags", 1, CLSID_NULL) <br>PROP_ENTRY("HLink", 2, CLSID_NULL) <br>PROP_ENTRY("Location", 3, CLSID_NULL) <br>PROP_ENTRY("Mode", 4, CLSID_NULL) <br>PROP_ENTRY("TargetFrame", 5, CLSID_NULL) <br>PROP_PAGE(CLSID_StockColorPage) <br>END_PROPERTY_MAP() <br> <br> <br>BEGIN_MSG_MAP(CIELnkCtl) <br>MESSAGE_HANDLER(WM_PAINT, OnPaint) <br>MESSAGE_HANDLER(WM_SETFOCUS, OnSetFocus) <br>MESSAGE_HANDLER(WM_KILLFOCUS, OnKillFocus) <br>END_MSG_MAP() <br> <br>// ISupportsErrorInfo <br>STDMETHOD(InterfaceSupportsErrorInfo)(REFIID riid); <br> <br>// IViewObjectEx <br>STDMETHOD(GetViewStatus)(DWORD* pdwStatus) <br>{ <br>ATLTRACE(_T("IViewObjectExImpl::GetViewStatus\n")); <br>*pdwStatus = VIEWSTATUS_SOLIDBKGND | VIEWSTATUS_OPAQUE; <br>return S_OK; <br>} <br> <br>// IIELnkCtl <br>public: <br>STDMETHOD(Back)(); <br>STDMETHOD(Forward)(); <br>STDMETHOD(Go)(); <br>STDMETHOD(get_TargetFrame)(/*[out, retval]*/ BSTR *pVal); <br>STDMETHOD(put_TargetFrame)(/*[in]*/ BSTR newVal); <br>STDMETHOD(get_Mode)(/*[out, retval]*/ long *pVal); <br>STDMETHOD(put_Mode)(/*[in]*/ long newVal); <br>STDMETHOD(get_Location)(/*[out, retval]*/ BSTR *pVal); <br>STDMETHOD(put_Location)(/*[in]*/ BSTR newVal); <br>STDMETHOD(get_HLink)(/*[out, retval]*/ BSTR *pVal); <br>STDMETHOD(put_HLink)(/*[in]*/ BSTR newVal); <br>STDMETHOD(get_Flags)(/*[out, retval]*/ long *pVal); <br>STDMETHOD(put_Flags)(/*[in]*/ long newVal); <br>HRESULT OnDraw(ATL_DRAWINFO&amp; di); <br> <br>STDMETHOD(GetInterfaceSafetyOptions)(REFIID riid, DWORD *pdwSupportedOptions, DWORD *pdwEnabledOptions); <br>STDMETHOD(SetInterfaceSafetyOptions)(REFIID riid, DWORD dwOptionSetMask, DWORD dwEnabledOptions); <br> <br>private: <br> <br>CComBSTR m_strHLink; <br>CComBSTR m_strLocation; <br>CComBSTR m_strTargetFrame; <br>long  m_lFlags; <br>long  m_lMode; <br> <br>#ifndef _UNICODE <br>char * m_pANSIHLink; <br>#endif <br> <br>}; <br> <br>#endif //__IELNKCTL_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
