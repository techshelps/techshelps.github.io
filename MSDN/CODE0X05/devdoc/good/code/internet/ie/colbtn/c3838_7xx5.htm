<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BUTTON.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3839"></a>BUTTON.H</h2>
<pre><code>// Button.h : Declaration of the CButton <br> <br>#ifndef __BUTTON_H_ <br>#define __BUTTON_H_ <br> <br>#include "resource.h"       // main symbols <br>#include &lt;mshtml.h&gt; <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CButton <br>class ATL_NO_VTABLE CButton :  <br>public CComObjectRootEx&lt;CComSingleThreadModel&gt;, <br>public CComCoClass&lt;CButton, &amp;CLSID_Button&gt;, <br>public CComControl&lt;CButton&gt;, <br>public IDispatchImpl&lt;IButton, &amp;IID_IButton, &amp;LIBID_COLBTNLib&gt;, <br>public IProvideClassInfo2Impl&lt;&amp;CLSID_Button, NULL, &amp;LIBID_COLBTNLib&gt;, <br>public IPersistStreamInitImpl&lt;CButton&gt;, <br>public IPersistStorageImpl&lt;CButton&gt;, <br>public IQuickActivateImpl&lt;CButton&gt;, <br>public IOleControlImpl&lt;CButton&gt;, <br>public IOleObjectImpl&lt;CButton&gt;, <br>public IOleInPlaceActiveObjectImpl&lt;CButton&gt;, <br>public IViewObjectExImpl&lt;CButton&gt;, <br>public IOleInPlaceObjectWindowlessImpl&lt;CButton&gt;, <br>public IDataObjectImpl&lt;CButton&gt;, <br>public ISpecifyPropertyPagesImpl&lt;CButton&gt; <br>{ <br>public: <br>CContainedWindow m_ctlButton; <br> <br> <br>CButton() : <br>m_ctlButton(_T("Button"), this, 1) <br>{ <br>  <br>m_bWindowOnly = TRUE;  <br>} <br> <br>DECLARE_REGISTRY_RESOURCEID(IDR_BUTTON) <br> <br>BEGIN_COM_MAP(CButton) <br>COM_INTERFACE_ENTRY(IButton) <br>COM_INTERFACE_ENTRY(IDispatch) <br>COM_INTERFACE_ENTRY_IMPL(IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IViewObject2, IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IViewObject, IViewObjectEx) <br>COM_INTERFACE_ENTRY_IMPL(IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IOleInPlaceObject, IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL_IID(IID_IOleWindow, IOleInPlaceObjectWindowless) <br>COM_INTERFACE_ENTRY_IMPL(IOleInPlaceActiveObject) <br>COM_INTERFACE_ENTRY_IMPL(IOleControl) <br>COM_INTERFACE_ENTRY_IMPL(IOleObject) <br>COM_INTERFACE_ENTRY_IMPL(IQuickActivate) <br>COM_INTERFACE_ENTRY_IMPL(IPersistStorage) <br>COM_INTERFACE_ENTRY_IMPL(IPersistStreamInit) <br>COM_INTERFACE_ENTRY_IMPL(ISpecifyPropertyPages) <br>COM_INTERFACE_ENTRY_IMPL(IDataObject) <br>COM_INTERFACE_ENTRY(IProvideClassInfo) <br>COM_INTERFACE_ENTRY(IProvideClassInfo2) <br>END_COM_MAP() <br> <br>BEGIN_PROPERTY_MAP(CButton) <br>// Example entries <br>// PROP_ENTRY("Property Description", dispid, clsid) <br>END_PROPERTY_MAP() <br> <br> <br>BEGIN_MSG_MAP(CButton) <br>MESSAGE_HANDLER(WM_PAINT, OnPaint) <br>MESSAGE_HANDLER(WM_SETFOCUS, OnSetFocus) <br>MESSAGE_HANDLER(WM_KILLFOCUS, OnKillFocus) <br>MESSAGE_HANDLER(WM_CREATE, OnCreate) <br>ALT_MSG_MAP(1) <br> MESSAGE_HANDLER( WM_LBUTTONUP, OnClick) <br>END_MSG_MAP() <br> <br>LRESULT OnCreate(UINT uMsg, WPARAM wParam, LPARAM lParam, BOOL&amp; bHandled) <br>{ <br>RECT rc; <br>GetWindowRect(&amp;rc); <br>rc.right -= rc.left; <br>rc.bottom -= rc.top; <br>rc.top = rc.left = 0; <br>m_ctlButton.Create(m_hWnd, rc ); <br>::SendMessage(m_ctlButton.m_hWnd, WM_SETTEXT, (WPARAM)0, (LPARAM)"Pink" ); <br> <br>return 0; <br>} <br>STDMETHOD(SetObjectRects)(LPCRECT prcPos,LPCRECT prcClip) <br>{ <br>IOleInPlaceObjectWindowlessImpl&lt;CButton&gt;::SetObjectRects(prcPos, prcClip); <br>int cx, cy; <br>cx = prcPos-&gt;right - prcPos-&gt;left; <br>cy = prcPos-&gt;bottom - prcPos-&gt;top; <br>::SetWindowPos(m_ctlButton.m_hWnd, NULL, 0, <br>0, cx, cy, SWP_NOZORDER | SWP_NOACTIVATE); <br>return S_OK; <br>} <br> <br>// IViewObjectEx <br>STDMETHOD(GetViewStatus)(DWORD* pdwStatus) <br>{ <br>ATLTRACE(_T("IViewObjectExImpl::GetViewStatus\n")); <br>*pdwStatus = VIEWSTATUS_SOLIDBKGND | VIEWSTATUS_OPAQUE; <br>return S_OK; <br>} <br> <br>LRESULT OnClick(UINT, WPARAM wParam, LPARAM lParam, BOOL&amp; bHandled) <br>{ <br>HRESULT hr = E_FAIL; <br>// Get the document <br>CComPtr&lt;IOleContainer&gt; spContainer; <br>m_spClientSite-&gt;GetContainer(&amp;spContainer); <br>CComQIPtr&lt;IHTMLDocument2, &amp;IID_IHTMLDocument2&gt; spDoc(spContainer); <br>if (spDoc) <br>hr = spDoc-&gt;put_bgColor( CComVariant(CComBSTR(_T("pink") ) ) ); <br>m_ctlButton.DefWindowProc(WM_LBUTTONUP, wParam, lParam); <br>return 0; <br>} <br> <br>// IButton <br>public: <br>HRESULT OnDraw(ATL_DRAWINFO&amp; di); <br> <br>}; <br> <br>#endif //__BUTTON_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
