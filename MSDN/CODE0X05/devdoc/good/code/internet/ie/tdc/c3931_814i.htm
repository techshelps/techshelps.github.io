<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STDAFX.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3942"></a><sup></sup>STDAFX.H</h2>
<pre><code>// stdafx.h : include file for standard system include files, <br>//      or project specific include files that are used frequently, <br>//      but are changed infrequently <br> <br>#define STRICT 1 <br>#define _WIN32_WINNT 0x0400 <br>#define _ATL_APARTMENT_THREADED <br> <br>#include &lt;atlbase.h&gt; <br> <br>// turn off ATL debugging, always <br>#undef _ATL_DEBUG_QI <br>// AddField messages can be so numerous, we have a separate flag <br>// for them.. <br>#undef TDC_ATL_DEBUG_ADDFIELD <br>#ifdef _DEBUG <br>#define TDC_ATL_DEBUG <br>#endif <br> <br>//#define MemAlloc(a) CoTaskMemAlloc((a)) <br>//#define MemFree(a) CoTaskMemFree((a)) <br>//#define MemRealloc(a,b) (((*(a) = CoTaskMemRealloc(*(a),(b))) ? S_OK : E_FAIL)) <br> <br>//You may derive a class from CComModule and use it if you want to override <br>//something, but do not change the name of _Module <br>extern CComModule _Module; <br>#include &lt;atlcom.h&gt; <br>#include &lt;atlctl.h&gt; <br> <br>void ClearInterfaceFn(IUnknown ** ppUnk); <br> <br>template &lt;class PI&gt; <br>inline void <br>ClearInterface(PI * ppI) <br>{ <br>#ifdef _DEBUG <br>    IUnknown * pUnk = *ppI; <br>    _ASSERTE((void *) pUnk == (void *) *ppI); <br>#endif <br> <br>    ClearInterfaceFn((IUnknown **) ppI); <br>} <br> <br>#ifdef TDC_ATL_DEBUG <br>#define OutputDebugStringX(X) OutputDebugString(X) <br>#else <br>#define OutputDebugStringX(X) <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
