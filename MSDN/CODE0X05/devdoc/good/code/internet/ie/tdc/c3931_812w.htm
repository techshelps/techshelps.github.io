<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SIMPDATA.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context3938"></a><sup></sup>SIMPDATA.CPP</h2>
<pre><code>//+----------------------------------------------------------------------- <br>// <br>//  Simple Tabular Data Object <br>//  Copyright (C) Microsoft Corporation, 1996, 1997 <br>// <br>//  File:       SimpData.cpp <br>// <br>//  Contents:   Implementation of the CSimpleTabularData COM object. <br>// <br>//------------------------------------------------------------------------ <br> <br>#include "stdafx.h" <br>#include "STD.h" <br>#include "TDC.h" <br>#include &lt;MLang.h&gt; <br>#include "Notify.h" <br>#include "TDCParse.h" <br>#include "TDCArr.h" <br>#include "SimpData.h" <br>#include "TDCIds.h" <br> <br> <br>//------------------------------------------------------------------------ <br>// <br>//  Method:    CSimpleTabularData() - Constructor <br>// <br>//  Synopsis:  Clears internal data.  Due to the COM model, the <br>//             member function "Create" should be called to actually <br>//             initialize the STD data structures. <br>//------------------------------------------------------------------------ <br> <br>CSimpleTabularData::CSimpleTabularData() : m_cRef(1), m_pTDCArr(NULL) <br>{ <br>} <br> <br>//------------------------------------------------------------------------ <br>// <br>//  Method:    Create() <br>// <br>//  Synopsis:  Initializes STD.   <br>//             This method should be called after an STD object is contructed <br>//             to initialize it. <br>// <br>//  Arguments: pTDCArr      Pointer to the TDCArr object containing the <br>//                          data for this control. <br>// <br>//  Returns:   Nothing. <br>// <br>//------------------------------------------------------------------------ <br> <br>void <br>CSimpleTabularData::Create(CTDCArr *pTDCArr) <br>{ <br>    m_pTDCArr = pTDCArr; <br>    if (m_pTDCArr != NULL) <br>        m_pTDCArr-&gt;AddRef(); <br>} <br> <br> <br>//------------------------------------------------------------------------ <br>// <br>//  Method:    ~CSimpleTabularData() <br>// <br>//  Synopsis:  Destructor <br>// <br>//------------------------------------------------------------------------ <br> <br>CSimpleTabularData::~CSimpleTabularData() <br>{ <br>    if (m_pTDCArr != NULL) <br>        m_pTDCArr-&gt;Release(); <br>} <br> <br> <br>//------------------------------------------------------------------------ <br>// <br>//  Method:    Invalidate() <br>// <br>//  Synopsis:  Marks the current interface as invalid.  References to <br>//             the TDCArr object are released.  Subsequent calls to the <br>//             SimpleTabularData interface will return the code E_INVALID. <br>// <br>//  Arguments: None. <br>// <br>//  Returns:   S_OK to indicate success. <br>// <br>//------------------------------------------------------------------------ <br> <br>STDMETHODIMP <br>CSimpleTabularData::Invalidate() <br>{ <br>    if (m_pTDCArr != NULL) <br>    { <br>        m_pTDCArr-&gt;Release(); <br>        m_pTDCArr = NULL; <br>    } <br>    return S_OK; <br>} <br> <br> <br>////////////////////////////////////////////////////////////////////////// <br>// <br>//        Implementation of IUnknown COM interface. <br>//        ----------------------------------------- <br>// <br>////////////////////////////////////////////////////////////////////////// <br> <br>//+----------------------------------------------------------------------- <br>// <br>//  Method:    QueryInterface() <br>// <br>//  Synopsis:  Implements part of the standard IUnknown COM interface. <br>//               (Returns a pointer to this COM object) <br>// <br>//  Arguments: riid          GUID to recognise <br>//             ppv           Pointer to this COM object [OUT] <br>// <br>//  Returns:   S_OK upon success. <br>//             E_NOINTERFACE if queried for an unrecognised interface. <br>// <br>//+----------------------------------------------------------------------- <br> <br>STDMETHODIMP <br>CSimpleTabularData::QueryInterface (REFIID riid, LPVOID * ppv) <br>{ <br>    HRESULT hr; <br> <br>    _ASSERTE(ppv != NULL); <br> <br>    // This is the non-delegating IUnknown implementation <br>    if (riid == IID_IUnknown || riid == IID_OLEDBSimpleProvider) <br>    { <br>        *ppv = this; <br>        ((LPUNKNOWN)*ppv)-&gt;AddRef(); <br>        hr = S_OK; <br>    } <br>    else <br>    { <br>        *ppv = NULL; <br>        hr = E_NOINTERFACE; <br>    } <br> <br>#ifdef _ATL_DEBUG_QI <br>    AtlDumpIID(riid, _T("CSimpleTabularData"), hr); <br>#endif <br>    return hr; <br>} <br> <br> <br>//+----------------------------------------------------------------------- <br>// <br>//  Method:    AddRef() <br>// <br>//  Synopsis:  Implements part of the standard IUnknown COM interface. <br>//               (Adds a reference to this COM object) <br>// <br>//  Arguments: None <br>// <br>//  Returns:   Number of references to this COM object. <br>// <br>//+----------------------------------------------------------------------- <br> <br>STDMETHODIMP_(ULONG) <br>CSimpleTabularData::AddRef () <br>{ <br>    return ++m_cRef; <br>} <br> <br> <br>//+----------------------------------------------------------------------- <br>// <br>//  Method:    Release() <br>// <br>//  Synopsis:  Implements part of the standard IUnknown COM interface. <br>//               (Removes a reference to this COM object) <br>// <br>//  Arguments: None <br>// <br>//  Returns:   Number of remaining references to this COM object. <br>//             0 if the COM object is no longer referenced. <br>// <br>//+----------------------------------------------------------------------- <br> <br>STDMETHODIMP_(ULONG) <br>CSimpleTabularData::Release () <br>{ <br>    ULONG  retval; <br> <br>    m_cRef -= 1; <br>    retval = m_cRef; <br>    if (!m_cRef) <br>    { <br>        m_cRef = 0xffff;    //MM: Use this 'flag' for debug? <br>        delete this; <br>    } <br>    return retval; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
