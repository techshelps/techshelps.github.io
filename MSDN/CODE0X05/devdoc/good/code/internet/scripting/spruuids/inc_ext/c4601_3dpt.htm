<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ACTIVSCP.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4601"></a>ACTIVSCP.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 2.00.0101 */ <br>/* at Fri May 03 18:25:03 1996 <br> */ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br>#ifndef COM_NO_WINDOWS_H <br>#include "windows.h" <br>#include "ole2.h" <br>#endif /*COM_NO_WINDOWS_H*/ <br> <br>#ifndef __activscp_h__ <br>#define __activscp_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>#ifndef __IActiveScriptSite_FWD_DEFINED__ <br>#define __IActiveScriptSite_FWD_DEFINED__ <br>typedef interface IActiveScriptSite IActiveScriptSite; <br>#endif /* __IActiveScriptSite_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScriptError_FWD_DEFINED__ <br>#define __IActiveScriptError_FWD_DEFINED__ <br>typedef interface IActiveScriptError IActiveScriptError; <br>#endif /* __IActiveScriptError_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScriptSiteWindow_FWD_DEFINED__ <br>#define __IActiveScriptSiteWindow_FWD_DEFINED__ <br>typedef interface IActiveScriptSiteWindow IActiveScriptSiteWindow; <br>#endif /* __IActiveScriptSiteWindow_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScript_FWD_DEFINED__ <br>#define __IActiveScript_FWD_DEFINED__ <br>typedef interface IActiveScript IActiveScript; <br>#endif /* __IActiveScript_FWD_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScriptParse_FWD_DEFINED__ <br>#define __IActiveScriptParse_FWD_DEFINED__ <br>typedef interface IActiveScriptParse IActiveScriptParse; <br>#endif /* __IActiveScriptParse_FWD_DEFINED__ */ <br> <br> <br>/* header files for imported files */ <br>#include "olectl.h" <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0000 <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>//=--------------------------------------------------------------------------= <br>// ActivScp.h <br>//=--------------------------------------------------------------------------= <br>// (C) Copyright 1997 Microsoft Corporation.  All Rights Reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A <br>// PARTICULAR PURPOSE. <br>//=--------------------------------------------------------------------------= <br>// <br>// Declarations for ActiveX Scripting host applications and script engines. <br>// <br> <br>#ifndef __ActivScp_h <br>#define __ActivScp_h <br> <br>struct tagRemExcepInfo; <br>typedef struct tagRemEXCEPINFO RemEXCEPINFO; <br> <br>/* GUIDs <br> ********/ <br> <br>#ifndef _NO_SCRIPT_GUIDS <br>// {F0B7A1A1-9847-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(CATID_ActiveScript, 0xf0b7a1a1, 0x9847, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {F0B7A1A2-9847-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(CATID_ActiveScriptParse, 0xf0b7a1a2, 0x9847, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {BB1A2AE1-A4F9-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(IID_IActiveScript, 0xbb1a2ae1, 0xa4f9, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {BB1A2AE2-A4F9-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(IID_IActiveScriptParse, 0xbb1a2ae2, 0xa4f9, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {DB01A1E3-A42B-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(IID_IActiveScriptSite, 0xdb01a1e3, 0xa42b, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {D10F6761-83E9-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(IID_IActiveScriptSiteWindow, 0xd10f6761, 0x83e9, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>// {EAE1BA61-A4ED-11cf-8F20-00805F2CD064} <br>DEFINE_GUID(IID_IActiveScriptError, 0xeae1ba61, 0xa4ed, 0x11cf, 0x8f, 0x20, 0x0, 0x80, 0x5f, 0x2c, 0xd0, 0x64); <br> <br>#endif // _NO_SCRIPT_GUIDS <br> <br>// Constants used by ActiveX Scripting: <br>// <br> <br>/* IActiveScript::AddNamedItem() input flags */ <br> <br>#define SCRIPTITEM_ISVISIBLE0x00000002 <br>#define SCRIPTITEM_ISSOURCE0x00000004 <br>#define SCRIPTITEM_GLOBALMEMBERS0x00000008 <br>#define SCRIPTITEM_ISPERSISTENT0x00000040 <br>#define SCRIPTITEM_CODEONLY0x00000200 <br>#define SCRIPTITEM_NOCODE0x00000400 <br> <br>#define SCRIPTITEM_ALL_FLAGS(SCRIPTITEM_ISSOURCE | \ <br> SCRIPTITEM_ISVISIBLE | \ <br> SCRIPTITEM_ISPERSISTENT | \ <br> SCRIPTITEM_GLOBALMEMBERS | \ <br> SCRIPTITEM_NOCODE | \ <br> SCRIPTITEM_CODEONLY) <br> <br>/* IActiveScript::AddTypeLib() input flags */ <br> <br>#define SCRIPTTYPELIB_ISCONTROL0x00000010 <br>#define SCRIPTTYPELIB_ISPERSISTENT0x00000040 <br>#define SCRIPTTYPELIB_ALL_FLAGS(SCRIPTTEXT_ISCONTROL | SCRIPTTYPELIB_ISPERSISTENT) <br> <br>/* IActiveScriptParse::AddScriptlet() and IActiveScriptParse::ParseScriptText() input flags */ <br> <br>#define SCRIPTTEXT_ISVISIBLE0x00000002 <br>#define SCRIPTTEXT_ISEXPRESSION0x00000020 <br>#define SCRIPTTEXT_ISPERSISTENT0x00000040 <br>#define SCRIPTTEXT_ALL_FLAGS(SCRIPTTEXT_ISVISIBLE | \ <br> SCRIPTTEXT_ISEXPRESSION | \ <br> SCRIPTTEXT_ISPERSISTENT) <br> <br>/* IActiveScriptSite::GetItemInfo() input flags */ <br> <br>#define SCRIPTINFO_IUNKNOWN0x00000001 <br>#define SCRIPTINFO_ITYPEINFO0x00000002 <br>#define SCRIPTINFO_ALL_FLAGS(SCRIPTINFO_IUNKNOWN | \ <br> SCRIPTINFO_ITYPEINFO) <br> <br>/* IActiveScript::Interrupt() Flags */ <br> <br>#define SCRIPTINTERRUPT_DEBUG0x00000001 <br>#define SCRIPTINTERRUPT_RAISEEXCEPTION0x00000002 <br>#define SCRIPTINTERRUPT_ALL_FLAGS(SCRIPTINTERRUPT_DEBUG | \ <br> SCRIPTINTERRUPT_RAISEEXCEPTION) <br> <br>/* script state values */ <br> <br>/* size is 4 */ <br>typedef  <br>enum tagSCRIPTSTATE <br>    {SCRIPTSTATE_UNINITIALIZED= 0, <br>SCRIPTSTATE_INITIALIZED= 5, <br>SCRIPTSTATE_STARTED= 1, <br>SCRIPTSTATE_CONNECTED= 2, <br>SCRIPTSTATE_DISCONNECTED= 3, <br>SCRIPTSTATE_CLOSED= 4 <br>    }SCRIPTSTATE; <br> <br> <br>/* script thread state values */ <br> <br>/* size is 4 */ <br>typedef  <br>enum tagSCRIPTTHREADSTATE <br>    {SCRIPTTHREADSTATE_NOTINSCRIPT= 0, <br>SCRIPTTHREADSTATE_RUNNING= 1 <br>    }SCRIPTTHREADSTATE; <br> <br> <br>/* Thread IDs */ <br> <br>/* size is 4 */ <br>typedef DWORD SCRIPTTHREADID; <br> <br> <br>#define SCRIPTTHREADID_CURRENT((SCRIPTTHREADID)-1) <br>#define SCRIPTTHREADID_BASE((SCRIPTTHREADID)-2) <br>#define SCRIPTTHREADID_ALL((SCRIPTTHREADID)-3) <br> <br>/* Structures */ <br> <br>/* Interfaces <br> *************/ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br>/* size is 0 */ <br> <br> <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0000_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0000_v0_0_s_ifspec; <br> <br>#ifndef __IActiveScriptSite_INTERFACE_DEFINED__ <br>#define __IActiveScriptSite_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IActiveScriptSite <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IActiveScriptSite; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IActiveScriptSite : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall GetLCID(  <br>            /* [out] */ LCID __RPC_FAR *plcid) = 0; <br>         <br>        virtual HRESULT __stdcall GetItemInfo(  <br>            /* [in] */ LPCOLESTR pstrName, <br>            /* [in] */ DWORD dwReturnMask, <br>            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppiunkItem, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppti) = 0; <br>         <br>        virtual HRESULT __stdcall GetDocVersionString(  <br>            /* [out] */ BSTR __RPC_FAR *pbstrVersion) = 0; <br>         <br>        virtual HRESULT __stdcall OnScriptTerminate(  <br>            /* [in] */ const VARIANT __RPC_FAR *pvarResult, <br>            /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo) = 0; <br>         <br>        virtual HRESULT __stdcall OnStateChange(  <br>            /* [in] */ SCRIPTSTATE ssScriptState) = 0; <br>         <br>        virtual HRESULT __stdcall OnScriptError(  <br>            /* [in] */ IActiveScriptError __RPC_FAR *pscripterror) = 0; <br>         <br>        virtual HRESULT __stdcall OnEnterScript( void) = 0; <br>         <br>        virtual HRESULT __stdcall OnLeaveScript( void) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IActiveScriptSiteVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IActiveScriptSite __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IActiveScriptSite __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetLCID )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [out] */ LCID __RPC_FAR *plcid); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetItemInfo )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [in] */ LPCOLESTR pstrName, <br>            /* [in] */ DWORD dwReturnMask, <br>            /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppiunkItem, <br>            /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppti); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetDocVersionString )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [out] */ BSTR __RPC_FAR *pbstrVersion); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *OnScriptTerminate )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [in] */ const VARIANT __RPC_FAR *pvarResult, <br>            /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *OnStateChange )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [in] */ SCRIPTSTATE ssScriptState); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *OnScriptError )(  <br>            IActiveScriptSite __RPC_FAR * This, <br>            /* [in] */ IActiveScriptError __RPC_FAR *pscripterror); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *OnEnterScript )(  <br>            IActiveScriptSite __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *OnLeaveScript )(  <br>            IActiveScriptSite __RPC_FAR * This); <br>         <br>    } IActiveScriptSiteVtbl; <br> <br>    interface IActiveScriptSite <br>    { <br>        CONST_VTBL struct IActiveScriptSiteVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IActiveScriptSite_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IActiveScriptSite_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IActiveScriptSite_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IActiveScriptSite_GetLCID(This,plcid)\ <br>    (This)-&gt;lpVtbl -&gt; GetLCID(This,plcid) <br> <br>#define IActiveScriptSite_GetItemInfo(This,pstrName,dwReturnMask,ppiunkItem,ppti)\ <br>    (This)-&gt;lpVtbl -&gt; GetItemInfo(This,pstrName,dwReturnMask,ppiunkItem,ppti) <br> <br>#define IActiveScriptSite_GetDocVersionString(This,pbstrVersion)\ <br>    (This)-&gt;lpVtbl -&gt; GetDocVersionString(This,pbstrVersion) <br> <br>#define IActiveScriptSite_OnScriptTerminate(This,pvarResult,pexcepinfo)\ <br>    (This)-&gt;lpVtbl -&gt; OnScriptTerminate(This,pvarResult,pexcepinfo) <br> <br>#define IActiveScriptSite_OnStateChange(This,ssScriptState)\ <br>    (This)-&gt;lpVtbl -&gt; OnStateChange(This,ssScriptState) <br> <br>#define IActiveScriptSite_OnScriptError(This,pscripterror)\ <br>    (This)-&gt;lpVtbl -&gt; OnScriptError(This,pscripterror) <br> <br>#define IActiveScriptSite_OnEnterScript(This)\ <br>    (This)-&gt;lpVtbl -&gt; OnEnterScript(This) <br> <br>#define IActiveScriptSite_OnLeaveScript(This)\ <br>    (This)-&gt;lpVtbl -&gt; OnLeaveScript(This) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IActiveScriptSite_GetLCID_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [out] */ LCID __RPC_FAR *plcid); <br> <br> <br>void __RPC_STUB IActiveScriptSite_GetLCID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_GetItemInfo_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [in] */ LPCOLESTR pstrName, <br>    /* [in] */ DWORD dwReturnMask, <br>    /* [out] */ IUnknown __RPC_FAR *__RPC_FAR *ppiunkItem, <br>    /* [out] */ ITypeInfo __RPC_FAR *__RPC_FAR *ppti); <br> <br> <br>void __RPC_STUB IActiveScriptSite_GetItemInfo_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_GetDocVersionString_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [out] */ BSTR __RPC_FAR *pbstrVersion); <br> <br> <br>void __RPC_STUB IActiveScriptSite_GetDocVersionString_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_OnScriptTerminate_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [in] */ const VARIANT __RPC_FAR *pvarResult, <br>    /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo); <br> <br> <br>void __RPC_STUB IActiveScriptSite_OnScriptTerminate_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_OnStateChange_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [in] */ SCRIPTSTATE ssScriptState); <br> <br> <br>void __RPC_STUB IActiveScriptSite_OnStateChange_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_OnScriptError_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This, <br>    /* [in] */ IActiveScriptError __RPC_FAR *pscripterror); <br> <br> <br>void __RPC_STUB IActiveScriptSite_OnScriptError_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_OnEnterScript_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IActiveScriptSite_OnEnterScript_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSite_OnLeaveScript_Proxy(  <br>    IActiveScriptSite __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IActiveScriptSite_OnLeaveScript_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IActiveScriptSite_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScriptError_INTERFACE_DEFINED__ <br>#define __IActiveScriptError_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IActiveScriptError <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IActiveScriptError; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IActiveScriptError : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall GetExceptionInfo(  <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo) = 0; <br>         <br>        virtual HRESULT __stdcall GetSourcePosition(  <br>            /* [out] */ DWORD __RPC_FAR *pdwSourceContext, <br>            /* [out] */ ULONG __RPC_FAR *pulLineNumber, <br>            /* [out] */ LONG __RPC_FAR *plCharacterPosition) = 0; <br>         <br>        virtual HRESULT __stdcall GetSourceLineText(  <br>            /* [out] */ BSTR __RPC_FAR *pbstrSourceLine) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IActiveScriptErrorVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IActiveScriptError __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IActiveScriptError __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IActiveScriptError __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetExceptionInfo )(  <br>            IActiveScriptError __RPC_FAR * This, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetSourcePosition )(  <br>            IActiveScriptError __RPC_FAR * This, <br>            /* [out] */ DWORD __RPC_FAR *pdwSourceContext, <br>            /* [out] */ ULONG __RPC_FAR *pulLineNumber, <br>            /* [out] */ LONG __RPC_FAR *plCharacterPosition); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetSourceLineText )(  <br>            IActiveScriptError __RPC_FAR * This, <br>            /* [out] */ BSTR __RPC_FAR *pbstrSourceLine); <br>         <br>    } IActiveScriptErrorVtbl; <br> <br>    interface IActiveScriptError <br>    { <br>        CONST_VTBL struct IActiveScriptErrorVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IActiveScriptError_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IActiveScriptError_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IActiveScriptError_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IActiveScriptError_GetExceptionInfo(This,pexcepinfo)\ <br>    (This)-&gt;lpVtbl -&gt; GetExceptionInfo(This,pexcepinfo) <br> <br>#define IActiveScriptError_GetSourcePosition(This,pdwSourceContext,pulLineNumber,plCharacterPosition)\ <br>    (This)-&gt;lpVtbl -&gt; GetSourcePosition(This,pdwSourceContext,pulLineNumber,plCharacterPosition) <br> <br>#define IActiveScriptError_GetSourceLineText(This,pbstrSourceLine)\ <br>    (This)-&gt;lpVtbl -&gt; GetSourceLineText(This,pbstrSourceLine) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IActiveScriptError_GetExceptionInfo_Proxy(  <br>    IActiveScriptError __RPC_FAR * This, <br>    /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br> <br> <br>void __RPC_STUB IActiveScriptError_GetExceptionInfo_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptError_GetSourcePosition_Proxy(  <br>    IActiveScriptError __RPC_FAR * This, <br>    /* [out] */ DWORD __RPC_FAR *pdwSourceContext, <br>    /* [out] */ ULONG __RPC_FAR *pulLineNumber, <br>    /* [out] */ LONG __RPC_FAR *plCharacterPosition); <br> <br> <br>void __RPC_STUB IActiveScriptError_GetSourcePosition_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptError_GetSourceLineText_Proxy(  <br>    IActiveScriptError __RPC_FAR * This, <br>    /* [out] */ BSTR __RPC_FAR *pbstrSourceLine); <br> <br> <br>void __RPC_STUB IActiveScriptError_GetSourceLineText_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IActiveScriptError_INTERFACE_DEFINED__ */ <br> <br> <br>#ifndef __IActiveScriptSiteWindow_INTERFACE_DEFINED__ <br>#define __IActiveScriptSiteWindow_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IActiveScriptSiteWindow <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IActiveScriptSiteWindow; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IActiveScriptSiteWindow : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall GetWindow(  <br>            /* [out] */ HWND __RPC_FAR *phwnd) = 0; <br>         <br>        virtual HRESULT __stdcall EnableModeless(  <br>            /* [in] */ BOOL fEnable) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IActiveScriptSiteWindowVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IActiveScriptSiteWindow __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IActiveScriptSiteWindow __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IActiveScriptSiteWindow __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetWindow )(  <br>            IActiveScriptSiteWindow __RPC_FAR * This, <br>            /* [out] */ HWND __RPC_FAR *phwnd); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *EnableModeless )(  <br>            IActiveScriptSiteWindow __RPC_FAR * This, <br>            /* [in] */ BOOL fEnable); <br>         <br>    } IActiveScriptSiteWindowVtbl; <br> <br>    interface IActiveScriptSiteWindow <br>    { <br>        CONST_VTBL struct IActiveScriptSiteWindowVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IActiveScriptSiteWindow_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IActiveScriptSiteWindow_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IActiveScriptSiteWindow_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IActiveScriptSiteWindow_GetWindow(This,phwnd)\ <br>    (This)-&gt;lpVtbl -&gt; GetWindow(This,phwnd) <br> <br>#define IActiveScriptSiteWindow_EnableModeless(This,fEnable)\ <br>    (This)-&gt;lpVtbl -&gt; EnableModeless(This,fEnable) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IActiveScriptSiteWindow_GetWindow_Proxy(  <br>    IActiveScriptSiteWindow __RPC_FAR * This, <br>    /* [out] */ HWND __RPC_FAR *phwnd); <br> <br> <br>void __RPC_STUB IActiveScriptSiteWindow_GetWindow_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptSiteWindow_EnableModeless_Proxy(  <br>    IActiveScriptSiteWindow __RPC_FAR * This, <br>    /* [in] */ BOOL fEnable); <br> <br> <br>void __RPC_STUB IActiveScriptSiteWindow_EnableModeless_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IActiveScriptSiteWindow_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0058 <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>typedef IActiveScriptSite *PIActiveScriptSite; <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0058_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0058_v0_0_s_ifspec; <br> <br>#ifndef __IActiveScript_INTERFACE_DEFINED__ <br>#define __IActiveScript_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IActiveScript <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IActiveScript; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IActiveScript : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall SetScriptSite(  <br>            /* [in] */ IActiveScriptSite __RPC_FAR *pass) = 0; <br>         <br>        virtual HRESULT __stdcall GetScriptSite(  <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject) = 0; <br>         <br>        virtual HRESULT __stdcall SetScriptState(  <br>            /* [in] */ SCRIPTSTATE ss) = 0; <br>         <br>        virtual HRESULT __stdcall GetScriptState(  <br>            /* [out] */ SCRIPTSTATE __RPC_FAR *pssState) = 0; <br>         <br>        virtual HRESULT __stdcall Close( void) = 0; <br>         <br>        virtual HRESULT __stdcall AddNamedItem(  <br>            /* [in] */ LPCOLESTR pstrName, <br>            /* [in] */ DWORD dwFlags) = 0; <br>         <br>        virtual HRESULT __stdcall AddTypeLib(  <br>            /* [in] */ REFGUID rguidTypeLib, <br>            /* [in] */ DWORD dwMajor, <br>            /* [in] */ DWORD dwMinor, <br>            /* [in] */ DWORD dwFlags) = 0; <br>         <br>        virtual HRESULT __stdcall GetScriptDispatch(  <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppdisp) = 0; <br>         <br>        virtual HRESULT __stdcall GetCurrentScriptThreadID(  <br>            /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread) = 0; <br>         <br>        virtual HRESULT __stdcall GetScriptThreadID(  <br>            /* [in] */ DWORD dwWin32ThreadId, <br>            /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread) = 0; <br>         <br>        virtual HRESULT __stdcall GetScriptThreadState(  <br>            /* [in] */ SCRIPTTHREADID stidThread, <br>            /* [out] */ SCRIPTTHREADSTATE __RPC_FAR *pstsState) = 0; <br>         <br>        virtual HRESULT __stdcall InterruptScriptThread(  <br>            /* [in] */ SCRIPTTHREADID stidThread, <br>            /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo, <br>            /* [in] */ DWORD dwFlags) = 0; <br>         <br>        virtual HRESULT __stdcall Clone(  <br>            /* [out] */ IActiveScript __RPC_FAR *__RPC_FAR *ppscript) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IActiveScriptVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IActiveScript __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IActiveScript __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *SetScriptSite )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ IActiveScriptSite __RPC_FAR *pass); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetScriptSite )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *SetScriptState )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ SCRIPTSTATE ss); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetScriptState )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [out] */ SCRIPTSTATE __RPC_FAR *pssState); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Close )(  <br>            IActiveScript __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *AddNamedItem )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ LPCOLESTR pstrName, <br>            /* [in] */ DWORD dwFlags); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *AddTypeLib )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ REFGUID rguidTypeLib, <br>            /* [in] */ DWORD dwMajor, <br>            /* [in] */ DWORD dwMinor, <br>            /* [in] */ DWORD dwFlags); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetScriptDispatch )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppdisp); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetCurrentScriptThreadID )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetScriptThreadID )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ DWORD dwWin32ThreadId, <br>            /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *GetScriptThreadState )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ SCRIPTTHREADID stidThread, <br>            /* [out] */ SCRIPTTHREADSTATE __RPC_FAR *pstsState); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *InterruptScriptThread )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [in] */ SCRIPTTHREADID stidThread, <br>            /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo, <br>            /* [in] */ DWORD dwFlags); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *Clone )(  <br>            IActiveScript __RPC_FAR * This, <br>            /* [out] */ IActiveScript __RPC_FAR *__RPC_FAR *ppscript); <br>         <br>    } IActiveScriptVtbl; <br> <br>    interface IActiveScript <br>    { <br>        CONST_VTBL struct IActiveScriptVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IActiveScript_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IActiveScript_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IActiveScript_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IActiveScript_SetScriptSite(This,pass)\ <br>    (This)-&gt;lpVtbl -&gt; SetScriptSite(This,pass) <br> <br>#define IActiveScript_GetScriptSite(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; GetScriptSite(This,riid,ppvObject) <br> <br>#define IActiveScript_SetScriptState(This,ss)\ <br>    (This)-&gt;lpVtbl -&gt; SetScriptState(This,ss) <br> <br>#define IActiveScript_GetScriptState(This,pssState)\ <br>    (This)-&gt;lpVtbl -&gt; GetScriptState(This,pssState) <br> <br>#define IActiveScript_Close(This)\ <br>    (This)-&gt;lpVtbl -&gt; Close(This) </code></pre>
<p>
</p>
<pre><code><br>#define IActiveScript_AddNamedItem(This,pstrName,dwFlags)\ <br>    (This)-&gt;lpVtbl -&gt; AddNamedItem(This,pstrName,dwFlags) <br> <br>#define IActiveScript_AddTypeLib(This,rguidTypeLib,dwMajor,dwMinor,dwFlags)\ <br>    (This)-&gt;lpVtbl -&gt; AddTypeLib(This,rguidTypeLib,dwMajor,dwMinor,dwFlags) <br> <br>#define IActiveScript_GetScriptDispatch(This,pstrItemName,ppdisp)\ <br>    (This)-&gt;lpVtbl -&gt; GetScriptDispatch(This,pstrItemName,ppdisp) <br> <br>#define IActiveScript_GetCurrentScriptThreadID(This,pstidThread)\ <br>    (This)-&gt;lpVtbl -&gt; GetCurrentScriptThreadID(This,pstidThread) <br> <br>#define IActiveScript_GetScriptThreadID(This,dwWin32ThreadId,pstidThread)\ <br>    (This)-&gt;lpVtbl -&gt; GetScriptThreadID(This,dwWin32ThreadId,pstidThread) <br> <br>#define IActiveScript_GetScriptThreadState(This,stidThread,pstsState)\ <br>    (This)-&gt;lpVtbl -&gt; GetScriptThreadState(This,stidThread,pstsState) <br> <br>#define IActiveScript_InterruptScriptThread(This,stidThread,pexcepinfo,dwFlags)\ <br>    (This)-&gt;lpVtbl -&gt; InterruptScriptThread(This,stidThread,pexcepinfo,dwFlags) <br> <br>#define IActiveScript_Clone(This,ppscript)\ <br>    (This)-&gt;lpVtbl -&gt; Clone(This,ppscript) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IActiveScript_SetScriptSite_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ IActiveScriptSite __RPC_FAR *pass); <br> <br> <br>void __RPC_STUB IActiveScript_SetScriptSite_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetScriptSite_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ REFIID riid, <br>    /* [iid_is][out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br> <br> <br>void __RPC_STUB IActiveScript_GetScriptSite_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_SetScriptState_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ SCRIPTSTATE ss); <br> <br> <br>void __RPC_STUB IActiveScript_SetScriptState_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetScriptState_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [out] */ SCRIPTSTATE __RPC_FAR *pssState); <br> <br> <br>void __RPC_STUB IActiveScript_GetScriptState_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_Close_Proxy(  <br>    IActiveScript __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IActiveScript_Close_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_AddNamedItem_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ LPCOLESTR pstrName, <br>    /* [in] */ DWORD dwFlags); <br> <br> <br>void __RPC_STUB IActiveScript_AddNamedItem_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_AddTypeLib_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ REFGUID rguidTypeLib, <br>    /* [in] */ DWORD dwMajor, <br>    /* [in] */ DWORD dwMinor, <br>    /* [in] */ DWORD dwFlags); <br> <br> <br>void __RPC_STUB IActiveScript_AddTypeLib_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetScriptDispatch_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ LPCOLESTR pstrItemName, <br>    /* [out] */ IDispatch __RPC_FAR *__RPC_FAR *ppdisp); <br> <br> <br>void __RPC_STUB IActiveScript_GetScriptDispatch_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetCurrentScriptThreadID_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread); <br> <br> <br>void __RPC_STUB IActiveScript_GetCurrentScriptThreadID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetScriptThreadID_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ DWORD dwWin32ThreadId, <br>    /* [out] */ SCRIPTTHREADID __RPC_FAR *pstidThread); <br> <br> <br>void __RPC_STUB IActiveScript_GetScriptThreadID_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_GetScriptThreadState_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ SCRIPTTHREADID stidThread, <br>    /* [out] */ SCRIPTTHREADSTATE __RPC_FAR *pstsState); <br> <br> <br>void __RPC_STUB IActiveScript_GetScriptThreadState_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_InterruptScriptThread_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [in] */ SCRIPTTHREADID stidThread, <br>    /* [in] */ const EXCEPINFO __RPC_FAR *pexcepinfo, <br>    /* [in] */ DWORD dwFlags); <br> <br> <br>void __RPC_STUB IActiveScript_InterruptScriptThread_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScript_Clone_Proxy(  <br>    IActiveScript __RPC_FAR * This, <br>    /* [out] */ IActiveScript __RPC_FAR *__RPC_FAR *ppscript); <br> <br> <br>void __RPC_STUB IActiveScript_Clone_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IActiveScript_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0059 <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [local] */  <br> <br> <br>typedef IActiveScript *PIActiveScript; <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0059_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0059_v0_0_s_ifspec; <br> <br>#ifndef __IActiveScriptParse_INTERFACE_DEFINED__ <br>#define __IActiveScriptParse_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: IActiveScriptParse <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [unique][uuid][object] */  <br> <br> <br> <br>EXTERN_C const IID IID_IActiveScriptParse; <br> <br>#if defined(__cplusplus) &amp;&amp; !defined(CINTERFACE) <br>     <br>    interface IActiveScriptParse : public IUnknown <br>    { <br>    public: <br>        virtual HRESULT __stdcall InitNew( void) = 0; <br>         <br>        virtual HRESULT __stdcall AddScriptlet(  <br>            /* [in] */ LPCOLESTR pstrDefaultName, <br>            /* [in] */ LPCOLESTR pstrCode, <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [in] */ LPCOLESTR pstrSubItemName, <br>            /* [in] */ LPCOLESTR pstrEventName, <br>            /* [in] */ LPCOLESTR pstrDelimiter, <br>            /* [in] */ DWORD dwSourceContextCookie, <br>            /* [in] */ ULONG ulStartingLineNumber, <br>            /* [in] */ DWORD dwFlags, <br>            /* [out] */ BSTR __RPC_FAR *pbstrName, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo) = 0; <br>         <br>        virtual HRESULT __stdcall ParseScriptText(  <br>            /* [in] */ LPCOLESTR pstrCode, <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [in] */ IUnknown __RPC_FAR *punkContext, <br>            /* [in] */ LPCOLESTR pstrDelimiter, <br>            /* [in] */ DWORD dwSourceContextCookie, <br>            /* [in] */ ULONG ulStartingLineNumber, <br>            /* [in] */ DWORD dwFlags, <br>            /* [out] */ VARIANT __RPC_FAR *pvarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo) = 0; <br>         <br>    }; <br>     <br>#else /* C style interface */ <br> <br>    typedef struct IActiveScriptParseVtbl <br>    { <br>         <br>        HRESULT ( __stdcall __RPC_FAR *QueryInterface )(  <br>            IActiveScriptParse __RPC_FAR * This, <br>            /* [in] */ REFIID riid, <br>            /* [out] */ void __RPC_FAR *__RPC_FAR *ppvObject); <br>         <br>        ULONG ( __stdcall __RPC_FAR *AddRef )(  <br>            IActiveScriptParse __RPC_FAR * This); <br>         <br>        ULONG ( __stdcall __RPC_FAR *Release )(  <br>            IActiveScriptParse __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *InitNew )(  <br>            IActiveScriptParse __RPC_FAR * This); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *AddScriptlet )(  <br>            IActiveScriptParse __RPC_FAR * This, <br>            /* [in] */ LPCOLESTR pstrDefaultName, <br>            /* [in] */ LPCOLESTR pstrCode, <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [in] */ LPCOLESTR pstrSubItemName, <br>            /* [in] */ LPCOLESTR pstrEventName, <br>            /* [in] */ LPCOLESTR pstrDelimiter, <br>            /* [in] */ DWORD dwSourceContextCookie, <br>            /* [in] */ ULONG ulStartingLineNumber, <br>            /* [in] */ DWORD dwFlags, <br>            /* [out] */ BSTR __RPC_FAR *pbstrName, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br>         <br>        HRESULT ( __stdcall __RPC_FAR *ParseScriptText )(  <br>            IActiveScriptParse __RPC_FAR * This, <br>            /* [in] */ LPCOLESTR pstrCode, <br>            /* [in] */ LPCOLESTR pstrItemName, <br>            /* [in] */ IUnknown __RPC_FAR *punkContext, <br>            /* [in] */ LPCOLESTR pstrDelimiter, <br>            /* [in] */ DWORD dwSourceContextCookie, <br>            /* [in] */ ULONG ulStartingLineNumber, <br>            /* [in] */ DWORD dwFlags, <br>            /* [out] */ VARIANT __RPC_FAR *pvarResult, <br>            /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br>         <br>    } IActiveScriptParseVtbl; <br> <br>    interface IActiveScriptParse <br>    { <br>        CONST_VTBL struct IActiveScriptParseVtbl __RPC_FAR *lpVtbl; <br>    }; <br> <br>     <br> <br>#ifdef COBJMACROS <br> <br> <br>#define IActiveScriptParse_QueryInterface(This,riid,ppvObject)\ <br>    (This)-&gt;lpVtbl -&gt; QueryInterface(This,riid,ppvObject) <br> <br>#define IActiveScriptParse_AddRef(This)\ <br>    (This)-&gt;lpVtbl -&gt; AddRef(This) <br> <br>#define IActiveScriptParse_Release(This)\ <br>    (This)-&gt;lpVtbl -&gt; Release(This) <br> <br> <br>#define IActiveScriptParse_InitNew(This)\ <br>    (This)-&gt;lpVtbl -&gt; InitNew(This) <br> <br>#define IActiveScriptParse_AddScriptlet(This,pstrDefaultName,pstrCode,pstrItemName,pstrSubItemName,pstrEventName,pstrDelimiter,dwSourceContextCookie,ulStartingLineNumber,dwFlags,pbstrName,pexcepinfo)\ <br>    (This)-&gt;lpVtbl -&gt; AddScriptlet(This,pstrDefaultName,pstrCode,pstrItemName,pstrSubItemName,pstrEventName,pstrDelimiter,dwSourceContextCookie,ulStartingLineNumber,dwFlags,pbstrName,pexcepinfo) <br> <br>#define IActiveScriptParse_ParseScriptText(This,pstrCode,pstrItemName,punkContext,pstrDelimiter,dwSourceContextCookie,ulStartingLineNumber,dwFlags,pvarResult,pexcepinfo)\ <br>    (This)-&gt;lpVtbl -&gt; ParseScriptText(This,pstrCode,pstrItemName,punkContext,pstrDelimiter,dwSourceContextCookie,ulStartingLineNumber,dwFlags,pvarResult,pexcepinfo) <br> <br>#endif /* COBJMACROS */ <br> <br> <br>#endif /* C style interface */ <br> <br> <br> <br>HRESULT __stdcall IActiveScriptParse_InitNew_Proxy(  <br>    IActiveScriptParse __RPC_FAR * This); <br> <br> <br>void __RPC_STUB IActiveScriptParse_InitNew_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptParse_AddScriptlet_Proxy(  <br>    IActiveScriptParse __RPC_FAR * This, <br>    /* [in] */ LPCOLESTR pstrDefaultName, <br>    /* [in] */ LPCOLESTR pstrCode, <br>    /* [in] */ LPCOLESTR pstrItemName, <br>    /* [in] */ LPCOLESTR pstrSubItemName, <br>    /* [in] */ LPCOLESTR pstrEventName, <br>    /* [in] */ LPCOLESTR pstrDelimiter, <br>    /* [in] */ DWORD dwSourceContextCookie, <br>    /* [in] */ ULONG ulStartingLineNumber, <br>    /* [in] */ DWORD dwFlags, <br>    /* [out] */ BSTR __RPC_FAR *pbstrName, <br>    /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br> <br> <br>void __RPC_STUB IActiveScriptParse_AddScriptlet_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br>HRESULT __stdcall IActiveScriptParse_ParseScriptText_Proxy(  <br>    IActiveScriptParse __RPC_FAR * This, <br>    /* [in] */ LPCOLESTR pstrCode, <br>    /* [in] */ LPCOLESTR pstrItemName, <br>    /* [in] */ IUnknown __RPC_FAR *punkContext, <br>    /* [in] */ LPCOLESTR pstrDelimiter, <br>    /* [in] */ DWORD dwSourceContextCookie, <br>    /* [in] */ ULONG ulStartingLineNumber, <br>    /* [in] */ DWORD dwFlags, <br>    /* [out] */ VARIANT __RPC_FAR *pvarResult, <br>    /* [out] */ EXCEPINFO __RPC_FAR *pexcepinfo); <br> <br> <br>void __RPC_STUB IActiveScriptParse_ParseScriptText_Stub( <br>    IRpcStubBuffer *This, <br>    IRpcChannelBuffer *_pRpcChannelBuffer, <br>    PRPC_MESSAGE _pRpcMessage, <br>    DWORD *_pdwStubPhase); <br> <br> <br> <br>#endif /* __IActiveScriptParse_INTERFACE_DEFINED__ */ <br> <br> <br>/**************************************** <br> * Generated header for interface: __MIDL__intf_0060 <br> * at Fri May 03 18:25:03 1996 <br> * using MIDL 2.00.0101 <br> ****************************************/ <br>/* [local] */  <br> <br> <br> <br>typedef IActiveScriptParse *PIActiveScriptParse; <br> <br>#endif  // __ActivScp_h <br> <br> <br> <br>extern RPC_IF_HANDLE __MIDL__intf_0060_v0_0_c_ifspec; <br>extern RPC_IF_HANDLE __MIDL__intf_0060_v0_0_s_ifspec; <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br> <br>void __RPC_USER HWND_to_xmit( HWND __RPC_FAR *, long  __RPC_FAR * __RPC_FAR * ); <br>void __RPC_USER HWND_from_xmit( long  __RPC_FAR *, HWND __RPC_FAR * ); <br>void __RPC_USER HWND_free_inst( HWND __RPC_FAR * ); <br>void __RPC_USER HWND_free_xmit( long  __RPC_FAR * ); <br> <br>void __RPC_USER EXCEPINFO_to_xmit( EXCEPINFO __RPC_FAR *, RemEXCEPINFO  __RPC_FAR * __RPC_FAR * ); <br>void __RPC_USER EXCEPINFO_from_xmit( RemEXCEPINFO  __RPC_FAR *, EXCEPINFO __RPC_FAR * ); <br>void __RPC_USER EXCEPINFO_free_inst( EXCEPINFO __RPC_FAR * ); <br>void __RPC_USER EXCEPINFO_free_xmit( RemEXCEPINFO  __RPC_FAR * ); <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
