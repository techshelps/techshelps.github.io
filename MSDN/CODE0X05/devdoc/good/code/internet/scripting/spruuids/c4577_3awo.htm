<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>APP.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context4578"></a>APP.H</h2>
<pre><code>//--------------------------------------------------------------------------- <br>// App.h <br>//--------------------------------------------------------------------------- <br>// Sample spr program <br>//--------------------------------------------------------------------------- <br>// (C) Copyright 1992-1997 by Microsoft Corporation.  All rights reserved. <br>// <br>// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF  <br>// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO  <br>// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A  <br>// PARTICULAR PURPOSE. <br>//--------------------------------------------------------------------------- <br> <br> <br>//--------------------------------------------------------------------------- <br>// Globals <br>//--------------------------------------------------------------------------- <br>extern class CApp *g_papp; <br>extern char       *g_pszCodeFile; <br>extern char       *g_pszRecFile; <br>extern int         g_mode; <br> <br>#define MODE_NORMAL     0 <br>#define MODE_PLAYBACK   1 <br>#define MODE_RECORD     2 <br> <br> <br>//--------------------------------------------------------------------------- <br>// Events on client of App <br>//--------------------------------------------------------------------------- <br>BOOL    AppEvt_Pause(int pause); <br>BOOL    AppEvt_FQueryTerminate(BOOL fPromptUser); <br>void    AppEvt_NewGame(); <br>BOOL    AppEvt_DlgProc(  HWND hwnd, UINT msg, WPARAM wp, LPARAM lp); <br>LRESULT AppEvt_PSWndProc(HWND hwnd, UINT msg, WPARAM wp, LPARAM lp); <br> <br> <br>//--------------------------------------------------------------------------- <br>// App class <br>//--------------------------------------------------------------------------- <br>class CApp : public ISpruuidsApp, public IOleComponent, public COleAuto <br>  { <br>public: <br>  // *** Constructor / Descructor *** <br>  static HRESULT CreateApp(HINSTANCE hinst); <br>  CApp(HINSTANCE hinst); <br>  ~CApp(); <br> <br>  // *** IUnknown methods *** <br>  STDMETHOD(QueryInterface)(REFIID riid, void** ppvObj); <br>  STDMETHOD_(ULONG, AddRef)(void); <br>  STDMETHOD_(ULONG, Release)(void); <br>  inline IUnknown  *GetUnknown(void)  {return (ISpruuidsApp *)this;}; <br>  inline IDispatch *GetDispatch(void) {return (ISpruuidsApp *)this;}; <br> <br>  // *** IDispatch methods *** <br>  DECLARE_STANDARD_DISPATCH(); <br>  // Overrides required by COleAuto: <br>  virtual ITypeInfo **GetTinfoClsAddr(void) { return &amp;m_ptinfoCls; }; <br>  virtual ITypeInfo **GetTinfoIntAddr(void) { return &amp;m_ptinfoInt; }; <br>  virtual HRESULT GetTypeLibInfo(HINSTANCE *phinstOut, const GUID **pplibidOut,  <br>                                 SHORT *pwMajLibOut, SHORT *pwMinLibOut, <br>                                 const CLSID **ppclsidOut, const IID **ppiidOut, <br>                                 ITypeLib ***ppptlOut); <br>  virtual IDispatch *GetPrimary() {return this-&gt;GetDispatch(); }; <br> <br>  // *** SpruuidsApp methods **** <br>  STDMETHOD(get_Application)(ISpruuidsApp** lppaReturn); <br>  STDMETHOD(get_Parent)(ISpruuidsApp** lppaReturn); <br>  STDMETHOD(Quit)(void); <br>  STDMETHOD(get_Game)(IGame** lppaReturn); <br> <br>  // *** IComponent methods *** <br>  STDMETHOD_(BOOL, FPreTranslateMessage)(MSG* pMsg); <br>  STDMETHOD_(void, OnEnterState)(ULONG uStateID, BOOL fEnter); <br>  STDMETHOD_(void, OnAppActivate)(BOOL fActive, DWORD dwOtherThreadID); <br>  STDMETHOD_(void, OnLoseActivation)(void); <br>  STDMETHOD_(BOOL, FDoIdle)(DWORD grfidlef); <br>  STDMETHOD_(BOOL, FContinueMessageLoop)(ULONG uReason, void* pvLoopData); <br>  STDMETHOD_(BOOL, FQueryTerminate)(BOOL fPromptUser); <br>  STDMETHOD_(void, Terminate)(void); <br> <br>  // *** Public methods *** <br>  HRESULT MainMsgLoop(void); <br>  HRESULT LoadGame(void); <br>  void    CloseGame(void); <br>  void    CausePause(int p); <br>  HRESULT CheckTypeInfo(UINT itinfo); <br>  HRESULT Playback(void); <br> <br>  // *** Public member variables *** <br>  class CMsgLoop *m_pmsgloop; <br>  class CGame    *m_pgame; <br>  HWND       m_hwndDlg; <br>  HWND       m_hwndPS; <br>  HWND       m_hwndStat; <br>  HWND       m_hwndAbout; <br>  HINSTANCE  m_hinst; <br>  DWORD      m_idcomp; <br>  BOOL       m_fRegisteredComp; <br>  ULONG      m_cmodal; <br>  BOOL       m_fQuit; <br>  ULONG      m_cref; <br>  ITypeInfo *m_ptinfoCls;   // This OLE Automation object's coclass   TypeInfo <br>  ITypeInfo *m_ptinfoInt;   // This OLE Automation object's interface TypeInfo <br> <br>  // DEBUG info <br>  static HRESULT s_hr; <br>  #define SIG_App 'App ' <br>  DECLARE_SIGNATURE(SIG_App); <br>  }; <br> <br>//--- EOF ------------------------------------------------------------------- </code></pre>
<p>&nbsp;</p></body>
</HTML>
