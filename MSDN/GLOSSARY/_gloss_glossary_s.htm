<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary S</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_s"></a><sup></sup>Glossary S</h1>

<h3><a name="_gloss_sampling_frequency"></a>sampling frequency</h3>
<p>
Or sampling rate. The rate at which samples of a physical variable, such as sound, are taken. The more samples taken per unit, the more closely the reconstructed result resembles the original.</p>

<h3><a name="_gloss_scalable_font"></a>scalable font</h3>
<p>
Any font that is defined by mathematical routines that can reproduce the outlines of each character at any size. Macintosh System 7, vector, PostScript, and TrueType fonts are all scalable; raster (bitmap) fonts are not.</p>

<h3><a name="_gloss_scalar_type"></a>scalar type</h3>
<p>
Or scalar data type. A data type that has a predictable and enumerable sequence of values that can be compared for greater-than/less-than relationships. In Visual C++, all arithmetic types, plus pointers, are considered scalar types. See also aggregate type.</p>

<h3><a name="_gloss_scaled_index_base_indirect_operand"></a>scaled index base indirect operand</h3>
<p>
In Intel 80386-80486 assembly language, the second encoding byte of an extended memory operand.</p>

<h3><a name="_gloss_scaling"></a>scaling</h3>
<p>
A transformation that alters the apparent size of an object.</p>

<h3><a name="_gloss_scan_code"></a>scan code</h3>
<p>
A device-dependent identifier that uniquely identifies each key on a keyboard. A keyboard generates two scan codes when the user types a key — one when the user presses the key and another when the user releases the key. See also virtual key code.</p>

<h3><a name="_gloss_scan_line"></a>scan line</h3>
<ol>
<li>
On a television or raster-scan computer monitor, one of the horizontal lines on the inner surface of the screen that is traced by the electron beam to form an image.<br><br></li>
<li>
A row of pixels read by any scanning device, such as a full-page scanner or a fax machine.</li>
</ol>

<h3><a name="_gloss_schema"></a>schema</h3>
<p>
A description of the current structure of tables and views in a data source. The schema describes what columns are in each table, the data type of each column, and the relationships between tables. See also referential integrity.</p>

<h3><a name="_gloss_schema_number"></a>schema number</h3>
<p>
In MFC serialization, the "version" of a class implementation, assigned to a class when the <b>IMPLEMENT_SERIAL</b> macro of the class is encountered. The schema number refers to the implementation of the class, not to the number of times a given object has been made persistent (usually referred to as the "object version"). Do not confuse this schema number with database terminology.</p>

<h3><a name="_gloss_scope"></a>scope</h3>
<p>
In programming, the extent to which a given identifier (constant, variable, data type, routine) can be referenced within a program.&nbsp; See also class scope, file scope, function scope, function-prototype scope, local scope.</p>

<h3><a name="_gloss_scope.2d.resolution_.283a3a29_.operator"></a>scope-resolution (::) operator</h3>
<p>
In C++, the operator with highest precedence, used to define the scope of the operand. The unary form of the operator, <code>::foo( )</code>, is used to uncover or access a name that is at global scope and has been hidden by local or class scope. The binary form, <code>Bar::foo( )</code>, is used to disambiguate names that are reused within classes, structures, or unions.</p>

<h3><a name="_gloss_screen_coordinates"></a>screen coordinates</h3>
<p>
A means of specifying the position of a point on the display screen in terms of vertical (y-coordinate) and horizontal (x-coordinate) displacement from the upper-left corner of the screen (origin). The position and size of a window can be described by one set of coordinates (x, y) that marks the point defining the upper-left corner of the window, and another set of coordinates (x', y') that marks the point defining the lower-right corner of the window.</p>

<h3><a name="_gloss_script_file"></a>script file</h3>
<p>
A type of program that consists of a set of instructions to an application or utility program. The instructions in a script are usually expressed using the application's or utility's rules and syntax, combined with simple control structures such as loops and <b>if</b>-<b>then</b> expressions. A resource-definition file and a batch (.BAT) file are two examples of script files.</p>

<h3><a name="_gloss_scroll.2d.bar_code"></a>scroll-bar code</h3>
<p>
A 2-byte value that indicates the user's scrolling request. For example, the constant SB_LEFT indicates a request to scroll to the far left and the constant SB_PAGELEFT indicates a request to scroll one page to the left.</p>

<h3><a name="_gloss_scroll.2d.bar_control"></a>scroll-bar control</h3>
<p>
A control window that belongs to the SCROLLBAR window class. A scroll-bar control appears and functions like a standard scroll bar, but it is a separate window that receives direct input focus, indicated by a flashing caret displayed in the scroll box. Unlike a standard scroll bar, a scroll-bar control also has a built-in keyboard interface that enables the user to direct scrolling. See also standard scroll bar.</p>

<h3><a name="_gloss_scrolling"></a>scrolling</h3>
<p>
The process of moving a document in a window to permit viewing of any desired portion.</p>

<h3><a name="_gloss_scrolling_range"></a>scrolling range</h3>
<p>
The minimum and maximum values that a scroll bar can report.</p>

<h3><a name="_gloss_sdi"></a>SDI</h3>
<p>
A user interface architecture that allows a user to work with just one document at a time. Windows Notepad is an example of an SDI application. See also multiple document interface (MDI).</p>

<h3><a name="_gloss_sdk"></a>SDK</h3>
<p>
A set of libraries, header files, tools, books, on-line help and sample programs designed to help a developer create software.</p>

<h3><a name="_gloss_sector"></a>sector</h3>
<p>
On a disk, the smallest contiguous physical unit for recording information. Multiple sectors make up a track.</p>

<h3><a name="_gloss_secure_sockets_layer"></a>Secure Sockets Layer</h3>
<p>
A protocol for providing data security layered between its service protocols (HTTP) and TCP/IP.</p>

<h3><a name="_gloss_security_attribute"></a>security attribute</h3>
<p>
A characteristic of a file or object that regulates its access and privileges by users or other objects. See also access token.</p>

<h3><a name="_gloss_security_descriptor"></a>security descriptor</h3>
<p>
Contains the security information associated with an object. The information in security descriptors can include an owner, a primary group, a discretionary access-control list, and a system access-control list. This information is stored in the form of security identifiers (SIDs) and access-control lists (ACLs).</p>

<h3><a name="_gloss_security_identifier"></a>security identifier</h3>
<p>
A structure of variable length that uniquely identifies a user or group on all Windows NT implementations. See also access token, impersonation token, primary token, privilege.</p>

<h3><a name="_gloss_security_policy"></a>security policy</h3>
<p>
The set of laws, rules, and practices that regulates how an organization manages, protects, and distributes sensitive information.</p>

<h3><a name="_gloss_seh"></a>SEH</h3>
<p>
A mechanism for handling hardware- and software-generated exceptions that gives developers complete control over the handling of exceptions, provides support for debuggers, and is usable across all programming languages and computers. See also C++ exception handling.</p>

<h3><a name="_gloss_selection_statement"></a>selection statement</h3>
<p>
A statement that provides a means to conditionally execute sections of code. The <b>if</b> and <b>switch</b> statements are C/C++ selection statements.</p>

<h3><a name="_gloss_semantics"></a>semantics</h3>
<p>
The relationships between words or symbols and their intended meanings, or the rules governing these relationships. See also syntax.</p>

<h3><a name="_gloss_semaphore"></a>semaphore</h3>
<ol>
<li>
In Win32, a synchronization object that maintains a count between zero and a specified maximum value. A semaphore's state is signaled when its count is greater than zero and nonsignaled when its count is zero. The semaphore object is useful in controlling a shared resource that can support a limited number of users. It acts like a gate that counts the threads as they enter and exit a controlled area and that limits the number of threads sharing the resource to a specified maximum number.<br><br></li>
<li>
More generally, a flag variable used to govern concurrent processes that share system resources.</li>
</ol>

<h3><a name="_gloss_separator"></a>separator</h3>
<ol>
<li>
In Windows, a special type of menu item that appears as a horizontal line. A separator can be used in a pop-up menu to divide a menu into groups of related items.<br><br></li>
<li>
Or separator code. A Unicode value used to indicate line breaks (0x2028) or paragraph breaks (0x2029).<br><br></li>
<li>
More generally, a keyword, character, or white space used to separate components of a name, a number, or a group of fields. For example, the decimal point (.) in 123.456 and the backslash (\)&nbsp; in ROOT\SUBDIR are separators.</li>
</ol>

<h3><a name="_gloss_serial_line_internet_protocol"></a>Serial Line Internet Protocol</h3>
<p>
A protocol for connecting to the Internet via a dial-up connection, such as with a modem.</p>

<h3><a name="_gloss_serial_port"></a>serial port</h3>
<p>
An electrical connection to a computer through which data is transmitted in series, one bit after another.</p>

<h3><a name="_gloss_serial_transport_layer"></a>serial transport layer</h3>
<p>
A data transport link established by connecting the serial ports of two machines. For example, a serial transport layer is established when an Apple Macintosh and a Win32 host are connected through their serial ports.</p>

<h3><a name="_gloss_serialization"></a>serialization</h3>
<ol>
<li>
Or object persistence. In MFC, the process of writing or reading an object to or from a persistent storage medium, such as a disk file. The basic idea of serialization is that an object should be able to write its current state, usually indicated by the value of its member variables, to persistent storage. Later, the object can be re-created by reading, or deserializing, the object's state from storage.<br><br></li>
<li>
In RPC, the process of marshaling data to and unmarshaling data from buffers that you control, in contrast to traditional RPC usage, where the stubs and the RPC runtime control the marshaling buffers.<br><br></li>
<li>
Regarding procedures, use of MIDL-generated serialization stub to encode and decode one or more types with a single procedure call. Procedure serialization is accomplished by applying the encode and decode attributes to a function prototype in the ACF file.<br><br></li>
<li>
Regarding types, use of MIDL-generated routines to size, encode, and decode objects of a specified type. The client application calls these routines to serialize the data. Type serialization is accomplished by applying the encode and decode attributes to a single data type, or to an interface, in the ACF file.</li>
</ol>

<h3><a name="_gloss_serif"></a>serif</h3>
<p>
Any of the short lines or ornaments at the ends of the strokes that form a character in a typeface.</p>

<h3><a name="_gloss_server"></a>server</h3>
<ol>
<li>
In a network, any device that can be shared by all users.<br><br></li>
<li>
An application or a process that responds to a client request. See also client/server.</li>
</ol>

<h3><a name="_gloss_server_application"></a>server application</h3>
<p>
An application that can create OLE items for use by container applications. Data in a server application can usually be copied, using the Clipboard or a drag-and-drop procedure, so that a container application can paste the data as an embedded or linked item. An application can be both a container and a server. See also container application, mini-server application.</p>

<h3><a name="_gloss_server_document"></a>server document</h3>
<p>
In OLE, a document created by a server application. See also compound document.</p>

<h3><a name="_gloss_server_item"></a>server item</h3>
<p>
An object that provides an interface between an OLE item and the server application and that is of a class derived from the MFC class <b>COleServerItem</b>. Server items, which are created and maintained by the server application, can be either linked or embedded. For linked items, the server item provides access to the data source, often in a different file. For embedded items, the server item handles the data stored in the container document and creates the server document. Server items also generate presentation data and handle the verbs (commands) associated with the OLE item.</p>

<h3><a name="_gloss_server_object"></a>server object</h3>
<p>
An object that responds to a request for a service. A given object may be a client for some requests and a server for other requests. See also client object.</p>

<h3><a name="_gloss_service"></a>service</h3>
<p>
In Win32, an executable object that is installed in a registry database maintained by the Service Control Manager. The executable file associated with a service can be started at boot time by a boot program or by the system, or it can be started on demand by the Service Control Manager. The two types of service are "Win32 service" and "driver service."</p>

<h3><a name="_gloss_session"></a>session</h3>
<ol>
<li>
In a Windows NT client/server network, a link between a workstation and a server. The session is established the first time a workstation makes a connection with a shared resource on the server and ends when all current connections between the workstation and the server are deleted.<br><br></li>
<li>
In the ISO/OSI communications model, the protocol layer that provides a way for users to establish connections and transport data across those connections. See also transport layer.<br><br></li>
<li>
More generally, the time during which two computers (or a computer and a terminal) maintain a connection, or the connection itself.</li>
</ol>

<h3><a name="_gloss_sgml"></a>SGML</h3>
<p>
A set of rules and tags to mark the structure and content of a document, independent of the display medium.</p>

<h3><a name="_gloss_shared_component"></a>shared component</h3>
<p>
A C++ Component Gallery component that has been exported to a file so it can be shared. The resulting file contains classes and resources for the component.</p>

<h3><a name="_gloss_shared_library"></a>shared library</h3>
<p>
In general, any code module that can be accessed and used by many programs. Shared libraries are used primarily for sharing common code between different executable files or for breaking an application into separate components, thus allowing easy upgrades. In the Visual C++ documentation, "shared library" usually refers to a code module that is an Apple Shared Library Manager (ASLM) file for the Apple Macintosh. In Windows, shared libraries are usually referred to as dynamic-link libraries (DLLs).</p>

<h3><a name="_gloss_shared_memory"></a>shared memory</h3>
<p>
Memory accessed by more than one process or thread in a multitasking environment. Processes or threads using this memory operate under a set of rules that prevent them from modifying the same addresses simultaneously.</p>

<h3><a name="_gloss_shared_resource"></a>shared resource</h3>
<ol>
<li>
In a&nbsp; Windows NT client/server network, any local resource on the server that is made available to network users, such as directories, files, printers, or named pipes.<br><br></li>
<li>
More generally, any device, data, or program that is used by more than one device, program, process, or thread.</li>
</ol>

<h3><a name="_gloss_sharing_mode"></a>sharing mode</h3>
<p>
A file opening mode that determines what, if any, read and write operations will be allowed when the file is being shared. See also shared resource, sharing violation.</p>

<h3><a name="_gloss_sharing_violation"></a>sharing violation</h3>
<p>
An error that occurs when one process (or machine) attempts to access a file after a different process has requested that the server block access to the file. If an application opens the file in compatibility mode, a sharing violation results in a critical error. See also sharing mode.</p>

<h3><a name="_gloss_shell"></a>shell</h3>
<p>
A piece of software, usually a separate program, that provides communication between the user and the operating system. For example, the Windows Program Manager is a shell program that interacts with MS-DOS.</p>

<h3><a name="_gloss_shift.2b.f1_help"></a>SHIFT+F1 Help</h3>
<p>
Context-sensitive Windows Help that the user obtains by pressing the SHIFT and F1 keys together. SHIFT + F1 Help invokes a special Help mode in which the cursor turns into a Help cursor. The user can then select a visible object in the user interface, such as a menu item, toolbar button, or window. This opens Help on a topic that describes the selected item.</p>

<h3><a name="_gloss_short_integer"></a>short integer</h3>
<p>
In 32-bit Visual C++, a 16-bit integer. Most compilers provide less storage space for a <b>short</b> than for an <b>int</b>; however, the ANSII standard guarantees only that a short integer is no longer than an integer, which is the machine's native (word) size.</p>

<h3><a name="_gloss_shortcut"></a>shortcut</h3>
<p>
A fast way to perform an action such as selecting text or, more usually, opening a file, document, Web page, and so on. Usually represented by an icon on the desktop.</p>

<h3><a name="_gloss_shortcut_menu"></a>shortcut menu</h3>
<p>
A menu displayed within a window that provides quick access to frequently used commands that are also available from the main menu bar. The commands in a shortcut menu may change depending on the current state of the window.</p>

<h3><a name="_gloss_show_state"></a>show state</h3>
<p>
A collection of qualities that a windows has at a given time, including active or inactive; hidden or visible; and minimized, maximized, or restored.</p>

<h3><a name="_gloss_sib"></a>SIB</h3>
<p>
In Intel 80386-80486 assembly language, the second encoding byte of an extended memory operand.</p>

<h3><a name="_gloss_sibling"></a>sibling</h3>
<p>
A node in a tree that is descended from the same immediate ancestor(s) as other processes or nodes. The node may represent any data structure, or a system object such as a window or a process.</p>

<h3><a name="_gloss_sibling_window"></a>sibling window</h3>
<p>
A child window that has the same parent window as one or more other child windows.</p>

<h3><a name="_gloss_sid"></a>SID</h3>
<p>
A structure of variable length that uniquely identifies a user or group on all Windows NT implementations. See also access token, impersonation token, primary token, privilege.</p>

<h3><a name="_gloss_side_effect"></a>side effect</h3>
<p>
A change of state, other than the obvious one, caused by a routine, function call, or assignment. Function calls can have side effects if they change the value of an externally visible item.</p>

<h3><a name="_gloss_signature"></a>signature</h3>
<ol>
<li>
In Win32, a 4-byte value that identifies an enhanced metafile.<br><br></li>
<li>
More generally, a sequence of data used for identification, such as an identifier appended to an electronic mail message or in a fax.</li>
</ol>

<h3><a name="_gloss_signed_integer"></a>signed integer</h3>
<p>
An integer data type that can be either positive or negative. The most significant bit is the sign bit, which is 1 for negative values and 0 for positive values. See also unsigned integer.</p>

<h3><a name="_gloss_signed_values"></a>signed values</h3>
<p>
Values that can be negative or positive.</p>

<h3><a name="_gloss_simple_mail_transfer_protocol"></a>Simple Mail Transfer Protocol</h3>
<p>
A standard Internet protocol for sending e-mail documents.</p>

<h3><a name="_gloss_simple_network_management_protocol"></a>Simple Network Management Protocol</h3>
<p>
Designed for requesting, packaging, and sending management information over a network. SNMP provides a common set of rules for programmers writing network management programs.</p>

<h3><a name="_gloss_single_document_interface"></a>single document interface</h3>
<p>
A user interface architecture that allows a user to work with just one document at a time. Windows Notepad is an example of an SDI application. See also multiple document interface (MDI).</p>

<h3><a name="_gloss_single_threading_model"></a>single threading model</h3>
<p>
A model in which all objects are executed on a single thread. Contrast multithreaded application; compare free threading model, apartment-model threading.</p>

<h3><a name="_gloss_single.2d.byte_character_set"></a>single-byte character set</h3>
<p>
A mapping of characters to their identifying numeric values, in which each value is 1 byte wide. The ANSI and OEM character sets are single-byte character sets. See also multibyte character set (MBCS), Unicode.</p>

<h3><a name="_gloss_single.2d.line_edit_control"></a>single-line edit control</h3>
<p>
An element of the Windows user interface that allows the user to enter and edit a single line of text. See also multiline edit control.</p>

<h3><a name="_gloss_size_box"></a>size box</h3>
<p>
A small rectangle the user can manipulate to change the size of a window.</p>

<h3><a name="_gloss_sizing_border"></a>sizing border</h3>
<p>
A type of window border that enables the user to size the window by clicking and dragging the border.</p>

<h3><a name="_gloss_sizing_handles"></a>sizing handles</h3>
<p>
A mechanism for changing the size of a bitmap or a control. Active sizing handles are solid squares; if a sizing handle is a hollow square, the object cannot be resized along that axis.</p>

<h3><a name="_gloss_skeleton_application"></a>skeleton application</h3>
<p>
Or starter application. A default application created by AppWizard that runs, opens and closes windows, and allows other operations on the windows. You add the necessary code to implement the functionality needed for your own application.</p>

<h3><a name="_gloss_slider_control"></a>slider control</h3>
<p>
Or trackbar. A window containing a slider and optional tick marks. When the user moves the slider, using either the mouse or the direction keys, the control sends notification messages to indicate the change.</p>

<h3><a name="_gloss_slip"></a>SLIP</h3>
<p>
A protocol for connecting to the Internet via a dial-up connection, such as with a modem.</p>

<h3><a name="_gloss_small_memory_model"></a>small memory model</h3>
<p>
A memory model with only one code segment and only one data segment.</p>

<h3><a name="_gloss_smart_pointer"></a>smart pointer</h3>
<p>
In C++, an object that implements the funtionality of a pointer and additionally performs some action whenever an object is accessed through it. Smart pointers are implemented by overloading the pointer-dereference (<b>-&gt;</b>) operator.</p>

<h3><a name="_gloss_smtp"></a>SMTP</h3>
<p>
A standard Internet protocol for sending e-mail documents.</p>

<h3><a name="_gloss_snapshot"></a>snapshot</h3>
<ol>
<li>
In MFC, a recordset that reflects a static view of the data as it existed at the time the snapshot was created. See also dynaset, recordset.<br><br></li>
<li>
Or screen dump. A copy of all or part of the display screen as it appears at a given instant.<br><br></li>
<li>
More generally, a copy of an object's state or appearance at a given time.</li>
</ol>

<h3><a name="_gloss_snmp"></a>SNMP</h3>
<p>
Designed for requesting, packaging, and sending management information over a network. SNMP provides a common set of rules for programmers writing network management programs.</p>

<h3><a name="_gloss_socket"></a>socket</h3>
<p>
An object that represents an endpoint for communication between processes across a network transport (TCP/IP or AppleTalk, for example). Sockets have a type (datagram or stream) and can be bound to a specific network address. Windows Sockets provides an API for handling all types of socket connections in Windows. See also datagram socket, stream socket, transport protocol.</p>

<h3><a name="_gloss_software_development_kit"></a>software development kit</h3>
<p>
A set of libraries, header files, tools, books, on-line help and sample programs designed to help a developer create software.</p>

<h3><a name="_gloss_solid_brush"></a>solid brush</h3>
<p>
A logical brush that contains 64 pixels of the same color. See also null brush.</p>

<h3><a name="_gloss_sort_order"></a>sort order</h3>
<p>
The order in which a set of records or other data objects are to be sorted, or the function that defines this order. Possible sort orders for an array of strings, for example, could include lexicographic order or ascending order by length.</p>

<h3><a name="_gloss_source_character_set"></a>source character set</h3>
<p>
The set of legal characters that can appear in source files. For Microsoft C and C++, the source set is the standard ASCII character set. The source character set and execution character set include the ASCII characters used as escape sequences. See also execution character set.</p>

<h3><a name="_gloss_source_code"></a>source code</h3>
<p>
Human-readable statements written in a high-level programming language, or assembly language. See also object code.</p>

<h3><a name="_gloss_source_code_editor"></a>source code editor</h3>
<p>
A text editor that may provide special formatting features which make it easier to generate readable, syntactically correct source code. For example, a source code editor may automatically indent blocks of code, check for balanced parentheses and brackets, or highlight keywords.</p>

<h3><a name="_gloss_source.2d.code_control_system"></a>source-code control system</h3>
<p>
An application that tracks changes to source-code files during the course of software development. Source-code control systems ensure that changes are not overwritten in projects with multiple developers, and that developers are working with the most up-to-date code. You can also return to earlier versions of code, if necessary.</p>

<h3><a name="_gloss_spawn"></a>spawn</h3>
<ol>
<li>
(noun) A family of C run-time library functions that create and execute new child processes.<br><br></li>
<li>
(verb) To create a child process (or thread, in cases where multiple threads are allowed).</li>
</ol>

<h3><a name="_gloss_spline"></a>spline</h3>
<p>
In computer graphics, a curve calculated by a mathematical function that connects separate points with a high degree of smoothness.</p>

<h3><a name="_gloss_sql"></a>SQL</h3>
<p>
A database sublanguage used to query, update, and manage relational databases.</p>

<h3><a name="_gloss_ssl"></a>SSL</h3>
<p>
A protocol for providing data security layered between its service protocols (HTTP) and TCP/IP.</p>

<h3><a name="_gloss_stack"></a>stack</h3>
<ol>
<li>
A data structure implemented as a LIFO (last in, first out) list so that the last item added to the structure is the first item removed. <br><br></li>
<li>
A region of reserved memory, organized as a stack, in which programs temporarily store status data such as procedure and function call return addresses, passed parameters, and local variables. See also heap.</li>
</ol>

<h3><a name="_gloss_stack_allocation"></a>stack allocation</h3>
<p>
The amount, in bytes, of space reserved for a program's status data such as procedure and function call return addresses, passed parameters, and local variables. See also stack frame.</p>

<h3><a name="_gloss_stack_frame"></a>stack frame</h3>
<p>
Or frame allocation. An area of memory set up whenever a function is called that temporarily holds the arguments to the function as well as any variables that are defined local to the function. There are two key characteristics of frame allocations. First, when a local variable is defined, enough space is allocated on the stack frame to hold the entire variable, even if it is a large array or data structure. Second, frame variables are automatically deleted when they go out of scope.</p>

<h3><a name="_gloss_stack_overflow"></a>stack overflow</h3>
<p>
An error condition caused by attempting to push an item onto a stack that is full, meaning that all of the memory allocated for that stack has been used. See also stack underflow.</p>

<h3><a name="_gloss_stack_probe"></a>stack probe</h3>
<p>
A short routine, called on entry to a function, to verify that there is enough room in the program stack to allocate local variables required by the function.</p>

<h3><a name="_gloss_stack_size"></a>stack size</h3>
<p>
The amount of memory, in bytes, allocated to a stack.</p>

<h3><a name="_gloss_stack_underflow"></a>stack underflow</h3>
<p>
An error condition caused by attempting to pop an item from an empty stack. See also stack overflow.</p>

<h3><a name="_gloss_stand.2d.alone_code"></a>stand-alone code</h3>
<p>
For the Apple Macintosh and Power Mac, code that implements resources as a shared library, with some of the functionality of dynamic-link libraries. See also Apple Shared Library Manager (ASLM).</p>

<h3><a name="_gloss_standard_control"></a>standard control</h3>
<p>
One of the controls provided by Microsoft Windows. These controls include buttons of several kinds, static- and editable-text controls, scroll bars, list boxes, and combo boxes. See also custom control.</p>

<h3><a name="_gloss_standard_conversion"></a>standard conversion</h3>
<p>
In C++, the conversion of objects of one fundamental type to another type. For example, converting an object of integral type to a shorter signed or unsigned integral type. Standard conversion can result in loss of data if the value of the original object is outside the range that can be represented by the shorter type.</p>

<h3><a name="_gloss_standard_error_device"></a>standard error device</h3>
<p>
The device to which a program sends its error messages unless the error output is redirected. Normally, the standard error device is the console.</p>

<h3><a name="_gloss_standard_generalized_mark.2d.up_language"></a>Standard Generalized Mark-up Language</h3>
<p>
A set of rules and tags to mark the structure and content of a document, independent of the display medium.</p>

<h3><a name="_gloss_standard_input_device"></a>standard input device</h3>
<p>
The device from which a program reads its input unless the input is redirected. In normal operation, the standard input device is the keyboard.</p>

<h3><a name="_gloss_standard_input.2f.output_.28.i.2f.o.29"></a>standard input/output (I/O)</h3>
<p>
In C, the input and output functions declared in the STDIO.H header file. See also standard input device, standard output device, standard error device.</p>

<h3><a name="_gloss_standard_output_device"></a>standard output device</h3>
<p>
The device to which a program sends its output unless the output is redirected. In normal operation, the standard output device is the console.</p>

<h3><a name="_gloss_standard_resource"></a>standard resource</h3>
<p>
A resource whose format is defined and recognized by Windows. Standard resources include icons, cursors, menus, dialog boxes, bitmaps, fonts, keyboard accelerator tables, message-table entries, string-table entries, and version data. See also custom resource.</p>

<h3><a name="_gloss_standard_scroll_bar"></a>standard scroll bar</h3>
<p>
One of two ways to include a scroll bar in a window. A standard scroll bar is located in the nonclient area of a window. It is created with the window and displayed when the window is displayed. The sole purpose of a standard scroll bar is to enable the user to generate scrolling requests for viewing the entire content of the client area.</p>

<h3><a name="_gloss_start_page"></a>start page</h3>
<p>
A page the user chooses as the opening page of the Internet or a Web site.</p>

<h3><a name="_gloss_starter_files"></a>starter files</h3>
<p>
In Visual C++, a set of files created by AppWizard that, when compiled, implement the basic features of a Windows application. The starter files consist of C++ source files, resource files, header files, and a project file. See also skeleton application.</p>

<h3><a name="_gloss_startup_code"></a>startup code</h3>
<p>
The portion of the program code that gets an application up and running. Startup code interprets command-line arguments, creates and initializes global variables, opens standard streams, and so forth.</p>

<h3><a name="_gloss_state_flags"></a>state flags</h3>
<p>
Values, often return values from functions, that specify the condition of an interface component such as a checkbox.</p>

<h3><a name="_gloss_static_binding"></a>static binding</h3>
<p>
The conversion of symbolic addresses to memory addresses during compilation or linking. Contrast with dynamic binding.</p>

<h3><a name="_gloss_static_control"></a>static control</h3>
<p>
A control that enables an application to provide the user with certain types of text and graphics that require no response. Applications often use static controls to label other controls or to separate a group of controls.</p>

<h3><a name="_gloss_static_cursor"></a>static cursor</h3>
<p>
An ODBC cursor that appears to be fixed (static) from the perspective of the data in the underlying tables. Changes made by other users are not detected by the static cursor until it is closed and reopened. See also snapshot.</p>

<h3><a name="_gloss_static_data"></a>static data</h3>
<p>
Data declared with the keyword <b>static</b>. Static data can include initialized variables defined outside of functions, static variables within functions, explicit strings, and floating-point numbers. "Static data" also sometimes refers to the area in memory where static data resides. See also statically allocated buffer.</p>

<h3><a name="_gloss_static_data_member"></a>static data member</h3>
<p>
Or static member variable. A data member that is declared within the scope of a class but which is actually a separate object. The definition of the static data member is performed elsewhere in the program, and only one copy of the member exists, no matter how many objects of the class exist.</p>

<h3><a name="_gloss_static_extent"></a>static extent</h3>
<p>
A property of global data objects (both <b>static</b> and <b>extern</b>), local static objects, and static data members of C++ classes that have the following characteristics:</p>
<p>
Only one copy of the data is maintained for all objects.</p>
<p>
The objects retain their location in memory from the time they are created until they are destroyed.</p>

<h3><a name="_gloss_static_link"></a>static link</h3>
<p>
A program link, to a library or to an object, that is established at link time. When an application uses a function from a static-link library, the linker copies the code for that function into the application's executable file. See also dynamic link.</p>

<h3><a name="_gloss_static_member_function"></a>static member function</h3>
<p>
In C++, a class member function declared static in the class declaration. All objects of the class share a single copy of the static member function and a function so declared can access nonstatic data members of its class only through the member-selection (<b>.</b> or <b>-&gt;</b>) operators. Static member functions are used to implement common resources that all the objects of the class need or to maintain state information about the objects.</p>

<h3><a name="_gloss_static_object"></a>static object</h3>
<p>
In OLE, an object that contains only presentation data, with no native data. A container can treat a static object as though it were a linked or embedded object, except that it is not possible to edit a static object. A static object can result, for example, from the breaking of a link on a linked object either because the server application is unavailable or because the user doesn't want the linked object to be updated anymore. See also native data.</p>

<h3><a name="_gloss_static_splitter_window"></a>static splitter window</h3>
<p>
A split-window style in which the panes are created when the window is created, and the order and number of panes never change. The panes are separated by a "splitter bar" that the user can drag to change the relative sizes of the panes. See also dynamic splitter window.</p>

<h3><a name="_gloss_static_storage_class"></a>static storage class</h3>
<p>
In C++, the storage class for objects and variables that exist and retain their values throughout the execution of the entire program. All global objects have static storage class. Local objects and class members can be given static storage class by explicit use of the <b>static</b> storage class specifier. See also automatic storage class.</p>

<h3><a name="_gloss_static.2d.link_library"></a>static-link library</h3>
<p>
A library file that is linked into the program when the executable file is built. Static-link library files usually have a .LIB filename extension. See also dynamic-link library file, library file.</p>

<h3><a name="_gloss_statically_allocated_buffer"></a>statically allocated buffer</h3>
<p>
Or static buffer. A portion of memory that is allocated when a module is loaded and is deallocated when the module leaves memory.</p>

<h3><a name="_gloss_status_bar"></a>status bar</h3>
<p>
A control bar at the bottom of a window, with a row of text output panes. The status bar is usually used as a message line (for example, the standard menu help message line) or as a status indicator (for example, the CAP, NUM and SCRL indicators). See also dialog bar.</p>

<h3><a name="_gloss_status_code"></a>status code</h3>
<p>
A value used to report on the current status of an object, event, or process, or to reflect the outcome of an operation.</p>

<h3><a name="_gloss_storage_class"></a>storage class</h3>
<p>
Or storage duration. In C/C++, determines whether a variable (or object, in C++) has a static (or "global") lifetime, in which case it is stored in the same memory location throughout the execution of the program, or an automatic (or "local") lifetime,(in which case it is allocated new storage each time execution control passes to the block in which it is defined. See also automatic storage class, register storage class, scope, static storage class.</p>

<h3><a name="_gloss_storage_object"></a>storage object</h3>
<p>
An object type used in OLE to implement compound files. Storage objects are analogous to directories in that they can contain other storage objects, or they can contain stream objects, which are analagous to files. See also compound file.</p>

<h3><a name="_gloss_stream_file_object"></a>stream file object</h3>
<p>
A virtual file representing on-disk data associated with a file, some of which may not be part of the physical file that backs a file object. For example, a stream file object makes it possible to cache the extended attributes (EAs) or access-control list (ACL) for a file object together with the file's data.</p>

<h3><a name="_gloss_stream_i.2f.o"></a>stream I/O</h3>
<p>
Or iostream. In C++, the input and output functions, declared in IOSTREAM.H, that transfer data from and to files and devices. Stream I/O functions treat data as a stream of individual characters and provide buffering. The predefined object <b>cout</b> represents the standard output stream, <b>cin</b> represents the standard input stream, and <b>cerr</b> represents the standard error stream.</p>

<h3><a name="_gloss_stream_object"></a>stream object</h3>
<p>
One of the object types used in OLE to implement compound files. Stream objects store data of any type. See also compound file, storage object.</p>

<h3><a name="_gloss_stream_socket"></a>stream socket</h3>
<p>
A connection-oriented socket that provides a bidirectional, sequenced, and unduplicated flow of data without record boundaries. Receipt of stream messages is guaranteed, and streams are well-suited to handling large amounts of data. Stream sockets are appropriate, for example, for implementations such as file transfer protocol (FTP), which facilitates transferring ASCII or binary files of arbitrary size. See also datagram socket, transport protocol.</p>

<h3><a name="_gloss_streaming"></a>streaming</h3>
<p>
The process of transferring information from a storage device, such as a hard disk or CD-ROM, to a device driver. Rather than transferring all the information in a single data copy, the information is transferred in smaller parts over a period of time, typically while the application is performing other tasks. Contrast with datagram.</p>

<h3><a name="_gloss_strikeout"></a>strikeout</h3>
<p>
A font effect that adds a horizontal line through one or more characters.</p>

<h3><a name="_gloss_string"></a>string</h3>
<p>
A data structure composed of a sequence of characters identified with a symbolic name. In C/C++, a string is terminated with a null character ('\0').</p>

<h3><a name="_gloss_string_constant"></a>string constant</h3>
<p>
In C/C++/Java programming, a list of characters enclosed in double quotes in source code.</p>

<h3><a name="_gloss_string_identifier_.28.id.29"></a>string identifier (ID)</h3>
<p>
A 16-bit identifier that Windows uses to locate a string in a string-table resource. The upper 12 bits of the identifier specify the block in which the string appears. The lower 4 bits specify the ordinal location of the string within the block. See also string table.</p>

<h3><a name="_gloss_string_literal"></a>string literal</h3>
<p>
Or literal string, string constant. A string of characters enclosed with double quotation marks ("). Any character from the source character set is allowed, except that a double quotation mark inside the string must be preceded by the backslash, or escape, character (\). Like other constants, string literals do not change in a program. See also character constant.</p>

<h3><a name="_gloss_string_name"></a>string name</h3>
<p>
An identifier for a class, version, or resource, in the form of a human-readable character string.</p>

<h3><a name="_gloss_string_resources"></a>string resources</h3>
<p>
In 32-bit Windows, null-terminated Unicode strings that are stored in the resource file string table. Each string is made up of a series of strings whose ordinal position is used as the string ID.</p>

<h3><a name="_gloss_string_table"></a>string table</h3>
<ol>
<li>
A Windows resource that contains a list of identifiers, values, and captions for the strings used in an application's framework. For example, the status bar prompts are located in the string table. When the resource compiler converts a string table specified in a resource-definition file, it separates it into blocks of 16 strings and stores them as individual resources. See also string resources.<br><br></li>
<li>
More generally, any data structure used to store character strings. Typically, a string table is implemented as a hash table.</li>
</ol>

<h3><a name="_gloss_structure"></a>structure</h3>
<ol>
<li>
In C, an aggregate data type that can contain constants, variables, and other structures. In C++, a structure can also contain functions and all of a structure's members are implicitly public. <br><br></li>
<li>
More generally, a collection of data elements.</li>
</ol>

<h3><a name="_gloss_structured_exception_handling"></a>structured exception handling</h3>
<p>
A mechanism for handling hardware- and software-generated exceptions that gives developers complete control over the handling of exceptions, provides support for debuggers, and is usable across all programming languages and computers. See also C++ exception handling.</p>

<h3><a name="_gloss_structured_query_language"></a>Structured Query Language</h3>
<p>
A database sublanguage used to query, update, and manage relational databases.</p>

<h3><a name="_gloss_structured_storage"></a>structured storage</h3>
<p>
An OLE model that allows objects to control their own data storage, loading directly from and saving directly to disk.</p>

<h3><a name="_gloss_stub"></a>stub</h3>
<p>
An interface-specific object that unpackages the parameters for that interface after they are marshaled across the process boundary, and makes the requested method call. The stub runs in the address space of the receiver and communicates with a corresponding proxy in the sender's address space.</p>

<h3><a name="_gloss_stub_file"></a>stub file</h3>
<p>
Or stub program. In Windows, an MS-DOS executable file added to the beginning of a segmented executable file and invoked if a user tries to run a Windows program from the MS-DOS prompt. The stub may display some error message such as "This program requires Microsoft Windows."</p>

<h3><a name="_gloss_style"></a>style</h3>
<p>
A value, or set of values, that defines the outward appearance and behavior of an object, such as a window, control, or document. See also window style.</p>

<h3><a name="_gloss_style_bit"></a>style bit</h3>
<p>
An individual bit of the 16-bit style parameter that pertains to a single style attribute. For example, the WS_VISIBLE style bit, when set, determines whether a particular window is visible to the user.</p>

<h3><a name="_gloss_subaddress"></a>subaddress</h3>
<p>
The part of a URL that goes to a specific place in a file, such as a bookmark, slide, and so on.</p>

<h3><a name="_gloss_subclass"></a>subclass</h3>
<p>
Or derived class. The class that is derived from another class. A subclass inherits state and behavior from its superclass or superclasses in the form of variables and methods.</p>

<h3><a name="_gloss_subclassing"></a>subclassing</h3>
<p>
In Windows programming, a technique that allows an application to intercept and process messages sent or posted to a particular window before the window has a chance to process them. By subclassing a window, an application can augment, modify, or monitor the behavior of the window.</p>

<h3><a name="_gloss_subexpression"></a>subexpression</h3>
<p>
An expression that is part of a larger expression. For example, (a+b) is a subexpression of (a+b)*c.</p>

<h3><a name="_gloss_sublanguage"></a>sublanguage</h3>
<p>
Or secondary language. In the localization of Windows-based programs, a variant of the primary language, defined by the locale. For example, if English is the the primary language, American, British, Australian, New Zealand, Canadian, and Ireland are the possible locales that determine the sublanguage. See also language identifier (ID).</p>

<h3><a name="_gloss_subobject"></a>subobject</h3>
<ol>
<li>
The portion of a Windows object that is completely described by a base class.<br><br></li>
<li>
Generally, an object within an object. For example, a cell could be considered a subobject of a spreadsheet object.</li>
</ol>

<h3><a name="_gloss_subscript"></a>subscript</h3>
<ol>
<li>
In programming, a value enclosed in brackets ([ ]) that indicates either the number of elements in an array in the array declaration or the offset position within an array.<br><br></li>
<li>
In printing, one or more characters printed slightly below the bottom edge of the surrounding text.</li>
</ol>

<h3><a name="_gloss_subscript_.285b_5d29_.operator"></a>subscript ([ ]) operator</h3>
<p>
An operator that indicates that the name preceding the operator is an array, or that designates a subscript into the array. For classes that have overloaded the operator, the behavior of this operator is class-specific.</p>

<h3><a name="_gloss_substring"></a>substring</h3>
<p>
A string that is part of a longer string. For example, the string "cat" is a substring of the string "catamaran".</p>

<h3><a name="_gloss_subsystem"></a>subsystem</h3>
<p>
A system other than, and usually subordinate to, the primary system. A subsystem can have its own memory allocation and internal functions. OLE 2.0 and DEBUG are examples of subsystems, and POSIX is a subsystem of Windows NT that can run UNIX applications.</p>

<h3><a name="_gloss_superclass"></a>superclass</h3>
<p>
Or base class. A class which is the base (or parent) class for another class; a class from which another is derived, either directly or indirectly. The superclass provides state and behavior to the subclass which the subclass may modify by overriding selected methods.</p>

<h3><a name="_gloss_suspend_count"></a>suspend count</h3>
<p>
A record of the number of active operations that require a thread to momentarily suspend execution of user-mode code. Starting one of these operations increments the suspend count; ending the operation decrements the count. When the suspend count equals zero, the thread resumes execution.</p>

<h3><a name="_gloss_swap_file"></a>swap file</h3>
<p>
Or paging file. In Windows, the disk file that holds the active system and application memory pages that are not currently present in main memory (RAM). See also virtual memory.</p>

<h3><a name="_gloss_symbol"></a>symbol</h3>
<ol>
<li>
A character other than the standard alphanumeric characters. It usually refers to algebraic, scientific, or linguistic characters not found on the keyboard.<br><br></li>
<li>
In programming, a name that represents a register, an absolute value, or a memory address (relative or absolute).<br><br></li>
<li>
To a compiler, a variable, function name, or other identifier.<br><br></li>
<li>
In Visual C++, a resource identifier that consists of a text string (name) mapped to an integer value. A symbol provides a way to refer to resources and user-interface objects, both in source code and in the resource editors.</li>
</ol>

<h3><a name="_gloss_symbolic.2d.debugging_information"></a>symbolic-debugging information</h3>
<p>
A map of the source code and all the identifiers (variables, function names, and so on) created at compile time for use by the debugger. See also program database file.</p>

<h3><a name="_gloss_synchronization_object"></a>synchronization object</h3>
<p>
An object whose handle can be specified in one of the wait functions to coordinate the execution of multiple threads. The state of a synchronization object is either signaled, which can allow the wait function to return, or nonsignaled, which can prevent the function from returning. More than one process can have a handle of the same synchronization object, making interprocess synchronization possible. See also mutex object, semaphore.</p>

<h3><a name="_gloss_synchronous_call"></a>synchronous call</h3>
<p>
A function call that does not allow further instructions in the calling thread to be executed until the function returns. See also asynchronous call.</p>

<h3><a name="_gloss_synchronous_operation"></a>synchronous operation</h3>
<ol>
<li>
In Windows programming, a task that requires the thread that initiated the operation to suspend activity until the task is completed. See also asynchronous operation, atomic operation.<br><br></li>
<li>
In hardware, an operation that proceeds under control of a clock or timing mechanism.</li>
</ol>

<h3><a name="_gloss_synchronous_processing"></a>synchronous processing</h3>
<p>
In ODBC, a method of processing transactions in which the database driver does not return control to an application until a function call completes. See also asynchronous processing.</p>

<h3><a name="_gloss_syntax"></a>syntax</h3>
<p>
The grammar of a particular language, the rules governing the structure and content of the statements. See also semantics.</p>

<h3><a name="_gloss_system_7"></a>System 7</h3>
<p>
An operating system for Apple Macintosh computers.</p>

<h3><a name="_gloss_system_database"></a>system database</h3>
<p>
A file, read at startup, that contains information about the users in a workgroup, such as account names, user preference information, and passwords.</p>

<h3><a name="_gloss_system_font"></a>system font</h3>
<p>
The font used by the operating system to display messages. The system font is the default font for resources.</p>

<h3><a name="_gloss_system_modal_dialog_box"></a>system modal dialog box</h3>
<p>
Or system modal message box, system modal window. A dialog box that prevents the user from doing anything else in Windows until the dialog box is cleared, usually by choosing a pushbutton marked either OK or Cancel. Use a system modal dialog box to notify the user of serious, potentially damaging errors that require immediate attention (for example, running out of memory).</p>

<h3><a name="_gloss_system_palette"></a>system palette</h3>
<p>
A representation of the device's physical palette. The system palette contains the RGB values for all colors that can currently be displayed or drawn by the device.</p>

<h3><a name="_gloss_system_time"></a>system time</h3>
<p>
The current time on the system's "real-time" clock. The system time structure contains values for the year, month, day, hour, minute, second, and millisecond.</p>

<h3><a name="_gloss_system..ini_file"></a>SYSTEM.INI file</h3>
<p>
A Windows initialization file that contains the settings needed to configure Windows to a system's particular components.</p>
</FONT></BODY>
</HTML>
