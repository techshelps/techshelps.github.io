<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary I</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_i"></a><sup></sup>Glossary I</h1>

<h3><a name="_gloss_icmp"></a>ICMP</h3>
<p>
An extension to the Internet Protocol that allows for the generation of error messages, test packets and informational messages related to IP.</p>

<h3><a name="_gloss_icon_file"></a>icon file</h3>
<p>
In Windows, a file that contains a bitmap of an icon. Icon files usually have a .ICO filename extension.</p>

<h3><a name="_gloss_icon_resource"></a>icon resource</h3>
<p>
An icon that is stored in an application's resource-definition file. At run time, an application can call the <b>LoadIcon</b> Windows function to retrieve the handle of the icon. Icon resources can be used to avoid device dependence, simplify localization, and enable applications to share icon shapes.</p>

<h3><a name="_gloss_idl"></a>IDL</h3>
<p>
The OSF-DCE standard language for specifying the interface for remote procedure calls. See also MIDL.</p>

<h3><a name="_gloss_idle_state"></a>idle state</h3>
<p>
The state of a modal dialog box or menu when it has finished processing a message and it has no more messages waiting in its active message queue.</p>

<h3><a name="_gloss_idle_time"></a>idle time</h3>
<p>
The period during which the application has an empty message queue. Idle time permits the processing of background tasks.</p>

<h3><a name="_gloss_ieee"></a>IEEE</h3>
<p>
A professional organization of computer hardware and software engineers. The institute has developed standards for many aspects of computer technology, such as network connectivity, and formats for representing floating-point numbers.</p>

<h3><a name="_gloss_ietf"></a>IETF</h3>
<p>
The primary working body developing standards for the Internet.</p>

<h3><a name="_gloss_iid"></a>IID</h3>
<p>
A globally unique identifier associated with an interface. Some functions take IIDs as parameters to allow the caller to specify which interface pointer should be returned. See also UUID.</p>

<h3><a name="_gloss_image_list"></a>image list</h3>
<p>
In MFC, a collection of same-sized images contained in a single, wide bitmap. Image lists are used to efficiently manage large sets of icons or bitmaps.</p>

<h3><a name="_gloss_immediate_rendering"></a>immediate rendering</h3>
<p>
In a data-transfer operation, making data immediately available to an application, versus making it available when requested (delayed rendering).</p>

<h3><a name="_gloss_impersonation_token"></a>impersonation token</h3>
<p>
In Windows NT, an access token that has been created to capture the security information of a client process, allowing a server to "impersonate" the client process in security operations. See also primary token, privilege, security identifier (SID).</p>

<h3><a name="_gloss_implementation"></a>implementation</h3>
<p>
A description of the data structure used to represent an object’s core state, definitions of the methods that can access the data structure, and information about the intended type of the object. Can also refer to a single function, where the function definition provides the implementation for that function.</p>

<h3><a name="_gloss_implementation_file"></a>implementation file</h3>
<p>
In MFC, the source code file (usually a C++ source file with a .CPP or .CXX filename extension) that contains a single class definition along with the code that implements that class's member functions. See also interface file.</p>

<h3><a name="_gloss_implementation.2d.defined"></a>implementation-defined</h3>
<p>
Behavior that depends on the implementation, with the range of possible behaviors often delineated by a standard.</p>

<h3><a name="_gloss_implicit_linking"></a>implicit linking</h3>
<p>
Reference resolution to DLL functions by an executable file, where the executable file links to an import library (.LIB file) provided by the DLL maker. The operating system loads the DLL as the executable using it is loaded and before it starts executing. The client executable calls the DLL’s exported functions just as if the functions were contained in the executable. Contrast with explicit linking.</p>

<h3><a name="_gloss_import_file"></a>import file</h3>
<p>
A file that describes the functions and data to be exported when an export (.EXP) file is referenced by a linked program. The Incremental Linker (LINK.EXE) uses the export file to build a program that contains exports (usually a dynamic-link library), and it uses the import library to resolve references to those exports in other programs. Import library files usually have a .LIB filename extension. See also library file.</p>

<h3><a name="_gloss_imported_function"></a>imported function</h3>
<p>
One called inside another executing entity, such as a DLL or executable file. Functions can be imported either through use of a .LIB import library, or by using the <b>__declspec</b> (<b>dllimport</b>) storage-class modifier, a Microsoft-specific extension to the C language. This modifier explicitly defines the client's interface to other services. See also exported function.</p>

<h3><a name="_gloss_in.2d.memory_file"></a>in-memory file</h3>
<p>
A file that behaves like a disk file except that its bytes are stored in RAM. An in-memory file is a useful means of transferring raw bytes or serialized objects between independent processes.</p>

<h3><a name="_gloss_in.2d.place_activation"></a>in-place activation</h3>
<p>
Or in-place editing, visual editing. The ability to activate an object within the context of its container document, as opposed to opening it in a separate window.</p>

<h3><a name="_gloss_in.2d.process_server"></a>in-process server</h3>
<p>
An object server implemented as a DLL that runs in the process space of the object's client. See also local server, remote server.</p>

<h3><a name="_gloss_increment_.282b2b29_.operator"></a>increment (++) operator</h3>
<p>
An operator that specifies that its integral or floating-point operand be increased by the integer value 1. An incremented pointer points to the next object. In the prefix form (<code>++i]</code>), the increment takes place before the value is used in expression evaluation; in the postfix form (<code>i++</code>), the increment takes place after the value is used in expression evaluation. See also decrement (<b>--</b>) operator.</p>

<h3><a name="_gloss_incremental_link"></a>incremental link</h3>
<p>
The process of rebuilding only those program files that have a timestamp that is more recent than the last link, or updating only those parts of the program that have changed. An incrementally linked program is functionally equivalent to a program that is linked nonincrementally, but it differs from a nonincremental program in that it is prepared for subsequent incremental links and is larger as a result. See also incremental status file, full link.</p>

<h3><a name="_gloss_incremental_status_file"></a>incremental status file</h3>
<p>
A state file generated to hold status information for later incremental links of the program. The file has the same base name as the executable file or dynamic-link library and the filename extension .ILK. The incremental status file is created the first time the Incremental Linker (LINK.EXE) runs in incremental mode. LINK updates the file during subsequent incremental builds. LINK is the only tool that uses the .ILK file. See also incremental link.</p>

<h3><a name="_gloss_indexed_sequential_access_method"></a>Indexed Sequential Access Method</h3>
<p>
Pronounced "EYE-sam." A scheme for decreasing the time necessary to locate a data record within a large database, given a unique key for the record. The key is the field in the record used to reference the record.</p>

<h3><a name="_gloss_indirect_memory_operand"></a>indirect memory operand</h3>
<p>
In an assembly-language instruction, a memory operand whose value is treated as an address that points to the location of the desired data.</p>

<h3><a name="_gloss_indirection_.282a29_.operator"></a>indirection (*) operator</h3>
<p>
Or dereferencing operator. In C/C++, a unary operator (<b>*</b>) that accesses a value indirectly, through a pointer. The operand must be a pointer value. The result of the operation is the value stored at the address to which the operand points. If the operand points to a function, the result is a function designator. If it points to a storage location, the result is an l-value designating the storage location. See also address-of (<b>&amp;</b>) operator.</p>

<h3><a name="_gloss_infix_notation"></a>infix notation</h3>
<p>
Placing of operators between operands, as in (<i>x</i><b>+</b><i>y</i>)<b>*</b><i>z</i>. C++ and Java binary operators use infix notation exclusively. Compare prefix notation, postfix notation.</p>

<h3><a name="_gloss_inheritance"></a>inheritance</h3>
<p>
In object-oriented programming, a method for deriving new classes from existing classes. The derived class inherits the description of its base class(es), but can be extended by adding new member variables and functions and by using virtual functions. A class can inherit from a single base class (single inheritance) or from any number of direct base classes (multiple inheritance). A class derived using multiple inheritance has the attributes of all of its base classes.</p>

<h3><a name="_gloss_inheritance_hierarchy"></a>inheritance hierarchy</h3>
<p>
A classification of items in which each item except the top one (known as the root) is a specialized form of the item above it. Each item can have one or more items below it in the hierarchy. In the Java class hierarchy, the root is the <b>java.lang.Object</b> class. In MFC, the root is the <b>CObject</b> class. See also root.</p>

<h3><a name="_gloss_initialization_file"></a>initialization file</h3>
<p>
In Windows, a file that an application uses to store information that otherwise would be lost when the application closes. Initialization files typically contain information such as user preferences for the configuration of the application. Initialization files usually have a .INI filename extension.</p>

<h3><a name="_gloss_initializer"></a>initializer</h3>
<p>
The portion of a declarator that specifies an initial value for an object or a variable.</p>

<h3><a name="_gloss_inline_assembler"></a>inline assembler</h3>
<ol>
<li>
A feature of the Visual C++ compiler that allows the use of assembly-language instructions in C/C++ source programs without extra assembly and link steps. The inline assembler is built into the compiler; therefore, a separate assembler is not needed. Inline assembly code can use any C/C++ variable or function name that is in scope. <br><br></li>
<li>
Assembly-language code that is inserted into C/C++ source code. The <b>_asm</b> keyword preceding an assembly-language statement or block of statements invokes the inline assembler at compile time.</li>
</ol>

<h3><a name="_gloss_inline_file"></a>inline file</h3>
<p>
A file that contains text specified in the makefile. The name of file can be used in commands as input (for example, a LINK command file), or it can pass commands to the operating system. The file is created on disk when a command that creates the file is run.</p>

<h3><a name="_gloss_inline_function"></a>inline function</h3>
<ol>
<li>
In C++, a function defined in the body of a class declaration. Inline functions are typically one- or two-line functions used to return information about an object's state.<br><br></li>
<li>
A function whose declaration is preceded by the keyword <b>inline</b>, instructing the compiler to replace calls to that function with the code of the function body. This substitution occurs only at the compiler's discretion. For example, the compiler does not expand a function inline if its address is taken or if it is too large to expand inline.</li>
</ol>

<h3><a name="_gloss_insertion_.283c3c29_.operator"></a>insertion (&lt;&lt;) operator</h3>
<p>
Or output operator, put-to operator. In C++, the left-shift operator, overloaded (in the iostream library) to provide formatted output. The left operand must be one of the predefined output streams (<b>cout</b> or <b>cerr</b>) and the right operand can be any valid C++ expression. See also extraction (<b>&gt;&gt;</b>) operator, overloaded operator.</p>

<h3><a name="_gloss_inside.2d.out"></a>inside-out</h3>
<p>
In OLE, a model for in-place objects (for example, windows) that the user can activate with a single click. An inside-out object remains visible to the user when its user interface is deactivated. See also outside-in.</p>

<h3><a name="_gloss_instance"></a>instance</h3>
<ol>
<li>
In general, an object of a particular class.<br><br></li>
<li>
In Java, an instance of a class is created using the <b>new</b> operator followed by the class name.<br><br></li>
<li>
In C++, an instance can be created by defining it on the stack. In this case, the <b>new</b> keyword is not used. You can also instantiate an OLE object by calling the OLE API <b>CoCreateInstance</b>.</li>
</ol>

<h3><a name="_gloss_instance_handle"></a>instance handle</h3>
<p>
A handle that Windows assigns to each copy of a loaded application or dynamic-link library (DLL) in a multitasking system. Every window class requires an instance handle to identify the application or DLL that registered the class. See also task handle.</p>

<h3><a name="_gloss_instance_method"></a>instance method</h3>
<p>
Any method that can be invoked using an instance of a class, but not using the class name. Instance methods are defined in class definitions. Called nonstatic member functions in C++. See also class method.</p>

<h3><a name="_gloss_instance_variable"></a>instance variable</h3>
<p>
Any item of data that is associated with a particular object. Each instance of a class has its own copy of the instance variables defined in the class. Called member variables in C++. See also class variable.</p>

<h3><a name="_gloss_instantiation"></a>instantiation</h3>
<p>
The act of creating an object of a data type, usually a class.</p>

<h3><a name="_gloss_institute_of_electrical_and_electronics_engineers"></a>Institute of Electrical and Electronics Engineers</h3>
<p>
A professional organization of computer hardware and software engineers. The institute has developed standards for many aspects of computer technology, such as network connectivity, and formats for representing floating-point numbers.</p>

<h3><a name="_gloss_integral_type"></a>integral type</h3>
<p>
A general category of arithmetic data types that are capable of storing an integer (whole number). The data types <b>char</b>, <b>short</b>, <b>int</b>, <b>long</b>, and <b>enum</b> are integral types. The optional keywords <b>signed</b> and <b>unsigned</b> can precede or follow any of the integral types except <b>enum</b>, or these keywords can also be used alone as type specifiers, in which case they are understood as <b>signed int</b> and <b>unsigned int</b>, respectively. See also floating type.</p>

<h3><a name="_gloss_integrated_services_digital_network"></a>Integrated Services Digital Network</h3>
<p>
A type of digital communications service offered by telephone companies. It can carry data, voice, and video over specially conditioned high-speed telephone lines delivering two 64,000 bps bearer channels and one 16,000 bps data signaling channel.</p>

<h3><a name="_gloss_interface"></a>interface</h3>
<ol>
<li>
In the Component Object Model, a set of related functions; a description of an abstract type.<br><br></li>
<li>
In Java, a group of methods that can be implemented by several classes, regardless of where the classes are in the class hierarchy.<br><br></li>
<li>
An IDL keyword used by the MIDL compiler for generating interface declarations.</li>
</ol>

<h3><a name="_gloss_interface_definition_language"></a>Interface Definition Language</h3>
<p>
The OSF-DCE standard language for specifying the interface for remote procedure calls. See also MIDL.</p>

<h3><a name="_gloss_interface_file"></a>interface file</h3>
<p>
In MFC, the source header (.H) file that contains a single class declaration and any other information needed to use the class. See also implementation file.</p>

<h3><a name="_gloss_interface_identifier"></a>interface identifier</h3>
<p>
A globally unique identifier associated with an interface. Some functions take IIDs as parameters to allow the caller to specify which interface pointer should be returned. See also UUID.</p>

<h3><a name="_gloss_internal_linkage"></a>internal linkage</h3>
<p>
Specifies that the names of objects and functions should refer only to program elements inside their own translation units. The names are not shared with other translation units. The keyword <b>static</b> before a name declaration ensures internal linkage. See also external linkage.</p>

<h3><a name="_gloss_internet"></a>Internet</h3>
<p>
A collection of computer networks that connects millions of computers around the world.</p>

<h3><a name="_gloss_internet_control_message_protocol"></a>Internet Control Message Protocol</h3>
<p>
An extension to the Internet Protocol that allows for the generation of error messages, test packets and informational messages related to IP.</p>

<h3><a name="_gloss_internet_engineering_task_force"></a>Internet Engineering Task Force</h3>
<p>
The primary working body developing standards for the Internet.</p>

<h3><a name="_gloss_internet_protocol"></a>Internet Protocol</h3>
<p>
The basic protocol of the Internet. It enables the delivery of individual packets from one host to another. It makes no guarantees about whether or not the packet will be delivered, how long it will take, or if multiple packets will arrive in the order they were sent. Protocols built on top of this add the notions of connection and reliability.</p>

<h3><a name="_gloss_internet_relay_chat"></a>Internet Relay Chat</h3>
<p>
A multi-user system where people convene on "channels" (a virtual place, usually with a topic of conversation) to talk in groups or privately on the Internet.</p>

<h3><a name="_gloss_internet_server_application"></a>Internet server application</h3>
<p>
Internet server extension DLL.</p>

<h3><a name="_gloss_internet_server_application_programming_interface"></a>Internet Server Application Programming Interface</h3>
<p>
A set of functions for Internet servers, such as a Windows NT Server running Microsoft Internet Information Server (MIIS).</p>

<h3><a name="_gloss_internet_server_extension_dll"></a>Internet server extension DLL</h3>
<p>
Or Internet server application (ISA). A DLL that can be loaded and called by some HTTP servers. Used to enhance the capabilities of applications that extend a Web server.</p>

<h3><a name="_gloss_internet_server_extensions"></a>Internet server extensions</h3>
<p>
An application that processes server requests, including Common Gateway Interface (CGI) and ISAPI applications.</p>

<h3><a name="_gloss_internet_server_filter"></a>Internet server filter</h3>
<p>
A routine that receives notification of server events such as URL mapping and logon requests, and filters, examines, or changes data to and from the browser or Web server.</p>

<h3><a name="_gloss_internet_service_provider"></a>Internet Service Provider</h3>
<p>
A company that provides access to end users of the Internet, as opposed to Network Service Providers (NSP's).</p>

<h3><a name="_gloss_internetwork_packet_exchange"></a>Internetwork Packet Exchange</h3>
<p>
A Novell NetWare communication protocol that uses datagram sockets to route information packets over local-area and wide-area networks.</p>

<h3><a name="_gloss_interpreter"></a>interpreter</h3>
<p>
A program that can execute code that is not native to the machine it is being run on. Java programs are often run by an interpreter that decodes the bytecodes that make up the program. See also JIT compiler.</p>

<h3><a name="_gloss_intranet"></a>intranet</h3>
<p>
A network within an organization, usually connected to the Internet via a firewall, that uses protocols such as HTTP or FTP to enhance productivity and share information.</p>

<h3><a name="_gloss_intrinsic_function"></a>intrinsic function</h3>
<ol>
<li>
In certain high-level programming languages, such as FORTRAN, a function that is part of the language. The compiler automatically links intrinsic functions to the program without any additional effort on the programmer's part. Programs that use intrinsic functions are faster because they do not have the overhead of function calls, but they may be larger due to the additional code generated.<br><br></li>
<li>
In Microsoft C++, a library function, such as <b>strcmp</b> or <b>strcpy</b>, that has an intrinsic form. Use of the <code>#pragma intrinsic</code> compiler directive generates these functions as inline code rather than as function calls.</li>
</ol>

<h3><a name="_gloss_ip"></a>IP</h3>
<p>
The basic protocol of the Internet. It enables the delivery of individual packets from one host to another. It makes no guarantees about whether or not the packet will be delivered, how long it will take, or if multiple packets will arrive in the order they were sent. Protocols built on top of this add the notions of connection and reliability.</p>

<h3><a name="_gloss_ip_address"></a>IP address</h3>
<p>
The Internet protocol address which is a 32-bit address assigned to a host. The IP address has a host component and a network component.</p>

<h3><a name="_gloss_ip_number"></a>IP number</h3>
<p>
An Internet address that is a unique number consisting of 4 parts separated by dots, sometimes called a "dotted quad" (for example, 198.204.112.1). Every Internet computer has an IP number and most computers also have one or more domain names that are plain-language substitutes for the dotted quad.</p>

<h3><a name="_gloss_ipe"></a>IPE</h3>
<p>
A Novell NetWare communication protocol that uses datagram sockets to route information packets over local-area and wide-area networks.</p>

<h3><a name="_gloss_irc"></a>IRC</h3>
<p>
A multi-user system where people convene on "channels" (a virtual place, usually with a topic of conversation) to talk in groups or privately on the Internet.</p>

<h3><a name="_gloss_isa"></a>ISA</h3>
<p>
Internet server extension DLL.</p>

<h3><a name="_gloss_isam"></a>ISAM</h3>
<p>
Pronounced "EYE-sam." A scheme for decreasing the time necessary to locate a data record within a large database, given a unique key for the record. The key is the field in the record used to reference the record.</p>

<h3><a name="_gloss_isapi"></a>ISAPI</h3>
<p>
A set of functions for Internet servers, such as a Windows NT Server running Microsoft Internet Information Server (MIIS).</p>

<h3><a name="_gloss_isapi_filter"></a>ISAPI filter</h3>
<p>
An Internet server filter packaged as a dynamic-link library that runs on ISAPI-enabled servers.</p>

<h3><a name="_gloss_isdn"></a>ISDN</h3>
<p>
A type of digital communications service offered by telephone companies. It can carry data, voice, and video over specially conditioned high-speed telephone lines delivering two 64,000 bps bearer channels and one 16,000 bps data signaling channel.</p>

<h3><a name="_gloss_iso.2f.osi"></a>ISO/OSI</h3>
<p>
International Organization for Standardization/Open Systems Interconnection</p>

<h3><a name="_gloss_isp"></a>ISP</h3>
<p>
A company that provides access to end users of the Internet, as opposed to Network Service Providers (NSPs).</p>

<h3><a name="_gloss_item_moniker"></a>item moniker</h3>
<p>
A moniker based on a string that identifies an object in a container. Item monikers can identify objects smaller than a file, including embedded objects in a compound document, or a pseudo-object. See also moniker, file moniker, generic composite moniker, pseudo-object.</p>
</FONT></BODY>
</HTML>
