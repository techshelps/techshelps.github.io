<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary B</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_b"></a><sup></sup>Glossary B</h1>

<h3><a name="_gloss_backbone"></a>backbone</h3>
<p>
A high-performance network connecting other networks.</p>

<h3><a name="_gloss_background_color"></a>background color</h3>
<p>
The color of the client area of an empty window or display screen, on which all drawing and color display take place. See also background mode, foreground color.</p>

<h3><a name="_gloss_background_mode"></a>background mode</h3>
<p>
A mode that defines how background colors are mixed with existing window or screen colors for bitmap and text operations. The background mode can be either opaque (the default) or transparent.</p>

<h3><a name="_gloss_backward_compatibility"></a>backward compatibility</h3>
<ol>
<li>
Ensuring that existing applications will continue to work in the new environment.<br><br></li>
<li>
Ensuring that the new release of an application will be able to handle files created by a previous version of the product.</li>
</ol>

<h3><a name="_gloss_bandwidth"></a>bandwidth</h3>
<p>
The amount of data that can travel through a circuit, usually indicated in bits per second (bps). A measure of capacity, not speed.</p>

<h3><a name="_gloss_bandwidth_on_demand"></a>bandwidth on demand</h3>
<p>
In ISDN, the ability to aggregate B channels as the data traffic exceeds preset thresholds.</p>

<h3><a name="_gloss_base_address"></a>base address</h3>
<p>
In relation to memory locations, the portion of a two-part address that remains constant and provides a reference point, or base, from which the location of a byte of data can be calculated. A base address is accompanied by an offset value that is added to the base to determine the exact location (the absolute address) of the information.</p>

<h3><a name="_gloss_base_class"></a>base class</h3>
<p>
In C++, a class from which other classes are derived by inheritance. See also abstract class, derived class, virtual base class.</p>

<h3><a name="_gloss_base_line"></a>base line</h3>
<p>
In the printing and on-screen display of characters, an invisible, horizontal line within a character cell of a given font. Most characters sit on the base line, although some characters, such as <i>g</i> and <i>j</i>, descend below it.</p>

<h3><a name="_gloss_base_name"></a>base name</h3>
<p>
The portion of the filename that precedes the extension. For example, SAMPLE is the base name of the file SAMPLE.ASM. See also filename extension.</p>

<h3><a name="_gloss_base_priority"></a>base priority</h3>
<p>
In multitasking, the priority level that provides the basis for calculating a thread's dynamic priority for CPU time. A thread inherits its base priority from the process in which the thread was created. The scheduler, which determines the order in which threads should execute, can temporarily boost the priority of a thread, but it cannot reduce the priority below this base priority.</p>

<h3><a name="_gloss_based_code"></a>BASED_CODE</h3>
<p>
A 16-bit MFC macro that ensures that data will be placed in the code segment instead of the data segment. Under Win32, this macro expands to nothing and is provided for backward compatibility.</p>

<h3><a name="_gloss_basic_input.2d.output_system"></a>basic input-output system</h3>
<p>
A set of routines that work closely with the hardware and the operating system to support the transfer of information between elements of the system, such as memory, disks, and the monitor.</p>

<h3><a name="_gloss_basic_rate_interface"></a>basic rate interface</h3>
<p>
An ISDN service that consists of two 64-Kbps bearer channels (B channels) and one 16-Kbps signaling channel (D channel) referred to as 2B+D.</p>

<h3><a name="_gloss_batch_file"></a>batch file</h3>
<p>
An unformatted text file that contains one or more commands, either internal operating-system commands or program names. A batch file is executable and can be run from the command line.</p>

<h3><a name="_gloss_bearer_channel"></a>bearer channel</h3>
<p>
Or B channel. A fundamental component of ISDN interfaces. The channel carries 64,000 bits per second in either direction, is circuit switched, and may be able to carry either voice or data, depending on how the local telephone company provides its ISDN service.</p>

<h3><a name="_gloss_big.2d.endian"></a>big-endian</h3>
<p>
One of two byte-ordering conventions used on different machines. In big-endian addressing, the address points to the most significant byte of the word. Scalar Processor ARChitecture (SPARC) and Motorola 680x0 machines are big-endian machines. See also little-endian.</p>

<h3><a name="_gloss_binary"></a>binary</h3>
<ol>
<li>
The base-2 counting system, whose digits are 0 and 1. <br><br></li>
<li>
An executable file — one that is in binary, or machine-readable, form. See also binary file.<br><br></li>
<li>
A means of opening a file for input and output (binary mode versus text mode).</li>
</ol>

<h3><a name="_gloss_binary_file"></a>binary file</h3>
<p>
Or binaries. A file that consists of binary data or executable code. For example, a C++ executable file is a binary file. See also text file.</p>

<h3><a name="_gloss_binary_large_object"></a>binary large object</h3>
<ol>
<li>
Or binary data object. A large piece of data, such as a bitmap. A BLOB is characterized by large field values, an unpredictable table size, and data that is formless from the perspective of a program.<br><br></li>
<li>
A keyword designating the BLOB structure, which contains information about a block of data.</li>
</ol>

<h3><a name="_gloss_binary_operator"></a>binary operator</h3>
<p>
An operator that takes two operands. In C, binary operators are the multiplicative operators (<b>*</b>, <b>/</b>, <b>%</b>), additive operators (<b>+</b>, <b>-</b>), shift operators (<b>&lt;&lt;</b>, <b>&gt;&gt;</b>), relational operators (<b>&lt;</b>, <b>&gt;</b>, <b>&lt;=</b>, <b>&gt;=</b>, <b>==</b>, <b>!=</b>), bitwise operators (<b>&amp;</b>, <b>|</b>, <b>^</b>), logical operators (<b>&amp;&amp;</b>, <b>||</b>), the sequential-evaluation operator (<b>,</b>) the assignment operator (<b>=</b>), and the compound-assignment operators (<b>+=</b>, <b>*=</b>, etc.). See also ternary operator, unary operator.</p>

<h3><a name="_gloss_bind_context"></a>bind context</h3>
<p>
A COM object that is used in moniker operations to hold references the objects activated when a moniker is bound. See also asynchronous moniker, binding, generic composite moniker, and moniker.</p>

<h3><a name="_gloss_binding"></a>binding</h3>
<ol>
<li>
The association of two pieces of information with one another, most often used in terms of a symbol (such as the name of a variable) with some descriptive information (such as a memory address, a data type, or an actual value).<br><br></li>
<li>
In networking, a process that establishes the initial communication channel between the protocol driver and the network adapter card driver.<br><br></li>
<li>
In OLE, the process of getting a compound-document object into a running state so that it can be activated. See also activation.<br><br></li>
<li>
A Windows Sockets keyword that identifies the bind socket library routine. The bind routine associates a local address with a socket.</li>
</ol>

<h3><a name="_gloss_bios"></a>BIOS</h3>
<p>
A set of routines that work closely with the hardware and the operating system to support the transfer of information between elements of the system, such as memory, disks, and the monitor.</p>

<h3><a name="_gloss_bit_field"></a>bit field</h3>
<p>
A structure member whose width is specified in bits, or binary digits, rather than being specified implicitly as characteristic of the data type. When viewed in binary form, each bit or group of bits in the bit field corresponds to a specific field of information.</p>

<h3><a name="_gloss_bitmap"></a>bitmap</h3>
<ol>
<li>
Or pixel image, pixel map. An array of bits that contains data describing the colors found in a rectangular region on the screen (or the rectangular region found on a page of printed paper).<br><br></li>
<li>
Or bit image. A sequential collection of bits that represents, in memory, an image to be displayed on the screen or printed. See also bitmap file.</li>
</ol>

<h3><a name="_gloss_bitmap_file"></a>bitmap file</h3>
<ul type=disc>
<li>
A file that contains a collection of structures that specify or contain the following elements: <br><br></li>
<li>
A header that describes the resolution of the device on which the rectangle of pixels was created, the dimensions of the rectangle, the size of the array of bits, and so on. <br><br></li>
<li>
A logical palette. <br><br></li>
<li>
An array of bits that defines the relationship between pixels in the bitmapped image and entries in the logical palette.</li>
</ul>
<p>
Bitmap files usually have a .BMP filename extension. See also bitmap, device-independent bitmap file.</p>

<h3><a name="_gloss_bitmap.2d.stretching_mode"></a>bitmap-stretching mode</h3>
<p>
A mode that defines how information is removed from or combined together in bitmaps that are stretched or compressed. For example, a particular bitmap-stretching mode may preserve black pixels at the expense of colored or white pixels.</p>

<h3><a name="_gloss_bitwise_operator"></a>bitwise operator</h3>
<p>
An operator that works on individual bits of its operands. The bitwise-NOT (<b>~</b>) operator produces the bitwise complement of its operand. For example, ~1010 = 0101. The binary operators — bitwise-AND (<b>&amp;</b>), bitwise-OR (<b>|</b>), and bitwise-XOR (<b>^</b>) — compare each bit of the first operand to the corresponding bit of the second operand. For example, 1010 &amp; 0110 = 0010. See also logical operator.</p>

<h3><a name="_gloss_blob"></a>BLOB</h3>
<ol>
<li>
Or binary data object. A large piece of data, such as a bitmap. A BLOB is characterized by large field values, an unpredictable table size, and data that is formless from the perspective of a program.<br><br></li>
<li>
A keyword designating the <b>BLOB</b> structure, which contains information about a block of data.</li>
</ol>

<h3><a name="_gloss_bond"></a>BOND</h3>
<p>
In ISDN, the ability to aggregate B channels as the data traffic exceeds preset thresholds.</p>

<h3><a name="_gloss_bookmark"></a>bookmark</h3>
<p>
A marker that uniquely identifies a specific record or row in a database, a specific line in source code, or an item or location in a word-processing file. The HTML equivalent of a bookmark is an anchor with the NAME attribute; this type of anchor is used as a destination for hyperlinks. When creating HTML documents in Word for Windows, for example, you use bookmarks to create anchors with the NAME attribute.</p>

<h3><a name="_gloss_boolean"></a>Boolean</h3>
<p>
A binary algebra that uses the logical operators AND, OR, XOR, and NOT, and whose outcomes consist of logical values (either TRUE or FALSE). The keyword boolean indicates that the expression or constant expression associated with the identifier takes the value TRUE or FALSE. See also conditional expression.</p>

<h3><a name="_gloss_bounding_rectangle"></a>bounding rectangle</h3>
<p>
Or bounding box. A rectangular area that defines the outer limits of a rounded shape such as an ellipse, arc, or pie.</p>

<h3><a name="_gloss_breakpoint"></a>breakpoint</h3>
<p>
A location in a program where execution is stopped to allow the developer to examine the program's code, variables, and register values and, as necessary, to make changes, continue execution, or terminate execution.</p>

<h3><a name="_gloss_bri"></a>BRI</h3>
<p>
An ISDN service that consists of two 64-Kbps bearer channels (B channels) and one 16-Kbps signaling channel (D channel) referred to as 2B+D.</p>

<h3><a name="_gloss_bridge"></a>bridge</h3>
<ol>
<li>
A device that connects two segments or components of a network that use the same protocols. Used to overcome limitations on the physical length of a segment. See also brouter, router. <br><br></li>
<li>
In ISDN, a hardware device used for forwarding data between two networks. A bridge reads each packet’s address information, which is written into the packet at the data-link layer of the OSI model. Unlike a router, a bridge is not interested in the address on the remote LAN, but only in whether or not the packet should be forwarded.</li>
</ol>

<h3><a name="_gloss_brouter"></a>brouter</h3>
<p>
A device combining the functions of a bridge and a router by connecting two segments of a network and connecting two networks or a network to the Internet. See also bridge, router.</p>

<h3><a name="_gloss_browse_buttons"></a>browse buttons</h3>
<ol>
<li>
In Windows Help, a pair of buttons used to browse backwards and forwards through a sequence of Help topics. A browse sequence typically consists of two or more related topics that are intended to be read sequentially.<br><br></li>
<li>
In dialog boxes, buttons used to view a list of network servers, directories, files, etc.</li>
</ol>

<h3><a name="_gloss_browse_information_file"></a>browse information file</h3>
<p>
A file created from source browser information (.SBR) files, using the Microsoft Browse Information File Maintenance Utility (BSCMAKE). Browse information files can be examined in browse windows and usually have a .BSC extension.</p>

<h3><a name="_gloss_browser"></a>browser</h3>
<p>
A program used to view formatted Web documents.</p>

<h3><a name="_gloss_brush"></a>brush</h3>
<p>
A graphics object used to paint the interior of shapes and paths. A brush describes an 8- by 8-pixel bitmap. See also logical brush, physical brush.</p>

<h3><a name="_gloss_bscmake"></a>BSCMAKE</h3>
<p>
The Microsoft Browse Information File Maintenance utility. BSCMAKE uses source browser information (.SBR) files created by the compiler using&nbsp; the /FR or /Fr option, which are used to create browse information (.BSC) files.</p>

<h3><a name="_gloss_buffer"></a>buffer</h3>
<ol>
<li>
(noun) An intermediate repository of data — a reserved portion of memory in which data is temporarily held pending an opportunity to complete its transfer to or from a storage device or another location in memory.<br><br></li>
<li>
(verb) To store or collect in a buffer.</li>
</ol>

<h3><a name="_gloss_build"></a>build</h3>
<ol>
<li>
(noun) The process of compiling and linking source code to generate an executable program, library, Help file, or other run-time file. The files produced from the build process are also sometimes referred to as a "build."<br><br></li>
<li>
(verb) To compile and link source code in order to generate an executable program, Help file, or other run-time file.</li>
</ol>

<h3><a name="_gloss_build_tag"></a>build tag</h3>
<p>
A string assigned to a topic that the Help project file can specify to include or not include in a build. Build tags can be made up of any alphanumeric characters and are not case-sensitive. They provide a means of supporting different versions of a Help system without the need to create different source files for each version. Topics without build tags are always included in a build, along with all tagged topics not expressly excluded from that particular build in the build expression.</p>

<h3><a name="_gloss_built.2d.in_type"></a>built-in type</h3>
<p>
A data type that is intrinsic to the programming language. Contrast with user-defined types.</p>

<h3><a name="_gloss_bulk_record_field_exchange"></a>bulk record field exchange</h3>
<p>
When bulk row fetching is implemented, the mechanism by which MFC ODBC classes transfer data between the field data members of a recordset object and the corresponding columns of an external data source. See also record field exchange (RFX), DAO record field exchange (DFX), dialog data exchange (DDX).</p>

<h3><a name="_gloss_bulk_rfx"></a>bulk RFX</h3>
<p>
When bulk row fetching is implemented, the mechanism by which MFC ODBC classes transfer data between the field data members of a recordset object and the corresponding columns of an external data source. See also record field exchange (RFX), DAO record field exchange (DFX), dialog data exchange (DDX).</p>

<h3><a name="_gloss_bulk_row_fetching"></a>bulk row fetching</h3>
<p>
In ODBC, the process of retrieving multiple rows from the data source in a single fetch operation. The number of rows retrieved depends on the recordset object's setting for the rowset size.</p>

<h3><a name="_gloss_button_control"></a>button control</h3>
<p>
A graphical control that enables a user to provide input to an application. Windows provides five kinds of button controls: pushbuttons, check boxes, radio buttons, group boxes, and owner-draw buttons.</p>

<h3><a name="_gloss_byte"></a>byte</h3>
<p>
A unit of information consisting of 8 bits. A byte, or "binary term," is the smallest collection of bits that can be accessed directly.</p>

<h3><a name="_gloss_bytecode"></a>bytecode</h3>
<p>
Machine-independent code generated by the Java compiler and executed by the Java interpreter or compiled at the last minute by a JIT compiler.</p>
</FONT></BODY>
</HTML>
