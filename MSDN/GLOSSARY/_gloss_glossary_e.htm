<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary E</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_e"></a><sup></sup>Glossary E</h1>

<h3><a name="_gloss_edit_buffer"></a>edit buffer</h3>
<p>
In MFC database classes, a buffer that contains the current record during an update. Update operations may use this buffer to manage changes to the data source.</p>

<h3><a name="_gloss_edit_control"></a>edit control</h3>
<p>
Or edit box, text box. A rectangular control window that a user can use to type and edit text. See also static control.</p>

<h3><a name="_gloss_editbin"></a>EDITBIN</h3>
<p>
Or COFF Binary File Editor. The Microsoft 32-Bit binary file editor for modifying 32-bit Common Object File Format (COFF) binary files. Use EDITBIN to modify object files, executable files, and dynamic-link libraries (DLLs). You can also use EDITBIN to convert the format of an Object Model Format (OMF) input file to COFF.</p>

<h3><a name="_gloss_embedded_item"></a>embedded item</h3>
<p>
Or embedded object. A type of compound-document item in which all the information needed to manage the item is stored in the container document, but which is created and edited by a server application. Embedded items can be edited or activated in-place. See also linked item.</p>

<h3><a name="_gloss_encapsulation"></a>encapsulation</h3>
<p>
In object-oriented programming, the process of hiding the internal workings of a class to support or enforce abstraction. A class's interface, which is public, describes what a class can do, while the&nbsp; implementation, which is private or protected, describes how it works.</p>

<h3><a name="_gloss_encryption"></a>encryption</h3>
<p>
The transformation of data into a form unintelligible to anyone without a secret decryption key and algorithm. Its purpose is to ensure privacy by keeping the information hidden from anyone for whom it is not intended.</p>

<h3><a name="_gloss_end_of_file"></a>end of file</h3>
<p>
A value returned by an I/O routine when the end of a file (or, in some cases, an error) is encountered. The iostream library function <b>eof</b> returns TRUE on the end-of-file condition. When a file is opened in text mode, a logical end of file occurs whenever a CTRL+Z character is encountered.</p>

<h3><a name="_gloss_entry_point"></a>entry point</h3>
<p>
A starting address for a function, executable file, or dynamic-link library.</p>

<h3><a name="_gloss_environment_variable"></a>environment variable</h3>
<p>
A symbolic variable that represents an element of the user's operating system environment, such as a path, a directory name, or a configuration string. For example, the environment variable PATH represents the directories to search for executable files.</p>

<h3><a name="_gloss_eof"></a>EOF</h3>
<p>
A value returned by an I/O routine when the end of a file (or, in some cases, an error) is encountered. The iostream library function <b>eof</b> returns TRUE on the end-of-file condition. When a file is opened in text mode, a logical end of file occurs whenever a CTRL+Z character is encountered.</p>

<h3><a name="_gloss_epilog_code"></a>epilog code</h3>
<p>
See prolog/epilog code sequence.</p>

<h3><a name="_gloss_error_message"></a>error message</h3>
<p>
A message from the system or a program advising the user of a problem that requires human intervention in order to be solved.</p>

<h3><a name="_gloss_escape_sequence"></a>escape sequence</h3>
<p>
In C/C++, a character combination consisting of a backslash (\) followed by a letter or by a combination of digits. An escape sequence is regarded as a single character and is therefore valid as a character constant. Escape sequences are typically used to provide literal representations of nonprinting characters, such as the newline character (\n) and characters that have special meanings in the C/C++ language, such as the double quotation mark (\").</p>

<h3><a name="_gloss_event"></a>event</h3>
<ol>
<li>
In OLE, a notification message sent from one object to another (e.g. from a control to its container) in response to a state change or a user action.<br><br></li>
<li>
More generally, any action or occurrence, often generated by the user, to which a program might respond. Typical events include keystrokes, mouse movements, and button clicks.</li>
</ol>

<h3><a name="_gloss_event_object"></a>event object</h3>
<p>
A synchronization object that allows one thread to notify another that an event has occurred. Event objects are useful when a thread needs to know when to perform its task. For example, a thread that copies data to a data archive would need to be notified when new data is available. By using an event object to notify the copy thread when new data is available, the thread can perform its task as soon as possible.</p>

<h3><a name="_gloss_exception"></a>exception</h3>
<p>
An abnormal condition or error that occurs during the execution of a program and that requires the execution of software outside the normal flow of control. Examples of exceptions are running out of memory, resource allocation errors, and failure to find files. See also C++ exception handling, structured exception handling (SEH).</p>

<h3><a name="_gloss_exception_handler"></a>exception handler</h3>
<p>
A block of code that reacts to a specific type of exception. If the exception is for an error from which the program can recover, the program can resume executing after the exception handler has executed. In this case, execution will resume where the exception was handled, not at the place where it was generated.</p>

<h3><a name="_gloss_executable_file"></a>executable file</h3>
<p>
A program file created from one or more source code files translated into machine code and linked together. The MS-DOS, Windows, and Windows NT operating systems use the .EXE filename extension to indicate that the file is a runnable program.</p>

<h3><a name="_gloss_execution_character_set"></a>execution character set</h3>
<p>
The character set on the machine where the program executes. For Microsoft C and C++, the execution set is the standard ASCII character set. See also source character set.</p>

<h3><a name="_gloss_explicit_initializer"></a>explicit initializer</h3>
<p>
An initial value that is explicitly stated when a program variable is declared. In C++, a single initializer can be supplied with the simple-assignment (<b>=</b>) operator, as follows: </p>
<pre><code>int nCount = 0;</code></pre>
<p>
or an initializer list can be supplied, enclosed in parentheses:</p>
<pre><code>CString strFileName("FILE.DAT");
CRect *pRect = new CRect(10, 15, 24, 97);</code></pre>

<h3><a name="_gloss_explicit_linking"></a>explicit linking</h3>
<p>
The process in which an executable file must make function calls to load and unload a DLL and to access the DLL’s exported functions. The client executable must call the exported functions through a function pointer. Contrast with implicit linking.</p>

<h3><a name="_gloss_exported_function"></a>exported function</h3>
<p>
One called by other executing entities, such as DLLs or executable files. Typically, a DLL will need to export functions to allow its clients to control it. Functions can be exported by using either a module-definition (.DEF) file or the <b>__declspec</b> (<b>dllexport</b>) storage-class modifier, a Microsoft-specific extension to the C language. This modifier ensures that other applications and dynamic-link libraries will be able to obtain, dynamically at runtime, the address of the variable or function to which it applies. See also imported function.</p>

<h3><a name="_gloss_exports_file"></a>exports file</h3>
<p>
A file that contains information about exported functions and data items. The Microsoft 32-Bit Library Manager tool (LIB.EXE) generates the exports file from the module-definition (.DEF) file. The linker uses the exports file to build the dynamic-link library (.DLL) file. Exports files have a .EXP filename extension.</p>

<h3><a name="_gloss_exposed_interface"></a>exposed interface</h3>
<p>
In C++, the public members of a class that are accessible to client code.</p>

<h3><a name="_gloss_expression"></a>expression</h3>
<p>
A sequence of tokens that can be evaluated.</p>

<h3><a name="_gloss_expression_statement"></a>expression statement</h3>
<p>
An expression followed by a semicolon (;). All expressions in an expression statement are evaluated and all side effects are completed before the next statement is executed. The most common expression statements are assignments and function calls.</p>

<h3><a name="_gloss_extended_property"></a>extended property</h3>
<p>
A run-time property, such as a control's position and size, that is exposed and managed by the container instead of by the control. The implementation of extended properties makes them indistinguishable from normal properties.</p>

<h3><a name="_gloss_external_linkage"></a>external linkage</h3>
<p>
Specifies the way the names of objects and functions are shared between translation units. With external linkage, names can refer to program elements in any translation unit in the program — the program element is shared among the translation units and the same name in another translation unit is guaranteed to refer to the same object or class. Names with external linkage are sometimes termed "global." The keyword <b>extern</b> before a name declaration ensures external linkage. See also internal linkage.</p>

<h3><a name="_gloss_external_name"></a>external name</h3>
<ol>
<li>
In OLE Automation, an identifier that a class exposes to other applications. Automation clients use the external name to request an object of this class from an automation server.<br><br></li>
<li>
In C/C++, an identifier declared with global scope or declared using the <b>extern</b> storage class.</li>
</ol>

<h3><a name="_gloss_extraction_.283e3e29_.operator"></a>extraction (&gt;&gt;) operator</h3>
<p>
Or get-from operator, input operator. In C++, the right-shift operator, overloaded (in the iostream library) to accept input. The left operand must be the predefined input stream <b>cin</b> and the right operand must be a variable. See also insertion (<b>&lt;&lt;</b>) operator.</p>
</FONT></BODY>
</HTML>
