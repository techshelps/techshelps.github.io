<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary D</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_d"></a><sup></sup>Glossary D</h1>

<h3><a name="_gloss_dag"></a>DAG</h3>
<p>
In programming, an abstract data type often used to represent arbitrary relationships between objects. The graph consists of nodes (data objects) connected by paths that have direction; there are no cycles in the graph. In object-oriented program design, DAGs are useful for depicting inheritance relationships among classes.</p>

<h3><a name="_gloss_dao"></a>DAO</h3>
<p>
A high-level set of objects that insulates developers from the physical details of reading and writing records. In a database application, for example, these objects include databases, table definitions, query definitions, fields, indexes, etc.</p>

<h3><a name="_gloss_dao_record_field_exchange"></a>DAO record field exchange</h3>
<p>
The mechanism by which the MFC DAO classes transfer data between the field data members of a recordset object and the corresponding columns of an external data source. See also record field exchange (RFX), bulk record field exchange (Bulk RFX), dialog data exchange (DDX).</p>

<h3><a name="_gloss_data_access_objects"></a>Data Access Objects</h3>
<p>
A high-level set of objects that insulates developers from the physical details of reading and writing records. In a database application, for example, these objects include databases, table definitions, query definitions, fields, indexes, etc.</p>

<h3><a name="_gloss_data_binding"></a>data binding</h3>
<p>
A notification mechanism that links control properties through the container to a data source, such as a database field.</p>

<h3><a name="_gloss_data_declaration"></a>data declaration</h3>
<p>
A statement within a program that specifies the characteristics of a variable. Most programming languages allow (or require) specification of a variable's name and data type and possibly its initial value as well. Array declarations usually require a size specification in addition to the name and type, and record declarations must specify the elements of the record. See also data type, type declaration.</p>

<h3><a name="_gloss_data_definition_language"></a>data definition language</h3>
<p>
Or database design language, data design language. A language, usually a part of a database management system, that defines all attributes and properties of a database, especially record layouts, field definitions, key fields (and, sometimes, keying methodology), file locations, and storage strategy.</p>

<h3><a name="_gloss_data_field"></a>data field</h3>
<ol>
<li>
A well-defined portion of a data record, such as a column in a database table.<br><br></li>
<li>
The physical representation of a unit of data.</li>
</ol>

<h3><a name="_gloss_data_file"></a>data file</h3>
<p>
A file consisting of data — text, numbers, or graphics, for example. Such a file is distinct from a program file of executable instructions.</p>

<h3><a name="_gloss_data_fork"></a>data fork</h3>
<p>
The portion of an Apple Macintosh file that contains user-supplied information. See also resource fork.</p>

<h3><a name="_gloss_data_handle"></a>data handle</h3>
<p>
In Microsoft Windows, a 32-bit value used to provide access to data in a dynamic data exchange (DDE) object.</p>

<h3><a name="_gloss_data_link"></a>data link</h3>
<p>
A connection that passes values between two objects or locations.</p>

<h3><a name="_gloss_data_map"></a>data map</h3>
<p>
In MFC, a mechanism that automates the process of gathering values from a dialog box by providing functions to initialize the controls in the dialog box with the proper values, retrieve the data, and validate the data.</p>

<h3><a name="_gloss_data_member"></a>data member</h3>
<p>
A data object defined as part of a class. See also member function.</p>

<h3><a name="_gloss_data_segment"></a>data segment</h3>
<p>
The portion of memory or auxiliary storage that contains the data needed by an application or a portion of an application. Usually, the data segment is readable and writable.</p>

<h3><a name="_gloss_data_source"></a>data source</h3>
<p>
In ODBC, a specific set of data, the information required to access that data, and the location of the data source, which can be described using a data source name. From a program's point of view, the data source includes the data, the DBMS, the network (if any), and ODBC.</p>

<h3><a name="_gloss_data_source_name"></a>data source name</h3>
<p>
The name of a data source that applications use to request a connection to the data source. For example, a data source name can be registered with ODBC through the ODBC Administrator program.</p>

<h3><a name="_gloss_data_structure"></a>data structure</h3>
<p>
An organizational scheme, such as a record or an array, applied to data so that it can be interpreted and so that specific operations can be performed on that data.</p>

<h3><a name="_gloss_data_symbol"></a>data symbol</h3>
<p>
The name that identifies the memory location of a global or static data object. The concept of data symbol includes all data objects except local (stack-allocated) or dynamically allocated data.</p>

<h3><a name="_gloss_data_transfer_object"></a>data transfer object</h3>
<p>
An object that implements the <b>IDataObject</b> interface and contains data to be transferred from one object or application to another through either the Clipboard or drag-and-drop operations.</p>

<h3><a name="_gloss_data_type"></a>data type</h3>
<p>
In programming, a definition of a set of data that specifies the possible range of values of the set, the operations that can be performed on the values, and the way in which the values are stored in memory. See also aggregate type, scalar type.</p>

<h3><a name="_gloss_data.2d.access_application"></a>data-access application</h3>
<p>
An application used to access data, typically in a database. See also database application.</p>

<h3><a name="_gloss_database_application"></a>database application</h3>
<p>
An application that manages files consisting of a number of records (or tables), each of which is constructed of fields (columns) of a particular type, together with a collection of operations that facilitate searching, sorting, recombination, and similar activities. See also data-access application, relational database.</p>

<h3><a name="_gloss_database_form"></a>database form</h3>
<p>
A structured window, box, or other self-contained presentation element built into a database application that allows the user to perform a variety of data-access tasks, including data entry, read-only examination of data, and data updates. The form acts as a visual filter for the underlying data it is presenting, generally offering the advantages of better data organization and greater ease of viewing.</p>

<h3><a name="_gloss_database_management_system"></a>database management system</h3>
<p>
A layer of software between the physical database and the user. The DBMS manages all requests for database action (for example, queries or updates) from the user. Thus, the user is spared the necessity of keeping track of the physical details of file locations and formats, indexing schemes, and so on. In addition, a DBMS may permit centralized control of security and data-integrity requirements.</p>

<h3><a name="_gloss_database_schema"></a>database schema</h3>
<p>
A description of the current structure of tables and views in a database. The schema describes the columns in each table and the data type of each column.</p>

<h3><a name="_gloss_datagram"></a>datagram</h3>
<p>
Describes a communications protocol or transport in which data packets are routed independently of each other and may follow different routes and arrive in a different order from which they were sent. UDP and IPX are examples of transport-layer datagram protocols. Contrast with streaming.</p>

<h3><a name="_gloss_datagram_socket"></a>datagram socket</h3>
<p>
A connectionless socket that provides a bidirectional flow of data. Datagram data may arrive out of order and possibly duplicated, but record boundaries in the data are preserved, as long as the records are smaller than the receiver's internal size limit. An example of a datagram socket is an application that keeps system clocks on the network synchronized. See also stream socket, transport protocol.</p>

<h3><a name="_gloss_dbcs"></a>DBCS</h3>
<p>
A character set that can be used to represent Far Eastern languages that use ideographic characters. Like a multibyte character set (MBCS), a DBCS contains both single- and double-byte characters. DBCS characters are addressed using two bytes. The DBCS single-byte characters conform to the 8-bit national standards for each country and correspond closely to the ASCII character set. See also lead byte, trail byte, Unicode.</p>

<h3><a name="_gloss_dbms"></a>DBMS</h3>
<p>
A layer of software between the physical database and the user. The DBMS manages all requests for database action (for example, queries or updates) from the user. Thus, the user is spared the necessity of keeping track of the physical details of file locations and formats, indexing schemes, and so on. In addition, a DBMS may permit centralized control of security and data-integrity requirements.</p>

<h3><a name="_gloss_dc"></a>DC</h3>
<p>
A data structure defining the graphic objects, their associated attributes, and the graphic modes affecting output on a device. See also graphic object, metafile.</p>

<h3><a name="_gloss_dce"></a>DCE</h3>
<p>
The Open Software Foundation’s specification for a set of integrated services, including remote procedure calls, distributed file systems, and security services. The OSF-DCE RPC standard is the basis for Microsoft RPC.</p>

<h3><a name="_gloss_ddb"></a>DDB</h3>
<p>
There are two types of DDBs: discardable and nondiscardable. A discardable DDB is a bitmap that is discarded if the bitmap is not selected into a device context and if system memory is low. Device-dependent bitmaps are supported only for compatibility with applications written for earlier Windows versions. A developer writing a new application, or porting an application written for a previous version of Windows to the Win32 platform, should use device-independent bitmaps.</p>

<h3><a name="_gloss_dde"></a>DDE</h3>
<p>
A form of interprocess communications that uses shared memory to exchange data between applications. DDE can be used for one-time data transfers and for ongoing exchanges by applications that send updates to one another as new data becomes available. See also client/server, OLE Automation.</p>

<h3><a name="_gloss_ddl"></a>DDL</h3>
<p>
Or database design language, data design language. A language, usually a part of a database management system, that defines all attributes and properties of a database, especially record layouts, field definitions, key fields (and, sometimes, keying methodology), file locations, and storage strategy.</p>

<h3><a name="_gloss_ddv"></a>DDV</h3>
<p>
In MFC, a method for checking data as it is transferred from the controls in a dialog box. DDV is an easy way to validate data entry in a dialog box. See also dialog data exchange (DDX).</p>

<h3><a name="_gloss_ddx"></a>DDX</h3>
<p>
In MFC, a method for transferring data between the controls of a dialog box and their associated variables. DDX is an easy way to initialize the controls in a dialog box and to gather data input by the user. See also dialog data validation (DDV).</p>

<h3><a name="_gloss_dead_key"></a>dead key</h3>
<p>
On some non-English keyboards, a key that is used with another key to create an accented character. A dead key, when pressed, produces no visible character but indicates that the diacritic it represents is to be combined with the character produced by the next letter key pressed.</p>

<h3><a name="_gloss_deadlock"></a>deadlock</h3>
<p>
A state in which every process in a set of processes is waiting for an event or resource that only another process in the set can provide. For example, in data communications, a deadlock can occur when both the sending and receiving sockets are waiting on each other, or for a common resource.</p>

<h3><a name="_gloss_debug_memory_allocator"></a>debug memory allocator</h3>
<p>
A memory allocation function that allows you to validate and track the memory allocated for your objects on the global heap. For example, the Debug version of the Microsoft Foundation Class Library has memory allocation functions.</p>

<h3><a name="_gloss_debug_monitor"></a>debug monitor</h3>
<p>
Or remote monitor. A small program that resides on the target machine and controls the execution of the remote program and communication with the Microsoft Visual C++ debugger. See also remote debugging.</p>

<h3><a name="_gloss_debug_terminal"></a>debug terminal</h3>
<p>
A dumb terminal or computer other than the developer's primary machine, to which debugging output is sent.</p>

<h3><a name="_gloss_debug_version"></a>debug version</h3>
<ol>
<li>
A version of a program built with symbolic debugging information. See also release version.<br><br></li>
<li>
Or debug library. A library version (for example, of the Microsoft Foundation Class Library) that includes diagnostic aids and performs various integrity checks to aid in debugging a program. See also release version.</li>
</ol>

<h3><a name="_gloss_debugger"></a>debugger</h3>
<p>
A program designed to help find errors in another program by allowing the programmer to step through the program, examine data, and check conditions. There are two basic types of debuggers. Machine-level debuggers display the actual machine instructions (disassembled into assembly language) and allow the programmer to look at registers and memory locations. Source-level debuggers let programmers look at the original source code, examine variables and data structures by name, and so on.</p>

<h3><a name="_gloss_debugging_event"></a>debugging event</h3>
<p>
An incident in the process being debugged that causes the kernel to notify the debugger. Debugging events include creating a process, creating a thread, loading a dynamic-link library (DLL), unloading a DLL, sending an output string, and generating an exception.</p>

<h3><a name="_gloss_debugging_information"></a>debugging information</h3>
<p>
Symbolic information used by a debugger, especially information in the Microsoft Symbolic Debugging Information format that is used by the Microsoft CodeView debugger. Also, any data (information) generated by the debugging process.</p>

<h3><a name="_gloss_declaration"></a>declaration</h3>
<p>
A statement that binds an identifier to the information that relates to it. For example, to declare a constant means to bind the name of the constant with its value. To declare a variable means to bind the variable's name with a location in memory and with the information about the variable's data type. Declaration usually occurs within the source code of a program; the actual binding can take place at compile time or run time. Declaration can be performed explicitly (by specifying the identifier and relevant information in a declare statement) or implicitly (by using the undeclared identifier in a statement), depending on the language being used.</p>

<h3><a name="_gloss_declaration_statement"></a>declaration statement</h3>
<p>
A statement used to declare the names and data types of constants, variables, user-defined data types, and procedures. In C++, the declaration statement can also be an executable statement. For example:</p>
<pre><code>int i = fCount( );</code></pre>
<p>
declares an integer variable <code>i</code> and assigns it the value returned from the call to <code>fCount( )</code>.</p>

<h3><a name="_gloss_declarator"></a>declarator</h3>
<p>
The part of a declaration that names an object, type, or function. In C/C++, declarators appear in a declaration as one or more names separated by commas; each name can have an associated initializer.</p>

<h3><a name="_gloss_decorated_name"></a>decorated name</h3>
<p>
Or type-safe name, mangled name. In C++, a compiler-generated string that contains an undecorated (literal) name followed by a string of characters that the compiler and linker use to retain type information. Name decoration is necessary to resolve ambiguities that arise in C++ from having more than one function, for example, with the same name.</p>

<h3><a name="_gloss_decrement_.282d2d29_.operator"></a>decrement (--) operator</h3>
<p>
An operator that specifies that its integral or floating-point operand be decreased by the integer value 1. A decremented pointer points to the previous object. In the prefix form (<code>--i</code>), the decrement takes place before the value is used in expression evaluation; in the postfix form (<code>i--</code>), the decrement takes place after the value is used in expression evaluation. See also increment (<b>++</b>) operator.</p>

<h3><a name="_gloss_default_argument"></a>default argument</h3>
<p>
In a C++ function definition, an argument with an assigned value that specifies the value an argument should assume if none is supplied in the function call.</p>

<h3><a name="_gloss_default_constructor"></a>default constructor</h3>
<p>
In C++, a constructor that either accepts no arguments or for which all arguments have a default value. The default constructor can be defined by the user or generated by the compiler. See also constructor, copy constructor.</p>

<h3><a name="_gloss_default_message_processing"></a>default message processing</h3>
<p>
Message processing carried out by a default window procedure on any window messages for which there is not an explicit procedure defined in the application. In applications based on the Microsoft Foundation Class Library, <b>DefWindowProc</b> is the default window procedure.</p>

<h3><a name="_gloss_default_object_handler"></a>default object handler</h3>
<p>
A DLL provided with Automation that acts as a surrogate for the real object in the processing space of the container application. With the default object handler, it is possible to look at an object's stored data without actually activating the object. The default object handler performs other tasks, such as instantiating an object from its cached state when the object is loaded into memory.</p>

<h3><a name="_gloss_default_value"></a>default value</h3>
<p>
A value that the system or software assumes, unless the user makes an explicit choice.</p>

<h3><a name="_gloss_default_window_procedure"></a>default window procedure</h3>
<p>
A system-defined function that defines certain fundamental behavior shared by all windows. A default window procedure provides default processing for nonclient–area messages, system commands, system keystrokes, and other messages that the application-defined window procedure does not specifically handle. See also window procedure.</p>

<h3><a name="_gloss_definition"></a>definition</h3>
<p>
A construct that initializes and allocates storage for a variable, function, or class. For a function, the definition specifies the name, formal parameters, body, and return type; for a class, the definition specifies its data members and functions. See also declaration.</p>

<h3><a name="_gloss_delayed_rendering"></a>delayed rendering</h3>
<p>
Formatting data when it is requested, rather than when it first becomes available. For example, when placing a Clipboard format on the Clipboard, a window can delay transferring the data to that format until the data is needed. This is useful if the application supports several Clipboard formats, some or all of which are time-consuming to render.</p>

<h3><a name="_gloss_delimiter"></a>delimiter</h3>
<p>
A special character that sets off, or separates, individual items in a program or in a set of data. Programming languages typically delimit such variable-length elements as comments, strings, and program blocks. Databases use two forms of delimiters: field delimiters and record delimiters. Characters used as delimiters include commas, semicolons, tabs, carriage returns, and colons.</p>

<h3><a name="_gloss_derived_class"></a>derived class</h3>
<p>
In object-oriented programming, a class that is created from another class, called the "base class." A derived class inherits all the features of its base class. See also inheritance, polymorphism.</p>

<h3><a name="_gloss_descendant"></a>descendant</h3>
<ol>
<li>
In object-oriented programming, a class that is derived from another class. See also base class, derived class, inheritance.<br><br></li>
<li>
Generally, a process or task that is called by another process or task and whose characteristics and behavior are determined, at least in part, by the originating process or task. See also child process, child window.</li>
</ol>

<h3><a name="_gloss_descendant_window"></a>descendant window</h3>
<p>
A child window that is derived from a parent window. A child window has only one parent window, but a parent can have any number of child windows. Each child window, in turn, can have child windows. In this chain of windows, each child window is called a descendant window of the original parent window.</p>

<h3><a name="_gloss_description_block"></a>description block</h3>
<p>
In a makefile, a dependency line that specifies a block of commands to run if the listed targets and their dependents are out of date.</p>

<h3><a name="_gloss_deserialization"></a>deserialization</h3>
<p>
Re-creating an object by reading its state from persistent storage (usually a file) and reconstructing it in memory. See also serialization.</p>

<h3><a name="_gloss_desktop_management_interface"></a>Desktop Management Interface</h3>
<p>
A protocol-independent, multiplatform interface for workstation and network components.</p>

<h3><a name="_gloss_desktop_window"></a>desktop window</h3>
<p>
A system-defined window that paints the background of the screen and serves as the base for all windows displayed by all Windows-based applications.</p>

<h3><a name="_gloss_destructor"></a>destructor</h3>
<p>
In C++, a member function that is automatically called when a class object is destroyed (either by being explicitly deallocated or by going out of scope). Its purpose is to perform any cleanup work necessary before an object is destroyed. The destructor's name is the class name with a tilde (~) as a prefix. See also constructor.</p>

<h3><a name="_gloss_developer_studio_project_file"></a>Visual C++ Project file</h3>
<p>
Formerly known as the .MAK file. The project build file that specifies how to build a particular project in a project workspace. The file contains source file names and locations, build settings, and debug settings, including breakpoints and watches. In terms of source control, .DSP files can be shared.</p>

<h3><a name="_gloss_developer_studio_workspace_file"></a>Visual C++ Workspace file</h3>
<p>
A file created and maintained by Visual C++ that contains information formerly stored as part of the .MDP file. The file contains information about the project workspace such as a list of all the projects. This file is used by Visual C++ and should not be edited by the user. In terms of source control, the .DSW file can be shared.</p>

<h3><a name="_gloss_development_environment"></a>development environment</h3>
<p>
In Microsoft Visual Studio, an integrated set of Windows-based tools for completing, testing, and refining an application. Microsoft Visual Studio includes such features as various editors, project build facilities, compiler, an incremental linker (for C++), class viewer, and an integrated debugger.</p>

<h3><a name="_gloss_device_context"></a>device context</h3>
<p>
A data structure defining the graphic objects, their associated attributes, and the graphic modes affecting output on a device. See also graphic object, metafile.</p>

<h3><a name="_gloss_device_driver"></a>device driver</h3>
<p>
A low-level software component that permits device-independent software applications to communicate with a device such as a mouse, keyboard, monitor, or printer.</p>

<h3><a name="_gloss_device.2d.dependent_bitmap"></a>device-dependent bitmap</h3>
<p>
There are two types of DDBs: discardable and nondiscardable. A discardable DDB is a bitmap that is discarded if the bitmap is not selected into a device context and if system memory is low. Device-dependent bitmaps are supported only for compatibility with applications written for Windows versions earlier than 3.0. A developer writing a new application, or porting an application written for a previous version of Windows to the Win32 platform, should use device-independent bitmaps.</p>

<h3><a name="_gloss_device.2d.independent"></a>device-independent</h3>
<p>
A characteristic of software and files that generate the same output regardless of the hardware involved. A device-independent program could, for example, issue the same command to draw a rectangle regardless of whether the output device was a printer, a plotter, or a screen display.</p>

<h3><a name="_gloss_device.2d.independent_bitmap_file"></a>device-independent bitmap file</h3>
<p>
A file containing an array of bits combined with several structures that specify the width and height of the bitmapped image (in pixels), the color format of the device where the image was created, and the resolution of the device used to create that image. The DIB file format ensures that bitmap graphics created in one application can be loaded and displayed in another application exactly the way they appear in the originating application. See also bitmap, bitmap file.</p>

<h3><a name="_gloss_device.2d.mode_setting"></a>device-mode setting</h3>
<p>
A user-selected setting that contains information used by the relevant device driver. For example, device-mode settings for a laser printer setup could specify whether printing is to be in landscape or portrait mode, the size of paper used, and the quality of printing.</p>

<h3><a name="_gloss_dfx"></a>DFX</h3>
<p>
The mechanism by which the MFC DAO classes transfer data between the field data members of a recordset object and the corresponding columns of an external data source. See also record field exchange (RFX), bulk record field exchange (Bulk RFX), dialog data exchange (DDX).</p>

<h3><a name="_gloss_diagnostic_services"></a>diagnostic services</h3>
<p>
Services that facilitate program debugging. Diagnostic services include functions and macros to resolve assertions, errors, and exceptions; trace memory allocations; and resolve leaks; and report debug messages to the user — all during run time. In Microsoft Visual C++, most of these services require the debug version of the C run-time library.</p>

<h3><a name="_gloss_dial_on_demand"></a>dial on demand</h3>
<p>
In ISDN, a dial-up router function that activates a remote link only when data needs to be sent.</p>

<h3><a name="_gloss_dialog_bar"></a>dialog bar</h3>
<p>
A control bar that contains standard Windows controls. A dialog bar has dialog-box characteristics in that it contains controls and supports tabbing between them, and it uses a dialog template to represent the bar. Dialog bars can be aligned to the top, bottom, left, or right side of a frame window. See also status bar.</p>

<h3><a name="_gloss_dialog_box"></a>dialog box</h3>
<p>
In Windows, a child window used to retrieve user input. A dialog box usually contains one or more controls, such as buttons, list boxes, combo boxes, and edit boxes, with which the user enters text, chooses options, or directs the action of the command.</p>

<h3><a name="_gloss_dialog_data_exchange"></a>dialog data exchange</h3>
<p>
In MFC, a method for transferring data between the controls of a dialog box and their associated variables. DDX is an easy way to initialize the controls in a dialog box and to gather data input by the user. See also dialog data validation (DDV).</p>

<h3><a name="_gloss_dialog_data_validation"></a>dialog data validation</h3>
<p>
In MFC, a method for checking data as it is transferred from the controls in a dialog box. DDV is an easy way to validate data entry in a dialog box. See also dialog data exchange (DDX).</p>

<h3><a name="_gloss_dialog_editor"></a>dialog editor</h3>
<p>
A resource editor that allows you to place and arrange controls in a dialog-box template and to test the dialog box. The editor displays the dialog box exactly as the user will see it. While using the dialog editor, you can define message handlers and manage data gathering and validation with the ClassWizard.</p>

<h3><a name="_gloss_dialog_file"></a>dialog file</h3>
<p>
A file that contains dialog-box source code. Note that a dialog file is not required for a Visual C++ project because Visual C++ keeps this code in the resource-definition file.</p>

<h3><a name="_gloss_dialog_template"></a>dialog template</h3>
<p>
A template used by Windows to create a dialog window and display it. The template specifies the characteristics of the dialog box, including its overall size, initial location, and style, and the types and positions of its controls. A dialog template is usually stored as a resource, but templates can also be stored directly in memory. See also dialog file, dialog editor, resource-definition file.</p>

<h3><a name="_gloss_dialog_unit"></a>dialog unit</h3>
<p>
A unit of horizontal or vertical distance within a dialog box. A horizontal DLU is the average width of the current dialog-box font divided by 4. A vertical DLU is the average height of the current dialog-box font divided by 8.</p>

<h3><a name="_gloss_dialog.2d.based_architecture"></a>dialog-based architecture</h3>
<p>
An application that uses dialog boxes for user input. See also SDI, MDI.</p>

<h3><a name="_gloss_digital_signature"></a>digital signature</h3>
<p>
An electronic identifier used for security. It verifies that the document originated from the individual whose signature is attached to it and that it has not been altered since it was signed. Usually accomplished using some form of encryption.</p>

<h3><a name="_gloss_dimension"></a>dimension</h3>
<p>
The zero-based number or numbers inside brackets in an array declaration that define the array’s size. For example, <b>char</b> <i>p[10]</i> declares a one-dimensional character array that has ten elements. To declare arrays of two or more dimensions, place each dimension in its own set of brackets, as in <b>char</b> <i>x[10] [20]</i>.</p>

<h3><a name="_gloss_dimmed"></a>dimmed</h3>
<p>
Or disabled, grayed, unavailable. The state and visual appearance of controls or menu items whose functionality is not presently available to a user.</p>

<h3><a name="_gloss_direct_mode"></a>direct mode</h3>
<p>
A file-access mode that saves changes to the document as they are made. See also transacted mode.</p>

<h3><a name="_gloss_directed_acyclic_graph"></a>directed acyclic graph</h3>
<p>
In programming, an abstract data type often used to represent arbitrary relationships between objects. The graph consists of nodes (data objects) connected by paths that have direction; there are no cycles in the graph. In object-oriented program design, DAGs are useful for depicting inheritance relationships among classes.</p>

<h3><a name="_gloss_dirty"></a>dirty</h3>
<p>
Indicates that a file, object, or data item has been changed since the last time it was saved. Usually describes a flag or bit that is set to 1 when data changes and back to 0 when the data is saved to disk.</p>

<h3><a name="_gloss_disjoint_figure"></a>disjoint figure</h3>
<p>
A figure that consists of a set of points that are not logically sequential or physically adjacent to each other.</p>

<h3><a name="_gloss_disk_drive"></a>disk drive</h3>
<p>
A physical device that reads from or writes to disks. Disk drives are referenced by letters, typically A: for the first floppy-disk drive, B: for the second floppy-disk drive, C: for the first fixed-disk drive, D: for the second fixed-disk drive, and so on. Each drive (whether physical or logical) on an operating system is assigned a unique letter to distinguish it from other drives.</p>

<h3><a name="_gloss_dispatch_identifier_.28.id.29"></a>dispatch identifier (ID)</h3>
<p>
A 32-bit attribute value for identifying methods and properties in OLE Automation. All of the accessor functions for a single property have the same dispatch ID. The low-order 16 bits of the dispatch ID contain the distance from the top of the dispatch map; the high-order 16 bits contain the distance from the most derived class.</p>

<h3><a name="_gloss_dispatch_interface"></a>dispatch interface</h3>
<p>
In OLE Automation, the external programming interface of some grouping of functionality exposed by the automation server. For example, a dispatch interface might expose an application's mouse clicking and text data entry functions. See also type library file.</p>

<h3><a name="_gloss_dispatch_map"></a>dispatch map</h3>
<p>
In MFC, a set of macros that expands into the declarations and calls needed to expose methods and properties for OLE Automation. The dispatch map designates the internal and external names of object functions and properties, as well as the data types of the function arguments and properties.</p>

<h3><a name="_gloss_display_device_context"></a>display device context</h3>
<p>
A device context, created by Windows, that an application uses to paint and draw on a video display. Windows prepares a display device context for each window, or the screen, setting the drawing objects, colors, and modes for the device.</p>

<h3><a name="_gloss_distributed_computing_environment"></a>Distributed Computing Environment</h3>
<p>
The Open Software Foundation’s specification for a set of integrated services, including remote procedure calls, distributed file systems, and security services. The OSF-DCE RPC standard is the basis for Microsoft RPC.</p>

<h3><a name="_gloss_distributed_management_environment"></a>Distributed Management Environment</h3>
<p>
A strategy developed to manage distributed heterogeneous networks that conform to DCE.</p>

<h3><a name="_gloss_dithering"></a>dithering</h3>
<p>
A technique for increasing the perceived range of colors in an image at the cost of spatial resolution. Adjacent pixels are assigned differing color values; when viewed from a distance, these colors seem to blend into a single intermediate color. The technique is similar to the half-toning used in black-and-white publications to achieve shades of gray.</p>

<h3><a name="_gloss_dlu"></a>DLU</h3>
<p>
A unit of horizontal or vertical distance within a dialog box. A horizontal DLU is the average width of the current dialog-box font divided by 4. A vertical DLU is the average height of the current dialog-box font divided by 8.</p>

<h3><a name="_gloss_dme"></a>DME</h3>
<p>
A strategy developed to manage distributed heterogeneous networks that conform to DCE.</p>

<h3><a name="_gloss_dmi"></a>DMI</h3>
<p>
A protocol-independent, multiplatform interface for workstation and network components.</p>

<h3><a name="_gloss_dockable_toolbar"></a>dockable toolbar</h3>
<p>
A toolbar that can be attached, or "docked," to any side of its parent window, or "floated" in its own mini-frame window. See also docked toolbar, floating toolbar.</p>

<h3><a name="_gloss_docked_toolbar"></a>docked toolbar</h3>
<p>
A toolbar that is attached, or "docked," to any side of its parent window. See also dockable toolbar, floating toolbar.</p>

<h3><a name="_gloss_document"></a>document</h3>
<ol>
<li>
(noun) Any self-contained piece of work created with an application program and, if saved on disk, given a unique filename by which it can be retrieved. <br><br></li>
<li>
(verb) To explain or annotate something, such as comments within a program or a description of a problem in a bug report.</li>
</ol>

<h3><a name="_gloss_document_item"></a>document item</h3>
<p>
An object of a class derived from the <b>CDocItem</b> class, encapsulating some component of a document's data. Document items are used to represent OLE items in both client and server documents. See also client item, server item.</p>

<h3><a name="_gloss_document_object"></a>document object</h3>
<p>
An object that defines, stores, and manages an application's data. When the user opens an existing or new document, the application framework creates a document object to manage the data stored in the document.</p>

<h3><a name="_gloss_document_template"></a>document template</h3>
<p>
In MFC, a template used for the creation of documents, views, and frame windows. A single application object manages one or more document templates, each of which is used to create and manage one or more documents (depending on whether the application is SDI or MDI). Applications that support more than one type of document, such as spreadsheets as well as text, have multiple document template objects.</p>

<h3><a name="_gloss_document_window"></a>document window</h3>
<p>
In windowing environments, an on-screen window (enclosed work area) in which the user can create, view, or work on a document.</p>

<h3><a name="_gloss_document.2f.view_architecture"></a>document/view architecture</h3>
<p>
A design methodology that focuses on what the user sees and needs rather than on the application or what the application requires. This design is implemented by a set of classes that manage, store and present application-specific data. These classes can manipulate disk-based data files (document objects), display a document's data (view objects), and automatically use a particular type of window (window objects).</p>

<h3><a name="_gloss_domain_name"></a>domain name</h3>
<ol>
<li>
In general networking, a logical grouping of machines for network administration purposes.<br><br></li>
<li>
In TCP/IP, the unique name that identifies an Internet or network site. Domain names always have two or more parts, separated by dots (for example, <b>microsoft.com</b> or <b>www.microsoft.com</b>). The part on the left is the most specific, and the part on the right is the most general. A given machine may have more than one domain name, but a given domain name points to only one machine.</li>
</ol>

<h3><a name="_gloss_dots_per_inch"></a>dots per inch</h3>
<p>
A measure of screen and printer resolution that is expressed as the number of dots per horizontal or vertical inch that a device can print or display .</p>

<h3><a name="_gloss_double.2d.byte_character_set"></a>double-byte character set</h3>
<p>
A character set that can be used to represent Far Eastern languages that use ideographic characters. Like a multibyte character set (MBCS), a DBCS contains both single- and double-byte characters. DBCS characters are addressed using two bytes. The DBCS single-byte characters conform to the 8-bit national standards for each country and correspond closely to the ASCII character set. See also lead byte, trail byte, Unicode.</p>

<h3><a name="_gloss_doubleword"></a>doubleword</h3>
<p>
Or DWORD. A unit of data consisting of 4 contiguous bytes that are processed as a single unit by a computer's microprocessor.</p>

<h3><a name="_gloss_dpi"></a>DPI</h3>
<p>
A measure of screen and printer resolution that is expressed as the number of dots per horizontal or vertical inch that a device can print or display .</p>

<h3><a name="_gloss_drag.2d.and.2d.drop"></a>drag-and-drop</h3>
<p>
A technique for moving or copying data between applications, between windows within an application, or within a single window in an application. The user selects the data to be transferred and drags the data to the desired destination.</p>

<h3><a name="_gloss_driver"></a>driver</h3>
<ol>
<li>
A hardware device that controls or regulates another device. A line driver, for example, boosts signals transmitted over a communications line, and a bus driver amplifies and regulates signals transmitted over a bus (data pathway). <br><br></li>
<li>
A program that controls a device such as a printer or a mouse. See also device driver.</li>
</ol>

<h3><a name="_gloss_drop_source"></a>drop source</h3>
<p>
In a drag-and-drop operation, the window from which the user selects data for transfer. See also drop target.</p>

<h3><a name="_gloss_drop_target"></a>drop target</h3>
<p>
In a drag-and-drop operation, the destination window where the user drops the data being transferred. See also drop source.</p>

<h3><a name="_gloss_drop.2d.down_combo_box"></a>drop-down combo box</h3>
<p>
A combo box that contains a drop-down list and a selection field that the user can edit.</p>

<h3><a name="_gloss_drop.2d.down_list"></a>drop-down list</h3>
<p>
A list in a combo box that displays the current setting, but can be opened to display a list of choices. The user can select an item from the list to update the current setting.</p>

<h3><a name="_gloss_drop.2d.down_menu"></a>drop-down menu</h3>
<p>
A menu that is displayed when the user selects a particular entry from a menu bar. See also pop-up menu.</p>

<h3><a name="_gloss_dsn"></a>DSN</h3>
<p>
The name of a data source that applications use to request a connection to the data source. For example, a data source name can be registered with ODBC through the ODBC Administrator program.</p>

<h3><a name="_gloss_dual_interface"></a>dual interface</h3>
<p>
An interface that derives from <b>IDispatch</b> and supports both late-binding via <b>IDispatch</b> and early-binding (VTBL binding) via direct COM methods for each of its automation methods.</p>

<h3><a name="_gloss_dumpbin"></a>DUMPBIN</h3>
<p>
The Microsoft COFF Binary File Dumper (DUMPBIN.EXE). DUMPBIN displays information about 32-bit Common Object File Format (COFF) binary files. DUMPBIN can be used to examine COFF object files, standard libraries of COFF objects, executable files, and dynamic-link libraries (DLLs). DUMPBIN is a 32-bit tool that runs only from a command prompt.</p>

<h3><a name="_gloss_dynamic_binding"></a>dynamic binding</h3>
<p>
Especially in OLE, the conversion of symbolic addresses to memory addresses during program execution. More commonly called dynamic linking in Win32. Contrast with static binding.</p>

<h3><a name="_gloss_dynamic_creation"></a>dynamic creation</h3>
<p>
The process of creating an object of a specific class at run time. Do not confuse this dynamic creation of an object with the creation of a dynamic object, using the C++ <b>new</b> operator. Dynamic creation is not supported directly by the C++ language. Objects derived from the MFC class <b>CObject</b> can have this functionality.</p>

<h3><a name="_gloss_dynamic_data_exchange"></a>dynamic data exchange</h3>
<p>
A form of interprocess communications that uses shared memory to exchange data between applications. DDE can be used for one-time data transfers and for ongoing exchanges by applications that send updates to one another as new data becomes available. See also client/server, OLE Automation.</p>

<h3><a name="_gloss_dynamic_link"></a>dynamic link</h3>
<p>
A program link, to a library or to an object, that is established when the program is loaded into memory (load-time dynamic linking) or while it is running (run-time dynamic linking). See also dynamic-link library file, static link.</p>

<h3><a name="_gloss_dynamic_priority"></a>dynamic priority</h3>
<p>
A thread priority value used by the scheduler in making scheduling decisions. The value for each thread can never be lower than the thread's base priority, but it can be raised and then lowered to enhance responsiveness to input or other significant events.</p>

<h3><a name="_gloss_dynamic_splitter_window"></a>dynamic splitter window</h3>
<p>
A split-window style in which additional panes are created and destroyed as the user splits and unsplits views. Microsoft Excel and Microsoft Word are examples of applications that offer the dynamic splitter style. See also static splitter window.</p>

<h3><a name="_gloss_dynamic.2d.link_library_file"></a>dynamic-link library file</h3>
<p>
A file that contains one or more functions that are compiled, linked, and stored separately from the processes that use them. In Win32, the operating system maps the dynamic-link libraries (DLLs) into the address space of a process when the process is starting up or while it is running. The process then executes functions in the DLL. Dynamic-link library files usually have a .DLL filename extension.</p>

<h3><a name="_gloss_dynaset"></a>dynaset</h3>
<p>
A recordset (or set of records) with dynamic properties that is the result of a query on a database document. A dynaset can be used to add, change, and delete records from the underlying database table or tables. See also snapshot.</p>
</FONT></BODY>
</HTML>
