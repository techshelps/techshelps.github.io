<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Glossary F</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<FONT FACE="Verdana, Arial, Helvetica" SIZE="2">
<h1><a name="_gloss_glossary_f"></a><sup></sup>Glossary F</h1>

<h3><a name="_gloss_f1_help"></a>F1 Help</h3>
<p>
Context-sensitive Windows Help that the user obtains by pressing the F1 key. F1 Help opens Help on a topic associated with the currently selected item in the application. MFC supplies F1 Help for windows, dialog boxes, message boxes, menus, and toolbar buttons.</p>

<h3><a name="_gloss_faq"></a>FAQ</h3>
<p>
Documents that list and answer the most common questions on a particular subject.</p>

<h3><a name="_gloss_far_pointer"></a>far pointer</h3>
<p>
Or long pointer. In 16-bit programming, a 32-bit pointer, which is a pointer that can point anywhere in memory because it specifies both the segment and the offset for a memory location. In 32-bit programming, all pointers are 32 bits wide and there is no need to distinguish between near and far pointers.</p>

<h3><a name="_gloss_fat"></a>FAT</h3>
<p>
The file system that MS-DOS uses to store information on disks. The file allocation table, which the operating system creates when it formats a disk, holds information about the location of each file as it is stored. See also New Technology file system (NTFS), high-performance file system (HPFS).</p>

<h3><a name="_gloss_fatal_error"></a>fatal error</h3>
<p>
Or unrecoverable error, catastrophic error. An error that causes the system or a program to fail abruptly with no hope of recovery. An example of a fatal error is an uncaught exception that cannot be handled.</p>

<h3><a name="_gloss_favorite"></a>favorite</h3>
<p>
A reference in Internet Explorer to a page to which the user may want to return. Corresponds to "bookmark" in other browsers.</p>

<h3><a name="_gloss_field_data_member"></a>field data member</h3>
<p>
A data member of a recordset object that corresponds to a particular column (or field) in the query that the recordset represents. Collectively, these field data members make up a buffer that holds the fields of the current record. When the user scrolls to a new record, the database framework replaces the previous record's values with the values of the new current record.</p>

<h3><a name="_gloss_file_allocation_table_file_system"></a>file allocation table file system</h3>
<p>
The file system that MS-DOS uses to store information on disks. The file allocation table, which the operating system creates when it formats a disk, holds information about the location of each file as it is stored. See also New Technology file system (NTFS), high-performance file system (HPFS).</p>

<h3><a name="_gloss_file_buffer"></a>file buffer</h3>
<p>
A reserved portion of memory used to temporarily store data, pending an instruction to complete its transfer to or from a file.</p>

<h3><a name="_gloss_file_exception"></a>file exception</h3>
<p>
An exception (abnormal condition or error) that occurs during the course of opening, reading from, or writing to a file. See also C++ exception handling.</p>

<h3><a name="_gloss_file_handle"></a>file handle</h3>
<p>
A unique identifier that Windows assigns to a file when the file is opened or created. A file handle is valid until the file is closed.</p>

<h3><a name="_gloss_file_input.2f.output_.28.i.2f.o.29"></a>file input/output (I/O)</h3>
<p>
The mechanism for making data persistent between program work sessions by creating files, reading from files, and writing to files.</p>

<h3><a name="_gloss_file_moniker"></a>file moniker</h3>
<p>
A name based on a path in the file system. A file moniker can be used to identify an object that is saved in its own file. See also moniker, item moniker, generic composite moniker.</p>

<h3><a name="_gloss_file_pointer"></a>file pointer</h3>
<p>
A pointer that specifies the next byte to be read or or the location to receive the next byte written in a file.</p>

<h3><a name="_gloss_file_scope"></a>file scope</h3>
<p>
Or global scope. The degree of visibility of an identifier (C/C++ name) when it is declared outside all blocks or classes. The identifier is accessible anywhere in the translation unit after its declaration. See also class scope, function scope, function-prototype scope, local scope, external linkage.</p>

<h3><a name="_gloss_file_status"></a>file status</h3>
<p>
Information on whether the file exists, its creation and modification dates and times, its logical size in bytes, its attributes, and its path. See also file time.</p>

<h3><a name="_gloss_file_time"></a>file time</h3>
<p>
A 64-bit value that gives the file creation time, last access time, or last write time, as represented by the number of 100-nanosecond intervals that have elapsed since January 1, 1601. Windows records each file time in coordinated universal time (UTC) format. See also file status, system time.</p>

<h3><a name="_gloss_file_transfer_protocol"></a>File Transfer Protocol</h3>
<p>
A method of retrieving files to your home directory or directly to your computer using TCP/IP.&nbsp; Many Internet sites have established publicly accessible repositories of materials that can be obtained using FTP with the account name "anonymous." Thus, these sites are called "anonymous ftp servers."</p>

<h3><a name="_gloss_filename_extension"></a>filename extension</h3>
<p>
In the MS-DOS 8.3 filename convention, an optional period (.) followed by up to three characters that can be appended to the eight-character base filename. See also base name.</p>

<h3><a name="_gloss_final_class"></a>final class</h3>
<p>
In Java, a class that can have no subclasses.</p>

<h3><a name="_gloss_final_method"></a>final method</h3>
<p>
In Java, a method that cannot be overridden.</p>

<h3><a name="_gloss_final_variable"></a>final variable</h3>
<p>
In Java, a variable whose value cannot be changed. Corresponds to the C++ constant.</p>

<h3><a name="_gloss_firewall"></a>firewall</h3>
<p>
Or proxy server. A system or combination of systems that enforces a one-way barrier between two or more networks, usually used for security purposes. Firewalls accomplish all communication between the network and outside.</p>

<h3><a name="_gloss_fixup"></a>fixup</h3>
<ol>
<li>
Information generated by the linker for addresses that cannot be determined at link time. For example, the linker creates fixups for addresses within the executable that are relative to the executable's base address and for addresses of dynamically loaded DLLs. The Windows loader uses this information to resolve these addresses when the program or DLL is loaded. See also relocation information.<br><br></li>
<li>
A record (FIXUPP) generated by the assembler for each address it cannot determine (for example, addresses of external symbols). The fixup contains the information the linker will need to determine the address.</li>
</ol>

<h3><a name="_gloss_flag"></a>flag</h3>
<p>
Broadly, a marker of some type used by a computer in processing or interpreting information. Such a signal indicates the existence or status of a particular condition. Depending on its use, a flag can be code, embedded in data, that identifies some condition, such as the beginning or end of a word or a message, or it can be one or more bits set internally by hardware of software to indicate an event of some type, such as an error or the result of comparing two values.</p>

<h3><a name="_gloss_floating_toolbar"></a>floating toolbar</h3>
<p>
A toolbar that can appear anywhere on the user's display and is always on top of all other windows. Its size or position can be modified when floating. See also dockable toolbar, docked toolbar.</p>

<h3><a name="_gloss_floating_type"></a>floating type</h3>
<p>
A general category of arithmetic data types that are capable of storing a floating-point value (a number that may have a fractional part). The data types <b>float</b>, <b>double</b>, and <b>long double</b> are floating types. See also integral type.</p>

<h3><a name="_gloss_floating.2d.point_function"></a>floating-point function</h3>
<p>
A function that returns a value defined as a floating-point type — that is, a <b>float</b>, <b>double</b>, or <b>long double</b>. See also floating-point number.</p>

<h3><a name="_gloss_floating.2d.point_number"></a>floating-point number</h3>
<p>
Or real number. A value that may contain an integer component, a fractional component, or both. In C/C++, the data types <b>float</b>, <b>double</b>, and <b>long double</b> can store floating-point numbers.</p>

<h3><a name="_gloss_flow_control"></a>flow control</h3>
<p>
In data communications, a mechanism to prevent the sender from transmitting data faster than the receiver can handle the incoming data. Flow control usually depends on a set of protocols established at the beginning of the transmission session that define how and when a sender may transmit.</p>

<h3><a name="_gloss_focus"></a>focus</h3>
<p>
A temporary property of a user-interface object, such as a window, view, dialog box, or button, that permits the object to receive keyboard input from the user. The focus is usually conveyed through highlighting. See also top-level window.</p>

<h3><a name="_gloss_font_mapper"></a>font mapper</h3>
<p>
In Windows, an operating system component used to find the physical font that most closely matches a specified logical font. The font mapper uses an internal algorithm that compares the attributes of the requested logical font against the attributes of available physical fonts. This mapping occurs when the font is actually used for the first time. See also logical font, physical font.</p>

<h3><a name="_gloss_font_resource"></a>font resource</h3>
<p>
A group of individual fonts representing characters in a given character set that have various combinations of heights, widths, and pitches. The Windows operating system maintains a font table containing all the fonts that applications can use. You can load font resources and add the fonts in each resource to this table by using the <b>AddFontResource</b> Windows function.</p>

<h3><a name="_gloss_foreground_color"></a>foreground color</h3>
<p>
The color that is currently selected for drawing or displaying text on screen. In monochrome displays, the foreground color is the color of a bitmap or other graphic. See also background color.</p>

<h3><a name="_gloss_foreground_window"></a>foreground window</h3>
<p>
Or active window. The window with which the user is currently working. The foreground window is identified by color changes to the title bar and border. See also topmost window, top-level window, focus.</p>

<h3><a name="_gloss_form_view"></a>form view</h3>
<p>
A program window whose client area contains dialog-box controls to permit entering, viewing, or altering data, generally in a form-based data-access application.</p>

<h3><a name="_gloss_form.2d.based_application"></a>form-based application</h3>
<p>
An application whose user interface is based on a form containing controls in which a user examines, enters, or edits data.</p>

<h3><a name="_gloss_formal_argument"></a>formal argument</h3>
<p>
Or formal parameter. An argument that is declared in the function header and used in the body of a function. Calling functions pass values to called functions in "actual arguments." The called function accesses the values using its corresponding formal arguments.</p>

<h3><a name="_gloss_formal_parameter_list"></a>formal parameter list</h3>
<p>
The parameters specified in a particular method or function definition. Contrasts with the actual parameter list, which appears in the declaration.</p>

<h3><a name="_gloss_format"></a>format</h3>
<ol>
<li>
As a noun, the structure or appearance of a unit of data, such as a file, fields in a database record, a cell in a spreadsheet, or the text in a word-processing document. <br><br></li>
<li>
As a verb, to change the appearance or organization of the selected material. To format a disk is to prepare a disk for use by organizing its storage space into a collection of data "compartments," each capable of being addressed by the operating system.</li>
</ol>

<h3><a name="_gloss_format_string"></a>format string</h3>
<p>
A string that can contain specifications for various kinds of type formats as well as literal characters. For example, in the C statement </p>
<pre><code>printf( "Total Expenses:&nbsp; $%.2f \n",&nbsp; Sum );</code></pre>
<p>
the format string (enclosed in double quotation marks) contains the literal string <code>Total Expenses:&nbsp; $</code>, the formatting characters <code>%.2f</code> to print the value of <code>Sum</code> as a decimal number with two digits to the right of the decimal point, and the <code>\n</code> character to begin a new line.</p>

<h3><a name="_gloss_formatting_rectangle"></a>formatting rectangle</h3>
<p>
In Windows, a construct for formatting the text displayed in the window rectangle. An application can make the formatting rectangle larger than the window rectangle (limiting the visibility of the edit control's text) or smaller than the window rectangle (thereby creating extra white space around the text).</p>

<h3><a name="_gloss_forward_reference"></a>forward reference</h3>
<p>
In C/C++, a reference to a class, variable, or function that has been declared but not yet defined.</p>

<h3><a name="_gloss_frame_window"></a>frame window</h3>
<p>
In MFC, the window that coordinates the interactions of the application with a document and its view. The frame window provides a visible frame around a view, with an optional status bar and standard window controls such as a control menu, buttons to minimize and maximize the window, and controls for resizing the window. The frame window is responsible for managing the layout of its child windows and other client-area elements such as control bars and views. The frame window also forwards commands to its views and can respond to notification messages from control windows. In OLE, a frame window is the outermost main window where the container application's main menu resides. See also main frame window.</p>

<h3><a name="_gloss_free_threading_model"></a>free threading model</h3>
<p>
A model in which an object that can be used on any thread at any time. Compare apartment-model threading, single threading model.</p>

<h3><a name="_gloss_frequently_asked_questions"></a>Frequently Asked Questions</h3>
<p>
Documents that list and answer the most common questions on a particular subject.</p>

<h3><a name="_gloss_friend"></a>friend</h3>
<p>
A keyword used within a class declaration to specify that a function or another class has access to the private and protected members of the first class. The function or class specified with the <b>friend</b> keyword is considered a "friend" of the first class.</p>

<h3><a name="_gloss_ftp"></a>FTP</h3>
<p>
A method of retrieving files to your home directory or directly to your computer using TCP/IP.&nbsp; Many Internet sites have established publicly accessible repositories of materials that can be obtained using FTP with the account name "anonymous." Thus, these sites are called "anonymous ftp servers."</p>

<h3><a name="_gloss_full_link"></a>full link</h3>
<p>
A non-incremental build of program files in which an incremental status (.ILK) file is generated. The incremental status file has the same base name as the executable (.EXE) file or dynamic-link library (.DLL) file targeted by the link, and a .ILK filename extension. During subsequent incremental builds, the linker uses and updates the incremental status file. See also incremental link.</p>

<h3><a name="_gloss_full.2d.server_application"></a>full-server application</h3>
<p>
In OLE, an application that can be run either as a stand-alone application or launched by a container application. A full-server application can store documents as files on disk and supports both embedding and linking. See also mini-server application, server application.</p>

<h3><a name="_gloss_fully_qualified_path"></a>fully qualified path</h3>
<p>
Or absolute path. The location of a file or directory on a volume, including a drive letter and any intervening directory names. See also relative path.</p>

<h3><a name="_gloss_function"></a>function</h3>
<ol>
<li>
A block of code, consisting of a return type, function name, optional parameters, and statements, that performs one or more specific tasks within the source program and returns a value to the caller.<br><br></li>
<li>
The purpose of or the action carried out by a program, routine, or other object.</li>
</ol>

<h3><a name="_gloss_function_body"></a>function body</h3>
<p>
The portion of a function definition that contains the declarations of its local variables and executable statements. See also function declaration.</p>

<h3><a name="_gloss_function_call"></a>function call</h3>
<p>
A postfix expression followed by parentheses containing a possibly empty, comma-separated list of expressions which constitute the actual arguments to the function.</p>

<h3><a name="_gloss_function_counting"></a>function counting</h3>
<p>
A run-time analysis of a program in which the profiler records how many times each function was called, which is its "hit count." See also function profiling, function timing, function coverage, line counting.</p>

<h3><a name="_gloss_function_coverage"></a>function coverage</h3>
<p>
A run-time analysis of a program in which the profiler reports whether a function was called. This analysis shows which sections of code (functions) are not being executed. See also function counting, function profiling, function timing, line coverage.</p>

<h3><a name="_gloss_function_declaration"></a>function declaration</h3>
<p>
A statement consisting of a return type, followed by the function name, followed by a list of the names and types of formal parameters enclosed in parentheses.&nbsp; In C++, a function must be declared before it can be called. See also formal argument.</p>

<h3><a name="_gloss_function_definition"></a>function definition</h3>
<p>
Specifies the name of the function, the types and number of parameters it expects to receive, and its return type. A function definition also includes a function body with declarations of the function's local variables and the statements that determine what the function does. Function definitions differ from function declarations in that they supply function bodies — the code that makes up the function.</p>

<h3><a name="_gloss_function_overloading"></a>function overloading</h3>
<p>
In C++, specifying more than one function of the same name but with different parameters, in the same scope. These functions, called overloaded functions, enable programmers to supply different semantics for a function, depending on the types and number of arguments. For example an overloaded function could be called <code>print</code>, regardless of whether it printed a single string, a list of integers, or all the data members of a class. The arguments supplied in the function call determine which <code>print</code> function is called. See also function overriding.</p>

<h3><a name="_gloss_function_overriding"></a>function overriding</h3>
<p>
In C++, redefining a member function of a base class from within a derived class. An overriding function has exactly the same name, parameters, and return type as the overriden function. See also function overloading.</p>

<h3><a name="_gloss_function_profiling"></a>function profiling</h3>
<p>
A run-time analysis of code execution by function, in which the profiler detects inefficiencies by counting and timing functions. See also function counting, function coverage, function timing, line profiling.</p>

<h3><a name="_gloss_function_scope"></a>function scope</h3>
<p>
In C/C++, the degree of visibility of a label.&nbsp; Labels are accessible only within the function where they are declared. See also class scope, file scope, function-prototype scope, local scope.</p>

<h3><a name="_gloss_function_set"></a>function set</h3>
<p>
One or more functions or data objects that can be exported by a shared library so that they are available to other programs.</p>

<h3><a name="_gloss_function_template"></a>function template</h3>
<ol>
<li>
A mechanism for specifying a set of functions that are based on the same code but act on different types or classes. When a templated function is first called for each type, the compiler creates an "instantiation," a specialized version of the templated function for the type. <br><br></li>
<li>
A complete member function definition with an empty function body that ClassWizard writes in the source files that contain the class of which the member is a function.</li>
</ol>

<h3><a name="_gloss_function_timing"></a>function timing</h3>
<p>
A run-time analysis of a program in which the profiler records how many times each function was called (the hit count) as well as how much time was spent in each function and any called functions. See also function counting, function coverage, function profiling.</p>

<h3><a name="_gloss_function.2d.prototype_scope"></a>function-prototype scope</h3>
<p>
Or prototype scope. In C++, the degree of visibility of an identifier when it is declared within a function prototype. The identifier is accessible only to the function declarator (delimited by parentheses). Such identifiers are effectively comments, to make the parameters of the prototyped function readily apparent to a reader. See also class scope, file scope, function scope, local scope.</p>

<h3><a name="_gloss_functionality"></a>functionality</h3>
<p>
The features, operations, functions, or capability supported by a program or program component. Some examples of common functionality are serialization, in-place activation, OLE, and ODBC.</p>

<h3><a name="_gloss_fundamental_type"></a>fundamental type</h3>
<p>
A data type that is built into the language. In C/C++, fundamental types can be divided into three categories: integral, floating, and void. Integral types are capable of handling whole numbers. Floating types are capable of specifying values that have fractional parts. The <b>void</b> type describes an empty set of values.</p>
</FONT></BODY>
</HTML>
