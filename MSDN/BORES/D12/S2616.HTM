<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How Advanced Security Works</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">How Advanced Security Works</H3><P CLASS="t">Both digital signatures and encryption are based on encryption technology. Encryption scrambles (encrypts) a message so it can't be read until it's unscrambled (decrypted) by the intended recipient. This process of encrypting and decrypting messages is called <I>cryptography</I>.</P>
<P CLASS="t">Microsoft Exchange Server can scramble a message or revert it to its plaintext format by applying a mathematical formula, called an algorithm, to the message. The algorithm is used with a key, which is a random string of bits that is used to lock and unlock (encrypt and decrypt) the message. Only the user who has the correct key can encrypt and decrypt the message.</P>
<P CLASS="t">Microsoft Exchange Server advanced security is called a "hybrid" encryption system. It takes advantage of two different encryption technologies: public key cryptography and secret key cryptography (sometimes called symmetric key cryptography).</P>
<P CLASS="t">Microsoft Exchange Server uses complementary elements of these technologies to digitally sign and encrypt messages. For example, Microsoft Exchange Server takes advantage of the strengths of public key cryptography to securely distribute keys between people. However, it relies on secret key cryptography to encrypt the content of messages because those operations are best suited to bulk data encryption.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Public Key Cryptography</H4><P CLASS="t">Developed by the RSA Corporation, public key cryptography is based on two halves of the same key that are "mirror images" of each other. The two halves of the key are called a <I>key pair</I>. One or the other key in the key pair is required to encrypt and decrypt a message. Microsoft Exchange Server uses two key pairs that can be assigned to a user. One key pair is used to digitally sign messages, and the other is used to encrypt messages.</P>
<P CLASS="t">A key pair consists of a public key and a private key. The public key is publicly known and stored in the directory so everyone can access it. The private key is known only to the key's owner and is stored in the user's security (.epf) file. By making one key publicly available and the other key secret, public key cryptography simplifies the distribution of keys without compromising their security. For example, a message encrypted with a recipient's public key can be decrypted only with the recipient's private key.</P>
<P CLASS="t">Public key cryptography is computationally slow. Therefore, it's not as effective as secret key cryptography for encrypting large amounts of data. As a result, Microsoft Exchange Server uses public key cryptography primarily for digital signatures and to exchange secret keys securely between users.</P>
<P CLASS="t">To prevent keys from being tampered with after they've been created, Microsoft Exchange Server uses <I>certificates</I> to establish a trust of keys. A certificate is a user's public key that has been digitally signed by a trusted authority called a Certification Authority (CA). The KM server is a type of CA. Because the KM server uses its private key to sign certificates, a certificate's signature can be verified using a copy of the KM server's public signing key that resides in every user's security file.</P>
<P CLASS="t">In Microsoft Exchange Server, encryption and signing operations use different certificates. Signing certificates are sent with every signed message. This ensures that the recipient can verify a sender's digital signature even while offline. In contrast, encryption certificates are available in the global address list so everyone has access to them. Users can make encryption certificates available while offline by downloading a copy of the offline Address Book with full details.</P>
<P CLASS="t">Microsoft Exchange Server uses a certificate format that complies with the public X.509 standards.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Secret Key Cryptography</H4><P CLASS="t">Unlike public key cryptography which uses key pairs, secret key cryptography encrypts and decrypts messages using an algorithm with a single key. A secret key is a key that both the sender and recipient know. It's similar to a password that you use to log on to a server. Both you and the server must know the same password for you to have access to the server.</P>
<P CLASS="t">Because the secret key must be distributed to both the sender and the recipient in such a way that it still remains a secret, key distribution is more difficult with secret key cryptography than public key cryptography. However, secret key cryptography is very fast and is ideal for encrypting and decrypting large amounts of data. As a result, Microsoft Exchange Server relies on it to encrypt the contents of messages, including body text and attachments.</P>
<P CLASS="t">Microsoft Exchange Server uses several different types of secret key encryption algorithms to comply with U.S. export laws, including the Data Encryption Standard (DES) and the CAST encryption algorithms. For information about selecting the encryption type best suited for your organization, see "Selecting an Encryption Type" later in this chapter.</P>
<H5 CLASS="h4"><A NAME="sec2"></A>DES</H5><P CLASS="t">A secret-key algorithm based on a fixed-length, 56-bit key. It was first published by the National Bureau of Standards. DES is a U.S. Federal information processing standard that is available only with the North American version of Microsoft Exchange Server.</P>
<P CLASS="t"><B>CAST   </B> A secret-key encryption method originally developed by Carlisle Adams and Stafford Tavares of Northern Telecom Research (CAST is formed from the initials of their first and last names). CAST provides flexible encryption standards by allowing a variable key between 40 and 128 bits. The key is a number, specified in bit length that is used to encrypt data. Longer keys are more secure than shorter ones. Microsoft Exchange Server uses CAST 40, which uses a 40-bit key, and CAST 64, which uses a 64-bit key. CAST 64 is available only with the North American version of Microsoft Exchange Server.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>Key Management (KM) Server</H4><P CLASS="t">The Key Management (KM) component is an optional Microsoft Exchange Server component that is installed on an organization's KM server. It provides centralized administration and management of public keys and certificates and is used to set up advanced security.</P>
<P CLASS="t">The KM server performs a variety of important tasks, including generating public and private encryption keys. It also acts as your CA by creating public signing and encryption X.509 certificates. Once the KM server has generated keys and certificates and a user's security file has been created, the KM server doesn't need to be running for a user to send and receive encrypted and signed messages.</P>
<P CLASS="t">The KM server also maintains a secure copy of every user's private encryption key in an encrypted database in case the key needs to be retrieved after it's been issued. For example, if a user is terminated or leaves the company, the KM server enables an authorized administrator to recover the user's encrypted messages by recovering the user's private keys. You can also recover keys for users when they lose their security (.epf) file or forget their security file password.</P>
<P CLASS="t">Another important function of the KM server is maintaining and distributing a certificate revocation list (CRL). The revocation list enables you to revoke a user's certificate if a user's keys are compromised and no longer secure. It is stored in the directory on every server. A replica of the revocation list is also kept on the Microsoft Exchange Client computer so certificates can be checked while working offline. When you decrypt a message or verify its signature, the revocation list is checked to make sure that the certificate hasn't been revoked. If it has, the user is warned that the sender has been revoked from the organization. For more information about revocation, see the <I>Microsoft Exchange Server Concepts and Planning Guide</I>.</P>
<H4 CLASS="h3"><A NAME="sec4"></A>Digital Signatures</H4><P CLASS="t">A digital signature is similar to a person's handwritten signature that can be used to authenticate a sender's identity and ensure that a message isn't modified during transit. It's a string of bits, called a message hash or checksum, that's calculated and then added to a signed message. Every message has a unique signature or checksum that's generated by applying a 128-bit RSA algorithm called Message Digest 5 (MD5) to the message.</P>
<P CLASS="t">Microsoft Exchange Server relies on public key cryptography to ensure the authenticity of digital signatures. When the user signs a message using the Microsoft Exchange Client, the checksum of the message is encrypted using the sender's private signing key. When the recipient verifies the message's signature using Microsoft Exchange Client, the sender's public signing key is used to decrypt the checksum and verify the sender's identity. The signature on a message is valid only if the public and private keys correspond to each other.</P>
<P CLASS="t">Microsoft Exchange Server determines the integrity of a signed message by comparing the checksum on the message with a new checksum of the message that the recipient's client generates. If the two checksums are identical, the message hasn't been modified since it was signed. However, if even one bit in the message has been changed, the messages will have different checksums and the recipient is notified that someone tampered with the message. Encrypting the checksum using the signer's private key also ensures that a signed message can't be tampered with because the checksum on a message can't be switched without the signer's private key.</P>
<H5 CLASS="h4"><A NAME="sec5"></A>Signing a Message</H5><P CLASS="t">When a user signs a message, the Microsoft Exchange Client generates a checksum of the message and adds it to the message. The checksum (digital signature) is then encrypted using the sender's private signing key. Finally, the original plaintext message, the digital signature, and the sender's signing certificate (which contains the sender's public signing key) are sent to the recipient.</P>
<P CLASS="t">The following illustration describes the steps in the process.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<img src="xerk_g03.gif"></P>
<H5 CLASS="h4"><A NAME="sec6"></A>Verifying a Signature on a Message</H5><P CLASS="t">When a recipient verifies a message's signature, the Microsoft Exchange Client checks the sender's signing certificate against the CRL. If it is on the list, the recipient is warned that the sender has been revoked from the organization. The encrypted checksum (digital signature) is decrypted using the sender's public signing key that was sent with the message. Finally, the client generates a checksum on the plaintext message so it can be compared with the checksum that was just decrypted. The two checksums should be the same. If they are not, the recipient is warned that the message has been altered since it was originally signed.</P>
<P CLASS="t">The following illustration describes the steps in the process.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<img src="xerk_g04.gif"></P>
<H4 CLASS="h3"><A NAME="sec7"></A>Message Encryption</H4><P CLASS="t">When a message is encrypted, the Microsoft Exchange Client generates a random secret key called a bulk encryption key, which is used to encrypt the message. The recipient's public encryption key is then used to encrypt the bulk encryption key in a lockbox. The lockbox allows the random bulk encryption key to be transmitted securely to the recipients. If an encrypted message is sent to several people, each recipient's public encryption key is used to generate a different lockbox, but the message contents are encrypted only once.</P>
<H5 CLASS="h4"><A NAME="sec8"></A>Encrypting a Message</H5><P CLASS="t">When a sender encrypts a message, the Microsoft Exchange Client retrieves a certificate for each message recipient from the global address list. A bulk encryption key is then randomly generated and used to encrypt the contents of the message. Each recipient's public encryption key is then retrieved from the recipient's certificate and used to encrypt the bulk encryption key in a lockbox. Finally, the lockbox and the encrypted message are sent to the recipient.</P>
<P CLASS="t">The following illustration describes the steps in the process.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<img src="xerk_g05.gif"></P>
<H5 CLASS="h4"><A NAME="sec9"></A>Decrypting a Message</H5><P CLASS="t">When a recipient decrypts a message, Microsoft Exchange Server retrieves the recipient's private encryption key from the recipient's security (.epf) file. The recipient's private encryption key is then used to decrypt the lock box. Finally, the bulk encryption key contained in the lock box is used to decrypt the message.</P>
<P CLASS="t">The following illustration describes the steps in the process.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;<img src="xerk_g06.gif"></P></BODY></HTML>
