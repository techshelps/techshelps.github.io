<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Backing Up and Restoring the SMS System</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Backing Up and Restoring the SMS System</H2><P CLASS="t">The SMS version 1.2 <I>Administrator's Guide</I> describes how to back up and restore an SMS site. This section provides more details about these processes.</P>
<P CLASS="t">Every time a database is expanded, it creates another fragment. The SMS database typically expands occasionally as the number of inventoried machines grows. To completely restore the database, the new device(s) have to have the same fragment pattern. If the database was created with 20&nbsp;MB data and a 10 MB log, and then the data expanded by 30 MB and the log expanded by 5 MB, to restore data to the new database the first four fragments need to be the same type and size and in the same order. The new database can be bigger with more fragments, but the first four fragments have to match the four from the backed up database. Along with this, the SQL server must use the same sort order and code page that was in use by SQL server when the backup was made.</P>
<P CLASS="t">There is a SQL limit of 32 fragments in a database. Once this limit is reached, the database cannot be expanded any more. If the fragments are not contiguous, the only way to reduce the number of fragments and save the data is to transfer the whole database to a new database that uses one large data fragment and one large log fragment. (See the SQL Server documentation for more information.) After that, SMS must be pointed at the new database.</P>
<H3 CLASS="h4"><A NAME="sec0"></A>Before backing up the database</H3><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Start the MSSQL\BINN\ISQLW.EXE program and select the SMS database as the default. </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Stop all other processes that might access the SMS database.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Run the following data integrity checks:</P>
<P><B>dbcc checkdb <BR>go <BR>dbcc newalloc <BR>go <BR>dbcc checkcatalog</B></P>
<P CLASS="t"><B>Note</B></P>
<P>Errors that are not corrected before backup might prevent the restore.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Save a copy of the files in the \MSSQL\LOG\ERRORLOG directory, which will contain the SQL version, sort order, and code page being used at that time.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    To consolidate any contiguous fragments, select the SMS database as the default in <B>isqlw</B>, and run the following command:</P>
<P><B>sp_coalesce_fragments</B> <I>SMSdatabase</I></P>
<P>Where <I>SMSdatabase</I> is the name of your database.</P>
<P CLASS="t"><B>Note</B></P>
<P>If the fragments are not contiguous, this command will not help. If the database was created with a data then log fragment, and data was expanded then log expanded, there will be four noncontiguous fragments, this command will not help.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    Select the SMS database as the default in <B>isqlw</B> and run the following command to display basic information about the database including the name, options selected, and a list of the fragments:</P>
<P><B>sp_helpdb </B><I>SMSdatabase</I></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    Save the results for future reference. </P>
<P CLASS="t">Now back up the database.</P>
<P CLASS="t">You can create a script that will create the correct fragment pattern. If the database name or physical device names will be changed, you must edit the script to reflect these changes. </P>
<H3 CLASS="h4"><A NAME="sec1"></A>To generate the fragment correction script</H3><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Select the SMS database as the default in <B>isqlw</B>.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Run the following command:</P>
<P><B>sp_help_revdatabase</B> <I>SMSdatabase</I></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Save the results.</P>
<P>Be sure to verify that the database is still intact after completing these tasks. If there were errors interjected into one of the steps, the restore might not be completely successful. </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Select the SMS database as the default in <B>isqlw</B>, and run the following commands:</P>
<P><B>dbcc checkdb <BR>go <BR>dbcc newalloc <BR>go <BR>dbcc checkcatalog</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Create the data devices for the SMS database: one for data and a separate one for log. Even if there are several fragments, all the data fragments can go on the data device and all the log fragments on the log device.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    If necessary, edit the database name and device names in the script produced by <B>sp_help_revdatabase</B>, and run the script from <B>isqlw</B>.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    Restore the SMS database.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    In SMS Setup, run Operations/SMS Database and change the SQL Server name and the database name, if appropriate. This points SMS services to the new server and database.</P>
<P></P>
<P CLASS="t"><B>Note</B></P>
<P>The REGEDT32.EXE program can save registry information in both binary and ASCII format. Be sure you are saving the SMS registry keys in a format that <B>regedt32</B> can restore (binary).</P>
<P CLASS="t"></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P></P>
<P CLASS="t"></P></BODY></HTML>
