<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Event Processing</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Event Processing</H2><P CLASS="t">SMS can have its system components installed on different computers in a site. For example, an SNA Sender can be installed on another server (that is, a server other than the site server).</P>
<P CLASS="t">When an SMS component reports an event to the SMS system, it first logs an event in the Windows&nbsp;NT event log of the computer where the component is running. The component then reports the event in two steps to the site server for the site:</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    At a primary site, the component writes an event MIF file (*.EMF) to the SITE.SRV\DATALOAD.BOX\DELTAMIF.COL directory of the SMS root directory on the site server. The Inventory Data Loader service updates the site database if the site is a primary site, and forwards the .EMF file to the site's parent site.</P>
<P>At a secondary site, the component writes an .EMF file to the SITE.SRV\SITEREP.BOX directory on the site server. The Site Reporter creates a system job to send the .EMF file up to the site's parent site.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    The component logs an event to the Windows&nbsp;NT event log on the site server.</P>
<P CLASS="t">This process is summarized in Figure 3.14, Figure 3.15, and Figure 3.16.</P>
<P><img src="srk_c14.gif"></P>
<P>Figure 3.14    How events are reported in a site.</P>
<P CLASS="t">When the .EMF file is forwarded to the site's parent site, the Inventory Data Loader updates that site's database and forwards the event MIF file to its parent site. By processing and forwarding .EMF files, the system reports events up the site hierarchy—all the way up to the central site.</P>
<P CLASS="t">Using the Events window of the SMS&nbsp;Administrator, you can view events for the site where you are logged in and all sites beneath that site.</P>
<P CLASS="t"><B>Note</B></P>
<P>If a component cannot create or write the .EMF file (for example, if the site server is out of disk space), the event may not be reported to the site database. In this case, the Windows&nbsp;NT event log of the computer where the event occurred may contain the only record of the event.</P>
<P><img src="srk_c15.gif"></P>
<P>Figure 3.15    How events are reported by a service installed on another server (that is, a service not installed on the site server).</P>
<P><img src="srk_c16.gif"></P>
<P>Figure 3.16    How events are forwarded up the site hierarchy.</P>
<P CLASS="t">The SMS Executive, Site Configuration Manager, and Hierarchy Manager services maintain event history on some of their events. When an event that uses event history occurs, the SMS service or component reads its event history file from the ERRORHIS subdirectory beneath the directory where the service or component is installed. The SMS Executive (SMS_EXEC.HIS), the Site Configuration Manager (SMS_SITE.HIS), and Hierarchy Manager (SMS_HIER.HIS) have their own history files. The component or service checks its event history file for a record of the condition that generated the event. If the condition is the same as the last recorded event, no event is reported. If the condition has changed, the event is reported with the updated status. If the status is a success or recovery report, the component clears the event record from its error history file.</P>
<P></P>

<TABLE COLS="1" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="348pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P><B>How the Inventory Data Loader Processes .EMF Files</B></P>
<P>The Inventory Data Loader is a multi-threaded process (new for SMS 1.2). The main thread of the Inventory Data Loader takes the Binary MIF files in the SITE.SRV\DATALOAD.BOX\DELTAMIF.COL directory and places them into the PROCESS subdirectory. If the Inventory Data Loader does not have an active thread for processing .EMF event MIF files, it will spawn a .EMF processing thread. Note that the Inventory Data Loader can have a separate thread to process the five types of MIF files, which are distinguished by their file extensions. Also note that main thread limits the number of MIF files of each type to 1000 files—when the count falls below 1000 for a type of MIF file, the main thread moves more MIF files of that type into the PROCESS subdirectory. </P>
<P>The .EMF processing thread updates the site database with events reported by SMS components. After the thread has updated the site database, it moves the .EMF file to SITE.SRV\SITEREP.BOX directory to forward the .EMF to its parent site—if the current site has a parent site. Note that the thread performs a syntax check on the MIF file and does not copy to the SITE.SRV\SITEREP.BOX if the MIF file cannot be processed; these unprocessable MIF files are placed in theBADMIFS subdirectory. If there are no more .EMF files to process, the thread terminates. </P>
<P></P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P></BODY></HTML>
