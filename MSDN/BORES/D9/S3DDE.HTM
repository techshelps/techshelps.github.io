<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Performance Monitor to Tune SMS</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Using Performance Monitor to Tune SMS</H3><P CLASS="t">This section describes the objects and counters that should be used with SMS. In many cases, you can use a small subset of these counters to determine the status of an SMS system. The counters that are most useful to monitor in an SMS environment are:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="68pt" VALIGN="TOP"><COL WIDTH="166pt" VALIGN="TOP"><COL WIDTH="123pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Object</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Counter</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Measure on</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Memory</P></TD><TD VALIGN="TOP"><P CLASS="tt">Committed Bytes</P></TD><TD VALIGN="TOP"><P CLASS="tt">Site server</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">PhysicalDisk</P></TD><TD VALIGN="TOP"><P CLASS="tt">% Disk Time (for all physical disks)</P></TD><TD VALIGN="TOP"><P CLASS="tt">Site server and SQL Server</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Processor</P></TD><TD VALIGN="TOP"><P CLASS="tt">% Processor Time (for all processors)</P></TD><TD VALIGN="TOP"><P CLASS="tt">Site server and SQL Server</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Redirector</P></TD><TD VALIGN="TOP"><P CLASS="tt">Current Commands</P></TD><TD VALIGN="TOP"><P CLASS="tt">Site server and SQL Server</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SQLServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">User Connections</P></TD><TD VALIGN="TOP"><P CLASS="tt">SQL Server</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SQLServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Cache Hit Ratio</P></TD><TD VALIGN="TOP"><P CLASS="tt">SQL Server</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">These counters (and other useful objects and counters) are described in the following sections.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Cache Object</H4><P CLASS="term1"><B><B>Data Map Hits %</B></B></P>
<P CLASS="dt1">The percentage of data maps in the cache that could be resolved without having to retrieve a page from the disk, meaning that the page was already in physical memory. This is an indicator of application I/O.</P>
<P CLASS="dt1">Higher is better. A poor cache hit rate may indicate a memory shortage.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>LogicalDisk Object</H4><P CLASS="term1"><B><B>Avg. Disk Queue Length</B></B></P>
<P CLASS="dt1">A measure of the activity of each logical partition of the disk. An Avg. Disk Queue Length of 1.0 indicates that the logical disk was busy for the entire sample time. Busy time includes all processing time for a disk I/O request, including driver time and time in the queue, so values for a single logical disk may exceed 1.0.</P>
<P CLASS="dt1">Sustained high values over time indicate a possible disk bottleneck.</P>
<P CLASS="term1"><B><B>% Free Space</B></B></P>
<P CLASS="dt1">The ratio of the free space available on the logical disk to the total usable space provided by the selected logical disk drive.</P>
<P CLASS="dt1">Higher is better. Free space should not go below 10 percent, or disk performance will suffer. If the drive that SMS is installed on runs out of free space, SMS will stop all processing and SMS won't be able to send events warning that all processing has stopped.</P>
<H4 CLASS="h3"><A NAME="sec2"></A>Memory Object</H4><P CLASS="term1"><B><B>Committed Bytes</B></B></P>
<P CLASS="dt1">The size of virtual memory that has been committed (rather than reserved). Committed memory must have disk storage available, or there must be enough memory available so that it doesn't need to use. Notice that this is an instantaneous count, not an average over the time interval.</P>
<P CLASS="dt1">Lower is better. If the value is consistently less than the amount of physical RAM, then additional RAM is not needed. If the value is consistently more than twice the amount of physical RAM, and the system is paging frequently, then more RAM may be needed.</P>
<P CLASS="term1"><B><B>Page Faults/sec</B></B></P>
<P CLASS="dt1">A count of the page faults in the microprocessor. A page fault occurs when a process refers to a virtual memory page that is not in its Working Set in main memory. A page fault will not cause the page to be retrieved from disk if that page is on the standby list, and already in main memory, or if it is in use by another process that shares the page.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Pages/sec</B></B></P>
<P CLASS="dt1">The number of pages read from the disk or written to the disk to resolve memory references to pages that were not in memory at the time of the reference. This is the sum of pages input/sec and pages output/sec. This counter includes paging traffic on behalf of the system cache to access file data for applications. This is the primary counter to observe if you are concerned about excessive memory pressure (thrashing), and the excessive paging that can result.</P>
<P CLASS="dt1">Lower is better. If this counter is consistently high, memory is in short supply. Sustained paging degrades performance.</P>
<P CLASS="term1"><B><B>Pool Non-Paged Bytes</B></B></P>
<P CLASS="dt1">The number of bytes in the non-paged pool. The non-paged pool is a system memory area where space is acquired by operating system components as needed. Non-paged pool pages cannot be paged out to the paging file; they remain in main memory as long as they are allocated.</P>
<P CLASS="dt1">Lower is better. If this level approaches the amount of physical RAM, the system can stall.</P>
<P CLASS="term1"><B><B>Transition Faults/sec</B></B></P>
<P CLASS="dt1">The number of page faults resolved by recovering pages that were in transition, that is being written to disk at the time of the page fault. The pages were recovered without additional disk activity.</P>
<P CLASS="dt1">Lower is better. As the number of transition faults approaches the number of page faults, the applications running will approach a state where they produce little results other than thrashing the disk. You can add more RAM to reduce this problem.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>Objects Object</H4><P CLASS="term1"><B><B>Processes</B></B></P>
<P CLASS="dt1">An instantaneous count of the number of processes running. When charted with Processor: % ProcessorTime, it shows the effect on the microprocessor of adding and removing processes.</P>
<H4 CLASS="h3"><A NAME="sec4"></A>Paging File Object</H4><P CLASS="term1"><B><B>%Usage Peak</B></B></P>
<P CLASS="dt1">The peak usage of the page file instance in percent. </P>
<P CLASS="dt1">Lower is better. If it is over 80 percent, increase the size of the paging file or add more RAM.</P>
<H4 CLASS="h3"><A NAME="sec5"></A>PhysicalDisk Object</H4><P CLASS="t">Numbers are shown for an array as a group. The first disk shows numbers, the others show zeros. Note that you must run <B>diskperf -y</B> and restart the computer before you can use this counter. For Pentium-class computers, the impact of enabling these counters is negligible.</P>
<P CLASS="term1"><B><B>Avg. Disk Queue Length</B></B></P>
<P CLASS="dt1">A measure of the activity of the disk subsystem. It is the sum of Avg. Disk Queue Length for all logical partitions of the disk.</P>
<P CLASS="dt1">This is a good measure of disk activity when measuring multiple physical disks in a disk set.</P>
<P CLASS="term1"><B><B>%Disk Time</B></B></P>
<P CLASS="dt1">The percentage of elapsed time that the selected disk drive is busy servicing read or write requests.</P>
<P CLASS="dt1">Lower is better. Recommended range is 50% or below. Avoid averaging over 80 percent. This is a good counter to check to determine if the disk is acting as a system bottleneck. A high value may indicate the need for a faster disk, or it may indicate system configuration problems. </P>
<P CLASS="term1"><B><B>Disk Bytes/sec</B></B></P>
<P CLASS="dt1">The rate bytes are transferred to or from the disk during write or read operations.</P>
<P CLASS="dt1">Lower is better. The throughput for most disks is in the range of 1 to 4 MB per second. To get a feel for the upper limit for a specific disk, start several file copy operations from other physical disks, RAM, or the network. Keep in mind that reading and writing have different limits and that file size, block size, and other factors will effect disk throughput. The whole point to an array is to multiply the throughput by increasing the number of disks. If the throughput for a single disk is 3 MB per second, and 4 disks are used for an array, the total throughput should approach 12 MB per second. There is overhead with arrays that will prevent the actual throughput from reaching this point.</P>
<P CLASS="term1"><B><B>Disk Queue Length</B></B></P>
<P CLASS="dt1">The rate that bytes are transferred to or from the disk during write or read operations.</P>
<P CLASS="dt1">Lower is better. More than two is not recommended. This is two per disk, in an array, that divide the disk queue length by the number of disks.</P>
<H4 CLASS="h3"><A NAME="sec6"></A>Process Object</H4><P CLASS="t">These are the key processes to monitor in an SMS environment:</P>
<UL><LI>Idle (unused system resources)</LI><LI>PERFMON</LI><LI>PREINST</LI><LI>SITEINS</LI><LI>SMS</LI><LI>SMSEXEC</LI><LI>SQLSERVER (version 4.<I>x</I>)</LI><LI>MSSQLSERVER (version 6.<I>x</I>)</LI></UL><P CLASS="t">For each process, you can monitor the following counters:</P>
<P CLASS="term1"><B><B>% Processor Time</B></B></P>
<P CLASS="dt1">The percentage of elapsed time when all the threads for a process are used by the microprocessor to execute instructions. An instruction is the basic unit of execution in a computer. A thread is the object that executes instructions. A process is the object created when a program is run. Code executed to handle certain hardware interrupts or trap conditions may be counted for this process.</P>
<P CLASS="dt1">Lower is better. If a single process is using close to 100 percent of the microprocessor time for extended periods, then it is causing a microprocessor bottleneck.</P>
<P CLASS="term1"><B><B>Private Bytes</B></B></P>
<P CLASS="dt1">The current number of bytes this process has allocated that cannot be shared with other processes.</P>
<P CLASS="dt1">Lower is better. If this number shows a steady upward climb, that could suggest a memory leak. Monitor this value over a period of several hours to be sure it is not a one time increase, as many processes will allocate a great deal of memory on startup.</P>
<H4 CLASS="h3"><A NAME="sec7"></A>Processor Object</H4><P CLASS="term1"><B><B>% Interrupt Time</B></B></P>
<P CLASS="dt1">The percentage of elapsed time that the microprocessor spent handling hardware interrupts. When a hardware device interrupts the microprocessor, the interrupt handler manages the condition, usually by signaling I/O completion and possibly issuing another pending I/O request. Some of this work may be done in a deferred procedure call (DPC). However, time spent in DPCs is not counted as time in interrupts. Interrupts are executed in privileged mode, so this is a component of Processor: % Privileged Time. Use this counter to determine the source of excessive time for Privileged Mode.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>% Processor Time</B></B></P>
<P CLASS="dt1">Expressed as a percentage of the elapsed time that a microprocessor is busy executing a non-idle thread. It is viewed as the fraction of time spent doing productive work. Each microprocessor is assigned an idle thread in the idle process that consumes those unproductive microprocessor cycles not used by any other threads.</P>
<P CLASS="dt1">Lower is better. Recommended range is 50% or below. This value is a good indicator of the demand for and efficiency of a microprocessor.</P>
<P CLASS="term1"><B><B>Interrupts/sec</B></B></P>
<P CLASS="dt1">The number of device interrupts that the microprocessor is experiencing. A device interrupts the microprocessor when it has completed a task or when it requires attention. Normal thread execution is suspended during interrupts. An interrupt may cause the microprocessor to switch to another, higher priority thread. Clock interrupts are frequent and periodic and create a background of interrupt activity.</P>
<P CLASS="dt1">Lower is better. A high level indicates a type of microprocessor thrashing. On a Pentium computer, 500 interrupts per second might be normal. High can be as much as 1,000 interrupts per second.</P>
<H4 CLASS="h3"><A NAME="sec8"></A>Redirector Object</H4><P CLASS="term1"><B><B>Bytes Total/sec</B></B></P>
<P CLASS="dt1">The rate at which the Redirector is processing data bytes. This includes all application and file data in addition to protocol information such as packet headers.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Current Commands</B></B></P>
<P CLASS="dt1">Counts the number of requests to the Redirector that are currently queued. If this number is much larger than the number of network adapter cards installed in the computer, then the network(s) and/or the server(s) being accessed are a bottleneck.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>File Data Operations/sec</B></B></P>
<P CLASS="dt1">The rate at which the Redirector is processing data operations. One operation includes many bytes because each operation has overhead. You can determine the efficiency of this path by dividing the bytes per second by this counter to determine the average number of bytes transferred per operation.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Network Errors/sec</B></B></P>
<P CLASS="dt1">Counts unexpected errors that generally indicate the Redirector and one or more servers are having communication difficulties. For example, an SMB (Server Manager Block) protocol error will generate a network error. This results in an entry in the system event log, so look there for details.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Packets/sec</B></B></P>
<P CLASS="dt1">The rate at which the Redirector is processing data packets. One packet includes many bytes. You can determine the efficiency of this path by dividing the bytes per second by this counter to determine the average number of bytes transferred/packet. You can also divide this counter by operations per second to determine the average number of packets per operation, which is another measure of efficiency.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Server Sessions Hung</B></B></P>
<P CLASS="dt1">Counts the number of active sessions that are timed out and unable to proceed due to a lack of response from the remote server.</P>
<P CLASS="dt1">Lower is better.</P>
<H4 CLASS="h3"><A NAME="sec9"></A>Server Object</H4><P CLASS="term1"><B><B>Bytes Total/sec</B></B></P>
<P CLASS="dt1">The number of bytes the server has sent to and received from the network. This value provides an overall indication of the server's activities.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Context Blocks Queued/sec </B></B></P>
<P CLASS="dt1">The rate that work context blocks had to be placed on the server's FSP queue to await server action. </P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Pool Non-paged Bytes</B></B></P>
<P CLASS="dt1">The number of bytes of non-pageable computer memory that the server is currently using. Use this counter to determine usable values for <B>maxnonpagedmemoryusage</B>.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Pool Non-paged Failures</B></B></P>
<P CLASS="dt1">The number of times allocations from non-paged pool has failed. Use this counter to determine if the computer's physical memory is too small.</P>
<P CLASS="dt1">Anything other than zero is not recommended.</P>
<P CLASS="term1"><B><B>Pool Non-paged Peak</B></B></P>
<P CLASS="dt1">The maximum number of bytes in a non-paged pool that the server has had in use at any point. Use this counter to determine how much physical memory the computer should have.</P>
<P CLASS="dt1">Lower is better, and should leave a buffer of available RAM. Depending on the applications, additional space might be needed to page data and code.</P>
<P CLASS="term1"><B><B>Pool Paged Bytes</B></B></P>
<P CLASS="dt1">The number of bytes of pageable computer memory that the server is currently using. Helps determine good values for <B>maxpagedmemoryusage</B>.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Pool Paged Failures</B></B></P>
<P CLASS="dt1">The number of times that allocations from the paged pool have failed. Use this counter to determine if the computer's pagefile physical memory is too small.</P>
<P CLASS="dt1">Anything other than zero is not recommended.</P>
<P CLASS="term1"><B><B>Pool Paged Peak</B></B></P>
<P CLASS="dt1">The maximum number of bytes of paged pool that the server has allocated. Use this counter to determine the proper sizes for the page file(s) and physical memory.</P>
<P CLASS="dt1">Lower is better. The total for RAM and page file should be at least 20 percent larger than this number.</P>
<P CLASS="term1"><B><B>Sessions Errored Out</B></B></P>
<P CLASS="dt1">The number of sessions that have been closed due to unexpected error conditions. Use this counter to determine how frequently network problems are causing dropped sessions on the server.</P>
<P CLASS="dt1">Lower is better.</P>
<H4 CLASS="h3"><A NAME="sec10"></A>Server Work Queues Object</H4><P CLASS="term1"><B><B>Bytes Transferred/sec</B></B></P>
<P CLASS="dt1">The rate at which the server is sending and receiving bytes with the network clients on this CPU. Use this counter to determine how busy the server is.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Queue Length</B></B></P>
<P CLASS="dt1">The current length of the server work queue for this CPU. A sustained queue length greater than four can indicate microprocessor congestion. This is an instantaneous count, not an average over time.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Total Bytes/sec</B></B></P>
<P CLASS="dt1">The rate at which the server is reading and writing data to and from the files for the clients on this CPU. Use this counter to determine how busy the server is.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Total Operations/sec</B></B></P>
<P CLASS="dt1">The rate at which the server is performing file read and file write operations for the clients on this CPU. This value will always be zero (0) in the Blocking Queue instance. Use this counter to determine how busy the server is.</P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Work Item Shortages</B></B></P>
<P CLASS="dt1">Each request from a client is represented on the server as a work item, and the server maintains a pool of available work items per CPU to speed processing. A sustained value greater than zero indicates the need to increase <B>MaxWorkItems</B> for the Server service. This value will always be zero (0) in the Blocking Queue instance.</P>
<P CLASS="dt1">Anything other than zero is not recommended.</P>
<H4 CLASS="h3"><A NAME="sec11"></A>SQLServer Object</H4><P CLASS="term1"><B><B>Cache Hit Ratio</B></B></P>
<P CLASS="dt1">The percentage of time that a requested data page was found in the data cache (instead of being read from disk).</P>
<P CLASS="dt1">Higher is better. 99% is desirable. If the percentage consistently averages below 97%, you should increase the amount of memory allocated to SQL&nbsp;Server.</P>
<P CLASS="term1"><B><B>I/O - Outstanding Reads</B></B></P>
<P CLASS="dt1">The number of pending physical reads.</P>
<P CLASS="dt1">Averaging more than two is not recommended.</P>
<P CLASS="term1"><B><B>I/O - Outstanding Writes</B></B></P>
<P CLASS="dt1">The number of pending physical writes.</P>
<P CLASS="dt1">Averaging more than two is not recommended.</P>
<P CLASS="term1"><B><B>Max Tempdb Space Used (MB)</B></B></P>
<P CLASS="dt1">The maximum amount of tempdb RAM used (in MB).</P>
<P CLASS="term1"><B><B>Max Users Connected</B></B></P>
<P CLASS="dt1">The maximum number of user connections used.</P>
<P CLASS="term1"><B><B>NET - Command Queue Length</B></B></P>
<P CLASS="dt1">The number of client requests that are waiting to be handled by the SQL&nbsp;Server working threads.</P>
<P CLASS="dt1">Averaging more than two is not recommended.</P>
<P CLASS="term1"><B><B>User Connections</B></B></P>
<P CLASS="dt1">The number of open user connections.</P>
<P CLASS="dt1">Lower is better. This number should always be at least 10 lower than the maximum limit set in SQL&nbsp;Server. Running out can cause SMS to stall, and also prevents remote access.</P>
<H4 CLASS="h3"><A NAME="sec12"></A>SQLServer-Locks Object</H4><P CLASS="term1"><B><B>Total Locks</B></B></P>
<P CLASS="dt1">A count of all locks being used by SQL Server.</P>
<P CLASS="dt1">Lower is better. This number should be lower than the maximum limit set in SQL&nbsp;Server.</P>
<H4 CLASS="h3"><A NAME="sec13"></A>SQLServer-Log Object</H4><P CLASS="term1"><B><B>Log Space Used (%)</B></B></P>
<P CLASS="dt1">The amount of space allocated to the transaction log.</P>
<P CLASS="dt1">Lower is better. If the log space used exceeds 60 percent, the logical log device needs to be increased in size. This should be monitored for both the tempdb and the SMS database log device.</P>
<H4 CLASS="h3"><A NAME="sec14"></A>System Object</H4><P CLASS="term1"><B><B>% Total Interrupt Time</B></B></P>
<P CLASS="dt1">The sum of % Interrupt Time of all microprocessors divided by the number of microprocessors in the system. </P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>% Total Processor Time</B></B></P>
<P CLASS="dt1">Include this counter to monitor systems with multiple microprocessors. It combines the average microprocessor usage of all microprocessors into a single counter. It can be viewed as the fraction of time spent doing productive work. Each microprocessor is assigned an idle thread in the idle process, which consumes unproductive microprocessor cycles not used by any other threads. </P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Processor Queue Length</B></B></P>
<P CLASS="dt1">The instantaneous length of the microprocessor queue in units of threads. This counter is always 0 unless you are also monitoring a thread counter. All microprocessors use a single queue for threads to wait for microprocessor cycles. This length does not include the threads currently running. A sustained microprocessor queue length greater than two generally indicates microprocessor congestion. This is an instantaneous count, not an average over the time interval.</P>
<P CLASS="dt1">Averaging more than two is not recommended.</P>
<P CLASS="term1"><B><B>System Up Time</B></B></P>
<P CLASS="dt1">The total time (in seconds) that the computer has been operational since it was last started. Use this counter to determine how often to restart the server.</P>
<P CLASS="term1"><B><B>Total Interrupts/sec</B></B></P>
<P CLASS="dt1">The rate at which the computer is receiving and servicing hardware interrupts. The devices that generate interrupts are the system timer, the mouse, data communication lines, network interface cards, and other peripheral devices. This counter provides an indication of how busy these devices are on a computer-wide basis. </P>
<P CLASS="dt1">Lower is better.</P>
<H4 CLASS="h3"><A NAME="sec15"></A>Thread Object</H4><P CLASS="t">The thread object is typically used during debugging when looking for the source of a problem, and particularly when tracking SMSEXEC thread components.</P>
<P CLASS="term1"><B><B>% Processor Time</B></B></P>
<P CLASS="dt1">Threads are the components of a process that execute its code on the microprocessor. This counter indicates which threads are getting microprocessor time. </P>
<P CLASS="dt1">Lower is better.</P>
<P CLASS="term1"><B><B>Elapsed Time</B></B></P>
<P CLASS="dt1">The total elapsed time (in seconds) that this thread has been running.</P>
<P CLASS="dt1">Lower is better. Some threads may need several minutes to initialize. The longer the thread has been running, the greater the chance for a memory leak, or for corruption to occur.</P>
<P CLASS="term1"><B><B>ID Process</B></B></P>
<P CLASS="dt1">The unique identifier of this process. ID process numbers are reused, so they only identify a process for the lifetime of that process.</P>
<P CLASS="term1"><B><B>ID Thread</B></B></P>
<P CLASS="dt1">The unique identifier of this thread. ID thread numbers are reused, so they only identify a thread for the lifetime of that thread.</P>
<P CLASS="term1"><B><B>Priority Base</B></B></P>
<P CLASS="dt1">The current base priority of this thread. The system may raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.</P>
<P CLASS="term1"><B><B>Priority Current</B></B></P>
<P CLASS="dt1">The current dynamic priority of this thread. The system may raise the thread's dynamic priority above the base priority if the thread is handling user input, or lower it towards the base priority if the thread becomes compute bound.</P>
<P CLASS="term1"><B><B>Thread State</B></B></P>
<P CLASS="dt1">The current state of the thread:</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="49pt" VALIGN="TOP"><COL WIDTH="65pt" VALIGN="TOP"><COL WIDTH="222pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Value</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>State</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Meaning</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">0</P></TD><TD VALIGN="TOP"><P CLASS="tt">Initialized</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread has just initialized.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Ready</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is waiting for a microprocessor because none are free.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Running</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is using a microprocessor.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">3</P></TD><TD VALIGN="TOP"><P CLASS="tt">Standby</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is about to use a microprocessor.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">4</P></TD><TD VALIGN="TOP"><P CLASS="tt">Terminated</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread has been terminated.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">5</P></TD><TD VALIGN="TOP"><P CLASS="tt">Wait</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is waiting for a peripheral operation to complete or a resource to become free.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">6</P></TD><TD VALIGN="TOP"><P CLASS="tt">Transition</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is waiting for a resource in order to run (such as waiting for its execution stack to be paged in from disk).</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">7</P></TD><TD VALIGN="TOP"><P CLASS="tt">Unknown</P></TD><TD VALIGN="TOP"><P CLASS="tt">Thread is in an unknown state.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="term1"><B><B>Thread Wait Reason</B></B></P>
<P CLASS="dt1">This counter only applies when the thread is in Wait state. It is:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="50pt" VALIGN="TOP"><COL WIDTH="119pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Value</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>The thread is waiting for</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">0 or 7</P></TD><TD VALIGN="TOP"><P CLASS="tt">Executive</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">1 or 8</P></TD><TD VALIGN="TOP"><P CLASS="tt">Free page</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">2 or 9</P></TD><TD VALIGN="TOP"><P CLASS="tt">Page in</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">3 or 10</P></TD><TD VALIGN="TOP"><P CLASS="tt">Pool allocation</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">4 or 11</P></TD><TD VALIGN="TOP"><P CLASS="tt">Execution delay</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">5 or 12</P></TD><TD VALIGN="TOP"><P CLASS="tt">Suspended condition</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">6 or 13</P></TD><TD VALIGN="TOP"><P CLASS="tt">User request</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">14</P></TD><TD VALIGN="TOP"><P CLASS="tt">Event pair high</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">15</P></TD><TD VALIGN="TOP"><P CLASS="tt">Event pair low</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">16</P></TD><TD VALIGN="TOP"><P CLASS="tt">LPC receive</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">17</P></TD><TD VALIGN="TOP"><P CLASS="tt">LPC reply</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">18</P></TD><TD VALIGN="TOP"><P CLASS="tt">Virtual memory</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">19</P></TD><TD VALIGN="TOP"><P CLASS="tt">Page out</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h3"><A NAME="sec16"></A>Network Performance Objects</H4><P CLASS="t">You should also include counters to monitor network throughput. The counters you choose depend upon your network protocol and whether the computer is primarily a client, a server, or both. NetBios: Bytes Total/sec for NWLink and Network Interface: Bytes Total/sec for TCPIP/SNMP are good overview counters.</P>
<H4 CLASS="h3"><A NAME="sec17"></A>Locating Bottlenecks in the SMS Executive</H4><P CLASS="t">The SMS Executive is an SMS service that controls multiple SMS components. Because these components all run as threads under SMSEXEC, it can be quite difficult to determine what each component is doing. This section explains how to determine which SMS component thread is causing a bottleneck. The section assumes a problem with CPU utilization, but the technique discussed can be applied to other tuning concerns as well.</P>
<P CLASS="t">To determine if you have a CPU bottleneck, you might start by monitoring the Process: %Processor Time for the Idle process. If this counter is less than about 15 percent, you probably have a CPU bottleneck. Monitor the other system processes to determine which one is using the most CPU time. If the bottleneck is in SMSEXEC, use the following procedure to determine which thread in SMSEXEC is causing the problem:</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    For all instances of SMSEXEC, add counters for THREAD: %Processor Time and THREAD: ID Thread.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Determine which thread is taking the most processor time. Note the instance number (decimal) reported in the Instance column in the chart.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Determine which ID Thread counter has the same instance number. Note the value that is reported in decimal and convert this number to hexadecimal. </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Start the Registry Editor (<B>regedt32</B>). </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Locate the thread ID that matches the ID Thread counter under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS\COMPONENTS \SMS_EXECUTIVE\Threads. This thread is taking the CPU time.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    If the ID Thread is a SQL&nbsp;Server thread, consider turning on SQL&nbsp;Server tracing. This will provide a log of the exact SQL statement that is being run. SQL&nbsp;Server tracing is set in following key:</P>
<P>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS\TRACING SQLEnabledc</P>
<P>Use 1 to enable tracing and 0 to disable tracing. To activate this change, stop and restart the SMS Executive.</P>
<P CLASS="t"><B>Note</B></P>
<P>If you suspect that a certain SMS component is causing performance problems, and you want to see the log for the component, you can run the SMSTRACE or the TRACER program against the log file for the component. These programs display the component logs in real-time. The SMSTRACE program has a graphical user-interface and is therefore preferred. For more information, see the SMSTOOLS.HLP file.</P>
<P CLASS="t">If the interface to SQL Server is causing the bottleneck, you can use the SQLTRACE utility provided with SQL Server to monitor SQL Server activity. The SQLTRACE utility is located in the SQL Server program group.</P></BODY></HTML>
