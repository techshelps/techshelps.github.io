<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Trace Logs</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Using Trace Logs</H3><P CLASS="t">SMS employs a number of services to accomplish its tasks. Most SMS services (such as the Hierarchy Manager) consist of a single service component managing one basic task. However, one service (the SMS Executive) consists of a number of service components managing a number of different tasks. Many of the services (including the two already mentioned) are limited to a single copy per site; however, some services and components can support multiple copies running in a site (for instance, you may have multiple senders within a site, and services like the Client Configuration Manager run on every SMS logon server running Windows&nbsp;NT Server). </P>
<P CLASS="t">When tuning or troubleshooting an SMS system, it is extremely important to understand the services and how they are performing. A key indicator is the service trace logs. These logs record the specific actions each service takes, and any errors that are encountered. The log files are ASCII text files that can be viewed with a text editor. Viewing the log files can help you monitor the system and diagnose problems.</P>
<P CLASS="t">Services or components installed on multiple servers (such as senders, Client Configuration Manager, Inventory Agent, and Package Command Manager) read the trace log configuration from the registry of the site server. For example, the Inventory Agent for Windows&nbsp;NT installed on an SMS logon server uses the tracing setting specified for the Inventory Agent on the site server.</P>
<P CLASS="t">The size of the log files is determined by the Trace Log Maximum Size setting, and the amount of data logged. The Trace Log Maximum Size setting determines the maximum size of the trace file. When enough data has been logged so that the file reaches the maximum size, the service renames the current file and starts a new log file. The backup log file has the same name as the active log file, except that the extension for the backup log file has a trailing underscore. For example, the primary log file for the Despooler is called DESPOOL.LOG; the backup log file is called DESPOOL.LO_. If a backup log file already exists, the component overwrites that backup log file when it backs up the log file again.</P>
<P></P>
<P CLASS="t">Because the service keeps a backup log file, the actual amount of data logged can be up to twice the size of the maximum value you set. For example, if you set the Trace Log Maximum Size to 1 MB, you can have up to 2 MB of logged data—1&nbsp;MB for the active log file and 1 MB for the backup log file. Therefore, when you plan the amount of disk space taken by a component for trace logging, you should plan for twice the size of the Trace Log Maximum Size setting.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Default Services, Registry Keys, and Log File Names</H4><P CLASS="t">The default log files for SMS services and components are defined in the following table. </P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="221pt" VALIGN="TOP"><COL WIDTH="87pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Service/component</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Registry key</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Log file name</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Alerter</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_ALERTER</P></TD><TD VALIGN="TOP"><P CLASS="tt">ALERTER.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Applications Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_APPLICATIONS_MANAGER</P></TD><TD VALIGN="TOP"><P CLASS="tt">APPMAN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Bootstrap</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_BOOTSTRAP</P></TD><TD VALIGN="TOP"><P CLASS="tt">BOOT.LOG </P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Client Configuration Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_CLIENT_CONFIG_MANAGER</P></TD><TD VALIGN="TOP"><P CLASS="tt">CLICFG.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Despooler</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_DESPOOLER</P></TD><TD VALIGN="TOP"><P CLASS="tt">DESPOOL.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Hierarchy Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_HIERARCHY_MANAGER</P></TD><TD VALIGN="TOP"><P CLASS="tt">HMAN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Inventory Agent</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_INVENTORY_AGENT_NT</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVAGENT.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Inventory Data Loader</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_INVENTORY_DATA_LOADER</P></TD><TD VALIGN="TOP"><P CLASS="tt">DATALODR.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Inventory Processor</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_INVENTORY_PROCESSOR</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVPROC.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">LAN Sender</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_LAN_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">LANSEND.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Maintenance Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_MAINTENANCE_MANAGER</P></TD><TD VALIGN="TOP"><P CLASS="tt">MAINTMAN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Package Command Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_PACKAGE_COMMAND_MANAGER_NT</P></TD><TD VALIGN="TOP"><P CLASS="tt">PACMAN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">RAS Sender (Asynchronous)</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_ASYNC_RAS_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">RASASYNC.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">RAS Sender (ISDN)</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_ISDN_RAS_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">RASISDN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">RAS Sender (X.25)</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_X25_RAS_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">RASX25.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Scheduler</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_SCHEDULER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SCHED.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Site Configuration Manager</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_SITE_CONFIG_MANAGER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SCMAN.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Site Reporter</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_SITE_REPORTER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SITEREPT.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SMS Executive</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_EXECUTIVE</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMSEXEC.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SMS&nbsp;Administrator</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_USER_INTERFACE</P></TD><TD VALIGN="TOP"><P CLASS="tt">UI.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SNA Sender (BATCH)</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_BATCH_SNA_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SNABATCH.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SNA Sender (INTER)</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_INTER_SNA_SENDER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SNAINTER.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SNA Receiver</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_SNA_RECEIVER</P></TD><TD VALIGN="TOP"><P CLASS="tt">SNARECV.LOG</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SNMP Trap Receiver</P></TD><TD VALIGN="TOP"><P CLASS="tt">SMS_TRAP_FILTER</P></TD><TD VALIGN="TOP"><P CLASS="tt">TRAPFLTR.LOG</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h3"><A NAME="sec1"></A>Controlling Service Tracing</H4><P CLASS="t">By default, tracing is turned on for both primary and secondary sites. All services are enabled for tracing, and the default trace log file size is set to a maximum of 128K. There are two ways to modify tracing properties:</P>
<UL><LI>Use the SMS Service Manager to turn tracing on or off for each service or for each component in the SMS Executive. </LI></UL><P CLASS="t"><B>Note</B></P>
<P>Using the SMS Service Manager to change the state of SMS Executive changes the state of all components within SMS Executive. For example, stopping SMS Executive stops all components within SMS Executive. You should not stop or start individual components in SMS Executive; stop or start SMS Executive itself.</P>
<UL><LI>Use the Windows&nbsp;NT Registry Editor to edit the values for the service keys beneath the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key. To force a service to use its TRACING key entry, you must stop and restart the service. You can use the SMS Service Manager to stop and restart the services.</LI></UL><P CLASS="t">The SMS Service Manager is documented in the SMS version 1.2 <I>Administrator's Guide</I>. Controlling tracing using the registry is described in the following section.</P>
<H5 CLASS="h4"><A NAME="sec2"></A>Controlling Tracing for all Services and Components in a Site</H5><P CLASS="t">The TRACING key has two values (Enabled and SQL Enabled) and subkeys for all SMS services and components. (The subkeys are used to set tracing for individual services and components, and are discussed in the following section.) </P>
<P CLASS="t">The Enabled value in the TRACING key lets you turn on tracing for the site. </P>
<P CLASS="t">The SQL Enabled value enables SMS components and services that access SQL&nbsp;Server to log SQL&nbsp;Server actions to the trace logs of those components and services.</P>
<H5 CLASS="h4"><A NAME="sec3"></A>To control tracing for all services and components in the site</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    On the site server, start the Windows&nbsp;NT Registry Editor (<B>regedt32</B>).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Open the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    To turn on tracing for the site, set the Enabled value in the TRACING key&nbsp;to&nbsp;<B>1</B>. To turn tracing off, set the key to <B>0</B>. To turn on tracing for SQL&nbsp;Server, set the SQLEnabled value in the TRACING key&nbsp;to&nbsp;<B>1</B>. To turn tracing off, set the key to <B>0</B>.</P>
<H5 CLASS="h4"><A NAME="sec4"></A>Controlling Tracing for Individual Services and Components in a Site</H5><P CLASS="t">If you want to control the tracing for each service and component individually, you can do this by setting the subkeys under the TRACING key in the registry.</P>
<H5 CLASS="h4"><A NAME="sec5"></A>To control tracing for individual services and components</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    On the site server, start the Windows&nbsp;NT Registry Editor (<B>regedt32</B>).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Open the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Select the service or component for which you want to set a different tracing option (for example, SMS_ALERTER).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Set the Enabled value for the service or component's subkey below the TRACING key. </P>
<P>Set the value to <B>1</B> to enable tracing and <B>0</B> to disable tracing. For services, the subkey name corresponds to the service name. For components within the SMS Executive service, the subkey name corresponds to the component name. (The SMS_USER_INTERFACE key is for the SMS&nbsp;Administrator.)</P>
<H5 CLASS="h4"><A NAME="sec6"></A>Setting the Trace Log Path and File Name</H5><P CLASS="t">All of the trace files for the SMS services and components are assigned a default path and file name. However, you can specify different trace log paths and file names for each service and component. You can also specify that all services and components use the same trace log file and file name. For more information about the default service and component file names, see "Default Services, Registry Keys, and Log File Names" earlier in this chapter.</P>
<P CLASS="t">The path is a relative path to the drive where the component or service is running. When a service reads the registry to get the path and file name of its trace log file, it adds the drive letter for the drive where the service is running. For example, if the trace log path for the Maintenance Manager is SMS\LOGS \MAINTMAN.LOG and Maintenance Manager runs from drive D, the trace log path is D:\SMS\LOGS\MAINTMAN.LOG. </P>
<P CLASS="t">If the directories in the path do not exist, the component creates the directories. If the file name is specified without a path, the service or component uses the first directory in its path. (This is not recommended since it makes the trace log files difficult to find.)</P>
<P CLASS="t">When specifying a trace log file name, you can use a UNC path; however, this is not recommended, especially for components and services that are installed on multiple computers in a site such as senders, the Inventory Agent, and the Package Command Manager. If you specify a UNC name, all of the copies of the services and components in a site write to the same trace log file. In addition, using a UNC path can cause excessive network traffic.</P>
<H5 CLASS="h4"><A NAME="sec7"></A>To set the path and name of the trace log file</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    On the site server, start the Windows&nbsp;NT Registry Editor (<B>regedt32</B>).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Open the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Select the service or component for which you want to set a different tracing option.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    In the TraceFilename key, set the value for the path and file name.</P>
<H5 CLASS="h4"><A NAME="sec8"></A>Setting the Trace Log File Size</H5><P CLASS="t">You can set the maximum size of the trace log file for individual services or components. To set the maximum file size for a component's log file, you add a MaxFileSize value in the component's tracing key. The value must have a data type of <B>REG_DWORD</B>. The data for the value specifies the size of the log file in bytes. If no MaxFileSize value exists, the log file size is the default (128K). For troubleshooting purposes it is often useful to increase the log file size sufficiently such that the logs can hold a full 24 hours worth of data.</P>
<H5 CLASS="h4"><A NAME="sec9"></A>To set the trace log file size</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    On the site server, start the Windows&nbsp;NT Registry Editor (<B>regedt32</B>).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Open the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Select the service or component for which you want to set a different tracing option.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    From the Edit menu, choose Add Value. </P>
<P>The Add Value dialog box appears.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    In the Value Name box, type MaxFileSize.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    In the Data Type box, select REG_DWORD.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    In the DWORD Editor dialog box, in the radix field, choose Decimal, and then enter the file size for the log file. </P>
<P CLASS="t">The service will keep a backup copy of the log file, so the log files will actually require twice the amount of disk space specified. </P>
<H5 CLASS="h4"><A NAME="sec10"></A>Controlling Tracing for a Component Running as an Executable</H5><P CLASS="t">You can set up tracing for a component of SMS Executive running as an executable instead of as a service (you may want to do this for diagnosing problems in SMS Executive). The executable will display its tracing output directly to the computer display.</P>
<H5 CLASS="h4"><A NAME="sec11"></A>To control tracing for a component running as an executable</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    On the site server, start the Windows&nbsp;NT Registry Editor (<B>regedt32</B>).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Open the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\SMS \TRACING key.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Select the component that is running as an executable. Set the Enabled value in the TRACING key&nbsp;to&nbsp;<B>2</B>. To turn tracing off, set the key to <B>0</B>.</P>
<H4 CLASS="h3"><A NAME="sec12"></A>Using Trace Logs to Troubleshoot Jobs</H4><P CLASS="t">The log file for a component has the file name and location specified by the component's key beneath the TRACING key. You can use an ASCII text editor or word processor to view the trace log for a component. You can also use tracing tools provided in this resource kit. For more information about tracing tools, see SMSTOOLS.HLP.</P>
<P CLASS="t">Each line (a line is a string, terminated with an end of line character) in the log file is an action reported by the component. Each line begins with a description of the action. The description ends with two dollar signs ($$). After the description, the component name is enclosed within angle brackets. The component name is followed by the date and time within angle brackets. The date and time is followed by the thread ID within angle brackets.</P>
<P CLASS="t">An example of the data in a trace log for the Scheduler follows:</P>
<P CLASS="spacing"><BR></P>
<PRE>        Sending completed (0 bytes/sec).~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:28:57 1996~&gt;&lt;thread=C1&gt;
MEMORY USAGE:  45103 bytes in 1595 allocations.~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:28:58 1996~&gt;&lt;thread=C1&gt;
========  Sleeping for 300 seconds  ========~   
$$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:28:59 1996~&gt;&lt;thread=C1&gt;
========  Processing cycle ( 07/18/96 22:33:59 )  ========~   
$$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:33:59 1996~&gt;&lt;thread=C1&gt;
UPDATING JOB T100000B~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:01 1996~&gt;&lt;thread=C1&gt;
&lt;JOB T100000B&gt;~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:01 1996~&gt;&lt;thread=C1&gt;
    Updating status of "Run Command at Workstation" job.~   
$$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:01 1996~&gt;&lt;thread=C1&gt;
Updating status for request T10000B for destination T10.~   
$$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
Updating status for request T10000B for destination T10.~   
$$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
    &lt;JOB STATUS - ACTIVE&gt;    $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
 &lt;SEND STATUS - COMPLETE&gt;    $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
 &lt;WORK STATUS - ACTIVE&gt;~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
UPDATING JOB T1000014~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;
&lt;JOB T1000014&gt;~   $$&lt;SMS_SCHEDULER&gt;&lt;Mon Jul 18 22:34:08 1996~&gt;&lt;thread=C1&gt;</PRE>
<H5 CLASS="h4"><A NAME="sec13"></A>Mapping Job Type and Status in the Log Files</H5><P CLASS="t">In some of the log files, the Job Type and Status attributes are written as numbers. The following table lists the numbers that correspond to the displayed job type or status in the Job Status dialog box.</P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="89pt" VALIGN="TOP"><COL WIDTH="93pt" VALIGN="TOP"><COL WIDTH="164pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Numeric value</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Job type</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Status</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Arrival</P></TD><TD VALIGN="TOP"><P CLASS="tt">Pending</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Workstation</P></TD><TD VALIGN="TOP"><P CLASS="tt">Active</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">3</P></TD><TD VALIGN="TOP"><P CLASS="tt">Server</P></TD><TD VALIGN="TOP"><P CLASS="tt">Canceled</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">4</P></TD><TD VALIGN="TOP"><P CLASS="tt">Completed</P></TD><TD VALIGN="TOP"><P CLASS="tt">Complete</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">5</P></TD><TD VALIGN="TOP"><P CLASS="tt">Reserved</P></TD><TD VALIGN="TOP"><P CLASS="tt">Failed</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">6</P></TD><TD VALIGN="TOP"><P CLASS="tt">Reserved</P></TD><TD VALIGN="TOP"><P CLASS="tt">Retrying</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<H4 CLASS="h3"><A NAME="sec14"></A>Reading the Scheduler Log</H4><P CLASS="t">The Scheduler reports its actions to the SCHED.LOG file. Entries in the SCHED.LOG are reported by job ID. </P>
<P CLASS="t">The following sample log file trace shows that the Scheduler is busy creating (compressing) the package file:</P>
<P CLASS="spacing"><BR></P>
<PRE>Creating package file '\\SMS SITE\SMS_SHRd\site.srv\Sender.box\tosend\DPW00002.W00'.~   
$$&lt;SMS_SCHEDULER&gt;&lt;Sun Oct 20 15:48:32 1995~&gt;&lt;thread=7D&gt;</PRE>
<P CLASS="t">When the Scheduler submits a job to a sender, it assigns a send request number for the send request. In order to determine the send request number, search for the job ID in the SCHED.LOG file (the job ID is displayed in the Jobs window). Then look for the text Send Request associated with the job ID. </P>
<P CLASS="t">For example, the following trace shows that job DPW000AE has the send request number 30008DPW:</P>
<P CLASS="spacing"><BR></P>
<PRE>~====  Send requests found in outbox \\SMS SITE\SMS_SHRd\site.srv\schedule.box.~~   $$&lt;SMS_SCHEDULER&gt;&lt;Fri Oct 20 19:32:33 1995~&gt;&lt;thread=92&gt;
Send Request 30008DPW~    Job:        DPW000AE  DestSite:  DPW~    State:      Pending   Status:               Action:    None~    Total size: 00397693  Remaining: 00397693   Heartbeat: 15:49~    Start:      12:00     Finish:    12:00      Retry:          ~   
$$&lt;SMS_SCHEDULER&gt;&lt;Fri Oct 20 19:32:33 1995~&gt;&lt;thread=92&gt;
Send Request 30009DPW~    Job:        DPW000AF  DestSite:  DPW~    State:      Pending   Status:               Action:    None~    Total size: 00397694  Remaining: 00397694   Heartbeat: 19:32~    Start:      12:00     Finish:    12:00      Retry:          ~   
$$&lt;SMS_SCHEDULER&gt;&lt;Fri Oct 20 19:32:33 1995~&gt;&lt;thread=92&gt;</PRE>
<H4 CLASS="h3"><A NAME="sec15"></A>Reading the Sender Log</H4><P CLASS="t">After you have determined that the Scheduler has submitted the send request to a sender, look in the appropriate sender log for the send request number. For instance, if the send request was submitted to a LAN Sender, look in the LANSEND.LOG file and search for the send request number. </P>
<P CLASS="t">In the following example, the send request number is 30008DPW.</P>
<P CLASS="spacing"><BR></P>
<PRE>Found send request.  ID: 30008DPW, Dest Site: DPW~   
$$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:34:46 1995~&gt;&lt;thread=A3&gt;
~We have 0 active connections   $$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:34:46 1995~&gt;&lt;thread=A3&gt;
Checking for site-specific sending capacity.  Used 0 out of 1.~   
$$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:34:46 1995~&gt;&lt;thread=A3&gt;
~We have 0 active connections   $$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:35:47 1995~&gt;&lt;thread=A3&gt;
~Created sending thread (Thread ID = 110)   $$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:35:47 1995~&gt;&lt;thread=A3&gt;</PRE>
<P CLASS="t">This example shows that the sender has found the send request, and created a sending thread (thread ID = 110) to send the job. Before it created the thread, it verified that it had threads available, and that there were no connections to the destination site.</P>
<P CLASS="t">To continue monitoring the send status, you must use the thread number at the end of each log entry. If multiple threads are active, the messages from the different threads may be intermingled in the log file. </P>
<P CLASS="t">The following example shows a trace log with two active threads. The file name is the package ID (not the job ID nor the send request number). The file type begins with a W (W01 in the following example) to indicate a Run Command On Workstation job. An S is used to indicate a Share Package On Server job.</P>
<P CLASS="spacing"><BR></P>
<PRE>~Wrote 133871 bytes to d:\dpw692\SITE.SRV\despoolr.box\receive\30008DPW.PCK   
$$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:35:50 1995~&gt;&lt;thread=110&gt;
~We have 1 active connections   $$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:36:20 1995~&gt;&lt;thread=A3&gt;
~Sending completed [D:\dpw692\site.srv\Sender.box\tosend\DPW00002.W01]   
$$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:36:20 1995~&gt;&lt;thread=110&gt;
Checking for sending capacity.  Used 1 out of 1.~   
$$&lt;SMS_LAN_SENDER&gt;&lt;Fri Oct 20 19:36:20 1995~&gt;&lt;thread=A3&gt;</PRE>
<H4 CLASS="h3"><A NAME="sec16"></A>Reading the Despooler Log</H4><P CLASS="t">After you have determined that the sender has completed sending the package and the job instructions to a target site, you can look in the despooler log (DESPOOL.LOG) to see if the Despooler has started processing the instruction file. </P>
<P></P>
<P CLASS="t">The following trace shows the Despooler processing the instruction file for job DPW000AE. The instruction file has the send request number as the instruction file name (30008DPW.INS). The Despooler also reports the job ID and package ID. </P>
<P CLASS="spacing"><BR></P>
<PRE>~Found ready instruction 30008dpw.ins   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:42 1995~&gt;&lt;thread=A4&gt;
~Executing instruction of type Microsoft|SMS|WorkstationInstall   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:42 1995~&gt;&lt;thread=A4&gt;
~Successfully read the instruction file   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:42 1995~&gt;&lt;thread=A4&gt;
~Start processing Workstation job, Job ID = DPW000AE, Package ID = DPW00002   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:42 1995~&gt;&lt;thread=A4&gt;</PRE>
<P CLASS="t">The following trace shows the Despooler determining where to decompress the package, and doing the decompression. The Despooler completely recreates the directory structure of the original source tree.</P>
<P CLASS="spacing"><BR></P>
<PRE>~The package file doesn't require a NTFS drive to decompress to.   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:43 1995~&gt;&lt;thread=A4&gt;
~D drive has the most free space, we'll use it for temp storage.   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:43 1995~&gt;&lt;thread=A4&gt;
~Decompressing package W_DPW00002 to D:\_S M0000.TMP   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:43 1995~&gt;&lt;thread=A4&gt;</PRE>
<P CLASS="t">After the package has been decompressed, the Despooler distributes the package to the specified distribution servers. The following example shows the Despooler creating the package share on a distribution server, and then copying the package files to the server.</P>
<P CLASS="spacing"><BR></P>
<PRE>~D drive on server \\SMS SITE is the suitable drive with most free space.   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:58 1995~&gt;&lt;thread=A4&gt;
~Creating share SMS_PKGD on server \\SMS SITE with path D:\SMS_PKGD   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:59 1995~&gt;&lt;thread=A4&gt;
~Setting permissions on \\SMS SITE\SMS_PKGD\DPW00002 for package W_DPW00002   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:14:59 1995~&gt;&lt;thread=A4&gt;
~Finished setting permission on \\SMS SITE\SMS_PKGD\DPW00002   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:00 1995~&gt;&lt;thread=A4&gt;
~Copying package from D:\_S M0000.TMP to \\SMS SITE\SMS_PKGD\DPW00002   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:00 1995~&gt;&lt;thread=A4&gt;
~Copying D:\_S M0000.TMP\itg.dir to d:\SMS_PKGd\DPW00002\itg.dir, OK   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:03 1995~&gt;&lt;thread=A4&gt;
~Copying D:\_S M0000.TMP\itg2.dir to d:\SMS_PKGd\DPW00002\itg2.dir, OK   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:05 1995~&gt;&lt;thread=A4&gt;
~Package W_DPW00002 is installed on server \\SMS SITE, register it in the registry   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:06 1995~&gt;&lt;thread=A4&gt;</PRE>
<P CLASS="t">If the Despooler has to distribute the package to multiple servers, it copies the files from the temporary directory to the other servers. Then the Despooler creates the WIFs for the clients (the Package Command Manager on the clients reads these instruction files). In the trace logs, the WIFs are called WINST files.</P>
<P CLASS="spacing"><BR></P>
<PRE>~Ready to create WINST instructions.   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:06 1995~&gt;&lt;thread=A4&gt;
~Found WINST package server SMS SITE   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:06 1995~&gt;&lt;thread=A4&gt;
~Setting the WINST instruction file, the package path is \\SMS SITE\SMS_PKGD\DPW00002\, the server type is 2, the zone is    
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:06 1995~&gt;&lt;thread=A4&gt;
~Setting winst instructions for domain DWDOM   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:06 1995~&gt;&lt;thread=A4&gt;
~Setting WINST data for machine BVT00001 in domain DWDOM   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:07 1995~&gt;&lt;thread=A4&gt;
~Setting WINST data for machine BVT00002 in domain DWDOM   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:07 1995~&gt;&lt;thread=A4&gt;
~Setting WINST data for machine BVT00003 in domain DWDOM   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:08 1995~&gt;&lt;thread=A4&gt;
~Setting WINST data for machine DPW05000 in domain DWDOM   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:08 1995~&gt;&lt;thread=A4&gt;</PRE>
<P CLASS="t">After the Despooler distributes the package files to all distribution servers, it deletes the temporary directory it created earlier.</P>
<P CLASS="spacing"><BR></P>
<PRE>~ Deleting D:\_S M0000.TMP...   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:08 1995~&gt;&lt;thread=A4&gt;
~Deleted D:\_S M0000.TMP   $$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:08 1995~&gt;&lt;thread=A4&gt;
~Despooler successfully executed one instruction.   
$$&lt;SMS_DESPOOLER&gt;&lt;Fri Oct 20 20:15:08 1995~&gt;&lt;thread=A4&gt;</PRE>
<H4 CLASS="h3"><A NAME="sec17"></A>Reading the Maintenance Manager Log</H4><P CLASS="t">The Maintenance Manager copies the WIFs to all SMS logon servers. After this is done, the Package Command Manager (running on the clients) can offer the new job to clients.</P>
<P CLASS="t">The following trace shows the Maintenance Manager copying the WIFs to the four SMS logon servers in the DWDOM domain.</P>
<P CLASS="spacing"><BR></P>
<PRE>~Working on logon server SMS SITE   $$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:35 1995~&gt;&lt;thread=D6&gt;
~Replicating WINST instructions   $$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:35 1995~&gt;&lt;thread=D6&gt;
~Copying d:\dpw692\site.srv\maincfg.box\pcmdom.box\DWDOM.000\BVT00001.INS to d:\dpw692\logon.srv\pcmins.box\BVT00001.INS, OK   
$$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:35 1995~&gt;&lt;thread=D6&gt;
~Copying d:\dpw692\site.srv\maincfg.box\pcmdom.box\DWDOM.000\BVT00002.INS to d:\dpw692\logon.srv\pcmins.box\BVT00002.INS, OK   
$$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:36 1995~&gt;&lt;thread=D6&gt;
~Copying d:\dpw692\site.srv\maincfg.box\pcmdom.box\DWDOM.000\BVT00003.INS to d:\dpw692\logon.srv\pcmins.box\BVT00003.INS, OK   
$$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:36 1995~&gt;&lt;thread=D6&gt;
~Copying d:\dpw692\site.srv\maincfg.box\pcmdom.box\DWDOM.000\DPW05000.INS to d:\dpw692\logon.srv\pcmins.box\DPW05000.INS, OK   
$$&lt;SMS_MAINTENANCE_MANAGER&gt;&lt;Fri Oct 20 20:51:36 1995~&gt;&lt;thread=D6&gt;</PRE>
<P CLASS="t"></P></BODY></HTML>
