<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Management Within a Site</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">General Management Within a Site</H3><P CLASS="t">The following section describe how SMS logon servers are installed, how clients are installed, and how SMS identifies and tracks computers. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>SMS Logon Server Component Installation</H4><P CLASS="t">When you add a domain to your SMS site (using the Domains dialog box), the Site Configuration Manager service enumerates all detected (or specified) logon servers in the domain and ensures that the SMS components used to support that domain's clients are installed on each logon server. (Note that the site server's domain is added during primary site installation.)</P>
<H5 CLASS="h4"><A NAME="sec1"></A>Windows&nbsp;NT, LAN&nbsp;Manager, and LAN&nbsp;Server Domains</H5><P CLASS="t">To add a Windows&nbsp;NT, LAN&nbsp;Manager, or LAN&nbsp;Server domain, the Site Configuration Manager:</P>
<UL><LI>Creates the SMS root directory on the logon server NTFS drive with the most available space and shares the SMS root directory as SMS_SHR<I>x </I>(where <I>x</I> is the drive letter where the SMS root directory is installed). If an NTFS drive is not available, the Site Configuration Manager creates SMS_SHR<I>x</I> on the largest non-NTFS drive. </LI></UL><UL><LI>Creates the LOGON.SRV directory as a subdirectory of the SMS root directory and shares it as SMS_SHR.</LI></UL><UL><LI>Copies all logon server components to the LOGON.SRV directory.</LI></UL><UL><LI>On computers running Windows&nbsp;NT Server, installs and starts the Inventory Agent for Windows&nbsp;NT to collect inventory on the logon server. On LAN&nbsp;Manager version&nbsp;2.<I>x</I> servers, installs and starts the Inventory Agent for OS/2.</LI></UL><UL><LI>On computers running Windows&nbsp;NT Server, installs and starts the Package Command Manager for Windows&nbsp;NT to collect inventory on the logon server.</LI></UL><UL><LI>On computers running Windows&nbsp;NT Server, installs and starts the Client Configuration Manager service to process *.CCR files from clients running Windows&nbsp;NT. The Client Configuration Manager uses information in the *.CCR files to configure SMS services on clients running Windows&nbsp;NT.</LI></UL><UL><LI>Adds the SMSLS batch file to the replication (REPL$) and NETLOGON shares, if the Automatically Configure Workstation Logon Scripts option is enabled. The Site Configuration Manager also adds the SMSLS batch file to all user profiles. If a user has an existing logon script, it adds a call to the SMSLS batch file to the script. If a user has no logon script, it adds the SMSLS batch file to the user's profile.</LI></UL><P CLASS="t">If the Use All Detected Servers option is enabled, the Site Configuration Manager monitors the domain for any new servers that have been added to the domain, including servers that were temporarily off the network and are now back on. When it detects a new server, the Site Configuration Manager copies files to the new server.</P>
<H5 CLASS="h4"><A NAME="sec2"></A>NetWare Domains</H5><P CLASS="t">In NetWare domains, the Site Configuration Manager installs logon server components on all detected (or specified) logon servers. The Site Configuration Manager places files on the NetWare volume with the most free space. If the Automatically Configure Workstation Logon Scripts option is enabled, it modifies the system logon script for the logon server to run the SMS Client Setup program and the Inventory Agent for MS-DOS.</P>
<P CLASS="t">If the Use All Detected Servers option is enabled, the Site Configuration Manager enumerates all NetWare file servers on the network within 16 router hops and installs the logon server components on these servers. After the initial installation of the domain, the Site Configuration Manager continues to monitor the network for new file servers and adds logon server components to any it detects.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>Clients</H4><P CLASS="t">The following sections describe how clients are installed and how SMS Client Setup works. This section applies to all SMS clients except for SMS logon servers and Macintosh clients. Installation of SMS logon servers is described in "SMS Logon Server Component Installation" earlier in this chapter. Macintosh clients use the Apple&reg; Installer to set up SMS. For more information on how Macintosh clients are installed, see the SMS version 1.2 product documentation.</P>
<H5 CLASS="h4"><A NAME="sec4"></A>Client Installation Process</H5><P CLASS="t">There are three ways that clients are added to an SMS site:</P>
<UL><LI>A user at a client can connect to an SMS logon server in an SMS-enabled domain and run the RUNSMS batch file. This file calls the SMS Client Setup program (CLI_NT.EXE, CLI_OS2.EXE, or CLI_DOS.EXE), which copies SMS files to the client and configures SMS client components. The RUNSMS batch file also calls the Inventory Agent, which collects inventory if the appropriate inventory frequency interval has passed.</LI></UL><UL><LI>You can use the Automatically Configure Workstation Logon Scripts option to modify logon scripts for all users. This runs the SMSLS.BAT file when a user logs on to the network.</LI></UL><UL><LI>For Windows&nbsp;NT, LAN&nbsp;Manager, and LAN&nbsp;Server domains, you can manually add the SMSLS batch file to a user's logon script. For NetWare domains, the system login script or individual user login scripts can be modified on NetWare servers to run the SMSLS.SCR script.</LI></UL><P CLASS="t">When you make a manual connection to the SMS_SHR of an SMS logon server and run the RUNSMS batch file, the client is added to the SMS domain of the SMS logon server where you ran the RUNSMS batch file command.</P>
<P CLASS="t">When you run the SMSLS batch file as part of a logon script, the SETLS program (which is run from within the SMSLS batch file) can read SMSLS.INI to locate a server domain where the client should be added. SMSLS.INI enables you to use existing configurations on a client to map the client to a specific SMS domain and site. </P>
<P CLASS="t">SETLS evaluates SMSLS.INI from top to bottom and uses the first successful match in the mapping list. After it finds a match, it uses the mapped domain as the client's SMS domain and attempts to find a random server within that domain. SETLS then connects to that server and runs SMS Client Setup and the Inventory Agent. If SMSLS.INI is not found, SETLS runs these programs on the current SMS logon server.</P>
<H5 CLASS="h4"><A NAME="sec5"></A>How SMS Client Setup Works</H5><P CLASS="t">The SMS Client Setup program is called by the RUNSMS (or SMSLS) batch file after it determines the client's operating system. There are three versions of the SMS Client Setup program that support computers running Windows&nbsp;NT, Windows&nbsp;95, Windows version&nbsp;3.1, Windows for Workgroups 3.11, MS-DOS, and OS/2. Note that Macintosh computers use the Apple Installer program to set up and configure the client.</P>
<P CLASS="t">For computers running Windows&nbsp;NT, the SMS Client Setup program is CLI_NT.EXE. There are three subdirectories beneath the LOGON.SRV directory to support the three microprocessor types supported by SMS for Windows&nbsp;NT: ALPHA.BIN, MIPS.BIN, and X86.BIN. Each subdirectory contains the SMS Client Setup program (CLI_NT.EXE) for each microprocessor type running Windows&nbsp;NT. </P>
<P CLASS="t">For computers running MS-DOS, Windows version&nbsp;3.1, Windows for Workgroups 3.11, and Windows&nbsp;95, the SMS Client Setup program is CLI_DOS.EXE. The X86.BIN subdirectory beneath the LOGON.SRV directory contains the CLI_DOS.EXE program.</P>
<P CLASS="t">For computers running OS/2, the SMS Client Setup program is CLI_OS2.EXE. The X86.BIN subdirectory beneath the LOGON.SRV directory contains the CLI_OS2.EXE program.</P>
<H5 CLASS="h4"><A NAME="sec6"></A>SMS Client Setup General Actions</H5><P CLASS="t">SMS Client Setup performs the following actions:</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Determines whether SMS.INI exists on the client. </P>
<P>If SMS Client Setup cannot find SMS.INI, SMS Client Setup considers this a new installation.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Determines the language and operating system. </P>
<P>The SMS Client Setup program must detect the language used on the computer to install the files appropriate for the language on that computer. SMS Client Setup also needs to know the operating system so that the appropriate copy-list file and modification file are installed and configured properly. On computers running Windows&nbsp;NT, the microprocessor type must also be detected so the files for the appropriate microprocessor type are installed.</P>
<P>If SMS Client Setup detects a different operating system from the one recorded in the <B>OS </B>entry of the [SMS] section in SMS.INI, SMS Client Setup displays a warning message and stops. SMS currently supports one operating system per computer. To force the SMS components to be upgraded to a new operating system, you must run SMS Client Setup in upgrade mode or run UPGRADE.BAT from an SMS logon server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Reads the copy-list file on the SMS logon server for the location of the SMS client component files for the computer's operating system and language.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Opens the appropriate language DLL so that messages can be displayed with the language appropriate for the client.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Reads DOMAIN.INI (from the SMS logon server) to update information in the SMS.INI file.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    Performs the required actions depending on the mode that SMS Client Setup is running in. </P>
<P>For more information, see the following sections.</P>
<H5 CLASS="h4"><A NAME="sec7"></A>Installation Mode</H5><P CLASS="t">If installation is required, SMS Client Setup performs the following steps:</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Performs the checks listed in the preceding section.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Attempts to create a new SMS ID for the computer using the *.UID file in the SMS logon server's LOGON.SRV\SMSID directory.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Finds the local drive with the most free disk space. </P>
<P>SMS client components are installed on this drive if the <B>/d:</B><I>drive </I>parameter is not specified.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Detects the computer's microprocessor type so that the files that are appropriate for the microprocessor type are installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Determines the network type using the <B>NetworkType </B>entry specified in the LOGON.SRV\DOMAIN.INI file on the SMS logon server. </P>
<P>This entry specifies which network operating system is used by the SMS logon server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    Creates the SMS.INI file in the root of the first local hard disk drive (usually, this is drive C).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    Decides which files to download using the CL_<I>x</I>.TXT file and the <B>Components </B>entry in the [SMS] section of the DOMAIN.INI file. </P>
<P>SMS Client Setup tries to copy files to the drive with the most free space, unless you use the <B>/d:</B><I>drive</I> option to specify another drive. If space is unavailable on the drive you specify, SMS Client Setup will not complete the installation. </P>
<P>If it cannot copy down one or more files, SMS Client Setup writes the names of these files to the <B>FilesNotDownloaded </B>entry in the [Workstation Status] section of the SMS.INI file.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    Creates a local copy-list file (CL_<I>x</I>.TXT).</P>
<P CLASS="ltbl"></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="106pt" VALIGN="TOP"><COL WIDTH="228pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Copy-list file</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Operating system</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_NT.TXT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows NT</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_W95.TXT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows 95</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_WIN.TXT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows 3.1 and Windows for Workgroups 3.11</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_OS2.TXT</P></TD><TD VALIGN="TOP"><P CLASS="tt">OS/2</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_DOS.TXT</P></TD><TD VALIGN="TOP"><P CLASS="tt">MS-DOS</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;9.    Uses the [SMS] section in the DOMAIN.INI file as well as the appropriate configuration file (CL_WIN.MOD, CL_DOS.MOD, and so on) to see what modifications it needs to make at the client.</P>
<P CLASS="ltbl"></P>

<TABLE COLS="3" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="94pt" VALIGN="TOP"><COL WIDTH="121pt" VALIGN="TOP"><COL WIDTH="162pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>MOD file</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Operating system</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Logon server location</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_NT.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows NT (Alpha)</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\ALPHA.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_NT.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows NT (MIPS)</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\MIPS.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_NT.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows NT (x86)</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\X86.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_W95.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows&nbsp;95</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\X86.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_WIN.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows 3.1 and Windows for Workgroups 3.11</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\X86.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_OS2.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">OS/2</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\X86.BIN\<I>language_id</I></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">CL_DOS.MOD</P></TD><TD VALIGN="TOP"><P CLASS="tt">MS-DOS</P></TD><TD VALIGN="TOP"><P CLASS="tt">LOGON.SRV\X86.BIN\<I>language_id</I></P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;10.    Modifies the system configuration to add the SMS components. How this is done depends on the type of client.</P>
<P><B>For clients running Windows&nbsp;NT:</B></P>
<UL><LI>Uses information in CL_NT.MOD to create SMSRUN32.INI in the MS\SMS\DATA directory. This file specifies which SMS applications to start automatically and which program groups to create. </LI><LI>Starts SMSRUN32.EXE. SMSRUN32.EXE reads SMSRUN32.INI. SMS Client Setup modifies the HKEY_CURRENT_USER\Software \Microsoft\WindowsNT\CurrentVersion\Windows\Load value in the Windows&nbsp;NT registry to run SMSRUN32.EXE. SMSRUN32.EXE runs the programs listed in the [Startup] section of SMSRUN32.INI. Note that SMSRUN32.EXE is only started by SMS Client Setup when it cannot find SMSRUN32.EXE in the Load value of the HKEY_CURRENT_USER \Software\Microsoft\WindowsNT\CurrentVersion\Windows key.</LI></UL><P><B>For clients running Windows&nbsp;95: </B></P>
<UL><LI>Uses information in CL_W95.MOD to create SMSRUN16.INI in the MS\SMS\DATA directory. This file specifies which SMS applications to start automatically and which Start menu items to create.</LI><LI>Modifies WIN.INI to run SMSRUN16.EXE from the <B>LOAD= </B>line in the [Windows] section of the WIN.INI file. From then on, when Windows is started, SMSRUN16 runs and uses information in SMSRUN16.INI to decide which applications to start and which Start menu items to set up.</LI><LI>Creates MS\SMS\DATA\CLIENT.BAT and modifies AUTOEXEC.BAT to run CLIENT.BAT prior to running Windows. The call to CLIENT.BAT is inserted at the end of the AUTOEXEC.BAT file.</LI><LI>If the client is to be configured for remote troubleshooting, SMS Client Setup modifies these settings in the [386Enh] section of the SYSTEM.INI file: <B>Device=vuser.386 </B>and <B>NetHeapSize </B>(sets it to 48 if the current value is less than 48; keeps the current setting if the value is greater than 48).</LI><LI>If the client is to be configured for Program Group Control, SMS Client Setup:</LI><LI>Modifies these settings in the [386Enh] section of the SYSTEM.INI file: <B>Device=vsmsnet.vxd</B> and <B>Device=smsroutr.vxd</B>.</LI><LI>Installs and configures the SMS Naming Network Provider (NNP) in the registry by adding the entry SMS Naming Network Provider with a value of NNP.EXE to the key HKEY_LOCAL_MACHINE\Software \Microsoft\Windows\CurrentVersion\RunServices.</LI></UL><P><B>For clients running Windows version&nbsp;3.1 and Windows for Workgroups: </B></P>
<UL><LI>Uses information in CL_WIN.MOD to create SMSRUN16.INI in the MS\SMS\DATA directory. This file specifies which SMS applications to start automatically and which program groups to create. </LI><LI>Modifies WIN.INI to run SMSRUN16.EXE from the <B>LOAD= </B>line in the [Windows] section of the WIN.INI file. From then on, when Windows is started, SMSRUN16 runs and uses information in SMSRUN16.INI to decide which applications to start and which program groups to set up.</LI><LI>Creates MS\SMS\DATA\CLIENT.BAT and modifies AUTOEXEC.BAT to run CLIENT.BAT prior to running Windows (SMS Client Setup looks for the <B>win</B> command on each line).</LI><LI>If the client is to be configured for remote troubleshooting, SMS Client Setup:</LI><LI>Modifies these settings in the [386Enh] section of the SYSTEM.INI file: <B>Device=vuser.386 </B>and <B>NetHeapSize </B>(sets it to 56 if the current value is less than 56; keeps the current setting if the value is greater than 56).</LI></UL><P><B>For clients running only MS-DOS (that is, MS-DOS without Windows&nbsp;version&nbsp;3.1 or Windows for Workgroups installed on the computer):</B></P>
<UL><LI>Creates MS\SMS\DATA\CLIENT.BAT and modifies AUTOEXEC.BAT to run CLIENT.BAT.</LI><LI>If remote troubleshooting is to be installed and automatically started, SMS Client Setup modifies CLIENT.BAT to run USERTSR.EXE or USERIPX.EXE, depending on the network type. </LI><LI>Modifies CLIENT.BAT to automatically start Package Command Manager and the MIF Entry program, if appropriate.</LI></UL><P><B>For clients running OS/2: </B></P>
<UL><LI>Uses information in CL_OS2.MOD to create SMSRUN16.INI in the MS\SMS\DATA directory. This file specifies which SMS applications to start automatically and which program groups to create. </LI><LI>Modifies WIN.INI to run SMSRUN16.EXE from the <B>LOAD= </B>line in the [Windows] section of the WIN.INI file. From then on, when a Windows-based OS/2 session is started, SMSRUN16 runs and uses information in SMSRUN16.INI to decide which applications to start and which program groups to set up.</LI><LI>Creates MS\SMS\DATA\CLIENT.BAT and modifies AUTOEXEC.BAT to run CLIENT.BAT prior to running a Windows-based OS/2 session (SMS Client Setup looks for the <B>win</B> command on each line).</LI><LI>Adds SMSOS2AG.EXE to the STARTUP.CMD.</LI></UL><P CLASS="t"><B>Note</B></P>
<P>When SMS Client Setup modifies system *.INI files, it comments out previous entries, by placing ;SMS in front of those entries. If the client is being removed, SMS Client Setup removes the comment to return the client to its previous state.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;11.    On computers running Windows&nbsp;NT, SMS Client Setup evaluates whether the client has the version of the operating system appropriate for the SMS services to be installed. Then it creates a *.CCR file on the SMS logon server for the Client Configuration Manager. For more information about how SMS services are installed on computers running Windows&nbsp;NT, see "How SMS Client Setup Installs SMS Client Services on Computers Running Windows&nbsp;NT" later in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;12.    Writes INSTALLED in the <B>SetupPhase </B>entry of the [Local] section of the SMS.INI file, on all clients.</P>
<H5 CLASS="h4"><A NAME="sec8"></A>Removal Mode</H5><P CLASS="t">When SMS Client Setup is started using the<B> /r </B>switch to remove a client (or if the DEINSTAL.BAT or DEINSTAL.CMD batch files are run), SMS Client Setup performs the following for each type of operating system.</P>
<P><B>For clients running only MS-DOS</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Removes the existing SMS component files. It also removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<P CLASS="t"><B>For clients running Windows version&nbsp;3.1, Windows for Workgroups, Windows&nbsp;95, and Windows&nbsp;NT:</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Writes DEINSTALL in the <B>SetupPhase </B>entry of the [LOCAL] section of SMS.INI and exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Depending on the operating system, the user must either restart Windows or log off and back on to the network.</P>
<P>For computers running Windows version&nbsp;3.1 and Windows for Workgroups, the user must start or restart Windows to complete the removal.</P>
<P>For computers running <B>Windows&nbsp;95</B> and Windows&nbsp;NT, at the computer, the user must log off and log on to the network.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    The SMSRUN program starts and checks the <B>SetupPhase </B>entry.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    SMSRUN starts the SMSSVR program with the <B>/c </B>switch, which tells SMSSVR to call SMS Client Setup to complete the removal, and then SMSRUN exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    SMSSVR starts SMS Client Setup with the <B>/k </B>switch, which tells SMS Client Setup that it can remove SMS component files to complete the removal.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    SMS Client Setup removes the existing SMS component files. It also removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    On computers running Windows&nbsp;NT, SMS Client Setup creates a *.CCR file on the SMS logon server for the Client Configuration Manager so that the Client Configuration Manager can remove the SMS services from the client. For more information about how SMS services are removed from computers running Windows&nbsp;NT, see "How SMS Client Setup Installs SMS Client Services on Computers Running Windows&nbsp;NT" later in this chapter.</P>
<P CLASS="t"><B>For clients running OS/2:</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    The user should close all Windows-based OS/2 sessions.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    The user runs <B>CLI_OS2 /r</B> or <B>DEINSTAL.CMD</B> from an SMS logon server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    SMS Client Setup performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Writes DEINSTALL in the <B>SetupPhase </B>entry of the [LOCAL] section of SMS.INI, and then exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    The user starts a new Windows-based OS/2 session.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    The SMSRUN program starts and checks the <B>SetupPhase </B>entry.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    SMSRUN starts the SMSSVR program with the <B>/c </B>switch, which tells SMSSVR to call SMS Client Setup to complete the removal, and then SMSRUN exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    SMSSVR starts SMS Client Setup with the <B>/k </B>switch, which tells SMS Client Setup to remove SMS component files to complete the removal.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;9.    SMS Client Setup Removes the existing SMS component files. It also removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<H5 CLASS="h4"><A NAME="sec9"></A>Upgrade Mode</H5><P CLASS="t">When SMS Client Setup is started using the<B> /u </B>switch to upgrade a client (or if the UPGRADE.BAT or UPGRADE.CMD batch files are run), SMS Client Setup performs the following for each type of operating system.</P>
<H5 CLASS="h4"><A NAME="sec10"></A>    For clients running only MS-DOS:</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Detects the computer's microprocessor type so that the files that are appropriate for the microprocessor type are installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Determines the network type using the <B>NetworkType </B>entry specified in the LOGON.SRV\DOMAIN.INI file on the SMS logon server. </P>
<P>This entry specifies which network operating system is used by the SMS logon server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Compares the <B>Components </B>and <B>AutoStart </B>entries in the [SMS] section of the DOMAIN.INI file on the SMS logon server with the <B>InstalledComponents </B>and <B>AutoStartComponents </B>entries in the [WorkstationStatus] section of the SMS.INI file on the client. </P>
<P>By performing this comparison, SMS Client Setup determines which existing SMS client components need to be added, removed, or upgraded.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    Upgrades the SMS components on the client by removing unneeded components, installing new ones, or replacing existing ones.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    Modifies the system configuration to configure the set of SMS components specified by the upgrade.</P>
<P>For more information about how the system configuration is modified for the installation of SMS components, see step 10 in "Installation Mode" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    If SMS Client Setup cannot install a file, it will try again the next time SMS&nbsp;Client Setup runs.</P>
<P><B>For clients running Windows version&nbsp;3.1, Windows for Workgroups, Windows&nbsp;95, and Windows&nbsp;NT:</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    Performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    Detects the computer's microprocessor type so that the files that are appropriate for the microprocessor type are installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    Determines the network type using the <B>NetworkType </B>entry specified in the LOGON.SRV\DOMAIN.INI file on the SMS logon server. </P>
<P>This entry specifies which network operating system is used by the SMS&nbsp;logon&nbsp;server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Writes UPGRADE in the <B>SetupPhase </B>entry of the [LOCAL] section of SMS.INI, and then exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Depending on the operating system, the user must either restart Windows or log off and back on to the network.</P>
<P>For computers running Windows version&nbsp;3.1 and Windows for Workgroups, the user must start or restart Windows to complete the upgrade.</P>
<P>For computers running <B>Windows&nbsp;95</B> and Windows&nbsp;NT, at the computer, the user must log off and log on to the network.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    The SMSRUN program starts and checks the <B>SetupPhase </B>entry.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    SMSRUN starts the SMSSVR program with the <B>/c </B>switch, which tells SMSSVR to call SMS Client Setup to complete the upgrade, and then SMSRUN exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    SMSSVR starts SMS Client Setup with the <B>/k </B>switch, which tells SMS Client Setup that it can remove SMS component files to complete the upgrade. SMSSVR waits for SMS Client Setup to complete the upgrade.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;9.    Compares the <B>Components </B>and <B>AutoStart </B>entries in the [SMS] section of the DOMAIN.INI file on the SMS logon server with the <B>InstalledComponents </B>and <B>AutoStartComponents </B>entries in the [WorkstationStatus] section of the SMS.INI file on the client. </P>
<P>By performing this comparison, SMS Client Setup determines which existing SMS client components need to be added, removed, or upgraded.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;10.    Removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;11.    Upgrades the SMS components on the client by removing unneeded components, installing new ones, or replacing existing ones.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;12.    Modifies the system configuration to configure the set of SMS components specified by the upgrade.</P>
<P>For more information about how the system configuration is modified for the installation of SMS components, see step 10 in "Installation Mode" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;13.    If SMS Client Setup cannot install a file, it will try again the next time SMS&nbsp;Client Setup runs.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;14.    On computers running Windows&nbsp;NT, SMS Client Setup evaluates whether the client has the version of the operating system appropriate for the SMS services to be installed or upgraded. Then it creates a *.CCR file on the SMS logon server for the Client Configuration Manager. For more information about how SMS services are installed or upgraded on computers running Windows&nbsp;NT, see "How SMS Client Setup Installs SMS Client Services on Computers Running Windows&nbsp;NT" later in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;15.    SMSSVR uses the SMSRUN16.INI/SMSRUN32.INI file to set up the SMS&nbsp;Client program group and start SMS components that are configured to start automatically, and then SMSSVR exits.</P>
<P><B>For clients running OS/2:</B></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;1.    The user should close all Windows-based OS/2 sessions.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    The user runs <B>CLI_OS2 /u</B> or <B>UPGRADE.CMD</B> from an SMS logon server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;3.    SMS Client Setup performs the checks listed in "SMS Client Setup General Actions" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    Detects the computer's microprocessor type so that the files that are appropriate for the microprocessor type are installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    Determines the network type using the <B>NetworkType </B>entry specified in the LOGON.SRV\DOMAIN.INI file on the SMS logon server. </P>
<P>This entry specifies which network operating system is used by the SMS logon&nbsp;server.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    Writes <B>UPGRADE</B> in the <B>SetupPhase </B>entry of the [LOCAL] section of SMS.INI, and then exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    The user starts a new Windows-based OS/2 session.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    The SMSRUN program starts and checks the <B>SetupPhase </B>entry.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;9.    SMSRUN starts the SMSSVR program with the <B>/c </B>switch, which tells SMSSVR to call SMS Client Setup to complete the upgrade, and then SMSRUN exits.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;10.    SMSSVR starts SMS Client Setup with the <B>/k </B>switch, which tells SMS Client Setup that it can remove SMS component files to complete the upgrade. SMSSVR waits for SMS Client Setup to complete the upgrade.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;11.    Compares the <B>Components </B>and <B>AutoStart </B>entries in the [SMS] section of the DOMAIN.INI file on the SMS logon server with the <B>InstalledComponents </B>and <B>AutoStartComponents </B>entries in the [WorkstationStatus] section of the SMS.INI file on the client. </P>
<P>By performing this comparison, SMS Client Setup determines which existing SMS client components need to be added, removed, or upgraded.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;12.    Removes the SMS configurations from system files and restores the previous setting that existed before SMS was installed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;13.    Upgrades the SMS components on the client by removing unneeded components, installing new ones, or replacing existing ones.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;14.    Modifies the system configuration to configure the set of SMS components specified by the upgrade.</P>
<P>For more information about how the system configuration is modified for the installation of SMS components, see step 10 in "Installation Mode" earlier in this chapter.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;15.    If SMS Client Setup cannot install a file, it will try again the next time SMS Client Setup runs.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;16.    SMSSVR uses the SMSRUN16.INI file to set up the SMS&nbsp;Client program group and start SMS components that are configured to start automatically, and then SMSSVR exits.</P>
<H5 CLASS="h4"><A NAME="sec11"></A>How SMS Client Setup Installs SMS Client Services on Computers Running Windows&nbsp;NT</H5><P CLASS="t">On a computer running Windows&nbsp;NT, SMS Client Setup runs via a logon script or batch file in the security context of the user logged on to that computer. For SMS 1.2, SMS services and device drivers must be installed and configured (as well as modifications to the registry) for the Client Inventory service, Remote Control Agent service, and SNMP Event to Trap Translator. However, service and device driver installation and configuration require Administrator privilege (in addition, some of the SMS services must also run in the context of a service account with Administrator privilege). In many cases, the user who logs on to a computer does not have this privilege. To enable users to log on to their computer with the appropriate level of access assigned to them <I>and</I> enable SMS to install and configure SMS services on clients running Windows&nbsp;NT, SMS 1.2 has enhancements to SMS Client Setup as well as two additional components (the Client Configuration Manager service and CLIMONNT.EXE). </P>
<P CLASS="t">This section describes how the following SMS client services and components are installed on computers running Windows&nbsp;NT:</P>
<UL><LI>Remote Control Agent</LI></UL><UL><LI>Client Inventory</LI></UL><UL><LI>SNMP Event to Trap Translator</LI></UL><H5 CLASS="h4"><A NAME="sec12"></A>    How SMS client services are installed, upgraded, and removed:</H5><p>&nbsp;&nbsp;&nbsp;&nbsp;1.    As described in "How SMS Client Setup Works" earlier in this chapter, SMS Client Setup determines which SMS client components need to be added, removed, or upgraded.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;2.    SMS Client Setup then evaluates whether the client has the version of the operating system appropriate for the SMS services to be installed or upgraded:</P>
<UL><LI>The Remote Control Agent service requires Windows&nbsp;NT version 3.51 or later. If the computer is running an earlier version of the Windows&nbsp;NT operating system, SMS Client Setup will not install this component.</LI><LI>The Client Inventory service is only installed if the SMS_INVENTORY _AGENT_NT service (the version of the Inventory Agent service that runs on SMS logon servers running Windows&nbsp;NT Server) is not already installed.</LI></UL><p>&nbsp;&nbsp;&nbsp;&nbsp;3.    SMS Client Setup adds keys and values to the client's registry to specify configuration data required by the Client Configuration Manager to install, upgrade, or remove SMS client services.</P>
<P>SMS Client Setup adds configuration data in the following key:</P>
<P>HKEY_LOCAL_MACHINE\Software\Microsoft\SMS\Client Services</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;4.    If any components needed to be installed, upgraded, or removed, SMS Client Setup creates a client configuration request file (<I>sms_id</I>.CCR where <I>sms_id</I> is the SMS ID for the computer requesting a configuration change) on the current SMS logon server in the LOGON.SRV\CCR.BOX directory.</P>
<P>An <I>sms_id</I>.CCR file is an ASCII text file used to notify the Client Configuration Manager that a particular client needs a configuration change.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;5.    If the SMS logon server is a server running LAN&nbsp;Manager or LAN&nbsp;Server, the Maintenance Manager periodically collects the .CCR files from the LOGON.SRV\CCR.BOX directory of the SMS logon server and moves them to the LOGON.SRV\CCR.BOX directory of the site server.</P>
<P>The Client Configuration Manager is available only on SMS logon servers and site servers running Windows&nbsp;NT Server. This means that the Maintenance Manager must move the .CCR files on servers running LAN&nbsp;Manager and LAN&nbsp;Server to the site server for processing.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;6.    At the SMS logon server (or the site server if the .CCR file was collected from an SMS logon server running LAN&nbsp;Manager or LAN&nbsp;Server), the Client Configuration Manager has a CCR processing thread that waits for .CCR files in the LOGON.SRV\CCR.BOX directory and processes the .CCR files.</P>
<P>If the .CCR file was moved to the site server, the Client Configuration Manager service on the site server processes the .CCR file. In this case, connectivity between the site server and the client is required.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;7.    The CCR processing thread reads the .CCR file, connects to the target client registry, and checks whether it has access rights to the computer and its registry (that is, whether the SMS Service Account has access).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;8.    The CCR processing thread reads the client's registry to retrieve information needed to install, configure, or remove each SMS component (Remote Control Agent service, SNMP Event to Trap Translator, and Client Inventory service).</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;9.    For each SMS component, the CCR processing thread performs the required configuration change by installing or removing services, changing service parameters, and so on.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;10.    For each SMS component, the CCR processing thread modifies the appropriate values within the Client Services key of the client's registry to reflect the new configuration.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;11.    If the CCR processing thread completes the configuration requested by a .CCR file, it deletes the .CCR file.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;12.    If the CCR processing thread cannot complete the configurations requested by a .CCR file, it performs one of the following actions:</P>
<UL><LI>If a .CCR file for the same target computer already exists in the LOGON.SRV\CCR.BOX\RETRY directory, the thread updates the CCR in the RETRY directory with the values for the .CCR file in the CCR.BOX directory. After updating the .CCR file in the RETRY directory, the thread deletes the .CCR file in the CCR.BOX directory.</LI><LI>If a .CCR file for the same target computer does not exist in the RETRY directory, the thread moves the .CCR file to that directory.</LI></UL><P>If the Error Reporting Delay time has passed and an event MIF file has not been created for this .CCR file, the Client Configuration Manager writes an event MIF file that reports the following:</P>
<UL><LI>Last error (for example, access denied). </LI><LI>Name of computer where Client Configuration Manager processed the .CCR file.</LI><LI>Name of target computer.</LI><LI>Date and time of the first and last attempt.</LI></UL><P>The Client Configuration Manager has a separate CCR retry thread to process .CCR files placed in the RETRY subdirectory. The CCR retry thread attempts to perform the incomplete configurations by periodically reprocessing the .CCR files in the RETRY directory. Note that the processing of the .CCR files by this thread is the same as the CCR processing thread. For each .CCR file, the CCR retry thread will continue retrying periodically until the retry duration expires for the .CCR file. If an event MIF file was reported for a .CCR file, the CCR retry thread creates an event MIF file for the .CCR file, reporting that the .CCR file has successfully been processed.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;13.    If a configuration change performed by Client Configuration Manager requires the client to be restarted, the Client Monitor program running on the client displays a message stating that a restart is required to finish the configuration of the SMS client components and prompts the user to restart or not.</P>
<P></P>
<P></P>
<P></P>
<P></P></BODY></HTML>
