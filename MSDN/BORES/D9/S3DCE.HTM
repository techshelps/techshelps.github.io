<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How SNMP Works in SMS</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">How SNMP Works in SMS</H3><P CLASS="t">Client services related to SNMP:</P>
<UL><LI>SNMP service (process name SNMP)</LI><LI>TCP/IP NetBIOS helper (not a separate process, part of the network)</LI></UL><P CLASS="t">Site services related to SNMP:</P>
<UL><LI>SMS_CLIENT_CONFIG_MANAGER (process name Clicfg)</LI><LI>SMS_EXECUTIVE (process name SmsExec)</LI><LI>SNMP service (process name SNMP)</LI><LI>TCP/IP NetBIOS helper (not a separate process, part of the network)</LI></UL><P></P>
<P CLASS="t">Site processes not running as a service related to SNMP:</P>
<UL><LI>SNMPTRAP</LI></UL><P CLASS="t">SmsExec thread components related to SNMP:</P>
<UL><LI>TRAPFLTR</LI></UL><P CLASS="t">The <B>net start</B> command will display the service name SNMP Service, but it will also respond to the simpler SNMP when you are controlling it from the command line.</P>
<P CLASS="t">The SMS functionality for Windows&nbsp;NT event to trap translation is a DLL extension (SNMPELEA.DLL) to the SNMP service with the process name of SNMP and service name of SNMP service. The SMS extension to the SNMP service uses the Windows&nbsp;NT file SNMPAPI.DLL. As one thread reads the Windows&nbsp;NT event log, translates events, and adds SNMP traps to a list to be sent, another thread reads the list and has the SNMP service send the trap, and deletes it from the list. This second thread is sometimes called the trap sender. As the list grows, more memory is allocated to the SNMP service. After all the traps have been sent, the memory allocation will return to the original level, and the SNMP service idles. Since the Event to Trap Translator adds traps to the list faster than it sends them, a big burst can add quite a bit of memory allocation to the SNMP service.</P>
<P CLASS="t">The SMS feature trap translator is the TRAPFLTR thread component in SmsExec. TRAPFLTR starts SNMPTRAP.EXE after SmsExec starts TRAPFLTR. SNMPTRAP.EXE receives SNMP traps sent to that client, and passes them to the thread component TRAPFLTR in SmsExec. As the client receives traps, SNMPTRAP.EXE<B> </B>shows CPU activity. TRAPFLTR decides whether to write the trap to the database, or discard it. If it is a burst of traps, TRAPFLTR will get behind, and the memory allocation for SmsExec will grow. As the traps are discarded or written to the database, the memory allocation for SmsExec will be released and return to the original level.</P>
<P CLASS="t">If the Windows&nbsp;NT event log is set to a small size and to overwrite events as needed, and there is a burst of events, the Event to Trap Translator can fall behind and lose traps if they are overwritten before it translates the event.</P>
<P CLASS="t">If a client is sending traps to itself, use Network Monitor (running on a separate computer) to monitor the activity.</P></BODY></HTML>
