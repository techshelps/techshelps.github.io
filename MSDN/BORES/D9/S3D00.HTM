<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inventory Agent</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Inventory Agent</H3><P CLASS="t">Every SMS client has a version of the Inventory Agent program as described in the following table.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="160pt" VALIGN="TOP"><COL WIDTH="187pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Client operating system</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Inventory Agent file name</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Windows&nbsp;NT</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVWIN32.EXE, INV32CLI.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Windows&nbsp;95</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVDOS.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Windows for Workgroups</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVDOS.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Windows version&nbsp;3.1</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVDOS.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">MS-DOS (version 5.0 or later)</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVDOS.EXE</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Macintosh (version 7.0.0 or later)</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVMac</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">OS/2 version&nbsp;2.11 and OS/2 Warp</P></TD><TD VALIGN="TOP"><P CLASS="tt">INVOS2.EXE</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">Except for Macintosh clients, the Inventory Agent runs when the SMSLS or RUNSMS batch file is called. For clients running NetBIOS protocols, such as NetBEUI and TCP/IP, the Inventory Agent program runs from the SMSLS.BAT logon script. For NetWare IPX-based clients, Inventory Agent runs as part of a NetWare system logon script.</P>
<P CLASS="t">Inventory Agent for Windows version&nbsp;3.1, Windows for Workgroups, MS-DOS, Windows&nbsp;95, and Windows&nbsp;NT generates *.RAW files. The Inventory Agent programs for Macintosh and OS/2 clients create ASCII MIF files. Both *.MIF and *.RAW files become binary MIF files after being processed by the Inventory Processor.</P>
<P CLASS="t">On all clients, the Inventory Agent:</P>
<UL><LI>Scans the client for inventory (hardware, software, and ISV MIF files).</LI><LI>Collects files to include in the inventory.</LI></UL><H4 CLASS="h3"><A NAME="sec0"></A>Inventory on Clients Running Windows&nbsp;NT</H4><P CLASS="t">The SMS Client Inventory service (INV32CLI.EXE) is installed on Windows&nbsp;NT-based clients by the Client Configuration Manager, if the SMS Inventory Agent (INVWIN32.EXE) is not running. SMS Client Inventory runs under the LocalSystem security context and thus provides a more complete inventory. The SMS Client Inventory:</P>
<UL><LI>Reads DOMAIN.INI, PKG_16.CFG and <I>smsid</I>.CFG from MS\SMS\DATA on the client.</LI><LI>Takes inventory based on the inventory frequency specified by the administrator in the SMS&nbsp;Administrator.</LI><LI>Places its inventory RAW files locally on the client in the MS\SMS\INVDATA directory.</LI></UL><P CLASS="t">The inventory RAW file on the client is copied to the SMS logon server by Client Monitor. If no user is logged on to the client when inventory is collected, Client Monitor will not start until the next time a user logs on.</P>
<P CLASS="t">As in previous releases of SMS, INVWIN32.EXE is also an Inventory Agent for Windows&nbsp;NT-based clients. INVWIN32.EXE is launched from SMSLS.BAT or RUNSMS.BAT when the user logs on. The INVWIN32.EXE program:</P>
<UL><LI>Reads input files DOMAIN.INI, PKG_16.CFG, and RESYNC.CFG directly from the SMS logon server.</LI><LI>Checks whether this is a different site/domain from the site/domain previously established. If the site/domain is different, it checks to see if inventory was collected against this same new site/domain for a specified number of consecutive times (defaults to 3). If not, it prints a message and exits. If so, it changes the site/domain information in SMS.INI and continues.</LI><LI>Builds (or rebuilds) the list of SMS logon servers in SMS.INI from data in the DOMAIN.INI file.</LI><LI>Takes inventory based on the inventory frequency specified by the administrator in the SMS&nbsp;Administrator and only if it determines that inventory has not been taken within a reasonable time by the SMS Client Inventory service (INV32CLI.EXE).</LI><LI>Places its inventory RAW file on an appropriate SMS logon server.</LI></UL><H4 CLASS="h3"><A NAME="sec1"></A>Inventory on Clients Running MS-DOS, Windows 3.1, Windows for Workgroups, and Windows&nbsp;95</H4><P CLASS="t">On clients running MS-DOS, Windows version&nbsp;3.1, Windows for Workgroups, and Windows&nbsp;95, the Inventory Agent always reports the protocol used while connecting to the SMS logon server. If information about other protocols is available to the Inventory Agent, it will report this also.</P>
<P CLASS="t">On clients running Windows for Workgroups or LAN&nbsp;Manager, you must run the SMSLS.BAT or RUNSMS.BAT file or Inventory Agent using the Full (or Enhanced) Redirector. If you use the Basic Redirector, the Inventory Agent will either not report the inventory or prompt you for an SMS ID. It can also quit the process and display an error. To correct this, start the network software using the Full or Enhanced Redirector.</P>
<H4 CLASS="h3"><A NAME="sec2"></A>Inventory Agent Command Line Options</H4><P CLASS="t">There are four Inventory Agents, each supporting different command line options:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="80pt" VALIGN="TOP"><COL WIDTH="268pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th"><B>Inventory agent</B></P></TD><TD VALIGN="TOP"><P CLASS="th"><B>Client operating system</B></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">INV32CLI</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows&nbsp;NT</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">INVWIN32</P></TD><TD VALIGN="TOP"><P CLASS="tt">Windows&nbsp;NT</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">INVDOS</P></TD><TD VALIGN="TOP"><P CLASS="tt">MS-DOS, Windows 3.1, Windows for Workgroups, Windows&nbsp;95</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">INVOS2</P></TD><TD VALIGN="TOP"><P CLASS="tt">OS/2</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P></P>
<P CLASS="t">These commands are described in the following sections.</P>
<H5 CLASS="h4"><A NAME="sec3"></A>INV32CLI</H5><P CLASS="t">The syntax for INV32CLI is:</P>
<P CLASS="t"><B>inv32cli /T</B><I>minutes</I></P>
<P CLASS="t">Where <I>minutes</I> sets the sleep interval. Using this option temporarily overwrites the initial 24-hour default value. This setting will last until the service is stopped and restarted.</P>
<H5 CLASS="h4"><A NAME="sec4"></A>INVWIN32</H5><P CLASS="t">To run INVWIN32 as an executable file, the syntax is:</P>
<P CLASS="t"><B>invwin32 /E</B> [<B>/F</B>] [<B>/I</B>] [<B>/V</B>] [<B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B>]</P>
<P CLASS="t">To run INVWIN32 as a service, the syntax is:</P>
<P CLASS="t"><B>invwin32 </B>[<B>/F</B>] [<B>/I</B>] [<B>/T</B><I>minutes</I>]</P>
<P CLASS="term1"><B><B>/E</B></B></P>
<P CLASS="dt1">Causes INVWIN32 to be called as an executable file, rather than a service.</P>
<P CLASS="term1"><B><B>/F</B></B></P>
<P CLASS="dt1">Forces an immediate hardware and software inventory.</P>
<P CLASS="term1"><B><B>/I</B></B></P>
<P CLASS="dt1">Performs software and hardware inventory only (does not perform any other task such as downloading or collecting files).</P>
<P CLASS="term1"><B><B>/V</B></B></P>
<P CLASS="dt1">Specifies verbose mode. Displays status messages during execution.</P>
<P CLASS="term1"><B><B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B></B></P>
<P CLASS="dt1">Specifies an SMS server to use for inventory input and output files. Overwrites the specified server in SMS.INI.</P>
<P CLASS="term1"><B><B>/T</B><I>minutes</I></B></P>
<P CLASS="dt1">Sets the service sleep interval to <I>minutes</I>, temporarily overwriting the default value of 24 hours. This setting will last until the service is stopped, and then restarted.</P>
<P CLASS="t"></P>
<P CLASS="t">When running INVWIN32 as a service, specify its switches in the Startup Parameters box in the SMS Service Manager.</P>
<H5 CLASS="h4"><A NAME="sec5"></A>INVDOS</H5><P CLASS="t">The syntax for INVDOS.EXE is:</P>
<P CLASS="t"><B>invdos </B>[<B>/F</B>] [<B>/M</B>] [<B>/I</B>] [<B>/V</B>] [<B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B> | <B>/N\\</B><I>server</I><B> /P</B><I>share</I>]</P>
<P CLASS="term1"><B><B>/F</B></B></P>
<P CLASS="dt1">Forces an immediate hardware and software inventory.</P>
<P CLASS="term1"><B><B>/M</B></B></P>
<P CLASS="dt1">Forces INVDOS to request a unique computer name. </P>
<P CLASS="term1"><B><B>/I</B></B></P>
<P CLASS="dt1">Performs software and hardware inventory only (does not do any other task such as downloading or collecting files).</P>
<P CLASS="term1"><B><B>/V</B></B></P>
<P CLASS="dt1">Specifies verbose mode.</P>
<P CLASS="term1"><B><B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B></B></P>
<P CLASS="dt1">Specifies an SMS server to use for the inventory input and output files. Overwrites the specified server in SMS.INI.</P>
<P CLASS="term1"><B><B>/N\\</B><I>server</I><B> /P</B><I>share</I></B></P>
<P CLASS="dt1">Specifies the location for inventory output files. Overwrites the <B>InventoryCollectionPoint</B> entry in SMS.INI. These switches will also overwrite the <B>/L</B> option.</P>
<H5 CLASS="h4"><A NAME="sec6"></A>INVOS2</H5><P CLASS="t">The syntax for INVOS2.EXE is:</P>
<P CLASS="t"><B>invos2</B> [<B>/V</B>] [<B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B>]</P>
<P CLASS="term1"><B><B>/V</B></B></P>
<P CLASS="dt1">Specifies verbose mode.</P>
<P CLASS="term1"><B><B>/L:\\</B><I>SMS server</I><B>\SMS_SHR</B></B></P>
<P CLASS="dt1">Specifies an SMS server to use for the inventory input and output files. Overwrites the specified server in SMS.INI.</P>
<H4 CLASS="h3"><A NAME="sec7"></A>Temporary Files</H4><P CLASS="t">The SMSSAFE.TMP file is created by the Inventory Agent to record the status of hardware inventory. Every time the Inventory Agent runs, it creates <I>drive</I>:\SMSSAFE.TMP. When it successfully finishes, it deletes this file. If the Inventory Agent doesn't complete inventory successfully, the file remains as a signal that something went wrong during the previous inventory collection. When it runs again, the Inventory Agent writes entries to the empty SMSSAFE.TMP for each test it runs. The results are marked COMPLETED after successfully doing each test or CRASHED, if a hardware test fails. The next time the Inventory Agent runs, it reads the file again; all tests marked CRASHED are skipped and their failure is recorded and written to the [WorkstationStatus] section of the SMS.INI file. After moving the failed tests to the SMS.INI file, the SMSSAFE.TMP file is deleted. The next time the Inventory Agent runs, it will detect the failed tests in the SMS.INI file and skip failed hardware tests.</P>
<P CLASS="t">When you troubleshoot a hardware inventory problem, you may need to disable portions of the hardware detection during the SMS inventory on the client. This can be accomplished by creating your own SMSSAFE.TMP file.</P>
<P CLASS="t">To create a SMSSAFE.TMP file, use a text editor to add valid entries of hardware devices or parameters you want the hardware detection to bypass (listed below). For example, if you want to bypass the mouse detection, enter the following in the SMSSAFE.TMP file:</P>
<P CLASS="spacing"><BR></P>
<PRE>MouseInfo=CRASHED</PRE>
<P CLASS="t">The following are valid entries for SMSSAFE.TMP (FailedHardwareChecks):</P>
<P CLASS="spacing"><BR></P>
<PRE>BanyanVines
BiosInfo
CMOSMemory
CommPorts
ComputerConfig
ComputerName
ConventionalMemory
DeviceInfo
Disks
Dma
DPMIMemory
Drive&lt;X&gt;
EMMMemory
EMMMemoryInfo
ExtendedMemory
GamePorts
IRQInfo
Keyboard
Lanman
LanmanInfo
LanManNetcardInfo
Lantastic
LantasticInfo
MouseInfo
MSNet
NetBios
Novell
NovellInfo
NovellNetcardInfo
PrinterPorts
TSRInfo
VCPIMemory
Video
WolverineInfo
XMSMemory</PRE>
<P CLASS="t">When a failed hardware component is fixed or replaced, remove the appropriate FailedHardwareChecks entry from the [WorkstationStatus] section in SMS.INI and remove the SMSSAFE.TMP file (if it only referenced one component). Start the client again and run the Inventory Agent to include the component.</P></BODY></HTML>
