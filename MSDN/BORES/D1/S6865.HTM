<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Configurations That Affect SMS</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">SQL Server Configurations That Affect SMS</H2><P CLASS="t">The following configurations in SQL Server affect the working of SMS in any primary or central site.</P>
<P CLASS="term1"><B>Sort Order</B></P>
<P CLASS="dt1">SMS will use the same sort order and character set as the SQL Server to execute queries and sort data.</P>
<P CLASS="term1"><B>SQL Login ID</B></P>
<P CLASS="dt1">You must have an SMS SQL Login ID to set up a site as a primary or a central site. This login ID is used during the SMS Setup program as well as to access the site database on the SQL Server after SMS is set up and in operation. In many cases the login ID will be SA, because the SMS administrator is usually also the SQL Server administrator.</P>
<P CLASS="term1"><B>Site Database Devices</B></P>
<P CLASS="dt1">SMS requires that each site have its own database and that the transaction log be on its own device. The site database devices and the database itself can be created in two ways:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI2">The SMS Setup program can create the database and transaction log devices and can also create the database, if the site server has SQL Server installed on it. To do this, the SMS login ID must have system administrator privileges on SQL Server. </LI><LI CLASS="ULI2">If the SQL Server is on a remote machine, then you must create the database devices before running the SMS Setup program, which will create the site database on these existing devices. In this case, the SMS login ID must have Create Database, Dump Database and Dump Transaction permissions on the <B>master </B>database. This enables the SMS Setup program to create and maintain the site database. 
<P CLASS="lt1"><B>Caution</B>   SMS will delete all objects on any database that exists on these devices. SMS requires a database and corresponding transaction log for its own use. Any existing data will be deleted prior to creating a site database on the specified devices on SQL Server.</P></LI></UL></SPAN><P CLASS="term1"><B>tempdb</B></P>
<P CLASS="dt1">The<B> </B>size of <B>tempdb</B> is dependent on the number of computers in a particular site and all its subsites from which inventory will be collected and stored in SQL Server. A larger <B>tempdb</B> improves performance for queries that contain sorts. In general, if there are 1,000 computers on a site, a size of 5 to 10 MB is recommended. The default size of <B>tempdb</B> is 2 MB, and it resides on the <B>master </B>device. It is better to alter the size of <B>tempdb</B> on other devices than to increase its size on the <B>master </B>device. If a site heavily uses SMSVIEWS, the size of <B>tempdb</B> should be appropriately increased to accommodate query or view processing.</P>
<P CLASS="term1"><B>User connections</B></P>
<P CLASS="dt1">SQL Server should have at least 5 user connections configured separately for use by SMS. In practice, it is better to have at least 10 to 15 user connections set aside for SMS alone.</P>
<P CLASS="term1"><B>Memory</B></P>
<P CLASS="dt1">The optimum setting depends on how much RAM is installed on SQL Server and what other applications are running on the SQL Server machine. On a dedicated SQL Server with 32 MB of physical RAM, you can configure 16 MB to SQL Server. This would enable Windows NT Server to have enough memory to run its processes and would prevent page thrashing.</P>
<P CLASS="term1"><B>Open objects</B></P>
<P CLASS="dt1">For SMS, open objects on SQL Server should be configured for 5,000 to 10,000.</P>
<P CLASS="term1"><B>Locks</B></P>
<P CLASS="dt1">For SMS alone, the default configuration of 5,000 locks on SQL Server should be enough. However, if the server has other active databases on it, then this configuration should be adjusted appropriately.</P>
<P CLASS="term1"><B>Time synchronization</B></P>
<P CLASS="dt1">If SQL Server is on a remote machine, the SMS site server and SQL Server should be synchronized with the current time on the site server. On Windows NT, use the net time command.</P>
<P CLASS="term1"><B>Upgrading SQL Server and SMS</B></P>
<P CLASS="dt1">There are some nuances when upgrading SMS and SQL Server to their respective new versions. These can be summarized as follows:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI2">SMS 1.0 is compatible with SQL Server 4.21a servers.</LI><LI CLASS="ULI2">SMS 1.1 is compatible with SQL Server 6.5, SQL Server 6.0, and SQL Server 4.21a.</LI><LI CLASS="ULI2">SMS 1.2 is compatible with SQL Server 6.5.</LI><LI CLASS="ULI2">The order in which SMS and SQL Server are upgraded is important: </LI></UL></SPAN><P>In case of SMS 1.0 and SQL Server 4.21a, the SMS sites should be first upgraded to SMS 1.1, and thereafter SQL Server must be upgraded to 6.0. This is because the SQL Server 6.0 version is incompatible with SMS 1.0.</P>
<P>SQL Server 6.0 can be upgraded to 6.5 as long as the site servers are all running SMS 1.1. </P>
<P CLASS="t"></P></BODY></HTML>
