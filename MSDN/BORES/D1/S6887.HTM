<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Remote Data Objects</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Remote Data Objects</H2><P CLASS="t"><B><I>Using Remote Data Objects with Microsoft SQL Server can mean high performance and flexibility when accessing remote database engines.</I></B></P>
<P CLASS="t">With Remote Data Objects (RDO) and the RemoteData control, your applications can access ODBC data sources without using a local query processor.</P>
<P CLASS="t"><B>Note</B>   This is now possible with DAO 3.5 and ODBCDirect.</P>
<P CLASS="t">This can mean significantly higher performance and more flexibility when accessing remote database engines. Although you can access any ODBC data source with RDO and the RemoteData control, these features are designed to take advantage of database servers, like Microsoft SQL Server and Oracle, that use sophisticated query engines.</P>
<P CLASS="t">By using RDO, you can create simple cursorless result sets, or more complex cursors. You can also run queries that return any number of result sets, or execute stored procedures that return result sets with or without output parameters and return values. You can limit the number of rows returned and monitor all of the messages and errors generated by the remote data source without compromising the executing query. RDO also permits either synchronous or asynchronous operation so your application doesn't need to be blocked while lengthy queries are executed.</P>
<P CLASS="t">This article discusses how to call system stored procedures on SQL Server from RDO.</P></BODY></HTML>
