<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tuning the Procedure Cache</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Tuning the Procedure Cache</H3><P CLASS="t">When tuning the procedure cache, the goal is to determine the optimal size for the purpose of holding the most active stored procedures as well as the other procedure cache data objects. In essence, you want to prevent reading stored procedures from the disk because this is very costly. Moreover, if the procedure cache is large enough, it will prevent the displacement of procedures in the cache by procedures not yet in the cache. (Remember that the SQL Server will store a duplicate copy of each stored procedure execution plan that is accessed by more than one user.) By default, SQL Server distributes 30 percent of available memory to the procedure cache after SQL Server overhead has been allocated. The task is to determine if this 30 percent is sufficient, not enough, or too much based on the size of procedure cache objects.</P>
<P CLASS="t"><B>Note</B>   Do not decrease the procedure cache below 5 percent.</P>
<P CLASS="t">You can determine if the procedure cache is large enough by executing the most frequently used stored procedures and then running the DBCC MEMUSAGE statement; the 12 largest stored procedures in the procedure cache will be displayed. If you have more than 12 stored procedures, you can continue to execute the other procedures, checking each time with the DBCC MEMUSAGE statement to see if one of the previously executed procedures has remained cached. You can also execute each stored procedure, obtaining its execution plan size by using the DBCC MEMUSAGE statement. Once you have executed all high-frequency procedures and obtained their sizes, add these size values to derive the total cache size necessary for all procedures.</P></BODY></HTML>
