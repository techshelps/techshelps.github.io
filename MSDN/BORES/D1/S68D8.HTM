<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Future Concerns</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Future Concerns</H3><P CLASS="t">The following features, supported in SQL Server 6.5, may be discontinued in future versions as functionality is condensed into other features:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Browse Mode: Although SELECT FOR BROWSE is supported in SQL Server 6.5, the functionality of the FOR<B> </B>BROWSE clause in SELECT statements can be achieved more efficiently by using cursors.</LI><LI CLASS="ULI1">Device Mirroring within SQL Server: If your installation of SQL Server is currently using SQL Server mirroring, it is recommended that you use the mirroring functionality of Microsoft Windows NT or hardware-based mirroring instead. </LI><LI CLASS="ULI1">Outer Join Syntax: With SQL Server 6.5, the syntax for outer joins in a WHERE clause (*= and =*) can be replaced with the ANSI-standard join syntax in the FROM clause by using LEFT OUTER JOIN, RIGHT OUTER JOIN, and FULL OUTER JOIN.</LI><LI CLASS="ULI1">Double Quoted Strings: The use of the double quotation mark should be reserved for delimited or quoted identifiers. Although the double quotation mark can still be used to delimit a character string (rather than an object name), if SET QUOTED_IDENTIFIER ON is executed, any string delimited by double quotation marks will be assumed to be an identifier.</LI><LI CLASS="ULI1">Not Equal (!=): The ANSI-standard syntax for representing NOT EQUAL is &lt; &gt;. This should be used in place of != in all cases.</LI><LI CLASS="ULI1">Null Comparison (=NULL): The ANSI standard is IS NULL and should be used in all cases. In fact, if SET ANSI_NULLS ON is in effect, "= NULL" will return FALSE in all cases, because ANSI specifies that no value (even NULL itself) is equal to NULL.</LI><LI CLASS="ULI1">Trace Flags: SQL Trace should be used for monitoring the receive buffer instead of using trace flags 4030 and 4032.
<P CLASS="lt1">Discontinue the use of trace flag 204; the functionality will not exist in future SQL Server versions.</P>

<P CLASS="lt1">Trace flags should be used to temporarily work around a problem until a permanent solution is put in place. Although the information provided by trace flags can help you diagnose problems, keep in mind that trace flags are not part of the supported feature set. This means that future compatibility or continued use is not assured. </P></LI></UL></SPAN><P CLASS="t">Discontinuing the use of the following features should also be considered:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Segments: User-defined segments are often used to cause database objects to be placed on certain devices for performance reasons. The use of multidisk RAID devices generally will provide a greater increase in performance with a lower associated administrative cost.</LI><LI CLASS="ULI1">The DB-Library Two-Phase Commit Library: The Distributed Transaction Coordinator (MS DTC) now provides this capability automatically.</LI></UL></SPAN></BODY></HTML>
