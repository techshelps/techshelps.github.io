<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Disk Subsystem</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Disk Subsystem</H2><P CLASS="t">Achieving optimal disk I/O is the most important aspect of designing an optimal SQL Server solution. The disk subsystem configuration addressed here consists of at least one disk controller device and one or more hard disk units and allows for disk configuration and associated file systems. The goal is to select a combination of these components and technologies that complements the performance characteristics of the SQL Server. Therefore, disk subsystem I/O as it relates to reads, writes, and caching defines the performance characteristics that are most important to SQL Server.</P>
<P CLASS="t">Here are the disk subsystem components and features you should look for in an intelligent, fast, SCSI-2 disk controller or disk-array controller:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Controller memory cache</LI><LI CLASS="ULI1">Bus Master card—Processor onboard results in fewer interrupts to the system CPU(s)</LI><LI CLASS="ULI1">Asynchronous read and write support</LI><LI CLASS="ULI1">32-bit EISA or PCI</LI><LI CLASS="ULI1">Hardware-level RAID support</LI><LI CLASS="ULI1">Fast SCSI-2 drives</LI><LI CLASS="ULI1">Read-ahead caching (at least a track)</LI></UL></SPAN><P CLASS="t">The determination of how many drives of what size, configuration, and level of fault tolerance, is made by looking at the user and application performance requirements, understanding the logical database design and associated data, and understanding the interaction between system memory and disk I/O with respect to Windows NT and SQL Server. </P>
<P CLASS="t">Here are several key concepts that serve as guidelines in the selection of appropriate disk subsystem components: </P>
<P CLASS="term1"><B>Data I/O is random</B></P>
<P CLASS="dt1">Most database I/Os (reads and writes) are random with respect to data and indexes. This is true for online transaction processing and decision support systems.</P>
<P CLASS="term1"><B>Log writes are sequential</B></P>
<P CLASS="dt1">Writes to the SQL Server transaction log are sequential and occur as large bursts of page-level I/O during the checkpoint process or during update, insert, or delete operations.</P>
<P CLASS="term1"><B>Several physical disks </B></P>
<P CLASS="dt1">Optimal access to randomly accessed data and indexes is achieved by distributing the database over several physical disk units in a single-stripped volume (RAID 0 or RAID 5). This results in multiple heads accessing the data and indexes.</P>
<P CLASS="term1"><B>Separate sequential and random data </B></P>
<P CLASS="dt1">Optimal access to sequential data is achieved by isolating it from random data and index volume(s). This is achieved by using separate physical disk units that can be RAID configured (usually RAID 1, mirrored for logs). Sequential access is faster with a single head moving in one direction.</P>
<P CLASS="term1"><B>Multiple controllers</B></P>
<P CLASS="dt1">Duplexing of intelligent disk controllers (SCSI or Array) usually yields improved performance. This is especially true of systems that must sustain high transaction throughputs, systems with small data (buffer) caches, and systems with large data volumes. In addition, if the number of physical disk units exceeds a controller's capacity, another controller is needed.</P>
<P CLASS="term1"><B>Calculate number of disks</B></P>
<P CLASS="dt1">A good way to determine the number of disk units required for an optimal disk subsystem is to multiply the number of I/Os per application transaction by the total number of application transactions per second, as generated by the users or the applications. This yields the total number of user- or application-generated I/Os per second. Take this value and divide it by the average sustainable I/Os per second of the physical disk units you use. (An average range is between 30 and 50 I/Os per second, which includes system overhead and latency.) The result is a recommended number of disk units for this particular SQL Server solution.</P>
<P CLASS="term1"><B>Calculate disk size</B></P>
<P CLASS="dt1">One way to determine the size of the disk units required for an optimal disk subsystem is to divide the total space required for the database by the number of drives determined previously. This yields a value that must then be adjusted according to the RAID level employed and/or the number of controllers employed.</P>
<P CLASS="term1"><B>Separate log and data</B></P>
<P CLASS="dt1">The minimum, optimal, disk-subsystem configuration for any SQL Server solution consists of a SCSI-type controller and at least two SCSI drives. This disk configuration is necessary to isolate the SQL Server transaction log(s) on one physical disk and the database devices or file(s) on the other physical disk.</P>
<P CLASS="t">These concepts should be used as guidelines and not as absolutes. Each SQL Server environment is unique and therefore requires experimentation and tuning appropriate to its conditions and requirements.</P></BODY></HTML>
