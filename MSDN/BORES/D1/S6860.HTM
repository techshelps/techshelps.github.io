<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Options</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">SQL Server Options</H3><P CLASS="t">The SQL Server Setup program offers two options that affect the priority at which SQL Server runs (system behavior). These two options are listed under the <B>Set server options</B> portion of Setup and are called <B>Dedicated multiprocessor performance</B> and<B> Boost SQL Server priority</B>. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>Dedicated Multiprocessor Performance</H4><P CLASS="t">In SQL Server 6.<I>x</I>, the <B>Dedicated multiprocessor performance</B> Setup option has been replaced by the <B>sp_configure</B> advanced option called SMP CONCURRENCY. For more information about this option, see SQL Server 6.5 Books Online.</P>
<P CLASS="t">Selecting <B>Dedicated multiprocessor performance</B> on a symmetric multiprocessor (SMP) computer increases the scalability improvement that multiple CPUs have on SQL Server's performance. Selecting this option is not necessary for SQL Server to benefit from multiple CPUs, but it does increase the amount of improvement. A side effect of selecting the option is that it causes SQL Server to run at a priority of 15. This helps minimize scheduling overhead and obtain maximum benefit from SMP.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Boost SQL Server Priority</H4><P CLASS="t">Selecting <B>Boost SQL Server priority</B> is possible on either a uniprocessor or SMP computer. When selected on a uniprocessor, SQL Server runs at priority 15, which is high but within the variable class of priorities that range from 1 through 15. When selected on an SMP computer, SQL Server runs at priority 24, which is midway into the real-time class of priorities that range from 16 through 31. The following table displays the priority at which SQL Server will run depending on the configuration.</P>

<TABLE COLS="4" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="45pt" VALIGN="TOP"><COL WIDTH="139pt" VALIGN="TOP"><COL WIDTH="56pt" VALIGN="TOP"><COL WIDTH="106pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">Priority </P></TD><TD VALIGN="TOP"><P CLASS="th">Multiprocessor (MP) support</P></TD><TD VALIGN="TOP"><P CLASS="th">Boost</P></TD><TD VALIGN="TOP"><P CLASS="th">SMP computer</P></TD></TR><TR><TD COLSPAN="4" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">7</P></TD><TD VALIGN="TOP"><P CLASS="tt">N/A</P></TD><TD VALIGN="TOP"><P CLASS="tt">OFF</P></TD><TD VALIGN="TOP"><P CLASS="tt">No</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">15</P></TD><TD VALIGN="TOP"><P CLASS="tt">N/A</P></TD><TD VALIGN="TOP"><P CLASS="tt">ON</P></TD><TD VALIGN="TOP"><P CLASS="tt">No</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">7</P></TD><TD VALIGN="TOP"><P CLASS="tt">OFF</P></TD><TD VALIGN="TOP"><P CLASS="tt">OFF</P></TD><TD VALIGN="TOP"><P CLASS="tt">Yes</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">24</P></TD><TD VALIGN="TOP"><P CLASS="tt">OFF</P></TD><TD VALIGN="TOP"><P CLASS="tt">ON</P></TD><TD VALIGN="TOP"><P CLASS="tt">Yes</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">15</P></TD><TD VALIGN="TOP"><P CLASS="tt">ON</P></TD><TD VALIGN="TOP"><P CLASS="tt">OFF</P></TD><TD VALIGN="TOP"><P CLASS="tt">Yes</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">24</P></TD><TD VALIGN="TOP"><P CLASS="tt">ON</P></TD><TD VALIGN="TOP"><P CLASS="tt">ON</P></TD><TD VALIGN="TOP"><P CLASS="tt">Yes</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">With the previous in mind, a number of behaviors concerning SQL Server and the Windows NT thread scheduler are more understandable. One of these concerns when SQL Server is performing a CPU-intensive operation such as some types of joins. Depending on the exact operation and the amount of memory available, the operation could be done entirely in cache—effectively becoming CPU-bound. During this period, SQL Server (even when running at the default priority of 7) could degrade interactive performance. The conditions necessary for this behavior to occur do not happen often. </P>
<P CLASS="t">Another situation where this may occur is if a large single transaction or a large number of smaller transactions needed processing during start-up recovery, as would be the case if the server was abruptly shut down while these transactions were in progress. Depending on the amount of SQL Server cache buffer memory and the exact disk subsystem used, a lengthy recovery can take place mostly or entirely in cache. Because of this, it would be CPU-bound and could degrade interactive performance during this interval. </P>
<P CLASS="t">On a computer dedicated mainly as a database server, interactive console performance is usually not a priority. However, if necessary, SQL Server can be started from the command prompt in the IDLE priority class with a command such as: </P>

<PRE>start /low sqlservr -c -dc:\sql\data\master.dat
</PRE>
<P CLASS="t">Another example is when SQL Server does a large disk initialization. In this case, the operation is extremely I/O-bound, and the lack of any scheduler I/O quotas causes behavior similar to a CPU-bound operation. </P>
<P CLASS="t">Using <B>Boost SQL Server priority</B> on an SMP computer dedicated to SQL Server can improve performance in limited situations. <B>Boost SQL Server priority</B> results in SQL Server running at priority 24, which is in the real-time class. Use of this option is not recommended outside of highly specialized conditions.</P>
<P CLASS="t">If the SQL Server computer is used for purposes other than a pure online transaction processing environment—for example, for ad hoc or decision support queries, as a file server or non-SQL application server, or for interactive use from the console—it is generally best to not use <B>Boost SQL Server priority</B> nor the <B>SMP concurrency</B> setting of -1. SQL Server version 6.0 will automatically use <B>multiprocessor support</B> on computers with three or more processors. Using either <B>Boost priority</B>, or <B>SMP concurrency</B> of anything other than 0 (autoconfigure) can significantly affect Windows NT console responsiveness and overall system behavior in a non-OLTP environment. The default settings for SQL Server version 6.5 provide the best overall behavior across the widest variety of circumstances and should be used in most cases. </P></BODY></HTML>
