<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>How to Call System Stored Procedures on SQL Server from RDO</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">How to Call System Stored Procedures on SQL Server from RDO</H2><P CLASS="t">SQL Server has a number of prewritten, stored procedures that are used to configure and administer your SQL Server. All of these procedures have the prefix <B>sp_</B> that distinguishes them from user-written or application-written stored procedures. </P>
<P CLASS="t">In order to call these stored procedures from RDO, you must specify the <B>master</B> database—the database in which they reside. One effective way to do this is to explicitly reference the stored procedure in your Call syntax. For example::</P>

<PRE>{ ? = call master.dbo.sp_addlogin(?,?) }
</PRE>
<P CLASS="t">Another method is to set the current database before creating and executing your stored procedure. The following example uses a prepared statement and assumes that <B>pubs</B> is your current database:</P>

<PRE>&lt;Object&gt;.Execute "Use Master"  'rdoConnection object
Set &lt;Object&gt; = &lt;Object&gt;.CreatePreparedStatement({call "sp_addlogin(?,?)}", strSQL)
&lt;Object&gt;.Execute               'rdoPreparedStatement object
&lt;Object&gt;.Execute "Use Pubs"    'rdoConnection object
</PRE>
<P CLASS="t">To execute a stored procedure on SQL Server from RDO, perform the following steps:</P>
<P CLASS="ls">Start a new project in Visual Basic. <B>Form1</B> is created by default.</P>
<P CLASS="ls">Add a Command button, <B>Command1</B>, to <B>Form1</B>.</P>
<P CLASS="ls">Paste the following code into the General Declarations section of <B>Form1</B>.</P>
<P CLASS="lt1"><B>Note</B>   You need to change your DATABASE, UID, and PWD parameters in the <B>OpenConnection</B> method.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Private Sub Command1_Click() </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim en As rdoEnvironment</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim cn As rdoConnection</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim rs As rdoResultset</P>
<P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim strConnect As String</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim strSQL As String</P>
<P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Set en = rdoEnvironments(0)</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;en.CursorDriver = rdUseOdbc</P>
<P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;strConnect = "Driver={SQL Server}; Server=MyServer; " &amp; _</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    "Database=pubs; Uid=sa; Pwd="</P>
<P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Set cn = en.OpenConnection(dsName:="", Prompt:=rdDriverNoPrompt, _</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    ReadOnly:=False, Connect:=strConnect)</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Dim ps As rdoPreparedStatement</P>
<P></P>
<P CLASS="lt1"><B>Note</B>   If you don't specify <B>master</B> in the following statement, you will get the error: "An invalid parameter was passed."</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;strSQL = "{ ? = call master.dbo.sp_addlogin(?,?) }"</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Set ps = cn.CreatePreparedStatement("", strSQL)</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.BindThreshold = 1024 'largest column that will be bound under                             ODBC.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print ps.rdoParameters.Count</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.rdoParameters(0).Direction = rdParamOutput</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.rdoParameters(1).Direction = rdParamInput</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.rdoParameters(2).Direction = rdParamInput</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.rdoParameters(1) = "LoginID"</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.rdoParameters(2) = "Password"</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;ps.Execute</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;Debug.Print ps.rdoParameters(0).Value</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;End Sub</P>
<P></P>
<P CLASS="ls">Start the program or press the F5 key.</P>
<P CLASS="ls">Click the <B>Command1</B> button to execute the stored procedure. The parameter count and the output parameter will be displayed in the debug window. </P>
<P CLASS="t"></P></BODY></HTML>
