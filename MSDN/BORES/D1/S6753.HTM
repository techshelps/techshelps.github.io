<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Distributed Data Integrity</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Distributed Data Integrity</H3><P CLASS="t">Distributed data integrity<I> </I>maintains the consistency and accuracy of data that is replicated or partitioned across multiple servers, a key requirement for reliable distributed systems. Microsoft SQL Server provides key features for ensuring distributed data integrity. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>Transaction-based Replication</H4><P CLASS="t">Microsoft SQL Server's built-in data replication enables organizations to maintain system-managed copies of business-critical information across multiple server systems. By maintaining redundant copies of critical information, replication provides for high availability in case of system failure, ensuring continuous access to critical information even if a central computing facility is unavailable. </P>
<P CLASS="t">Because Microsoft SQL Server replicates data under transaction control, the integrity and consistency of data is guaranteed. SQL Server ensures integrity for replicated data with automated synchronization and recovery capabilities. In addition, Microsoft SQL Server supports optional encryption of the data stream to provide the highest level of security between distributed locations.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Automated Synchronization</H4><P CLASS="t">In demanding distributed-computing environments, a database server must ensure that the data being replicated between publishers and subscribers is accurate and consistent. Before data can be replicated effectively across servers, the servers must contain the same initial schema and data. The process of accomplishing this is called synchronization. Synchronization ensures that the table schema and the table data in the publisher and subscriber databases are identical and consistent with one another prior to enabling replication.</P>
<P CLASS="t">Unlike other database systems (which require the data to be synchronized manually), Microsoft SQL Server provides automatic synchronization. SQL Server takes a snapshot of the table schema and data, then automatically transfers that snapshot to subscribing servers. System administrators can select from a variety of transfer methods depending on configuration. </P>
<H4 CLASS="h3"><A NAME="sec2"></A>Constraints for Replication</H4><P CLASS="t">Preserving the update integrity of replicated data across servers is a key requirement of replicated databases. Data at the subscribing server must be identical to the primary copy of the data at the publishing server. To ensure this, most organizations require that modifications to replicated data be made on the primary server (the "owner" of the data), and not on the subscribing servers, each of which receives exact copies of the publishing server's data. This policy prevents potential data loss and inconsistencies due to conflicts and lost updates.</P>
<P CLASS="t">Microsoft SQL Server uniquely supports this key requirement with <I>constraints for replication,</I> an extension to ANSI SQL that allows the use of CHECK constraints to protect the integrity of replicated data. This extension is used to protect horizontally partitioned tables that receive "source" data from another server from unauthorized data modifications to the replicated data. In this way, organizations can ensure that valid updates occur only on the server that "owns" the original copy of the data. Constraints for replication are applied to both "before" and "after" images of updated records to prevent records from being added to or deleted from the replicated range. All deletes and inserts are checked; if they fall within the replicated range, they are rejected.</P>
<P CLASS="t">Microsoft SQL Server is the only DBMS at the time of this writing to provide an automated constraint mechanism to enforce update integrity of replicated data; other systems either do not support this or require this logic to be coded into triggers, which can be a complex and error-prone approach.</P></BODY></HTML>
