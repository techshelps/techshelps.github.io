<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>An Application for Testing Backups</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">An Application for Testing Backups</H3><P CLASS="t">You can create an interface used for automating database consistency checks and running backups, similar to the SQLMaint utility.</P>
<P CLASS="t">You can include customized features such as the ability to start and stop SQL Server. Visual Basic programs can easily check the day and time, which means that the interface could change the type of backup depending on the day of the week. Database dumps could occur on Friday and transaction log dumps on Monday through Thursday. Because the backup process cannot verify the quality of the tape or disk used, it is a good idea to occasionally restore a database from a backup to a test server and check the consistency of the data. This restoration process can be built into the Visual Basic application as a safeguard, as well as to simplify the process in the event of a true media failure. </P>
<P CLASS="t">The following illustration shows a Visual Basic interface that allows you to back up, restore, verify the backup, alert engineers when there are errors, check the efficiency of a range of procedures, and send e-mail reports. </P>
<P CLASS="a"><img src="autoback.gif"></P>
<P CLASS="t">First, you use the Database object's consistency checking methods to check the integrity of the database. Then, you use the <B>Dump</B> method to back up the database. The backup details can be stored in the Backup object and used with the <B>Database Dump</B> method. You can use the Operator and Alert objects to send e-mail. Restore is handled by the Database object's <B>Load</B> method. You can use Visual Basic tools to time stored procedures called with the Database object's <B>ExecuteWithResults</B> or <B>ExecuteImmediate</B> methods, or you can obtain the efficiency information within the stored procedure and return it to the application.</P></BODY></HTML>
