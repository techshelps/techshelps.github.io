<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tune the Query</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Tune the Query</H3><P CLASS="t">If, after examining the query execution plan, you come to the conclusion that the optimizer has chosen the best plan, you should then consider changing the query so that the optimizer will generate a more efficient query execution plan. This can be accomplished by applying many of the techniques and strategies presented earlier in this part. Use of the following commands will also help in tuning the query. These can be executed from SQL Enterprise Manager or ISQL/w.</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">SET STATISTICS TIME ON—This option displays the time it took to parse and compile each statement, along with the time it took to execute each step in the query plan. This option can be used to compare the performance of modifications made to queries and/or indexes.</LI><LI CLASS="ULI1">SET STATISTICS IO ON—This option displays the number of scans, the number of logical reads (pages accessed), and the number of physical reads (disk accesses) for each table referenced in the statement. This option also displays the number of pages written for each statement.</LI></UL></SPAN><P CLASS="t">If the query is still running slowly after query and index tuning, contact the appropriate support personnel to determine if a more serious problem exists. As a last resort, you can force the optimizer to join the tables in the order dictated by the query by executing the SET FORCEPLAN ON statement.</P></BODY></HTML>
