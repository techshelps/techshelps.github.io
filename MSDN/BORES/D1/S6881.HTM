<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multithreading</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Multithreading</H2><P CLASS="t">Multithreading means that a program can create multiple execution threads within a single process to service multiple user requests at the same time. A program, or process,<B> </B>is just<B> </B>a set of instructions and the data that those instructions operate on. Processes can own resources like CPU time, files, I/O devices, and memory. In Win32, every process contains at least one thread of execution. A thread is sometimes referred to as a unit of execution because the scheduler does not schedule processes<I>—</I>it only schedules threads. Windows 3.<I>x</I><B> </B>applications never have more than one thread.</P>
<P CLASS="t">Threads are function calls that execute asynchronously with respect to their creator. Each thread is scheduled based on its priority. It will be run for a predetermined period of time, known as a time quantum, or until a higher priority thread is available. New threads are created by calling <B>CreateThread</B>. The priority of any thread can be changed with <B>SetThreadPriority</B>. Threads can be terminated by calling<B> ExitThread</B> or<B> TerminateThread</B>. If<B> </B>your application uses any C run-time library functions, then you must use <B>_beginthread </B>and<B> _endthread</B>, and then link with the multithreaded C run-time library.<B> </B>This allows the C run-time library to properly initialize and maintain its state information on a per-thread basis. If you link with the single-thread library, you will introduce errors into your multithreaded program.</P>
<P CLASS="t">Creating new threads is fast and simple. How they are executed depends on the hardware and operating system you use.<B> </B>On a Windows NT SMP system, each thread could execute simultaneously on different processors. Under Windows 95, or on any single-processor system, the operating system will preemptively time slice your threads and rotate them with all the other threads waiting to be scheduled.</P>
<P CLASS="t">Threads allow more efficient use of resources. No longer do your programs have to start at the top and sequentially process each step before finishing at the bottom. You can create as many threads as an application needs and attack any problem in parallel. Creating threads is easy. The hard part is preventing multiple threads from interfering with each other.</P></BODY></HTML>
