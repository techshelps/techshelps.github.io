<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OLTP and Data Warehousing</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">OLTP and Data Warehousing</H2><P CLASS="t">An OLTP database is used for speedy, repetitive transactions, such as withdrawing money from a checking account or checking a balance in a savings account at an automated teller machine (ATM). Some of these transactions will change the amount of money in a customer's bank account, so the updates to the database must be quick and accurate. The format of the OLTP database, with its highly normalized tables, row-level or page-level locking, and minimal redundancy, is not optimal for the requirements of data warehousing decision support systems. </P>
<P CLASS="t">A data warehouse database is used for decision support, and queries may differ greatly from those issued to a comparable OLTP database. For example, if a corporate analyst determines that 10 percent of her company's clients are responsible for 60 percent of the revenue, she could institute some extra services for those clients. A data warehouse can help her determine what types of services would appeal to those clients. She could issue various nonrepetitive queries to the database. Unlike the ATM scenario, these queries will not alter the information in the database, so speedy updates requiring row-level or page-level locking are not an issue. The analyst's demands of the data warehouse are for information듧ots of it드t a reasonable speed, despite a query structure that may be less than optimal. </P>
<P CLASS="t">Data warehouses are set up and operated differently from production OLTP systems. When discussing data warehousing, it can be helpful to understand what sets it apart from traditional OLTP databases.</P>
<P CLASS="t">The following table explains the differences between an OLTP database and a data warehouse.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="168pt" VALIGN="TOP"><COL WIDTH="180pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">OLTP database</P></TD><TD VALIGN="TOP"><P CLASS="th">Data warehouse</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">The data being updated is locked to provide a consistent view.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Data locking is not necessary because databases are typically read-only.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Updates are applied to the temporary file and create a lot of overhead in transaction logs and rollback logs.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Because data usually is not updated, transaction logs and rollback logs are not an issue.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Interquery parallelism can be effective, as it spreads executing queries across available processors. Each query is allocated to a single processor.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Intraquery parallelism can be effective, as queries are broken down into subtasks that are executed in parallel.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Database systems are designed around entities, relationships, functional decomposition, and state transition analysis.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Database systems are based on facts, dimensions, hierarchy, and sparsity.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Information in a database is viewed as an atomic transaction.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Information in a database is viewed as a "slice of time."</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Information is locally consistent들t is defined in terms of one database.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Information is globally consistent들ts definition is common to all the database members of the data warehouse system.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Information is gathered for detailed audit trails.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Information is provided to adequately depict the "big picture."</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Relationships between entities are explicitly modeled.</P></TD><TD VALIGN="TOP"><P CLASS="tt">Relationships between entities are implicitly modeled듡act tables exist at the cross section of dimensions.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Whereas an OLTP database should be highly normalized to ensure speedy transactions and minimal redundancy드n extensive index ensures minimal table scans and joins드 data warehouse has only a few tables and is generally denormalized. The number of tables and alternative join paths required for a basic DSS query would overwhelm the query optimizer of a standard OLTP database. OLTP databases build more indexes to resolve queries without scanning the entire table, thereby speeding a transaction. However, although indexing speeds queries, processing vast indexes slows down updating.</P></BODY></HTML>
