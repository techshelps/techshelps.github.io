<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Product Architecture</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Product Architecture</H2><P CLASS="t">SQL Server is a client/server database system. The terms client and server refer to:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Database client and database server software.</LI><LI CLASS="ULI1">Client and server computers.</LI></UL></SPAN><P CLASS="t">The database server software processes requests submitted by the client software, sending the results of each request back to the database client that requested it. SQL Executive and the SQL Server engine are examples of database server software.</P>
<P CLASS="t">The database client software connects to the database server software, makes requests, receives results, then manipulates those results—for example, it could display the results on the screen. SQL Enterprise Manager, ISQL/w, and Microsoft Access are good examples of database client software that connects to SQL Server databases.</P>
<P CLASS="t">The server computer runs the SQL Server database server software. The SQL Server database client software can also be run from the server computer. </P>
<P CLASS="t"><B>Note</B>   SQL Executive, a service that runs on the server computer, is a normal database client from the perspective of the database server. A client computer is a computer that runs only the database client software.</P>
<P CLASS="t">The following illustration shows the interaction between a client computer and a server computer. The client computer, configured with Windows 95, Windows NT Server, Windows NT Workstation, Windows 3.1, or MS-DOS&reg; operating systems, runs SQL Server client applications. This client application sends requests to the SQL Server residing on the server computer. The server computer, configured with the Windows NT Server operating system, runs all types of SQL Server applications, including client and server applications, as well as the SQL Executive service.</P>
<P CLASS="a"><img src="sqlarc01.gif"></P>
<P CLASS="t">The database client software is made up of multiple layers, or components. The user interacts directly with a client application, like SQL Enterprise Manager or an order entry form. The client application determines the presentation of the database system. All client applications interact with SQL Server using one of two native application programming interfaces (APIs) for client database access:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Open Database Connectivity (ODBC)</LI><LI CLASS="ULI1">DB-Library</LI></UL></SPAN><P CLASS="t">Both ODBC and DB-Library use the same client Net-Library layer to establish a connection to SQL Server.</P>
<P CLASS="t">When the client software is running on a client computer, the connection to SQL Server is established across the network. </P>
<P CLASS="t">The database server software is also made up of multiple layers. A server Net-Library layer accepts connection from the client. Open Data Services is an API for writing database server software. The SQL Server database engine is an Open Data Services application. SQL Server communicates with the client through Open Data Services, receiving requests and returning results.</P>
<P CLASS="t">The following illustration shows the network connection from the client computer and client Net-Library to the server computer and server Net-Library.</P>
<P CLASS="a"><img src="sqlarc02.gif"></P>
<P CLASS="t">When the client software is running on the server computer, a local, non-network connection to SQL Server can be established using named pipes. But in all other respects, the same client server architecture and components are used.</P>
<P CLASS="t">The following illustration shows this non-network connection.</P>
<P CLASS="a"><img src="sqlarc03.gif"></P>
<P CLASS="t">Multiple client Net-Libraries are included with the SQL Server client software. The Net-Library layer is designed to "hide" the network connectivity details of communicating with SQL Server. Because all client Net-Libraries share a single interface, both the ODBC SQL Server driver and DB-Library can use any Net-Library to establish a connection to SQL Server. Client computers have a default Net-Library (usually named pipes) that is used when a specific Net-Library is not requested.</P>
<P CLASS="t">Each Net-Library (client and server) uses a single interprocess communication (IPC) mechanism, such as named pipes, remote procedure call (RPC), or Windows Sockets. The IPC used by some Net-Libraries is supported by multiple network protocols. For example, the named pipes IPC is supported by the NetBEUI, Microsoft TCP/IP, and NWLink protocols. The IPC used by other Net-Libraries is supported by a single network protocol. For example, the Windows Sockets IPC is supported only by the Microsoft TCP/IP protocol, and the NetWare IPX/SPX IPC is supported only by the NWLink protocol. Also, the named pipes IPC is also directly supported by the Windows NT file system, allowing local, non-network connections between client software and SQL Server on the same server computer.</P>
<P CLASS="t">The following illustration shows the interaction between client Net-Libraries and server Net-Libraries.</P>
<P CLASS="a"><img src="sqlarc04.gif"></P>
<P CLASS="t">Multiple server Net-Libraries are included with the SQL Server database server software. SQL Server "listens" for client connections using multiple server Net-Libraries.</P>
<P CLASS="t">It is important to understand that the client Net-Library (and IPC) that establishes a connection must match the server Net-Library (and IPC) that accepts the connection. Of course, both the client computer and server computer must be using the same network protocol, but this alone is not sufficient. For example, a client cannot use the client TCP/IP Windows Sockets Net-Library to make a connection across the TCP/IP protocol to a SQL Server that is only using the server named pipes Net-Library. You can fix this situation in one of two ways:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">The client can use the client named pipes Net-Library to connect across TCP/IP to a SQL Server that is only using the server named pipes Net-Library.</LI><LI CLASS="ULI1">The client can use the client TCP/IP Windows Sockets Net-Library to connect across TCP/IP to a SQL Server that is using the server TCP/IP Windows Sockets Net-Library. </LI></UL></SPAN><P CLASS="t">The following illustration shows the many options facing a database developer when choosing a set of database development tools and components.</P>
<P CLASS="a"><img src="sqlarc05.gif"></P>
<P CLASS="t">The highest layer is the development tool or product. Two of the most common language tools are the Microsoft Visual Basic and Microsoft Visual C++&reg; programming systems. Both of these tools offer a great deal of power and flexibility, but often require coding. Other office development tools like Microsoft Access, Word, and Excel are used to deliver customized business solutions that need data access. SQL Server includes database development and management tools like SQL Enterprise Manager and ISQL/w.</P>
<P CLASS="t">The next layer is the component. Components like Data Access Objects (DAO) and Remote Data Objects (RDO) provide a higher level of abstraction, enabling a developer to do more with less lines of code, and allowing the same code to work with multiple data sources. The SQL Distributed Management Objects (SQL-DMO) component exposes a completely programmable management interface specifically for SQL Server.</P>
<P CLASS="t">All components and tools must eventually connect to SQL Server using one of the two native APIs available today—ODBC or DB-Library. The OLE DB ODBC provider allows development of OLE DB applications that use the SQL Server ODBC driver to connect to SQL Server. An application can be written directly to a native API.</P>
<P CLASS="t">You can develop components for the server computer as well. An extended stored procedure is an Open Data Services dynamic-link library (DLL) at the server that can be called by the client like a normal stored procedure. By using the OLE Automation stored procedures, you can develop and deploy an OLE Automation object at the server that can be called by any client.</P>
<P CLASS="t">The SQL Server product contains multiple services and components, on both the client and the server computer, that interact with each other and with Windows NT services and components.</P>
<P CLASS="t">The following table lists and describes the three Windows NT services that the server computer runs under the control of the Windows NT Service Control Manager.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="117pt" VALIGN="TOP"><COL WIDTH="231pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">Service</P></TD><TD VALIGN="TOP"><P CLASS="th">Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SQL Server database engine</P></TD><TD VALIGN="TOP"><P CLASS="tt">Handles all databases, clients, and queries.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SQL Executive</P></TD><TD VALIGN="TOP"><P CLASS="tt">Handles scheduling tasks, monitors for and raises alerts, and replicates data.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Microsoft Distributed Transaction Coordinator</P></TD><TD VALIGN="TOP"><P CLASS="tt">Handles transactions distributed among multiple SQL Servers.</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t">Other components, like SQL Mail, SQL Simple Network Management Protocol (SNMP), and the server component of SQL Trace are extended stored procedures. These components interact with required Windows services as well as with the SQL Server engine. </P>
<P CLASS="t">Microsoft Internet Information Server (IIS) can deliver SQL Server data to its Internet and intranet clients. IIS can connect directly to SQL Server using the Internet Database Connector (IDC), execute a query, format the results into an HTML page, and send the page to an Internet client. IIS can also deliver HTML pages that have already been created by the SQL Server Web Assistant. </P>
<P CLASS="t">The client computer runs SQL Server client applications, such as SQL Enterprise Manager, that connect to SQL Server. The client computer also runs applications included with Windows, such as Performance Monitor and Internet Explorer. </P>
<P CLASS="t">The following illustration shows how different services and extra components interact with each other and with the client and server.</P>
<P CLASS="a"><img src="sqlarc06.gif"></P></BODY></HTML>
