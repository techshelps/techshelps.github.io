<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Loading Database Dumps</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Loading Database Dumps</H3><P CLASS="t">You need to consider several things when loading a database from a dump. First, the target database needs to be at least as large as the database that was dumped. Attempting to load a dump into a database that is smaller than the database that the dump came from will result in SQL Server error message 3105:</P>

<PRE>Data on dump will not fit into current database. Need %ld Mbyte database.
</PRE>
<P CLASS="t">You can, however, load a dump into a target database that is larger than the original database.</P>
<P CLASS="t">Also consider whether the database will be loaded on the same server from which it was dumped, or if it may potentially be loaded onto a different server. If the database will be dumped and loaded between servers, the code page, sort order, and processor architecture between the servers must match. You cannot load a database onto a SQL Server running with a code page or sort order that is different from the code page or sort order used on the SQL Server from which the dump originated. SQL Enterprise Manager includes a transfer management interface that you can use to transfer some or all objects from one database to another. This is useful when the servers are using different sort orders or code pages, or when they are using different hardware architectures—for example, Intel-based hardware and RISC-based hardware. If your environment has multiple SQL Servers, it is recommended that they all be configured with the same code page and sort orders.</P>
<P CLASS="t">If a database needs to be re-created and loaded from a previous dump, it is important that the database be re-created in exactly the same way that it was originally created. That is, the device usage, log space allocation, and segment definitions in the new database must be identical to the way they were when the database was dumped. This information is kept in the <B>sysusages</B> table in the <B>master</B> database, so you should always dump the <B>master</B> database whenever a change to a database is made that records anything in the <B>master</B> database.</P>
<P CLASS="t"><B>Note</B>   If you upgraded the <B>master</B> database from SQL Server 4.21a, with a default size of 15 MB, to SQL Server 6.0, with a default size of 23 MB, it is recommended that you make a file-level backup of Master.dat.</P>
<P CLASS="t">In addition, if you save the scripts you use to create the initial database, re-creating the database will only require rerunning of those scripts. If a dump is loaded into a database that has data, log, or segment mappings that are different from the original database, DBCC NEWALLOC may report SQL Server error 2558:</P>

<PRE>Extent not within segment: Object %ld, indid %d includes extents on allocation page %ld which is not in segment %d.
</PRE>
<P CLASS="t">This error can indicate that there are data pages allocated in portions of the database intended for log pages, or log pages allocated in portions that are intended for data. In the first case, the effect is that less space is available for the transaction log to grow. The second case is less serious because the data space being used by log pages will eventually become available when the log is truncated with the DUMP TRANSACTION statement.</P></BODY></HTML>
