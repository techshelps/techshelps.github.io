<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SQL Server Scalability on Windows NT Server</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">SQL Server Scalability on Windows NT Server</H2><P CLASS="t"><B><I>Microsoft SQL Server on Windows NT Server</I></B><B><I>—</I></B><B><I>designed to grow with your organization. </I></B></P>
<P CLASS="t">Downsizing computer systems to client/server computing is widely discussed. Yet many successful companies face the opposite problem: they are upsizing their client/server applications. Because every Internet and intranet user is a potential client, applications face huge user and transaction loads. With the price of disk storage at $100 per gigabyte (GB), application systems are being required to store huge online databases.</P>
<P CLASS="t">Scalable systems solve the upsizing problem by offering you a way to increase the size and power of the network, servers, database, and applications by merely adding more hardware. Scalable computer systems provide a means by which an application's client base, database, and throughput can be increased without application reprogramming. The scaled-up server should be as easy to manage as the smaller system—at least on a per-user basis.</P>
<P CLASS="t">Traditionally, most scale up has been accomplished through symmetric multiprocessing (SMP): adding more processors, memory, disks, and network cards to a single server. Several vendors have shown that SMP servers can offer a tenfold scale up over uniprocessor systems on commercial workloads.</P>
<P CLASS="t">However, at some point, a single node hits a bottleneck, evidenced by diminishing returns or prohibitively expensive hardware. To grow much beyond a factor of ten, application designers have gravitated to a<B> </B>cluster architecture in which the workload and database are partitioned among an array of networks, processors, memories, and database systems. All the truly large systems are built this way. The IBM MVS Sysplex, the DEC VMScluster, the Teradata DBC 1024, and the Tandem Himalaya series are all clustered systems. Ideally, this partitioning is transparent to the clients and to the application. The cluster is programmed and managed as a single system, but it is in fact an array of nodes.</P>
<P CLASS="t">Cluster technology fits together with and leverages distributed-system technologies like replication, remote procedure call, distributed systems management, distributed security, and distributed transactions. The cluster approach has two advantages over increasingly larger SMP systems:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Clusters can be built from commodity components and can grow in small increments.</LI><LI CLASS="ULI1">The relative independence of cluster nodes gives a natural failover and high-availability design.</LI></UL></SPAN></BODY></HTML>
