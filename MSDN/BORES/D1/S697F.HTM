<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scalable Lock Escalation</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Scalable Lock Escalation</H3><P CLASS="t">With databases now reaching hundreds of gigabytes in size, the database management system must be capable of scaling efficiently. SQL Server employs a scalable lock escalation strategy based on a percentage of table size, avoiding premature lock escalation for large tables. For example, when a transaction is performing a scanned UPDATE, it can acquire a very large number of page locks, requiring escalation to a table-level lock at some point. Unlike some systems with a fixed escalation threshold (usually 200 pages, which would trigger a premature escalation for large tables), SQL Server allows this threshold to be configured by the DBA. The DBA might configure the threshold as a percentage of table size (20 percent, for example) or in terms of a specific number of pages. SQL Server can employ the optimal locking strategy for a table or database of any given size.</P></BODY></HTML>
