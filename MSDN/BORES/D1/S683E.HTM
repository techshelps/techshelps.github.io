<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Network Tuning</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Network Tuning</H3><P CLASS="t">Network tuning with respect to SQL Server performance is affected by the following:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Throughput of the LAN or WAN.</LI><LI CLASS="ULI1">Throughput of the server network interface card.</LI><LI CLASS="ULI1">Availability of resources on the server to service client requests.</LI></UL></SPAN><P CLASS="t">The throughput of the LAN or WAN is not critical to the tuning of a specific SQL Server. However, when considering remote procedure calls between SQL Servers or data replication, LAN and/or WAN throughput will be an important concern. Thus, this section will deal with tuning issues related to the network interface card and system or SQL Server resources that affect the SQL Server's network performance. Accordingly, the following network bottleneck-monitoring guidelines will deal with these issues.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Symptoms and Actions</H4><SPAN CLASS="list"><UL><LI CLASS="ULI1"><B>Symptom:</B> On a dedicated SQL Server system, if<B> </B>SQLServer: NET - Network Reads/sec is substantially lower than Server: Bytes Received/sec, this may indicate network activity beyond that generated by SQL Server. This may also be caused by periodic Windows NT Server administrative processes if the system also serves as a primary domain controller (PDC) or backup domain controller (BDC).
<P CLASS="lt1"><B>Action:</B> Determine if any processes or protocols extraneous to the operation of SQL Server are running. If so, stop them.</P></LI><LI CLASS="ULI1"><B>Symptom:</B> On a dedicated SQL Server system, if<B> </B>SQLServer: NET - Network Writes/sec is substantially lower than Server: Bytes Transmitted/sec, this may indicate network activity beyond that generated by SQL Server. This may also be caused by periodic Windows NT Server administrative processes if the system also serves as a PDC or BDC.
<P CLASS="lt1"><B>Action:</B> Determine if any processes or protocols extraneous to the operation of SQL Server are running. If so, stop them.</P></LI><LI CLASS="ULI1"><B>Symptom:</B> If SQLServer: NET - Network Reads/sec or SQLServer: NET - Network Writes/sec is high this indicates a great deal of network traffic.
<P CLASS="lt1"><B>Action:</B> Look at the number of SQLServer: User Connections and the SQLServer: Net - Command Queue Length. If these values are also high, especially Net - Command Queue Length, then consider increasing the memory allocated to SQL Server. However, you may want to restrict user connections with <B>sp_configure</B> to decrease the workload on the SQL Server. Remember, user connections and worker threads are counted as overhead against the SQL Server memory allocation. Thus, plan accordingly when adjusting these values.</P></LI></UL></SPAN><H4 CLASS="h3"><A NAME="sec1"></A>General Actions for Network Tuning</H4><SPAN CLASS="list"><UL><LI CLASS="ULI1">Tabular data stream (TDS) is the application protocol used by SQL Server for the transfer of requests and request results between clients and servers. TDS data is sent in fixed-size chunks, called packets. TDS packets have a default size of 512 bytes. If an application does bulk copy operations or sends or receives large amounts of text or image data, a packet size larger than 512 bytes may improve network performance, since it results in fewer reads and writes. For large data transfers, a packet size between 4,092 and 8,192 is usually best. Any larger size packet may degrade performance.
<P CLASS="lt1">To set the server's default packet size, set <B>network packet size</B> in <B>sp_configure</B>. Packet size can be configured in ISQL/w for the current ISQL/w connection only. Configuring the packet size gives you a choice between responsiveness and overall throughput. Larger packets provide less packet overhead and provide better end-to-end throughput: An entire task completes more quickly with larger packets. Smaller packets are more responsive for those interested in intermediate results. Overall, a smaller packet size provides quicker response time, but usually, an entire task takes longer to complete with smaller packets than with larger packets. For more information about configuring packet size, see SQL Server Books Online.</P>

<P CLASS="lt1">You can monitor the improvement in network read and write efficiency by viewing the SQLServer: NET - Network Reads/sec and SQLServer: NET - Network Writes/sec counters before and after changing the TDS packet size. Fewer reads and writes should occur after increasing the packet size.</P></LI><LI CLASS="ULI1">Make sure the server throughput is set to <B>Maximize Throughput for Network Applications</B>; this is the default for SQL Server. However, with this option set, user application access has priority over file cache access to memory (4 MB of memory is allocated to available memory for starting up and running local applications). </LI><LI CLASS="ULI1">Increase update-notice periods for Netlogon service on the SQL Server if your SQL Server is a PDC. Also increase the server announcement period if you are concerned with the amount of maintenance traffic the Windows NT Server is creating and the load on the PDC.</LI></UL></SPAN>
<TABLE COLS="5" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="74pt" VALIGN="TOP"><COL WIDTH="86pt" VALIGN="TOP"><COL WIDTH="86pt" VALIGN="TOP"><COL WIDTH="86pt" VALIGN="TOP"><COL WIDTH="0pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">Value name</P></TD><TD VALIGN="TOP"><P CLASS="th">Default value</P></TD><TD VALIGN="TOP"><P CLASS="th">Minimum value</P></TD><TD VALIGN="TOP"><P CLASS="th">Maximum value</P></TD></TR><TR><TD COLSPAN="5" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">PulseConcurrency</P></TD><TD VALIGN="TOP"><P CLASS="tt">20</P></TD><TD VALIGN="TOP"><P CLASS="tt">1</P></TD><TD VALIGN="TOP"><P CLASS="tt">500</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Pulse</P></TD><TD VALIGN="TOP"><P CLASS="tt">300 (5 minutes)</P></TD><TD VALIGN="TOP"><P CLASS="tt">60 (1 minute)</P></TD><TD VALIGN="TOP"><P CLASS="tt">3600 (1 hour)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">Randomize</P></TD><TD VALIGN="TOP"><P CLASS="tt">1 (1 second)</P></TD><TD VALIGN="TOP"><P CLASS="tt">0 (0 seconds)</P></TD><TD VALIGN="TOP"><P CLASS="tt">120 (2 minutes)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><SPAN CLASS="list"><UL><LI CLASS="ULI2"><B>PulseConcurrency</B> defines the maximum number of simultaneous pulses the PDC sends to BDCs. 
<P CLASS="lt1">Netlogon sends pulses to individual BDCs. The BDCs respond by asking for any database changes. To control the maximum load these responses place on the PDC, the PDC will only have PulseConcurrency pulses "pending" at one time. The PDC should be sufficiently powerful to support this many concurrent replication RPC calls (related directly to Server service tuning as well as the amount of memory in the computer).</P>

<P CLASS="lt1">Increasing PulseConcurrency increases the load on the PDC. Decreasing PulseConcurrency increases the time it takes for a domain with a large number of BDCs to get a SAM/LSA change to all of the BDCs. Consider that the time to replicate a SAM/LSA change to all the BDCs in a domain will be greater than: ((Randomize/2) * NumberOfBDCsInDomain) / PulseConcurrency</P></LI><LI CLASS="ULI2"><B>Pulse</B> defines the typical pulse frequency (in seconds). All SAM/LSA (User/Security account database) changes made within this time are collected together. After this time, a pulse is sent to each BDC needing the changes. No pulse is sent to a BDC that is up-to-date.</LI><LI CLASS="ULI2">If you need to transfer huge amounts of data between different computer systems, Ethernet may not be the appropriate medium to use; the basic Ethernet cable is limited to 10 MB/sec (considerably less when you include network overhead). Other media are now available that offer significantly higher sustained transfer rates (FDDI, ATM, and so on).</LI><LI CLASS="ULI2">The Network Monitor (provided with Microsoft Systems Management Server) is a good tool to use to monitor general network performance. It offers additional Performance Monitor counters as well as a few unique statistics from within the application.</LI><LI CLASS="ULI2">Match the network interface card to the system bus. If you have a 16-bit bus, use a 16-bit network adapter; if you have a 32-bit bus, use a 32-bit network adapter. In addition, the card should be a bus master card to minimize the processing overhead associated with network interrupts.</LI></UL></SPAN></BODY></HTML>
