<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Remapping the Database</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Remapping the Database</H3><P CLASS="t">The following conditions are those that would lead you to consider remapping the database to take advantage of more efficient disk I/O. However, such remapping means physically rebuilding the database. Therefore, the recommended actions should be considered carefully before proceeding.</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1"><B>Condition:</B> Queries against a table that is very large and that resides on the same physical device(s) or default segment as other frequently accessed tables is experiencing slow retrieval due to disk I/O congestion.
<P CLASS="lt1"><B>Action: </B>Placing the table on a SQL Server segment that is mapped to a database device on one or more dedicated physical drives can improve performance. In fact, if the database device is mapped to a RAID 0 or RAID 5 partition that is controlled by using a dedicated intelligent array controller, performance can be substantially increased. However, the creation of segments carries with it the potential for high administrative costs. Therefore, it may be more cost effective to simply enhance the disk subsystem components.</P></LI><LI CLASS="ULI1"><B>Condition:</B> Queries against a very large table that resides on the same physical device(s) or default segment as its most frequently used index are experiencing slow retrieval due to disk I/O congestion.
<P CLASS="lt1"><B>Action:</B> If multiple databases are on the same device, consider moving some of the databases to other devices.</P></LI></UL></SPAN></BODY></HTML>
