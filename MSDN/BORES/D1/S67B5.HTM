<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Managing Database Dump Files</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Managing Database Dump Files</H3><P CLASS="t">SQL Server databases can be dumped to floppy disks, hard disks, or tape. It is a good idea to keep not only the most current dump, but previous dumps or multiple copies of the dump as well—as many as you deem necessary. To illustrate the importance of multiple copies, assume that some failure occurred that resulted in your need to reload the database from a dump. If only one copy of the most current dump were kept, and something destroyed that copy, you would have to reconstruct your data from scratch. To illustrate the importance of previous dumps, imagine that a user accidentally issued a misqualified update or delete statement against one or more tables. This could result in the incorrect modification or loss of large amounts of data, which could go undetected for several days, weeks, or even longer. By keeping a succession of previous dumps and multiple copies of the current dump, you provide yourself with safety nets for recovery.</P>
<P CLASS="t">SQL Server allows you to specify whether the new dump should overwrite or be appended to the existing contents of the tape. The tapes can then be circulated for reuse in least-recently-used order. SQL Server provides a configuration parameter, "media retention," that helps ensure that a new dump does not overwrite an existing dump too soon. The <B>sp_configure</B> system stored procedure can be used to set the "media retention" parameter, which specifies the number of days that must pass before an existing dump can be overwritten by a new one. SQL Server allows you to specify the size of the dump/load buffer in 32-page increments. The <B>sp_configure</B> system procedure can be used to set the <B>backup buffer size</B> parameter. For example, a <B>backup buffer size</B> value of 5 means that a buffer of 160 pages (5*32) will be used.</P>
<P CLASS="t">When a database is dumped, SQL Server dumps not only the data portion but also the transaction log for that database as well. The transaction log must be included in the dump so that when the database is later loaded, transactions that were in progress during the dump can be properly rolled back. Because the transaction log is dumped with the database, the resulting dump file may be larger than the data portion of the database. For example, assume you have a 100 MB database with a 25 MB transaction log. If both the database and the log are nearly full, the dump file would be approximately 125 MB when the database is dumped. Be sure to allow enough room on the media you are dumping to for both the data and log portions of the database being dumped.</P></BODY></HTML>
