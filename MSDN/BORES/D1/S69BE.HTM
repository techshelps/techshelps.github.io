<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing the SQL Server Object Comparison Tool</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Implementing the SQL Server Object Comparison Tool</H3><P CLASS="proch">To get started</P>
<P CLASS="ls">Start SQLComp.</P>
<P CLASS="ls">Configure data source names for the source and target servers. </P>
<SPAN CLASS="list"><UL><LI CLASS="ULI2">To see the list of data source names, click <B>Configure</B> on the <B>Server</B> menu.</LI><LI CLASS="ULI2">If you need to define a new data source name, click <B>New DSN</B>.
<P CLASS="lt1">This brings up the <B>ODBC Data Source Administrator</B> dialog box.</P></LI></UL></SPAN><P CLASS="ls">Type a login and password in the <B>Configure Data Source Administrator</B> dialog box, and click <B>OK</B>.</P>
<P CLASS="lt1">The program builds two lists: one of available databases at the source DSN and the other of available databases at the target DSN.</P>
<P CLASS="ls">On the <B>Compare</B> menu, click <B>Objects</B> to compare two specific objects, for example two tables, or click <B>Databases</B> to compare two databases.</P>
<P CLASS="ls">In the source column of the <B>Compare Objects</B> dialog box, select the database and object type to be compared.</P>
<P CLASS="ls">In the target column, select the database and object type to be compared, if applicable, and then click <B>OK</B>.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Comparing Objects</H4><P CLASS="t">SQLComp currently supports comparison of tables, views, and stored procedures. The <B>Options</B> button is available when the object type is set to <B>Tables</B> or <B>Views</B>.</P>
<H5 CLASS="h4"><A NAME="sec1"></A>Stored Procedure</H5><P CLASS="t">When the comparison type is <B>Stored Proc</B>, the text of the stored procedures is compared.</P>
<H5 CLASS="h4"><A NAME="sec2"></A>Table</H5><P CLASS="t">If the object type is <B>Table</B>, the minimal comparison (no options selected) will compare the column definitions for each of the table's columns. Options may be set on <B>Table</B> type comparisons to compare table properties, indexes, and record sets.</P>
<H5 CLASS="h4"><A NAME="sec3"></A>View</H5><P CLASS="t">If the selected object type is <B>View</B>, the text of the source and target views is compared, and the column attributes for the table the view is based on are compared to the column attributes at the target table. Other <B>Table</B> options are also available for a view-to-view compare, such as <B>Compare Table Properties</B> or <B>Compare Data</B> (recordset data).</P>
<H4 CLASS="h3"><A NAME="sec4"></A>Comparing Databases</H4><P CLASS="t">SQLComp allows a user to compare a subset of objects at a source database to a set of corresponding objects at a target database. The objects are expected to have the same name and object type at the source and the target. The user may provide an <I>ignore list</I> for each object type when comparing databases. The ignore list is a list of objects at the source database that will not be compared to a target object. The objects in the ignore list are not compared when verification is run. If no ignore lists are provided, the verification will compare all tables, views, and stored procedures in the source database to those at the target. If objects not present at the source are present at the target, the verification will ignore these objects, since verification is from all existing source objects to their corresponding object at the target.</P>
<H4 CLASS="h3"><A NAME="sec5"></A>Comparing Replication Objects</H4><P CLASS="t">You can compare articles and you can compare publications with SQLComp.</P>
<H5 CLASS="h4"><A NAME="sec6"></A>Comparing Articles</H5><P CLASS="t">When comparing articles, SQLComp verifies that a subscription to an article (the destination table) contains all data and structure definition that is defined at the source article for the subscription.</P>
<P CLASS="proch">To compare articles</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Select the source and target databases, then choose the source publication and article.
<P CLASS="lt1">The target object for the comparison is determined by the selected subscriber server and database. SQLComp determines whether or not the article is partitioned. If the article is partitioned, the source view is compared to the target table at the subscriber database. If the article is nonpartitioned, the table which the article is based upon is compared to the target table at the subscriber database.</P></LI></UL></SPAN><H5 CLASS="h4"><A NAME="sec7"></A>Comparing Publications</H5><P CLASS="t">When comparing publications, SQLComp verifies that the source tables for each article in the publication are identical to the target table at the destination database. (The target database is the subscribing database and contains the destination table for its subscription to the source article.)</P>
<P CLASS="t">The <B>Table</B> options are used for nonpartitioned articles. The <B>View</B> options are used for partitioned articles. If an article is not partitioned, the sync object is a table.</P>
<H4 CLASS="h3"><A NAME="sec8"></A>Using the Verification Operations DLL</H4><P CLASS="t">The verification operations DLL checks that an object exists and is of the specified type.</P>
<P CLASS="proch">To use the verification operations DLL (Verify.dll) in a C\C++ application or a Visual Basic application</P>
<P CLASS="ls">Add Verify.lib to the link settings in the project file (.mak or .mdp).</P>
<P CLASS="ls">In C\C++, include Verify.h in the project.</P>
<P CLASS="lt1">For a Visual Basic or MSTest application, the following structure and function must be declared in the calling application. This information is also included in Verify.h.</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;typedef struct</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;{</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szSourceServer[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szTargetServer[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szSourceDBName[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szTargetDBName[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szSourceUser[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szSourcePassword[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szTargetUser[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szTargetPassword[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText1[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText2[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText3[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText4[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText5[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    char    szText6[255];</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    long    lGRBIT;</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    short    sVOType;</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;}VO_STRUCT;</P>
<P></P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;long  __stdcall ErrVerify(VO_STRUCT * pVoStruct );</P>
<P></P>
<P CLASS="ls">Define an object of type VO_STRUCT in your application, initialize the VO_STRUCT members, and call the <B>ErrVerify</B> function. The return value is zero on success, nonzero on failure. For example:</P>
<P>// Define the object</P>
<P><B>VO_STRUCT    *myVOStruct = new VO_STRUCT;</B></P>
<P></P>
<P>// Initialize the structure</P>
<P><B>strcpy(myVOStruct-&gt;szSourceServer, "MySourceDSN");</B></P>
<P>strcpy(myVOStruct-&gt;szTargetServer, "MyTargetDSN");</P>
<P>... initialize the other string members needed for this Verification Operation type</P>
<P>strcpy(myVOStruct-&gt;szText6, "mystring");</P>
<P>lGRBIT = 7;        // (bitCmpData | bitCmpTableIndexs | bitCmpTableProp)</P>
<P><B>sVOType = 301;</B>    // compare two tables</P>
<P></P>
<P>// Call the ErrVerify function:</P>
<P><B>if (ErrVerify(pVoStruct) )</B></P>
<P>{</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;;// failure handling statements</P>
<P>}</P>
<P></P>
<P CLASS="lt1">These are the values defined for the lGRBIT parameter:</P>
<P>// Compare record sets for a table or a view<B> </B></P>
<P>const long bitCmpData        = 0x00000001;     </P>
<P>// Compare table index properties and properties of fields defined</P>
<P>// for the index </P>
<P>const long bitCmpTableIndxs     = 0x00000002;     </P>
<P>// Compare table properties and column properties on a table </P>
<P>const long bitCmpTableProp        = 0x00000004;     </P>
<P>// Full object comparison, all options ON </P>
<P>const long bitCmpAll            = 0x0000FFFF;    </P>
<P></P>
<P CLASS="lt1">These are the defined Verification Operation "types", that are entered through the sVOType member of the <B>VO_STRUCT</B> object:</P>
<P><B>const short  TABLETOTABLE = 301;      </B> // Compare two tables or two </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;                                   // nonpartitioned articles</P>
<P><B>const short  VIEWTOTABLE = 302;</B>        // Compare a partitioned article</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;                                   // to a subscription</P>
<P><B>const short  STORED_PROC = 303;</B>        // Compare two stored procedures</P>
<P><B>const short  VIEW = 306;               </B>// Compare two views</P>
<P><B>const short  COMPDB = 307;             </B>// Compare two databases - not</P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;                                   // yet implemented</P>
<P><B></B></P>
<P CLASS="t">The following tables contain brief definitions of the VO_STRUCT parameters for the various comparison types:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">TABLETOTABLE</LI><LI CLASS="ULI1">VIEWTOTABLE</LI><LI CLASS="ULI1">VIEW</LI><LI CLASS="ULI1">STORED_PROC</LI><LI CLASS="ULI1">COMPDB</LI></UL></SPAN><P CLASS="t"><B>TABLETOTABLE</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="218pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">VO_STRUCT parameter</P></TD><TD VALIGN="TOP"><P CLASS="th">Definition</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourcePassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetPassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source table name; for a nonpartitioned article. This is the table the article is based upon.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">SzText2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target table name; for a subscription. This is the subscriber database's destination table.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">LGRBIT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Grbit for options</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">sVOType</P></TD><TD VALIGN="TOP"><P CLASS="tt">== VO_TBLTBL</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t"><B>VIEWTOTABLE</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="218pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">VO_STRUCT parameter</P></TD><TD VALIGN="TOP"><P CLASS="th">Definition</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourcePassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetPassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Publication name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Article name. Use VIEWTOTABLE if the article is partitioned, otherwise call TABLETOTABLE using source and destination table names.</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText3</P></TD><TD VALIGN="TOP"><P CLASS="tt">Destination table name in subscription database</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">lGRBIT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Grbit for options</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">sVOType</P></TD><TD VALIGN="TOP"><P CLASS="tt">== VIEWTOTABLE</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t"><B>VIEW</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="218pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">VO_STRUCT parameter</P></TD><TD VALIGN="TOP"><P CLASS="th">Definition</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourcePassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetPassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source View</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target View</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">lGRBIT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Grbit for options</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">sVOType</P></TD><TD VALIGN="TOP"><P CLASS="tt">== VIEW</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t"><B>STORED_PROC</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="218pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">VO_STRUCT parameter</P></TD><TD VALIGN="TOP"><P CLASS="th">Definition</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourcePassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetPassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source SP name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText2</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target SP name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">      sVOType</P></TD><TD VALIGN="TOP"><P CLASS="tt">== STORED_PROC</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="t"><B>COMPDB</B></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="130pt" VALIGN="TOP"><COL WIDTH="218pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="thf">VO_STRUCT parameter</P></TD><TD VALIGN="TOP"><P CLASS="th">Definition</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetServer</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target DSN</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourcePassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetUser</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetPassword</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target login password</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szSourceDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Source database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szTargetDBName</P></TD><TD VALIGN="TOP"><P CLASS="tt">Target database name</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText1</P></TD><TD VALIGN="TOP"><P CLASS="tt">Table Ignore List</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText2</P></TD><TD VALIGN="TOP"><P CLASS="tt">View Ignore List</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">szText3</P></TD><TD VALIGN="TOP"><P CLASS="tt">Stored Procedure Ignore List</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">lGRBIT</P></TD><TD VALIGN="TOP"><P CLASS="tt">Grbit for options</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">sVOType</P></TD><TD VALIGN="TOP"><P CLASS="tt">== COMPDB</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P></BODY></HTML>
