<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Implementing sp_help_set_options</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Implementing sp_help_set_options</H3><P CLASS="t">Use <B>sp_help_set_options</B> to get an understandable listing of the current state of one or more of the current SET options.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>Usage</H4><P CLASS="t"><B>sp_help_set_options</B> [@SetOptNamePattern = {<I>optname</I>}]<BR> [, @Action = <I>action</I>]<BR> [, @ResultBits = <I>@ScriptVar</I> OUTPUT]</P>
<P CLASS="t">where:</P>
<P CLASS="term1"><I>optname</I></P>
<P CLASS="dt1">Is the name of the SET option to be reported. If <I>optname</I> is given as a Transact-SQL wildcard pattern, all options whose name matches the pattern will be reported.</P>
<P CLASS="term1"><I>Action</I></P>
<P CLASS="dt1">Is either 'display_all' or 'display_rows'. The default is 'display_rows'.</P>
<P CLASS="term1">@ResultBits<I> = @ScriptVar </I>OUTPUT</P>
<P CLASS="dt1">This parameter gives a summary code of the status of the SET options found. <I>@ScriptVar</I> should be defined as an integer.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Remarks</H4><P CLASS="t">If <B>sp_help_set_options</B> is executed with no <I>optname</I>, it will report the current state of all the SET options. If <B>sp_help_set_options</B> is executed with an <I>optname</I> parameter containing the name of one of the SET options, it will report the state of that option. If <B>sp_help_set_options</B> is executed with an <I>optname</I> parameter containing a LIKE wildcard pattern, it will report the state of any option whose name matches the pattern.</P>
<P CLASS="t">If <B>sp_help_set_options</B> is executed with an <I>action</I> parameter of 'display_rows' it will return only the result set indicating the state of the SET options report on in that execution. If the <I>action</I> parameter is set to 'display_all' it will also report a summary code indicating how many options were matched. The summary code, @ResultBits, is a bitmap whose bits are set as follows:</P>
<P CLASS="t">0x01 - optname/optpattern matched at least one row.<BR>0x02 - optname/optpattern matched exactly one row.<BR>0x04 - at least one matched option is ON.<BR>0x08 - at least one matched option is different than its default.</P>
<P CLASS="t">The result set from <B>sp_help_set_options</B> has three columns:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">SameAsConfig
<P CLASS="lt1">This reports 'same' if the option's state matches that of the current default setting for the server and 'different' if the option's state does not match the default. The default settings for a server are controlled by the SA using the <B>sp_configure</B> command with the 'user options' parameter.</P></LI><LI CLASS="ULI1">SetOptionName
<P CLASS="lt1">This is the name of the option to which the row pertains.</P></LI><LI CLASS="ULI1">CurrentUser
<P CLASS="lt1">This is the state (ON or OFF) of the option for the current connection.</P></LI></UL></SPAN><H4 CLASS="h3"><A NAME="sec2"></A>Samples</H4><P CLASS="ls">To report all of the current option settings:</P>
<P>sp_help_set_options</P>
<P></P>
<P CLASS="ls">To report the settings of all options whose name contains the string ANSI:</P>
<P>sp_help '%ANSI%'</P>
<P></P>
<P CLASS="ls">To report the setting for the NOCOUNT option with the @ResultBit summary code:</P>
<P>sp_help NOCOUNT, 'display_all'</P>
<P></P>
<P CLASS="ls">To report the settings for all options with the @ResultBit summary code:</P>
<P>declare @Summary int<BR>declare @Msg char(50)<BR>exec sp_help_set_options @Action = 'display_all',<BR>    @ResultBits = @Summary OUTPUT<BR>select @Msg = 'Result Summary = ' + convert(char(2), @Summary)<BR>print @Msg</P></BODY></HTML>
