<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The SQL-DMO Model</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">The SQL-DMO Model</H3><P CLASS="t">SQL Server and its components are completely represented by the SQL-DMO model. The main object, SQLServer, is used with other objects that describe the server's elements such as Login, Database, and Table.</P>
<P CLASS="t">For anyone familiar with Visual Basic, the concept of objects is not new. SQL-DMO, like Visual Basic controls, has <I>properties</I> and <I>methods</I>. Properties represent the object's attributes; methods represent the object's functions. SQL-DMO provides over 40 objects and over 1,000 properties and methods. Some example objects include databases, rules, triggers, tables, columns, views, users, groups, publications, and indexes. The object-oriented model is so complete and flexible that the Microsoft SQL Server management tool, SQL Enterprise Manager, is written using SQL-DMO.</P>
<P CLASS="t">Unlike Visual Basic controls, SQL-DMO does not have a visual component nor events that are triggered by the mouse or keyboard. SQL-DMO provides objects used for controlling the SQL Server engine and its components. These objects expose appropriate properties and methods for all administration and database definition options.</P>
<P CLASS="t">The following illustration shows the complete set of objects in the SQL-DMO model and how the objects relate to one another in scope and hierarchy. The Application objects and the SQLServer object treat the application as their parent. Other objects depend on the availability of their parent object. These dependencies are represented in the diagram by indented sublevels. After the application has declared an object, the application can modify the object's properties and call its methods. </P>
<P CLASS="a"><img src="objnew2.gif"></P>
<P CLASS="t">Each object represents a physical element of a SQL Server system. The SQLServer object is the base object from which all other SQLServer objects branch in an object hierarchy. The scope of an object is determined by its parent because an object can be instantiated (connected, added, or made to represent a SQL Server element) only after its parent has been instantiated. For example, the SQLServer object is the Database object's parent, which means that a Database object can be instantiated only after the SQLServer object has been instantiated.</P>
<P CLASS="t">The model also shows two more important aspects of SQL-DMO: Collections and Application objects.</P>
<P CLASS="t"><I>Collections</I> are a group of objects of the same type that have the same parent. For example, all the Table objects that belong to the <B>pubs</B> database, the sample database installed with SQL Server, are members of the <B>pubs</B> Tables collection.</P>
<P CLASS="t">The collection is a powerful programming concept. Using a collection, you can refer to a specific object down the object hierarchy without declaring it explicitly. You can iterate through each member of a collection without specifying the name of each object. You can also add or remove objects collectively. Collections make it easy to write an application that iterates through all objects of the same type.</P>
<P CLASS="t">A collection's name is the plural of the type of object it contains. For example, a Tables collection contains Table objects.</P>
<P CLASS="t"><I>Application objects</I> are a group of objects primarily used to hold information, such as query results, permission information, or backup information, in a particular form. For example, the Backup object is used to store information about a backup and is passed as a parameter when the Database object's Backup method is called. Application objects can exist in the application prior to the creation of a SQLServer object. </P></BODY></HTML>
