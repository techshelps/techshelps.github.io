<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scanning the SQL Server Error Log or DBCC Output for Errors</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Scanning the SQL Server Error Log or DBCC Output for Errors</H2><P CLASS="t"><B><I>Windows NT ships with a powerful pattern-searching utility called findstr, which can be used to automate checking both DBCC output and SQL Server error logs.</I></B></P>
<P CLASS="t">It is necessary to frequently examine DBCC output and the SQL error logs to check for problems. This can be an error-prone and laborious process, especially if you must do this on several servers, each of which may have multiple databases.</P>
<P CLASS="t">Windows NT ships with a powerful pattern-searching utility called <B>findstr</B>, which can be used to greatly automate this task. It is even possible to conditionally execute a batch file based on whether certain error strings are found.</P>
<P CLASS="t"><B>findstr</B> uses Win32 asynchronous and file-mapped I/O for best throughput. It allows the use of regular expressions, recursive searching down a directory tree, and the ability to exclude patterns, thus achieving a NOT function. See your Windows NT documentation for more information.</P>
<P CLASS="t">There are two basic approaches to searching SQL error logs or DBCC output for errors: </P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">State explicitly what strings to find.</LI><LI CLASS="ULI1">State what strings you do not want to find.</LI></UL></SPAN></BODY></HTML>
