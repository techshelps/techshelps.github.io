<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft SQL Server Dump</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Microsoft SQL Server Dump </H3><P CLASS="t">The following sections provide steps for using Microsoft SQL Server to dump your database to a backup device. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>Store Result Sets</H4><P CLASS="t">It is useful to keep the result sets of SELECT statements against the <B>sysdatabases</B>, <B>sysdevices</B>, and <B>sysusages</B> tables in the <B>master</B> database. </P>
<P CLASS="t"><B>Note</B>   In some cases, it is also useful to store information from <B>syslogins</B>, <B>sysremotelogins</B>, <B>sysservers</B>, and <B>sysconfigures</B>.</P>
<P CLASS="proch">To store these result sets</P>
<P CLASS="ls">Make sure SQL Server is running.</P>
<P CLASS="ls">In SQL Enterprise Manager, make a note of the available backup devices.</P>
<P CLASS="lt1">If you are unsure of how to do this, see "Backing Up and Restoring" in SQL Server Books Online.</P>
<P CLASS="ls">Go to a query window.</P>
<P CLASS="ls">Execute the following: </P>
<P>use master</P>
<P>go</P>
<P>print 'select * from sysdatabases'</P>
<P>select * from sysdatabases</P>
<P>print 'select * from sysdevices'</P>
<P>select * from sysdevices</P>
<P>print 'select * from sysusages'</P>
<P>select * from sysusages</P>
<P></P>
<P CLASS="lt1"><B>Note</B>   If you've chosen to store other information, enter these additional lines:</P>
<P>print 'select * from syslogins'</P>
<P>select * from syslogins</P>
<P>print 'select * from sysremotelogins'</P>
<P>select * from sysremotelogins</P>
<P>print 'select * from sysservers'</P>
<P>select * from sysservers</P>
<P>print 'select * from sysconfigures'</P>
<P>select * from sysconfigures</P>
<P></P>
<P CLASS="ls">Save the result sets to a directory other than \Sql, \Sql60, or any of their subdirectories.</P>
<P CLASS="lt1"><B>Note</B>   This step assumes that you are dumping your result sets before upgrading to SQL Server version 6.5. If you choose to dump your SQL Server version 6.5 database, do not save the result sets to the \Mssql directory.</P>
<P CLASS="ls">Stop SQL Server.</P>
<H4 CLASS="h3"><A NAME="sec1"></A>Use Sqldump.sql Script</H4><P CLASS="t">The next step to backing up your SQL Server database is to execute a series of consistency checks and a stored procedure on each database on your SQL Server.</P>
<P CLASS="ls">Go to a Windows NT command prompt and change your directory to the \Sql\Binn or \Sql60\Binn directory.</P>
<P CLASS="lt1"><B>Note</B>   If you are dumping your SQL Server version 6.5 database, change your directory to the \Mssql\Binn directory.</P>
<P CLASS="ls">Execute the following: </P>
<P>sqlservr -c -m </P>
<P></P>
<P CLASS="lt1">Then, minimize the command-prompt window.</P>
<P CLASS="lt1"><B>Note</B>   <B>-c</B> starts SQL Server independent of the Windows NT Service Control Manager; <B>-m</B> starts SQL Server in single-user mode.</P>
<P CLASS="ls">Copy the Sqldump.sql script from the BackOffice Resource Kit CD-ROM to the \Sql\Binn or \Sql60\Binn directory.</P>
<P CLASS="lt1"><B>Note</B>   If you are dumping your SQL Server version 6.5 database, copy Sqldump.sql to the \Mssql\Binn directory.</P>
<P CLASS="ls">Open another Windows NT command-prompt window, change to the \Sql\Binn or \Sql60\Binn directory, and execute: </P>
<P>isql -Usa -P <I>password</I> -S <I>server</I>_<I>name</I> -n -iSqldump.sql oOutput.sql</P>
<P></P>
<P CLASS="lt1">The Sqldump.sql script creates a template that runs on each database. </P>
<P CLASS="lt1"><B>Note</B>   If you are dumping your SQL Server version 6.5 database, change to the \Mssql\Binn directory before executing the above script.</P>
<P CLASS="ls">Use the output file created in step 4 as the input file and create a new output file for the result set of the next query as follows: </P>
<P>isql -Usa -P <I>password</I> -S <I>server</I>_<I>name</I> -n -iOutput.sql -oNewoutput.sql</P>
<P></P>
<P CLASS="lt1">This step runs <B>sp_helpdb</B>, DBCC CHECKDB, and DBCC NEWALLOC on each database, then saves the output to a new file.</P>
<H4 CLASS="h3"><A NAME="sec2"></A>Dump Databases</H4><P CLASS="proch">To dump your databases to the backup device</P>
<P CLASS="ls">Check Newoutput.sql for any errors. Consult your system administrator if there are any errors.</P>
<P CLASS="ls">If the databases are clean, proceed to dumping each database as follows: </P>
<P>isql -Usa -P <I>password</I> -S <I>server_name</I> -Q"dump database <I>database_name</I> to <I>dump_device_name</I>"</P>
<P></P>
<P CLASS="lt1">where <I>dump_device_name</I> is one of the backup devices you noted during the "Store Result Sets" section earlier in this part.</P>
<P CLASS="ls">After this completes, take SQL Server out of single-user mode as follows:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI2">Close both command-prompt windows.</LI><LI CLASS="ULI2">Start SQL Server as a service using either the SQL Service Manager, SQL Enterprise Manager, or the MSSQLSERVER service in Control Panel. </LI></UL></SPAN></BODY></HTML>
