<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Scale Up and Speed Up</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Scale Up and Speed Up</H2><P CLASS="t">An ideal system improves linearly; that is, if you double the number of processors and disks, throughput doubles (linear scale up) or response time is cut in half (linear speedup). Linear scaling is rarely achieved in practice because it requires that all aspects of the system be perfectly scalable. The overall architecture includes hardware, operating system, database and network software, and the application software.</P>
<P CLASS="t">It is tempting to simplify scalability to a single metric like the number of processors a system can support. Many database applications are very I/O-intensive; however, adding CPUs to an I/O-bound system will not make it faster. Microsoft SQL Server running on today's typical 4-processor servers can achieve performance comparable to systems running on hardware with 20 processors! Is the second system more scalable because it requires 20 CPUs to achieve the same throughput? Obviously not.</P>
<P CLASS="t">The best metric is how well the system scales for your application, which is impossible to know in advance. However, you can estimate scalability by examining standard benchmarks and by looking at applications in related industries.</P></BODY></HTML>
