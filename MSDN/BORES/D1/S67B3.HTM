<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Testing a Backup Strategy</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Testing a Backup Strategy</H3><P CLASS="t">Once a backup strategy has been designed, it should be thoroughly tested. In testing the strategy, as many failures as possible should be simulated so you can be sure there is nothing that could jeopardize the recovery of data. For example, some customers have implemented highly redundant device and disk mirroring with multiple disks in a computer, so that should any one disk drive fail, they can continue operation uninterrupted. This is a good plan, but it does not eliminate the need to do backups. Asking the question, "Will this be sufficient in the event of theft of the computer?" would show that this plan could jeopardize the recovery of data. </P>
<P CLASS="t">Testing a backup strategy will also demonstrate how much time is required to restore databases from backups. If that amount of time is unacceptable, you may want to re-evaluate the frequency with which databases and transaction logs are being dumped, or you may want to look at the feasibility of maintaining a "warm" backup server. Warm backup servers are discussed in the "Managing a Backup Server" section later in this article.</P></BODY></HTML>
