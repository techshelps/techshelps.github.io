<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Locking</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">Locking</H2><P CLASS="t"><B><I>A locking system that maximizes performance is integral for faster throughput.</I></B></P>
<P CLASS="t">Locking synchronizes users' access to the database to ensure consistent data and correct query results. While one user locks an area of the database to view or change the data, the data is protected from other users trying to make changes to the same data. One user's changes are committed before another user can see or further change the data.</P>
<P CLASS="t">All modern database management systems use locks to provide concurrency in a multiuser environment. Some use page-level locks, some use row-level locks, some even allow you to specify, usually at table-creation time, which level of locking (page, row, or table) will be used for an individual table. </P>
<P CLASS="t">Dynamic Locking is a new kind of locking strategy. Rather than require the database administrator to analyze and anticipate which level of locking is best, Dynamic Locking uses the intelligence of the database engine to optimize the granularity of locks depending on the needs of the applications accessing a SQL Server database.</P>
<P CLASS="t">As Microsoft continues to increase the functionality of SQL Server, subsequent versions will build on the Dynamic Locking initiative. Insert row-level locking (IRL), available with SQL Server version 6.5, is the first step in Microsoft's Dynamic Locking strategy. The Dynamic Locking strategy includes:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A dynamic locking scheme that automatically optimizes the granularity of locks (row, pages, or tables). </LI><LI CLASS="ULI1">Row-level locking for all types of transactions (INSERT, UPDATE, DELETE, and SELECT). </LI><LI CLASS="ULI1">Mixed pages that group related rows from different tables on the same page and improve performance by reducing contention and the number of locks. </LI></UL></SPAN><P CLASS="t">Benefits of Dynamic Locking include:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Locking intelligence is built into the database engine, which allows ISVs and corporate developers to focus on the development of applications and not on what locking strategies are appropriate. </LI><LI CLASS="ULI1">Database administration is simplified, because table granularity does not have to be adjusted for individual tables. </LI><LI CLASS="ULI1">Users of the database benefit from increased performance; SQL Server uses the least amount of system overhead per lock.</LI></UL></SPAN></BODY></HTML>
