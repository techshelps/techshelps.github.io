<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Advantages of Win32</TITLE><BODY BGCOLOR="#FFFFFF">


<H2 CLASS="h1">The Advantages of Win32 </H2><P CLASS="t">Dynamic-link libraries (DLLs) work very differently under Win32. In Windows 3.<I>x</I>, each 16-bit DLL has its own data segment where all static and global variables are stored. This single data segment is shared across all processes using the DLL. Any memory allocated in the DLL is allocated from the DLL's data segment and is available to all calling processes. This design makes it very easy to share data among multiple processes.</P>
<P CLASS="t">The 16-bit DB-Library for Windows 3.<I>x</I> (W3dblib.dll) maintained the DB-Library connections as a linked list within this single, shared data segment. This required programmers to call <B>dbinit</B> before any other DB-Library function calls to initialize data structures, and <B>dbwinexit</B> to clean up when the application was done. </P>
<P CLASS="t">When Windows runs in protected mode, it uses an indirect method of segment addressing that allows the segment to be moved around by Windows without fear of invalidating any far pointers. Many applications still make unneeded calls to DBLOCKLIB and DBUNLOCKLIB. If they are still lingering in your code, delete them.</P>
<P CLASS="t">In Win32, DLLs are mapped into the address space of the calling process when the DLL is loaded by the process. This means that each process has a separate copy of the DLL's global and static data.</P>
<P CLASS="t">Each Win32 process enjoys a 4 GB virtual address space. Two gigabytes are reserved for the system and 2 GB are available for your application. The 32-bit "flat" memory model frees you from the limitations of Intel's 64K physical segment size. The flat memory model also eliminates the need to call <B>MakeProcInstance</B> and <B>FreeProcInstance</B> to create an address "thunk" for callback functions. Edit controls now can hold almost 2 GB of text, and list boxes can have more entries than your users are willing to scroll through. Win32 DB-Library supports <B>dbprhead</B> and <B>dbprrow</B>.<B> </B>These functions allowed MS-DOS programmers to display the output of any query to STDOUT, but they were not available on Windows 3.<I>x</I> because Microsoft does not support the concept of STDOUT. Since Win32 supports both graphical- and character-based (console) applications, they are now available and you can take advantage of them in your applications.</P></BODY></HTML>
