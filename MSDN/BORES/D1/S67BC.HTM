<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Effect of "trunc. log on chkpt." on Transaction Logs</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Effect of "trunc. log on chkpt." on Transaction Logs</H3><P CLASS="t">Two database options have an important affect on transaction logs:<B> trunc. log on chkpt. </B>and <B>select into/bulkcopy</B>. The <B>trunc. log on chkpt.</B> option automatically performs a DUMP TRANSACTION <I>database</I> WITH TRUNCATE_ONLY statement every time the SQL Server checkpoint handler wakes up. When <B>trunc. log on chkpt.</B> is set, the checkpoint handler wakes up once a minute for that database. Setting this option for a database is useful primarily in a development environment when backups of the transaction log are not wanted.</P>
<P CLASS="t"><B>Note</B>   It is recommended that you use the lazy writer instead of the <B>trunc. log on chkpt.</B> option to flush out batches of dirty, aged buffers and make them available to user processes by placing them in the free buffer pool. (Buffers are considered dirty when they contain changes that must be written back to disk before the buffer can be reused for a different page.)</P>
<P CLASS="t">The lazy writer eliminates the need to checkpoint frequently for the purpose of creating available buffers. Frequent checkpointing creates a drag on server performance.</P>
<P CLASS="t">For more information about the lazy writer, see the Microsoft SQL Server documentation. </P>
<P CLASS="t">When <B>trunc. log on chkpt.</B> is set, you can rely only on recovering from your database dumps, not from your log dumps. When this option is set, SQL Server prohibits a transaction log dump to a physical dump device<SPAN CLASS="Symbol">¾</SPAN>attempting to do so will yield SQL Server error 4208:</P>

<PRE>DUMP TRANsaction is not allowed while the trunc. log on chkpt. option is enabled: use DUMP DATABASE, or disable the option with sp_dboption.
</PRE>
<P CLASS="t">You will need to dump the entire database after turning off the option. Although subsequent transaction log dumps to physical dump devices are allowed once the option is turned off, you must first dump the entire database before dumping any new transaction logs. Transaction log dumps performed before the database was dumped are not recoverable because the sequence number for the database will have already been incremented for as many times as the checkpoint handler truncated the log.</P>
<P CLASS="t">The following example illustrates the affects of the <B>trunc. log on chkpt.</B> option. Assume that a database was dumped at midnight, the transaction log was dumped to a physical device at 8 A.M., and at 8:15 A.M., the <B>trunc. log on chkpt.</B> option was set for the database. At 8:45 A.M., the option was turned off, and at 9 A.M., the log was successfully dumped to another dump device. Between 8:15 A.M. and 8:45 A.M., there may have been as many as 30 automatic truncations of the transaction log—one truncation each time the checkpoint handler woke up. If this database later needed to be restored, the database dump could be loaded, followed by the 8 A.M. transaction log dump. However, attempting to load the 9 A.M. log dump would result in SQL Server error 4305 because the log had been truncated several times between 8:15 A.M. and 8:45 A.M. while the <B>trunc. log on chkpt.</B> option was set. Therefore, if you need to rely on your transaction log dumps for recovery, you must dump the database after turning off the <B>trunc. log on chkpt.</B> option or future log dumps will not be recoverable.</P>
<P CLASS="a"><img src="bok429.gif"></P>
<P CLASS="t">For databases that do not have the log on a separate device, there is no harm in having the <B>trunc. log on chkpt.</B> option set. If the log is located on the same device as the data, SQL Server disallows the dumping of the transaction log to a physical device—only DUMP DATABASE is allowed for backing up—so sequencing of the transaction log is not an issue.</P></BODY></HTML>
