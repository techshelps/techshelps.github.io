<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SnaServer Service: SNA Servers of Variables</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">SnaServer Service: SNA&nbsp;Servers of Variables</H3><P CLASS="t">The Registry variables in this section affect the SnaServer service. They are all located in the same place in the Registry:</P>
<P CLASS="t">HKEY_LOCAL_MACHINE<BR>    SYSTEM<BR>        CurrentControlSet<BR>            Services<BR>                SnaServr<BR>                    Parameters</P>
<P CLASS="t">The variables that affect the SnaServer service are as follows:</P>
<P CLASS="term1"><B>ALLOCINACT:REG_SZ:</B>{ <B>YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), the node will allocate pooled LUs even if they are inactive LUs on a connection that was activated on server startup or by an administrator. If this variable is not explicitly defined, only active LUs are allocated among pooled LUs on such a connection.</P>
<P CLASS="dt1">Setting this variable means that when users cannot get host access, they can use the OIA status line (in a 3270 emulator) to distinguish between two possible causes: all LUs are in use, or the host connection is down.</P>
<P CLASS="term1"><B>ALLOWBBRQE:REG_SZ:</B>{ <B>YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), the node allows Begin Bracket, Exception Response (BB RQE) on any request, even on requests that do not contain End Bracket (EB). If this variable is not explicitly defined, requests containing BB RQE but not EB are rejected with sense code 2003, in accordance with SNA protocols.</P>
<P CLASS="dt1">Note that BB RQE is allowed if Change Direction (CD) is set.</P>
<P CLASS="term1"><B>BINDRETRY:REG_DWORD:</B><I>number</I><B>       </B>Default:<B> 2</B></P>
<P CLASS="dt1">Sets the session retry time-out (in units of 5 seconds) for the server to retry BIND attempts for autoactivated sessions. Setting <B>BINDRETRY</B> to <B>0</B> prevents retries.</P>
<P CLASS="term1"><B>CLEANUP:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), the local LU deactivates sessions by directly sending UNBIND (cleanup). If this variable is not explicitly defined, when LU 6.2 sessions are deactivated, the two LUs exchange BIS requests before UNBIND is sent. Setting this variable is a workaround for a possible host problem in which the LU is erroneously marked inactive.</P>
<P CLASS="term1"><B>COMBUF:REG_DWORD:</B><I>number</I></P>
<P CLASS="dt1">This variable sets the size of the buffer pool available to the SnaServer service, in 16K units. Change this variable only if you receive error messages indicating that there is a buffer shortage. With a large number of gateway LUs, it may be necessary to set COMBUF to as large a value as 0x7F.</P>
<P CLASS="term1"><B>DloadMatchTPOnly:REG_SZ:</B>{ <B>YES</B> | <B>NO</B> }       Default: <B>NO</B></P>
<P CLASS="dt1">When this variable is set to <B>YES</B>, the comparison between a request for a transaction program (TP) and the list of available invokable TPs is carried out on the TP name only. Otherwise, the comparison is carried out using both the requested TP name and the requested partner LU alias. This variable affects the servers on which it is set, but does not affect other servers.</P>
<P CLASS="dt1">Invokable TPs can be configured, through a Registry or environment variable on the system where the TP is located, to use a specific LU alias. If the invokable TP is configured in this way, the setting of <B>DloadMatchTPOnly</B> will control whether the LU alias is used in comparisons against incoming requests. If the invokable TP is not configured to use a specific LU alias, then no matter to whichLU alias an incoming request is sent, there cannot be a mismatch (regardless of the setting of <B>DloadMatchTPOnly</B>); with such TPs, matching is only affected by the TP name.</P>
<P CLASS="dt1">For information about TPs, see the <I>Microsoft SNA&nbsp;Server APPC Programmer's Guide</I> or the <I>Microsoft SNA&nbsp;Server CPI-C Programmer's Guide</I>.</P>
<P CLASS="dt1">The default is <B>NO</B>, meaning that the comparison uses both TP name and LU alias (when the LU alias has been configured for the invokable TP).</P>
<P CLASS="term1"><B>DloadMatchLocalFirst:REG_SZ:</B>{ <B>YES</B> | <B>NO</B> }       Default: <B>YES</B></P>
<P CLASS="dt1">When this variable is set to <B>NO</B>, the comparison between a request for a TP and the list of available invokable TPs is carried out without regard to the location of the TP. Otherwise, invokable TPs on the local server are considered first for a potential match. This variable affects the server on which it is set, but not other servers in the subdomain.</P>
<P CLASS="dt1">For information about TPs, see the <I>Microsoft SNA&nbsp;Server APPC Programmer's Guide</I> or the <I>Microsoft SNA&nbsp;Server CPI-C Programmer's Guide</I>.</P>
<P CLASS="dt1">The default is <B>YES</B>, meaning that invokable TPs on the local server are considered first for a potential match.</P>
<P CLASS="term1"><B>FNA_SUPPORT: REG_SZ &lt;value&gt;</B></P>
<P CLASS="dt1">SNA&nbsp;Server supports the "Fujitsu Network Architecture" (FNA) variant to IBM SNA. Support for this alternate protocol is enabled by adding this registry variable. The &lt;value&gt; can be set to anything the administrator chooses that will identify the protocol to the system. </P>
<P CLASS="term1"><B>HNA_SUPPORT REG_SZ &lt;value&gt;</B></P>
<P CLASS="dt1">SNA&nbsp;Server supports the "Hitachi Network Architecture" (HNA) variant to IBM SNA. Support for this alternate protocol is enabled by adding this registry variable. The &lt;value&gt; can be set to anything the administrator chooses that will identify the protocol to the system.</P>
<P CLASS="term1"><B>INITSLFRETRIES: REG_SZ:</B>        Default: <B>0</B></P>
<P CLASS="dt1">When automatically activating a dependent APPC session, SNA&nbsp;Server sends an INIT-SELF command to the host, requesting that the host send a BIND command to start the APPC session. This parameter specifies the number of time an INITSELF is retried if a negative response is received from the host computer.</P>
<P CLASS="term1"><B>INITSLFTICKS: REG_SZ:</B>                Default: <B>2</B></P>
<P CLASS="dt1">The parameter specifies the number of tick periods (about five seconds) between INITSELF retries.</P>
<P CLASS="term1"><B>NO400D: REG_SZ: {YES | NO}           </B>Default: <B>YES</B></P>
<P CLASS="dt1">When a host application initiates an LU0 session with full duplex send/receive mode (by setting bit 0-1 to "00" in Byte 7 of the BIND message), this indicates that the Change Direction (CD) is not used on the session. The CD bit is only used on half-duplex sessions to indicate which end has direction to send on a session.</P>
<P CLASS="dt1">Some host applications may still set the CD bit on a full duplex session and this is a protocol violation. The Registry variable fixes the host application so SNA&nbsp;Server will ignore this message. When set to YES, SNA&nbsp;Server will ignore any messages received by the host computer on an LU0 full duplex session which has the CD bit set. However, the LUA (RUI or SLI) application running on SNA&nbsp;Server is still not allowed to set the CD bit when sending messages to the hosts on a full duplex LU0 session, since this is a protocol violation.</P>
<P CLASS="term1"><B>NO4004:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), it causes the server to ignore sense code 4004. In other words, it causes CEB (conditional end bracket) to be accepted when EC (end chain) is not set, and EB (end bracket) to be accepted when BC (begin chain) is not set. If this variable is not explicitly defined, there is a normal response to sense code 4004.</P>
<P CLASS="term1"><B>NOINITCNOS:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), SNA&nbsp;Server will perform CNOS negotiation for APPC LUs only when sessions are required. If this variable is not explicitly defined, SNA&nbsp;Server performs these negotiations when the connection is started.</P>
<P CLASS="dt1">Note that with autoactivated sessions, regardless of the <B>NOINITCNOS</B> setting, CNOS negotiation must always be performed when the connection is started. </P>
<P CLASS="dt1">Setting this variable speeds up the starting process for connections that have large numbers of LUs.</P>
<P CLASS="term1"><B>NONOTIFYRSP:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is set to <B>YES</B>, SNA&nbsp;Server ignores the lack of response to a Notify request sent by the SNA&nbsp;Server node. If a Notify response is subsequently received, SNA&nbsp;Server processes it normally.</P>
<P CLASS="dt1">When this variable is set to <B>NO</B>, dependent LU sessions may become unusable due to the lack of a Notify response.</P>
<P CLASS="term1"><B>NORETRY:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), the server does not retry a BIND request when the response to the BIND is an UNBIND cleanup request. This prevents repetitive BIND failures when routing LU 6.2 sessions through a host.</P>
<P CLASS="term1"><B>NOTERMSELF:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> NO</B></P>
<P CLASS="dt1">When this variable is defined (with any value), 3270 sessions are terminated directly by sending UNBIND (cleanup). If this variable is not explicitly defined, a TERM-SELF is sent to solicit UNBIND from host. Setting this variable is a workaround for host-based session monitors that mark the LU as inactive after the TERM-SELF sequence.</P>
<P CLASS="term1"><B>RENEGLIMITS:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> YES</B></P>
<P CLASS="dt1">When this variable is set to <B>YES</B>, SNA&nbsp;Server always performs CNOS renegotiation when three criteria hold: no active sessions exist, SNA&nbsp;Server has a nonzero session limit, and an application BIND fails (regardless of sense code). Otherwise, SNA&nbsp;Server performs CNOS renegotiation according to the setting of <B>RETRYCNOS</B>.</P>
<P CLASS="dt1">Note that when <B>RENEGLIMITS</B> is set to <B>YES</B>, it overrides any setting of <B>RETRYCNOS</B>.</P>
<P CLASS="dt1">For a discussion of the renegotiation procedure that SNA&nbsp;Server uses by default (when variables such as <B>RENEGLIMITS</B> are not set), see the description for the next variable, <B>RETRYCNOS</B>. </P>
<P CLASS="term1"><B>RETRYCNOS:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> YES</B></P>
<P CLASS="dt1">When this variable is set to <B>NO</B>, SNA&nbsp;Server will not automatically renegotiate LU 6.2 session limits when the partner, without giving notice, resets these limits. Otherwise, SNA&nbsp;Server renegotiates the session limits whenever they are reset. The following paragraphs provide an overview of the CNOS renegotiation process performed by SNA&nbsp;Server.</P>
<P CLASS="dt1">By default, SNA&nbsp;Server performs CNOS negotiation at the start of day (when the session limits are initially 0), in response to an application issuing a CNOS verb, or whenever session limits are reset. The resetting of session limits becomes apparent to SNA&nbsp;Server when no active sessions exist, SNA&nbsp;Server has a nonzero session limit, and an application BIND is rejected either by an UNBIND request or with a BIND negative response containing one of the following sense codes:</P>
<P></P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="62pt" VALIGN="TOP"><COL WIDTH="271pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P CLASS="th">Sense 1</P></TD><TD VALIGN="TOP"><P CLASS="th">Sense 2</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P CLASS="tr"></P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">0x0806</P></TD><TD VALIGN="TOP"><P CLASS="tt">0x3426  (Resource Unknown)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">0x0805</P></TD><TD VALIGN="TOP"><P CLASS="tt">xxxxxx  (Session Limit Exceeded)</P></TD></TR><TR><TD VALIGN="TOP"><P CLASS="tt">0x0801</P></TD><TD VALIGN="TOP"><P CLASS="tt">xxxxxx  (Resource Not Available)</P></TD></TR></TBODY></TABLE>
<P CLASS="spacing"><BR></P><P CLASS="dt1">SNA&nbsp;Server does not automatically reset session limits after a connection failure; when the connection is reactivated, renegotiation may not be necessary, and does not always occur.</P>
<P CLASS="dt1">If an application BIND fails after a previously successful CNOS negotiation, the most likely reason is that the partner LU has reset its session limits (perhaps because of a connection failure or being stopped and restarted) without SNA&nbsp;Server being informed by a request to renegotiate the session limits. In this situation, SNA&nbsp;Server will receive a BIND rejection of the type previously described, and by default will perform CNOS renegotiation. This CNOS renegotiation will resolve the problem of having a remote application that is active when no sessions are active on the connection.</P>
<P CLASS="dt1">If the CNOS renegotiation fails, no further attempts are made to activate the session until the connection is restarted or the SNA&nbsp;Server application retries.</P>
<P CLASS="dt1">With SNA&nbsp;Server, renegotiation is activated by default, and can only be deactivated by setting this variable to <B>NO</B>. For a description of a variable that overrides the effects of <B>RETRYCNOS</B>, see <B>RENEGLIMITS</B>.</P>
<P CLASS="dt1">Setting this variable to <B>NO</B> is a workaround for problems when communicating with CICS and the AS/400&reg;.</P>
<P CLASS="term1"><B>SESTIMEOUT:REG_SZ:</B><I>number</I></P>
<P CLASS="dt1">This variable sets the number of 5-second timer ticks allowed before the node deactivates contention winner sessions that are no longer in use. If the variable is not set, 4 timer ticks of 5 seconds each are allowed, for a total of 20 seconds.</P>
<P CLASS="term1"><B>Unique5250Names:REG_SZ:</B>{<B> YES </B>|<B> NO </B>}<B>       </B>Default:<B> YES</B></P>
<P CLASS="dt1">When this variable is set to <B>NO</B>, SNA&nbsp;Server will not ensure that session IDs generated by 5250 emulators are unique. Otherwise, SNA&nbsp;Server will substitute a unique session ID if any 5250 emulator generates a duplicate ID.</P>
<P CLASS="dt1">When a 5250 user establishes a session with an AS/400, a unique device name is required. Unless an override is sent, the AS/400 will generate the name by taking the Local LU and appending a 2-byte session ID sent by the emulator. A session ID generated by an emulator is usually not unique, since the emulator does not have information about the session IDs used by other active emulators. Therefore, by default, SNA&nbsp;Server alters the session IDs as they are sent out to ensure uniqueness. This is the recommended behavior, but it can be disabled by setting this Registry variable to <B>NO</B>. </P></BODY></HTML>
