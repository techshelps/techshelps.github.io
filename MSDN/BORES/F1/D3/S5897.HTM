<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Distributed SNA Gateway Deployment</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Distributed SNA Gateway Deployment</H3><P CLASS="a"><img src="snrk_b05.gif"></P>
<P>Figure 2.5    SOGA offers a new distributed deployment model that makes better use of available WAN bandwidth than branch-based or centralized configurations.</P>
<P CLASS="t">The distributed deployment model presupposes the existence of a WAN environment consisting of a routable protocol such as TCP/IP, IPX/SPX, or Banyan VINES. We previously discussed the advantages and disadvantages of following a branch-based or centralized strategy to provide client-to-host connectivity in a WAN environment. Those problems can be overcome by following a distributed deployment. The distributed approach combines the branch-based and centralized models to achieve a best-of-both-worlds solution without any of the negatives represented by either model alone. </P>
<P CLASS="t">In a distributed configuration, the SNA&nbsp;Server computers are located both centrally near the host systems and also in the branch offices near the end users. One of the key benefits of a branch-based deployment is that it isolates the heavy client-to-server traffic to a local ring or segment. The SNA&nbsp;Server computers are deployed in the <I>central</I> locations so they can use the latest in channel-attachment technology or high-speed LAN connections. Centrally  locating the SNA&nbsp;Server computers allows for isolation of the SNA protocols to the data center or backbone LAN. </P>
<P CLASS="t">The central-site SNA&nbsp;Server computers "distribute" their host links for use by the branch-based SNA&nbsp;Server computers. The branch-based SNA&nbsp;Server computers connect to the host systems by sharing the distributed physical connections of the central SNA&nbsp;Server computers. Connections between branch and centralized SNA&nbsp;Server computers are via TCP/IP, IPX/SPX, or Banyan VINES. This new server-to-server capability is a feature released in Service Pack 1 for SNA&nbsp;Server 2.11 called the distributed link service. At the heart of the Distributed link service is a new host link service called the Distributed Link Service (DLS). See Figure&nbsp;2.5 for a depiction of a typical distributed deployment topology. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>Configuring the Distributed Link Service</H4><P CLASS="t">Configuring the distributed link service is a two-step process. Step 1 is performed on the central-site SNA&nbsp;Server computer. Step 2 is performed on the branch-based SNA&nbsp;Server computer. </P>
<H5 CLASS="h4"><A NAME="sec1"></A>Central SNA&nbsp;Server Configuration</H5><P CLASS="a"><img src="snrk_b06.gif"></P>
<P>Figure 2.6    The SNA&nbsp;Server administrator distributes a link service by simply choosing the "Distribute"checkbox in the link service property page. This makes the link service available for use by a branch-based SNA&nbsp;Server.</P>
<P CLASS="t">In the first step, the SNA&nbsp;Server administrator copies one or more host link services using the SNA&nbsp;Server Setup program. This can be done at the time SNA&nbsp;Server is first installed or later by re-running setup.Host link services are the interfaces between SNA&nbsp;Server's protocol engine (the node) and the host link adapters, such as a channel attachment device or the token-ring adapter depicted in our example. See Figure 2.6. </P>
<P CLASS="t">In order to make the central-site host link adapter available to a branch-based SNA&nbsp;Server, the SNA&nbsp;Server administrator must "distribute" the central-site link service. This is done by choosing the "Allow Link Service to be Distributed" checkbox on the link service property page as shown in Figure 2.6. The link service is designated as distributed by a "(D)" in the <B>Installed Link Services</B> list box. Once distributed, the central SNA&nbsp;Server link service and underlying host link adapter are available for use by the branch-based SNA&nbsp;Server. The only exception is if a link service is already in use when the administrator distributes it, then in order for this change in status (from "undistributed" to "distributed") to take effect, the link service must be stopped and re-started. The SNA&nbsp;Server administrator can do this from a Windows NT command prompt by typing "net stop &lt;service name&gt;," then "net start &lt;service name&gt;." In the example, the DLC 802.2 Link Service #1 on the central SNA&nbsp;Server has been distributed for use by a branch SNA&nbsp;Server.</P>

<PRE>C:\&gt;dlsstat \\central1
SnaDlc1 (Token-ring, SAP 0x04) is used by:
SnaDlc2 (Token-ring, SAP 0x08) is used by:
C:\&gt;
</PRE>
<P>Figure 2.7    DLSstat provides the SNA&nbsp;Server administrator with the status of any distributed link service located anywhere on the network. </P>
<P CLASS="t">To determine if a central-site link service is distributed and available, the SNA&nbsp;Server administrator can use the Distributed Link Service Status (DLSstat) utility. This utility is accessible at a Windows NT command prompt by typing</P>

<PRE>dlsstat \\&lt;server name&gt;. 
</PRE>
<P CLASS="t">If this command is typed on the same machine as the central site distributed link service, then the SNA&nbsp;Server administrator can omit the server name in the command.</P>
<P CLASS="t">The output will look like that depicted in Figure 2.7. In the example, the central-site SNA&nbsp;Server is named "Central1". That server has two link services distributed, one named "SnaDlc1" and one named "SnaDlc2." Both are available for use by any SNA&nbsp;Server computer on the network. </P>

<PRE>C:\&gt;dlsstat \\central1
SnaDlc1 (Token-ring, SAP 0x04) is used by:
    \\branch1
SnaDlc2 (Token-ring, SAP 0x08) is used by:
C:\&gt;
</PRE>
<P>Figure 2.8     DLSstat is used to list the name of the branch-based SNA&nbsp;Server computers currently using link services on a central site SNA&nbsp;Server computer. </P>
<P CLASS="t">DLSstat supports the use of NetBIOS name, IP alias, and IP address (e.g. "\\123.33.33.133") to locate an SNA&nbsp;Server computer anywhere on the network. It can also be used to provide a list of the central link service each branch SNA&nbsp;Server is using.</P>
<P CLASS="t">In the example, the branch-based SNA&nbsp;Server named "Branch1" is using the distributed link service named "SnaDlc1" on the central-site SNA&nbsp;Server named "Central1." The parenthetical in the DLSstat output represents the central site "link service title" or comment. The SNA&nbsp;Server administrator can modify this comment to make it more descriptive.</P>
<P CLASS="t">The link service is configured at the central SNA&nbsp;Server computer using SNA&nbsp;Server Setup. This includes assigning a local service access port (SAP) for the SNA&nbsp;Server computer's host link adapter. In the example, the SNA&nbsp;Server administrator would configure the local SAP for the token-ring adapter used by the DLC 802.2 Link Service #1 on the central-site SNA&nbsp;Server. There is nothing to configure in SNA&nbsp;Server Manager. In fact, if all link services of a central-site SNA&nbsp;Server computer were distributed for use by branch-based SNA&nbsp;Server computers, then the central-site SNA&nbsp;Server Managerand SnaServer service would never need to be started. Distributed link services are provided on a first come, first served basis. For example, when SnaDlc1 on Central1 is being used by SnaRem1 on Branch1, then no other SNA&nbsp;Server can use SnaDlc1. Because the same distributed link service cannot be used by multiple SNA&nbsp;Server computers simultaneously, the SNA&nbsp;Server Manager is designed to hide a distributed link service. This avoids the confusion where an administrator might attempt to configure the connection for use by both the branch and the central SNA&nbsp;Server. In the example, all that is required to run on Central1 are the SnaBase, SnaDlc1, and SnaDlc2 services. </P>
<P CLASS="t">The SNA&nbsp;Server node communicates to the host system through the Dynamic Module (DMOD), a service layer that provides inter-object messaging throughout SNA&nbsp;Server. The SNA Device Interface Specification (SNADIS) application programming interface (API) provides a device-independent layer between the host link services and the DMOD. Many different host link services are available for SNA&nbsp;Server, one for each independent hardware vendor's (IHV) link driver, including: 802.2, DFT, twinax, and numerous SDLC, X.25, and channel adapters. The SNADIS API allows SNA&nbsp;Server to support multiple adapters produced by many vendors without affecting the architecture of the node or other components of SNA&nbsp;Server. </P>
<P CLASS="a"><img src="snrk_b09.gif"></P>
<P>Figure 2.9    The central SNA&nbsp;Server, Central1, has two distributed link services installed--SnaDlc1 and SnaDlc2. These link services are made available to the node on the branch SNA&nbsp;Server, Branch1, via the distributed link service. The connection between the two computers is via the SNA DMOD.</P>
<P CLASS="t">The connection between two distributed link services, one on a central-site SNA&nbsp;Server computer and one on a branch-based SNA&nbsp;Server computer, is made using substantially the same mechanism as that used for SNA&nbsp;Server client-to-server communications. The link is established and maintained by the two DMODs on each SNA&nbsp;Server computer, as shown in Figure 2.9. This is why the distributed link service supports the same routable WAN protocols as the client—TCP/IP, IPX/SPX, and Banyan VINES. </P>
<H5 CLASS="h4"><A NAME="sec2"></A>Branch SNA&nbsp;Server Configuration</H5><P CLASS="a"><img src="snrk_b10.gif"></P>
<P>Figure 2.10    The SNA&nbsp;Server administrator installs a distributed link service, SnaRem1, on the branch-based SNA&nbsp;Server computer, Branch1, and configures it to use one of the target central-site SNA&nbsp;Server computer's distributed link service—in this case, SnaDlc1 on Central1.</P>
<P CLASS="t">The second step in configuring the distributed link service is performed on the branch-based SNA&nbsp;Server computer. The SNA&nbsp;Server administrator installs one or more distributed link services using the <B>Insert Link Service</B> menu option. The SNA&nbsp;Server administrator enters the link service name of the central-site SNA&nbsp;Server computer in a configuration dialog, choosing the link type, and entering the central-site SNA&nbsp;Server computer's distributed link service as shown in Figure 2.10. An alternative central-site link service can also be entered. The remote link services and alternative link services edit boxes will accept any information. Ther server name and link service name that the SNA&nbsp;Server administrator enters are not validated by SNA&nbsp;Server. This allows the administrator to configure distributed link service to use link services that have yet to be installed on a central-site SNA&nbsp;Server computer. See Figure 2.10.</P>
<P CLASS="t">The SNA&nbsp;Server administrator must match the type of link service on the branch-based SNA&nbsp;Server with the central SNA&nbsp;Server link service. In the example, the SnaDlc1 on Central1 is a token-ring 802.2 link service; therefore, the SnaRem1 on Branch1 must be set to link type of token-ring 802.2. Next, the connection over the newly installed SnaRem1 distributed link service must be configured using the SNA&nbsp;Server Manager on the branch-based SNA&nbsp;Server computer. SNA&nbsp;Server Manager can be run locally on branch-based SNA&nbsp;Server computers or remotely on any other Windows NT Server or Windows NT Workstation computer. The connection properties for the connection that uses SnaRem1 must match the host PU configuration or line definition on the host system. See Figure 2.11. For the configuration procedure see SNA&nbsp;Server Manager Help.</P>
<P CLASS="a"><img src="snrk_b11.gif"></P>
<P>Figure 2.11    The SNA&nbsp;Server administrator configures the token-ring 802.2 connection, which uses the SnaRem1 distributed link service, as if it were a local connection.</P>
<P CLASS="t">The administrator configures the distributed link service connection as if it were a local connection according to the host link type and media type of the target central-site SNA&nbsp;Server link service. In the example, the connection is to a host mainframe. Therefore, the administrator must define the remote network address of the host's token-ring adapter and local node identifier (ID BLK and IDNUM parameters) configured in the PU definition in VTAM&reg;.<I> </I>For AS/400 connections, consult the AS/400 administrator for special configuration issues.</P>
<H5 CLASS="h4"><A NAME="sec3"></A>Configuring for Load Balancing</H5><P CLASS="t">The SNA&nbsp;Server administrator can configure a branch-based SNA&nbsp;Server to connect through multiple central SNA&nbsp;Server computers to achieve load balancing. Load balancing can reduce the likelihood that any single SNA&nbsp;Server or central-site link service will become overloaded and fail by equalizing the load across multiple connections and servers. This is done by entering multiple server and service names, separated by a semicolon, in the remote link<B> </B>services configuration dialog. The distributed link service on the branch-based SNA&nbsp;Server computer is designed to connect to a central-site distributed link service according to a random selection from the link services listed in the remote link service field of the distributed link service dialog, as shown in Figure 10. This random selection is intended to provide a degree of load balancing. </P>
<H5 CLASS="h4"><A NAME="sec4"></A>Configuring for Fault Tolerance</H5><P CLASS="t">The SNA&nbsp;Server administrator can configure a branch-based SNA&nbsp;Server to connect through one or more central SNA&nbsp;Server computers. The SNA&nbsp;Server administrator can configure the branch-based SNA&nbsp;Server for load balancing by entering multiple server and service names in the remote link services edit box, as shown in Figure 2.10. Should a central SNA&nbsp;Server computer or link service go down, a branch-based SNA&nbsp;Server computer can immediately reconnect to the target host system through another central-site SNA&nbsp;Server or link service. </P>
<H4 CLASS="h3"><A NAME="sec5"></A>Advantages of a Distributed Strategy</H4><P CLASS="t">In a distributed deployment, the centralized SNA&nbsp;Server computer distributes its host data links for use by the branch-based SNA&nbsp;Server computer, creating an effect similar to PU pass-through. Although SNA&nbsp;Server does not combine individual LUs and PUs into the same network packet, because the SNA architecture prohibits putting multiple request/response units (RUs) in a single PIU (path information unit), the WAN transport will do this by default. In the example, Branch1 connects to Central1 across a routed TCP/IP WAN. If WAN bandwidth is a constraint (e.g., the WAN is frequently congested), then Windows NT Server will aggregate the server-to-server traffic using the Nagle TCP/IP compression algorithm. This will cause fewer, fuller, TCP buffers to be sent between SNA&nbsp;Server computers. This reduces the ratio of TCP/IP overhead bytes to data payload. The net result is better use of available WAN bandwidth, which should ultimately result in better response times during periods of high WAN usage. The downside is that in order for such aggregation of messages to occur, there must be a slight delay in transmission of some segments, which can cause a decrease in response times. As such, network managers should disable the Nagle algorithm if bandwidth is not a constraint. .. For more information see the SNA&nbsp;Server Knowledge Base article Q138831. The following may be helpful in enhancing communication on SNA&nbsp;Server:</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1"><I>Packet Size Compared to Centralized Model</I>. ..Both the centralized approach and the distributed approach use the SNA&nbsp;Server client-server transport for the connection across the WAN. Therefore, they both produce the same overhead per message. However, there is less traffic (i.e. lower bandwidth use) across the WAN as a result of using the distributed link service, because of the reduced number of messages. Client-to-server connections produce many more messages than server-to-host connections. </LI><LI CLASS="ULI1"><I>Local Response to Host Polls Reduces Traffic on WAN</I>. Remote hardware controllers must respond to each poll from the host. This can create extra traffic across a WAN that supports the remote controllers via DLSw or RFC 1490. In the case of a distributed SNA&nbsp;Server deployment, the polling does not go beyond the central site. The distributed link service, which runs on the central server, handles all link-level traffic on behalf of the remote SNA&nbsp;Server computers, including responding to host polls. The result is a marked reduction in WAN traffic when compared to remote controllers using a DLSw or RFC 1490 WAN.</LI><LI CLASS="ULI1"><I>Max BTU and TCP/IP Packet Size</I>. The central-site SNA&nbsp;Server DMOD (see Figure 2.9) treats the distributed link service as if it were any other link service. The node will split up the data into the size specified as the maximum BTU (basic transmission unit) for the connection over which the data is sent. Of course, when a message is smaller than the BTU size, it will be transmitted complete. This works well with most DLC types used for the majority of distributed deployment environments—where network managers will employ mostly channel-attachment and high-speed token-ring DLC host links. In the typical scenario, the BTU size will be larger than the WAN packet size. In the case of some other DLC types (e.g. SDLC) where the BTU size may be less than the WAN packet size, the distributed link service seems to present a less-than-optimal solution. SNA&nbsp;Server does not alter the message flows to combine multiple messages together before transmission. To do this would have an adverse effect on perceived user response times. When the WAN is slow or becomes congested, then even SDLC and other small BTU link types will perform better over a distributed link service. This is because the underlying WAN protocol will combine multiple RUs. </LI><LI CLASS="ULI1"><I>Configuring the KeepAlive for TCP/IP Links</I>. In a low-bandwidth routed IP environment, the SNA&nbsp;Server administrator can configure SNA&nbsp;Server and Windows NT Server to make optimal use of limited bandwidth. First, SNA&nbsp;Server can be configured for "on demand" activation, where the connection will only be activated if a user attempts to open a session over the connection (and the connection will be dropped when the user ends the session). Second, the KeepAlive time interval can be raised to reduce the number of messages sent to keep an unused link active. The default is 60 seconds. Both ends will send this KeepAlive to the other end to check that the other side is still operating. The KeepAlive parameter is in the Windows NT Server Registry: <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SnaBase\Parameters\SnaTcp\KeepAlive:REG_SZ:"YES" | "NO"</B>. 
<P CLASS="lt1">The KeepAlive parameter can be used to disable TCP's own KeepAlive (SO_KEEPALIVE option) messages. The default value is "YES" (TCP KeepAlive is enabled). By setting the KeepAlive to "no", which tells the IP stack to keep the connection open, and the WatchDogTimeout to "no limit," the SNA&nbsp;Server administrator can keep the distributed link connection active even when there is no longer any actual traffic. In this case, only the server-to-host connection remains active. This is useful in WAN environments composed of ISDN or X.25 connections (in which cost is associated with time connected) between branch and central SNA&nbsp;Server computers. </P></LI><LI CLASS="ULI1"><I>Configuring the WatchDogTimeOut for TCP/IP Links</I>. The SNA&nbsp;Server administrator can control the KeepAlive message rate by modifying the WatchDogTimeOut variable. This variable affects the time-out interval used with TCP/IP. When activity ceases across an established session (that is, when no messages are being sent), the local system waits the specified interval and then sends a message to see if the remote system responds. If the remote system does not respond, the local system closes down the session. A local system uses the local value regardless of the value on the remote system. The SNA&nbsp;Server administrator can decrease this number to create a faster response to failures within a TCP/IP network, or increase this number to minimize overhead on a TCP/IP network on which system failures are infrequent. The range is 30-3600 seconds (3600 seconds equals 1 hour). If this variable is not set, it defaults to 60 seconds. The WatchDogTimeOut parameter is in the Windows NT Server Registry: <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SnaBase\Parameters\WatchDogTimeOut:REG_DWORD:number</B>. </LI></UL></SPAN><P CLASS="t">The potential impact of having a very high WatchDogTimeOut value in a distributed link service configuration is that it would take the branch server a long time to determine that the host connection has gone away if there's no other traffic. You can set this value as high as two hours, which would mean that the standard TCP/IP watchdog timeout takes over (default is 60 minutes). In that case, the branch-based SNA&nbsp;Server computer would notice the dropped connection (within about a minute) when it next attempts to send data to the host. </P>
<H5 CLASS="h4"><A NAME="sec6"></A>Network Simplicity by using a Single Protocol on the LAN and the WAN</H5><P CLASS="t">Another benefit of the distributed link service is that it provides network simplicity by allowing the network manager to support merely one LAN and WAN protocol. No SNA protocols need to be routed or bridged across the WAN. No expensive DLSw routers need to be employed. Any software-based or hardware-based router or bridgecapable of passing TCP/IP, IPX/SPX, or Banyan VINES will support distributed link service. This significantly simplifies wide-area network management... </P>
<H5 CLASS="h4"><A NAME="sec7"></A>Broad Support from Industry-Leading Internetworking Vendors</H5><P CLASS="t">A distributed deployment approach presupposes the existence of a WAN environment. Because the branch-based SNA&nbsp;Server computers rely on the WAN services provided by leading internetworking vendors, the distributed link service will work over all existing and future WAN technologies, including leased lines, X.25, frame relay, and ATM networks. This means greater flexibility for organizations seeking to better use or consolidate their network infrastructure.</P>
<H5 CLASS="h4"><A NAME="sec8"></A>Efficient Sharing of Host Resources through Load Balancing</H5><P CLASS="t">The branch-based SNA&nbsp;Server computers can connect to the host via multiple centralized SNA&nbsp;Server computers, load-balancing between the central-site SNA&nbsp;Server computers at connect time. Pools of LUs can span multiple connections on one or more SNA&nbsp;Server computers. Typically, each remote site will consist of a single subdomain. In that subdomain there will likely be one or two SNA&nbsp;Server computers. If two computers are used, then the SNA&nbsp;Server administrator can configure a pool that spans connections on both branch-based SNA&nbsp;Server computers. Not withstanding how many servers are at the branch site, a pool of LUs can also span multiple distributed link service connections across different central-site SNA&nbsp;Server computers. When a pool is spread across PUs on the same node, the node will allocate all the LUs from the first PU before allocating any from the second. This prevents the node from activating several on-demand connections and allocating a few LUs from each when only one is actually needed. When a user requests a session in the LU pool, the load will be balanced across multiple connections, multiple remote servers, and multiple central-site servers. Load balancing is one way to ensure greater fault tolerance. The better the load is balanced evenly across multiple server-to-host links, the greater likelihood that no one connection or server will fail. Distributed link service load balancing even works with dedicated LUs. The SNA&nbsp;Server administrator can assign each user a separate LU pool containing at least two sessions that are bound to different SNA&nbsp;Server computers or connections. </P>
<H5 CLASS="h4"><A NAME="sec9"></A>Greater Reliability through Configuring Fault Tolerance across Multiple Central-Site SNA&nbsp;Server Computers</H5><P CLASS="t">Reliability is built into the distributed link service. In a distributed deployment, a branch-based SNA&nbsp;Server computer communicates with the central-site SNA&nbsp;Server via a TCP/IP connection, which eliminates DLC time-out problems associated with traditional SNA encapsulation methods such as DLSw. Additionally, the host link services on the central-site SNA&nbsp;Server computer provide local acknowledgment to the host system, assuring that host connections do not time-out. The SNA&nbsp;Server administrator can configure further levels of fault tolerance. </P>
<P CLASS="t">First, the SNA&nbsp;Server administrator can configure two or more branch-based SNA&nbsp;Server computers with like resources using LU pooling in the case of mainframe connections or the same local LUs in the case of AS/400 connections. If one server goes down, then the other server(s) will operate in hot backup mode to ensure continued host access. </P>
<P CLASS="t">Second, the SNA&nbsp;Server administrator can configure multiple distributed link service connections to two or more central-site servers, ensuring fault tolerance should a central-site SNA&nbsp;Server computer fail. </P>
<P CLASS="t">Third, the SNA&nbsp;Server administrator can configure branch-based SNA&nbsp;Server computers to connect via dial-up SDLC, leased-line SDLC, and X.25 networks as a backup. Fourth, the SNA&nbsp;Server administrator can configure branch-based clients to connect to central-site SNA&nbsp;Server computers directly, should the branch office servers become unavailable. </P>
<H5 CLASS="h4"><A NAME="sec10"></A>Flexible Administration through Optional Security and Host Management of Branch-Based SNA&nbsp;Server Computers</H5><SPAN CLASS="list"><UL><LI CLASS="ULI1"><I>Extra level of flexible security</I>. By default, no added security is applied to server-to-server communications in a distributed deployment. Any branch SNA&nbsp;Server computer can by default access a distributed link service on a central SNA&nbsp;Server computer using an anonymous logon. This is true even though the central-site Windows NT Server computer is configured to deny guest logins. When a local link service on the central-site SNA&nbsp;Server is distributed,  it is shared to the world just like an "everyone" file or printer share. However, the SNA&nbsp;Server administrator can restrict access to a central-site distributed link service by adding the following Windows NT registry entry: <B>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SnaBase\Parameters\DenyAnonymousLogon:REG_DWORD:1</B>. 

<P CLASS="lt1">This SnaBase registry parameter disables anonymous logons. The default value is 0 for anonymous logons allowed. If the anonymous logon is disabled on the central SNA&nbsp;Server computer, then all branch server distributed link services must be configured to run under a user account, not local system, in order to gain access to the shared central-site link service. The user account of the branch-based SNA&nbsp;Server computer has to be one that is recognized as valid by the central server as capable of running the distributed link service with local system authority on the branch-based server. It is essentially verification of whether the peer SNA&nbsp;Server computer is truly a peer. The network manager can verify that a user who is logged on to the remote system does not have any access by typing "net view \\&lt;server name&gt;" from the branch-based SNA&nbsp;Server computer. ..</P>



<UL><LI CLASS="ULI2"><I>Administration of distributed link services over Internet connections</I>. The distributed link service can be configured for use across an intranet or the Internet. To avoid having to resolve the central-site SNA&nbsp;Server computer's NetBIOS name or IP alias ("Central1" in our example), the administrator can use "\\&lt;server IP address&gt;\&lt;link service name&gt;."</LI><LI CLASS="ULI2"><I>Management of  branch-based SNA&nbsp;Server computers from a centralized host system</I>. Since the central-site SNA&nbsp;Server computers provide the equivalent of PU pass-through service for the branch-based SNA&nbsp;Server computers, the host operator sees each branch-based server as a PU and can manage the branches via standard NetView alerts and RunCmds.</LI></UL></LI></UL></SPAN><H5 CLASS="h4"><A NAME="sec11"></A>Full SNA Application Support</H5><P CLASS="t">Unlike other popular SNA-over-WAN solutions such as TN3270 and AnyNet, the distributed link service is not limited in SNA functionality. Each branch-based SNA&nbsp;Server computer provides full SNA access for the local PCs, including PU2.0, PU2.1, and APPN&reg; LEN service, as well as LU0, LU1, LU2, LU3, and LU6.2 support. Both mainframe and AS/400 access are supported concurrently. In some cases, host applications initiate a transaction across a connection. These include many APPC-based host-to-PC file transfer solutions. At the same time, the host connection might prohibit a continuously open link. As such, it is important that the SNA gateway solution allow for flexible and cost-effective connections between central-site host systems and remote sites. The distributed link service supports host-initiated connections for 802.2 distributed link services. This is useful for organizations that use ISDN and for other networks where costs are based on connection time. </P>
<H5 CLASS="h4"><A NAME="sec12"></A>Multi-function Server Availability in Branches</H5><P CLASS="t">Because of the scalability and multitasking capabilities of the Windows NT Server operating system, a single branch-based server computer can function as an SNA gateway, file and print server, e-mail server, database server, systems management server, and intranet or Internet server. Because SNA&nbsp;Server is an integrated component of the Microsoft BackOffice&trade; suite of products, host data can be shared with other BackOffice applications efficiently and securely. </P></BODY></HTML>
