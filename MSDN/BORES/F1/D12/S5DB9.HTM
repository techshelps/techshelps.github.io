<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction to Bottlenecks</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">Introduction to Bottlenecks</H3><P CLASS="t">This section discusses the concept of a bottleneck. The term "bottleneck" is used in various ways by many people. The precise definition that will be used here enables you to take appropriate action if a bottleneck is a problem on your server.</P>
<H4 CLASS="h3"><A NAME="sec0"></A>What Is a Bottleneck?</H4><P CLASS="t">The <I>bottleneck</I> in a system is the service center with the highest demand. <I>Demand</I> is the number of visits to a service center multiplied by the average time taken for each visit. For example, if a workload is causing 100 disk accesses per second and the disk accesses takes 1 millisecond, then the demand for the disk is 100 milliseconds per second, or 10 percent. Following are concepts to keep in mind when analyzing bottlenecks.</P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">A <I>service center</I> is a resource in the system that tasks must wait for when the resource is servicing another task. The CPU, disks, controllers, and network are all examples of service centers. There can also be logical resources such as locks or critical sections in software. Memory is not a resource that a task waits for. If there is not enough memory, the system starts paging. Memory cannot be a bottleneck in itself. Rather, a shortage of memory can cause the disk subsystem to become a bottleneck. </LI><LI CLASS="ULI1">All bottlenecks are observed in the context of a workload. When a server is fulfilling a file-server role, its disks may be the source of the bottleneck. When the same server is acting as a domain controller, its CPU may be the bottleneck. </LI><LI CLASS="ULI1">For any combination of server and workload, there is a bottleneck. Usually the bottleneck resource is not overloaded in normal operation. When it is, a queue will build up in front of that resource and service times will climb. When this occurs, the source of the bottleneck must be relieved.</LI><LI CLASS="ULI1">There are two ways to relieve a bottleneck: You can decrease the visit rate to the resource (for example, by adding disks and spreading the load over them, thus decreasing the visit rate on each disk), or you can decrease the visit time, (for example, by installing faster disk drives on your computer). Keep in mind that one way to reduce the visit rate is to decrease the workload on the system, for example by moving some users to another server.</LI></UL></SPAN><P CLASS="t">The figure below shows a characteristic respone time curve that all multiuser server share. As the load on the server increases, usage of the bottleneck resource comes closer to saturation (100 percent utilization) more of the time. As it does, there is more queuing in front of the resource and this causes response times to increase. As the resource nears 100 percent utilization, response times grow rapidly.</P>
<P CLASS="t">A server supporting happy users is not operating with its resources very close to saturation. There is some "elbow room" for the bottleneck resource, and the system operates in the part of the response curve that is below the acceptable response time limit. When the system is operating above that line, it's time to relieve the bottleneck.</P>
<P CLASS="a"><img src="xerk_c09.gif"></P>
<H4 CLASS="h3"><A NAME="sec1"></A>What Can Be Done About Bottlenecks?</H4><P CLASS="t">When the server appears to have slow response times, you may install a faster processor without realizing that the disk subsystem is the actual bottleneck. In this case, you can improve response times somewhat because the disk is faster. However, the capacity of the system does not change; the bottleneck is the same. </P>
<P CLASS="t">The next figure illustrates what happens if you fail to identify the bottleneck correctly or if you improve the wrong resource. The capacity of the system does not change at all. At load levels approaching saturation of the bottleneck, users do not experience improved response times.</P>
<P CLASS="a"><img src="xerk_c10.gif"></P>
<P CLASS="t">The figure below illustrates what happens when the bottleneck is correctly identified and relieved. Again, this is accomplished by decreasing the number of visits to the device or decreasing the time per visit. Not only are response times improved at light loads, but the saturation point moves farther out. Users experience acceptable response times at higher load levels. When you review this figure, note that there is a new bottleneck in the system, but hopefully the capacity is high enough to provide acceptable performance. If not, the new bottleneck must be found and resolved.</P>
<P CLASS="a"><img src="xerk_c11.gif"></P>
<H4 CLASS="h3"><A NAME="sec2"></A>Impact of Memory and Cache</H4><P CLASS="t">The server's memory and L2 cache (processor cache) generally cannot become bottlenecks. This is because they are not service centers; that is, processes don't wait for these resources. If there is insufficient memory in the system, it starts paging. This increases the visit rate on the disk, and the disk becomes the bottleneck. This is commonly known as <I>disk thrashing</I>. When you investigate a disk bottleneck, you must also examine the paging rate. For a Microsoft Exchange Server computer, if the paging rate is more than 100 pages per second, consider adding memory. Although memory isn't technically the bottleneck, adding memory can solve the problem by relieving the disk.</P>
<P CLASS="t">An inadequate L2 cache can cause the processors to stall while waiting for data from main memory. Excessive cache misses can cause the system bus to become a bottleneck. This is commonly known as <I>bus thrashing</I>, and is an element to watch for, especially in multiprocessor systems. If you believe this is happening in your server, you can install the Pentium counters available in the Windows NT Resource Kit compact disc and monitor bus utilization by using the Performance Monitor.</P></BODY></HTML>
