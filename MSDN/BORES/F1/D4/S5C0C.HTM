<HTML><head><style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>

<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DELMIF.EXE: Delete-MIF File Creator</TITLE><BODY BGCOLOR="#FFFFFF">


<H3 CLASS="h2">DELMIF.EXE: Delete-MIF File Creator</H3><P CLASS="t">DELMIF deletes clients both up and down a hierarchy. DELMIF creates a delete-MIF file that deletes a client from a site database and all site databases above it. </P>
<P CLASS="t">Used in conjunction with a SQL trigger, DELMIF can be invoked automatically when a client is deleted. DELMIF can also be used to delete clients down a hierarchy by creating command files and sending them to child sites as PCMSVC jobs. </P>
<H4 CLASS="h3"><A NAME="sec0"></A>Runs On</H4><P CLASS="t">Alpha, x86 </P>
<H4 CLASS="h3"><A NAME="sec1"></A>Files Required for DELMIF </H4><P CLASS="t">DELMIF.DLL </P>
<P CLASS="t">DELMIF.EXE </P>
<H4 CLASS="h3"><A NAME="sec2"></A>DELMIF Syntax </H4><P CLASS="t"><B>delmif</B> <I>SMSID</I> [<I>output_directory</I>] </P>
<P CLASS="t"><B>delmif</B> <I>@SMSID_file</I> [<I>output_directory</I>] </P>
<P CLASS="term1"><I>SMSID</I> </P>
<P CLASS="dt1">The SMS ID of the client to delete. </P>
<P CLASS="term1"><I>SMSID_file</I> </P>
<P CLASS="dt1">A file containing several SMSIDs to be deleted, one per line. All characters after the first space on a line are ignored. </P>
<P CLASS="dt1">An easy way to create <I>SMSID_file</I> is to execute a query in the SMS Administrator (with SMS ID being the first column in the query output), highlight the machines, and paste them into a Notepad file. </P>
<P CLASS="term1"><I>output_directory</I> </P>
<P CLASS="dt1">The directory where the delete-MIF file is written. The default is the <B>LastLogonServerPath</B> and <B>ISVMIFCollectionPoint</B> from C:\SMS.INI. The output directory can be on any logon server in logon.srv\isvmif.box, or on the site server in site.srv\isvmif.box. (The site.srv directory gives a slightly faster response). Microsoft recommends specifying an output directory.</P>
<H4 CLASS="h3"><A NAME="sec3"></A>DELMIF Example </H4><P CLASS="t">The following command creates a delete-MIF file for the client with the SMS ID ABC00012: </P>
<P>delmif  ABC00012 </P>
<P></P>
<P CLASS="t">The following command creates a delete-MIF file for the client with the SMS ID ABC00345, and writes the delete-MIF file to D:\foo: </P>
<P>delmif  ABC00345 d:\foo\ </P>
<P></P>
<P CLASS="t">The following command creates a delete-MIF file for each client whose SMS ID is listed in DEL.DAT: </P>
<P>delmif  @del.dat </P>
<P></P>
<H4 CLASS="h3"><A NAME="sec4"></A>DELMIF with a SQL Trigger </H4><P CLASS="t">A SQL trigger allows you to delete clients by using either the SMS Administrator or DBCLEAN.EXE, and have delete-MIF files automatically generated. These delete-MIF files will flow up the hierarchy just like any other MIF file. (These MIF files get processed by the current site before being sent up the hierarchy, which could decrease performance on the current site server.) </P>
<P CLASS="t">To invoke DELMIF with a SQL Trigger, run the following commands from ISQL/W or a Query window in Enterprise Manager. You can copy and paste these two command groups into the SQL Query window. </P>
<P CLASS="t">It is strongly recommended that you modify the EXEC line to include an output directory (for example, <B>exec master..xp_delmif @smsid</B>, "D:\SMS\site.srv\isvmif.box\"). You must be logged in with<B> sa</B> access to create extended stored procedures. See also "Limitations." </P>
<P CLASS="t">From the Master database: </P>
<P>sp_addextendedproc 'xp_delmif', 'delmif.dll' </P>
<P></P>
<P CLASS="t">From the SMS database: </P>
<P>create trigger delmachine </P>
<P>on Machines </P>
<P>FOR DELETE </P>
<P>AS </P>
<P>DECLARE @smsid varchar(255) </P>
<P>DECLARE tIDs CURSOR FOR </P>
<P>select SMSID0 </P>
<P>from MachineDataHistoryTable m (index=dwMachineID_idx), </P>
<P>Identification_SPEC i, deleted d </P>
<P>where    i.datakey = m.SpecificKey and </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    GroupKey = 1 and </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    m.ArchitectureKey = 5 and </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;    m.dwMachineID = d.dwMachineID </P>
<P>open tIDs </P>
<P>FETCH NEXT </P>
<P>FROM tIDs </P>
<P>INTO @smsid </P>
<P>WHILE (@@fetch_status &lt;&gt; -1) </P>
<P>BEGIN </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;exec master..xp_delmif @smsid </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;FETCH NEXT </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;FROM tIDs </P>
<p>&nbsp;&nbsp;&nbsp;&nbsp;INTO @smsid </P>
<P>end </P>
<P>close tIDs </P>
<P></P>
<H4 CLASS="h3"><A NAME="sec5"></A>Limitations of Using DELMIF with a SQL Trigger SQL Server Running on a Standalone Server</H4><P CLASS="t">The SQL trigger method works best when the instance of SQL Server containing the site database is on the site server or an SMS logon server. But an instance of SQL Server containing the site database on a standalone server creates a problem. </P>
<P CLASS="t">By default, SQL Server runs under the local system account, which is a special Windows&nbsp;NT account with full administrative access to the local computer, but no network access. Therefore, where can the program write the MIF file? (On site servers and SMS logon servers, there is a directory on the local computer to which the process can write.) There are at least two possible cures: </P>
<SPAN CLASS="list"><UL><LI CLASS="ULI1">Make the computer running SQL Server an SMS logon server, or move SQL Server to an SMS logon server. </LI><LI CLASS="ULI1">Have the SQL Server service run under an account that has rights to your SMS logon servers or the site server. </LI></UL></SPAN><H4 CLASS="h3"><A NAME="sec6"></A>Performance Issue</H4><P CLASS="t">There may be a performance problem if many machines are deleted at once. </P>
<H4 CLASS="h3"><A NAME="sec7"></A>Access to DELMIF.DLL</H4><P CLASS="t">When using the SQL trigger, make sure the SQL Server process has access to DELMIF.DLL. This file should be placed either in the same directory as SQL Server, or somewhere in the path.</P></BODY></HTML>
