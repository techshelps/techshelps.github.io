<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BlockInput</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_blockinput"></a>BlockInput</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Blocks keyboard and mouse events from reaching the raw input thread, and therefore from all applications. </p>
<pre><code><b>BOOL BlockInput(
</b>  <b>BOOL</b> <i>fBlock</i>
<b>);</b>
 </code></pre>
<h4>Parmeters</h4>
<dl>
<dt>
<i>fBlock</i> </dt>
<dd>
Flag value specifying the call's purpose. If this value is TRUE, hardware input events are blocked until the function is called again by the same thread with a FALSE parameter. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns TRUE if successful or FALSE if input is already blocked. </p>
<h4>Remarks</h4>
<p>
This function will not interfere with the asynchronous keyboard input state table. This means that calls to the <b>SendInput</b> function while input is blocked will change the asynchronous keyboard input state table. </p>
<p>
There are three situations where blocked input will become unblocked: 
<ol>
<li>
The thread that blocked input unexpectedly exits without calling <b>BlockInput</b> with <i>fBlock</i> set to FALSE. In this case USER cleans up properly and re-enables input. </li>
<li>
The system displays the Close Program/Fault dialog box. This can occur if the thread faults or if the user presses <small>ctrl+alt+delete</small>. </li>
<li>
The system invokes the Hard System Error modal message box. </li>
</ol>
<p>
In all cases, USER must unblock software-blocked input. Since system-critical dialog boxes are system modal, in the latter case, the thread owning the block will not resume execution until the user closes the dialog box. </p>
<p>&nbsp;</p></body>
</HTML>
