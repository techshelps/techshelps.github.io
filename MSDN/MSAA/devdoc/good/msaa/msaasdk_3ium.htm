<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving Selected Objects and Children</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_retrieving_selected_objects_and_children"></a>Retrieving Selected Objects and Children</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
By using the <b>IAccessible::get_accSelection</b> method, you effectively ask an object to retrieve information about any of its currently selected children. This method accepts the address of a single <b>VARIANT</b> structure, which it fills to represent the number of selected objects and indicate the type of information retrieved. After calling <b>get_accSelection</b>, you can use the value in the <b>vt</b> member to determine the call's result. </p>
<p>
If one object is selected, then the application sets the <b>vt</b> member to VT_I4 or VT_DISPATCH. This value tells you whether to look for information in the form of a child ID or an <b>IDispatch</b> interface pointer, held in the <b>lVal</b> or <b>pdispVal</b> members, respectively. It is possible that the object you're working with has no children, but is selectable. In this case, <b>vt</b> will be VT_I4 and the <b>lVal</b> member will be CHILDID_SELF. </p>
<p>
If multiple objects were selected, getting information about them is a little more complex. The server that handled your <b>get_accSelection</b> call sets the <b>vt</b> member to VT_UNKNOWN and the <b>punkVal</b> member to a valid <b>IUnknown</b> interface pointer. You can call this interface's <b>QueryInterface</b> method to request an <b>IEnumVARIANT</b> interface, which you can use to enumerate the selected objects. The <b>IEnumVARIANT</b> interface provides a method for enumerating a collection of variants, including heterogeneous collections of objects and intrinsic types. It is the server's responsibility to support this interface to allow you to enumerate the selected children. This is the preferred method. </p>
<p>
Do not confuse selection with focus. Any or all objects in the system can simultaneously have selected children, but only one can have keyboard focus. For more information, see <i>Accessible Object Selection and Focus</i> and <i>Retrieving the Object with Keyboard Focus</i>. </p>
<p>&nbsp;</p></body>
</HTML>
