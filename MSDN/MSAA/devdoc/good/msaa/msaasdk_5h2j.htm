<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting a DDI Hook</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_setting_a_ddi_hook"></a>Setting a DDI Hook</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
You can set a DDI hook procedure by calling the <b>SetDDIHook</b> function. This function accepts five parameters. The first, <i>hdcHook</i>, is unused and must be set to NULL. The second parameter, <i>hModCode</i>, is a handle to the module that contains the hook procedure. This module must be a 16-bit DLL. Use the <b>GetModuleHandle</b> Win32 function to retrieve the module handle. The third parameter, <i>lPrivateData</i>, accepts a 32-bit value that will be passed to the hook procedure when an event occurs. The fourth parameter, <i>hookClass</i>, describes the type of application that the hook procedure belongs to. The last parameter, <i>lpfnDdiHook</i>, is the address of the hook procedure that Active Accessibility calls in response to DDI events. </p>
<p>
The <b>SetDDIHook</b> function returns an <b>HDDI</b> value. This value is provided to identify the event hook and acts as the handle accepted when unhooking the event hook. For more information, see <i>Unhooking a DDI Hook</i>. </p>
<p>&nbsp;</p></body>
</HTML>
