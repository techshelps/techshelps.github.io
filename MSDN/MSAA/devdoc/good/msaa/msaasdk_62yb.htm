<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inspect Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msaa_inspect_objects"></a>Inspect Objects</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The Inspect Objects (Inspect.exe) sample hooks global keystroke combinations, even when it is not the active application. The sample has several shortcut keys you can use to activate its various options. </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=26%>Key combination </th>
<th align=left width=26%>Menu command </th>
<th align=left width=48%>Action </th>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f2</small> </td>
<td width=26%>Get Properties </td>
<td width=48%>Retrieves the object properties of the object under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f3</small> </td>
<td width=26%>Do Default Actions </td>
<td width=48%>Invokes the default action of the object under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f4</small> </td>
<td width=26%>Select </td>
<td width=48%>Selects the object under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f5</small> </td>
<td width=26%>Focus </td>
<td width=48%>Sets the keyboard focus to the object under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f6</small> </td>
<td width=26%>Move to Next </td>
<td width=48%>Moves the cursor to the next object in logical order from the one under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f7</small> </td>
<td width=26%>Move to Previous </td>
<td width=48%>Moves the cursor to the previous object in logical order from the one under the cursor. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f8</small> </td>
<td width=26%>Move Left </td>
<td width=48%>Moves the cursor to the peer object to the left of the one it is over. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f9</small> </td>
<td width=26%>Move Above </td>
<td width=48%>Moves move the cursor to the peer object above the object it is over. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f10</small> </td>
<td width=26%>System Menu </td>
<td width=48%>Bring up the system menu. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f11</small> </td>
<td width=26%>Move Right </td>
<td width=48%>Moves the cursor to the peer object to the right of the one it is over. </td>
</tr>
<tr valign=top>
<td width=26%><small>ctrl+shift+f12</small> </td>
<td width=26%>Move Below </td>
<td width=48%>Moves the cursor to the peer object below the one it is over. </td>
</tr>
</table><br>
<p>
When performing object navigation, the application will produce a beep if no object is available to move to. </p>
<p>
Other options for this sample application are accessed through the sample's system menu. The Watch Focus command instructs the sample to follow the keyboard focus; the Watch Caret command tells the sample to follow the caret. When Watch Focus is on, the sample installs an asynchronous focus event hook, and moves the caret to the top left of the object with the focus. This causes Inspect to refresh its properties in about one second. </p>
<p>
Something to keep in mind, that Inspect always uses the screen location to navigate from. </p>
<p>
When using Office '97, an out-of-context procedure has better performance than an in-context procedure does. An in-context hook procedure is located in a dynamic-link library (DLL) that Active Accessibility maps into the server's address space. Similarly, an out-of-context hook procedure is located in the client's address space, whether it's in the code body or in a DLL. </p>
<p>&nbsp;</p></body>
</HTML>
