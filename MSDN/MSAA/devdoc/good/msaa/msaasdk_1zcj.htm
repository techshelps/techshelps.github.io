<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Converting Unicode and ANSI Strings</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_converting_unicode_and_ansi_strings"></a>Converting Unicode and ANSI Strings</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Active Accessibility uses Unicode strings, as defined by the BSTR data type. If your application does not use Unicode strings, or if you want to convert strings for certain API calls, use the <b>MultiByteToWideChar</b> and <b>WideCharToMultiByte</b> Win32 functions to perform necessary conversion. You can use <b>WideCharToMultiByte</b> to convert a Unicode string to an ANSI string; the <b>MultiByteToWideChar</b> function does the opposite. The Babble sample application uses the <b>WideCharToMultiByte</b> function in several places to perform Unicode to ANSI string conversion. The following application-defined function, from the Babble sources, illustrates how to properly call the function. </p>
<pre><code>DWORD GetObjectName(LPOBJINFO poiObj,LPSTR lpszBuf, int cchBuf)
{
    DWORD dwRetVal;
    BSTR  bszName;
    IAccessible* pIAcc;
    long* pl;

    bszName = NULL;

    // Get the object out of the structure.
    pl = poiObj-&gt;plObj;

    pIAcc =(IAccessible*)pl;

    // Get the object's name.
    pIAcc-&gt;get_accName(poiObj-&gt;varChild, &amp;bszName);
    
    // Did we get name string?
    if (bszName)
    {
        // Convert the string Unicode to ANSI.
        if (WideCharToMultiByte(CP_ACP, 0, 
                            bszName,
                            WC_SEPCHARS, // -1
                            lpszBuf,
                            cchBuf,
                            NULL, NULL))
        {
            SysFreeString(bszName);

            dwRetVal = NO_ERROR;
        }
        else
        {
            dwRetVal = GetLastError();
        }

        return(dwRetVal);
    }
        
    
    // Need general failure handling routine
    MessageBeep(MB_ICONEXCLAMATION);
    
    return(ERROR_INVALID_FUNCTION);
}
 </code></pre>
<p>
For more information about these string conversion functions, see their references in the Platform SDK. </p>
<p>&nbsp;</p></body>
</HTML>
