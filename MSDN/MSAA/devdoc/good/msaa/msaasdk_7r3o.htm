<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UnhookWinEvent</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_unhookwinevent"></a>UnhookWinEvent</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Removes an event hook created by a previous call to <b>SetWinEventHook</b>. </p>
<pre><code><b>BOOL WINAPI UnhookWinEvent(
</b>  <b>HWINEVENTHOOK</b> <i>hWinEventHook</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWinEventHook</i> </dt>
<dd>
Handle to the event hook that was returned in the previous call to <b>SetWinEventHook</b>. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns TRUE if successful or FALSE otherwise. </p>
<p>
Three common errors will cause this function to fail: 
<ol>
<li>
The <i>hWinEventHook</i> parameter is NULL or invalid. </li>
<li>
The event hook specified by <i>hWinEventHook</i> was already removed. </li>
<li>
<b>UnhookWinEvent</b> is called from a different thread than the original call to <b>SetWinEventHook</b> </li>
</ol>
<h4>Remarks</h4>
<p>
This function removes the event hook specified by <i>hWinEventHook</i>, preventing the accompanying callback function from receiving further notifications. Clients should call this function when event notification is no longer needed or if the client's thread is ending for any reason. </p>
<p>
Ensure that you call this function from the same thread that installed the event hook. USER will not allow threads to remove event hooks that they do not own. </p>
<p>
If WINEVENT_INCONTEXT is specified when installing this event hook, winable.h will attempt to unload the corresponding DLL from all processes that loaded it. Although unloading might not occur immediately, the callback function will not be called after <b>UnhookWinEvent</b> returns. </p>
<p>&nbsp;</p></body>
</HTML>
