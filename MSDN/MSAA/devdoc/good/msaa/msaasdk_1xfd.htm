<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Role Property</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_role_property"></a>Role Property</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>Role</b> property, retrieved by calling the <b>IAccessible::get_accRole</b> method, describes an object's role. Generally, the <b>Role</b> property describes the object's purpose in terms of its relationship with sibling or child objects. The oleacc.dll dynamic link library supports the <i>role constants</i> defined in the oleacc.h header file. These role constants are symbolic numeric values that identify common object roles. However, servers can provide strings when the standard values do not suffice. Use the <b>GetRoleText</b> method to retrieve these strings. </p>
<p>
In many cases, the object's role is obvious; windows have a role of <b>ROLE_SYSTEM_WINDOW</b> and buttons have the <b>ROLE_SYSTEM_PUSHBUTTON</b> role. However, some objects' roles aren't so easy to describe. A folder's large-icon view allows arbitrary arrangement of icons, so its role could be described as <b>ROLE_SYSTEM_GROUPING</b>. Or, a control that provides items in fixed rows and columns could be have the <b>ROLE_SYSTEM_TABLE</b> role. </p>
<p>&nbsp;</p></body>
</HTML>
