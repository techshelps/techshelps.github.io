<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AccessibleObjectFromPoint</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_accessibleobjectfrompoint"></a>AccessibleObjectFromPoint</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Retrieves the address of the <b>IAccessible</b> interface accessible object at a specified point on the screen. </p>
<pre><code><b>STDAPI AccessibleObjectFromPoint(
</b>  <b>POINT</b> <i>ptScreen</i><b>,</b>
  <b>IAccessible</b>** <i>ppacc</i><b>,</b>
  <b>VARIANT</b>* <i>pvarChild</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>ptScreen</i> </dt>
<dd>
Win32 <b>POINT</b> structure describing the point to be examined, in screen coordinates. </dd>
<dt>
<i>ppacc</i> </dt>
<dd>
Address of a variable that will contain the address of the object's <b>IAccessible</b> interface. </dd>
<dt>
<i>pvarChild</i> </dt>
<dd>
Address of a <b>VARIANT</b> structure that will contain information describing the call's result. The <b>vt</b> member is always VT_I4. If the <b>lVal</b> member is set to zero, then the <b>IAccessible</b> interface pointer at <i>ppacc</i> belongs to the child object at the specified point. Otherwise, <i>ppacc</i> is the address of the <b>IAccessible</b> interface of the child's parent object. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns S_OK if successful or a standard COM error code otherwise. </p>
<h4>Remarks</h4>
<p>
This function retrieves the lowest-level accessible object at a given point. If the child at the point is not an accessible object (that is, does not support <b>IAccessible</b>), then the function returns that child's parent. The parent is assumed to support the functionality extended by the <b>IAccessible</b> interface on the child's behalf. </p>
<p>
This function increases an object's reference count, and must have a corresponding Release. Even though an object has a reference count greater than zero, that object can still be destroyed, and clients are not guaranteed that getting properties from or calling methods on an object will succeed. This is what Word does with its objects when it shuts down: As with a standard OLE Automation object, Word will quit and CoDisconnect the object so that if anyone tries to access it cross-process after the quit, OLE will return an error. A reference count on a OLE Automation object does not affect the reference count in the application. </p>
<h4>See Also</h4>
<p>
<b>AccessibleObjectFromEvent</b>, <b>AccessibleObjectFromWindow</b>, <b>WinEventProc</b>, <i>VARIANT Structure</i> </p>
<p>&nbsp;</p></body>
</HTML>
