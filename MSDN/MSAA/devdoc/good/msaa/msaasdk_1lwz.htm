<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EVENT_OBJECT_DESTROY Notes</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msaa_event_object_destroy_notes"></a>EVENT_OBJECT_DESTROY Notes</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
In the case of window objects only, both the parent and the child send this event. The child window sends the event when it is destroyed, and the parent sends it after destruction is complete. Note that the child window is responsible for sending this event before the parent. It is assumed that all the children of an object are destroyed when the parent is destroyed. This event is also sent when an application is shutting down. </p>
<p>
Calling <b>IAccessible</b> properties at this point can cause a crash—in particular, when the call references a DLL that is unloaded first. Calling the <b>IAccessible::get_accName</b> method is a good example. It eventually calls SysAllocString, a Win32 API call. exported by oleaut32.dll. If oleaut32.dll is unloaded first, it crashes. Therefore, upon receiving the EVENT_OBJECT_DESTROY, call these properties only for visible windows. Only invisible windows are dangerous because some of them are destroyed after a majority of the system has already been destroyed. To get the name of the invisible window, try using <b>GetWindowText</b>, a Win32 API call. </p>
<p>&nbsp;</p></body>
</HTML>
