<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetDDIHook</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_setddihook"></a>SetDDIHook</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Sets a hook into the DDI stream. </p>
<pre><code><b>WINDDIAPI HDDI WINAPI SetDDIHook(
</b>  <b>HDC</b> <i>hdcHook</i><b>,</b>
  <b>HMODULE</b> <i>hModCode</i><b>,</b>
  <b>LONG</b> <i>lPrivateData</i><b>,</b>
  <b>UINT</b> <i>hookClass</i><b>,</b>
  <b>DDIHOOKPROC</b> <i>lpfnDdiHook</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdcHook</i> </dt>
<dd>
Reserved for future use. This parameter must be NULL. </dd>
<dt>
<i>hModCode</i> </dt>
<dd>
Handle to the 16-bit DLL module containing the callback function at the address specified by the <i>lpfnDdiHook</i> parameter. </dd>
<dt>
<i>lPrivateData</i> </dt>
<dd>
A 32-bit value will be passed to the callback function specified by the <i>lpfnDdiHook</i> parameter. </dd>
<dt>
<i>hookClass</i> </dt>
<dd>
DDI hook class value. This value can be one of the following: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=43%><b>DDIHOOK_FONTS</b> </td>
<td width=57%>Font enhancers. </td>
</tr>
<tr valign=top>
<td width=43%><b>DDIHOOK_MAGNIFIER</b> </td>
<td width=57%>Screen magnifiers. </td>
</tr>
<tr valign=top>
<td width=43%><b>DDIHOOK_RECORDER</b> </td>
<td width=57%>Screen readers and screen capture utilities. </td>
</tr>
<tr valign=top>
<td width=43%><b>DDIHOOK_REMOTE</b> </td>
<td width=57%>Remoting utilities. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpfnDdiHook</i> </dt>
<dd>
Address of a callback function that matches the return value and argument list of the <b>DDIHookProc</b> function declaration. The winable.h header file defines the <i>DDIHOOKPROC</i> data type for declaring variables that match this declaration. GDI calls this function when specific DDI functions have been called. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns an <b>HDDI</b> value identifying this DDI hook instance if successful, or zero otherwise. Your application should save the return value to use with the <b>UnhookDDIHook</b> function. </p>
<h4>Remarks</h4>
<p>
The hook class determines the order in which DDI callbacks are called. The actual display device is always the last called. See the winddi.h file in the INC16 directory for more information on what GDI passes to the callback function. </p>
<p>
<b>Note</b>  The callback procedure specified by the <i>lpfnDdiHook</i> parameter must be written into a 16-bit dynamic-link library (DLL). </p>
<h4>See Also</h4>
<p>
<i>Setting a DDI Hook</i>, <i>Unhooking a DDI Hook</i> </p>
<p>&nbsp;</p></body>
</HTML>
