<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MOUSEINPUT</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_mouseinput"></a>MOUSEINPUT</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Carries information about a simulated mouse event. </p>
<pre><code>typedef struct tagMOUSEINPUT {
    LONG    dx;
    LONG    dy;
    DWORD   mouseData;
    DWORD   dwFlags;
    DWORD   dwExtraInfo;
} MOUSEINPUT, FAR* LPMOUSEINPUT;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>dx</b> and <b>dy</b> </dt>
<dd>
Absolute or relative mouse movement on the x-axis and y-axis, in pixels. 
<p>
Depending on the flags specified in the <b>dwFlags</b> member of the associated <b>SendInput</b> function call, these members indicate either an absolute position or an amount of movement since the last mouse event occurred. If the MOUSEEVENTF_ABSOLUTE bit is set in the <b>dwFlags</b> member, then these are absolute positions; otherwise they are relative movement values. 
</dd>
<dt>
<b>mouseData</b> </dt>
<dd>
Value indicating mouse wheel movement. This member is valid only if the <b>dwFlags</b> member contains the MOUSEEVENTF_WHEEL value. If so, then <b>mouseData</b> specifies the amount of wheel movement. A positive value indicates that the wheel was rotated forward, away from the user; a negative value indicates that the wheel was rotated backward, toward the user. One wheel click is defined as WHEEL_DELTA, which is 120. 
<p>
If the <b>dwFlags</b> member does not contain MOUSEEVENTF_WHEEL, then you must set <b>mouseData</b> to zero. 
</dd>
<dt>
<b>dwFlags</b> </dt>
<dd>
Bitmask value that can contain a combination of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=48%>MOUSEEVENTF_ABSOLUTE </td>
<td width=52%>Specifies that the <b>dx</b> and <b>dy</b> members contain normalized absolute coordinates. If the flag is not set, the <b>dx</b> and <b>dy</b> members contain relative data: the change in position since the last reported position. This flag can be set, or not set, regardless of what kind of mouse or other pointing device, if any, is connected to the system. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_LEFTDOWN </td>
<td width=52%>Specifies that the left button was pressed. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_LEFTUP </td>
<td width=52%>Specifies that the left button was released. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_MIDDLEDOWN </td>
<td width=52%>Specifies that the middle button was pressed. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_MIDDLEUP </td>
<td width=52%>Specifies that the middle button was released. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_MOVE </td>
<td width=52%>Specifies that movement occurred. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_RIGHTDOWN </td>
<td width=52%>Specifies that the right button was pressed. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_RIGHTUP </td>
<td width=52%>Specifies that the right button was released. </td>
</tr>
<tr valign=top>
<td width=48%>MOUSEEVENTF_WHEEL </td>
<td width=52%>Windows NT only: Specifies that the wheel was moved, if the mouse has a wheel. The amount of movement is specified in <b>mouseData</b>. </td>
</tr>
</table><br>

</dd>
<dt>
<b>dwExtraInfo</b> </dt>
<dd>
A 32-bit value to be associated with the mouse event. An application can call the <b>GetMessageExtraInfo</b> Win32 function to retrieve this extra information. 
</dd>
</dl>
<h4>Remarks</h4>
<p>
This structure is contained by the <b>INPUT</b> structure and used with the <b>SendInput</b> function. </p>
<h4>See Also</h4>
<p>
<i>Simulating Input</i> </p>
<p>&nbsp;</p></body>
</HTML>
