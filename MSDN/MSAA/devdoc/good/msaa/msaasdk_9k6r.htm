<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WinEvents for Simple Elements</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_winevents_for_simple_elements"></a>WinEvents for Simple Elements</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Often, simple elements can generate events. Since these elements are not accessible objects and don't support Active Accessibility, they present a special problem for accessibility aids. Therefore, Active Accessibility places the responsibility of supporting the <b>IAccessible</b> interface on the element's parent object. With every event notification, the client application's <b>WinEventProc</b> hook procedure receives a child identifier in the <i>idChild</i> parameter, which specifies the simple element that generated the event. The accessible object that contains the element supports <b>IAccessible</b> on the child element's behalf. To access information about the child element, specify the child identifier in whatever method you call. If no child is associated with the event, <i>idChild</i> is CHILDID_SELF. For more information, see <i>Object and Child Identifiers</i>. All pertinent <b>IAccessible</b> methods accept the <i>pvarChild</i> parameter specifically for the purpose of finding child objects. </p>
<p>&nbsp;</p></body>
</HTML>
