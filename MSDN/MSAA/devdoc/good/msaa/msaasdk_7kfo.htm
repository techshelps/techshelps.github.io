<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>OACSpy Applet</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msaa_oacspy_applet"></a>OACSpy Applet</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
With the OACSpy applet (OACSpy.exe), you can verify that a 32-bit application supports Active Accessibility in Windows 95 (previously known as OleACcessibility). </p>
<p>
OACSpy verifies that an application supports <b>WM_GETOBJECT</b> and <b>NotifyWinEvent</b>. </p>
<p>
Follow these steps to use OACSpy to test selection change and notifications: 
<ol>
<li>
Run OACSpy.exe. </li>
<li>
Activate the Spy menu and choose the Selection Notification command to display the Selection Notification dialog box. </li>
<li>
OACSpy displays detailed Active Accessibility information given any keyboard, focus, selection, or other notifications that the active application generates (even those that the system creates on the application's behalf). </li>
</ol>
<p>
Follow these steps to check if an application is responding correctly to the WM_GETOBJECT message: 
<ol>
<li>
Activate the Spy menu and choose the Windows command to invoke the Windows dialog box. </li>
<li>
When the list of open windows appears, choose the one of interest to see its child windows. </li>
<li>
Any window that supports the WM_GETOBJECT message has "OAC" as its class. The second list box shows details about the window. Additionally, you can place the cursor over any object outside OACSpy, and the OAC information under the cursor will be displayed. </li>
</ol>
<p>
<b>Warning</b>  Do not use this sample to spy on event notifications while the Accevent.exe application is running and active. If both applications are active, they will log each other's events, generating events in the process. This causes an endless loop.</p>
<p>&nbsp;</p></body>
</HTML>
