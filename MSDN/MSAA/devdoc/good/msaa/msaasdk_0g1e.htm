<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Changes to USER</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_msaa_changes_to_user"></a>Changes to USER</h2>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Active Accessibility changes some core operating system components. In the case of Windows 95®, user.exe and user32.dll have been replaced with slightly modified versions to support WinEvents and other accessibility enhancements. </p>
<p>
Additionally, USER is now sensitive to screen reader applications. When USER notices that the SPI_GETSCREENREADER bit is on, it changes its behavior as follows: 
<ul>
<li>
Turns off system modal windows. This is the same as Win16 applications running under Windows NT®. Some applications might behave poorly when system modality is turned off and their window loses focus. </li>
<li>
Disables the CS_SAVEBITS window class style. This style causes the system to save as a bitmap the portion of the screen image obscured by a window. Windows uses the saved bitmap to recreate the screen image when the window is removed. Windows displays the bitmap at its original location and does not send WM_PAINT messages to windows obscured by the window if other screen actions have not invalidated the stored image. Screen readers that use an offscreen model will benefit from this behavior, because WM_PAINT messages will be sent to the underlying windows when a dialog box, menu, or other window class with the CS_SAVEBITS style is hidden or destroyed. </li>
<li>
A utility that wants to turn on the Screen Reader flag behavior should call the SystemParametersInfo() API and with the SPI_SETSCREENREADER and SPIF_SENDCHANGE parameters. Since multiple accessibility aids might be setting and resetting this flag, an aid that wants it to be turned on should also monitor its value in case it is turned off by another accessibility aid. You can monitor this flag, along with other system values, by looking for a WM_SETTINGCHANGE message in your message loop. </li>
</ul>
<p>&nbsp;</p></body>
</HTML>
