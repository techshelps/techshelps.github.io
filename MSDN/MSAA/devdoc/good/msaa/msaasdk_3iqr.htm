<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DDIHookProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_msaa_ddihookproc"></a>DDIHookProc</h3>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
Application-defined callback function called by GDI when a display device interface (DDI) function is called. This is a function prototype for conceptual presentation; actual callback functions in your code would accept the same parameters and return a DWORD value, but need not have an identical label. </p>
<pre><code><b>DWORD CALLBACK DDIHookProc(
</b>  <b>HDDI</b> <i>hddi</i><b>,</b>
  <b>LONG</b> <i>lPrivateData</i><b>,</b>
  <b>DDITYPE</b> <i>ddiType</i><b>,</b>
  <b>LPDDIPARAMS</b> <i>lpDDIStruct</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hddi</i> </dt>
<dd>
Handle to a DDI hook function. </dd>
<dt>
<i>lPrivateData</i> </dt>
<dd>
A 32-bit value associated with this callback function. You set this value in the previous call to the <b>SetDDIHook</b> function. </dd>
<dt>
<i>ddiType</i> </dt>
<dd>
DDI function type value identifying the DDI function being called. This parameter can be one of the following values. For information on the functions and structures identified by this parameter, see the Windows 95 Device Driver Kit (DDK). 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Value </th>
<th align=left width=57%>Meaning </th>
</tr>
<tr valign=top>
<td width=43%>DDI_BITBLT </td>
<td width=57%>The DDI function being called is <b>BitBlt</b> and the <i>lpDDIStruct</i> parameter specifies the address of a <b>BITBLT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_BITMAPBITS </td>
<td width=57%>The DDI function being called is <b>BitmapBits</b> and <i>lpDDIStruct</i> specifies the address of a <b>BITMAPBITS_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_COLORINFO </td>
<td width=57%>The DDI function being called is <b>ColorInfo</b> and <i>lpDDIStruct</i> specifies the address of a <b>COLORINFO_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_CONTROL </td>
<td width=57%>The DDI function being called is <b>Control</b> and <i>lpDDIStruct</i> specifies the address of a <b>CONTROL_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_CREATEDIBITMAP </td>
<td width=57%>The DDI function being called is <b>CreateDIBitmap</b> and <i>lpDDIStruct</i> specifies the address of a <b>CREATEDIBITMAP_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_DEVICEBITMAP </td>
<td width=57%>The DDI function being called is <b>DeviceBitmap</b> and <i>lpDDIStruct</i> specifies the address of a <b>DEVICEBITMAP_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_DEVICEMODE </td>
<td width=57%>The DDI function being called is <b>DeviceMode</b> and <i>lpDDIStruct</i> specifies the address of a <b>DEVICEMODE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_DIBBLT </td>
<td width=57%>The DDI function being called is <b>DeviceBitmapBits</b> and <i>lpDDIStruct</i> specifies the address of a <b>DIBBLT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_DIBTODEVICE </td>
<td width=57%>The DDI function being called is <b>SetDIBitsToDevice</b> and <i>lpDDIStruct</i> specifies the address of a <b>DIBTODEVICE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_DISABLE </td>
<td width=57%>The DDI function being called is <b>Disable</b> and <i>lpDDIStruct</i> specifies the address of a <b>DISABLE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_ENABLE </td>
<td width=57%>The DDI function being called is <b>Enable</b> and <i>lpDDIStruct</i> specifies the address of an <b>ENABLE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_ENUMDEVICEFONTS </td>
<td width=57%>The DDI function being called is <b>EnumDFonts</b> and <i>lpDDIStruct</i> specifies the address of an <b>ENUMDEVICEFONTS_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_ENUMOBJECTS </td>
<td width=57%>The DDI function being called is <b>EnumObj</b> and <i>lpDDIStruct</i> specifies the address of an <b>ENUMOBJECTS_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_EXTTEXTOUT </td>
<td width=57%>The DDI function being called is <b>ExtTextOut</b> and <i>lpDDIStruct</i> specifies the address of an <b>EXTTEXTOUT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_FASTBORDER </td>
<td width=57%>The DDI function being called is <b>FastBorder</b> and <i>lpDDIStruct</i> specifies the address of a <b>FASTBORDER_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_GETCHARWIDTH </td>
<td width=57%>The DDI function being called is <b>GetCharWidth</b> and <i>lpDDIStruct</i> specifies the address of a <b>GETCHARWIDTH_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_GETPALETTE </td>
<td width=57%>The DDI function being called is <b>GetPalette</b> and <i>lpDDIStruct</i> specifies the address of a <b>GETSETPALETTE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_GETPALETTETRANSLATE </td>
<td width=57%>The DDI function being called is <b>GetPalTrans</b> and <i>lpDDIStruct</i> specifies the address of a <b>GETSETPALETTETRANSLATE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_OUTPUT </td>
<td width=57%>The DDI function being called is <b>Output</b> and <i>lpDDIStruct</i> specifies the address of an <b>OUTPUT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_PIXEL </td>
<td width=57%>The DDI function being called is <b>Pixel</b> and <i>lpDDIStruct</i> specifies the address of a <b>PIXEL_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_REALIZEOBJECT </td>
<td width=57%>The DDI function being called is <b>RealizeObject</b> and <i>lpDDIStruct</i> specifies the address of a <b>REALIZEOBJECT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_SCANLEFTRIGHT </td>
<td width=57%>The DDI function being called is <b>ScanLR</b> and <i>lpDDIStruct</i> specifies the address of a <b>SCANLEFTRIGHT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_SELECTBITMAP </td>
<td width=57%>The DDI function being called is <b>SelectBitmap</b> and <i>lpDDIStruct</i> specifies the address of a <b>SELECTBITMAP_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_SETATTRIBUTE </td>
<td width=57%>The DDI function being called is <b>SetAttribute</b> and <i>lpDDIStruct</i> specifies the address of a <b>SETATTRIBUTE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_SETPALETTE </td>
<td width=57%>The DDI function being called is <b>SetPalette</b> and <i>lpDDIStruct</i> specifies the address of a <b>GETSETPALETTE_DDIPARAMS</b> structure </td>
</tr>
<tr valign=top>
<td width=43%>DDI_SETPALETTETRANSLATE</td>
<td width=57%>The DDI function being called is <b>SetPalTrans</b> and <i>lpDDIStruct</i> specifies the address of a <b>GETSETPALETTETRANSLATE_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_STRETCHBLT </td>
<td width=57%>The DDI function being called is <b>StretchBlt</b> and <i>lpDDIStruct</i> specifies the address of a <b>STRETCHBLT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_STRETCHDIBITS </td>
<td width=57%>The DDI function being called is <b>StretchDIBits</b> and <i>lpDDIStruct</i> specifies the address of a <b>STRETCHDIBITS_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_STRINGBLT </td>
<td width=57%>The DDI function being called is <b>StrBlt</b> and <i>lpDDIStruct</i> specifies the address of a <b>STRINGBLT_DDIPARAMS</b> structure. </td>
</tr>
<tr valign=top>
<td width=43%>DDI_UPDATECOLORS </td>
<td width=57%>The DDI function being called is <b>UpdateColors</b> and <i>lpDDIStruct</i> specifies the address of an <b>UPDATECOLORS_DDIPARAMS</b> structure. </td>
</tr>
</table><br>

</dd>
<dt>
<i>lpDDIStruct</i> </dt>
<dd>
Address of a DDI stack function structure, as defined in the winddi.h header file. This address exists within the stack; the structure is provided to allow applications to easily modify values if needed. 

<p>
<b>Note</b>  You must write this callback procedure in a 16-bit DLL. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
Returns a DWORD value specific to the DDI call being made. The <b>CallNextDDI</b> function generates this value. </p>
<p>&nbsp;</p></body>
</HTML>
