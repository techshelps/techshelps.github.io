<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>[Space]</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>[Space]</H2><P>The [space] section defines spacing rules for the topic, determining how many spaces are inserted between words. The space section contains a series of lines (separated by "\n" or "\n\r"). Each line represents a "rule" that determines if a space is used between two words (or symbols.) The parser analyzes each rule in priority from first to last.</P>
<P>Each line contains three "strings", optionally followed by some commands in curly braces. The first string indicates what text occurs to the left of the possible space, the second string indicates what characters are to the right, and the last string contains the number of spaces to insert. Note that the left string is in reverse order.</P>
<P>Each "string" is a quote, followed by a series of characters, ended by a quote, just like a C/C++ string. A backslash followed by another backslash is interpreted as just a backslash, while a backslash followed by another character is interpreted as a control sequence. A capital "A" represents any non-space character.</P>
<P>The commands on the lines can be:</P>
<P>{&lt;number&gt;} and {!&lt;number&gt;} - Indicate that the rule is to be used based upon the state of an options switch. For example, "{5}" indicates that the rule is used if switch 5 is on, while {!5} indicates the rule is only used if switch 5 is turned off.</P>
<P>{E&lt;one character in quotes} and {O&lt;one character in quotes&gt;} - Indicates that the rules is turned on if there are an even (or odd) number of the specified character in the current line. A line is denoted by a carriage-return or line-feed character. Example: {E"\""} looks for an even number of quotes in the current line.</P>
<P>Here are subset of the spacing rules used for Voice Dictation English:</P>
<P>[Space]</P>
<P>"" "." ""</P>
<P>"" "," ""</P>
<P>"" "\\" ""</P>
<P>"" ":" ""</P>
<P>"" ";" ""</P>
<P>"" "%" ""</P>
<P>"" "?" ""</P>
<P>"" "!" ""</P>
<P></P>
<P>"\" " "" ""</P>
<P>"" "\"" " " {E"\""}</P>
<P>"" "\"" ""  {O"\""}</P>
<P></P>
<P>"* " "" ""</P>
<P>"" "*" " " {E"*"}</P>
<P>"" "*" ""  {O"*"}</P>
<P></P>
<P>.\period "" "  " {1}</P>
<P>.\period "" " "  {!1}</P>
<P></P>
<P>"?" "" "  " {1}</P>
<P>"?" "" " "  {!1}</P>
<P></P>
<P>"!" "" "  " {1}</P>
<P>"!" "" " "  {!1}</P>
<P></P>
<P></P>
<P>"" "/" ""</P>
<P>"/A" "" ""</P>
<P></P>
<P>"-" "-" ""</P>
<P>"--" "" " "</P>
<P>"" "--" " "</P>
<P>"-A" "" ""</P>
<P>"" "-" ""</P>
<P></P>
<P>"(" "" ""</P>
<P>"A" ")" ""</P>
<P></P>
<P>"[" "" ""</P>
<P>"A" "]" ""</P>
<P></P>
<P>"{" "" ""</P>
<P>"A" "}" ""</P>
<P></P>
<P>"&lt;" "" ""</P>
<P>"A" "&gt;" ""</P>
<P></P>
<P>"\n" "" ""</P>
<P>"\r" "" ""</P>
<P>"\t" "" ""</P>
<P></P>
<P>"" "\n" ""</P>
<P>"" "\r" ""</P>
<P>"" "\t" ""</P>
<P></P>
<P>Since the rules are evaluated from first to last, the first rule evaluated is:</P>
<P>"" "." ""</P>
<P>The first string, containing empty quotes, means that it doesn't matter what text is to the left. The next string with just a period indicates that the rule is used if a period is to the right of the possible space insertion. The third string, empty quotes, means that no text is inserted. Hence, the first rule says, don't insert spaces if there's a period to the right of it. This causes periods to "snuggle" up to text to the left.</P>
<P>Further on down the list you see:</P>
<P>.\period "" "  " {1}</P>
<P>.\period "" " "  {!1}</P>
<P></P>
<P>"?" "" "  " {1}</P>
<P>"?" "" " " {!1}</P>
<P></P>
<P>"!" "" "  " {1}</P>
<P>"!" "" " " {!1}</P>
<P>This set of rules either places one or two spaces after sentences. If option switch 1 is TRUE then two spaces are inserted between sentences. If it's FALSE then only one space appears between sentences. The first string indicates that a sentence ends with a period, question mark, or exclamation point. The second string indicates that it doesn't matter what's to the right. The third string has one or twos space in it.</P>
<P>Another interesting set of rules is:</P>
<P>"\" " "" ""</P>
<P>"" "\"" " " {E"\""}</P>
<P>"" "\"" ""  {O"\""}</P>
<P>This pair of rules causes quotes to work. The first string indicates that a word after a quote snuggles up to the quote. The next two lines cause quotes to alternate between a word before the quote snuggling or not.  Without this rule, the phrase, "he said quote hello quote" becomes "He said " hello"". With it, "He said "hello"".</P></FONT></BODY></HTML>
