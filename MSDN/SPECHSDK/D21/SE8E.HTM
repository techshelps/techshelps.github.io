<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IVoiceDictation::Register</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IVoiceDictation::Register</H2><P></P>
<P>HRESULT Register(PCTSTR pszApplication, PCTSTR pszTopic,</P>
<P>    PISTORAGE pISessionData, PCTSTR pszSite,</P>
<P>    PVOID pNotifyInterface, IID IIDNotifyInterface,</P>
<P>    DWORD dwFlags);</P>
<P></P>
<P>Registers necessary information with the dictation object. Most functions and interfaces in the Voice Dictation object will not work until register is called. An application can only call register once per object.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>E_OUTOFMEMORY</P>
<P></P>
<P><I>pszApplication</I></P>
<P>[in] Application's name. The text string might be displayed to the end user.</P>
<P></P>
<P><I>pszTopic</I></P>
<P>[in] Topic to use for the session. If the parameter is NULL or an empty string then a general purpose topic, "General", will be used.</P>
<P></P>
<P><I>pISessionsData</I></P>
<P>[in] Interface to an IStorage that contains session data from a previous session. All of the text, results objects, and bookmarks will be loaded in from the previous session. If this is NULL the session will start out with empty text. Alternatively, an application could pass a NULL parameter and then call SessionDeserialize.</P>
<P></P>
<P><I>pszSite</I></P>
<P>[in] Site name. If this parameter is NULL or an empty string the default site, "Local PC" will be used. If a site has not been used/created before it will be filled in with default settings.</P>
<P></P>
<P><I>pNotifyInterface</I></P>
<P>[in] Pointer to the notification sink interface that will receive all of the notification messages for the dictation session.</P>
<P></P>
<P><I>IIDNotifyInterface</I></P>
<P>[in] GUID for the interface of the notification. This can be IID_IVDctNotifySinkA or IID_IVDctNotifySinkA. The application can use IID_IVDctNotifySink, which will map to either the ANSI or UNICODE version depending upon the compile flags.</P>
<P></P>
<P>dwFlags</P>
<P>[in] Flag that indicates whether the application is to receive all notifications. This parameter can be one of these values:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="161pt" VALIGN="TOP"><COL WIDTH="173pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Value</P></TD><TD VALIGN="TOP"><P>Meaning</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P>VDCTRF_ALLMESSAGES</P></TD><TD VALIGN="TOP"><P>Sends all notifications to <I>pNotifyInterface</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>VDCTRF_ALLBUTVUMETER</P></TD><TD VALIGN="TOP"><P>Sends all but VUMeter notifications to <I>pNotifyInterface</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>VDCTRF_VUMETER</P></TD><TD VALIGN="TOP"><P>Sends VUMeter notifications to <I>pNotifyInterface</I>.</P></TD></TR><TR><TD VALIGN="TOP"><P>VDCTRF_NOMESSAGES</P></TD><TD VALIGN="TOP"><P>Does not send notifications.</P></TD></TR></TBODY></TABLE>
<P><BR></P></FONT></BODY></HTML>
