<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>[Rules]</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>[Rules]</H2><P>The [rules] section contains rules for the context free grammar. Each line can be one of the following:</P>
<P>A comment, starting with two slashes, "//".</P>
<P>The definition of a rule.</P>
<P></P>
<P>A rule definition is:</P>
<P>&lt;rule name&gt; = {series of symbols}</P>
<P>The rule name can not have a space in it. It is cases insensitive. If the name is new then a new rule is created. If the name is a duplicate of another rule, then it as added as an alternative to the other rule. The main rule is &lt;Start&gt;, so every rule must be referenced directly or indirectly by &lt;Start&gt; for it to be used.</P>
<P>The symbols can be selected from the following:</P>
<P>&lt;rule name&gt; - Another rule.</P>
<P>"string" - A string that is entered into the text if the rule proves valid.</P>
<P>word - Word that must be spoken for the rule to be valid.</P>
<P>[opt] - Indicates that the next symbol is optional.</P>
<P>[1+] - Indicates that the next symbol must be repeated one or more times.</P>
<P>{&lt;number&gt;} - Requires an option switch to be TRUE in order for the rule to be valid.</P>
<P>{!&lt;number&gt;} - Requires an option switch to be FALSE in order for the rule to be valid.</P>
<P></P>
<P>Here some example rules:</P>
<P>&lt;Start&gt; = {2} &lt;Acronym&gt;</P>
<P>&lt;Start&gt; = {3} &lt;Digits&gt;</P>
<P></P>
<P>&lt;Acronym&gt; = &lt;Letter&gt; [1+] &lt;Letter&gt;</P>
<P>&lt;Letter&gt; = A. "A" &lt;PeriodAfter&gt;</P>
<P>&lt;Letter&gt; = B. "B" &lt;PeriodAfter&gt;</P>
<P>&lt;Letter&gt; = C. "C" &lt;PeriodAfter&gt;</P>
<P>&lt;Letter&gt; = D. "D" &lt;PeriodAfter&gt;</P>
<P>// etc.</P>
<P>&lt;PeriodAfter&gt; = {4} "."</P>
<P>&lt;PeriodAfter&gt; = {!4} ""</P>
<P></P>
<P>&lt;Digits&gt; = &lt;Digit&gt; [1+] &lt;Digit&gt;</P>
<P>&lt;Digit&gt; = zero "0"</P>
<P>&lt;Digit&gt; = oh "0"</P>
<P>&lt;Digit&gt; = one "1"</P>
<P>&lt;Digit&gt; = two "2"</P>
<P>// etc.</P>
<P></P>
<P>The &lt;Start&gt; rule links all of the other rules. It allows a user to speak acronyms or digits. The {2} and {3} are option switches that allow the user to turn on/off the acronym and digit inverse text normalization.</P>
<P>The acronym rule requires that the user speaks at least two letters in a row before it turns on so that if the user dictates "fred z smith" it becomes "Fred Z. Smith" and not "Fred Z Smith". The &lt;Acronym&gt; rule references the &lt;Letter&gt; rule, which contains one entry per letter.</P>
<P>&lt;Letter&gt; = B. "B" &lt;PeriodAfter&gt;</P>
<P>The "B." indicates that the user speaks that letter. The ""B"" is the text typed in. The &lt;PeriodAfter&gt; rule might insert a period if rule 4 is turned on, or nothing if it is off. If rule 4 is on, the dictated text, "F. E. I. F." becomes "F.E.I.F.", but if it's off, the dictated text becomes "FEIF".</P>
<P>Digits work in a similar manner.</P></FONT></BODY></HTML>
