<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAudio::TotalGet</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IAudio::TotalGet</H2><P></P>
<P>HRESULT TotalGet(PQWORD pqWord);</P>
<P></P>
<P>Retrieves the total number of bytes played or recorded by an audio device.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>AUDERR_NEEDWAVEFORMAT</P>
<P></P>
<P><I>pqWord</I></P>
<P>Address of a <B>QWORD</B> value that receives the total number of bytes played or recorded by the audio device. The "time stamp" is actually an index into the number of bytes played/recorded by the audio stream. The time-stamp does not necessarily start at 0. Time stamps only ever increase in value over the life of the audio object, and never decrease in value. Every byte of data that passes through the audio object increases the time stamp. When the audio is UnClaimed the time stamp will not reset to 0. It might increase if the audio object is being time-shared.</P>
<P></P>
<P>For an audio-destination object, the value returned by <B>TotalGet</B> includes unplayed bytes still in the internal buffer of an audio-destination object. An application can use this value to track notifications by calling <B>TotalGet</B> and storing the value returned before it passes in audio data to be played. This gives the application a baseline from which to calculate when the audio will be played. </P>
<P>For an audio-source object, the value returned by <B>TotalGet</B> includes the total number of bytes recorded from the audio source, but does not include data in the internal buffer of the audio-source object. This gives the application a way of determining at what time an audio recording occurred. </P>
<P>An application should not assume that the value returned by <B>TotalGet</B> changes only with the <B>IAudioDest::DataSet</B> or <B>IAudioSource::DataGet</B> member function. If the audio device is shared, the value returned by <B>TotalGet</B> includes all of the audio that flows through the device, including audio played or recorded by other applications.</P></FONT></BODY></HTML>
