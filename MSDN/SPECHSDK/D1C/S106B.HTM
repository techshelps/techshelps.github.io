<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAudioDest::BookMark</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IAudioDest::BookMark</H2><P></P>
<P>HRESULT BookMark(DWORD dwMarkID);</P>
<P></P>
<P>Attaches a bookmark to the most recent data in the audio-destination object's internal buffer.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>AUDERR_NEEDWAVEFORMAT</P>
<P></P>
<P><I>dwMarkID</I></P>
<P>[in] Unique bookmark identifier.</P>
<P></P>
<P>When the audio-destination object plays the data and encounters the bookmark, it calls the <B>IAudioDestNotifySink::BookMark</B> member function to notify the engine. The engine passes the notification to the application, allowing it to synchronize real-time events with the audio data. </P>
<P>If the audio destination is a file (which is never heard), <B>BookMark</B> returns an error.</P>
<P>If the <B>IAudio::Flush</B> member function is called or the audio-destination object is released, the object sends notifications for all bookmarks that remain in the queue with a flag indicating that they are being flushed. The engine passes the notifications to the application, allowing it to free any memory allocated for a bookmark.</P></FONT></BODY></HTML>
