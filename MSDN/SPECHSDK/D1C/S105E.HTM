<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAudio::Flush</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IAudio::Flush</H2><P></P>
<P>HRESULT Flush(void);</P>
<P></P>
<P>Clears the object's internal buffer and resets the audio device, but does not stop the playing or recording of audio data.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these values:</P>
<P>AUDERR_INVALIDHANDLE<BR>AUDERR_NEEDWAVEFORMAT<BR>AUDERR_WAVEDEVICEBUSY</P>
<P></P>
<P><B>Flush</B> calls the <B>waveOutReset</B> multimedia function for a wave-out device or the <B>waveInReset</B> multimedia function for a wave-in device. </P>
<P>For an audio-destination object, calling <B>Flush</B> automatically stops the audio output because it empties the internal buffer of audio data to be played. However, if audio was playing before <B>Flush</B> was called (and unless the <B>IAudio::Stop</B> member function is called), the audio begins playing again as soon as the internal buffer contains more audio data.</P>
<P>For an audio-source object, calling <B>Flush</B> automatically stops recording audio data. As for an audio-destination object, if recording was in process before <B>Flush</B> was called (and unless <B>Stop</B> is called), recording will resume as soon as more audio data is received. </P></FONT></BODY></HTML>
