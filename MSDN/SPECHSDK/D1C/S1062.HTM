<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAudio::PosnGet</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IAudio::PosnGet</H2><P></P>
<P>HRESULT PosnGet(QWORD *pqwTimeStamp);</P>
<P></P>
<P>Retrieves the exact byte in the audio stream that is currently being played or recorded (or as exact as possible given the audio device).</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>AUDERR_NEEDWAVEFORMAT</P>
<P></P>
<P><I>pqwTimeStamp</I></P>
<P>Address of the byte in the audio stream that is currently being played or recorded. The "time stamp" is actually an index into the number of bytes played/recorded by the audio stream. The time-stamp does not necessarily start at 0. Time stamps only ever increase in value over the life of the audio object, and never decrease in value. Every byte of data that passes through the audio object increases the time stamp. When the audio is UnClaimed the time stamp will not reset to 0. It might increase if the audio object is being time-shared.</P>
<P></P>
<P>The <B>PosnGet</B> function works only for real-time audio destinations, such as audio speakers, or real-time audio sources, such as microphones. It does not work for non-real-time destinations or sources, such as files.</P>
<P>An application can use <B>PosnGet</B> to synchronize actions with events. For example, if an action should occur at a certain interval after a particular byte is played, the application can call <B>PosnGet</B> to get the time that byte was played, add the interval to the time, and synchronize the action with the result.</P></FONT></BODY></HTML>
