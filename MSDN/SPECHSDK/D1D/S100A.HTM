<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SRWORD</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>SRWORD</H2><P></P>
<P>typedef struct {  // srw<BR>    DWORD  dwSize;<BR>    DWORD  dwWordNum;<BR>    TCHAR  szWord[ ];<BR>} SRWORD, *PSRWORD;</P>
<P></P>
<P>Identifies a unique word for a grammar's vocabulary.</P>
<P><B>dwSize</B></P>
<P>Size of <B>SRWORD</B> plus the size of <B>szWord</B> (string) rounded up to the nearest multiple of four. The<B> dwSize </B>member must be DWORD-aligned to work on processors that require alignment, such as MIPS&reg; and Alpha APX&trade;.</P>
<P></P>
<P><B>dwWordNum</B></P>
<P>Unique word identifier specific to this grammar. The same string can have a different word identifier in different grammars or in the same grammar if the word participates in the grammar in different ways. For example, the noun "project" and the verb "project" each would have a unique word identifier within the same grammar. </P>
<P>The application always specifies the word identifier when it loads a grammar. The application cannot specify a word identifier of zero because the grammar also uses a word identifier to notify the application when the corresponding word is spoken, and zero is reserved for situations when the word identifier is unknown.</P>
<P><B>szWord</B></P>
<P>Null-terminated string of variable size containing alphabetic characters and intra-word punctuation. The null at the end of the string is sufficient to indicate the end of the string.</P>
<P>In most European languages, <B>szWord</B> is a string such as "hello" or "car." The text should not contain pronounced symbols. For example "345" is not a valid word string. The text also should not have ambiguous pronunciation. For example, instead of the string "IEEE," use three words: "I" "triple" "E".</P>
<P>Certain languages such as Japanese use two character: a phonemic set and a symbolic set. The phonemic character set should be passed in <B>szWord</B>. If an application is trying to associate the symbolic representation of the word, it should use <B>dwWordNum</B> to point to the symbolic word.</P>
<P>In some languages the pronunciation cannot be deduced easily from the symbols that represent the word. In these languages, the phonetic character set appears first, followed by a backslash, followed by the commonly displayed character set. The engine should use the text before the backslash to determine the pronunciation of the word. For example, the Japanese names <I>Honcho</I> and <I>Motomachi</I> are pronounced differently but "spelled" with the same kanji characters.</P></FONT></BODY></HTML>
