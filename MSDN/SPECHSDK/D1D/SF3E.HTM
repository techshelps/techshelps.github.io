<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lists in a Context-Free Grammar</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Lists in a Context-Free Grammar</H3><P>A statically generated grammar is often not enough for complete recognition because it refers to lists of words that change dynamically, such as filenames. For example, a grammar might need a syntax such as "Open Filename"or "Send mail to Name." In these examples, Filename and Name might change continually, depending on the context in which they are used. The context-free grammar architecture supports this syntax through <I>lists</I>, which are sets of words that are dynamically set and that can be arbitrarily changed by the application.</P>
<P>To use a list in a context-free grammar, the list must be referenced by rules in the grammar, and the list's name must be specified in the <B>SRCFGLIST</B> section of the grammar's binary format. When the application first loads the grammar with the <B>ISRCentral::GrammarLoad </B>member function, all of the grammar's lists start out empty.</P>
<P>To specify the words for a list, the application calls the <B>ISRGramCFG::ListSet</B> member function and passes a list of <B>SRWORD</B> structures, each structure identifying a word or series of words that can be spoken. This effectively adds the words to the grammar, although it may result in slower performance because the words are not compiled and optimized as is the rest of the grammar. If the application sets the list while the engine is already processing a recognition, the changes may not take effect until processing is completed. </P>
<P>In addition to setting a list, engines typically support other member functions that allow an application to manipulate a list. The <B>ListAppend</B> member function appends new words to a list, <B>ListRemove</B> deletes words from a list, and <B>ListQuery</B> finds out whether a list has any words. An application can use the <B>ListGet</B> member function to retrieve the words from a list, and <B>ListSet</B> to fill an empty list field in a grammar or to replace an existing list. </P></FONT></BODY></HTML>
