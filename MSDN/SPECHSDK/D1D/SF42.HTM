<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Archiving and Releasing a Grammar</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Archiving and Releasing a Grammar</H3><P>When an application is shutting down or is finished using a grammar, the application must release the grammar object (along with the engine object and all results objects) in order for the engine to free itself. The application releases a grammar object using the standard OLE COM mechanism of releasing all of the interfaces to the object.</P>
<P>Before the application releases a grammar object, however, it should call the <B>ISRGramCommon::Archive </B>member function. This copies the following information into memory:</P>
<P> <FONT FACE="Symbol">·</FONT>    The internal representation of the grammar format. This allows the <B>ISRCentral::GrammarLoad</B> member function to proceed much faster the next time the grammar is used.</P>
<P> <FONT FACE="Symbol">·</FONT>    Information about how the speaker uses the grammar. This might be the frequency of specific paths or words being used. Often this information is user-specific. This information improves recognition accuracy and speed the next time that the grammar is used.</P>
<P> <FONT FACE="Symbol">·</FONT>    Results objects. The application can specify that data stored in all of the results objects be archived and retrieved the next time that the grammar is loaded.</P>
<P></P>
<P>The application can store the archive information anywhere, such as in a document file. The next time the application needs to use the grammar, it loads the information from the file into memory and calls the <B>ISRCentral::GrammarLoad</B> member function with the format SRGRMFMT_CFGNATIVE rather than SRGRMFMT_CFG (because the archived grammar is in the engine's native format). The grammar loads more quickly, and any information that the engine learned about the grammar in the last session is retained. Note that the new data format is engine-specific, so the application should maintain the grammar in standard CFG format in case the user changes speech-recognition engines in the application.</P>
<P>If the application archived results objects along with the grammar, the <B>ISRGramNotifySink::UnArchive</B> member function is called for each results object that was archived. This gives the application a chance to instantiate the archived data back into results objects and continue using them in the same state they were in before the <B>Archive</B> member function was called.</P></FONT></BODY></HTML>
