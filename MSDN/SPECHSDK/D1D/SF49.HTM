<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Taking Advantage of Results Objects</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Taking Advantage of Results Objects</H3><P>To take full advantage of an engine's capabilities, an application should maintain the speech-recognition results objects returned by the <B>ISRGramNotifySink::PhraseFinish</B> or <B>ISRGramNotifySink::PhraseHypothesis</B> member functions and keep track of which results object produced which text. After this is accomplished, the application can use the results objects in a number of ways.</P>
<P>If the user highlights a word or set of words, an application can call the <B>ISRResModifyGUI::Show</B> and <B>ISRResModifyGUI::Move</B> member functions to display the engine's results-object modification window below the selected text. Depending on the engine, this window may allow the user to choose from different selections or take advantage of other engine features not necessarily accessible through the speech functions. If the user highlights only part of a result or highlights text from several results objects, the application can use member functions in the <B>ISRResMerge</B> interface to combine or divide the results objects. Some engines may not supply the <B>ISRResModifyGUI </B>interface.</P>
<P>Through a context menu on a word or phrase, an application might play an audio recording of what the user actually said to dictate the word or phrase. The applications can acquire the audio through the <B>ISRResAudio</B> interface.</P>
<P>Through a context menu on a word or phrase, an application might show the alternative recognition possibilities for the word or phrase and allow the user to choose one of the alternatives. The application can acquire a list of alternatives through either the <B>ISRResBasic</B> or <B>ISRResGraph </B>interface. For example, if the user says "pine" but the engine recognizes "line," the application would show all the alternatives, which might include "pine," "fine," and "mine."</P>
<P>If a user modifies or dictates the text of a results object again, the application should call the <B>ISRResCorrection::Correction</B> member function to inform the engine of the change. This allows a speech-recognition engine to adjust future recognitions to avoid repeating the same mistakes. If the user does not modify the text in a results object for some time, then the application should call the <B>ISRResCorrection::Validate</B> member function to inform the engine that the dictated text was probably correct.</P>
<P>An engine may reevaluate its recognition results during idle CPU time after having learned more about the document being dictated. If an engine does reevaluate a results object, it calls the <B>ISRGramNotifySink::ReEvaluate</B> member function to inform the application of the change.</P>
<P>Because storing multiple results objects consumes a lot of memory, an application may release them after the user moves on to the next sentence or paragraph. Some applications may encourage the user to do a two-pass dictation where they dictate in one pass and correct in the second. In such a case the application needs to keep all of the results objects, but it may reduce its memory requirements by calling member functions of the <B>ISRResMemory</B> interface.</P>
<P>Finally, if the user is finished working on the document for the day and saves it, the application can save the results objects along with the text by calling the <B>ISRGramCommon::Archive </B>member function, and it can reload the archived results objects into memory when the <B>ISRCentral::GrammarLoad</B> member function is called.</P></FONT></BODY></HTML>
