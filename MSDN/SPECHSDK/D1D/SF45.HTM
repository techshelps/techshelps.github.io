<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Speech-Recognition Sharing Object</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Speech-Recognition Sharing Object</H2><P>When deciding upon a speech-recognition engine to use, an application should use the speech-recognition sharing object to find a suitable engine that is already in use on the desired wave-in audio device. If the sharing object cannot find such an engine, the application should use the sharing object to create a new instance of the engine that can be shared, in case another application wishes to share recognition with the application. Although an application can use a private instance of the engine without going through the sharing object, doing so prevents other applications from using the same instance and consumes more CPU time and memory. The speech-recognition sharing object is supplied by Microsoft. </P>
<P>An application can use a speech-recognition sharing object to accomplish the following:</P>
<P> <FONT FACE="Symbol">·</FONT>    Share an engine and audio source with other applications, or with voice commands within the same application. </P>
<P> <FONT FACE="Symbol">·</FONT>    Provide dictation services and command and control at the same time, if the engine supports both of these capabilities. </P>
<P></P>
<P>To create a speech-recognition sharing object, call the <B>CoCreateInstance</B> function with the CLSID_SRShare class identifier and an IID_IEnumSRShare interface identifier. The function returns the address of an <B>IEnumSRShare</B> interface on the newly created speech-recognition sharing object.</P>
<P>To enumerate the existing shared engine/audio-source pairs, an application uses the <B>Clone</B>, <B>Next</B>, <B>Reset</B>, and <B>Skip</B> member functions of the <B>IEnumSRShare</B> interface. These functions use the <B>SRSHARE</B> structure as the element in the enumeration sequence. If the <B>Next</B> member function finds a shared pair, it copies information about the pair into the <B>SRSHARE</B> structure. The application examines the structure to determine if the pair is suitable for its needs. If it is, the application can use the pair by calling the <B>IEnumSRShare::Share</B> member function, specifying the instance identifier of the desired pair.</P>
<P>If the enumeration process finds no suitable pairs, the application can use the <B>New</B> member function to create a new pair that can be shared with other applications. When calling <B>New</B>, the application specifies the GUID of a speech-recognition mode and the device identifier of an audio source that is not currently in use.</P>
<P>Both <B>Share</B> and <B>New</B> return the address of the <B>ISRCentral</B> interface on the engine of the pair. After obtaining this interface, the application interacts with the engine as though it had connected directly with it. The application should then hold the speech-recognition sharing object, until it does not need that engine. At that time, it needs to Detach from the sharing object. Then it can either release the sharing object or reuse it to start another engine.</P>
<P>When a speech-recognition sharing object is used to share an audio source among several engines, the object provides exclusive rights to the source to one engine at a time on a first-come, first-served basis. An engine requests the audio source by calling the <B>IAudio::Claim</B> or <B>IAudio::Start</B> member function. If more than one engine at a time requests the audio source, the first engine to claim the audio source is awarded exclusive use of it until that engine calls the <B>IAudio::UnClaim</B> or <B>IAudio::Stop </B>member function.</P>
<P>When an application is finished using a shared engine/audio-source pair, it must call the <B>Detach</B> member function to release the pair. </P>
<P>The speech-recognition sharing object has limitations that an application developer should consider:</P>
<P> <FONT FACE="Symbol">·</FONT>    The object must be in a separate application, which requires marshaling and therefore is slower than a direct connection to a dynamic-link library (DLL).</P>
<P> <FONT FACE="Symbol">·</FONT>    Any application can influence the recognition accuracy, confidence, and other speech-recognition attributes for a shared engine, which affects all applications sharing that engine. </P>
<P></P></FONT></BODY></HTML>
