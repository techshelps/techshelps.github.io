<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Engine Selection</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Engine Selection</H3><P>After an application has identified a speech-recognition mode, it calls the <B>Select</B> member function to select the mode and create an engine object to represent that mode in the application. Both the <B>ISRFind</B> and <B>ISREnum</B> interfaces include the <B>Select</B> member function, and the syntax is the same for both. </P>
<P>When calling <B>Select</B>, the application specifies a globally unique identifier (GUID) that identifies the mode to use, the address of a variable that receives the address of the <B>ISRCentral</B> interface on the engine object, and the address of the <B>IUnknown</B> interface on the audio-source object created earlier (see "Introduction" earlier in this section).</P>
<P>When the <B>Select</B> member function is called, it ultimately creates an engine object. However, as the engine object initializes, it calls the <B>IAudio</B> interface on the audio-source object to determine whether or not the engine can use that audio source. If so, the engine object calls the <B>IAudio::PassNotify </B>member function, specifying the address of an <B>IAudioSourceNotifySink</B> interface so the audio-source object can notify the engine of events that pertain to incoming audio. If the engine cannot use the specified audio source, the <B>ISREnum::Select</B> member function returns an error and the engine object releases itself.</P>
<P>If successful, the <B>Select</B> member function returns the address of the <B>ISRCentral</B> interface on the newly created engine object. The <B>ISRCentral</B> interface provides centralized control of a speech-recognition engine, including loading a grammar, pausing and resuming the engine, getting information about the engine or the speech being received, and registering a notification sink. The engine uses the notification sink to notify the application of speech-related events.</P>
<P>The <B>ISRCentral</B> interface has the following member functions:</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="84pt" VALIGN="TOP"><COL WIDTH="263pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Member function</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>GrammarLoad</B></P></TD><TD VALIGN="TOP"><P>Loads a grammar and returns a grammar object.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>ModeGet</B></P></TD><TD VALIGN="TOP"><P>Retrieves information about the current speech-recognition mode.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Pause</B></P></TD><TD VALIGN="TOP"><P>Pauses the speech-recognition engine.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>PosnGet</B></P></TD><TD VALIGN="TOP"><P>Retrieves the exact byte in the audio stream that the engine is currently receiving.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Register</B></P></TD><TD VALIGN="TOP"><P>Registers an <B>ISRNotifySink</B> interface with the engine, which uses the interface to pass status information to an application.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>Resume</B></P></TD><TD VALIGN="TOP"><P>Resumes the speech-recognition engine.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>ToFileTime</B></P></TD><TD VALIGN="TOP"><P>Converts a <B>QWORD</B> variable to a Win32 <B>FILETIME</B> structure.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>UnRegister</B></P></TD><TD VALIGN="TOP"><P>Releases the <B>ISRNotifySink</B> interface that an engine used to pass status information to an application.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P></P>
<P>After obtaining the address of the <B>ISRCentral</B> interface on the engine object, the speech-recognition enumerator is no longer needed and the application should release it by calling the <B>ISRFind::Release</B> or <B>ISREnum::Release</B> member function. The application does not need to release the audio-source object because the engine automatically releases it when the engine object is released.</P></FONT></BODY></HTML>
