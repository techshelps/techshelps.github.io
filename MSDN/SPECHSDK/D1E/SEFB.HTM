<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ITTSCentral::Register</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>ITTSCentral::Register</H2><P></P>
<P>HRESULT Register(PVOID pNotifyInterface, IID IIDNotifyInterface,<BR>    DWORD *pdwKey);</P>
<P></P>
<P>Registers an <B>ITTSNotifySink</B> interface for the engine to use to notify the application of buffer-independent text-to-speech events.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>&lt;E_INVALIDARG&gt;<BR>&lt;E_OUTOFMEMORY&gt;<BR>&lt;TTSERR_INVALIDINTERFACE&gt;</P>
<P></P>
<P><I>pNotifyInterface</I></P>
<P>[in] Address of the notification interface through which the engine notifies the application about buffer-independent text-to-speech information. The interface identifier is specified by <I>IIDNotifyInterface.</I></P>
<P>Because passing the address to the engine does not transfer ownership of the notification interface, the engine must call the <B>AddRef</B> member function of the notification interface before returning from the call to <B>Register</B>. The engine must also call the <B>Release</B> member function of the notification interface when the <B>ITTSCentral::UnRegister</B> member function is called for the given key. The calling application must release any reference counts it holds on the notification interface after calling <B>Register</B>, unless it needs the notification object to be valid after calling <B>UnRegister</B>.</P>
<P></P>
<P><I>IIDNotifyInterface</I></P>
<P>[in] Interface identifier of the interface used for notification. In the current implementation, the identifier must be IID_ITTSNotifySinkA (for ANSI) or IID_ITTSNotifySinkW (for Unicode). An engine can define additional values to support custom interfaces. An application can use the IID_ITTSNotifySink identifier to get ANSI or Unicode, depending on the default for the application. </P>
<P></P>
<P><I>pdwKey</I></P>
<P>[out] Address of a variable that receives a key for the notification interface. The application must supply this key with the <B>UnRegister</B> member function to release the interface.</P>
<P></P>
<P>An application can call <B>Register</B> multiple times. The member function returns a different key each time it is called.</P>
<P>An application can use IID_ITTSNotifySink to get ANSI or Unicode, depending on the default for the application. For more information about ANSI and Unicode versions of interfaces and structures, see the section, "Common Elements of the Speech Application Programming Interface."</P></FONT></BODY></HTML>
