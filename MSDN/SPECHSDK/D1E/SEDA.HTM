<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Created by</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Created by</H3><P>To create an engine object, you first use a text-to-speech enumerator to locate the mode to use and then call the <B>ITTSEnum::Select</B> member function with the GUID of the mode and the address of the <B>IUnknown</B> interface of an audio-destination object.</P>
<P>As the engine object initializes, it calls the <B>IAudio</B> interface on the audio-destination object to determine whether or not it can use that audio destination. If it can use it, the engine object calls the <B>IAudio::PassNotify</B> member function with an <B>IAudioDestNotifySink</B> notification interface, so the audio-destination object can notify the engine when audio data is played. If the engine cannot use the specified audio destination, the <B>Select</B> member function returns an error and the engine object releases itself.</P>
<P>If <B>Select</B> is successful, it returns the address of the <B>ITTSCentral</B> interface on the newly created engine object.</P></FONT></BODY></HTML>
