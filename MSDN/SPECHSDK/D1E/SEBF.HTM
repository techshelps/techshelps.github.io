<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Engine Selection</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Engine Selection</H3><P>After an application has identified an acceptable text-to-speech mode, it calls the <B>Select</B> member function to select the mode and create an engine object to represent the mode in the application. Both the <B>ITTSFind</B> and <B>ITTSEnum</B> interfaces include the <B>Select</B> member function, and the syntax is the same for both. </P>
<P>When calling <B>Select</B>, the application specifies a globally unique identifier (GUID) that uniquely identifies the mode to use, the address of a variable that receives the address of the <B>ITTSCentral</B> interface on the engine object, and the address of the <B>IUnknown</B> interface on the audio-destination object created earlier (for more information, see "Audio-Destination Object" earlier in this section).</P>
<P>When <B>Select</B> is called, it ultimately creates an engine object. However, as the engine object initializes, it first attempts to communicate with the audio-destination object to see if they share an acceptable format for digital audio. If they do, the engine finishes initializing and <B>Select</B> returns the address of the <B>ITTSCentral</B> interface on the engine object. If they do not, the engine object frees itself and <B>Select</B> returns an error.</P>
<P>If <B>Select</B> is successful, it returns the address of the <B>ITTSCentral</B> interface on the newly created engine object. After obtaining the address of the <B>ITTSCentral</B> interface on the engine object, the text-to-speech enumerator is no longer needed and the application should release it by using the <B>ITTSFind::Release</B> or <B>ITTSEnum::Release</B> member function.</P>
<P>The <B>ITTSCentral</B> interface provides centralized control of a text-to-speech engine, such as sending text to the engine, injecting speech-inflection tags (control tags) into text as it is played, controlling the playing of the audio output, registering or releasing a notification interface, and so on. The engine uses the notification interface to notify the application of speech-related events. For more information about the notification interface, see "Engine Notifications" later in this section.</P>
<P>The <B>ITTSCentral::ModeGet</B> member function fills a <B>TTSMODEINFO</B> structure with information about the current text-to-speech mode. </P>
<P>The <B>ITTSCentral::Phoneme</B> member function converts text to its phonemic representation, which is the intermediate stage between Unicode text and digital-audio data. An application can use <B>Phoneme</B> to adjust the phonetic representation of text, before it is spoken by the engine, to correct mispronounced words.</P>
<P>An application can use the <B>ITTSCentral::PosnGet</B> member function to retrieve the exact byte in the audio stream that is currently being played, and then use this information to synchronize actions with events. For example, if an action should occur a certain interval after a particular byte is played, the application can call <B>PosnGet</B> to get the time that byte was played, add the interval to the time, and synchronize the action with the result.</P>
<P>The <B>ITTSCentral::AudioPause</B> member function pauses the engine so it does not play any more audio until the application calls the <B>ITTSCentral</B> interface's <B>AudioResume</B> or <B>AudioReset </B>member function, which stops all speech, releases all pending text buffers, and empties the text-to-speech engine's speaking queue. </P>
<P>The <B>ITTSCentral</B> interface includes several other member functions, which are described in subsequent sections of this section.</P></FONT></BODY></HTML>
