<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Word Separation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Word Separation</H3><P>Speech-recognition engines typically require one of the following types of verbal input to detect words:</P>
<P> <FONT FACE="Symbol">·</FONT>    <B>Discrete speech</B>.  Every word must be isolated by a pause before and after the word — usually about a quarter of a second — for the engine to recognize it. Discrete speech recognition requires much less processing than word-spotting or continuous speech, but it is less user-friendly.</P>
<P> <FONT FACE="Symbol">·</FONT>    <B>Word-spotting</B>.  A series of words may be spoken in a continuous utterance, but the engine recognizes only one word or phrase. For example, if a word-spotting engine listens for the word "time" and the user says "Tell me the time" or "Time to go," the engine recognizes only the word "time."</P>
<P>Word-spotting is used when a limited number of commands or answers are expected from the user and the way that the user speaks the commands is either unpredictable or unimportant.</P>
<P>Continuous speech recognizers can also be used to do word-spotting.</P>
<P> <FONT FACE="Symbol">·</FONT>    <B>Continuous speech</B>.  The engine encounters a continuous utterance with no pauses between words, but it can recognize the words that were spoken. </P>
<P>Continuous speech recognition is the best technology from a usability standpoint, because it is the most natural speaking style for human beings. However, it is the most computationally intensive because identifying the beginning and ending of words is very difficult — much like reading printed text without spaces or punctuation.</P></FONT></BODY></HTML>
