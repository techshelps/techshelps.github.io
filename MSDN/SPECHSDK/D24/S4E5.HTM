<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Speech Application Programming Interface</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H1>Speech Application Programming Interface</H1><P>The Microsoft Speech Application Programming Interface (API) uses the OLE Component Object Model (COM) architecture under Win32&reg; (Windows&reg; 95 and Windows NT&reg; 3.51). The component objects can be accessed through C/C++ or Visual Basic's &reg; OLE Automation. The speech architecture is divided into two levels, a high level that is designed for ease and speed of implementation, and a low level that allows applications complete control of the technology.</P>
<P>This article briefly describes how to add simple speech recognition and text-to-speech to an application using C++ and the architecture involved. We begin with the high-level interfaces, known as Voice Commands and Voice Text.</P></FONT></BODY></HTML>
