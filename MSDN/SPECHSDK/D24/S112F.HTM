<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Matching Techniques</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Matching Techniques</H3><P>Speech-recognition engines match a detected word to a known word using one of these techniques:</P>
<P> <FONT FACE="Symbol">·</FONT>    <B>Whole-word matching</B>.  The engine compares the incoming digital-audio signal against a prerecorded template of the word. This technique takes much less processing than subword matching, but it requires that the user (or someone) prerecord every word that will be recognized — sometimes several hundred thousand words. Whole-word templates also require large amounts of storage (between 50 and 512 bytes per word) and are practical only if the recognition vocabulary is known when the application is developed.</P>
<P> <FONT FACE="Symbol">·</FONT>    <B>Subword matching</B>.  The engine looks for subwords — usually phonemes — and then performs further pattern recognition on those. This technique takes more processing than whole-word matching, but it requires much less storage (between 5 and 20 bytes per word). In addition, the pronunciation of the word can be guessed from English text without requiring the user to speak the word beforehand.</P></FONT></BODY></HTML>
