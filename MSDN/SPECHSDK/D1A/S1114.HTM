<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a DSP to Process Information</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Using a DSP to Process Information</H3><P>Microsoft highly recommends that an engine be capable of speaking text without requiring any assisted hardware, but be capable of taking advantage of such hardware if it is present to reduce the engine's processing requirements or to increase playback accuracy.</P>
<P>A text-to-speech engine can use a DSP in any of the following ways, singly or in combination:</P>
<P>    1.    The DSP board has a wave-out driver written for it, supporting a custom waveform-audio format that represents the normal output to the DSP (filter coefficients and pitch information, for example). All engines have a "dialog" with the <B>IAudio::WaveFormatSet</B> member function when they start up, usually going through different PCM types, such as different sampling rates and bits per sample. The engine could also query to see if the waveform-audio device supports the "custom" format (such as filter coefficients) and use that data format if the device supports it. This may not provide enough of a communication path between the DSP and engine, and it requires that the wave-out driver be written by the engine vendor.</P>
<P>    2.    The DSP board has a wave-out driver written for it. The engine can query the <B>IAudioMultiMediaDevice::DeviceNumGet</B> member function to determine the waveform-audio device to which it is connected. If the device number of that waveform-audio device is known to be a friendly DSP board, the engine can start a conversation with the DSP directly, or go through the wave-out custom messages. The disadvantage of this is that it requires the wave-out driver be written by the engine vendor.</P>
<P>    3.    The DSP board provides a function that takes in filter-coefficient and pitch data (for example) and asynchronously outputs PCM data. The disadvantage of this is that a lot of data passes back-and-forth across the bus, but it allows the DSP to be used independent of the destination of the audio.</P>
<P>    4.    You provide a custom audio-destination object that communicates directly with the PC. This allows maximum flexibility, but it prevents the engine from being used by applications not specifically written for the engine.</P>
<P></P></FONT></BODY></HTML>
