<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Levels and Error Values</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Object Levels and Error Values</H2><P>The speech OLE objects are implemented on three different levels. The audio source and destination objects occupy the lowest level, the speech-recognition and text-to-speech objects occupy the middle level, and the voice-command and voice-text objects occupy the top level. </P>
<P>In this manual, the reference information provided for each member function in the speech API includes a list of error values that the function can return if it fails. In addition to these values, the member functions supported by the higher level objects can return error values that were actually generated by a lower level component. For example, an audio-source object can generate error values that can be passed to a speech-recognition object, and then to a voice-command object. This passing of error values applies to all functions in the speech API except for those provided by the audio object, which is the lowest level of the API.</P>
<P>Because speech components are local servers instead of in-process servers, it is possible for a speech function to return an error value that does not map to any of the hexadecimal error values that appear in the header files. This is because a system component has mapped the error value to an HRESULT by using the <B>HRESULT_FROM_WIN32</B> macro. </P>
<P>If a speech function returns an error value that does not seem to be in the OLE range, you should strip off the bits added by the <B>HRESULT_FROM_WIN32</B> macro, convert the error value to decimal, and then check for a non-OLE error value that matches the returned error value. </P></FONT></BODY></HTML>
