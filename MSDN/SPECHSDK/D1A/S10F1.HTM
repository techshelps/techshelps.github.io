<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Maintaining a Database of Compiled Grammars</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Maintaining a Database of Compiled Grammars</H3><P>The speech API was written with the assumption that applications, rather than the engine, will store compiled grammars for the following reasons:</P>
<P> <FONT FACE="Symbol">·</FONT>    The application can determine when the compiled grammars are no longer needed and can free them.</P>
<P> <FONT FACE="Symbol">·</FONT>    The engine doesn't need to store a database.</P>
<P> <FONT FACE="Symbol">·</FONT>    The compiled grammar can be transferred to another machine.</P>
<P></P>
<P>It may be preferable for some engines to store compiled grammars, especially if they include user-specific information in the grammar. To store compiled grammars, the engine can maintain a database of grammars. Instead of filling in the native grammar with a representation of the grammar, it can store a handle to the grammar. </P>
<P>When the application eventually passes back the handle of the native grammar, the engine uses the handle to access its database. This handle should be robust enough to be transferred to another machine and recognized as foreign by the engine on the other machine. In addition, the engine should be able to determine whether the handle was deleted because the engine's database was too large.</P></FONT></BODY></HTML>
