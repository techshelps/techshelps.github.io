<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ILexPronounce::Get</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>ILexPronounce::Get</H3><P></P>
<P>HRESULT Get(VOICECHARSET CharSet, TCHAR *pszText, WORD wSense, <BR>    TCHAR *pszPronounce, DWORD dwPronounceSize, <BR>    DWORD *pdwPronounceNeeded, VOICEPARTOFSPEECH *pPartOfSpeech, <BR>    PVOID pEngineInfo, DWORD dwEngineInfoSize, <BR>    DWORD *pdwEngineInfoNeeded);</P>
<P></P>
<P>Retrieves the pronunciation, part of speech, and optional engine information of the given word from the lexicon.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>E_OUTOFMEMORY<BR>LEXERR_ENGBUFTOOSMALL<BR>LEXERR_INVALIDSENSE<BR>LEXERR_INVALIDTEXTCHAR<BR>LEXERR_PRNBUFTOOSMALL</P>
<P></P>
<P><I>CharSet</I></P>
<P>[in] Character set to use for the pronunciation.</P>
<P></P>
<P><I>pszText</I></P>
<P>[in] Address of a string that contains the word.</P>
<P></P>
<P><I>wSense</I></P>
<P>[in] Alternate pronunciation or meaning of the word. Sense numbers start at zero and increment sequentially. If the sense does not exist, the function returns an error.</P>
<P></P>
<P><I>pszPronounce</I></P>
<P>[out] Address of a buffer that receives the phonetic or phonemic transcription of <I>pszText</I>. If the buffer is too small, no information is copied.</P>
<P></P>
<P><I>dwPronounceSize</I></P>
<P>[in] Number of bytes available in <I>pszPronounce</I>. If this number is too small, the function returns an error, and <I>pdwPronounceNeeded</I> receives the number of bytes needed. </P>
<P></P>
<P><I>pdwPronounceNeeded</I></P>
<P>[out] Address of a variable that receives the size, in bytes, that the buffer specified by <I>pszPronounce</I> needs to be to receive the transcription of <I>pszText</I>.</P>
<P></P>
<P><I>pPartOfSpeech</I></P>
<P>[out] Address of a variable that receives a value indicating the part of speech for the word. For a list of possible values, see the description of the <B>VOICEPARTOFSPEECH</B> enumeration.</P>
<P></P>
<P><I>pEngineInfo</I></P>
<P>[out] Address of a buffer that receives additional information about the word. This parameter can be NULL if the engine does not maintain additional information or if the application does not need to receive it.</P>
<P></P>
<P><I>dwEngineInfoSize</I></P>
<P>[in] Number of bytes of data pointed to by <I>pEngineInfo</I>. If this number is too small, the function returns an error and fills <I>pdwEngineInfoNeeded</I> with the number of bytes needed (unless <I>pdwEngineInfoNeeded</I> is NULL).</P>
<P></P>
<P><I>pdwEngineInfoNeeded</I></P>
<P>[out] Address of a variable that receives the size, in bytes, that the buffer specified by <I>pEngineInfo</I> needs to be to receive additional information about the word. If this parameter is NULL, the function does not return the size.</P>
<P></P>
<P>If <I>dwPronounceSize</I> and <I>dwEngineInfoSize</I> are zero, <I>pdwPronounceNeeded</I> and <I>pdwEngineInfoNeeded</I> are filled in and <I>pszPronounce</I> and <I>pEngineInfo</I> are ignored.</P>
<P>The pronunciation lexicon may have several versions of the same word, each representing a different pronunciation and part of speech.</P></FONT></BODY></HTML>
