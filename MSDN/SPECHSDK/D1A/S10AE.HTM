<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Threads</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Threads</H2><P>Speech objects use the OLE apartment threading model, which permits the creation of processes containing more than one thread of execution. Apartment threading rules are simple, but they must be followed carefully:</P>
<P> <FONT FACE="Symbol">·</FONT>    Every object should execute on only one thread (within a single apartment).</P>
<P> <FONT FACE="Symbol">·</FONT>    The <B>OleInitialize</B> or <B>CoInitialize</B> function must be called to initialize each thread.</P>
<P> <FONT FACE="Symbol">·</FONT>    All pointers to objects must be marshaled between apartments (ensuring that all calls to an object are made on its thread).</P>
<P> <FONT FACE="Symbol">·</FONT>    Each apartment with objects in it must have a message queue to handle calls from other processes and apartments within the same process. </P>
<P> <FONT FACE="Symbol">·</FONT>    Apartment-aware in-process objects must be registered as such in the system registry (that is, the "ThreadingModel = Apartment" entry is required).</P>
<P> <FONT FACE="Symbol">·</FONT>    Apartment-aware objects must write dynamic-link library (DLL) entry-point functions carefully.</P>
<P>Multiple objects can execute on a single thread, but no object can execute on more than one thread. In addition, it is necessary to call <B>OleInitialize</B> or <B>CoInitialize</B> on each thread, because each thread requires the services of the OLE library.</P>
<P>The apartment threading rules have the following implications for application and engine developers:</P>
<P> <FONT FACE="Symbol">·</FONT>    The application must create all notification sinks on the same thread that creates the audio objects and engines.</P>
<P> <FONT FACE="Symbol">·</FONT>    Engines must call all notification sinks on the thread in which they were created.</P>
<P> <FONT FACE="Symbol">·</FONT>    Objects (with the exception of the apartment-aware DLL entry-point functions) do not need to be thread safe because they will always be called from the thread in which they were created.</P>
<P>For more information about OLE and OLE COM, see the Win32 SDK.</P></FONT></BODY></HTML>
