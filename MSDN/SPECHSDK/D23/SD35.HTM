<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Creation</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Object Creation</H2><P>To create a voice-text object, an application calls the <B>CoCreateInstance</B> function with the CLSID_VTxt class identifier and the IID_IVoiceText interface identifier. An application must create a voice-text object for each audio destination that it needs to use. For example, if the application needs to play voice text over a telephone line as well as the computer speakers, it should create two voice-text objects.</P>
<P>After creating a voice-text object, <B>CoCreateInstance</B> returns a pointer to the <B>IVoiceText</B> interface for the object. An application uses the interface to register itself with the text-to-speech engine, to send text to the text-to-speech engine, and to control how the engine speaks the text. </P>
<P>Before an application can play voice text, it must register itself by calling the <B>IVoiceText::Register</B> member function. By registering, the application tells the engine which site to use as the destination of voice text and passes the voice-text object a pointer to the application's voice-text notification interface. The object calls the notification interface to notify the application about events related to voice text. </P></FONT></BODY></HTML>
