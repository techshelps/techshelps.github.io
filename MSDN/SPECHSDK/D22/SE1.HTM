<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Engine Dialog Boxes</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Engine Dialog Boxes</H3><P>A speech-recognition engine provides a set of dialog boxes that enable the user to configure the engine. By using the <B>IVCmdDialogs</B> interface provided by the voice-command object, an application can direct the engine to display one of its dialog boxes. The controls and capabilities of the dialog boxes are determined solely by the engine. Before an application can call any <B>IVCmdDialogs</B> member function, it must first register with the engine by calling the <B>IVoiceCmd::Register</B> member function.</P>
<P>When an application calls a member function of the <B>IVCmdDialogs</B> interface to display a dialog box, it specifies the handle of the parent window for the dialog box. By specifying NULL instead of a window handle, the application can determine whether the engine supports the given dialog box. The engine returns the NOERROR value if it supports the dialog box or the VCMDERR_NOTSUPPORTED error value if it does not. </P>
<P>The application also supplies a title for the dialog box by specifying the address of a title string. If the application specifies NULL instead of a title string address, the engine uses the default title. </P>
<P>If a voice-navigation application, such as Microsoft&reg; Voice, is running, an application does not need to direct an engine to display its dialog boxes because the voice-navigation application gives the user access to them. For more information about voice-navigation applications, see the section, "Common Elements of the Speech Application Programming Interface.".</P>
<H4><A NAME="sec0"></A>About Dialog Box</H4><P>An engine's About dialog box contains information that identifies the speech-recognition engine and its manufacturer and that contains the manufacturer's copyright notice. An application displays the About dialog box by calling the <B>IVCmdDialogs::AboutDlg</B> member function.</P>
<H4><A NAME="sec1"></A>General Dialog Box</H4><P>An engine's General dialog box gives the user control of the general features of the speech-recognition engine. An application displays the General dialog box by using the <B>IVCmdDialogs::GeneralDlg</B> member function. Depending on the engine, the General dialog box may allow the user to perform the following tasks:</P>
<P> <FONT FACE="Symbol">·</FONT>    Inform the engine of the speaker's gender or other speaker-specific information.</P>
<P> <FONT FACE="Symbol">·</FONT>    Control how stringent the engine is about recognition.</P>
<P> <FONT FACE="Symbol">·</FONT>    Control the maximum amount of disk space allotted for speaker information.</P>
<P> <FONT FACE="Symbol">·</FONT>    Control optimizations that affect speech processing time.</P>
<P> <FONT FACE="Symbol">·</FONT>    Export and import speaker information to and from a disk so that this information can be transferred between systems.</P>
<H4><A NAME="sec2"></A>Lexicon Dialog Box</H4><P>A speech-recognition engine maintains a database of pronunciations called a <I>pronunciation lexicon</I>, which an application can load into the Lexicon dialog box by using the <B>IVCmdDialogs::LexiconDlg</B> member function. The user edits the pronunciation lexicon by correcting the phonetics of mispronounced words and by loading and unloading personal exception dictionaries.</P>
<H4><A NAME="sec3"></A>General Training Dialog Box</H4><P>The <B>IVCmdDialogs::TrainGeneralDlg</B> member function displays the General Training dialog box, which trains a speech-recognition engine by having the user speak a preselected set of words and phrases. After the user speaks the words and phrases, recognition accuracy of the engine should be better for that particular speaker.</P>
<H4><A NAME="sec4"></A>Microphone Training Dialog Box</H4><P>The <B>IVCmdDialogs::TrainMicDlg</B> member function displays the Microphone Training dialog box, which trains the engine for use with a particular microphone so that recognition accuracy improves with the microphone. An application should display this dialog box at the request of the engine or whenever the speaker wants to display it. Training information is associated with both the speaker and the microphone. If the engine does not supply this dialog box, the speaker cannot train the engine for the microphone; however, the application will still work. </P></FONT></BODY></HTML>
