<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IVCmdMenu::ListGet</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IVCmdMenu::ListGet</H2><P></P>
<P>HRESULT ListGet(PTSTR pszList, PSDATA pdList, DWORD *pdwListNum);</P>
<P></P>
<P>Retrieves the phrases stored in the current list for the selected voice menu. A list is associated with a menu rather than an individual command. The list must appear in at least one command string, but can be used by more than one command on the menu.</P>
<P> <FONT FACE="Symbol">·</FONT>    Returns NOERROR if successful, or one of these error values:</P>
<P>E_INVALIDARG<BR>VCMDERR_INVALIDLIST<BR>VCMDERR_OUTOFMEM</P>
<P></P>
<P>pszList</P>
<P>[in] Name of the list, such as "name" or "weekday." The list name must appear in the command string for at least one command on the menu. The command string is stored in the <B>dwCommand</B> member of the <B>VCMDCOMMAND</B> structure that defines the command.</P>
<P></P>
<P>pdList</P>
<P>[out] Address of an <B>SDATA</B> structure that receives the address and size of a buffer. The buffer contains a sequential list of null-terminated strings, one for each phrase in the list. </P>
<P></P>
<P>pdwListNum</P>
<P>[out] Address of a variable that receives the number of phrases that were copied to the buffer. If the list is empty, this parameter receives zero.</P>
<P></P>
<P>The calling application allocates the <B>SDATA</B> structure and passes its address to <B>ListGet</B>. <B>ListGet</B> allocates memory (using the OLE task allocator) for the returned data and sets the <B>pData</B> member of the <B>SDATA</B> structure to point to the memory. If the allocation fails, the <B>pData</B> member is set to NULL and the <B>dwSize</B> member is set to zero. The calling application must free the memory pointed to by <B>pData</B>, as well as the <B>SDATA</B> structure itself.</P>
<P>It is up to the calling application to free the memory allocated by the member function by using the <B>CoTaskMemFree</B> function.</P></FONT></BODY></HTML>
