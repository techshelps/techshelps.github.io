<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IVCmdNotifySink::CommandRecognize</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>IVCmdNotifySink::CommandRecognize</H2><P></P>
<P>HRESULT CommandRecognize(DWORD dwID, PVCMDNAME pvCmdName, DWORD dwFlags, <BR>  DWORD dwActionSize, PVOID pAction, DWORD dwNumLists, <BR>  PTSTR pszListValues, PTSTR pszCommand);</P>
<P></P>
<P>Sent when a spoken phrase was recognized as being from the application's command set. Along with the notification, the application receives the text of the phrase and the action data that was supplied by the application when it originally defined the command.</P>
<P> <FONT FACE="Symbol">·</FONT>    Return value is ignored.</P>
<P></P>
<P>dwID</P>
<P>[in] Identifier of the command that was recognized. The command identifier is stored in the <B>dwID</B> member of the <B>VCMDCOMMAND</B> structure that defines the command. </P>
<P></P>
<P>pvCmdName</P>
<P>[in] Address of a <B>VCMDNAME</B> structure containing the voice menu that has the recognized command.</P>
<P></P>
<P>dwFlags</P>
<P>[in] VCMDCMD_VERIFY if the application should request verification from the user or NULL if verification is not required. To request verification, the application should display a dialog box. An application would typically require verification for a destructive or irreversible command such as "Format disk."</P>
<P></P>
<P>dwActionSize</P>
<P>[in] Size of the data in <I>pAction</I>.</P>
<P></P>
<P>pAction</P>
<P>[in] Address of a string that contains action data to accompany the recognized command. The action data is obtained from the <B>VCMDCOMMAND</B> structure for the command.</P>
<P></P>
<P>dwNumLists</P>
<P>[in] Size, in bytes, of the list data for the command. If a command does not contain any list fields, this parameter is zero.</P>
<P></P>
<P>pszListValues</P>
<P>[in] Address of a list of one or more null-terminated strings that correspond to the phrase from each list in the order that they occur in the command. For example, if the command is "Set the time to number AM or PM," this parameter points to "Ten\0PM" (the last '\0' is implicit in C notation).</P>
<P></P>
<P>pszCommand</P>
<P>[in] Address of the command string for the command that was recognized.</P>
<P></P>
<P>You should not use the contents of <I>pszCommand</I> to identify the recognized command. Instead, use the data in <I>pAction</I> or the identifier in <I>dwID</I> to determine which command was recognized. The <I>pszCommand</I> string may not contain the same string that you specified in the <B>VCMDCOMMAND</B> structure because it is possible for the user to edit the text for commands for your application using Microsoft Voice or another voice-aware application.</P>
<P>The notification is sent to all applications that are registered on the voice-command site, regardless of the settings of the <I>dwFlags</I> parameter of the <B>IVoiceCmd::Register</B> member function when the application registered to use voice commands.</P>
<P>If two or more global voice menus (or two or more window-specific voice menus) contain the same phrase and the engine recognizes that phrase, the engine calls <B>CommandRecognize</B> for one menu and <B>IVCmdNotifySink::CommandOther</B> for the other. The engine determines which notification to call for each menu; an application cannot determine which notification will be called. </P></FONT></BODY></HTML>
