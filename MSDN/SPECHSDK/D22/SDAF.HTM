<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Notification Interface</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Notification Interface</H2><P>When an application calls the <B>IVoiceCmd::Register</B> member function to register its voice-command site, the application must also provide a pointer to its <B>IVCmdNotifySink</B> interface. The voice-command object calls this interface to notify the application of speech-related events. To receive notifications, the application must create a Component Object Module (COM) object that supports the <B>IVCmdNotifySink</B> interface. You determine how your application responds to notifications.</P>
<P>The voice-command object sends a variety of notifications to the <B>IVCmdNotifySink</B> interface. When calling <B>Register</B>, an application indicates whether the object should send all notifications or just a subset. A voice-command object can send the following notifications.</P>

<TABLE COLS="2" BORDER="0" CELLPADDING="7"><COLGROUP><COL WIDTH="107pt" VALIGN="TOP"><COL WIDTH="240pt" VALIGN="TOP"></COLGROUP><TBODY><TR><TD VALIGN="TOP"><P>Notification</P></TD><TD VALIGN="TOP"><P>Description</P></TD></TR><TR><TD COLSPAN="2" VALIGN="TOP"><P></P></TD></TR><TR><TD VALIGN="TOP"><P><B>AttribChanged</B></P></TD><TD VALIGN="TOP"><P>Sent when an application changes an attribute for the voice-command site. The notification includes a flag that identifies the attribute that changed.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>CommandOther</B></P></TD><TD VALIGN="TOP"><P>Sent when a spoken phrase was either recognized as being from another application's command set or was not recognized. Along with the notification, the application receives a pointer to the phrase. If the pointer has a value, the phrase was recognized as valid for some other voice-command object. If the pointer to the phrase is NULL, the phrase was not recognized.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>CommandRecognize</B></P></TD><TD VALIGN="TOP"><P>Sent when the engine recognizes a spoken phrase as being from an active menu associated with the application. Along with the notification, the application receives the text of the phrase and the action data that was supplied by the application when it originally defined the command. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>CommandStart</B></P></TD><TD VALIGN="TOP"><P>Sent when the engine begins recognition processing for a command. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>Interference</B></P></TD><TD VALIGN="TOP"><P>Sent when the engine cannot properly recognize an utterance for a known reason. The notification includes a flag indicating the reason.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>MenuActive</B></P></TD><TD VALIGN="TOP"><P>Sent when a menu has been activated or deactivated.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>UtteranceBegin</B></P></TD><TD VALIGN="TOP"><P>Sent as soon as the speech-recognition engine has received any audio input that might be speech.</P></TD></TR><TR><TD VALIGN="TOP"><P><B>UtteranceEnd</B></P></TD><TD VALIGN="TOP"><P>Sent as soon as the speech-recognition engine senses that the user has stopped speaking. </P></TD></TR><TR><TD VALIGN="TOP"><P><B>VUMeter</B></P></TD><TD VALIGN="TOP"><P>A linear volume-unit (VU) level from 0 to 0xFFFF, sent between 8 and 16 times a second, that indicates the loudness of the digital-audio stream. This information can be used to provide feedback to the user that the voice-command object is listening.</P></TD></TR></TBODY></TABLE>
<P><BR></P><P>Typically, the voice-command object calls <B>UtteranceBegin</B> when the user starts speaking and <B>UtteranceEnd</B> when the user stops speaking. After <B>UtteranceEnd</B> is called, a small amount of time may elapse while the speech-recognition engine processes the utterance. When the engine finishes processing, the voice-command object calls <B>CommandRecognize</B> if it recognized one of the application's commands or <B>CommandOther</B> if the command was unrecognized or was recognized as another application's command.</P></FONT></BODY></HTML>
