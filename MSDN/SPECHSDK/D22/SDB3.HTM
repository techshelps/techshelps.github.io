<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Processing Voice-Command Notifications</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<h2>Processing Voice-Command Notifications</H2><P>The voice-command object calls an application's <B>IVCmdNotifySink</B> interface to inform the application of voice-command events so that the application can respond to them. To receive notifications, the application must create a COM object that supports the <B>IVCmdNotifySink</B> interface and must pass the address of the interface to the voice-command object when calling the <B>IVoiceCmd::Register</B> function. </P>
<P>The <B>IVCmdNotifySink</B> interface consists of a set of member functions that correspond to voice-command events. When an event occurs on the site that the application is using, the voice-command object calls the member function that corresponds to the event. </P>
<P>The following example shows how to define an object class that implements the <B>IVCmdNotifySink</B> interface.</P>
<P>class CIVCmdNotifySink : public IVCmdNotifySink {</P>
<P>    private:</P>
<P>    DWORD   m_dwMsgCnt;</P>
<P>    HWND    m_hwnd;</P>
<P></P>
<P>    public:</P>
<P>    CIVCmdNotifySink(void);</P>
<P>    ~CIVCmdNotifySink(void);</P>
<P></P>
<P>    // IUnknown members</P>
<P>    STDMETHODIMP         QueryInterface (REFIID, LPVOID FAR *);</P>
<P>    STDMETHODIMP_(ULONG) AddRef(void);</P>
<P>    STDMETHODIMP_(ULONG) Release(void);</P>
<P></P>
<P>    // IVCmdNotifySink members</P>
<P>    STDMETHODIMP CommandRecognize (DWORD, PVCMDNAME, DWORD, </P>
<P>        DWORD, PVOID, DWORD,PSTR, PSTR);</P>
<P>    STDMETHODIMP CommandOther     (PVCMDNAME, PSTR);</P>
<P>    STDMETHODIMP MenuActivate     (PVCMDNAME, BOOL);</P>
<P>    STDMETHODIMP UtteranceBegin   (void);</P>
<P>    STDMETHODIMP UtteranceEnd     (void);</P>
<P>    STDMETHODIMP CommandStart     (void);</P>
<P>    STDMETHODIMP VUMeter          (WORD);</P>
<P>    STDMETHODIMP AttribChanged    (DWORD);</P>
<P>    STDMETHODIMP Interference     (DWORD);</P>
<P>};</P>
<P>typedef CIVCmdNotifySink * PCIVCmdNotifySink;</P>
<P></P>
<P>The following example shows a simple implementation of the <B>IVCmdNotifySink::CommandRecognize</B> member function. The voice-command object calls <B>CommandRecognize</B> when the engine recognizes an utterance from the user as a voice command from one of the application's voice menus. The example starts the Windows Calculator application when the user speaks the "Start Calculator" command.</P>
<P>STDMETHODIMP CIVCmdNotifySink::CommandRecognize(DWORD dwID, </P>
<P>    PVCMDNAME pName, DWORD dwFlags, DWORD dwActionSize, PVOID pAction, </P>
<P>    DWORD dwNumLists, PSTR pszListValues, PSTR pszCommand)</P>
<P>{</P>
<P></P>
<P>if (!lstrcmp(pszCommand, "Start Calculator")) </P>
<P>    WinExec("calc.exe", SW_SHOWNORMAL);</P>
<P></P>
<P>return NOERROR;</P>
<P>}</P>
<P></P></FONT></BODY></HTML>
