<HTML><HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Speech Recognition Likes to Hear</TITLE><META HTTP-EQUIV="CONTENT-TYPE" CONTENT="text/html; charset= iso-8859-1"><style>@import url(/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/msdn_ie3.css"></HEAD><BODY BGCOLOR="#FFFFFF">
<FONT FACE="verdana,atial,helvetica" SIZE="2"><FORM NAME="x"><OBJECT CLASSID="clsid:9c2ac687-ceef-11cf-96d9-00a0c903b016" NAME="iv"></OBJECT></FORM>
<H3>Speech Recognition Likes to Hear</H3><P>Speech recognition engines like to hear - no surprise. They like to hear so much that if the user is having a phone conversation in the room while speech recognition is listening then the recognizer will think that the user is talking to it and hear random words. Sometimes the speech recognizer even hears door slamming as words.</P>
<P>There are several ways to overcome this obstacle:</P>
<P>Allow the user to turn speech recognition on/off quickly and easily. This can be done by the keyboard, mouse, voice, or joystick.</P>
<P>Have a "push-to-talk" button. This can be a key on the keyboard, mouse button, hot-spot that the cursor has to be over, a joystick button, or anything else. The user presses the button to get the computer to listen. When the button isn't pressed the computer isn't listening. </P>
<P>Give the computer a name, like "Computer," and make the user speak it prior to speaking a common. It's kind of like "Simon Says". The computer will only act when it hears its name.</P>
<P>Have the computer verify every command with the user. The Microsoft Voice application will display the command that it heard and then in small text display, "Say 'Do it' to accept the command." The command is not actually acted upon unless the user says "Do it" within a few seconds of the command being spoken.</P></FONT></BODY></HTML>
