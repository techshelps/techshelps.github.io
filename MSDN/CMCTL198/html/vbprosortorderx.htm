<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SortKey, SortOrder, Sorted P, ColumnClick Event Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbprosortorderx"></a>SortKey, SortOrder, Sorted Properties, ColumnClick Event Example</h1>
<p>
This example adds three <b>ColumnHeader</b> objects to a <b>ListView</b> control and populates the control with the Publishers records of the Biblio.mdb database. An array of two <b>OptionButton</b> controls offers the two choices for sorting records. When you click on a <b>ColumnHeader</b>, the <b>ListView</b> control is sorted according to the <b>SortOrder</b> property, as determined by the <b>OptionButtons</b>. To try the example, place a <b>ListView</b> and a control array of two <b>OptionButton</b> controls on a form and paste the code into the form's Declarations section. Run the example and click on the <b>ColumnHeaders</b> to sort, and click on the <b>OptionButton</b> to switch the <b>SortOrder</b> property.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The example will not run unless you add a reference to the Microsoft DAO 3.5 Object Library by using the References command on the Tools menu.</p>
<pre><code>Private Sub Option1_Click(Index as Integer)
   ' These OptionButtons offer two choices: Ascending (Index 0), 
   ' and Descending (Index 1). Clicking on one of these
   ' sets the SortOrder for the ListView control.
   ListView1.<span class=cfe><b>SortOrder</b></span> = Index
   ListView1.<span class=cfe><b>Sorted</b></span> = True ' Sort the List.
End Sub

Private Sub Form_Load()
   ' Create an object variable for the ColumnHeader object.
   Dim clmX As ColumnHeader
   ' Add ColumnHeaders. The width of the columns is the width
   ' of the control divided by the number of ColumnHeader objects.
   Set clmX = ListView1.ColumnHeaders. _
   Add(, , "Company", ListView1.Width / 3)
   Set clmX = ListView1.ColumnHeaders. _
   Add(, , "Address", ListView1.Width / 3)
   Set clmX = ListView1.ColumnHeaders. _
   Add(, , "Phone", ListView1.Width / 3)

   ListView1.BorderStyle = ccFixedSingle ' Set BorderStyle property.
   ListView1.View = lvwReport ' Set View property to Report.

   ' Label OptionButton controls with SortOrder options.
      Option1(0).Caption = "Ascending (A-Z)"
      Option1(1).Caption = "Descending (Z-A)"
      ListView1.<span class=cfe><b>SortOrder</b></span> = lvwAscending ' Sort ascending. 

   ' Create object variables for the Data Access objects.
   Dim myDb As Database, myRs As Recordset
   ' Set the Database to the BIBLIO.MDB database.
   Set myDb = DBEngine.Workspaces(0).OpenDatabase("BIBLIO.MDB")
   ' Set the recordset to the Publishers table.
   Set myRs = myDb.OpenRecordset("Publishers", dbOpenDynaset)
      
   ' Create a variable to add ListItem objects.
   Dim itmX As ListItem

   ' While the record is not the last record, add a ListItem object.
   ' Use the Name field for the ListItem object's text.
   ' Use the Address field for the ListItem object's subitem(1).
   ' Use the Phone field for the ListItem object's subitem(2).

   While Not myRs.EOF
      Set itmX = ListView1.ListItems.Add(, , CStr(myRs!Name))

      ' If the Address field is not Null, set subitem 1 to the field.
      If Not IsNull(myRs!Address) Then
         itmX.SubItems(1) = CStr(myRs!Address)&nbsp; ' Address field.
      End If

      ' If the Phone field is not Null, set subitem 2 to the field.
      If Not IsNull(myRs!Telephone) Then
         itmX.SubItems(2) = myRs!Telephone&nbsp; ' Phone field.
      End If

      myRs.MoveNext   ' Move to next record.
   Wend
End Sub

Private Sub ListView1_<span class=cfe><b>ColumnClick</b></span>(ByVal ColumnHeader As ColumnHeader)
   ' When a ColumnHeader object is clicked, the ListView control is
   ' sorted by the subitems of that column.
   ' Set the SortKey to the Index of the ColumnHeader - 1
   ListView1.<span class=cfe><b>SortKey</b></span> = ColumnHeader.Index - 1
   ' Set Sorted to True to sort the list.
   ListView1.<span class=cfe><b>Sorted</b></span> = True
End Sub
</code></pre>
</BODY>
</HTML>
