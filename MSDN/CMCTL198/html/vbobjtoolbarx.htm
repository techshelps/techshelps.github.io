<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Toolbar Control Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjtoolbarx"></a>Toolbar Control Example</h1>
<p>
This example adds <b>Button</b> objects to a <b>Toolbar</b> control using the <b>Add</b> method and assigns images supplied by the <b>ImageList</b> control. The behavior of each button is determined by the <b>Style</b> property. The code creates buttons that can be used to open and save files and includes a <b>ComboBox</b> control that is used to change the backcolor of the form. To try the example, place a <b>Toolbar</b>, <b>ImageList</b>, and a <b>ComboBox</b> on a form and paste the code into the form's Declarations section. Make sure that you insert the <b>ComboBox</b> directly on the <b>Toolbar</b> control. Run the example, click the various buttons and select from the combo box.</p>
<pre><code>Private Sub Form_Load()
   ' Create object variable for the ImageList.
   Dim imgX As ListImage

   ' Load pictures into the ImageList control.
   Set imgX = ImageList1.ListImages. _
   Add(, "open", LoadPicture("Graphics\bitmaps\tlbr_w95\open.bmp"))
   Set imgX = ImageList1.ListImages. _
   Add(, "save", LoadPicture("Graphics\bitmaps\tlbr_w95\save.bmp"))
   Toolbar1.<span class=cfe><b>ImageList</b></span> = ImageList1

   ' Create object variable for the Toolbar.
   Dim btnX As Button
   ' Add button objects to Buttons collection using 
    ' the
   ' Add method. After creating each button, set both
   ' Description and ToolTipText properties.
   Toolbar1.Buttons.<span class=cfe><b>Add</b></span> , , , tbrSeparator
   Set btnX = Toolbar1.Buttons.<span class=cfe><b>Add</b></span>(, "open", , tbrDefault, "open")
   btnX.<span class=cfe><b>ToolTipText</b></span> = "Open File"
   btnX.<span class=cfe><b>Description</b></span> = btnX.<span class=cfe><b>ToolTipText</b></span>
   Set btnX = Toolbar1.Buttons.<span class=cfe><b>Add</b></span>(, "save", , tbrDefault, "save")
   btnX.<span class=cfe><b>ToolTipText</b></span> = "Save File"
   btnX.<span class=cfe><b>Description</b></span> = btnX.<span class=cfe><b>ToolTipText</b></span>
   Set btnX = Toolbar1.Buttons.<span class=cfe><b>Add</b></span>(, , , tbrSeparator)
 
   ' The next button has the Placeholder style. A 
    ' ComboBox control will be placed on top of this 
    ' button.
   Set btnX = Toolbar1.Buttons.<span class=cfe><b>Add</b></span>(, "combo1", , tbrPlaceholder)
   btnX.<span class=cfe><b>Width</b></span> = 1500 ' Placeholder width to accommodate a combobox.

   Show ' Show form to continue configuring ComboBox.

   ' Configure ComboBox control to be at same location 
    ' as the
   ' Button object with the PlaceHolder style (key = 
     ' "combo1").
   With Combo1
      .Width = Toolbar1.Buttons("combo1").<span class=cfe><b>Width</b></span>
      .Top = Toolbar1.Buttons("combo1").<span class=cfe><b>Top</b></span>
      .Left = Toolbar1.Buttons("combo1").<span class=cfe><b>Left</b></span>
      .AddItem "Black" ' Add colors for text.
      .AddItem "Blue"
      .AddItem "Red"
      .ListIndex = 0
   End With

End Sub

Private Sub Form_Resize()
   ' Configure ComboBox control.
   With Combo1
      .Width = Toolbar1.Buttons("combo1").<span class=cfe><b>Width</b></span>
      .Top = Toolbar1.Buttons("combo1").<span class=cfe><b>Top</b></span>
      .Left = Toolbar1.Buttons("combo1").<span class=cfe><b>Left</b></span>
   End With

End Sub
Private Sub toolbar1_<span class=cfe><b>ButtonClick</b></span>(ByVal Button As Button)
   ' Use the Key property with the SelectCase statement to specify
   ' an action.
   Select Case Button.<span class=cfe><b>Key</b></span>
   Case Is = "open"       ' Open file.
      MsgBox "Add code to open file here!"
   Case Is = "save"        ' Save file.
      MsgBox "Add code to save file here!"
   End Select
End Sub

Private Sub Combo1_Click()
   ' Change backcolor of form using the ComboBox.
   Select Case Combo1.ListIndex
   Case 0
      Form1.BackColor = vbBlack
   Case 1
      Form1.BackColor = vbBlue
   Case 2
      Form1.BackColor = vbRed
   End Select
End Sub
</code></pre>
</BODY>
</HTML>
