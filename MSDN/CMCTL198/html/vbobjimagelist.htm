<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ImageList Control</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjimagelist"></a>ImageList Control</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjImageListC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjImageListX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjImageListP">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjImageListM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjImageListE">
</object></p>
<p>
An <b>ImageList</b> control contains a collection of <b>ListImage</b> objects, each of which can be referred to by its index or key. The <b>ImageList</b> control is not meant to be used alone, but as a central repository to conveniently supply other controls with images.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>ImageList</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>ImageList</b> control functions as a storehouse for images, and as such, it needs a second control to display the stored images. The second control can be any control that can display an image's <b>Picture</b> object, or it can be one of the Windows Common Controls that were specifically designed to bind to the <b>ImageList</b> control. These include the <b>ListView</b>, <b>ToolBar</b>, <b>TabStrip</b>, <b>Header</b>, <b>ImageCombo</b>, and <b>TreeView</b> controls. In order to use an <b>ImageList</b> with one of these controls, you must bind a particular <b>ImageList</b> control with the second control through an appropriate property. For the <b>ListView</b> control, you must set the <b>Icons</b> and <b>SmallIcons</b> properties to <b>ImageList</b> controls. For the <b>TreeView</b>, <b>TabStrip</b>, <b>ImageCombo</b>, and <b>Toolbar</b> controls, you must set the <b>ImageList</b> property to an <b>ImageList</b> control.</p>
<p>
At design time, you can add images using the Images tab of the ImageList Control Properties dialog box. At run time, you can add images using the <b>Add</b> method for the <b>ListImages</b> collection.</p>
<p>
For the Windows Common Controls, you can specify an <b>ImageList</b> at design time using the Custom Properties dialog box. At run time, you can also specify an <b>ImageList</b> control using the <b>ImageList</b> property, as in the following example:</p>
<pre><code>TreeView1.ImageList = ImageList1&nbsp; ' Specify ImageList
</code></pre>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;When using the <b>ImageList</b> control with a Windows Common Control, insert all of the images you will require, in the order you desire, into the <b>ImageList </b>before binding it to the second control. Once the <b>ImageList </b>is bound to a second control, you cannot delete images, and you cannot insert images into the middle of the <b>ListImages</b> collection. However, you can add images to the end of the collection.</p>
<p>
Once you associate an<b> ImageList</b> with a Windows Common Control, you can use the value of either the <b>Index</b> or <b>Key</b> property to refer to a <b>ListImage</b> object in a procedure. The following example sets the <b>Image</b> property of a <b>TreeView</b> control's third <b>Node</b> object to the first <b>ListImage</b> object in an <b>ImageList</b> control:</p>
<pre><code>' Use the value of the Index property of ImageList1.
TreeView1.Nodes(3).Image = 1
' Or use the value of the Key property.
TreeView1.Nodes(3).Image = "image 1"&nbsp;&nbsp; ' Assuming Key is "image 1."
</code></pre>
<p>
To use the <b>ImageList</b> control with other controls (that can't be bound to the <b>ImageList </b>control), assign the <b>Picture</b> property of the second control to the <b>Picture</b> object of any image in the <b>ImageList</b> control. For example, the following code assigns the <b>Picture </b>object of the first <b>ListImage</b> object in a <b>ListImages</b> collection to the <b>Picture</b> property of a newly created <b>StatusBar</b> panel:</p>
<pre><code>Dim pnlX As Panel
Set pnlX = StatusBar1.Panels.Add() ' Add a new Panel object.
Set pnlX.Picture = ImageList1.ListImages(1).Picture ' Set Picture.
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;You must use the <b>Set</b> statement when assigning an image to a <b>Picture</b> object.</p>
<p>
You can insert any size image into the <b>ImageList </b>control. However, the size of the image displayed by the second control depends on one factor: whether or not the second control is also a Windows Common control bound to the <b>ImageList</b> control.</p>
<p>
When the <b>ImageList</b> control is bound to another Windows Common Control, images of different sizes can be added to the control, however the size of the image displayed in the associated Windows Common Control will be constrained to the size of the first image added to the <b>ImageList</b>. For example, if you add an image that is 16 by 16 pixels to an <b>ImageList </b>control, then bind the <b>ImageList</b> to a <b>TreeView</b> control (to be displayed with <b>Node </b>objects), all images stored in the <b>ImageList</b> control will be displayed at 16 by 16 pixels, even if they are much larger or smaller.</p>
<p>
On the other hand, if you display images using the <b>Picture</b> object, any image stored in the <b>ImageList </b>control will be displayed at its original size, no matter how small or large.</p>
<p class=indent>
<B><b>Distribution Note</b></B>&nbsp;&nbsp;&nbsp;The <b>ImageList</b> control is part of a group of ActiveX controls that are found in the MSCOMCTL.OCX&nbsp; file. To use the <b>ImageList</b> control in your application, you must add the MSCOMCTL.OCX&nbsp; file to the project. When distributing your application, install the MSCOMCTL.OCX&nbsp; file in the user's Microsoft Windows System or System32 directory. For more information on how to add an ActiveX control to a project, see the <i>Programmer's Guide</i>.</p>
</BODY>
</HTML>
