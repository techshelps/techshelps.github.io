<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Child Property Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbprochildx"></a>Child Property Example</h1>
<p>
This example creates several <b>Node </b>objects. When you click on a <b>Node</b> object, the code first uses the <b>Children </b>property to determine if the <b>Node</b> has children nodes. If so, the caption of the form displays the text of the <b>Child</b> node.</p>
<pre><code>Option Explicit

Private Sub Form_Load()
' This code creates a tree with 3 Node objects.
   TreeView1.Style = tvwTreelinesPlusMinusText ' Style 6.
   TreeView1.LineStyle = tvwRootLines&nbsp; 'Linestyle 1.

   ' Add several Node objects.
   Dim nodX As Node&nbsp; ' Create variable.

   Set nodX = TreeView1.Nodes.Add(, , "r", "Root")
   Set nodX = TreeView1.Nodes.Add("r", tvwChild, "c1", "Child 1")

   nodX.EnsureVisible ' Show all nodes.
   Set nodX = TreeView1.Nodes.Add("c1", tvwChild, "c2", "Child 2")
   Set nodX = TreeView1.Nodes.Add("c1", tvwChild, "c3", "Child 3")
   nodX.EnsureVisible ' Show all nodes.
End Sub

Private Sub TreeView1_NodeClick(ByVal Node As Node)
   ' If the Node does have children, then display the text of
   ' the child Node.
   If Node.Children Then
      Caption = Node.<span class=cfe><b>Child</b></span>.Text
   End If
End Sub
</code></pre>
</BODY>
</HTML>
