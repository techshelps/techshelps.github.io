<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Change Event (ToolBar, Slider Controls)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbevtchangeo"></a>Change Event (ToolBar, Slider Controls)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtChangeC;vbevtChangeO_C;vbevtChangeOC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtChange;vbevtChangeO_X;vbevtChangeX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbevtChangeA;vbevtChangeO_A">
</object></p>
<p>
Indicates that the contents of a control have changed. How and when this event occurs varies with the control.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>Private Sub</b> <i>object</i><b>_Change(</b>[<i>index</i> <b>As</b> <b>Integer</b>]<b>)</b></p>
<p>
The Change event syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Part</b></td>
<td class=label width=71%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=29%><i>object</i></td>
<td width=71%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to a control in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=29%><i>index</i></td>
<td width=71%>An integer that uniquely identifies a control if it's in a control array.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b>
<ul type=disc>
<li>
Slider — generated when the <b>Value</b> property changes, either through code, or when the user moves the control's slider.<br><br></li>
<li>
Toolbar — generated after the end user customizes a Toolbar control's toolbar using the Customize Toolbar dialog box.</li>
</ul>
<p>
The Change event procedure can synchronize or coordinate data display among controls. For example, you can use a Slider control's Change event procedure to update the control's <b>Value</b> property setting in a TextBox control. Or you could use a Change event procedure to display data and formulas in a work area and results in another area.</p>
<p class=indent>
<B><b>Note</b></B> A Change event procedure can sometimes cause a cascading event. This occurs when the control's Change event alters the control's contents by setting a property in code that determines the control's value, such as the <b>Text</b> property setting for a TextBox control. To prevent a cascading event:
<ul type=disc>
<li>
If possible, avoid writing a Change event procedure for a control that alters that control's contents. If you do write such a procedure, be sure to set a flag that prevents further changes while the current change is in progress.<br><br></li>
<li>
Avoid creating two or more controls whose Change event procedures affect each other, for example, two TextBox<b> </b>controls that update each other during their Change events.</li>
</ul>
</BODY>
</HTML>
