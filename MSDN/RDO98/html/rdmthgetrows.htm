<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetRows Method (Remote Data)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="rdmthgetrows"></a>GetRows Method (Remote Data)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetrows_C;rdmthGetrowsC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetrows_X;rdmthGetrowsX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="rdmthGetrows_A;rdmthGetrowsA">
</object></p>
<p>
Retrieves multiple <a href="rddefrow.htm">rows</a> of an <b>rdoResultset</b> into an array.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>array</i> = <i>object</i>.<b>GetRows (</b><i>rows</i><b>)</b></p>
<p>
The <b>GetRows</b> method syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Part</b></td>
<td class=label width=81%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><i>array</i></td>
<td width=81%>The name of a <a href="rddefvariantdatatype.htm">Variant</a> type variable to store the returned data.</td>
</tr>
<tr valign=top>
<td width=19%><i>object</i> </td>
<td width=81%>An <a href="rddefobjectexpression.htm">object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=19%><i>rows</i></td>
<td width=81%>A <a href="rddeflong.htm">Long</a> value indicating the number of rows to retrieve.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Use the <b>GetRows</b> method to copy one or more entire rows from an <b>rdoResultset </b>into a two-dimensional array. The first array subscript identifies the <a href="rddefcolumn.htm">column</a> and the second identifies the row number, as follows:</p>
<pre><code>avarRows(intColumn)(intRow)
</code></pre>
<p>
To get the first column value in the second row returned, use the following:</p>
<pre><code>col1 = avarRows(0,1)
</code></pre>
<p>
To get the second column value in the first row, use the following:</p>
<pre><code>col2 = avarRows(1,0)
</code></pre>
<p>
If more rows are requested than are available, only the available rows are returned. Use <b>Ubound</b> to determine how many rows are actually fetched, as the array is resized based on the number of rows returned. For example, if you return the results into a <b>Variant</b> called varA, you could determine how many rows were actually returned by using:</p>
<pre><code>numReturned = Ubound(varA,2) + 1
</code></pre>
<p>
The “+ 1” is used because the first data returned is in the 0<sup>th</sup> element of the array. The number of rows that can be fetched is constrained by available memory and should be chosen to suit your application — don’t expect to use <b>GetRows</b> to bring your entire <a href="rddeftable.htm">table</a> or <a href="idh_rddefresultset.htm">result set</a> into an array if it is a large table.</p>
<p>
<b>GetRows</b> does not return data from columns whose <b>ChunkRequired</b> property is <b>True</b> — a variant value containing an ODBC S-code is returned in these columns instead.</p>
<p>
After a call to <b>GetRows</b>, the <a href="rddefcurrentrow.htm">current row</a> is positioned at the next unread row. That is, <b>GetRows</b> is equivalent to using the <b>Move</b> (<i>rows</i>) method.</p>
<p>
If you are trying to fetch all the rows using multiple <b>GetRows</b> calls, use the <b>EOF</b> property to determine if there are rows available. <b>GetRows</b> returns less than the number requested either at the end of the <b>rdoResultset</b>, or if it cannot fetch a row in the range requested. For example, if a fifth row cannot be retrieved in a group of ten rows that you’re trying to fetch, <b>GetRows</b> returns four rows and leaves currency on the row that caused the problem. It will not generate a run-time error.</p>
<p>
The <b>GetRows</b> method fetches data from the ODBC buffers based on the <b>RowsetSize</b> property. RDO proceeds to fetch from the current row toward the end of the result set — returning as many rows as you requested. As the current rowset is exhausted, RDO issues another <b>SQLExtendedFetch</b> function call to fetch subsequent rowsets from the database. This technique applies to all types of cursors.</p>
</BODY>
</HTML>
