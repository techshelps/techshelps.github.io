<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What can (and can't) Visual Basic controls do?</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="whatcan(andcant)visualbasiccontrolsdo"></a>What can (and can’t) Visual Basic controls do?</h1>
<p>
For those of you who have been waiting for the day when Visual Basic could finally create its own controls, pay attention here. Although some might complain that this capability is long overdue, Microsoft appears to have made it worth the wait. The following list is a brief rundown of what you can do with Visual Basic 5 controls:
<ul type=disc>
<li>
You can create controls to be used in one of two ways. You can use the well-known ActiveX implementation and create a separate OCX file and, new to Visual Basic 5, you can create a source code module, with the new CTL extension, and compile it into an application. See the next section for more information on these two methods.<br><br></li>
<li>
You’ll find built-in support for creating property pages, with the inclusion of the new PAG module. Standard Font and Color property pages are also provided (more on these later).<br><br></li>
<li>
You can create a control that combines a number of other existing controls.<br><br></li>
<li>
You can create ActiveX control projects that contain more than one control in a single OCX file.<br><br></li>
<li>
You can create bound controls with very little effort.<br><br></li>
<li>
You can now use Visual Basic to create controls for use in other languages and within World Wide Web pages.<br><br></li>
<li>
With the ability to have multiple projects within a single Visual Basic session, debugging your controls is very easy. Other server projects such as ActiveX DLLs are also simple to debug.</li>
</ul>
<p>
That was the good news. Here are the limitations:
<ul type=disc>
<li>
Controls are not multithreaded within a single instance. They are In Process servers and as such run in the same process as their client. Visual Basic 5 only gives you the ability to have multithreaded objects that have no user interface.<br><br></li>
<li>
Because they run in the same process as the client, controls created using Visual Basic 5 cannot be used with 16-bit client applications.</li>
</ul>
<h1></h1>
</BODY>
</HTML>
