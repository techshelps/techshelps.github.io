<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Leap Years</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="leapyears"></a>Leap Years</h1>
<p>
Many words have been written offering the correct formula for calculating whether or not a particular year is a leap year. I don’t intend to add fuel to the debate other than to demonstrate the following formula, which as it happens is the correct and only formula that should be used.</p>
<p>
Before showing the code, it’s worth mentioning that given the correct date, Visual Basic will figure it all out for you anyway. I can think of only a few rare cases that would genuinely require a separate leap-year algorithm. In the spirit of completeness, however, here goes.</p>
<p>
The magic numbers are 4, 100, and 400. The golden rule for calculating a leap year has three parts:
<ol>
<li>
If the year is divisible by 4, it’s a leap year.<br><br></li>
<li>
But—if the year is also divisible by 100, it’s not a leap year.<br><br></li>
<li>
Double but—if the year is also divisible by 400, it is a leap year.</li>
</ol>
<p>
The code to represent this formula in a function would look something like this:</p>
<pre><code>Function bIsLeapYear(ByVal inYear As Integer) As Boolean
    bIsLeapYear = ((inYear Mod 4 = 0) _
               And (inYear Mod 100 &lt;&gt; 0) _
                Or (inYear Mod 400 = 0))
End Function</code></pre>
<p>
So now you have the proof. The year 2000 <i>is </i>a leap year. The year 1900 was <i>not </i>a leap year. The year 1600 was a leap year.</p>
<p>
With respect to the people who know a lot more about this subject than I do, there are some issues regarding dates earlier than 1600 and later than 3000. I suggest that if you’re genuinely interested in dates spanning that wide a range, you consult your local expert.</p>
<h1></h1>
</BODY>
</HTML>
