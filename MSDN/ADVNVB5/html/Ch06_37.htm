<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>See queries in Crystal Reports</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="seequeriesincrystalreports"></a>See queries in Crystal Reports</h1>
<p>
Although you don’t need to upgrade to Visual Basic 5 to get the latest version of Crystal Reports, the version that ships with Visual Basic 5 (and Visual Basic 4) has a great new feature: the ability to see queries. You simply construct a Jet query to do joins instead of using links in Crystal Reports. The old way of getting information from queries was by means of a temporary table.</p>
<p>
Crystal Reports still doesn’t let you see parameter queries, but why not write your own ActiveX object to run reports? At TMS, ours takes a collection of parameters—each made up of a parameter object containing the parameter name and value—and writes the results to a temporary table. The report is then run against this table. The alternative is to generate the SQL and save it as a query. Thus, the same Crystal Reports query for totaling account balances could be used with several different reports.</p>
<pre><code>Const PRINT_REPORT As Integer = 1
Dim qd             As QueryDef
Dim sDate          As String

sDate = Format$(InputBox$(""))
Set qd = PubDB.CreateQueryDef("qryReport", _
    "Select Name From Names " &amp; _
    &amp; "Where DateAdded &gt; " &amp; sDate)
DB.QueryDefs.Append qd
rptctl.Action = PRINT_REPORT</code></pre>
<h1></h1>
</BODY>
</HTML>
