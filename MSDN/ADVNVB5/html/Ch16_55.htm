<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Understanding Objects</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="understandingobjects"></a>Understanding Objects</h1>
<p class=indent>
<i>When the plane you are on is late, the plane you want to transfer to is on time.</i></p>
<p class=indent>
<b>The Airplane Law</b></p>
<p>
Visual Basic has gradually become more and more object oriented, and Visual Basic 5 has continued this trend. Whether Visual Basic 5 is fully object oriented according to some academic’s definition is irrelevant. However, it is vital to recognize that the only way to build successful systems using Visual Basic 5 is to develop them from an object-oriented design. An object-oriented design can be developed successfully only from an object-oriented analysis. Object-oriented analysis revolves around the identification of business objects. Identifying business objects responsible for data and function eliminates duplication of data and function.</p>
<p>
Using business objects allows you to design incrementally. It also forms a basis for reuse. Using business objects in analysis and design provides traceability and allows the specification to evolve seamlessly by the addition of implementation detail rather than by going through translations from one form of model to another.</p>
<p>
Business objects encapsulate data and function and form a natural basis for identifying business-oriented components. Analysis approaches that separate function and data make it more difficult to build a comprehensive component architecture. You will want to package the classes that are developed into larger components, ActiveX servers. These can be considered large objects. The message is that if you are to adopt Visual Basic 5 successfully, you must adopt object orientation.</p>
<p>
Business objects are inherently traceable to business concepts and requirements. Implementing business objects through Visual Basic 5 class modules carries through this traceability into applications. Using a business-object–based application architecture allows the design and coding of objects to be carried out independently of the design and coding of the application. This allows a large amount of flexibility in developing project plans and is the basis of high levels of reuse.</p>
<h1></h1>
</BODY>
</HTML>
