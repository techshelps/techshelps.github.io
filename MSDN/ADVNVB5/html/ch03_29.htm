<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Reports in Microsoft Access</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="creatingreportsinmicrosoftaccess"></a>Creating Reports in Microsoft Access</h1>
<p>
The report writer provided with Microsoft Access is by far one of the most powerful and flexible report writers around. It does, however, have some major drawbacks:
<ul type=disc>
<li>
A report cannot be separated from an Access MDB file, which means that considerable memory overhead is required to load and display a report.<br><br></li>
<li>
The VBA interface contained within Access 97 and Access 7 allows you to manipulate other Access objects through the <i>Application</i> <br>
object. For example, by using the <i>OpenReport</i> method of the Access <i>DoCmd</i> object, you can open an Access report from Visual Basic 5. The <i>DoCmd</i> object syntax is very similar to the <i>DoCmd</i> statement used in earlier versions of Access. This <i>DoCmd</i> object could use some reworking for the next release of Access to provide a more intuitive object model with improved functionality. Access 2 has no VBA interface, and communication through the use of Dynamic Data Exchange (DDE) is crude and problematic at best. Also bear in mind that DDE is being phased out, and many applications no longer support this method of communication.<br><br></li>
<li>
All reports are based on bound data, which for complex reporting dealing with disparate data can be a problem.<br><br></li>
<li>
Creating reports on the fly within another application is difficult, and the user requires detailed knowledge about designing reports in Access to create a report without assistance.</li>
</ul>
<p>
Knowing these limitations helps us to define a suitable environment for using the Access report writer. In situations in which reports are reasonably well defined and have a common data content, it is easy to create a range of reports within an MDB file based on queries. It is possible to execute the reports from within other applications by using the publicly exposed method <i>OpenReport</i>, which opens a report in a selected view mode (normal, design, or preview). It also allows you to filter by using a query or an SQL WHERE statement without the word WHERE included.</p>
<p>
With the <i>OpenReport</i> method, it is a relatively simple task to wrap Access into an environment familiar to the user and to provide a range of user reports that don’t require any detailed knowledge of Access to create. You’ll also find it relatively easy to build identification into reports so that you can determine which reports should be accessed, depending on your user’s requirement. In this example, I make an obvious assumption that all reports available within the Access database will be based on the same query.</p>
<h1></h1>
</BODY>
</HTML>
