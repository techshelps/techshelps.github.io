<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>When to Use the DAO Layer</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="whentousedaolayer"></a>When to Use the DAO Layer</h1>
<p>
DAO provides a generic layer of functionality. It’s designed to insulate the programmer from the proprietary details of the back-end data source. For example, the following code excerpt will work with any data source, provided this data source has a table named Depts, which has a field named DeptName.</p>
<pre><code>. . .
lstDepts.Clear
Set rsDepts = dbEmployees.OpenRecordset(“Depts”)
Do While Not rsDepts.EOF
    lstDepts.AddItem rsDepts.Fields(“DeptName”).Value
    rsDepts.MoveNext
Loop
rsDepts.Close
. . .</code></pre>
<p>
In the case of ODBC databases, the DAO layer provides the interface to the ODBC API. If the databases are local or client-based, such as Microsoft Access or FoxPro, the DAO layer provides a single interface, via Jet, to the diverse database formats.</p>
<h1></h1>
</BODY>
</HTML>
