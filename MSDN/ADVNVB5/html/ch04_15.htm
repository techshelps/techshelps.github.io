<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving a File with OpenURL</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="retrievingfilewithopenurl"></a>Retrieving a File with <i>OpenURL</i></h1>
<p>
The <i>OpenURL </i>method is used to retrieve a document from an Internet URL and put a copy on a local computer. The URL that is supplied as a parameter to the <i>OpenURL </i>call can be the location of the latest sales figures spreadsheet mentioned previously. In this case, <i>OpenURL </i>will retrieve the spreadsheet from the location specified in the URL and will put a copy on the computer that executed the <i>OpenURL </i>method. All you have to specify is the URL of the document you are requesting, as shown here:</p>
<pre><code>vntData = icMain.OpenURL("ftp://ftp.mycompany.com/public/sales.xls")</code></pre>
<p>
A couple of points about <i>OpenURL</i> are worth mentioning. The <i>OpenURL </i>method occurs synchronously—that is, execution in your code does not continue until the Internet Transfer Control has completed the transfer. If the spreadsheet you were requesting was quite large and you were accessing the Internet via a slow link (say, maybe, from a modem connection in a regional office), retrieving the document might take quite some time. Until the document was received in its entirety, the program would be unable to do anything else.</p>
<p>
Second, transmission is one-way only. <i>OpenURL </i>can receive only documents. In the previous example, you can retrieve the latest sales information with <i>OpenURL</i>, but you don’t have the capability to send any information back. To send information, you must use the <i>Execute </i>method, which is covered in detail later in this chapter.</p>
<p>
The following code example gives an overview of the use of the <i>OpenURL</i> method. (This method is discussed in more detail later.) The code snippet here should give you a good idea about what is involved with using the <i>OpenURL </i>method.</p>
<pre><code>' Retrieve latest software update from ftp.mycompany.com.

Dim bFile() as Byte         ' Retrieving a binary file.

' Retrieve the file.
bFile() = icTransfer.OpenURL _
    ("ftp://ftp.mycompany.com/upgrade/software.exe", _
    icByteArray)

' Write file to disk.
Open "C:\INTERNET\software.exe" For Binary Access Write As #1
Put #1, , bFile()
Close #1</code></pre>
<p>
In this example, the <i>OpenURL </i>method accepts a URL and a data type parameter. This parameter is either a string or a byte array that determines in what format the data will be retrieved.</p>
<p>
If you’re going to write the file to disk, a byte array is all you need. It doesn’t matter whether you are retrieving a text file or an executable—they will both be written to disk in the same format in which they existed on the remote computer.</p>
<p>
However, if you want to display the contents of the file in a text box—say, for instance, if it’s an HTML file or a text file—it’s easier to retrieve the document directly as a string than to have to jump through hoops to convert the byte array to a string.</p>
<p>
What this parameter does mean, however, is that you have to know in advance what type of document you are retrieving and what you want to do with it once you have it.</p>
<h1></h1>
</BODY>
</HTML>
