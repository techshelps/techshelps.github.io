<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pool managers and multiple machine management</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="poolmanagersmultiplemachinemanagement"></a>Pool managers and multiple machine management</h1>
<p>
The pool manager can be designed to manage a pool of objects of a number of object types across more than one physical machine. Several configurations are possible.</p>
<p>
<b>Single machine, mixed-object type pools</b>  In mixed-class, single-machine pools, different pool managers on different server machines manage the same object types, and clients have a default server. If the default server is not available or cannot service a request for an object instance, by dynamically rewriting the client machine’s Registry settings the client application can retry against a pool manager on its second-choice server. (See Figure 2-15.)</p>
<p>
<img src="f02rf15.gif" border=0></p>
<p class=blue>
<b>Figure 2-15  Using a pool manager to manage mixed classes on a single server machine </b></p>
<p>
<i>SetAutoServerSettings</i> on a <i>RegClass</i> object for Remote Automation. <i>Set-DCOMServerSettings</i> and <i>SetNetOLEServerSettings</i> are also available for DCOM settings, but I have yet to locate “gets” for DCOM. (To retrieve Remote Automation settings, use <i>sPuReadAutomationSettings </i>in CHAP02\Listings\Listings.vbp (AutDCOM.Bas) on the companion CD.)</p>
<p class=indent>
<span class=blue><b>Caution</b></span>  Be careful of methods that change Registry Settings: they are not risk-free. Using the first beta of Visual Basic 5 to write to the Registry, I corrupted an unbacked-up Registry—luckily it was on my own test machine rather than on someone else’s.</p>
<p>
This pool configuration means that a pool manager will equate to a server machine and will be managing all ActiveX server instances of whatever class or type is running on that machine. Thus a pool manager will be capable of managing the load on a single server.</p>
<p>
<b>Single-machine, single-object type pools</b>  In single-machine, single-object type pools, requests for different object types are made to different servers. (See Figure 2-16.) </p>
<p>
<img src="f02rf16.gif" border=0></p>
<p class=blue>
<b>Figure 2-16  Pool manager managing one class of object on one server machine </b></p>
<p>
This pool configuration involves either using a lot of calls to change Registry settings or using Registry settings for different server machine pool managers (that is, pool managers that have separate GUIDS on all client machines).</p>
<p>
<b>Multimachine pools</b>  In multimachine pools, the pool manager is on Server One, and all client Registry settings for the pool manager direct them to get pool manager references from Server One. (See Figure 2-17.) The pool manager itself, however, can create different kinds of objects on different machines and manage them as a single logical pool.</p>
<p>
<img src="f02rf17.gif" border=0></p>
<p class=blue>
<b>Figure 2-17  One pool manager used to manage different classes of objects on more than one server machine </b></p>
<h1></h1>
</BODY>
</HTML>
