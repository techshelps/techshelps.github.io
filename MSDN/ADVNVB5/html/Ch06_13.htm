<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>User-definable events (new in Visual Basic 5)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="user-definableevents(newinvisualbasic5)"></a>User-definable events (new in Visual Basic 5)</h1>
<p>
The <i>RaiseEvent </i>statement allows classes to trigger events. You can use this feature to allow background tasks to communicate with foreground tasks, informing them of their progress.</p>
<p>
You can also create nonvisual timer objects that generate events. Since these objects don’t need to be attached to a form, they are now much easier to wrap up into modular, independent classes. And since objects can now raise events, any non–user interface object can be written as a class and doesn’t need to be implemented on a form module.</p>
<p>
Combining this with thread-safe multithreading and ActiveX callbacks allows for the implementation of techniques such as background printing. Previously, you could do this only with lots of smoke-and-mirrors trickery.</p>
<h1></h1>
</BODY>
</HTML>
