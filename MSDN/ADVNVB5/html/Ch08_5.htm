<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Differences</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="thedifferences"></a>The Differences</h1>
<p>
The C2 and C1 as invoked by Visual C++ are passed their input (as shown on page 326) via an environment variable named MSC_CMD_FLAGS, whereas the C2 that comes with Visual Basic 5 is passed its arguments on the command line. In Visual Basic–speak, C2’s arguments are in Command$ rather than in Environ$. (The C program for obtaining this information is shown in Listing 8-2.) However, the fact that C2 is interchangeable between Visual Basic 5 and Visual C++ 5 means that the way variables are passed is not an issue. But when I tried this same test using the C2 of Visual C++ 4.2 with Visual Basic 5, I received an error: 1007. If you look up this error in Visual C++, you’ll see that it means you have an unrecognized flag; so it seems as though we started Visual C++ 4.2’s C2 in Visual Basic 5 with at least one unknown flag, probably -basic. The C2 of Visual C++ 5 does have a -basic flag, which seems Table 8-2 to confirm my suspicion that Visual Basic 5 ships with what is essentially the same C2.EXE as Visual C++ 5.</p>
<p>
If C2.EXE is the same (with some small modifications), it follows that at some future time we might be able to use Visual Basic to generate, just as we can do with Visual C++, binaries for platforms such as Apple’s Power PC, Macintosh, and so on.</p>
<p>
Just before this chapter went to press, Microsoft published the Visual Basic 5 Evaluators Guide. Some interesting references to the Alpha chip seemed to confirm, at least partially, my suspicion about the interchangeable compilers:</p>
<p>
Run-time scalability: “Using version 5.0, developers can use the power of RISC processor architectures with native compiled code for Alpha processors.”</p>
<p>
Cross-platform capabilities: “Using version 5.0, developers can use the power of RISC processor architectures with native compiled code for Alpha applications and components.”</p>
<p>
The system requirements for Visual Basic 5, Enterprise Edition, include a PC with a 486DX/66 MHz or higher processor (Pentium or higher processor recommended), or any Alpha processor running Microsoft Windows NT Workstation.</p>
<p>
Interesting—is Visual Basic for Applications (VBA) destined to become <i>the </i>portable language?</p>
<h1></h1>
</BODY>
</HTML>
