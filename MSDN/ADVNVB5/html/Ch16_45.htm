<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Why Are You Prototyping?</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="whyareyouprototyping"></a>Why Are You Prototyping?</h1>
<p class=indent>
<i>Spend sufficient time confirming the need and the need will disappear.</i></p>
<p class=indent>
<b>Specification Dynamics</b></p>
<p>
Beware of the prototyping trap. If you ask two programmers on the same Visual Basic team what a prototype is, you’re likely to get two different answers. Often the team is unclear whether or not the prototype is a throwaway. Ensure that the term “prototype” is well defined and that everyone (including the users) is familiar with this definition. You might even choose to define different types of prototypes. The big trap is to leave the prototype ill defined. We have seen this lead to much grief on many Visual Basic projects. Prototyping in general has been given a bad name because of frequent misuse.</p>
<p>
Delivering quickly is often the justification for a prototyping approach to development. But without control, the “what” that is delivered usually fails to meet the business needs for robustness and maintainability.</p>
<p>
To be successful, prototyping must have specific goals, such as these:
<ul type=disc>
<li>
Goals to demonstrate feasibility<br><br></li>
<li>
Analysis goals to discover or confirm requirements<br><br></li>
<li>
Design goals to prove the technology or an approach to implementation<br><br></li>
<li>
Implementation goals to evolve a working system with user involvement within a predefined technical architecture</li>
</ul>
<p>
Uncontrolled prototyping, without goals, without a development strategy to produce an application architecture, is doomed. It is hacking with respectability.</p>
<p>
Prototyping can be used at various stages during development. The key principle that will ensure prototyping is used correctly is to precisely define the objectives of the prototype and then ensure that appropriate disciplines are used to deliver these objectives. Rules such as “Prototypes must be thrown away” are unnecessarily restrictive.</p>
<h1></h1>
</BODY>
</HTML>
