<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Computer-Based Training System</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="thecomputer-basedtrainingsystem"></a>The Computer-Based Training System</h1>
<p>
What does it take to produce a CBT system? Well, it is, in effect, two applications: the builder, which is used to produce the CBT details, and the presenter, which is the user interface for the system. For the user interface, you can produce something that does not resemble a Windows application by using the techniques in the previous section, produce a standard MDI application, or produce something in between. Because of the limitations of space for this chapter, the demonstration application will have a nonstandard toolbar, but it will still look like a Windows form. I’m sure that with a bit of thought you’ll be able to take this a step further and produce the look and feel that you require. This is an ideal application for producing your own fully customized interface, using hot spots to activate areas of the interface.</p>
<p>
To be able to make the most of presenter and builder, you need to produce generic functions and facilities so that they can be used by non-IT developers to produce the required CBT titles. This has some advantages and disadvantages that you need to consider before you jump into development. Some aspects can be both advantages and disadvantages, depending on the requirements and how they are viewed.</p>
<h1></h1>
</BODY>
</HTML>
