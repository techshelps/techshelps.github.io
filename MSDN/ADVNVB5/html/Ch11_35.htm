<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Methods of Producing Multimedia Interfaces</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="othermethodsofproducingmultimediainterfaces"></a>Other Methods of Producing Multimedia Interfaces</h1>
<p>
Before we end our discussion of multimedia interfaces, we should touch on a whole new area of multimedia opening up within Windows and Visual Basic 5. Microsoft is spending a large part of its research budget on the Internet, intranets, and associated development tools and browsers in the form of ActiveX documents, DOC objects and the COM model, and the ability to host applications in Microsoft Explorer. This is a very large topic. To cover it fully would require a book in itself. In fact, don’t be surprised to see books appearing on the shelves dedicated to Visual Basic and the Internet. What we’ll do here is take a quick time-out and look at the potential of the new set of emerging standards. Consider what we have done in the previous sections: We have managed to include sound and video in our applications, looked at ways and means of stepping beyond the MDI interface, and activated sound and video by adding hot spots. This is in essence what the new standards and methods are offering us as developers. Currently the scene is changing very rapidly, so it’s difficult to determine exactly what’s possible or what will be possible, but ActiveX documents and the ability to host them in Microsoft Explorer should be watched closely. Take the CBT application, for example. The way that it stands at the moment, you’ll need to produce CDs for your users to use the system. By creating the text in HTML, you get the text-linking that is lacking in the sample application. By setting up the application as an ActiveX document, you can host the application on a Web server and allow your users to access it from many locations, without going into the multimedia facilities available to Web documents.</p>
<p>
For commercial software companies, a version of the CBT system can be used as a marketing technique to show off the functions and capabilities of new software if it is loaded on a publicly available Web site. These facilities are now integrated into the Visual Basic 5 language set, and I’m sure that you will find many applications for the new technology. In fact, Microsoft is looking to move away from the current MDI standard toward the more flexible ActiveX document standard hosted in the Explorer shell.</p>
<h1></h1>
</BODY>
</HTML>
