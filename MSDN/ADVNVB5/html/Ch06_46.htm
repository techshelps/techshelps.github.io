<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String types</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="stringtypes"></a>String types</h1>
<p>
Visual Basic 3’s string type was the HLSTR (High Level String). This consisted of a pointer to a block of memory containing the length of the string and a pointer to the string itself.</p>
<p>
Since Visual Basic 4, the string type has been the BSTR, which is a pointer to the start of the string—the string itself is null-terminated. The string is also immediately preceded in memory by 4 bytes containing the string’s length.</p>
<p>
If you have written or been supplied with a DLL to be used with Visual Basic 3, and if that DLL handed back strings and those strings contained nulls, your DLL might not work with Visual Basic 4 and later versions. Such DLLs still hand back the same string, but Visual Basic 4 treats the null as the terminator for the string, thereby truncating your data at the first null.</p>
<p>
A useful side effect of this change concerns strings used in user-defined types returned from or passed into DLLs. Since these strings are now null-terminated, user-defined types can be declared as follows:</p>
<pre><code>Private Type TOpenFileName
    lStructSize  As Long
    hwndOwner    As Integer
    hInstance    As Integer
    lpstrFilter  As String
. . .
End Type</code></pre>
<h1></h1>
</BODY>
</HTML>
