<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Some Drawbacks of Standards</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="somedrawbacksofstandards"></a>Some Drawbacks of Standards</h1>
<p>
These types of coding standards are worthy and undoubtedly help in team or corporate environments. But they do not by themselves ensure that the code is of high quality.</p>
<p>
Some people use the term “quality” loosely and subjectively, often in an effort to justify their particular point of view. It is necessary to be clear about what you mean by quality. Bertrand Meyer enumerates several key criteria of quality code in his book <i>Object-Oriented Software Construction</i> (Prentice-Hall, 1997). Most important are <i>correctness,</i> <i>robustness,</i> and <i>extensibility</i>. Correctness is the ability of the code to perform to its specification—that is, its behavior in known conditions. Robustness is its behavior in unknown conditions. Extensibility is the ease with which the code can be modified to accommodate new and changed requirements.</p>
<p>
Unfortunately, traditional coding standards don’t measure the extent of any of these quality attributes. It’s perfectly feasible to write some incorrect, flaky, hard-to-modify code that adheres to the coding standards. In fact, writing such code is all too easy.</p>
<p>
After all that building up, you might think that I’m about to reveal some magic ingredient that will instantly render all your code fabulously elegant and guaranteed bug free. I’m afraid not. What I will talk about are some rules that I treat as coding standards, which, together with the new object-oriented features of Visual Basic 5, take me a bit further in the right direction.</p>
<h1></h1>
</BODY>
</HTML>
