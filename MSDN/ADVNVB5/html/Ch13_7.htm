<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DAO</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="dao"></a>DAO</h1>
<p>
In this section, we’ll investigate DAO. We’ll see how DAO is intimately linked to Jet, Microsoft’s desktop database engine, and how Jet’s architecture can affect the performance of DAO. We’ll look at some ways that this performance can be improved.</p>
<p>
First of all, let’s take a look at the relationship among the components we are going to cover to help you better understand the discussion that follows. If you look at Figure 13-1, you can see that the architecture is a layered one, with each component linked to the components above and below it. If you were to draw a vertical line through the diagram at any point, you’d be able to see the layers that the particular database access method uses. So for example, an application written using Visual Basic 5 can use DAO, which in turn relies on Jet, which in turn uses either ODBC or built-in ISAM to manipulate a database. What this means is that if you use DAO, it’s possible for you to use exactly the same code to build a database application that uses a local Access database or that uses a remote SQL Server database.</p>
<p>
<img src="f13rf01.gif" border=0></p>
<p class=blue>
<b>Figure 13-1  Visual Basic 5 data access architecture</b></p>
<h1></h1>
</BODY>
</HTML>
