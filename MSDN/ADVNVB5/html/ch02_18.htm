<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Benefits of a nice clean pool</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="benefitsofnicecleanpool"></a>Benefits of a nice clean pool</h1>
<p>
Using a pool, you can avoid the performance cost of ActiveX server creation for each client request since the pool would typically be created and restocked before a client needed a server; so when the clients request an object, it is already instantiated. You can manage server machine resources so that you don’t create more business server processes on your server machine than its hardware can handle—again, a real possibility. Depending on your code, an algorithm based on the frequency of client requests, the potential number of clients, and the duration of server tasks can be used to derive the pool size to be created (or even adjusted, according to demand). The aim is that the pool should be significantly smaller than a one-to-one allocation of servers to clients, which means we’re going to keep down the resource consumption. Users being the cantankerous and uncaring beasts they are, we can’t realistically expect them to perfectly space their service requests, so we have to be prepared for both peaks and valleys of service. However, if we can keep down the connection time of a client to an object, we can expect that a pool size of perhaps 10 ActiveX servers could meet the normal needs of 100 clients. The pool manager will limit the number of servers of a specific type that can be created to a threshold that has been determined by the server administrator. So by restricting the number of server object processes running on it, we can avoid bringing our server machine to a grinding halt. This can be a very useful tuning parameter.</p>
<h1></h1>
</BODY>
</HTML>
