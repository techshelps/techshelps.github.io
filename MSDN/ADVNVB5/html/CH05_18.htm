<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rule 3: Do Not Pass Function Parameters by Reference</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="rule3donotpassfunctionparametersbyreference"></a>Rule 3: Do Not Pass Function Parameters by Reference</h1>
<p>
I use this rule to force myself not to be lazy when defining functions (In this instance, I use the term <i>function</i> in its most generic sense. Hence, this chapter applies to both functions and subroutines, as well as to property procedures and anything else that takes parameters). Passing parameters by reference is a sign that I’m getting lazy, and the alarm bells start to ring. Passing parameters by reference is indicative of bad design, as I’ll explain, but there are some lesser reasons not to pass parameters by reference that have to do with introducing bugs, as I’ll also mention.</p>
<h1></h1>
</BODY>
</HTML>
