<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Improved Add-In model</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="improvedadd-inmodel"></a>Improved Add-In model</h1>
<p>
Although the Add-In model in Visual Basic 4 was a great boon, it lacked important capabilities. There was no way to move between modules within a project, although you could send keystrokes to the project window. There was no access to the code in modules. Again, you could work around this either by using the <i>InsertFile </i>method on the <i>Component </i>or <i>FormTemplate </i>objects to add code immediately after the declarations section or by directly manipulating the text files and then reloading them. However, you can modify Visual Basic 5 to work the way you want it to; you can enforce corporate styles, add comment templates, and add standard error handlers. Or you can specify your ideal development environment and then build it by writing add-ins and modifying the IDE with personalized toolbars.</p>
<h1></h1>
</BODY>
</HTML>
