<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Now Build Your System</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="nowbuildyoursystem"></a>Now Build Your System</h1>
<p>
When they come to you and say,<i> </i>“That Visual Basic builds remote server applications now, doesn’t it? So it won’t be any trouble for you to throw together a system to …” try to give them an idea of the architecture and design work and the planning and implementing of an infrastructure that has to be put in to build a cooperative distributed system of business objects. I have attempted to lay out such a system in this chapter. We all need to be aware that there’s more to it than just taking some functionality and splitting it up into a few bits. Unfortunately, if you want to make scalable applications with Visual Basic, your objects have to be structured to support them; you also have to do some of that thinking stuff and a little bit of experimentation.</p>
<p>
With regard to the experimentation, I have included some of my own experiments as code on the companion CD. They each come with their own README.TXT files that explain what you have to do and what each experiment intends to prove. If you want to do larger, more real-world experiments, the APE that ships with Visual Basic 5 Enterprise and Professional Editions is an excellent place to start and is well worth taking the trouble to come to grips with so that you can customize it successfully. Good luck, and happy remote instantiation.</p>
</BODY>
</HTML>
