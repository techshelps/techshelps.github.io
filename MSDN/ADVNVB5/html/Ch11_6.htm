<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Where to use a spoken help system</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="wheretousespokenhelpsystem"></a>Where to use a spoken help system</h1>
<p>
You’ll find that incorporating a spoken help system is easy and useful when applied correctly. Probably the area in which spoken help can be most useful is in helping the user become familiar with the user interface. How many times have you loaded a new application only to be overwhelmed by a huge array of tools, menus, and buttons? (Even Visual Basic 5 is guilty of this.) To make matters worse, you might be familiar with some of these elements, but you now find that they don’t do what you expected. The ToolTips help, and some applications also have help text displayed in the status bar. Furthermore, the first thing that many users do when they get new software is rip off the wrapper, load it, and start to play with it. All the wonderful manuals and the superb user guides that you’ve painstakingly written remain in the box unopened and are later filed on the shelves to gather dust. Wouldn’t it be great if someone could briefly explain what that new widget you’re dying to try is actually supposed to do?</p>
<p>
As you might have guessed, this is where spoken help not only will get your users over the usual teething troubles they experience when using new software, but it’ll also impress them with your attention to detail.</p>
<h1></h1>
</BODY>
</HTML>
