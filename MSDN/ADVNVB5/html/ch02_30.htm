<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Microsoft Transaction Server Model</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="microsofttransactionservermodel"></a>Microsoft Transaction Server Model</h1>
<p>
It would be criminal indeed if I didn’t mention this. I’m not going to go into it in any depth, however, partly because it would more than occupy this whole chapter to do it justice and partly because I have never deployed Microsoft Transaction Server (except on an in-house network, which doesn’t represent a good scalability test). The facilities of Transaction Server (code name, Viper) are at least a partial match for the requirements you might have for a pool manager and an infrastructure to support distributed object systems written using Visual Basic. In fact, Transaction Server provides more, since it covers these areas as well:
<ul type=disc>
<li>
Just-in-time instantiation of components—it wants things provided to it as ActiveX DLLs<br><br></li>
<li>
Component packaging and deployment of systems<br><br></li>
<li>
Thread and process management<br><br></li>
<li>
Database connection pooling<br><br></li>
<li>
A mechanism for sharing data among components<br><br></li>
<li>
A very small amount of code in your components to call Transaction Server’s methods</li>
</ul>
<p>
Figure 2-24 shows Transaction Server’s model for a distributed, tiered application.</p>
<p>
<img src="f02rf24.gif" border=0></p>
<p class=blue>
<b>Figure 2-24  The Microsoft Transaction Server model for a distributed, tiered application </b></p>
<p>
There! I said I would mention it! If you’re using Visual Basic to create distributed applications, you really have to look at this product. Transaction Server will radically reduce the infrastructure effort you have to make to deploy distributed applications with Visual Basic.</p>
<h1></h1>
</BODY>
</HTML>
