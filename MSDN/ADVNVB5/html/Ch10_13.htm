<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Create Regular Builds</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="createregularbuilds"></a>Create Regular Builds</h1>
<p>
I have always been a fan of regular system builds. They force the development team to keep things tidy. If everybody knows that whatever they are doing is going to have to cooperate with other parts of the system every Friday (for example), it is less likely that horrendously buggy bits of half-completed code will be left in limbo for so long that the developer who wrote it cannot remember why he or she was doing it the way that it was done. See?</p>
<p>
If I’m writing a set of remote ActiveX servers, I will generally try to have a new build ready each Monday morning for the other developers to use. If I’m working on a large GUI-based system, I would probably look more toward a build every other week. If you are in a team development, all team members should discuss the timing of new builds at the beginning of the coding cycle so that you can obtain a group consensus as to what would be the best policy for your particular project. You will inevitably get slippages, and you might well decide to skip the occasional build while certain issues are resolved, but overall it will allow everybody to get a feel for how the project is shaping up.</p>
<h1></h1>
</BODY>
</HTML>
