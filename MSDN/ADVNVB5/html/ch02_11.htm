<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Get an Infrastructure If You Want a Life</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="getinfrastructureifyouwantlife"></a>Get an Infrastructure If You Want a Life</h1>
<p>
So why an infrastructure exactly? It is always a false economy in any significant system to do without an architecture—and who wants to work on insignificant systems? Let’s look at some application models. I’m going to start at base level and work up, so please excuse the first few; even if you find them trivial and straightforward, they are the bases of the whole thing, and I want to be sure we all understand the foundation.</p>
<h1></h1>
</BODY>
</HTML>
