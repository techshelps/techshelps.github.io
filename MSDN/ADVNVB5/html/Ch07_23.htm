<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging windows</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="debuggingwindows"></a>Debugging windows</h1>
<p>
Visual Basic 5’s source-level debugger has some improvements over the Visual Basic 4 version. Instead of having just a single Debug window, you now have three debugging windows as part of the IDE:
<ul type=disc>
<li>
The Immediate window is a drop-in replacement of the old Debug window, with all the familiar abilities such as being able to execute single-line statements or subroutines.<br><br></li>
<li>
The Locals window is rather cool. It displays the name, value, and data type of each variable declared in the current procedure. It can also show properties. You can change the value of any variable or property merely by clicking on it and then typing the new value. This can save a lot of time during debugging.<br><br></li>
<li>
The Watches window also saves you some time, allowing you to watch a variable’s value without having to type any statements into the Immediate window. You can easily edit the value of any Watch expression you’ve set or the Watch expression itself by clicking on it, just as you can in the Locals window.</li>
</ul>
<h1></h1>
</BODY>
</HTML>
