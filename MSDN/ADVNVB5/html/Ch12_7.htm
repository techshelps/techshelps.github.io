<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>rdoResultsets</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="rdoresultsets"></a>rdoResultsets</h1>
<p>
rdoResultsets are rows of data contained in columns. They are like DAO recordsets, but with some significant differences. rdoResultsets can contain more than one set of records with different columns in each set. There are no <i>FindFirst</i>, <i>FindNext</i>, or<i> FindPrevious </i>methods. Updates to the resultset can be batched together and sent back to the server in one operation. rdoResultsets can be opened asynchronously, which allows the client application to get on with something else while the server is busy. And there are several events that fire when data is ready or when a resultset is associated with (or dissociated from) an rdoConnection.</p>
<p>
You can open an rdoResultset from either an rdoConnection or an rdoQuery. If you use an rdoConnection as the basis for the resultset, you then, of course, have to supply an SQL command. An rdoQuery, on the other hand, contains the SQL command that is to be executed, as you see here:</p>
<pre><code>Set&nbsp;rsLogins&nbsp;=&nbsp;conPiConnection.OpenResultset(strSQL,&nbsp;_
&nbsp;&nbsp;&nbsp;&nbsp;rdOpenForwardOnly,&nbsp;rdConcurReadOnly,&nbsp;rdExecDirect)
Set&nbsp;rsUsers&nbsp;=&nbsp;qryUsers.OpenResultset(rdOpenKeyset,&nbsp;_&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;rdConcurLock,&nbsp;rdAsyncEnable)</code></pre>
<p>
The parameters on the <i>OpenResultset </i>method are the SQL command (for opening from a connection), the type of cursor, the type of locking (also known as concurrency—hence, the values all start with rdConcur), and the options for asynchronous or direct execution. Not all of the possible parameter combinations make sense or are supported. For example, it doesn’t make sense to use rdOpenKeyset with rdConcurReadOnly. One of the points about a KeySet cursor is that it is updatable. If you wanted a read-only, scrollable cursor, you would use rdOpenStatic instead of rdOpenKeyset. Some options might not be available because of the limitations of the back-end database or the ODBC driver. The cursor type and locking parameters must be chosen very carefully for every query and resultset you create.</p>
<h1></h1>
</BODY>
</HTML>
