<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Risk Management</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="riskmanagement"></a>Risk Management</h1>
<p class=indent>
<i>I don’t want the cheese, I just want to get out of the trap.</i></p>
<p class=indent>
<b>Spanish proverb</b></p>
<p>
Risk is multidimensional, involving business, technical, and people risks that must be managed within the context of the development project’s architecture, analysis, design, and implementation phases. (See Figure 16-1.) These risks affect the whole project life cycle. In this section, we’ll focus on the technical risks that the introduction of Visual Basic 5 brings.</p>
<p>
<img src="f16rf01.gif" border=0></p>
<p class=blue>
<b>Figure 16-1  Risk management is central to successful system development. </b></p>
<p>
Traditionally, project managers have three major objectives: deliver on time, stick to budget, and create a system that fits its intended purpose. To manage the risks inherent in Visual Basic 5 client/server development, project managers must be aware of business needs, be technically competent and customer focused, and be great team leaders. This kind of development—with its integration of differing, fast-changing components and technologies—has such a high level of risk that some might say only the foolhardy would attempt it! Given such extreme risks, a risk-management strategy is fundamental to successful delivery.</p>
<p>
A key factor in heading off problems is moving the technical risks to the beginning of a large project and handling them there. Often, major risks are not addressed until the system test or live running, settings in which the costs of rework or failure are substantially higher. Dealing with the risks early provides a forum for discussing how the project will work and allows broader issues to be addressed. Think of this early technical review as a form of insurance.</p>
<p>
Some crucial issues need to be addressed in managing risk: the technical infrastructure, the business environment, and change management.</p>
<h1></h1>
</BODY>
</HTML>
