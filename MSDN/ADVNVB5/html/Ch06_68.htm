<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Move Common Functionality to Visual Basic 5 ActiveX/OCX Controls</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="movecommonfunctionalitytovisualbasic5activexocxcontrols"></a>Move Common Functionality to Visual Basic 5 ActiveX/OCX Controls</h1>
<p>
Since Visual Basic 5 allows the easy creation of ActiveX controls, it is possible to convert parts of your 32-bit Visual Basic 4 program to Visual Basic 5 ActiveX controls and then use these controls from within 32-bit Visual Basic 4. However, given the ease with which 32-bit Visual Basic 4 programs can be ported to Visual Basic 5, this doesn’t seem worth the effort. However, this strategy may be useful if you haven’t yet gotten a copy of Visual Basic 5 since the Control Creation Edition can be downloaded for free at any time from <i>www.microsoft.com</i>. Using this, you can write ActiveX controls that can be used in any ActiveX host environment (Visual Basic 4, Access 7, and so on), and you can gain useful experience with the new Visual Basic 5 design environment. These ActiveX controls can be packaged in thin 32-bit Visual Basic wrappers, compiled as ActiveX EXE servers, and used from Visual Basic 3 and 16-bit Visual Basic 4.</p>
<h1></h1>
</BODY>
</HTML>
