<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Insist on Great Project Management</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="insistongreatprojectmanagement"></a>Insist on Great Project Management</h1>
<p class=indent>
<i>Misfortunes always come in by a door that has been left open for them.</i></p>
<p class=indent>
<b>Anonymous</b></p>
<p>
Effective project management is critical to the success of Visual Basic development projects. Strong project management can lead to success even in difficult circumstances. Weak project management can result in failure when success is there for the taking. In the Visual Basic world, many good project managers seem to have mentally wandered off, neglecting their professional responsibilities. The most basic disciplines such as planning, phasing, tracking, change management, and milestone setting seem to have been forgotten. Project managers seem to be sucked into a way of working that in their heart-of-hearts they know is wrong—but they do it anyway.<b> </b>The best project managers are prepared to put their jobs on the line to do what’s right. They realize that their job is at risk anyway. Even the best project managers will be seen to be at fault by someone whatever the outcome of the project, so why not do the job the right way from the start? <i>It is essential that proper, disciplined project management occur within every Visual Basic 5 team.</i></p>
<p>
Visual Basic project managers are typically not technical enough. Project managers cannot lead effectively unless they have credibility within the team and are able to discuss critical design issues. Many of the project managers we speak to don’t know, for example, what system resources are or what MDI is even though their team is being forced to code a complex finite state machine as a result of this interface style being chosen.</p>
<p>
When we ask a project manager why a substandard Visual Basic application has been released, we normally hear something along the lines of, “The business demanded it quickly,” “Our competitors have one, so we had to have one,” “We’ll use it now and fix it later,” “The users expect it now,” or “The users are already using it, so we can’t withdraw it.” The poor management of user expectations and requirements is to blame for much of Visual Basic’s bad press. All too often, a manager will allow a program to go live because he or she has failed to adequately manage the expectations of the users (or perhaps of the senior managers).</p>
<p>
Visual Basic 5 offers the opportunity to produce component-based solutions. Managing a project of clients and servers in which you do parallel development by using a defined interface (building stubs and then filling them with real functionality) works up to a point; the difficulty comes on the human side. Parallel development requires a high degree of flexibility and interaction from all members of the team. Developers, especially inexperienced ones, or people who haven’t been on a team before find the personal-contract nature of this type of development difficult and would prefer to be told what to do in what order and by what date rather than to make personal, flexible “contracts” with team members. The only way to pull off a parallel development project is with the following ingredients:
<ul type=disc>
<li>
A great deal of project management effort (micromanaging)<br><br></li>
<li>
A highly cooperative, established team<br><br></li>
<li>
Long lags and leads</li>
</ul>
<p>
The difficulties compound because of the tendency to fiddle (and think you can) with declared object interfaces after they are defined.</p>
<p>
On the technical front, beware of technical customers—they’ll continually want to revisit the design without ever recognizing the impact of this dabbling on the project. Also, even with small teams, on a highly technical project in which people take responsibility for certain areas, the project manager will have trouble keeping on top of the day-to-day technical details. The best way for the project manager to keep track of the details is to delegate responsibility and require written notification (e-mail works well) of how things are progressing.</p>
<h1></h1>
</BODY>
</HTML>
