<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Some advantages</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="someadvantages"></a>Some advantages</h1>
<p>
By producing a generic CBT system, you can use resources other than your IT developers, who may well be among your most expensive resources. This may be especially useful for large rollouts, where more formal training will occur. By using the trainers who will undertake the formal user training, you can kill two birds with one stone. The trainers will become familiar with the application as they build the CBT course, and they will then be able to tailor the formal training to fit in with the course that they have designed. The other main advantage is that a generic system can be reused for other application rollouts. Of course, some tweaking may well be required to provide extra functionality, but in essence you will not need to undertake any further development.</p>
<h1></h1>
</BODY>
</HTML>
