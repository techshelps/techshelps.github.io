<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Choose a Method</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="choosemethod"></a>Choose a Method</h1>
<p>
Off-the-shelf development methods are often static prescriptions for “how-to” development; more fluid guidelines and a toolkit of techniques might be more appropriate. However, switching to new methodology entails high costs of adjustment. A better approach is to combine the best of existing practices and standards with the newer techniques to evolve an adaptable in-house Visual Basic 5 client/server development method. The key to a successful method is to manage risk while allowing development to proceed rapidly.</p>
<p>
A desire for quality and technical purity encourages a rigorous approach to development. Methods such as SSADM (Structured Systems Analysis and Design Method) promote rigor and tend to be used with a waterfall life cycle. This approach works in traditional environments with skilled project managers. In unskilled hands, the level of rigor tends to be too high. When unplanned backtracking also occurs, costs soar and schedules slip. To counter this excessive rigor, iterative rapid application development (RAD) approaches are used. These often produce solutions with short lifetimes because they lack the framework more rigorous approaches provide.</p>
<p>
Successful users of prototyping and rigorous methods have concluded that no one approach has all the answers. Controlling the development and project management processes is critical to the successful delivery of a system. Design requires high-quality management and good technicians. Controlled RAD applies rigor where necessary, and prototyping for specific goals can accelerate the development process. It allows you to balance the needs of the business, the limitations of a technical infrastructure, and the desire to deliver quickly.</p>
<p>
As illustrated in Figure 16-4, a solid component-based architecture and reusable design patterns allow development activities to be carried out in parallel without compromising design quality. Development phases can be decoupled and development speeded up.</p>
<p>
<img src="f16rf04.gif" border=0></p>
<p class=blue>
<b>Figure 16-4  Decoupling the development process </b></p>
<p>
Rapid development is often thought unsuitable for applications in which the design is not visible at the user interface. Using business objects allows design to be taken out of the RAD life cycle. In simple terms, the RAD life cycle then consists of prototyping and gluing together business objects. Business objects, design patterns, and architecture are the key components that capture the design and enable RAD to take place.</p>
<p>
ActiveX is Microsoft’s component strategy and the core of Visual Basic 5. The new features in Visual Basic for enabling reuse provide a basis for developing a pattern- and component-based architecture.</p>
<p>
A critical prerequisite for carrying out controlled RAD is that the main risks are understood and minimized. In taking on the newest version, version 5, of Visual Basic, a new set of risks have been created. Your first Visual Basic 5 project will not be a RAD project, whatever your intention—it will be a learning experience.</p>
<p class=indent>
<span class=blue><b>Note</b></span>   For a full discussion of methods, refer to Appendix E. This appendix includes a discussion of both the Microsoft Solutions Framework (MSF) and the Dynamic Systems Development Method (DSDM). These have both overlapping and contrasting approaches to those presented in this chapter.</p>
<h1></h1>
</BODY>
</HTML>
