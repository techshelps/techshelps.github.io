<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Moving from 32-Bit Visual Basic 4 to Visual Basic 5</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="movingfrom32-bitvisualbasic4tovisualbasic5"></a>Moving from 32-Bit Visual Basic 4 to Visual Basic 5</h1>
<p>
Visual Basic 5’s relationship to 32-bit Visual Basic 4 is a bit like Visual Basic 3’s relationship to Visual Basic 2—a good product that got even better. In Visual Basic 3, the changes were mainly the addition of databases and bound controls. In Visual Basic 5, the changes are improved performance, native code compilation, control creation, and lots of other ActiveX technology. These changes, however, have little or no effect on an existing project written in 32-bit Visual Basic 4 because 32-bit Visual Basic 4 would not have used them. Containment classes written in Visual Basic 4 can now be migrated to true ActiveX controls in Visual Basic 5.</p>
<h1></h1>
</BODY>
</HTML>
