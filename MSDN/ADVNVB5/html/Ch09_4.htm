<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>What Should I Do, and When Should I Do It?</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="whatshouldidowhenshouldidoit"></a>What Should I Do, and When Should I Do It?</h1>
<p>
Having reached this point, I’m assuming that you acknowledge the Year 2000 issue coupled with Visual Basic applications as a realistic potential problem and that you’re wondering what your next step should be. Besides asking, “What should I do?” you also need to rephrase the question and ask, “When should I do it?” In all truthfulness, it’s probably too late already. If you make a good start soon, however, you might be able to catch up.</p>
<p>
Don’t panic if you haven’t started yet—but don’t delay either. Start planning your Year 2000 conversion <i>now!</i> To begin, think about the projects in your company. How many have actually been delivered on time and within budget? My guess is that more of your projects have missed their deadlines than have achieved them. With this reality in mind, perhaps you should consider performing a risk assessment exercise to prioritize your applications, starting with the applications that are fundamental to your company and working down from there.</p>
<p>
One factor critical to the success of your conversion efforts is the availability of information systems (IS) personnel. Some sources predict that near the end of the century, the number of people available for technical positions will be very low. If every company that takes the Y2K issue seriously is working at the same time to address the problem, your company won’t exactly find an abundant pool from which to choose highly skilled staff. If your Visual Basic applications handle dates of any kind, delaying your conversion project could prove to be your biggest—and last—mistake!</p>
<p>
Simply modifying the code in your applications is just one step. You should also consider the other tasks that will impact your IS department’s workload, including developing test scripts, program specifications, user documentation, help files, databases, flat files, and so on.</p>
<p>
Think about the conversion realistically. At the moment, how long does it take to implement a major change in your current system? Exactly! The impact of the Y2K conversion project on your business will not be trivial. Application changes need to be designed, coded, tested, and implemented. All of this activity will strain your company’s resources. Finding the right people for the job (if you can) will take time.</p>
<p>
Depending on the nature of your business, you might hit the Y2K problem well before the end of the century. If your company deals with long-term data such as insurance, mortgages, and so on, you might have already experienced difficulties. So don’t imagine that starting your conversion in the middle of 1999 will give you enough time to fix your Visual Basic applications.</p>
<h1></h1>
</BODY>
</HTML>
