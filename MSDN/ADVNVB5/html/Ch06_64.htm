<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differing Strategies for Conversion to Visual Basic 5</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="differingstrategiesforconversiontovisualbasic5"></a>Differing Strategies for Conversion to Visual Basic 5</h1>
<p>
Real-world Visual Basic projects are rarely a single program. Given plenty of resources and no other work, we could convert all our programmers to Visual Basic 5 the day the eagerly awaited installation CD arrived. After a short period of learning about the new features, we could convert all our programs to use Visual Basic 5 and implement lots of new code to take advantage of all the new features. There is one intractable problem with this strategy: users still want systems delivered on time and under budget.</p>
<h1></h1>
</BODY>
</HTML>
