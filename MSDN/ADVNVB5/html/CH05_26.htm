<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rule 4: Do Not Use First-Class Data Types--Use Variants</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="rule4donotusefirst-classdatatypesusevariants"></a>Rule 4: Do Not Use First-Class Data Types—Use Variants</h1>
<p>
Rule 4 states that you should not declare any variables to be first-class data types—that is, integer, long, single, double, byte, date, string, Boolean, or currency. Instead, you should declare only Variants. To implement this would be a big step for many Visual Basic programmers and is certainly at odds with the conventional wisdom. Let’s start off by discussing some of the reasons why a lot of the current thinking insists that Variants are <i>bad</i> things and should be avoided.</p>
<p>
First let’s take a quick overview of Variants.</p>
<h1></h1>
</BODY>
</HTML>
