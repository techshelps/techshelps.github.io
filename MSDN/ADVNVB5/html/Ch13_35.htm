<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Two-Phase Commit</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="two-phasecommit"></a>Two-Phase Commit</h1>
<p>
A two-phase commit service allows an application to coordinate updates among multiple SQL servers. This implementation of distributed transactions treats transactions on separate SQL servers as a single transaction. The service uses one SQL server as the commit server, the record keeper that helps the application determine whether to commit or to roll back transactions, which means that either all databases on the participating servers are updated or that none are.</p>
<p>
A distributed transaction submits Transact-SQL statements to SQL servers through DB-Library functions. An application opens a session with each server, executes the update commands, and then prepares to commit the transaction. Through DB-Library, the application sends the following statements to each participating server:
<ul type=disc>
<li>
A <i>BEGIN TRANSACTION </i>statement that includes identifying information about the application, the transaction, and the commit server<br><br></li>
<li>
Transact-SQL update statements<br><br></li>
<li>
A <i>PREPARE TRANSACTION </i>statement, which indicates the updates have been performed and the server is prepared to commit (This statement can’t be used outside the context of DB-Library.)</li>
</ul>
<p>
After all servers participating in the distributed transaction have been updated, the two-phase commit begins:
<ol>
<li>
All servers agree that they are ready to commit.<br><br></li>
<li>
All servers commit—that is, a <i>COMMIT TRANSACTION </i>statement is sent to all servers.</li>
</ol>
<p>
The application then tells the commit server that the transaction is complete, and the connections are closed. If an error occurs between phase one and phase two, all servers coordinate with the commit server to determine whether the transaction should be committed or canceled.</p>
<h1></h1>
</BODY>
</HTML>
