<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RDO vs. DAO</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="rdovs.dao"></a>RDO vs. DAO</h1>
<p>
Basically, you can use the RDO in a way that is similar to the way you use the Jet database engine DAO. With RDO, you can submit queries, create a resultset or a cursor, and process the results from the query using database-independent, object-oriented code.</p>
<p>
Some of the objects have different names that reflect the underlying ODBC API. For example, the DAO <i>Workspace </i>object provides capabilities that are similar to the <i>rdoEnvironment </i>object, and the DAO <i>Database </i>object is replaced by the <i>rdoConnection </i>object. In many ways, the RDO and DAO object models are similar in function and operation. However, there are significant differences that are a result of RDO being more tightly coupled to ODBC and of RDO being oriented to client/server databases rather than to desktop databases.</p>
<p>
Jet’s table-type <i>Recordset </i>object permits direct access to an entire table using a selected ISAM index. Although you can simulate this with RDO, it requires the creation of a cursor that spans the entire table, which is generally impractical. The DAO and Jet model also provides the ability to create a forward-only–scrolling, snapshot-type recordset. This option is similar to an RDO forward-only resultset except that the forward-only <i>rdoResultset </i>can be updatable.</p>
<p>
RDO refers to rows instead of records and to columns instead of fields (rows and columns are the generally accepted terms used for relational databases). The data returned from an RDO query is in the form of resultsets, which can contain zero or more data rows composed of one or more columns.</p>
<p>
Some DAO objects, methods, and properties are designed to implement and support the ISAM structure of Jet and installable ISAM databases. For example, you can use the <i>Index </i>object and the <i>Seek </i>method to manage ISAM indexes and locate rows based on these indexes. But because the RDO and relational databases manage indexes in an entirely different manner, it isn’t possible to implement these ISAM structure DAO objects in RDO.</p>
<p>
Jet also supports the creation and modification of the database schema through DAO methods and properties. RDO doesn’t support any type of schema modification because such modification is fully supported in the tools and utilities provided with the server systems. But in RDO you can still run make-table queries or execute action queries that create, modify, or delete databases and tables using native SQL statements. You can also execute complex stored procedures that manage the database schema or perform maintenance operations that aren’t possible to perform with DAO.</p>
<h1></h1>
</BODY>
</HTML>
