<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Memory Doesn't Matter</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="memorydoesntmatter"></a>Memory Doesn’t Matter</h1>
<p>
A Variant data type takes up 16 bytes of memory and is structured as shown in Figure 5-1.</p>
<p>
A common argument against Variants is that they take up more memory than do other data types. In place of an integer, which normally takes just 2 bytes of memory, a Variant of 16 bytes is taking eight times more space. The ratio is less, of course, for other underlying types, but the Variant always contains some wasted space.</p>
<p>
The question is, as with the issue of performance discussed in the previous section, how significant is this? Again, I think not very. If your program has some extremely large arrays—say, tens of thousands of integers—an argument could be made to allow integers to be used. But they are the exception. All your normal variables in any given program are going to make no perceptible difference whether they are Variants or not.</p>
<p>
I’m not saying that using Variants improves performance or memory. It doesn’t. What I’m saying is that the effect Variants have is not a big deal—at least, not a big enough deal to outweigh the reasons for using them.</p>
<p>
<img src="f05rf01.gif" border=0></p>
<p class=blue>
<b>Figure 5-1  The structure of a Variant </b></p>
<h1></h1>
</BODY>
</HTML>
