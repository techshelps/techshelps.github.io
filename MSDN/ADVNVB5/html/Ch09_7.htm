<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Getting the Ball Rolling</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="gettingballrolling"></a>Getting the Ball Rolling</h1>
<p>
Having covered the personal motivation factor, let’s turn next to the issue of getting the project started. To begin with, you need to alert your superiors to this problem using the normal chain of command. If the powers that be are unwilling to accept the problem as realistic, your task changes to one of converting the nonbelievers. This could be a daunting task. The Year 2000 problem will drain the resources of even the largest company; the problem is far from straightforward. Worse still, nobody wants to explain to senior management that this project will cost millions of dollars and have no perceived benefit to the company other than keeping it alive!</p>
<p>
One statistic that might do the trick comes from the Gartner research group and states, “Enterprises that delay dealing with the Y2K crisis in user-developed applications will see up to 60 percent of those applications fail or deliver erroneous results by the year 2000 (0.9 probability).”</p>
<p>
If statistics don’t help, there can be no more persuasive argument than actual proof. Why not build a very small applet that accepts and processes date values. Enter dates with two digits for the year (similar to what we did in the previous example), and show the results to your superiors. Build an example that clearly demonstrates how a noncompliant Visual Basic application could influence the running of your company’s business.</p>
<p>
If management still isn’t convinced, find an actual Y2K bug in the source code of an existing Visual Basic application within your organization. Change the system dates or input date data to create a Y2K error. Run the application with your superiors watching. If this demonstration doesn’t convince them of the seriousness of the issue, I’m afraid very little else will.</p>
<p>
One other argument your superiors might listen to is the potential legal implications of an application failing because of a Y2K bug. Some cynics have suggested that the whole Y2K thing is nothing more than a gigantic money spinner for consultants, vendors, and the like. Although I disagree strongly with this opinion (Y2K is a real problem, believe it!), I can see one sector that will definitely jump on the bandwagon when investors start to lose money by the bucket load. You can bet your bottom dollar that the lawyers will be hot on the heels of any company that fails to ensure against a major catastrophe by not checking its mission-critical applications for Y2K compliance.</p>
<p>
If a bank goes down because of crippled computer systems caused by the Y2K bug, who will be to blame? In past failures, it has been fashionable to fire the project manager and be done with it. Because of the possibility of immense losses, however, some industry analysts have suggested that laws will be changed in the future to punish the management of companies that neglected to take any action to fix a problem that was considered common knowledge. Companies will not be allowed to claim ignorance. The Y2K problem is receiving more and more media coverage every day.</p>
<p>
If none of the preceding suggestions get your managers’ attention, as a last resort, go for the satirical approach. Attach the following list in strategic locations around your office.</p>
<h1></h1>
</BODY>
</HTML>
