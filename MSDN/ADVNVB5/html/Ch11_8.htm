<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating the spoken help system</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="creatingspokenhelpsystem"></a>Creating the spoken help system</h1>
<p>
For the sample application, we’ll hold the WAV file details in a resource file, which will be compiled using the resource compiler that ships with Visual Basic 5. Because we’re interested only in how the spoken help system works, we’ll use a skeleton MDI system to illustrate its uses, as shown in Figure 11-1.</p>
<p>
<img src="f11rf01.gif" border=0></p>
<p class=blue>
<b>Figure 11-1  A spoken help application</b></p>
<p>
Let’s take a look at the project itself. We won’t be going through all the code—you’ll find that on the companion CD to this book as SpkHelp.vbp. Code that we aren’t interested in for the purposes of the discussion here, such as error handling and validation, is not included in this book but is on the CD.</p>
<p>
As you can see in Figure 11-1, the application is a software catalog viewer. This type of application likely will be shipped to the general public, so you need to make it very user-friendly and minimize the amount of work required to support it. Because this type of catalog is usually shipped free, it probably won’t be accompanied by any written help beyond how to load the application. This is an ideal application for a spoken help system.</p>
<p>
After the application is written, you need to record the WAV files and then produce the resource file. At this time, you might want to consider how best to structure your files. For a large multimedia project, it is not really sensible to store all the files in the root directory, so some form of organization is required. This is the approach taken throughout the chapter—all of the multimedia files are stored below the application path. If you move the files when copying them from the CD, please be aware that you might have to alter the paths either in the code or in the following resource file.</p>
<h1></h1>
</BODY>
</HTML>
