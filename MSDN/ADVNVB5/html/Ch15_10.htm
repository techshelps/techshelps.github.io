<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Cost benefits of object reuse</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="costbenefitsofobjectreuse"></a>Cost benefits of object reuse</h1>
<p>
So far, we’ve discussed how object components can be reused by many applications and how maintaining applications using this design can be simplified. The reuse advantage should not be underestimated, especially by business managers. Examine Table 15-1, which shows the budget estimate for a warehouse stock inventory and ordering system. The development is estimated to be completed within 12 months from start to finish, which includes the time required for the project manager and the technical lead to prepare the functional and technical specifications.</p>
<p class=blue>
<b>Table 15-1</b></p>
<p class=blue>
<b>Budget Estimate for a Warehouse <br>
Stock Inventory and Ordering Application</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=blue width=148><b>Resource</b></td>
<td class=blue width=148><b>Cost per Day ($)</b></td>
<td class=blue width=148><b>Duration (Months)</b></td>
<td class=blue width=148><b>Cost ($) </b></td>
</tr>
<tr valign=top>
<td width=148>1 Project manager</td>
<td width=148>750</td>
<td width=148>12</td>
<td width=148>180,000</td>
</tr>
<tr valign=top>
<td width=148>1 Technical lead</td>
<td width=148>600</td>
<td width=148>12</td>
<td width=148>144,000</td>
</tr>
<tr valign=top>
<td width=148>3 Programmer</td>
<td width=148>450 × 3 = 1,350</td>
<td width=148>10</td>
<td width=148>270,000</td>
</tr>
<tr valign=top>
<td width=148>1 Tester</td>
<td width=148>300</td>
<td width=148>  5</td>
<td width=148>  30,000</td>
</tr>
<tr valign=top>
<td width=148><b>TOTAL</b></td>
<td width=148><b>3000</b></td>
<td width=148></td>
<td width=148><b>624,000</b></td>
</tr>
</table><br>
<p class=mini>
*Based on working 20 days a month.</p>
<p>
Some simple arithmetic shows that if all goes as planned, based on a 5-day week, the total cost of the project will be $624,000. The company has decided that this will be the first of three development projects. The second will be a system to allow the purchasing department to do sales-trend analysis and sales predictions. The budget estimate for the second project is shown in Table 15-2.</p>
<p class=blue>
<b>Table 15-2</b></p>
<p class=blue>
<b>Budget Estimate for a Sales-Trend Analysis Application</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=blue width=148><b>Resource</b></td>
<td class=blue width=148><b>Cost per Day ($)</b></td>
<td class=blue width=148><b>Duration (Months)</b></td>
<td class=blue width=148><b>Cost ($) </b></td>
</tr>
<tr valign=top>
<td width=148>1 Project manager</td>
<td width=148>750</td>
<td width=148>10</td>
<td width=148>150,000</td>
</tr>
<tr valign=top>
<td width=148>1 Technical lead</td>
<td width=148>600</td>
<td width=148>10</td>
<td width=148>120,000</td>
</tr>
<tr valign=top>
<td width=148>2 Programmer</td>
<td width=148>450 × 2 = 900</td>
<td width=148>  8</td>
<td width=148>144,000</td>
</tr>
<tr valign=top>
<td width=148>1 Tester</td>
<td width=148>300</td>
<td width=148>  3</td>
<td width=148>18,000</td>
</tr>
<tr valign=top>
<td width=148><b>TOTAL</b></td>
<td width=148><b>2550</b></td>
<td width=148></td>
<td width=148><b>432,000</b></td>
</tr>
</table><br>
<p class=mini>
*Based on working 20 days a month.</p>
<p>
The third project will be an Internet browser that allows customers to query availability and price information 24 hours a day. The budget estimate for this project is shown in Table 15-3.</p>
<p>
<b>Table 15-3</b></p>
<p>
<b>Budget Estimate for an Internet Browser</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td width=148>Resource</td>
<td width=148>Cost per Day ($)</td>
<td width=148>Duration (Months)</td>
<td width=148>Cost ($) </td>
</tr>
<tr valign=top>
<td width=148>1 Project manager</td>
<td width=148>750</td>
<td width=148>9</td>
<td width=148>135,000</td>
</tr>
<tr valign=top>
<td width=148>1 Technical lead</td>
<td width=148>600</td>
<td width=148>9</td>
<td width=148>108,000</td>
</tr>
<tr valign=top>
<td width=148>1 Programmer</td>
<td width=148>450</td>
<td width=148>8</td>
<td width=148>72,000</td>
</tr>
<tr valign=top>
<td width=148>1 Tester</td>
<td width=148>300</td>
<td width=148>4</td>
<td width=148>24,000</td>
</tr>
<tr valign=top>
<td width=148><b>TOTAL</b></td>
<td width=148><b>2100</b></td>
<td width=148></td>
<td width=148><b>339,000</b></td>
</tr>
</table><br>
<p class=mini>
*Based on working 20 days a month.</p>
<p>
If we examine all three applications as a single system and then build the applications in sequence, it becomes apparent that the second and third applications will require far less development time than the first because they build on existing functionality. One advantage here is that building the second and third systems need not affect the first system. This situation is ideal for phased implementations. The success of this strategy depends largely on how well the design and analysis stages were completed. Figure 15-2 shows the design of all three applications. The three applications are treated as a single development for the purpose of planning. Reusable functionality is clearlyvisible, and although the developments will be written in phases, the reusable components can be designed to accommodate all the applications.</p>
<p>
<img src="f15rf02.gif" border=0></p>
<p class=blue>
<b>Figure 15-2  Single development comprised of three application systems</b></p>
<p>
In the development of a multiple application system, design is of the utmost importance. It is the responsibility of the “business” to clearly define system requirements, which must also include future requirements. Defining future requirements as well as current ones helps designers to design applications that will be able to expand and change easily as the business grows. All successful businesses plan ahead. Microsoft plans its development and strategies over a 10-year period. Without knowledge of future plans, your business cannot make the most of object component reusability.</p>
<p>
Looking back at the application design in Figure 15-2, you can see that all three systems have been included in the design. You can clearly see which components can be reused and where alterations will be required. Because the design uses object components, which as you’ll recall are loosely coupled inherently, it would be possible to build this system in stages—base system 1, then 2, then 3.</p>
<p>
Let’s consider the estimates we did earlier. The main application was scheduled to be completed in 12 months and will have 12 major components. So ignoring code complexity, we can do a rough estimate, shown in Figure 15-3 on the following page, of how much effort will be required to implement the other two applications. Take the figures with a grain of salt; they’re just intended to provide a consistent comparison. In reality, any computer application development is influenced by all kinds of problems. It’s especially important to keep in mind that new technologies will always slow down a development by an immeasurable factor. (For those of you interested in estimating and development time issues, we recommend the book <i>Rapid Development, </i>by Steve McConnell (Microsoft Press, 1996). He does for project managers what he did for developers with <i>Code Complete</i> (Microsoft Press, 1995). See how many of the 36 Classic Mistakes of Software Development you’ve encountered!)</p>
<p>
<img src="f15rf03.gif" border=0></p>
<p class=blue>
<b>Figure 15-3  Rough time estimate for coding and testing three applications</b></p>
<p>
The estimates for the three applications when viewed as stand-alone developments could well be feasible. When viewed as a whole, they give a clear picture of which components can be shared and therefore need to be written only once. The reusable components can be designed from the start to meet the needs of the second and third applications. Although this might add effort to the first project, the subsequent projects will in theory be shortened. Here are the three major benefits:
<ol>
<li>
The design anticipates and allows for future expansion.<br><br></li>
<li>
The overall development effort is reduced.<br><br></li>
<li>
Functionality can be allocated to the most appropriate resource. For example, a print specialist can code the print engine without affecting the interface coder.</li>
</ol>
<p>
As you can see, object components provide a number of advantages. Object components are vital to high-level code reuse because of their encapsulation, which allows functionality to be allocated to the most suitable resource. As Fred Brooks points out in <i>The Mythical Man-Month: Essays on Software Engineering </i>(Addison-Wesley, 1995), “Only through high-level reuse can ever more complex systems be built.”</p>
<h1></h1>
</BODY>
</HTML>
