<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="chapter9"></a>Introduction</h1>
<p>
What, you might ask, is the Year 2000 topic doing in a Visual Basic book? Isn’t the Year 2000 problem (or the Millennium Bug, as the media like to call it—even though the new millennium doesn’t actually begin until 2001) a mainframe problem for COBOL programmers to fix? I’ll answer both these questions in this chapter. So even if you’ve never heard of the Year 2000 (frequently referred to as Y2K) issue, read on. If you’ve heard of it but always assumed that it wasn’t a problem in Visual Basic, also read on: you might be in for a surprise.</p>
<h1></h1>
</BODY>
</HTML>
