<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Stuff About the Compiler</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="stuffaboutcompiler"></a>Stuff About the Compiler</h1>
<p>
In this section, we’ll examine applications compiled to native code. We won’t deal much with p-code (the normal Visual Basic situation, which seems to have changed very little from Visual Basic 4 to Visual Basic 5) aside from a brief introduction and some comparisons with native code.</p>
<p>
As you’ve probably discovered already, Visual Basic 5 applications can now be “properly” compiled. In other words, as well as producing p-code executables (still), Visual Basic 5 can now provide a native code binary. Which compile option you choose is up to you. I suspect that most corporate developers will want to know more about this new compiler process than they ever wanted to know about p-code.</p>
<h1></h1>
</BODY>
</HTML>
