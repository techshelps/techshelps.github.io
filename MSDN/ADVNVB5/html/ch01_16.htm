<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tip 15: Don't test your own software or write your own test plans.</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="tip15donttestyourownsoftwareorwriteyourowntestplans."></a>Tip 15: Don’t test your own software or write your own test plans.</h1>
<p>
Do you have dedicated testers where you work? Possibly not—not many companies do. Many companies say they “can’t afford such a luxury.” Well, in my opinion, they’re a luxury that’s really worth it (as many of the leading software development companies in the world already know).</p>
<p>
Independent testers should (and often do) exhibit the following characteristics:
<ul type=disc>
<li>
Are impartial<br><br></li>
<li>
Are less informed about the usage and the type of input your code expects<br><br></li>
<li>
Are usually more knowledgeable about the usage and the type of input your code doesn’t expect<br><br></li>
<li>
Are more likely than you to spend time trying to break code<br><br></li>
<li>
Are typically more leery of your interfaces and more critical of your coupling<br><br></li>
<li>
Are into doing you damage and breaking your code<br><br></li>
<li>
Are more informed than you about system limits<br><br></li>
<li>
Unlike you, actually want to find bugs in your software!</li>
</ul>
<p>
From time to time, Microsoft talks about its ratio of developers to testers: around 1:1. You do the math; for every programmer there’s a tester. In fact, rumor has it that some developers occasionally get shifted to being testers. This could happen if a developer consistently develops very buggy software. Nothing like a shift to testing to improve one’s knowledge and appreciation of what good solid code involves!</p>
<h1></h1>
</BODY>
</HTML>
