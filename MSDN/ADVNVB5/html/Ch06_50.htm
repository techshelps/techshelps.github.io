<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Shell changes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="shellchanges"></a>Shell changes</h1>
<p>
The desktop user interface has changed with the move from Windows 3.<i>x</i> <br>
to Windows 95. The desktop area that was at your program’s disposal under Windows 3.<i>x</i> was fixed. Under Windows 3.<i>x</i>, a maximized window covers the full screen at the current resolution; under the Windows 95 shell, a maximized window either covers the full screen (if the task bar is set to <i>AutoHide</i>) or covers the full screen minus the area occupied by the task bar in its current configuration. The size of a maximized window also depends on the setting of the Always On Top property of the task bar.</p>
<p>
If you also consider the Microsoft Office 95 toolbar or other dockable toolbars, in the worst case the size of a maximized window might be just under half of the full screen. Controls that were accessible to users with your program running under Windows 3.<i>x</i> may now have disappeared.</p>
<p>
Under any operating system with the new Windows 95 shell, the maximized desktop area is unpredictable. The user can resize the task bar, and the remaining visible desktop area is the maximized area. You must be careful to ensure that controls are not placed in an area that would have been visible under the old Windows interface but that is visible only under certain configurations of the new Windows 95 shell. There are at least two approaches to this problem. Either place code in the forms <i>Resize </i>event procedure to reposition the controls appropriately, or use a control such as VideoSoft’s VS Elastic to automatically reposition the controls. (Also, see the <i>SystemParametersInfo</i> API function and the SPI_GETWORKAREA parameter.)</p>
<p class=indent>
<span class=blue><b>Tip</b></span>  If you want your users to start using the Windows 95–style interface, with either Windows NT 4 or Windows 95, you need to consider the issue of the available maximized desktop area for your legacy applications that are not being ported to Visual Basic 5.</p>
<h1></h1>
</BODY>
</HTML>
