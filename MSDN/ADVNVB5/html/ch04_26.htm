<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Execute, StateChanged, and GetChunk</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><i><a name="executestatechangedgetchunk"></a>Execute</i>, <i>StateChanged</i>, and <i>GetChunk</i></h1>
<p>
The <i>Execute </i>method works by sending a command to a remote server located on the Internet. The command might be a request to receive a file, to send a file, or even to delete a directory on the remote computer. The particular server you are talking to defines what commands you can send—the Internet Transfer Control does not define these commands. An FTP server has a complete set of commands that let you do more than transfer files to and from the server—they also let you manage files on the remote computer in a fashion similar to what you might remember from the days of the good old MS-DOS command line.</p>
<p>
On the other hand, HTTP servers define a set of commands that let you not only send files to and receive files from the remote server but also transmit header information that describes the various properties of documents stored on the server. This allows summary information about documents to be retrieved without your having to transfer the entire document itself.</p>
<p>
Once the server has received the particular command that had been transmitted by the <i>Execute </i>method, it sends a response to your program to let you know what action it has taken. The server’s action is in response to the command it has received. The server can respond to the command by returning some data, performing an internal operation, or even closing the connection. The remote computer informs the calling code of the action it is taking by triggering the <i>StateChanged </i>event of the Internet Transfer Control. The <i>StateChanged </i>event provides a parameter that indicates the particular action the remote computer has just performed. Once this event is triggered, you can take appropriate action in your code depending on what action the remote server is performing.</p>
<p>
The most important action you need to take in response to a <i>StateChanged </i>event is to retrieve any data that is waiting. Data is retrieved by using the <i>GetChunk </i>method. The <i>GetChunk </i>method will return, as the name indicates, a “chunk” of data. The size of a chunk is defined when you make the <i>GetChunk </i>call. A chunk is commonly 1024 bytes. This means that if you’ve requested a file that is 30 KB, you’ll have to invoke the <i>GetChunk </i>method roughly 30 times to retrieve all the required data.</p>
<p>
The following is the syntax for the <i>Execute </i>command. The <i>URL </i>and <i>operation </i>parameters are required for all types of servers; the <i>data </i>and <i>requestheaders </i>parameters are required only for HTTP transfers.</p>
<pre><code>IcMain.Execute <i>url operation data requestheaders</i></code></pre>
<p>
The process of issuing an <i>Execute </i>method, waiting for the <i>StateChanged </i>event, and then acting on the <i>StateChanged </i>event by using repeated <i>GetChunk </i>method invocations to retrieve data is the standard procedure for using the Internet Transfer Control via the <i>Execute </i>method. Be aware that some actions the server can take result in no data being returned to the calling program (closing a connection or transmitting a file), so the <i>GetChunk </i>method in these cases is not used.</p>
<p>
The following section describes using the <i>Execute </i>method with an FTP server. The <i>StateChanged </i>and <i>GetChunk </i>methods are explained in detail after the discussion of the <i>Execute </i>method.</p>
<h1></h1>
</BODY>
</HTML>
