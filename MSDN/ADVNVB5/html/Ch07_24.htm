<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging hooks</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="debugginghooks"></a>Debugging hooks</h1>
<p>
One technique that many programmers have found useful when working with this type of interactive debugger is to build debugging hooks directly into their programs. These hooks, usually in the form of functions or subroutines, can be executed directly from the Immediate window when in break mode. An example might be a routine that walks any array passed to it and prints out its contents, as shown here.</p>
<pre><code>Public Sub DemonstrateDebugHook()

Dim saTestArray(1 to 4) As Integer
saTestArray(1) = "Element one"
saTestArray(2) = "Element two"
saTestArray(3) = "Element three"
saTestArray(4) = "Element four"

Stop

End Sub

Public Sub WalkArray(ByVal vntiArray As Variant)
Dim nLoop As Integer

' Check that we really have an array.
Debug.Assert IsArray(vntiArray)

' Print the array type and number of elements.
Debug.Print "Array is of type " &amp; TypeName(vntiArray)
nLoop = UBound(vntiArray) - LBound(vntiArray) + 1
Debug.Print "Array has " &amp; CStr(nLoop) &amp; " elements"

' Walk the array, and print its elements.
For nLoop = LBound(vntiArray) To UBound(vntiArray)
    Debug.Print "Element " &amp; CStr(nLoop) &amp; " contains:" _
        &amp; vntiArray(nLoop)
Next nLoop

End Sub</code></pre>
<p>
When you run this code, Visual Basic will go into break mode when it hits the <i>Stop</i> statement placed in <i>DemonstrateDebugHook</i>. You can then use the Immediate window to type:</p>
<pre><code>WalkArray saTestArray</code></pre>
<p>
This debugging hook will execute and show you all the required information about any array passed to it.</p>
<p class=indent>
<span class=blue><b>Note</b></span>  The array is received as a Variant so that any array type can be handled and so that the array can be passed by value. Whole arrays can’t be passed by value in their natural state. These types of debugging hooks placed in a general debug class or module can be extremely useful, both for you and for any programmers who later have to modify or debug your code.</p>
<h1></h1>
</BODY>
</HTML>
