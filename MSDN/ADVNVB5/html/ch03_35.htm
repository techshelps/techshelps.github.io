<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Visual Basic Automation with Word and Excel</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><a name="usingvisualbasicautomationwithwordexcel"></a>Using Visual Basic Automation with Word and Excel</h1>
<p>
Word provides a powerful report environment for narrative-based reports. In Word you can insert data in the form of text, tables, and graphs between passages of text, creating a professional-looking report—a feat nearly impossible in standard report writers. The example provided here examines the use of a table, or plain text, within a Word document.</p>
<p class=indent>
<span class=blue><b>Note</b></span>  Word 6/7 is not an Automation client, and it provides only limited Automation Server capabilities.</p>
<p>
Excel provides a very powerful report environment for grid and calculation-based reports. With Excel you can insert data into cells for manipulation with formulas. Excel is the ultimate grid control, providing full control over every cell and allowing for embedded graphs and other objects. The example provided populates a two-dimensional table of company details.</p>
<h1></h1>
</BODY>
</HTML>
