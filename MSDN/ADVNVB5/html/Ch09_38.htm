<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text-html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DateValue and CDate are not the same</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>
<FONT FACE="Verdana,Arial,Helvetica" SIZE="2">
<h1><i><a name="datevaluecdatearenotsame"></a>DateValue</i> and <i>CDate</i> are not the same</h1>
<p>
<i>DateValue </i>and <i>CDate </i>(or <i>CVDate </i>in Visual Basic 3) are extremely useful functions for processing any type of date data in Visual Basic. The differences between the two functions are not always clear, however. Both functions accept date expressions as an argument and return a Variant(7) or a Date data type that is stored internally as a date serial number (or double-precision number). I’m often asked which function should be for which purpose.</p>
<p>
As far as I can tell (and please correct me if you know better), there are two main differences between the conversion functions: how they deal with time and the types of input expressions they can process.</p>
<p>
<b>Time</b>  <i>CDate </i>(or <i>CVDate</i>) will convert the time portion of a date expression whether it’s included with a date or the expression consists of just a time value on its own. <i>DateValue </i>will ignore the time portion unless the time is invalid, in which case <i>DateValue </i>will raise an error.</p>
<p>
<b>Converted expressions</b>  The <i>DateValue </i>function expects its input to look like dates, whereas <i>CDate </i>or <i>CVDate </i>will convert any expression that could be considered a date. The main expression that springs to mind here is the date serial number. As you learned earlier, a Variant(7) or date variable has an internal representation of its date value. That internal representation is sometimes called a date serial number. This serial number can be broken into two parts: the whole number and the fraction. Any value to the left of the decimal point is interpreted as the number of days passed since December 31, 1899. Any number to the right of the decimal point represents the time as a fraction of the 24-hour clock. For example, the value 0.5 represents noon. If you pass the <i>DateValue </i>function a value of 1, you’ll get a “Type Mismatch” error. However, the <i>CDate </i>and <i>CVDate </i>functions will return <i>12/31/89</i> (depending on the locale setting on your computer).</p>
<p>
These differences are subtle, but they might help you understand the programmer’s intentions when converting your existing Visual Basic code.</p>
<h1></h1>
</BODY>
</HTML>
