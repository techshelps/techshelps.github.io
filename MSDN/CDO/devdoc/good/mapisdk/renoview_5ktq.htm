<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Writing a Rendering Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_writing_a_rendering_application"></a>Writing a Rendering Application</h1>
<p>
To render CDO objects and properties into HTML hypertext, you instantiate a rendering object such as a <a href="renobj_86no.htm">ContainerRenderer</a> or <a href="renobj_4wxg.htm">ObjectRenderer</a> object. These are top-level objects, which can be created directly by your code without deriving them from any other object. For more information, see <a href="renoview_3hwz.htm">CDO Rendering Objects</a>. </p>
<p>
The recommended approach, however, is to begin by instantiating a <a href="renobj_8kac.htm">RenderingApplication</a> object, from which you can create a family of related rendering objects. The RenderingApplication object allows you to set options which are inherited by every rendering object you create from it. You can choose the verbosity of event logging in each of several categories using the <a href="renobj_0wdb.htm"><b>LoggingLevel</b></a> property, set the code page for character representation with the <a href="renobj_0dwf.htm"><b>CodePage</b></a> property, and prepare specific rendering information through the <a href="renobj_8llr.htm"><b>Formats</b></a> property. These options act as global presettings for your entire rendering application. The individual rendering objects can change their inherited copies of the code page and the formats if appropriate. </p>
<p>
The next step is to use the <a href="renobj_0fdr.htm"><b>CreateRenderer</b></a> method to instantiate a specific rendering object, such as a <a href="renobj_86no.htm">ContainerRenderer</a> or <a href="renobj_4wxg.htm">ObjectRenderer</a> object. The rendering object is used to generate HTML hypertext from a CDO object. You create a container renderer if you want to render the contents of a container object, such as an address book container or a folder. You create an object renderer if you only want to render one or more selected properties of an object, such as when a message was sent and received. </p>
<p>
After you create the rendering object, you set its <b>DataSource</b> property to specify the object or collection you want to render. The container renderer's <a href="renobj_555r.htm"><b>DataSource</b></a> property accepts an <a href="oleobjaf_7qd0.htm">AddressEntries</a>, <a href="oleobjaf_1nec.htm">Folders</a>, <a href="oleobjis_1qd0.htm">Messages</a>, or <a href="oleobjis_3xro.htm">Recipients</a> collection. The object renderer's <a href="renobj_1p7j.htm"><b>DataSource</b></a> property accepts an <a href="oleobjaf_6n1w.htm">AddressEntry</a>, <a href="oleobjaf_5flg.htm">AppointmentItem</a>, <a href="oleobjaf_0x10.htm">Attachment</a>, <a href="oleobjaf_4u2c.htm">Folder</a>, <a href="oleobjis_4kac.htm">MeetingItem</a>, or <a href="oleobjis_2p10.htm">Message</a> object. </p>
<p>
Every rendering object has a child <a href="renobj_1nlg.htm">Formats</a> collection, which is originally inherited from the parent <a href="renobj_8kac.htm">RenderingApplication</a> object but can be modified as needed. You can add a new <a href="renobj_3cxg.htm">Format</a> object with the collection's <a href="renobj_349r.htm"><b>Add</b></a> method and delete a format with the Format object's <a href="renobj_7pb3.htm"><b>Delete</b></a> method. You should make changes to the Formats collection before setting the <b>DataSource</b> property; otherwise they are not reflected in the rendering of the new data source. </p>
<p>
A Format object provides information for rendering one property of the object being rendered, or one property of the items in the container object being rendered. Each format controls exactly one property, and each property to be rendered must be represented by exactly one format. You specify the property in the format's <a href="renobj_7mcf.htm"><b>Property</b></a> property. The rendering information is contained in the format's <a href="renobj_5q9g.htm">Patterns</a> collection, which is accessed with the format's <a href="renobj_0tsv.htm"><b>Patterns</b></a> property. </p>
<p>
Each <a href="renobj_7flg.htm">Pattern</a> object furnishes information for rendering a particular set of values of the property. You specify the value set in the pattern's <a href="renobj_8dwf.htm"><b>Value</b></a> property and a rendering source for that value set in the <a href="renobj_0cm7.htm"><b>RenderUsing</b></a> property. The rendering source is a string containing HTML hypertext and substitution tokens. When the property's value matches a pattern's value set, that pattern's rendering source is used to render the property. </p>
<p>&nbsp;</p></body>
</HTML>
