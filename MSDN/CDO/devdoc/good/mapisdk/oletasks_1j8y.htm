<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filtering Messages in a Folder</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_filtering_messages_in_a_folder"></a>Filtering Messages in a Folder  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
A program sometimes needs to traverse an entire collection in order to take some action on all its members, such as displaying, sending, or copying them. But traversing a large collection like <a href="oleobjaf_7qd0.htm">AddressEntries</a> or <a href="oleobjis_1qd0.htm">Messages</a> can take an inordinate amount of time. If you are only interested in certain members of the collection, your code can make efficient use of a filter. </p>
<p>
The purpose of filtering is to limit the members of a collection that are presented to a traversing operation such as the Visual Basic <b>For Each</b> construction or a <b>GetFirst</b> … <b>GetNext</b> loop. The members are limited based on the values of the properties that you specify for the filter. Only those members that satisfy every filter property you have set are passed to your loop for processing. </p>
<p>
In the case of messages in a folder, the hierarchy of objects is as follows: </p>
<p>
<a href="oleobjis_57w4.htm">Session</a> object <br>
&nbsp;  &nbsp;  <a href="oleobjaf_4u2c.htm">Folder</a> object (Inbox or Outbox) <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_1qd0.htm">Messages</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_2p10.htm">Message</a> object <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_9yd0.htm">Attachments</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_0yt0.htm">Fields</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_3xro.htm">Recipients</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_4gxg.htm">MessageFilter</a> object <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_0yt0.htm">Fields</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_8lh0.htm">Field</a> object </p>
<p>
Suppose, for example, you wish to find all unread messages received before a certain date, and to display the subject of each one. Before your display loop, you can set the message filter to limit the messages your loop sees. To do this, you obtain the Inbox folder, the folder's Messages collection, and the collection's MessageFilter object. Next you set the filter's <a href="oleobjis_1s2n.htm"><b>Unread</b></a> property to <b>True</b> and its <a href="oleobjis_047z.htm"><b>TimeLast</b></a> property to the desired date. Then your loop deals only with the messages it needs. </p>
<p>
This code fragment displays the <a href="oleobjis_7411.htm"><b>Subject</b></a> property of every message in the Inbox received before December 9, 1997 that has never been read: </p>
<pre><code>Dim objSess, objInbox, objMsgColl, objMsgFilter As Object 
Dim objMess As Message ' individual message processed in loop 
On Error GoTo error_olemsg 
Set objSess = CreateObject ( "MAPI.Session" ) 
objSess.Logon ' assume valid session for this example 
Set objInbox = objSess.Inbox 
If objInbox Is Nothing Then 
    MsgBox "Invalid IPM Inbox from session" 
    Exit Function 
End If 
Set objMsgColl = objInbox.Messages ' get Inbox's messages collection 
' ( ... then validate the messages collection before proceeding ... ) 
Set objMsgFilter = objMsgColl.Filter 
' ( ... then validate the message filter before proceeding ... ) 
objMsgFilter.TimeLast = DateValue ( "12/09/97" ) 
objMsgFilter.Unread = True ' filter for unread messages 
' Message filter is now specified; ready for display loop 
For Each objMess in objMsgColl ' performs loop, Sets each objMess 
    MsgBox "Message not read: " &amp; objMess.Subject 
Next ' even easier than objMsgColl.GetFirst and .GetNext 
error_olemsg: 
MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
Exit Function ' so many steps to succeed; just exit on error 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
