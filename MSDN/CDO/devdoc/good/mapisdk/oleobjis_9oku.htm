<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (Recipients Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_add_method_recipients_collection"></a>Add Method (Recipients Collection)  <a href="oleobjis_3xro.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Add</b> method creates and returns a new <a href="oleobjis_9cfo.htm">Recipient</a> object in the Recipients collection. </p>
<h4>Syntax </h4>
<p>
<b>Set</b><i> objRecipient</i> = <i>objRecipColl</i>.<b>Add( [</b><i>name</i><b>] [</b><i>, address</i><b>] [</b><i>, type</i><b>] [</b><i>, entryID</i><b>] ) </b>
<dl>
<dt>
<i>objRecipient </i></dt>
<dd>
On successful return, represents the new Recipient object added to the collection. </dd>
<dt>
<i>objRecipColl </i></dt>
<dd>
Required. The Recipients collection object. </dd>
<dt>
<i>name </i></dt>
<dd>
Optional. String. The display name of the recipient. When this parameter is not present, the new Recipient object's <a href="oleobjis_8z1w.htm"><b>Name</b></a> property is set to an empty string. The <i>name</i> parameter is ignored if the <i>entryID</i> parameter is supplied. </dd>
<dt>
<i>address </i></dt>
<dd>
Optional. String. The full messaging address of the recipient. When this parameter is not present, the new Recipient object's <a href="oleobjis_0ino.htm"><b>Address</b></a> property is set to an empty string. The <i>address</i> parameter is ignored if the <i>entryID</i> parameter is supplied. </dd>
<dt>
<i>type </i></dt>
<dd>
Optional. Long. The recipient type; the initial value for the new recipient's <a href="oleobjis_4zck.htm"><b>Type</b></a> property. The following values are valid: 
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=25%>Recipient type </th>
<th align=left width=15%>Value </th>
<th align=left width=60%>Description </th>
</tr>
<tr valign=top>
<td width=25%><b>CdoTo </b></td>
<td width=15%>1 </td>
<td width=60%>The recipient is on the To line (default). </td>
</tr>
<tr valign=top>
<td width=25%><b>CdoCc </b></td>
<td width=15%>2 </td>
<td width=60%>The recipient is on the Cc line. </td>
</tr>
<tr valign=top>
<td width=25%><b>CdoBcc </b></td>
<td width=15%>3 </td>
<td width=60%>The recipient is on the Bcc line. </td>
</tr>
</table><br>

<p>


<p>
The <i>type</i> parameter applies whether the <i>entryID</i> parameter is furnished or not. 
</dd>
<dt>
<i>entryID </i></dt>
<dd>
Optional. String. The unique identifier of a valid <a href="oleobjaf_6n1w.htm">AddressEntry</a> object for this recipient. No default value is supplied for the <i>entryID</i> parameter. When it is present, the <i>name</i> and <i>address</i> parameters are not used. When it is not present, the method uses the <i>name</i>, <i>address</i>, and <i>type </i>parameters to define the recipient. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <i>name</i>, <i>address</i>, and <i>type</i> parameters correspond to the Recipient object's <a href="oleobjis_8z1w.htm"><b>Name</b></a>, <a href="oleobjis_0ino.htm"><b>Address</b></a>, and <a href="oleobjis_4zck.htm"><b>Type</b></a> properties, respectively. The <i>entryID</i> parameter corresponds to an <a href="oleobjaf_6n1w.htm">AddressEntry</a> object's <a href="oleobjaf_9xmh.htm"><b>ID</b></a> property. When the <i>entryID</i> parameter is present, the <i>name</i> and <i>address</i> parameters are not used. </p>
<p>
The <i>address</i> parameter, if set, must contain a <i>full address</i>, such as that contained in the recipient's <b>Address</b> property. An AddressEntry object's <a href="oleobjaf_9ed5.htm"><b>Address</b></a> property is not a full address because it does not contain the address type information found in the AddressEntry object's <a href="oleobjaf_85q1.htm"><b>Type</b></a> property. If the user you are adding is represented by an AddressEntry object, such as is returned by the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_24ku.htm"><b>CurrentUser</b></a> property, you must concatenate its <b>Type</b> and <b>Address</b> properties with a connecting colon to construct the full address. </p>
<p>
When no parameters are present, an empty Recipient object is created. </p>
<p>
The <a href="oleobjis_8vw4.htm"><b>DisplayType</b></a> property of the new Recipient object is set by the address book provider to either <b>CdoUser</b> or <b>CdoDistList</b>, depending on which kind of recipient is being added. The <b>DisplayType</b> property is read-only and cannot subsequently be changed. </p>
<p>
Call the <a href="oleobjis_1zu6.htm"><b>Resolve</b></a> method after you add a recipient. After the recipient is resolved, you can access the child AddressEntry object through the Recipient object's <a href="oleobjis_9gms.htm"><b>AddressEntry</b></a> property. </p>
<p>
The <a href="oleobjis_4hdg.htm"><b>Index</b></a> property of the new Recipient object equals the new <a href="oleobjis_8pm6.htm"><b>Count</b></a> property of the Recipients collection. </p>
<p>
The new recipient is saved in the MAPI system when you <a href="oleobjis_3wh1.htm"><b>Update</b></a> or <a href="oleobjis_2un9.htm"><b>Send</b></a> the parent <a href="oleobjis_2p10.htm">Message</a> object. </p>
<h4>Example </h4>
<p>
This code fragment adds three recipients to a message. The address for the first recipient is resolved using the display name. The second recipient is a custom address, so the <a href="oleobjis_7cvo.htm"><b>Resolve</b></a> operation does not modify it. The third recipient is taken from an existing valid <a href="oleobjaf_6n1w.htm">AddressEntry</a> object. The <b>Resolve</b> operation is not needed for this recipient. </p>
<pre><code>' from the sample function "Using Addresses" 
' add 3 recipient objects to a valid message object 
 
' 1. look up entry in address book 
Set objOneRecip = objNewMessage.Recipients.Add(Name:=strName, _ 
                                               Type:=CdoTo) 
If objOneRecip Is Nothing Then 
    MsgBox "Unable to add recipient using name and type" 
    Exit Function 
End If 
objOneRecip.Resolve ' find its full address in address book 
 
' 2. add a custom recipient 
Set objOneRecip = objNewMessage.Recipients.Add( _ 
                             Address:="SMTP:johndoe@company.com", _ 
                             Type:=CdoTo) 
If objOneRecip Is Nothing Then 
    MsgBox "Unable to add recipient using custom address" 
    Exit Function 
End If 
objOneRecip.Resolve ' make it an object and give it an entry ID 
 
' 3. add a valid address entry object, such as Message.Sender 
' assume valid address entry ID from an existing message 
Set objOneRecip = objNewMessage.Recipients.Add( _ 
                                              entryID:=strAddrEntryID) 
'     or .Add( , , , strAddrEntryID) if you can't use named parameters 
If objOneRecip Is Nothing Then 
    MsgBox "Unable to add existing AddressEntry using ID" 
    Exit Function 
End If 
 
objNewMessage.Text = "expect 3 different recipients" 
MsgBox ("Count = " &amp; objNewMessage.Recipients.Count) 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
