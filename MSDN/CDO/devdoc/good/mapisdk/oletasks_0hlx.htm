<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing a Folder or Message</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_customizing_a_folder_or_message"></a>Customizing a Folder or Message  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The CDO Library allows customization and extensibility by offering the <a href="oleobjaf_8lh0.htm">Field</a> object and <a href="oleobjaf_0yt0.htm">Fields</a> collection. A Field object includes a name, a data type, and a value property. An object that supports fields, in effect, lets you add your own custom properties to the object. </p>
<p>
The CDO Library supports the use of fields with the <a href="oleobjaf_6n1w.htm">AddressEntry</a>, <a href="oleobjaf_10ac.htm">AddressEntryFilter</a>, <a href="oleobjaf_0x10.htm">Attachment</a>, <a href="oleobjaf_4u2c.htm">Folder</a>, <a href="oleobjis_2p10.htm">Message</a> and <a href="oleobjis_4gxg.htm">MessageFilter</a> objects. These objects all have a <b>Fields</b> property through which the Fields collection can be accessed. </p>
<p>
For example, suppose that you want to add a "Keyword" property to messages so that you can associate a string with the message. You may wish to use a self-imposed convention that values of the "Keyword" are restricted to a small set of strings. You can then organize your messages by the "Keyword" property. </p>
<p>
The following code fragment shows how to add the "Keyword" field to a Message object: </p>
<pre><code>' Function: Fields_Add 
' Purpose:  Add a new Field object to the Fields collection 
' See documentation topic:  Add method (Fields collection) 
Function Fields_Add() 
Dim cFields As Integer      ' count of fields in the collection 
Dim objNewField As Field    ' new Field object 
 
On Error GoTo error_olemsg 
If objFieldsColl Is Nothing Then 
    MsgBox "must first select Fields collection" 
    Exit Function 
End If 
Set objNewField = objFieldsColl.Add( _ 
                  Name:="Keyword", _ 
                  Class:=vbString, _ 
                  Value:="Peru") 
If objNewField Is Nothing Then 
    MsgBox "could not create new Field object" 
    Exit Function 
End If 
cFields = objFieldsColl.Count 
MsgBox "new Fields collection count = " &amp; cFields 
' you can now write code that searches for 
' messages with this "custom property" 
Exit Function 
 
error_olemsg: 
MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
Resume Next 
 
End Function 
 </code></pre>
<p>
Note that the new field information specified by the <a href="oleobjaf_1qy6.htm"><b>Add</b></a> method is not actually saved until you call the <a href="oleobjis_2p10.htm">Message</a> object's <a href="oleobjis_3wh1.htm"><b>Update</b></a> method. </p>
<p>
MAPI stores all custom properties that represent date and time information using Greenwich Mean Time (GMT). The CDO Library converts these properties so that the values appear to the user in local time. </p>
<p>
For more information on the <a href="oleobjaf_8lh0.htm">Field</a> object's data types, see its <a href="oleobjaf_6h5w.htm"><b>Type</b></a> property. </p>
<h4>See Also </h4>
<p>
<a href="oletasks_7nz9.htm">Creating and Sending a Message</a> </p>
<p>&nbsp;</p></body>
</HTML>
