<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Java Programming Examples</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_java_programming_examples"></a>Java Programming Examples</h1>
<p>
This section presents code illustrating Java access to the CDO Library and the CDO Rendering Library. Each example accomplishes a task your program might perform when dealing with CDO library objects. </p>
<p>
The following table summarizes the programming procedures used in the examples. Note that all tasks require creation of a valid session and a successful logon. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Programming task </th>
<th align=left width=60%>Procedure </th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=40%><a href="olejavap_1ggv.htm">Logging On and Off</a> </td>
<td class=indent1 width=60%>1. Create a session. <p class=indent1>
2. Log on. </p>
<p class=indent1>
3. Log off. <br>
 </p>
</td>
</tr>
<tr valign=top>
<td width=40%><a href="olejavap_0qan.htm">Creating and Sending a Message</a> </td>
<td class=indent1 width=60%>1. Create a session. <p class=indent1>
2. Log on. </p>
<p class=indent1>
3. Get the Outbox Messages collection. </p>
<p class=indent1>
4. Add a new message. </p>
<p class=indent1>
5. Populate the new message. </p>
<p class=indent1>
6. Send the new message. </p>
<p class=indent1>
7. Log off. <br>
 </p>
</td>
</tr>
</table><br>
<p>
It is important to understand the object hierarchies of the CDO libraries, because they determine the correct syntax of Java statements. The relative positioning of the objects within the hierarchies determines the order in which the objects should be accessed. For more information on the hierarchies, see <a href="oleobjaf_8m24.htm">Object Model</a> and <a href="renobj_08q4.htm">Rendering Object Model</a>. </p>
<p>
To access the CDO Library, a Java program should import CDO.DLL on 32-bit platforms. To access the CDO Rendering Library, import CDOHTML.DLL on 32-bit platforms. Neither library is available on 16-bit platforms. </p>
<p>&nbsp;</p></body>
</HTML>
