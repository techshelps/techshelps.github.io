<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The CDO Libraries as Automation Servers</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_the_cdo_libraries_as_automation_servers"></a>The CDO Libraries as Automation Servers</h1>
<p>
So, let's put it all together, from the bottom up, to see how the CDO libraries work. 
<ul>
<li>
Service providers implement COM interfaces — specifically, the MAPI interfaces — as described in the MAPI documentation. </li>
<li>
The CDO libraries implement several objects (Session, Message, ContainerRenderer, Format, and so on) that act as <i>clients</i> to these MAPI interfaces. That is, the CDO library objects obtain pointers to the MAPI interfaces and call MAPI methods. </li>
<li>
The CDO libraries implement <b>IDispatch</b> and act as Automation servers so that they can be called by tools that can use <b>IDispatch</b>, such as Microsoft® Visual Basic®. That is, they allow other programs to call them through the <b>IDispatch</b> interface. Beginning with version 1.1, the CDO libraries are self-registering as Automation servers. </li>
<li>
The CDO libraries publish type libraries that contain information about the objects they make available through <b>IDispatch</b>. </li>
<li>
Your Visual Basic application acts as a client to the CDO libraries. It reads their type libraries to obtain information about their objects, methods, and properties. When your Visual Basic application declares a variable as an object (with code such as <code>Dim objSession as Object</code> or <code>Dim objSession as MAPI.Session</code>) and uses that object's properties and methods (with code such as <code>MsgBox objSession.Class</code>), Visual Basic makes calls to <b>IDispatch</b> on your behalf. </li>
</ul>
<p>
The relationships between these programs are shown in the following diagram. Visual Basic is a client to one or both of the CDO libraries, which are the Automation servers. The CDO libraries, in turn, act as clients to the MAPI services. </p>
<p>
<img src="images/olemapb.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
