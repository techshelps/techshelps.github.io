<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Starting a CDO Session</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_starting_a_cdo_session"></a>Starting a CDO Session  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
As described in <a href="oleoview_7vvy.htm">CDO Library Object Design</a>, all messaging objects are relative to the <a href="oleobjis_57w4.htm">Session</a> object. The first task of every application is to create a valid Session object and call its <a href="oleobjis_31ym.htm"><b>Logon</b></a> method. No other method or property of the Session object can be accessed, and no other CDO Library object can be created, until the application has successfully logged on. The only exception to this rule is the Session object's <a href="oleobjis_1srj.htm"><b>SetLocaleIDs</b></a> method. </p>
<p>
The Session object is created using the Microsoft® Visual Basic® function <b>CreateObject</b>. The following code demonstrates how to perform this common startup task: </p>
<pre><code>Function Util_CreateSessionAndLogon() As Boolean 
Dim objSession As MAPI.Session ' use early binding for type checking 
On Error GoTo err_CreateSessionAndLogon 
 
Set objSession = CreateObject("MAPI.Session") 
' call objSession.SetLocaleIDs here if you need to change your locale 
objSession.Logon 
Util_CreateSessionAndLogon = True 
Exit Function 
 
err_CreateSessionAndLogon: 
If (Err = 1275) Then ' VB4.0: If Err.Number = CdoE_USER_CANCEL Then 
    MsgBox "User pressed Cancel" 
Else 
    MsgBox "Unrecoverable Error:" &amp; Err 
End If 
Util_CreateSessionAndLogon = False 
Exit Function 
 
End Function 
 </code></pre>
<p>
The way you deal with errors depends on your version of Visual Basic. For more information, see <a href="oletasks_9pwz.htm">Handling Errors</a>. </p>
<p>
When no parameters are supplied to the <b>Logon</b> method, as in the example above, the CDO Library displays an application-modal logon dialog box that prompts the application user to select a user profile. Based on the characteristics of the selected profile, the underlying MAPI system logs on the user or prompts for password information. </p>
<p>
You can also choose to use your own application's dialog box to obtain the parameters needed to log on, rather than using the MAPI logon dialog box. The following example obtains the profile name and password information and directs the <a href="oleobjis_31ym.htm"><b>Logon</b></a> method not to display a logon dialog box: </p>
<pre><code>' Function: Session_Logon_NoDialog 
' Purpose: Call the Logon method, set parameter to show no dialog 
' See documentation topic: Logon Method (Session object) 
Function Session_Logon_NoDialog() 
Dim objSession As MAPI.Session 
On Error GoTo error_olemsg 
' can set strProfileName, strPassword from a custom form 
' adjust these parameters for your configuration 
If objSession Is Nothing Then 
    Set objSession = CreateObject("MAPI.Session") 
End If 
If Not objSession Is Nothing Then 
    objSession.Logon profileName:=strProfileName, _ 
                     showDialog:=False 
End If 
Exit Function 
 
error_olemsg: 
If 1273 = Err Then ' VB4.0: If Err.Number = CdoE_LOGON_FAILED Then 
    MsgBox "Cannot logon: incorrect profile name or password" 
    Exit Function 
End If 
MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
Resume Next 
End Function 
 </code></pre>
<p>
<b>Note</b>  Your Visual Basic application should be able to handle cases that occur when a user provides incorrect profile or password information, or when a user cancels from the logon dialog box. For more information, see <a href="oletasks_9pwz.htm">Handling Errors</a>. For a listing of CDO Library and MAPI error values, see <a href="oleerror_0y7n.htm">Error Codes</a>. </p>
<p>
After establishing a <a href="oleobjis_57w4.htm">Session</a> object and successfully logging on to the system, the user has access to several default objects provided by the Session object, including the Inbox and Outbox folders. For more information, see <a href="oletasks_81iw.htm">Reading a Message from the Inbox</a>. </p>
<h4>See Also </h4>
<p>
<a href="oletasks_7nz9.htm">Creating and Sending a Message</a> </p>
<p>&nbsp;</p></body>
</HTML>
