<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Format Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_about_format_objects"></a>About Format Objects</h1>
<p>
The format object of the CDO Rendering Library contains specific information that controls how a messaging property of any type is to be rendered. In other words, format objects provide a way to interpret information as you render it. </p>
<p>
There is a 1:1 relationship between format object and property to be rendered; each format controls exactly one property, and each property to be rendered must be represented by exactly one format. Rendering information is contained in the format's Patterns collection, which is accessed with the format's <b>Patterns</b> property. </p>
<p>
You need not always render properties using formats. If you used a ContainerRenderer object without adding formats, it would render MAPI data according to certain default rules. For example, it would convert number values into strings and it would convert multivalued string Unicode arrays into a single line of semicolon-separated text. It would also use its own rules for rendering date and time values. Using a format object lets you make exceptions to these default rules by having the renderer display each property value exactly as you want. </p>
<p>
There are two mutually exclusive types of formats, whose uses are explained in <a href="rendering_8rcj.htm">Property-Only Formats</a> and <a href="rendering_7hwz.htm">Named Formats</a>. </p>
<p>
The following diagram shows how formats and other objects relate in the rendering of object properties. A format contains a set of patterns, each of which tells exactly how to render a specific property value of the MAPI property being rendered. </p>
<p>
<b>Object Relationships for Property Rendering</b></p>
<p>
<img src="images/render1.gif" border=0></p>
<p>&nbsp;</p></body>
</HTML>
