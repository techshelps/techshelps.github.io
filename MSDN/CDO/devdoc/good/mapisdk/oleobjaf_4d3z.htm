<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Filter Property (AddressEntries Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_filter_property_addressentries_collection_"></a>Filter Property (AddressEntries Collection)  <a href="oleobjaf_7qd0.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Filter</b> property returns an <a href="oleobjaf_10ac.htm">AddressEntryFilter</a> object for the AddressEntries collection. Read/write. </p>
<h4>Syntax </h4>
<p>
<i>objAddrEntriesColl</i>.<b>Filter</b> </p>
<h4>Data Type </h4>
<p>
Object (AddressEntryFilter) </p>
<h4>Remarks </h4>
<p>
An AddressEntryFilter object with no criteria is created by default for every AddressEntries collection. When you specify criteria by setting properties in the filter's <a href="oleobjaf_0yt0.htm">Fields</a> collection, the filter restricts any subsequent search on the AddressEntries collection. For more information, see the <a href="oleobjaf_10ac.htm">AddressEntryFilter Object</a> and <a href="oletasks_1j8y.htm">Filtering Messages in a Folder</a>. </p>
<p>
An address entry filter can also be inherited from the restriction specified in a CDO Rendering <a href="renobj_7kfo.htm">TableView</a> object. Writing any property on this filter disinherits it, refreshes the AddressEntries collection, and instantiates a new address entry filter specifying only the property just written. This new filter, however, is no longer inherited, and the application can read its properties and set additional restrictions within it. </p>
<p>
The address entry filter affects traversals of the AddressEntries collection using the Microsoft® Visual Basic® <b>For Each</b> statement, the <b>Get</b> methods, or the Visual Basic <b>For ... Next</b> construction. These accesses return an <a href="oleobjaf_6n1w.htm">AddressEntry</a> object. </p>
<h4>Example </h4>
<p>
This code fragment shows how to set a filtering value in an AddressEntries collection's initial default address entry filter, and then how to clear all settings and reset the filter to its default state of no criteria: </p>
<pre><code>Dim objAEColl As AddressEntries ' collection 
Dim objAEntry As AddressEntry   ' address entry passed by filter 
Dim objAEFilt As AddressEntryFilter 
' assume valid AddressEntries collection just created 
' make first use of filter to check for names containing "Mac" 
Set objAEFilt = objAEColl.Filter ' original empty default filter 
objAEFilt.Name = "Mac" ' string used in a name resolution search 
For Each objAEntry in objAEColl ' loops and Sets each objAEntry 
    ' process address entries that are passed by the filter 
Next 
' ... later, when current filter settings are no longer needed ... 
objAEColl.Filter = Nothing ' invalidates and clears filter 
Set objAEFilt = objAEColl.Filter ' new empty filter 
' filter now available for new settings 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
