<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>A</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_a"></a>A</h1>

<dl>
<dt>
<a name="_olemsg_active_messaging_gly"></a><b>Active Messaging</b></dt>
<dd>
<i>See </i><a href="olegloss_48ir.htm#_olemsg_cdo_gly">CDO</a>. </dd>
<dt>
<a name="_olemsg_active_platform_gly"></a><b>Active Platform</b></dt>
<dd>
A PC platform for developing <a href="olegloss_48ix.htm#_olemsg_internet_gly">Internet</a> applications, including an extensive set of development tools. The platform is independent of the operating system and presents a consistent interface to both the client and the server. The Active Platform is based on three core technologies: Active Desktop, <a href="#_olemsg_active_server_gly">Active Server</a>, and <a href="#_olemsg_activex_gly">ActiveX</a>. </dd>
<dt>
<a name="_olemsg_active_server_gly"></a><b>Active Server</b></dt>
<dd>
The <a href="#_olemsg_active_platform_gly">Active Platform</a> component of Microsoft Internet Information Server (<a href="olegloss_48ix.htm#_olemsg_iis_gly">IIS</a>) 3.0 or later, which extends the Windows NT system services to the <a href="olegloss_48jb.htm#_olemsg_world_wide_web_gly">World Wide Web</a>. It decodes and runs <a href="olegloss_48j7.htm#_olemsg_server_side_script_gly">server-side script</a> and provides database access and transaction support. </dd>
<dt>
<a name="_olemsg_active_server_pages_gly"></a><b>Active Server Pages</b></dt>
<dd>
<i>See</i> <a href="#_olemsg_asp_gly">ASP</a>. </dd>
<dt>
<a name="_olemsg_activex_gly"></a><b>ActiveX</b></dt>
<dd>
A software technology, built on the <a href="olegloss_48ir.htm#_olemsg_com_gly">COM</a> foundation, that allows networked components to interact with each other independently of the languages they are written in. ActiveX is used particularly for applications dealing with the <a href="olegloss_48ix.htm#_olemsg_internet_gly">Internet</a> and the <a href="olegloss_48jb.htm#_olemsg_world_wide_web_gly">World Wide Web</a>. ActiveX components include <a href="#_olemsg_activex_object_gly">ActiveX objects</a>, which expose their properties and methods, and <a href="#_olemsg_activex_client_gly">ActiveX clients</a>, which access them. <i>See also</i> <a href="olegloss_48j3.htm#_olemsg_ole_gly">OLE</a>. </dd>
<dt>
<a name="_olemsg_activex_client_gly"></a><b>ActiveX client</b></dt>
<dd>
An application or programming tool accessing the <a href="#_olemsg_activex_object_gly">ActiveX objects</a> exposed by programs supporting <a href="#_olemsg_automation_gly">Automation</a>. </dd>
<dt>
<a name="_olemsg_activex_control_gly"></a><b>ActiveX control</b></dt>
<dd>
A reusable, stand-alone software component often exposing a discrete subset of the total functionality of a product or application. An arbitrary number of ActiveX controls can be used as prefabricated components to aid in building a new application. ActiveX controls cannot run alone and must be loaded into a control container such as Microsoft Visual Basic or the Microsoft Internet Explorer. Formerly referred to as OLE control or OCX. For more information, see the ActiveX SDK section of the Platform SDK. </dd>
<dt>
<a name="_olemsg_activex_object_gly"></a><b>ActiveX object</b></dt>
<dd>
An <a href="olegloss_48j3.htm#_olemsg_object_gly">object</a> exposed by an application or programming tool supporting <a href="#_olemsg_automation_gly">Automation</a> for use by <a href="#_olemsg_activex_client_gly">ActiveX clients</a>. </dd>
<dt>
<a name="_olemsg_address_book_gly"></a><b>address book</b></dt>
<dd>
A <a href="olegloss_48ir.htm#_olemsg_container_object_gly">container object</a> that manages a collection of one or more <a href="#_olemsg_address_book_container_gly">address book containers</a> furnished by one or more service providers. CDO applications can access an address book using the <a href="oleobjaf_5fw4.htm">AddressLists</a> collection object. </dd>
<dt>
<a name="_olemsg_address_book_container_gly"></a><b>address book container</b></dt>
<dd>
An <a href="olegloss_48j3.htm#_olemsg_object_gly">object</a> that contains one or more <a href="olegloss_48j6.htm#_olemsg_recipient_gly">recipients</a> and makes them available to applications using the <a href="olegloss_48ir.htm#_olemsg_cdo_libraries_gly">CDO libraries</a>. Common address book containers include the <a href="olegloss_48iv.htm#_olemsg_global_address_list_gly">global address list</a> and the <a href="olegloss_48j4.htm#_olemsg_personal_address_book_gly">personal address book</a>. CDO applications can access an address book container using the <a href="oleobjaf_4x84.htm">AddressList</a> object. </dd>
<dt>
<a name="_olemsg_address_entry_gly"></a><b>address entry</b></dt>
<dd>
An <a href="olegloss_48j3.htm#_olemsg_object_gly">object</a> containing addressing information such as a display name, an e-mail type, and an e-mail address. An address usually represents a person or process that can receive a <a href="olegloss_48j1.htm#_olemsg_message_gly">message</a>. CDO applications can access an address entry using the <a href="oleobjaf_6n1w.htm">AddressEntry</a> object. <i>See also</i> <a href="olegloss_48j6.htm#_olemsg_recipient_gly">recipient</a>. </dd>
<dt>
<a name="_olemsg_anonymous_user_gly"></a><b>anonymous user</b></dt>
<dd>
<i>See</i> <a href="olegloss_48j9.htm#_olemsg_unauthenticated_user_gly">unauthenticated user</a>. </dd>
<dt>
<a name="_olemsg_asp_gly"></a><b>ASP</b></dt>
<dd>
(Active Server Pages) An open application environment in which <a href="olegloss_48iw.htm#_olemsg_html_gly">HTML</a> pages, <a href="olegloss_48j7.htm#_olemsg_script_gly">scripts</a>, and <a href="#_olemsg_activex_gly">ActiveX</a> components can be combined to create <a href="olegloss_48jb.htm#_olemsg_world_wide_web_gly">Web</a>-based applications. ASP is an <a href="olegloss_48ix.htm#_olemsg_isapi_gly">ISAPI</a> application. </dd>
<dt>
<a name="_olemsg_attachment_gly"></a><b>attachment</b></dt>
<dd>
An <a href="olegloss_48j3.htm#_olemsg_object_gly">object</a> that is associated with a <a href="olegloss_48j1.htm#_olemsg_message_gly">message</a> and contains additional data, such as a file or an OLE object. CDO applications can access an attachment using the <a href="oleobjaf_0x10.htm">Attachment</a> object. </dd>
<dt>
<a name="_olemsg_authenticated_user_gly"></a><b>authenticated user</b></dt>
<dd>
A <a href="olegloss_48j1.htm#_olemsg_messaging_user_gly">messaging user</a> that has a valid account on a Microsoft Exchange server and can therefore access a <a href="olegloss_48j1.htm#_olemsg_mailbox_gly">mailbox</a>. Also referred to as a validated user. </dd>
<dt>
<a name="_olemsg_automation_gly"></a><b>Automation</b></dt>
<dd>
A Microsoft technology that allows <a href="olegloss_48j3.htm#_olemsg_object_gly">objects</a> to expose their internal services to each other as well as to human users, thereby permitting tasks to be performed automatically instead of by hand. Automation follows the Component Object Model (COM), and most Automation applications derive their objects from the <b>IDispatch</b> interface. Objects exposed through Automation include <a href="#_olemsg_activex_object_gly">ActiveX objects</a>, and applications that access them include <a href="#_olemsg_activex_client_gly">ActiveX clients</a>. Formerly referred to as OLE Automation. </dd>
<dt>
<a name="_olemsg_automation_controller_gly"></a><b>Automation controller</b></dt>
<dd>
A programming tool, such as Microsoft Visual Basic, that supports Microsoft <a href="#_olemsg_automation_gly">Automation</a>. An application written in or using an Automation controller can reference an arbitrary number of object libraries and access their <a href="olegloss_48j3.htm#_olemsg_object_gly">objects</a> from a single program. </dd>
</dl>

<p>&nbsp;</p></body>
</HTML>
