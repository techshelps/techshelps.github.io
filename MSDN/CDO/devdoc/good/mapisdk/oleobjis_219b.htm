<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AddMultiple Method (Recipients Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_addmultiple_method_recipients_collection_"></a>AddMultiple Method (Recipients Collection)  <a href="oleobjis_3xro.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>AddMultiple</b> method creates zero or more new <a href="oleobjis_9cfo.htm">Recipient</a> objects in the Recipients collection. </p>
<h4>Syntax </h4>
<p>
<i>objRecipColl</i>.<b>AddMultiple(</b><i>names</i><b> [</b><i>, type</i><b>] ) </b>
<dl>
<dt>
<i>objRecipColl </i></dt>
<dd>
Required. The Recipients collection object. </dd>
<dt>
<i>names </i></dt>
<dd>
Required. String. A list of zero or more resolvable recipient strings delimited by semicolons. Each resolvable string can be a messaging user's display name or a messaging address with or without the address type. A messaging address without address type must be an SMTP (Simple Mail Transfer Protocol) address usable on the Internet. </dd>
<dt>
<i>type </i></dt>
<dd>
Optional. Long. The recipient type; the initial value for the <a href="oleobjis_4zck.htm"><b>Type</b></a> property that is to apply to all the new recipients. The following values are valid: 
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=25%>Recipient type </th>
<th align=left width=14%>Value </th>
<th align=left width=61%>Description </th>
</tr>
<tr valign=top>
<td width=25%><b>CdoTo </b></td>
<td width=14%>1 </td>
<td width=61%>The recipients are on the To line (default). </td>
</tr>
<tr valign=top>
<td width=25%><b>CdoCc </b></td>
<td width=14%>2 </td>
<td width=61%>The recipients are on the Cc line. </td>
</tr>
<tr valign=top>
<td width=25%><b>CdoBcc </b></td>
<td width=14%>3 </td>
<td width=61%>The recipients are on the Bcc line. </td>
</tr>
</table><br>

</dd>
</dl>
<h4>Remarks </h4>
<p>
The <b>AddMultiple</b> method is useful when responding to standard e-mail forms that invite the user to enter a series of recipients in a connected list, such as the To and Cc lines for a Microsoft® Exchange Client message. </p>
<p>
The <b>AddMultiple</b> method does not resolve the new recipients. You must call either each recipient's <a href="oleobjis_7cvo.htm"><b>Resolve</b></a> method or the Recipients collection's <a href="oleobjis_1zu6.htm"><b>Resolve</b></a> method following the <b>AddMultiple</b> call. </p>
<h4>Example </h4>
<p>
This code fragment illustrates the different possibilities of resolvable recipient strings: </p>
<pre><code>Dim name1, name2, name3, toStr As String 
name1 = "John Doe" ' display name 
name2 = "jimdoe@company.com" ' SMTP address without address type 
name3 = "Jane Doe[SMTP:janedoe@company.com]" ' full messaging address 
toStr = name1 &amp; ";" &amp; name2 &amp; ";" &amp; name3 
objRecipients.AddMultiple (toStr, CdoTo) 
objRecipients.Resolve() 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
