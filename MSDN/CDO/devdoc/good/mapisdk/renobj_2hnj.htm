<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (Views Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_add_method_views_collection_"></a>Add Method (Views Collection)  <a href="renobj_5ub8.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Add</b> method creates and returns a new <a href="renobj_6b3o.htm">CalendarView</a> or <a href="renobj_7kfo.htm">TableView</a> object in the Views collection. </p>
<h4>Syntax </h4>
<p>
<b>Set</b><i> objView = objViewsColl</i>.<b>Add(</b><i>bstrName</i><b> [</b><i>, varClass</i><b>] [</b><i>, varSortBy</i><b>] [</b><i>, varSortAscending</i><b>] ) </b>
<dl>
<dt>
<i>objView </i></dt>
<dd>
On successful return, contains the new CalendarView or TableView object. </dd>
<dt>
<i>objViewsColl </i></dt>
<dd>
Required. The Views collection object. </dd>
<dt>
<i>bstrName </i></dt>
<dd>
Required. String. The display name to be assigned to the new CalendarView or TableView object. </dd>
<dt>
<i>varClass </i></dt>
<dd>
Optional. Long. The class of the view to be created. The currently supported classes are <b>CdoClassCalendarView</b> and <b>CdoClassTableView</b>. The default value is <b>CdoClassTableView</b>. </dd>
<dt>
<i>varSortBy </i></dt>
<dd>
Optional. Variant (Long or String). The property on which to sort the new view. The default value is <b>CdoPR_MESSAGE_DELIVERY_TIME</b> if a corresponding column is present in the view. If no such column is present and the <i>varSortBy</i> parameter is not furnished, there is no default value and the sort is undefined. </dd>
<dt>
<i>varSortAscending </i></dt>
<dd>
Optional. Boolean. The sort direction of the new view. Set to <b>True</b> to sort in ascending order. The default value is <b>False</b>. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <b>Add</b> method's <i>bstrName</i> parameter corresponds to the <a href="renobj_4iu7.htm"><b>Name</b></a> property of the new <a href="renobj_6b3o.htm">CalendarView</a> or the <a href="renobj_65i7.htm"><b>Name</b></a> property of the new <a href="renobj_7kfo.htm">TableView</a> object. The <i>varClass</i> parameter corresponds to the new view's <a href="renobj_7dlr.htm"><b>Class</b></a> property. </p>
<p>
The calendar view's <b>Name</b> property and the table view's <b>Name</b> property are both read-only. After you set the display name of a new view, you cannot subsequently change it. </p>
<p>
You should give every view object a unique name. CDO does not enforce uniqueness, but if a collection has duplicate names, only the first one can be found by name. </p>
<p>
The <i>varSortBy</i> parameter must designate a property represented by a <a href="renobj_3qyc.htm">Column</a> object within the new view's <a href="renobj_78ac.htm">Columns</a> collection. <i>varSortBy</i> must contain the property tag of the desired property. If you wish to sort the view on a custom property, you can obtain its property tag from the <a href="oleobjaf_0kmc.htm"><b>ID</b></a> property of the <a href="oleobjaf_8lh0.htm">Field</a> object being used to access the custom property: </p>
<p>
An address book container does not have any common, personal, or folder views predefined. If you are rendering an address book container, you must define one or more custom views for it. Furthermore, you must <b>Add</b> any new custom views to the present Views collection before you set the <a href="renobj_86no.htm">ContainerRenderer</a> object's  <a href="renobj_555r.htm"><b>DataSource</b></a> property to an <a href="oleobjaf_7qd0.htm">AddressEntries</a> collection. Otherwise the new custom views are not handled properly in the rendering. </p>
<h4>Example </h4>
<p>
This code fragment creates a custom table view to sort the messages in the Inbox folder according to their index values in the Inbox <a href="oleobjis_1qd0.htm">Messages</a> collection. A new field must be created and set to each message's index value, because <a href="oleobjis_2p10.htm">Message</a> objects do not expose an <b>Index</b> property. Then the <a href="oleobjaf_0kmc.htm"><b>ID</b></a> property of the new field is used to specify the sort property for the new view. Finally, a corresponding column is added to the view's <a href="renobj_78ac.htm">Columns</a> collection using its <a href="renobj_63mn.htm"><b>Add</b></a> method. This is necessary because the sort property must be represented by a <a href="renobj_3qyc.htm">Column</a> object in the view. The new column cannot be added until after the new view has been created, but the column criterion for the <i>varSortBy</i> parameter is considered satisfied as long as the column is added before the view is rendered. </p>
<pre><code>&nbsp;  ' assume Session and ContainerRenderer already valid 
&nbsp;  Dim colMsgs As Messages ' Inbox collection 
&nbsp;  Dim objMsg As Message 
&nbsp;  Dim colFields As Fields ' Message object fields 
&nbsp;  Dim objMsgIx As Field ' custom field for message index 
&nbsp;  Dim index As Long ' index of each message in Inbox collection 
&nbsp;  Dim tagMsgIx As Long ' property tag of custom message index field 
&nbsp;  Dim objIxView As TableView ' new table view sorted on index value 
' 
&nbsp;  Set colMsgs = objSess.Inbox.Messages 
&nbsp;  objContRend.DataSource = colMsgs ' render Inbox Messages collection 
&nbsp;  index = 0 
&nbsp;  For Each objMsg in colMsgs 
&nbsp;  index = index + 1 
&nbsp;  &nbsp;  Set colFields = objMsg.Fields 
&nbsp;  &nbsp;  ' data type vbLong has decimal value 3: 
&nbsp;  &nbsp;  Set objMsgIx = colFields.Add ("Message index", 3, index) 
&nbsp;  &nbsp;  objMsg.Update ' save new field in this message 
&nbsp;  Next 
&nbsp;  tagMsgIx = colFields.Item(objMsgIx.Index).ID 
&nbsp;  ' class CdoTableview has decimal value 9: 
&nbsp;  Set objIxView = objContRend.Views.Add _ 
&nbsp;                           "Table view on message index", 9, tagMsgIx 
&nbsp;  objIxView.Columns.Add "Index", tagMsgIx, 3, 0, 0, 3 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
