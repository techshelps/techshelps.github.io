<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logon Method (Session Object)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_logon_method_session"></a>Logon Method (Session Object)  <a href="oleobjis_57w4.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Logon</b> method logs on to the MAPI system. </p>
<h4>Syntax </h4>
<p>
<i>objSession</i>.<b>Logon( [</b><i>profileName</i><b>] [</b><i>, profilePassword</i><b>] [</b><i>, showDialog</i><b>] [</b><i>, newSession</i><b>] [</b><i>, parentWindow</i><b>] [</b><i>, NoMail</i><b>] [</b><i>, ProfileInfo</i><b>] ) </b>
<dl>
<dt>
<i>objSession </i></dt>
<dd>
Required. The Session object. </dd>
<dt>
<i>profileName </i></dt>
<dd>
Optional. String. Specifies the profile name to use. To prompt the user to select a profile name, omit <i>profileName</i> and set <i>showDialog</i> to <b>True</b>. The default value is an empty string. The <i>profileName</i> parameter is ignored if the <i>ProfileInfo</i> parameter is supplied. </dd>
<dt>
<i>profilePassword </i></dt>
<dd>
Optional. String. Specifies the profile password. To prompt the user to enter a profile password, omit <i>profilePassword</i> and set <i>showDialog</i> to <b>True</b>. The default value is an empty string. </dd>
<dt>
<i>showDialog </i></dt>
<dd>
Optional. Boolean. If <b>True</b>, displays a <b>Choose Profile</b> dialog box. The default value is <b>True</b>. </dd>
<dt>
<i>newSession </i></dt>
<dd>
Optional. Boolean. Determines whether the application opens a new MAPI session or uses the current shared MAPI session (the default). If a shared MAPI session does not exist, <i>newSession</i> is ignored and a new session is opened. If a shared MAPI session does exist, this parameter governs the following actions: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=23%>Value </th>
<th align=left width=77%>Action </th>
</tr>
<tr valign=top>
<td width=23%><b>True </b></td>
<td width=77%>Opens a new MAPI session. </td>
</tr>
<tr valign=top>
<td width=23%><b>False </b></td>
<td width=77%>Uses the current shared MAPI session (default). </td>
</tr>
</table><br>

</dd>
<dt>
<i>parentWindow </i></dt>
<dd>
Optional. Long. Specifies the parent window handle for the logon dialog box. A value of zero (the default) specifies that the dialog box should be application-modal. A value of –1 specifies that the currently active window is to be used as the parent window. The <i>parentWindow</i> parameter is ignored unless <i>showDialog</i> is <b>True</b>. </dd>
<dt>
<i>NoMail</i> </dt>
<dd>
Optional. Boolean. Determines whether the session should be registered with the MAPI spooler. This parameter governs the following actions: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=23%>Value </th>
<th align=left width=77%>Action </th>
</tr>
<tr valign=top>
<td width=23%><b>True </b></td>
<td width=77%>The MAPI spooler is not informed of the session's existence, and no messages can be sent or received except through a tightly coupled message store and transport. </td>
</tr>
<tr valign=top>
<td width=23%><b>False </b></td>
<td width=77%>The session is registered with the MAPI spooler and can send and receive messages through spooling (default). </td>
</tr>
</table><br>

</dd>
<dt>
<i>ProfileInfo</i> </dt>
<dd>
Optional. String. Contains the server and mailbox names that <b>Logon</b> should use to create a new profile for this session. The profile is deleted after logon is completed or terminated. The <i>ProfileInfo</i> parameter is only used by applications interfacing with Microsoft® Exchange Server. The <i>profileName</i> parameter is ignored if <i>ProfileInfo</i> is supplied. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The user must log on before your application can use any MAPI object, any other CDO Library object, or even any other method or property of the Session object. An attempt to access any programming element prior to a successful <b>Logon</b> results in an <b>CdoE_NOT_INITIALIZED</b> error return. The only exception to this rule is the Session object's <a href="oleobjis_1srj.htm"><b>SetLocaleIDs</b></a> method. </p>
<p>
The <b>Choose Profile</b> dialog box is always modal, meaning the parent window is disabled while the dialog box is active. If the <i>parentWindow</i> parameter is set to zero or is not set, all windows belonging to the application are disabled while the dialog box is active. If the <i>parentWindow</i> parameter is supplied but is not valid, the call returns <b>CdoE_INVALID_PARAMETER</b>. </p>
<p>
If your application cannot obtain the handle for the currently active window, for example if it is running in VBScript, you can pass –1 in the <i>parentWindow</i> parameter. CDO then retrieves the handle from the Microsoft Windows® <b>GetActiveWindow</b> function and uses it as the parent window handle. </p>
<p>
The common MAPI dialog boxes automatically handle many of the error cases that can be encountered during logon. When you call <b>Logon</b> and do not supply the optional profile name parameter, the <b>Choose Profile</b> dialog box appears, asking the user to select a profile. When the <i>profileName</i> parameter is supplied but is not valid, common dialog boxes indicate the error and prompt the user to enter a valid name from the <b>Choose Profile</b> dialog box. When no profiles are defined, the Profile Wizard takes the user through the creation of a new profile. </p>
<p>
The <i>ProfileInfo</i> parameter is used to create a temporary profile for the session. CDO generates a random name for the profile. For an authenticated profile, the format of the string is <br>
<code>  &lt;<i>server name</i>&gt; &amp; vbLf &amp; &lt;<i>mailbox name</i>&gt; </code><br>
where the server and mailbox names can be unresolved. Note that the mailbox name is not the messaging user's display name, but rather the alias or account name used internally by the user's organization. For example, "johnd" should be used instead of "John Doe". </p>
<p>
For an anonymous profile, the format is <br>
<code>  &lt;<i>server distinguished name</i>&gt; &amp; vbLf &amp; vbLf &amp; "anon" </code><br>
where the distinguished name of the server takes the form <br>
<code>  /o=&lt;<i>enterprise</i>&gt;/ou=&lt;<i>site</i>&gt;/cn=Configuration/cn=Servers/cn=&lt;<i>server</i>&gt; </code><br>
and any text between the <b>vbLf</b> characters is ignored. At least the <code>/cn=&lt;<i>server</i>&gt;</code> entry is required; if it is not specified in the <i>ProfileInfo</i> parameter, <b>Logon</b> returns <b>CdoE_INVALID_PARAMETER</b>. </p>
<p>
If you log on with an anonymous profile, the <a href="oleobjaf_6lfd.htm"><b>Name</b></a> property of the <a href="oleobjaf_6n1w.htm">AddressEntry</a> object returned by the <a href="oleobjis_24ku.htm"><b>CurrentUser</b></a> property contains "Unknown default". </p>
<p>
If both <i>profileName</i> and <i>ProfileInfo</i> are supplied, <i>profileName</i> is ignored and the random profile name is used. </p>
<p>
The <b>Logon</b> method does not verify the validity of either the server name or the mailbox name in the <i>ProfileInfo</i> parameter. You can get a successful return even if you specify one or both of these names incorrectly. In this case the <a href="oleobjis_24ku.htm"><b>CurrentUser</b></a> property returns the value "Unknown". If you log on using <i>ProfileInfo</i>, you should attempt to open the Inbox folder to verify that you can access the message store. </p>
<p>
If your application calls the <b>Logon</b> method after the user has already successfully logged on to the same session, CDO generates the error <b>CdoE_LOGON_FAILED</b>. However, you can create multiple sessions and log on simultaneously each of them. </p>
<p>
A session is terminated by the <a href="oleobjis_7h9q.htm"><b>Logoff</b></a> method. </p>
<p>
For more information, see <a href="oletasks_6q7i.htm">Starting a CDO Session</a>. </p>
<p>
The following methods can invoke dialog boxes: 
<ul>
<li>
<a href="oleobjaf_092x.htm"><b>Details</b></a> method (<a href="oleobjaf_6n1w.htm">AddressEntry</a> object) </li>
<li>
<a href="oleobjis_51gl.htm"><b>Options</b></a> and <a href="oleobjis_2un9.htm"><b>Send</b></a> methods (<a href="oleobjis_2p10.htm">Message</a> object) </li>
<li>
<a href="oleobjis_7cvo.htm"><b>Resolve</b></a> method (<a href="oleobjis_9cfo.htm">Recipient</a> object) </li>
<li>
<a href="oleobjis_1zu6.htm"><b>Resolve</b></a> method (<a href="oleobjis_3xro.htm">Recipients</a> collection) </li>
<li>
<a href="oleobjis_8dri.htm"><b>AddressBook</b></a> and <b>Logon</b> methods (Session object) </li>
</ul>
<p>
However, if your application is running as a Microsoft® Windows NT® service, for example from Active Server Pages (ASP) script on a Microsoft® Internet Information Server (IIS), no user interface is allowed. </p>
<p>
For more information on Windows NT services, see the Win32® Web page <i>Using MAPI from a Windows NT Service</i> at http://www.microsoft.com/win32dev/mapi/mapiserv.htm. For more information on running as a service, see "Windows NT Service Client Applications" in the <i>MAPI Programmer's Reference</i>. </p>
<h4>Example </h4>
<p>
The first part of this code fragment displays a <b>Choose Profile</b> dialog box that prompts the user to enter a profile password. The second part supplies the <i>profileName</i> parameter and does not display the dialog box: </p>
<pre><code>Dim objSession As MAPI.Session 
' (part 1) from the function Session_Logon 
Set objSession = CreateObject("MAPI.Session") 
If Not objSession Is Nothing Then 
&nbsp;  objSession.Logon showDialog:=True 
End If 
 
' (part 2) from the function Session_Logon_NoDialog 
Function Session_Logon_NoDialog() 
On Error GoTo error_actmsg 
' can set strProfileName, strPassword from a custom form 
' adjust these parameters for your configuration 
' create a Session object if necessary here ... 
If Not objSession Is Nothing Then 
&nbsp;  ' configure these parameters for your needs ... 
&nbsp;  objSession.Logon profileName:=strProfileName, _ 
&nbsp;                   showDialog:=False 
End If 
Exit Function 
 
error_actmsg: 
If 1273 = Err Then ' VB4.0: If Err.Number = CdoE_LOGON_FAILED Then 
&nbsp;  MsgBox "Cannot log on: incorrect profile name or password; " _ 
&nbsp;         &amp; "change global variable strProfileName in Util_Initialize" 
&nbsp;  Exit Function 
End If 
MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
Resume Next 
End Function 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
