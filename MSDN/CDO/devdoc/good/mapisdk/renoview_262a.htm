<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rendering a Calendar</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_rendering_a_calendar"></a>Rendering a Calendar</h1>
<p>
A calendar is rendered under control of a <a href="renobj_86no.htm">ContainerRenderer</a> object and a <a href="renobj_6b3o.htm">CalendarView</a> object. The calendar view operates on a <a href="oleobjis_1qd0.htm">Messages</a> collection in a calendar folder. The container renderer specifies the Messages collection in its <a href="renobj_555r.htm"><b>DataSource</b></a> property and the calendar view to be applied in its <a href="renobj_93z3.htm"><b>CurrentView</b></a> property. </p>
<p>
A calendar folder is usually obtained from the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_9zrz.htm"><b>GetDefaultFolder</b></a> method, with <b>CdoDefaultFolderCalendar</b> in the <i>ObjectType</i> parameter. The calendar folder is expected to contain only <a href="oleobjaf_5flg.htm">AppointmentItem</a> objects in its Messages collection. Successful calendar rendering depends upon each appointment's <a href="oleobjaf_10wv.htm"><b>StartTime</b></a> and <a href="oleobjaf_8ndr.htm"><b>EndTime</b></a> properties being set properly. </p>
<p>
A calendar view is normally generated externally to a CDO application. The predefined common views are identified by "Daily" and "Weekly" in the <a href="renobj_4iu7.htm"><b>Name</b></a> property. You can also create a nonpersistent custom view with the <a href="renobj_2hnj.htm"><b>Add</b></a> method of the <a href="renobj_5ub8.htm">Views</a> collection. A calendar view created in this way ceases to exist when the collection is released. </p>
<p>
A calendar view bases its HTML output on the following display units: 
<ul>
<li>
The <i>time unit</i>, which can be a day or a week, and around which the view is built; </li>
<li>
The <i>time span</i>, which is the total amount of calendar time displayed in a single HTML page; </li>
<li>
The <i>time slot</i>, which is the smallest subdivision within each day in the view. </li>
</ul>
<p>
The time unit is specified by the view's <a href="renobj_8tpb.htm"><b>Mode</b></a> property. The time span is expressed as a multiple of time units in the view's <a href="renobj_8p27.htm"><b>NumberOfUnits</b></a> property. The size of the time slots is controlled by the view's <a href="renobj_11lr.htm"><b>Interval</b></a> property. Time slots appear as a grid when the <b>Mode</b> property is set to <b>CdoModeCalendarDaily</b>. </p>
<p>
The calendar view, which is subclassed from the <a href="renobj_7kfo.htm">TableView</a> object, is structured using rows and columns. Each column of the view represents one day, and is rendered as a one-column-wide HTML table. Each cell in the table, at the intersection of a row and a column, displays one time slot. </p>
<p>
<a href="oleobjaf_5flg.htm">AppointmentItem</a> objects with their <a href="oleobjaf_20db.htm"><b>Duration</b></a> property equal to an exact multiple of 24 hours are considered events; otherwise they are appointments. You can render appointments using the calendar view's <a href="renobj_96cf.htm"><b>RenderAppointments</b></a> method and events with the <a href="renobj_17fj.htm"><b>RenderEvents</b></a> method. Events also have their <a href="oleobjaf_9cv3.htm"><b>AllDayEvent</b></a> property set to <b>True</b>. </p>
<p>
You can allow the user to determine the starting date for rendering by calling the <a href="renobj_9nmn.htm"><b>RenderDateNavigator</b></a> method, which prepares HTML output for one or more months in traditional calendar format. The HTML page interacts with the user, who can select a date from a displayed month or move forward and backward through the months as necessary. </p>
<p>
You can set properties on the calendar view to control the rendering of different types of cells. The <a href="renobj_9t27.htm"><b>BusyCell</b></a> property specifies rendering for time slots that are busy, that is, those that are within the duration of an accepted appointment. The <a href="renobj_6c0v.htm"><b>FreeBusinessCell</b></a> and <a href="renobj_74db.htm"><b>FreeNonBusinessCell</b></a> properties determine the rendering of free time slots that are within or outside of business hours, respectively. Business hours are determined by the <a href="renobj_86no.htm">ContainerRenderer</a> object's <a href="renobj_9bdr.htm"><b>BusinessDayStartTime</b></a> and <a href="renobj_0rmn.htm"><b>BusinessDayEndTime</b></a> properties, and business days by the <a href="renobj_7hzz.htm"><b>BusinessDays</b></a> property. </p>
<p>
In a daily view, the <a href="renobj_96cf.htm"><b>RenderAppointments</b></a> method renders a narrow vertical column, called the <i>indicator bar</i>, between the time slot column on the left and the appointments table on the right. The indicator bar is intended to make it easier for the user to envision the state of the calendar with respect to busy and free times. It can be rendered differently for different degrees of commitment of a time slot. You can set the various renderings of the indicator bar with the calendar view's <a href="renobj_12lb.htm"><b>FreeIndicator</b></a>, <a href="renobj_2ycf.htm"><b>TentativeIndicator</b></a>, <a href="renobj_8yfz.htm"><b>BusyIndicator</b></a>, and <a href="renobj_0ti7.htm"><b>OOFIndicator</b></a> properties. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
