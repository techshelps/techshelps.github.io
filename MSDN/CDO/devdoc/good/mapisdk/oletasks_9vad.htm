<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Searching for a Message</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_searching_for_a_message"></a>Searching for a Message  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
To access a message, you can search for it using one of the following techniques: 
<ul>
<li>
Call the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_01bi.htm"><b>GetMessage</b></a> method with a string parameter that specifies the <i>MessageID</i>, a unique identifier for the message. </li>
<li>
Use the <b>Get</b> methods to navigate through the folder's <a href="oleobjis_1qd0.htm">Messages</a> collection. Search for a specific message by comparing the current <a href="oleobjis_2p10.htm">Message</a> object's properties with the desired properties. </li>
<li>
Obtain a <a href="oleobjis_4gxg.htm">MessageFilter</a> object from the <a href="oleobjis_1p3z.htm">Filter</a> property of the Messages collection. Set the desired properties for filtering, and then use the <b>Get</b> methods, which return only the messages matching the filter settings. </li>
</ul>
<h4>Using the Session Object's GetMessage Method</h4>
<p>
When you know the unique identifier for the message you are looking for, you can call the Session object's <a href="oleobjis_01bi.htm"><b>GetMessage</b></a> method. </p>
<p>
The message identifier specifies a unique identifier that is created for the Message object at the time it is created. The identifier is accessible through the Message object's <a href="oleobjis_1r8l.htm"><b>ID</b></a> property. </p>
<p>
The following code fragment contains code that saves the identifier for the message, then uses it in a subsequent <b>GetMessage</b> call: </p>
<pre><code>' Function: Session_GetMessage 
' Purpose: Demonstrate how to set a message object using GetMessage 
' See documentation topic: GetMessage method (Session object) 
Function Session_GetMessage() 
    On Error GoTo error_olemsg 
 
    If objSession Is Nothing Then 
        MsgBox "No active session, must log on" 
        Exit Function 
    End If 
    If strMessageID = "" Then 
        MsgBox ("Must first set Message ID variable; see Message-&gt;ID") 
        Exit Function 
    End If 
    Set objOneMsg = objSession.GetMessage(strMessageID) 
    If objOneMsg Is Nothing Then 
        MsgBox "Unable to retrieve message with specified ID" 
        Exit Function 
    End If 
    MsgBox "GetMessage returned msg with subject: " &amp; objOneMsg.Subject 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Set objOneMsg = Nothing 
    MsgBox "Message is no longer available" 
    Exit Function 
End Function 
 </code></pre>
<h4>Using the Get Methods</h4>
<p>
When you are looking for a message within a <a href="oleobjis_1qd0.htm">Messages</a> collection, you can navigate through the collection, examining properties of each <a href="oleobjis_2p10.htm">Message</a> object to determine if it is the message you want. </p>
<p>
The CDO Library supports the <a href="oleobjis_8fce.htm"><b>GetFirst</b></a>, <a href="oleobjis_399q.htm"><b>GetNext</b></a>, <a href="oleobjis_3zu6.htm"><b>GetLast</b></a>, and <a href="oleobjis_9aum.htm"><b>GetPrevious</b></a> methods for the Messages collection object. You can also use the Visual Basic <b>For Each</b> construction to traverse the collection. </p>
<p>
Note that, with the CDO Library version 1.1 and later, you can use a <a href="oleobjis_4gxg.htm">MessageFilter</a> object to restrict a search with the <b>Get</b> methods. Obtain the message filter through the Messages collection's <a href="oleobjis_1p3z.htm">Filter</a> property, set the filter's properties to the values desired for the search, and then proceed with the <b>Get</b> methods. Only the messages passing the filter criteria are returned for your inspection. For more information on message filtering, see <a href="oletasks_1j8y.htm">Filtering Messages in a Folder</a>. </p>
<p>
The following sample demonstrates how to use the <b>Get</b> methods to search for the specified message: </p>
<pre><code>' Function: TestDrv_Util_GetMessageByName 
' Purpose: Call the utility function Util_GetMessageByName 
' See documentation topic: Item property (Message object) 
Function TestDrv_Util_GetMessageByName() 
Dim fFound As Boolean 
    On Error GoTo error_olemsg 
 
    fFound = Util_GetMessageByName("Junk mail") 
    If fFound Then 
        MsgBox "Message named 'Junk mail' found" 
    Else 
        MsgBox "Message named 'Junk mail' not found" 
    End If 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
End Function 
 
' Function: Util_GetMessageByName 
' Purpose: Use Get* methods to search for a message 
' See documentation topic:  Searching for a message 
' Search through the messages for one with a specific subject 
Function Util_GetMessageByName(strSearchName As String) As Boolean 
Dim objOneMessage As Message ' local; temp version of message object 
 
    On Error GoTo error_olemsg 
    Util_GetMessageByName = False ' default; assume failure 
    If objFolder Is Nothing Then 
        MsgBox "Must first select a folder such as Session-&gt;Inbox" 
        Exit Function 
    End If 
    Set objMessages = objFolder.Messages 
    Set objOneMessage = objMessages.GetFirst 
    If objOneMessage Is Nothing Then 
        MsgBox "No messages in the folder" 
        Exit Function 
    End If 
    ' loop through all the messages in the collection 
    Do While Not objOneMessage Is Nothing 
        If objOneMessage.Subject = strSearchName Then 
            Exit Do ' found it, leave the loop 
        Else ' keep searching 
            Set objOneMessage = objMessages.GetNext 
        End If 
    Loop 
    ' exit from the Do While loop comes here 
    ' if objOneMessage is valid, the message was found 
    If Not objOneMessage Is Nothing Then 
        Util_GetMessageByName = True ' success 
    End If 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
 
End Function 
 </code></pre>
<h4>See Also</h4>
<p>
<a href="oletasks_0boy.htm">Searching for a Folder</a> </p>
<p>&nbsp;</p></body>
</HTML>
