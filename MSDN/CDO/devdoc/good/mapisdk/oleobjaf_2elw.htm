<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Source Property (Attachment Object)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_source_property_attachment"></a>Source Property (Attachment Object)  <a href="oleobjaf_0x10.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Source</b> property returns or sets information specifying the location of the data for the attachment. Read/write. </p>
<h4>Syntax </h4>
<p>
<i>objAttachment</i>.<b>Source</b> </p>
<h4>Data Type </h4>
<p>
String or Object (Message) </p>
<h4>Remarks </h4>
<p>
The <b>Source</b> property returns or sets the full path and file name of the file containing the data for <b>CdoFileLink</b> attachments. It returns or sets the OLE class name of the attachment for <b>CdoOLE</b> attachments. For <b>CdoEmbeddedMessage</b> attachments, the <b>Source</b> property is set with the <a href="oleobjis_1r8l.htm"><b>ID</b></a> property of the message to be embedded, but it returns the <a href="oleobjis_2p10.htm">Message</a> object itself. An embedded message is copied into the attachment at creation time. </p>
<p>
Note that the <b>Source</b> property is a string except when it returns the source of an <b>CdoEmbeddedMessage</b> attachment. </p>
<p>
CDO does not synchronize the <b>Source</b> property and the <a href="oleobjaf_612s.htm"><b>ReadFromFile</b></a> method. For <b>CdoFileData</b> and <b>CdoOLE</b> attachments, when you change the <b>Source</b> property to indicate a different file, you must also explicitly call the <b>ReadFromFile</b> method to update the object data. Similarly, when you call <b>ReadFromFile</b> with data from a different file, you must change the <b>Source</b> property. </p>
<p>
The return value or setting of the <b>Source</b> property depends on the value of the <a href="oleobjaf_84tw.htm"><b>Type</b></a> property, as described in the following table: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Type property </th>
<th align=left width=63%>Source property </th>
</tr>
<tr valign=top>
<td width=37%><b>CdoFileData </b></td>
<td width=63%>Specifies a full path and file name that contains the data for the attachment, for example C:\DOCUMENT\BUDGET.XLS. </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoFileLink </b></td>
<td width=63%>Specifies a full path name in a universal naming convention (UNC) format, such as \\SALES\INFO\PRODUCTS\NEWS.DOC. </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoOLE </b></td>
<td width=63%>Specifies the registered OLE class name of the attachment, such as Word.Document or PowerPoint.Show. </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoEmbeddedMessage </b></td>
<td width=63%>Specifies the unique identifier of the message to be embedded; returns the embedded <a href="oleobjis_2p10.htm">Message</a> object. </td>
</tr>
</table><br>
<p>
The UNC format is suitable for sending attachments to recipients who have access to a common file server. </p>
<p>
<b>Note</b>  You must set <a href="oleobjaf_84tw.htm"><b>Type</b></a> before you set <b>Source</b>. Failure to do this can result in a return of <b>CdoE_NOT_FOUND</b> from the <a href="oleobjaf_612s.htm"><b>ReadFromFile</b></a> or <a href="oleobjaf_7f5g.htm"><b>WriteToFile</b></a> method. </p>
<p>
The <b>Source</b> property can also be set at the time of creation of the attachment by supplying the <i>source</i> parameter to the <a href="oleobjaf_1966.htm"><b>Add</b></a> method of the <a href="oleobjaf_9yd0.htm">Attachments</a> collection. For attachments of type <b>CdoFileData</b>, the <b>Add</b> method is the only place the source file can be specified. However, you can change it later with the Attachment object's <a href="oleobjaf_612s.htm"><b>ReadFromFile</b></a> method. </p>
<p>
You should always set <b>Source</b> before displaying the attachment, because some calendaring clients, such as Microsoft® Outlook™, return an error message when you attempt to display an <a href="oleobjaf_5flg.htm">AppointmentItem</a>, <a href="oleobjis_4kac.htm">MeetingItem</a>, or <a href="oleobjis_2p10.htm">Message</a> object with an empty attachment, that is, an attachment with no properties set. </p>
<p>
The <b>Source</b> property corresponds to the MAPI property PR_ATTACH_PATHNAME. It can be rendered into HTML hypertext using the CDO Rendering <a href="renobj_4wxg.htm">ObjectRenderer</a> object. To specify this, set the object renderer's <a href="renobj_1p7j.htm"><b>DataSource</b></a> property to this Attachment object and the <i>property</i> parameter of the <a href="renobj_7ufz.htm"><b>RenderProperty</b></a> method to <b>CdoPR_ATTACH_PATHNAME</b>. </p>
<h4>Example </h4>
<pre><code>' from the function Attachments_Add() 
    Set objAttach = objAttachColl.Add ' add an attachment 
    With objAttach 
        .Type = CdoFileLink 
        .Position = 0 ' place at beginning of message 
        .Source = "\\server\bitmaps\honey.bmp" ' UNC name 
    End With 
    ' must update the message to save the new info 
    objOneMsg.Update ' update the message 
    MsgBox "Added an attachment of type CdoFileLink" 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
