<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Item Property (Fields Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_item_property_fields_collection"></a>Item Property (Fields Collection)  <a href="oleobjaf_0yt0.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Item</b> property returns a single <a href="oleobjaf_8lh0.htm">Field</a> object from the Fields collection. Read-only. </p>
<h4>Syntax </h4>
<p>
<i>objFieldsColl</i>.<b>Item(</b><i>index</i><b>) </b></p>
<p>
<i>objFieldsColl</i>.<b>Item(</b><i>proptag</i><b>) </b></p>
<p>
<i>objFieldsColl</i>.<b>Item(</b><i>name</i><b> [</b><i>, propsetID</i><b>] ) </b>
<dl>
<dt>
<i>objFieldsColl </i></dt>
<dd>
Required. Specifies the Fields collection object. </dd>
<dt>
<i>index </i></dt>
<dd>
Integer. Value must be greater than 0 and less than or equal to 65,535 (&amp;HFFFF). Specifies the index within the Fields collection. </dd>
<dt>
<i>proptag </i></dt>
<dd>
Long. Value must be greater than or equal to 65,536 (&amp;H10000). Specifies the property tag value for the MAPI property to be retrieved. </dd>
<dt>
<i>name </i></dt>
<dd>
String. Contains the custom name of the user-defined property, or a string representation of the of its property tag. </dd>
<dt>
<i>propsetID </i></dt>
<dd>
Optional. String. Contains the <b>GUID</b> that identifies the property set, represented as a string of hexadecimal characters. When <i>propsetID</i> is not supplied, the property set used for the access is the default property set value most recently set by this collection's <a href="oleobjaf_40xa.htm"><b>SetNamespace</b></a> method, or the initial default property set value, PS_PUBLIC_STRINGS. 
</dd>
</dl>
<p>
The <b>Item</b> property is the default property of a Fields collection, meaning that <i>objFieldsColl</i><b>(</b><i>index</i><b>)</b> is syntactically equivalent to <i>objFieldsColl</i>.<b>Item(</b><i>index</i><b>)</b> in Microsoft® Visual Basic® code. </p>
<h4>Data Type </h4>
<p>
Object (Field) </p>
<h4>Remarks </h4>
<p>
The <b>Item</b> property works like an accessor property for small collections. In the Fields collection object it allows access to the predefined MAPI properties and to your own custom user-defined properties. </p>
<p>
The <i>proptag</i> parameter in the second syntax contains the 32-bit MAPI property tag associated with the property and corresponds to the <a href="oleobjaf_0kmc.htm"><b>ID</b></a> property of the Field object. The property tag contains the MAPI property identifier in its high-order 16 bits and the MAPI property type in its low-order 16 bits. All MAPI properties are accessible except those of MAPI type PT_OBJECT or PT_CLSID. </p>
<p>
The <i>name</i> parameter in the third syntax must be a string. It contains either the custom property's name or its property tag. The tag must be represented as an ASCII string, which must consist of the characters "0x" followed by up to eight hexadecimal digits. Combined with the <b>GUID</b> in the <i>propsetID</i> parameter, this syntax allows you to access properties from a property set other than your default set, either by name or by property tag. </p>
<p>
If you have a custom property name that starts with the string "0x" you cannot access it with the <i>name</i> parameter, because the third syntax attempts to interpret the characters following "0x" as hexadecimal digits. </p>
<p>
If the specified property is not present in the Fields collection, the <b>Item</b> property returns <b>CdoE_NOT_FOUND</b>. </p>
<p>
Several macros for C/C++ programmers are available in the <i>MAPI Programmer's Reference</i> to help manipulate the MAPI property tag data structure. The macros <b>PROP_TYPE</b> and <b>PROP_ID</b> extract the property type and property identifer from the property tag. The macro <b>PROP_TAG</b> builds the property tag from the type and identifier components. </p>
<p>
Although the <b>Item</b> property itself is read-only, the <a href="oleobjaf_8lh0.htm">Field</a> object it returns can be accessed in the normal manner, and its properties retain their respective read/write or read-only accessibility. </p>
<h4>Example </h4>
<p>
This code fragment accesses a custom user-defined property using its property name: </p>
<pre><code>' from the function Fields_ItemByName() 
' error handling here ... 
If objFieldsColl Is Nothing Then 
    MsgBox "Must first select Fields collection" 
    Exit Function 
End If 
Set objOneField = objFieldsColl.Item("Keyword") 
' could be objFieldsColl("Keyword") since .Item is default property 
If objOneField Is Nothing Then 
    MsgBox "could not select Field object" 
    Exit Function 
End If 
If "" = objOneField.Name Then 
    MsgBox "Keyword has no name; ID = " &amp; objOneField.ID 
Else 
    MsgBox "Keyword name = " &amp; objOneField.Name 
End If 
 </code></pre>
<p>
You can also use the <b>Item</b> property to access MAPI properties. The defined MAPI properties are unnamed properties and can only be accessed using the numeric <i>proptag</i> value. They cannot be accessed using a string that represents the name. This code fragment accesses the MAPI property PR_MESSAGE_CLASS: </p>
<pre><code>' from the function Fields_Selector() 
' ... error handling here 
' you can provide a dialog to allow entry for MAPI proptags 
' or select property names from a list; for now, hard-coded 
lValue = CdoPR_MESSAGE_CLASS ' = &amp;H001A001E 
' high-order 16 bits are property ID; low-order are property type 
Set objOneField = objFieldsColl.Item(lValue) 
If objOneField Is Nothing Then 
    MsgBox "Could not get the Field using the value " &amp; lValue 
    Exit Function 
Else 
    strMsg = "Used " &amp; lValue _ 
                     &amp; " to access the MAPI property " _ 
                     &amp; "PR_MESSAGE_CLASS: type = " _ 
                     &amp; objOneField.Type _ 
                     &amp; "; value = " _ 
                     &amp; objOneField.Value 
    MsgBox strMsg 
End If 
 </code></pre>
<p>
CDO also supports multivalued MAPI properties. </p>
<p>
You can also choose to access properties from other property sets, including your own, by either setting the <i>propsetID</i> parameter or by calling the <a href="oleobjaf_40xa.htm"><b>SetNamespace</b></a> method to set that property set's unique identifier. </p>
<p>
For more information on working with MAPI properties, see <a href="oletasks_0hlx.htm">Customizing a Folder or Message</a> and <a href="oletasks_0ier.htm">Viewing MAPI Properties</a>. </p>
<p>&nbsp;</p></body>
</HTML>
