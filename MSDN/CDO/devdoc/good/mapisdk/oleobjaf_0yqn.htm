<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Count Property (AddressEntries Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_count_property_addressentries_collection_"></a>Count Property (AddressEntries Collection)  <a href="oleobjaf_7qd0.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Count</b> property returns the number of <a href="oleobjaf_6n1w.htm">AddressEntry</a> objects in the collection, or a very large number if the exact count is not available. Read-only. </p>
<h4>Syntax </h4>
<p>
<i>objAddrEntriesColl</i>.<b>Count</b> </p>
<h4>Data Type </h4>
<p>
Long </p>
<h4>Remarks </h4>
<p>
A large collection cannot always maintain an accurate count of its members, and the <b>Count</b> property cannot be used as the collection's size when it has the value &amp;H7FFFFFFF. Programmers needing to access individual objects in a large collection are strongly advised to use the Microsoft® Visual Basic® <b>For Each</b> statement or the <b>Get</b> methods. </p>
<p>
The recommended procedures for traversing a large collection are, in decreasing order of preference: 
<ol>
<li>
Global selection, such as the Visual Basic <b>For Each</b> statement. </li>
<li>
The <b>Get</b> methods, particularly <a href="oleobjaf_5nfj.htm"><b>GetFirst</b></a> and <a href="oleobjaf_72ov.htm"><b>GetNext</b></a>. </li>
<li>
An indexed loop, such as the Visual Basic <b>For ... Next</b> construction. </li>
</ol>
<p>
If the address book provider cannot supply the precise number of AddressEntry objects, CDO returns &amp;H7FFFFFFF ( = 2^31 – 1 = 2,147,483,647) for the <b>Count</b> property. This is the largest positive value for a long integer and is intended to prevent an approximate count from prematurely terminating an indexed loop. On 32-bit platforms, this value is defined in the type library as <b>CdoMaxCount</b>. On other platforms, <b>CdoMaxCount</b> is not defined, and a program on such a platform must compare the <b>Count</b> property against &amp;H7FFFFFFF to see if it is reliable. </p>
<p>
If the <b>Count</b> property is not reliable, that is, if it is &amp;H7FFFFFFF, a program using it to terminate an indexed loop must also check each returned object for a value of <b>Nothing</b> to avoid going past the end of the collection. </p>
<p>
The use of the <a href="oleobjaf_4i1r.htm"><b>Item</b></a> property in conjunction with the <b>Count</b> property in a large collection can be seen in the following example. </p>
<h4>Example </h4>
<p>
This code fragment counts the <a href="oleobjaf_6n1w.htm">AddressEntry</a> objects in a user's personal address book (PAB): </p>
<pre><code>Dim indx As Long                ' loop index / object counter 
Dim myPAB as AddressList        ' personal address book AddressList 
Dim myPABColl as AddressEntries ' AddressEntries collection of PAB 
Dim objOneAE as AddressEntry    ' single address entry in collection 
' select PAB from AddressLists collection of Session 
Set myPAB = MAPI.Session.AddressLists.Item("Personal Address Book") 
' .Item could have been omitted above since it is default property 
' make sure returned AddressList object is valid 
If myPAB Is Nothing Then 
&nbsp;  ' MsgBox "PAB object is invalid" 
&nbsp;  ' Exit 
End If 
' get AddressEntries collection of PAB AddressList 
Set myPABColl = myPAB.AddressEntries 
' see if PAB is empty 
indx = myPABColl.Count ' valid if not a "very large number" 
If 0 = indx Then ' collection empty 
&nbsp;  MsgBox "No AddressEntry items in PAB" 
ElseIf CdoMaxCount = indx Then ' .Count is not valid; get exact count 
&nbsp;  indx = 0 ' set up to count individual address entries 
&nbsp;  For Each objOneAE in myPABColl 
&nbsp;  &nbsp;  indx = indx + 1 ' another valid AddressEntry in collection 
&nbsp;  Next objOneAE 
End If 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
