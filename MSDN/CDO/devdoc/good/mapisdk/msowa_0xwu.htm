<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Impersonation</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_impersonation"></a>Impersonation</h1>
<p>
A user's access to Microsoft® Exchange Server information is handled in a thread of execution within the Microsoft® Internet Information Server (IIS) process. If the user wants authenticated access — to open a mailbox, for example — this thread must impersonate a Microsoft® Windows NT® security context. In other words, to be granted authenticated access to the Microsoft Exchange information store, a thread must be associated with a set of valid security credentials.</p>
<p>
The impersonation process has two parts:
<ol>
<li>
At the time a user logs on, save the valid security context into the Session object.</li>
<li>
When rendering a page in a multiframe set, or when a session ends, retrieve the saved security context and call the <b>Impersonate</b> method on the RenderingApplication object.</li>
</ol>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To save a security context</h5>
<p>
At the time of user logon, use a command such as the following (from the file lib\logon.inc), to save the current security context in the session object:</p>
<pre><code>Session("hImp") = objRenderApp.ImpID
 </code></pre>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To impersonate the logged on user</h5>
<ol>
<li>
When rendering a page in a multiframe set, or as a session is ending (such as in the method <b>Session_onEnd</b> in the file global.asa), retrieve the saved security context handle from the Session object. The following code is from the file lib\session.inc:<pre><code>hImp = Session("hImp")
 </code></pre>
</li>
<li>
Get the RenderingApplication object and call the <b>Impersonate</b> method, passing the security context handle, as shown in the following code from the file lib\session.inc.<pre><code>set objRA = Application(bstrRenderApp)
objRA.Impersonate(hImp)
 </code></pre>
</li>
</ol>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
