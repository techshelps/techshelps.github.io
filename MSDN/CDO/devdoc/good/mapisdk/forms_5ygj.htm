<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Setting the Message Class</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_olemsg_setting_the_message_class"></a>Setting the Message Class</h3>
<p>
After you have changed the set of fields, you need to provide a way for this form to be recognized (by a Microsoft Exchange client or by CDO) for the new, distinctive, type that it is. You do this by specifying and naming a new message class. You can give it any name you want, such as IPM.MyNote. </p>
<p>
To set the message class, assign it to the <a href="oleobjis_4g85.htm"><b>Type</b></a> property of the Message object. For example, this assignment occurs in Resolve.asp:</p>
<pre><code>oNewMessage.Type = "IPM.Microsoft.ITG.NewClassifiedAd" 
 </code></pre>
<p>
Before you make this assignment (for newly created objects), the Type field had a default setting of IPM.Note.</p>
<p>
To have the Microsoft Exchange Client recognize a new message class, use the Microsoft Exchange Forms Manager to add it to the forms library. Then, you can view the new form through the <b>New Form</b> option on the <b>Compose</b> menu of the Microsoft Exchange Client. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
