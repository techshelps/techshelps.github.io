<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Quick Start</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_quick_start"></a>Quick Start</h1>
<p>
The following example demonstrates how easy it is to add messaging to your applications when you use Microsoft® Visual Basic® or Visual Basic for Applications. </p>
<p>
In this code fragment, we first create a <a href="oleobjis_57w4.htm">Session</a> object and log on. We then create a <a href="oleobjis_2p10.htm">Message</a> object and set its properties to indicate its subject and content. Next we create a <a href="oleobjis_9cfo.htm">Recipient</a> object and call its <a href="oleobjis_7cvo.htm"><b>Resolve</b></a> method to obtain a full messaging address. We then call the Message object's <a href="oleobjis_2un9.htm"><b>Send</b></a> method to transmit the message. Finally, we display a completion message and log off. </p>
<pre><code>' This sample uses Visual Basic 3.0 error handling. 
' 
Function QuickStart() 
Dim objSession As MAPI.Session ' use early binding for more efficient 
Dim objMessage As Message      '               code and type checking 
Dim objOneRecip As Recipient 
 
On Error GoTo error_olemsg 
 
' create a session and log on -- username and password in profile 
Set objSession = CreateObject("MAPI.Session") 
' change the parameters to valid values for your configuration 
objSession.Logon profileName:="Sender Name" 
 
' create a message and fill in its properties 
Set objMessage = objSession.Outbox.Messages.Add 
objMessage.Subject = "Sample Message" 
objMessage.Text = "This is sample message text." 
 
' create the recipient 
Set objOneRecip = objMessage.Recipients.Add 
objOneRecip.Name = "Recipient Name" 
objOneRecip.Type = CdoTo 
objOneRecip.Resolve ' get MAPI to determine complete e-mail address 
 
' send the message and log off 
objMessage.Send showDialog:=False 
MsgBox "The message has been sent" 
objSession.Logoff 
Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Exit Function 
 
End Function 
 </code></pre>
<p>
The CDO Library invalidates the Message object after you call its <b>Send</b> method. This code fragment logs off to end the session after sending the message, but if you continued the MAPI session, you could avoid potential errors by setting the Message object to <b>Nothing</b>. </p>
<p>&nbsp;</p></body>
</HTML>
