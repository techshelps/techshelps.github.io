<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Attachments to a Message</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_adding_attachments_to_a_message"></a>Adding Attachments to a Message  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
You can add one or more attachments to a message. You add each attachment to the Attachments collection obtained from the Message object's <a href="oleobjis_8hlx.htm"><b>Attachments</b></a> property. The relationship between the Message object and an attachment is shown here: </p>
<p>
<a href="oleobjis_2p10.htm">Message</a> object <br>
&nbsp;  &nbsp;  <a href="oleobjaf_9yd0.htm">Attachments</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_0x10.htm">Attachment</a> object <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_84tw.htm"><b>Type</b></a> property <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_2elw.htm"><b>Source</b></a> property </p>
<p>
The CDO Library supports several different kinds of attachments: files, links to files, OLE objects, and embedded messages. An attachment's type is specified by its <b>Type</b> property. To add an attachment, use the related Attachment object property or method appropriate for that type, as shown in the following table: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=37%>Attachment type </th>
<th align=left width=63%>Related Attachment object property or method </th>
</tr>
<tr valign=top>
<td width=37%><b>CdoFileData </b></td>
<td width=63%><a href="oleobjaf_612s.htm"><b>ReadFromFile</b></a> method </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoFileLink </b></td>
<td width=63%><b>Source</b> property </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoOLE </b></td>
<td width=63%><b>ReadFromFile</b> method </td>
</tr>
<tr valign=top>
<td width=37%><b>CdoEmbeddedMessage </b></td>
<td width=63%><a href="oleobjis_1r8l.htm"><b>ID</b></a> property of the Message object to be embedded </td>
</tr>
</table><br>
<p>
The following example demonstrates inserting a file as an attachment. This example assumes that the application has already created the <a href="oleobjis_57w4.htm">Session</a> object variable <i>objSession</i> and successfully called the Session object's <a href="oleobjis_31ym.htm"><b>Logon</b></a> method, as described in <a href="oletasks_6q7i.htm">Starting a CDO Session</a>. </p>
<pre><code>' Function: Attachments_Add_Data 
' Purpose: Demonstrate the Add method for type = CdoFileData 
' See documentation topic: Adding Attachments To A Message, 
'    Add method (Attachments collection) 
Function Attachments_Add_Data() 
Dim objMessage As Message  ' local 
Dim objRecip As Recipient  ' local 
 
    On Error GoTo error_olemsg 
    If objSession Is Nothing Then 
        MsgBox ("must first log on; use Session-&gt;Logon") 
        Exit Function 
    End If 
    Set objMessage = objSession.Outbox.Messages.Add 
    If objMessage Is Nothing Then 
        MsgBox "could not create a new message in the Outbox" 
        Exit Function 
    End If 
    With objMessage ' message object 
        .Subject = "attachment test" 
        .Text = "Have a nice day." 
        .Text = " " &amp; objMessage.Text ' add placeholder for attachment 
        Set objAttach = .Attachments.Add ' add the attachment 
        If objAttach Is Nothing Then 
            MsgBox "Unable to create new Attachment object" 
            Exit Function 
        End If 
        With objAttach 
            .Type = CdoFileData 
            .Position = 0 ' render at first character of message 
            .Name = "c:\smiley.bmp" 
            .ReadFromFile "c:\smiley.bmp" 
         End With 
         objAttach.Name = "smiley.bmp" 
         .Update ' update message to save attachment in MAPI system 
    End With 
    MsgBox "Created message, added 1 CdoFileData attachment, updated" 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
 
End Function 
 </code></pre>
<p>
The attachment overwrites the placeholder character at the rendering position specified by the attachment's <a href="oleobjaf_9vn8.htm"><b>Position</b></a> property. A space is normally used for the placeholder character. </p>
<p>
The CDO Library does not actually place the attachment within the message; that is the responsibility of the messaging client application. You can also use the value –1 for the <b>Position</b> property, which indicates that the attachment should be sent with the message, but should not be rendered by the <b>Position</b> property. </p>
<p>
To insert an attachment of type <b>CdoOLE</b>, use code similar to the <b>CdoFileData</b> type example. Set the attachment type to <b>CdoOLE</b> and make sure that the specified file is a valid OLE <i>docfile</i> (a file saved by an OLE-aware application such as Microsoft® Word version 7.0 that uses the OLE interfaces <b>IStorage</b> and <b>IStream</b>). </p>
<p>
To add an attachment of type <b>CdoFileLink</b>, set the <a href="oleobjaf_84tw.htm"><b>Type</b></a> property to <b>CdoFileLink</b> and set the <b>Source</b> property to the file name. The following sample code demonstrates this type of attachment: </p>
<pre><code>' Function: Attachments_Add 
' Purpose: Demonstrate the Add method for type = CdoFileLink 
' See documentation topic: Adding Attachments To A Message, 
'     Add method (Attachments collection) 
Function Attachments_Add() 
    On Error GoTo error_olemsg 
 
    If objAttachColl Is Nothing Then 
        MsgBox "must first select an attachments collection" 
        Exit Function 
    End If 
    Set objAttach = objAttachColl.Add ' add the attachment 
    With objAttach 
        .Type = CdoFileLink 
        .Position = 0 ' render at first character of message 
        .Source = "\\server\bitmaps\honey.bmp" 
    End With 
    ' must update the message to save the new info 
    objOneMsg.Update ' update message; save attachment in MAPI system 
    MsgBox "Added an attachment of type CdoFileLink" 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
 
End Function 
 </code></pre>
<h4>See Also </h4>
<p>
<a href="oletasks_7nz9.htm">Creating and Sending a Message</a> </p>
<p>&nbsp;</p></body>
</HTML>
