<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Introduction</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_introduction"></a>Introduction</h1>
<p>
The Microsoft® Collaboration Data Objects (CDO) Library version 1.2 exposes messaging objects for use by Microsoft® Visual Basic®, C/C++, and Microsoft® Visual C++® applications. (In versions previous to 1.1, the CDO Library was called the OLE Messaging Library; in version 1.1 it was called the Active Messaging Library.)</p>
<p>
The CDO Library lets you quickly and easily add to your Visual Basic application the ability to send and receive mail messages and to interact with folders and address books. You can create programmable messaging objects, then use their properties and methods to meet the needs of your application. </p>
<p>
When you combine messaging objects with other programmable objects exposed by Microsoft® Access, Microsoft® Excel, and Microsoft® Word, you can quickly build custom applications that cover all your business needs. For example, with these powerful building blocks you can build a custom application that allows your users to extract information from a database, copy it to a spreadsheet for analysis, then create a report with the results and mail the report to several people. </p>
<p>
The Microsoft CDO Library does not represent a new messaging model. It represents an additional interface to the Messaging Application Programming Interface (MAPI) model, designed to handle the most common tasks for client developers using Visual Basic, C/C++, and Visual C++. </p>
<p>
This guide assumes that you are familiar with the Microsoft Visual Basic programming model. To help you use the CDO Library, this guide provides a short overview of the MAPI architecture. For complete reference information, see the <i>MAPI Programmer's Reference</i>.</p>
<p>
The CDO Library requires installation of MAPI and of an automation controller. An automation controller is an application that supports Automation, such as the following Microsoft applications: 
<ul>
<li>
Microsoft Visual Basic version 3.0 or later </li>
<li>
Microsoft Visual Basic for Applications </li>
<li>
Microsoft Access version 2.0 or later </li>
<li>
Microsoft Excel version 5.0 or later </li>
<li>
Microsoft Project version 4.0 or later </li>
<li>
Microsoft Visual C++ version 1.5 or later </li>
</ul>
<p>
<b>Note</b>&nbsp;&nbsp;Microsoft Visual Basic version 3.0 does not support multivalued properties. </p>
<p>&nbsp;</p></body>
</HTML>
