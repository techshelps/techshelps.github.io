<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Checking for New Mail</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_checking_for_new_mail"></a>Checking for New Mail  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The Inbox contains new messages. When users refer to new messages, they can mean messages that have arrived after the last time messages were read, or they can mean all unread messages. Depending on the needs of your application users, your applications can check various <a href="oleobjis_2p10.htm">Message</a> object properties to determine whether there is new mail. </p>
<p>
You can force immediate delivery of any pending messages by calling the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_24bj.htm"><b>DeliverNow</b></a> method. </p>
<p>
The following sample code tracks new messages by checking for messages in the Inbox with the <a href="oleobjis_2so5.htm"><b>Unread</b></a> property value equal to <b>True</b>: </p>
<pre><code>' Function: Util_CountUnread 
' Purpose:  Count unread messages in a folder 
' 
Function Util_CountUnread() 
Dim cUnread As Integer ' counter 
 
    On Error GoTo error_olemsg 
    If objMessages Is Nothing Then 
        MsgBox "must select a Messages collection" 
        Exit Function 
    End If 
    Set objMessage = objMessages.GetFirst 
    cUnread = 0 
    While Not objMessage Is Nothing ' loop through all messages 
        If True = objMessage.Unread Then 
            cUnread = cUnread + 1 
        End If 
        Set objMessage = objMessages.GetNext 
    Wend 
    MsgBox "Number of unread messages = " &amp; cUnread 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
 
End Function 
 </code></pre>
<p>
You can also check for new messages by counting the messages received after a specified time. For example, your application can maintain a variable that represents the time of the latest message received, based on the <a href="oleobjis_2p10.htm">Message</a> object's <a href="oleobjis_7y1x.htm"><b>TimeReceived</b></a> property. The application can periodically check for all messages with a <b>TimeReceived</b> value greater than the saved value. When new messages are found, the application increments its count of new messages and updates the saved value. </p>
<p>
With the CDO Library version 1.1 or later, you can use the <a href="oleobjis_1qd0.htm">Messages</a> collection's <a href="oleobjis_1p3z.htm"><b>Filter</b></a> property to obtain a <a href="oleobjis_4gxg.htm">MessageFilter</a> object. Setting the message filter's <a href="oleobjis_4cm7.htm"><b>TimeFirst</b></a> or <a href="oleobjis_1s2n.htm"><b>Unread</b></a> property reduces the number of messages presented to the loop doing the counting or other processing of new messages. </p>
<h4>See Also </h4>
<p>
<a href="oletasks_1j8y.htm">Filtering Messages in a Folder</a>, <a href="oletasks_81iw.htm">Reading a Message from the Inbox</a> </p>
<p>&nbsp;</p></body>
</HTML>
