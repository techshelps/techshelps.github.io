<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (Columns Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_add_method_columns_collection_"></a>Add Method (Columns Collection)  <a href="renobj_78ac.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Add</b> method creates and returns a new <a href="renobj_3qyc.htm">Column</a> object in the Columns collection. </p>
<h4>Syntax </h4>
<p>
<b>Set</b><i> objColumn = objColumnsColl</i>.<b>Add(</b><i>pszDisplayName, varProperty, lWidth, lFlags, lInsertAfter</i><b> [</b><i>, varType</i><b>] ) </b>
<dl>
<dt>
<i>objColumn </i></dt>
<dd>
On successful return, contains the new Column object. </dd>
<dt>
<i>objColumnsColl </i></dt>
<dd>
Required. The Columns collection object. </dd>
<dt>
<i>pszDisplayName </i></dt>
<dd>
Required. String. The display name to be assigned to the new Column object. </dd>
<dt>
<i>varProperty </i></dt>
<dd>
Required. Variant (Long or String). The property tag for the predefined or user-defined property, or the custom name of the user-defined property, that is to be rendered in the new Column object. </dd>
<dt>
<i>lWidth </i></dt>
<dd>
Required. Long. The absolute width of the new Column object. An added column is always handled as if it were in a custom view, even if it is added to a persistent view, so the width is never treated as relative. </dd>
<dt>
<i>lFlags </i></dt>
<dd>
Required. Long. The flags specifying certain display attributes of the new Column object. For a description of these flags, see the Column object's <a href="renobj_2xcv.htm"><b>Flags</b></a> property. </dd>
<dt>
<i>lInsertAfter </i></dt>
<dd>
Required. Long. The <a href="renobj_6hgf.htm"><b>Index</b></a> value of the column after which the new Column object is to be added to the collection. If this parameter is 0, the new column is added at the beginning of the collection. If <i>lInsertAfter</i> is greater than the size of the collection, the new column is added at the end. </dd>
<dt>
<i>varType </i></dt>
<dd>
Optional (required for user-defined properties). Long. The property type of the property to be rendered in the new Column object. The <i>varType</i> parameter is only needed for custom properties, because the property type of a predefined property is already included in its property tag, which is passed in the <i>varProperty</i> parameter. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
The <i>pszDisplayName</i>, <i>varProperty</i>, <i>lWidth</i>, <i>lFlags</i>, and <i>lInsertAfter</i> parameters correspond to the <a href="renobj_4s0v.htm"><b>Name</b></a>, <a href="renobj_2jxb.htm"><b>Property</b></a>, <a href="renobj_9win.htm"><b>Width</b></a>, <a href="renobj_2xcv.htm"><b>Flags</b></a>, and <a href="renobj_6hgf.htm"><b>Index</b></a> properties of the new <a href="renobj_3qyc.htm">Column</a> object, except that the new column's <b>Index</b> is greater by 1 than the <i>lInsertAfter</i> parameter. </p>
<p>
The first column in the collection has an <b>Index</b> value of 1, and the last has an <b>Index</b> equal to the size of the collection in the <a href="renobj_5hzz.htm"><b>Count</b></a> property. If the value of the <i>lInsertAfter</i> parameter exceeds the collection's size, the new column is added with an <b>Index</b> greater by 1 than the previous size. If <i>lInsertAfter</i> is less than the previous size, the <b>Index</b> values of all columns after the new column are incremented by 1. In all cases, the collection's <b>Count</b> is incremented by 1. </p>
<p>
The <i>varProperty</i> parameter designates the property to be rendered in the column. The parameter can be a long integer specifying the property by property tag, or a string specifying it by custom name. In both cases it corresponds to the <b>Property</b> property. Predefined properties are always specified by tag, while user-defined properties can be specified by either tag or name. </p>
<p>
If the <i>varProperty</i> parameter is a custom property name, it can optionally be prefixed with a GUID string identifying its property set. In this case, the GUID should be enclosed in braces. For more information and examples, see <a href="rendering_0c6r.htm">Using Named Properties</a>. </p>
<p>
The allowable values for the <i>varType</i> parameter are listed in the <a href="oleobjaf_8lh0.htm">Field</a> object's <a href="oleobjaf_6h5w.htm"><b>Type</b></a> property. </p>
<p>
If you are rendering a calendar view, the value of the <i>lWidth</i> parameter is ignored, although it is still required. The <a href="renobj_6b3o.htm">CalendarView</a> object makes its own calculations for column widths based on the values of its <a href="renobj_8tpb.htm"><b>Mode</b></a> and <a href="renobj_8p27.htm"><b>NumberOfUnits</b></a> properties. </p>
<p>&nbsp;</p></body>
</HTML>
