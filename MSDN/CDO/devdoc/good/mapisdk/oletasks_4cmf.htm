<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Organizing a Meeting</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_organizing_a_meeting"></a>Organizing a Meeting  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
A meeting is an appointment applicable to one or more messaging users. If you wish to organize a meeting, you start with an appointment that specifies the time and place, and you send it to the other users that are to be involved. </p>
<h5><img src="../../images/wedge.gif" border=0>&nbsp;&nbsp;&nbsp;&nbsp;To organize a meeting using the CDO Library </h5>
<ol>
<li>
Create a valid session and log on. </li>
<li>
Obtain a calendar folder from the active session. </li>
<li>
Create a new <a href="oleobjaf_5flg.htm">AppointmentItem</a> object in the calendar folder using its <a href="oleobjis_1qd0.htm">Messages</a> collection's <a href="oleobjis_2l66.htm"><b>Add</b></a> method. </li>
<li>
Set the appointment's <a href="oleobjaf_1e8v.htm"><b>MeetingStatus</b></a> property to <b>CdoMeeting</b>. </li>
<li>
Set the <a href="oleobjaf_10wv.htm"><b>StartTime</b></a> and <a href="oleobjaf_8ndr.htm"><b>EndTime</b></a> properties on the appointment, and other properties as applicable, such as <a href="oleobjaf_9ae7.htm"><b>Location</b></a>, <a href="oleobjis_7411.htm"><b>Subject</b></a>, and <a href="oleobjis_0e5h.htm"><b>Text</b></a>. </li>
<li>
Instantiate a <a href="oleobjis_3xro.htm">Recipients</a> collection for the appointment using its <a href="oleobjis_46cl.htm"><b>Recipients</b></a> property. </li>
<li>
<a href="oleobjis_9oku.htm"><b>Add</b></a> the appropriate messaging users to the Recipients collection. </li>
<li>
Set other properties on the AppointmentItem and Recipient objects as appropriate. </li>
<li>
<a href="oleobjis_2un9.htm"><b>Send</b></a> the appointment to the selected recipients. </li>
</ol>
<p>
The hierarchy of relevant objects is as follows: </p>
<p>
<a href="oleobjis_57w4.htm">Session</a> object <br>
&nbsp;  &nbsp;  <a href="oleobjaf_4u2c.htm">Folder</a> object <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_1qd0.htm">Messages</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjaf_5flg.htm">AppointmentItem</a> <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_3xro.htm">Recipients</a> collection <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_9cfo.htm">Recipient</a> <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_3wvo.htm">RecurrencePattern</a> <br>
&nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  &nbsp;  <a href="oleobjis_4kac.htm">MeetingItem</a> </p>
<p>
You create a meeting by setting the AppointmentItem object's <a href="oleobjaf_1e8v.htm"><b>MeetingStatus</b></a> property to <b>CdoMeeting</b> and sending it to one or more recipients. The appointment becomes a meeting as of the moment you call its <a href="oleobjis_2un9.htm"><b>Send</b></a> method. In response to this, CDO automatically instantiates a MeetingItem object in your Inbox and every Recipient object's Inbox. Each MeetingItem object becomes a member of the Inbox Messages collection, and it can be treated programmatically just like the regular <a href="oleobjis_2p10.htm">Message</a> objects in the collection. </p>
<p>
To accept a meeting request, a recipient calls the MeetingItem object's <a href="oleobjis_6uhr.htm"><b>Respond</b></a> method with <b>CdoResponseAccepted</b> in the <i>RespondType</i> parameter. <b>Respond</b> returns another MeetingItem object, which the recipient can <a href="oleobjis_2un9.htm"><b>Send</b></a> back to the organizer. Calling <b>Respond</b> with either <b>CdoResponseAccepted</b> or <b>CdoResponseTentative</b> causes an associated <a href="oleobjaf_5flg.htm">AppointmentItem</a> object to be created in the recipient's active calendar folder. </p>
<p>
A recipient can call the MeetingItem object's <a href="oleobjis_3un3.htm"><b>GetAssociatedAppointment</b></a> method to obtain the associated AppointmentItem object. <b>GetAssociatedAppointment</b> returns the appointment created by CDO in that recipient's calendar folder, not the original appointment from which you created the meeting. You are identified in the <a href="oleobjaf_6hnj.htm"><b>Organizer</b></a> property of every recipient's associated appointment. </p>
<p>
To decline a meeting request, a recipient calls <b>Respond</b> with <i>RespondType</i> set to <b>CdoResponseDeclined</b>, and then <b>Send</b>. No AppointmentItem object is created in the recipient's calendar folder in this case. </p>
<p>
If you decide to cancel a meeting, set the original appointment's <a href="oleobjaf_1e8v.htm"><b>MeetingStatus</b></a> property to <b>CdoMeetingCanceled</b> and <a href="oleobjis_2un9.htm"><b>Send</b></a> it again to all the recipients. Only you can cancel a meeting that you organized. </p>
<p>
You can make an appointment recurring by calling its <a href="oleobjaf_0zxb.htm"><b>GetRecurrencePattern</b></a> method, which returns a child <a href="oleobjis_3wvo.htm">RecurrencePattern</a> object describing the recurrence characteristics. You can then change the RecurrencePattern object's properties from their default values to specify the recurrence settings you want. The appointment can later be restored to nonrecurring status with the <a href="oleobjaf_1333.htm"><b>ClearRecurrencePattern</b></a> method. It is usually best to make an appointment recurring before generating a meeting from it. </p>
<p>
If you wish to edit an individual recurrence of a recurring appointment to make it different from other recurrences in the series, you must first instantiate it. To do this, you perform the following steps: 
<ol>
<li>
instantiate a <a href="oleobjis_4gxg.htm">MessageFilter</a> object on the <a href="oleobjis_1qd0.htm">Messages</a> collection using its <a href="oleobjis_1p3z.htm"><b>Filter</b></a> property; </li>
<li>
access the filter's <a href="oleobjaf_0yt0.htm">Fields</a> collection through its <a href="oleobjis_110f.htm"><b>Fields</b></a> property; </li>
<li>
add <a href="oleobjaf_8lh0.htm">Field</a> objects with property tags <b>CdoPR_START_DATE</b> and <b>CdoPR_END_DATE</b>, using the Fields collection's <a href="oleobjaf_1qy6.htm"><b>Add</b></a> method; </li>
<li>
set these fields to the start and end date/time of the desired recurrence; </li>
<li>
call the Messages collection's <a href="oleobjis_8fce.htm"><b>GetFirst</b></a> method to obtain an <a href="oleobjaf_5flg.htm">AppointmentItem</a> object representing the desired recurrence. </li>
</ol>
<p>
A meeting can be obtained from its parent Messages collection using the collection's <a href="oleobjis_3bdr.htm"><b>Item</b></a> property. To get to the Messages collection in a folder, use the <a href="oleobjaf_4u2c.htm">Folder</a> object's <a href="oleobjaf_2jsi.htm"><b>Messages</b></a> property. If you know a meeting's unique identifier, you can obtain it directly from the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_01bi.htm"><b>GetMessage</b></a> method. </p>
<p>
This code fragment creates and sends an appointment for a meeting at 9:00 the next morning: </p>
<pre><code>Dim objSess As Session 
Dim objCalFold As Folder ' calendar folder to create appointments in 
Dim colAppts As Messages ' appointments collection in calendar folder 
Dim objNewAppt As AppointmentItem 
Dim colRecips As Recipients ' users to be invited to the meeting 
 
Set objCalFold = objSess.GetDefaultFolder(CdoDefaultFolderCalendar) 
Set colAppts = objCalFold.Messages 
Set objNewAppt = colAppts.Add ' no parameters when adding appointments 
With objNewAppt 
&nbsp;  .Importance = CdoHigh 
&nbsp;  .Subject = "Extremely important meeting tomorrow!" 
&nbsp;  .Text = "We will discuss stock distribution." 
&nbsp;  .StartTime = DateAdd("d", 1, DateAdd("h", 9, Date)) 
&nbsp;  .EndTime = DateAdd("h", 1, .StartTime) ' meeting to last one hour 
&nbsp;  Set colRecips = .Recipients ' empty collection of users to invite 
End With 
With colRecips ' populate collection with invitees 
&nbsp;  .Add "John Doe", "jdoe@mycompany.com" ' can't use parentheses! 
&nbsp;  .Add "Mary Coe", "mcoe@mycompany.com" 
&nbsp;  .Resolve ' default to dialog in case of name ambiguities 
End With 
objNewAppt.Send ' appointment becomes a meeting at this moment 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
