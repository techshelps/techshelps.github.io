<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CDO Rendering Library Design</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_cdo_rendering_library_design"></a>CDO Rendering Library Design</h1>
<p>
The CDO Rendering Library is designed for flexibility and performance. It implements HTML rendering of the CDO objects most used by client applications. The CDO Rendering Library is not designed for development of service providers. </p>
<p>
The CDO Rendering Library is based on the capabilities provided by Automation. It allows you to create instances of programmable rendering <i>objects</i> that you can reference with automation controllers. An <i>automation controller</i> is a tool that supports Automation, such as Microsoft® Visual Basic®. </p>
<p>
For the purposes of this document, an <i>object</i> is an Automation object: a software component that exposes its properties and methods. Such an object follows the Visual Basic programming model and lets you get properties, set properties, and call methods. Throughout this document, Visual Basic is used as a concrete example of an automation controller, but the statements about Visual Basic apply to all such tools. </p>
<p>&nbsp;</p></body>
</HTML>
