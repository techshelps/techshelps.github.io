<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DataSource Property (ContainerRenderer Object)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_datasource_property_containerrenderer_object_"></a>DataSource Property (ContainerRenderer Object)  <a href="renobj_86no.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>DataSource</b> property contains the CDO container object to be rendered. Read/write. </p>
<h4>Syntax </h4>
<p>
<i>objContRend</i>.<b>DataSource </b></p>
<h4>Data Type </h4>
<p>
Object (AddressEntries collection, Folders collection, Messages collection, or Recipients collection) </p>
<h4>Remarks </h4>
<p>
The <b>DataSource</b> property accepts a CDO <a href="oleobjaf_7qd0.htm">AddressEntries</a>, <a href="oleobjaf_1nec.htm">Folders</a>, <a href="oleobjis_1qd0.htm">Messages</a>, or <a href="oleobjis_3xro.htm">Recipients</a> collection. </p>
<p>
Setting the <b>DataSource</b> property specifies the container object to be rendered and instantiates a new <a href="renobj_5ub8.htm">Views</a> collection for the container renderer. Any previous folder views are released and replaced from the new Views collection. All common and personal views remain in effect, and any existing custom views are also retained. </p>
<p>
If you are rendering an address book container, you must define one or more custom views for it, because it has no predefined common, personal, or folder views. Furthermore, you must <a href="renobj_2hnj.htm"><b>Add</b></a> any new custom views to the present <a href="renobj_5ub8.htm">Views</a> collection before you set <b>DataSource</b> to an AddressEntries collection. Otherwise the new custom views are not handled properly in the rendering. </p>
<p>
Setting the <b>DataSource</b> property repopulates the collection underlying the container object and revises its filter, just as setting the container renderer's <a href="renobj_93z3.htm"><b>CurrentView</b></a> property does. Any previous settings of the filter are ignored. </p>
<p>
If you are preparing to render a folder and set <b>DataSource</b> to a Folders or Messages collection, the <b>CurrentView</b> property is automatically reset to the new Views collection's default current view. If you are not rendering a folder, <b>DataSource</b> and <b>CurrentView</b> operate independently, so when you set <b>DataSource</b> to an object other than a Folders or Messages collection, <b>CurrentView</b> is left unchanged. </p>
<p>
For more information, see <a href="renoview_7wtv.htm">Rendering Container Objects</a>. </p>
<h4>Example </h4>
<p>
This code fragment assigns the <b>DataSource</b> property to the <a href="oleobjis_1qd0.htm">Messages</a> collection of the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_7jqm.htm"><b>Inbox</b></a> folder: </p>
<pre><code>' assume valid ContainerRenderer and Session objects 
Set objInbox = objSession.Inbox 
objContRend.DataSource = objInbox.Messages 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
