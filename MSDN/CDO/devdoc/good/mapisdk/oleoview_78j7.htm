<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Child Objects</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_olemsg_child_objects"></a>Child Objects</h2>
<p>
All CDO Library objects can be considered as relative to a <a href="oleobjis_57w4.htm">Session</a> object. A session's immediate child objects are the <a href="oleobjaf_5fw4.htm">AddressLists</a> collection object, the <a href="oleobjis_7aus.htm">InfoStores</a> collection object, and the Inbox or Outbox <a href="oleobjaf_4u2c.htm">Folder</a> object. These provide access, respectively, to the root of the address book hierarchy for the current session, the set of all message stores available to the session, and the current default Inbox and Outbox folders. </p>
<p>
The session's child objects have their own child objects, which in turn have child objects, and so on. This hierarchy permits increasingly detailed levels of access. The AddressLists collection, for example, contains one or more <a href="oleobjaf_4x84.htm">AddressList</a> child objects, each representing one available address book container. Each of these has as its child an <a href="oleobjaf_7qd0.htm">AddressEntries</a> collection containing <a href="oleobjaf_6n1w.htm">AddressEntry</a> child objects. Each address entry that is a distribution list has a <a href="oleobjaf_6fz3.htm"><b>Members</b></a> property that provides another AddressEntries collection for the members of the distribution list. </p>
<p>
See the <a href="oleobjaf_8m24.htm">Object Model</a> diagram for the logical hierarchy of the CDO Library. </p>
<p>
In addition to the hierarchy of objects, each object has properties and methods. The hierarchy is important because it determines the correct syntax to use in your Visual Basic applications. In your Visual Basic code, the relationship between a parent object and a child object is denoted by the left-to-right sequence of the objects in the Visual Basic statement. For example, </p>
<pre><code>objSession.AddressLists("Personal Address Book").AddressEntriesColl(2) 
 </code></pre>
<p>
refers to the second AddressEntry object in the AddressEntries collection of the current session's personal address book (PAB) AddressList object. </p>
<p>&nbsp;</p></body>
</HTML>
