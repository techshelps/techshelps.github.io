<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Count Property (Messages Collection)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_count_property_messages_collection_"></a>Count Property (Messages Collection)  <a href="oleobjis_1qd0.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>Count</b> property returns the number of <a href="oleobjaf_5flg.htm">AppointmentItem</a>, <a href="oleobjis_4kac.htm">MeetingItem</a>, or <a href="oleobjis_852s.htm">GroupHeader</a> and <a href="oleobjis_2p10.htm">Message</a> objects in the collection, or a very large number if the exact count is not available. Read-only. </p>
<h4>Syntax </h4>
<p>
<i>objMsgColl</i>.<b>Count</b> </p>
<h4>Data Type </h4>
<p>
Long </p>
<h4>Remarks </h4>
<p>
A large collection cannot always maintain an accurate count of its members, and the <b>Count</b> property cannot be used as the collection's size when it has the value &amp;H7FFFFFFF. Programmers needing to access individual objects in a large collection are strongly advised to use the Microsoft® Visual Basic® <b>For Each</b> statement or the <b>Get</b> methods. </p>
<p>
The recommended procedures for traversing a large collection are, in decreasing order of preference: 
<ol>
<li>
Global selection, such as the Visual Basic <b>For Each</b> statement. </li>
<li>
The <b>Get</b> methods, particularly <a href="oleobjis_8fce.htm"><b>GetFirst</b></a> and <a href="oleobjis_399q.htm"><b>GetNext</b></a>. </li>
<li>
An indexed loop, such as the Visual Basic <b>For ... Next</b> construction. </li>
</ol>
<p>
If the message store provider cannot supply the precise number of objects, CDO returns &amp;H7FFFFFFF ( = 2^31 – 1 = 2,147,483,647) for the <b>Count</b> property. This is the largest positive value for a long integer and is intended to prevent an approximate count from prematurely terminating an indexed loop. On 32-bit platforms, this value is defined in the type library as <b>CdoMaxCount</b>. On other platforms, <b>CdoMaxCount</b> is not defined, and a program on such a platform must compare the <b>Count</b> property against &amp;H7FFFFFFF to see if it is reliable. </p>
<p>
If the <b>Count</b> property is not reliable, that is, if it is &amp;H7FFFFFFF, a program using it to terminate an indexed loop must also check each returned object for a value of <b>Nothing</b> to avoid going past the end of the collection. </p>
<p>
The use of the <a href="oleobjis_3bdr.htm"><b>Item</b></a> property in conjunction with the <b>Count</b> property in a large collection can be seen in the following example. </p>
<h4>Example </h4>
<p>
This code fragment searches for a Message object with subject "Bonus". Note that the variable is declared as <b>Object</b> instead of Message, and that the <a href="oleobjaf_3a1r.htm"><b>Class</b></a> property is tested to verify that the object returned in the <b>Item</b> property is not an <a href="oleobjaf_5flg.htm">AppointmentItem</a>, <a href="oleobjis_852s.htm">GroupHeader</a>, or <a href="oleobjis_4kac.htm">MeetingItem</a> object. </p>
<pre><code>Dim i As Integer ' loop index / object counter 
Dim collMessages As Messages ' assume collection already provided 
Dim objMsg As Object ' could get either group header or message 
If collMessages Is Nothing Then 
    MsgBox "Messages collection object is invalid" 
    ' Exit 
ElseIf 0 = collMessages.Count Then ' collection is empty 
    MsgBox "No messages in collection" 
    ' Exit 
End If 
' look for message about "Bonus" in collection 
For i = 1 To collMessages.Count Step 1 
    Set objMsg = collMessages.Item(i) 
    ' or collMessages(i) since Item is default property 
    If objMsg Is Nothing Then ' end of collection 
        MsgBox "No such message found in collection" 
        Exit For 
    ElseIf objMsg.Class = CdoMsg Then ' exclude other object classes 
        If 0 = StrComp(objMsg.Subject, "Bonus") Then 
        ' or objMsg since Subject is default property 
            MsgBox "Desired message is at index " &amp; i 
            Exit For 
        End If 
    End If 
Next i 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
