<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About This Document</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_about_this_document"></a>About This Document</h1>
<p>
<a href="oleoview_1fsn.htm">Overview</a> discusses: 
<ul>
<li>
MAPI terms used in this guide; </li>
<li>
comparison between the CDO Library and the other MAPI programming interfaces; </li>
<li>
Automation and the operation of CDO within this technology; </li>
<li>
the design of the CDO Library, including the objects and collection objects that are available to you. </li>
</ul>
<p>
<a href="oletasks_4ofn.htm">Programming Tasks</a> offers sample Microsoft® Visual Basic® code for many common programming tasks, such as creating and sending a message, posting a message to a public folder, navigating through folders, searching through address books, and handling errors. </p>
<p>
<a href="forms_0gxf.htm">Designing and Creating Forms</a> discusses forms and their relationship to other e-mail messages. It then explains how to create forms, and concludes with an extended example of form creation. </p>
<p>
<a href="oleobjaf_0fzn.htm">Objects, Properties, and Methods</a> provides a summary of every object and collection object in the CDO library, listing all the properties and methods each one exposes. This is followed by a model of all the objects presented in their containment hierarchy. </p>
<p>
<a href="oleobjaf_9m2b.htm">Properties Common to All CDO Library Objects</a> describes the properties that are exposed by every object in the CDO library and which have the same meaning for every object. </p>
<p>
This is followed by an alphabetical series of topics covering every object and collection in the CDO Library and providing comprehensive reference information for their properties and methods. </p>
<p>
The appendixes offer additional background information about various aspects of CDO programming: 
<ul>
<li>
<a href="oleerror_0y7n.htm">Error Codes</a> describes and lists the warning and error codes that can be returned from various properties and methods. </li>
<li>
<a href="oleprops_8i0j.htm">MAPI Property Tags</a> lists the property tags and type library constants for predefined MAPI properties. </li>
<li>
<a href="cdoexprp_5vzn.htm">Microsoft Exchange Property Tags</a> lists the property tags for predefined Microsoft® Exchange properties. </li>
<li>
<a href="olewebpg_2ir8.htm">Web Page Support</a> describes how the CDO Library provides support for HTML (Hypertext Markup Language) script on a Web page. </li>
<li>
<a href="oleprobj_9mgb.htm">How Programmable Objects Work</a> provides a detailed explanation of COM objects, Automation, and the relationship between CDO and MAPI. </li>
<li>
<a href="olejavap_40oj.htm">Java Programming Considerations</a> discusses procedures and provides examples for accessing CDO Library objects from Java. </li>
<li>
<a href="olemistk_8oj7.htm">Common Mistakes</a> discusses design and coding errors that can be made when programming with the CDO Library. </li>
</ul>
<p>
The document concludes with a Glossary, which defines terms that are important to understanding CDO, MAPI, Automation, COM, and other related technologies. </p>
<p>
The best way to learn about the CDO Library is to alternate your reading with hands-on programming. You can use the sample code that is provided with the CDO Library. For information about the sample code, see the Release Notes. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
