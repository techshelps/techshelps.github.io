<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetRecurrencePattern Method (AppointmentItem Object)</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_getrecurrencepattern_method_appointmentitem_object_"></a>GetRecurrencePattern Method (AppointmentItem Object)  <a href="oleobjaf_5flg.htm"><img src="images/group.gif" border=0></a></h1>
<p>
The <b>GetRecurrencePattern</b> method returns a <a href="oleobjis_3wvo.htm">RecurrencePattern</a> object defining the recurrence attributes of an appointment. </p>
<h4>Syntax </h4>
<p>
<b>Set</b><i> objRecurPatt = objAppointment</i>.<b>GetRecurrencePattern( ) </b>
<dl>
<dt>
<i>objRecurPatt </i></dt>
<dd>
On successful return, contains the RecurrencePattern object. </dd>
<dt>
<i>objAppointment </i></dt>
<dd>
Required. This AppointmentItem object. 
</dd>
</dl>
<h4>Remarks </h4>
<p>
If the appointment had already been specified as recurring, the <b>GetRecurrencePattern</b> method returns the <a href="oleobjis_3wvo.htm">RecurrencePattern</a> object containing the current recurrence characteristics. If the appointment was previously nonrecurring, it is made recurring and <b>GetRecurrencePattern</b> returns a new RecurrencePattern object populated with the default values indicated in its property descriptions. </p>
<p>
The <a href="oleobjaf_3pen.htm"><b>IsRecurring</b></a> property is set to <b>True</b> when the <b>GetRecurrencePattern</b> method is called. </p>
<p>
<b>Note</b>  You cannot use <b>GetRecurrencePattern</b> to test whether an appointment is recurring, because it always returns a RecurrencePattern object and forces the appointment to be recurring. Instead, you should test for recurrence using the <b>IsRecurring</b> property. </p>
<p>
You can use the <a href="oleobjaf_1333.htm"><b>ClearRecurrencePattern</b></a> method to return the appointment to nonrecurring status. </p>
<h4>Example </h4>
<p>
This code fragment makes an appointment recurring and changes its <a href="oleobjis_7411.htm"><b>Subject</b></a> property. It is equally valid for a nonrecurring appointment, an appointment originating a recurring series, and an individual recurrence in that series. If <i>objAppt</i> is nonrecurring before executing this fragment, it becomes the originator of a recurring series. If it is already an originator, doing <i>objOrig</i>.<b>Update</b> is equivalent to doing <i>objAppt</i>.<b>Update</b>. </p>
<pre><code>Dim objAppt, objOrig As AppointmentItem 
  Dim objRecPatt As RecurrencePattern 
  ' objAppt can be solitary, an originator, or a recurrence 
  Set objRecPatt = objAppt.GetRecurrencePattern 
  With objRecPatt 
        ' set recurrence pattern properties as desired 
  End with 
  Set objOrig = objRecPatt.Parent 
  With objOrig 
    .Subject = "New subject for entire recurring series" 
    .Update ' necessary for any changes to take effect 
  End with 
 </code></pre>
<p>
<b>Note</b>  If <i>objAppt</i> in the preceding fragment is an individual recurrence, its properties are not changed by <i>objOrig</i>.<b>Update</b>. This is because changes you make in the original appointment only affect recurrences instantiated after the update. Because <i>objAppt</i> was already instantiated before the update, its <b>Subject</b> property is not updated when <i>objOrig</i>.<b>Subject</b> is. To avoid this problem, you can refresh <i>objAppt</i> by repeating the <b>Set</b> statement that instantiated it in the first place. </p>
<p>&nbsp;</p></body>
</HTML>
