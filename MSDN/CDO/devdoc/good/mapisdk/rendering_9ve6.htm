<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Retrieving Configuration Information</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_olemsg_retrieving_configuration_information"></a>Retrieving Configuration Information</h3>
<p>
Everything that you store using <a href="renobj_8uhr.htm"><b>LoadConfiguration</b></a> can later be retrieved through the <a href="renobj_5djz.htm"><b>ConfigParameter</b></a> property of the RenderingApplication object because all this information, whether originally from the registry or from the Microsoft Exchange directory service, is mapped into the same table. You use <b>ConfigParameter</b> by passing a single parameter, called <i>parameter</i>, to specify the configuration value you want to retrieve. For example,</p>
<pre><code>objRendApp.ConfigParameter("Published Public Folders")
 </code></pre>
<p>
returns the published public folder shortcuts. Because this information is stored in the registry by name, you can store additional application-specific information in the registry key (with <b>LoadConfiguration</b>) and retrieve it later when you need it, using the RenderingApplication object. For example, the following call retrieves the value for the Microsoft Exchange Server saved previously in a registry entry called Server:</p>
<pre><code>bstrExchServer = objRenderApp.ConfigParameter("Server")
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
