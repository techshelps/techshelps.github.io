<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Active Server Pages</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_olemsg_about_active_server_pages"></a>About Active Server Pages</h2>
<p>
Active Server Pages (ASP) is an open, compile-free application environment in which you can combine HTML pages, scripts, and Microsoft® <a href="olegloss_48ip.htm#_olemsg_activex_gly">ActiveX</a>™ server components to create powerful Web-based applications. </p>
<p>
Active Server Pages offers native support for Microsoft® Visual Basic® Scripting Edition (VBScript) and Microsoft® JScript™, and supports other scripting languages such as REXX, Python, and Perl through Active Scripting plug-ins. Active Server Pages also supports ActiveX Scripting, allowing virtually any scripting engine to be used. It allows Web developers to write scripts that are executed on either the server or the client. </p>
<p>
Active Server Pages also supports ActiveX components developed in any language, such as C++, Visual Basic, Java, COBOL, and others. The resulting applications are compatible with any Web browser running on any operating system. (The server-side scripting processor also allows for <a href="msowa_7l4j.htm">multilingual support</a>, defining in which language HTML is returned, based on user preference.)</p>
<h4>Script Processing</h4>
<p>
Microsoft Active Server Pages processes ASP scripts. When Active Server Pages encounters regular HTML text, it does not process it, but passes it through the Active Server response object (and an <b>IStream</b> object) directly to the browser. When Active Server Pages encounters text within server-side script tags (&lt;% and %&gt;), it processes this script code and generates HTML, which it sends to the browser. </p>
<p>
Scripts are not stored in a compiled form. Rather, they are interpreted when the ASP file is requested from the server.</p>
<h4>Active Server Pages Sessions</h4>
<p>
Active Server Pages is not stateless. This means that, to use it, you need to start an Active Server Pages <a href="olegloss_48j7.htm#_olemsg_session_gly">session</a>. Such a session exists  —  and a Session object is created — after a user connects. When the session expires, the Session object is destroyed. In contrast, the Hypertext Transfer Protocol (<a href="olegloss_48iw.htm#_olemsg_http_gly">HTTP</a>) is stateless, which means that no "state" information concerning the requester is maintained between successive requests to the HTTP server.</p>
<p>
Because the CDO libraries are an interface to MAPI, they must use a MAPI session. A MAPI session object is stored as a state variable in an Active Server Pages session, which means that a user need not log on to MAPI for each request. </p>
<p>
Active Server Pages uses a default twenty-minute time-out. Scripts used with <a href="msowa_0ppv.htm">Microsoft Outlook Web Access</a> set this time-out to sixty minutes for authenticated users. When this time-out expires, the Active Server Pages session and the MAPI session objects are destroyed.</p>
<p>&nbsp;</p></body>
</HTML>
