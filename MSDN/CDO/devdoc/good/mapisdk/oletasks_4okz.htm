<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Accessing Folders</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_olemsg_accessing_folders"></a>Accessing Folders  <a href="oletasks_4ofn.htm"><img src="images/group.gif" border=0></a></h1>
<p>
Folders can be organized in a hierarchy, allowing you to access folders within folders. Subfolders appear in the <a href="oleobjaf_1nec.htm">Folders</a> collection returned by the <a href="oleobjaf_2u5u.htm"><b>Folders</b></a> property of the <a href="oleobjaf_4u2c.htm">Folder</a> object containing them. </p>
<p>
With the CDO Library version 1.1 and later, you can create a new folder within an existing folder using the <a href="oleobjaf_3uqn.htm"><b>Add</b></a> method of the Folders collection. </p>
<p>
There are two general approaches for accessing folders: 
<ul>
<li>
Obtaining the folder directly by calling the <a href="oleobjis_57w4.htm">Session</a> object's <a href="oleobjis_9hgu.htm"><b>GetFolder</b></a> method. </li>
<li>
Navigating folders using the Folders collection's <b>Get</b> methods. </li>
</ul>
<p>
To obtain the folder directly using the <b>GetFolder</b> method, you must have the folder's identifier. In the following code fragment, the identifier is stored in the variable <i>strFolderID</i>: </p>
<pre><code>Function Session_GetFolder() 
    On Error GoTo error_olemsg 
 
    If objSession Is Nothing Then 
        MsgBox "No active session, must log on" 
        Exit Function 
    End If 
    If strFolderID = "" Then 
        MsgBox ("Must first set folder ID variable; see Folder-&gt;ID") 
        Exit Function 
    End If 
    Set objFolder = objSession.GetFolder(strFolderID) 
    ' equivalent to: 
    ' Set objFolder = objSession.GetFolder(folderID:=strFolderID) 
    If objFolder Is Nothing Then 
        Set objMessages = Nothing 
        MsgBox "Unable to retrieve folder with specified ID" 
        Exit Function 
    End If 
    MsgBox "Folder set to " &amp; objFolder.Name 
    Set objMessages = objFolder.Messages 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Set objFolder = Nothing 
    Set objMessages = Nothing 
    MsgBox "Folder is no longer available" 
    Exit Function 
End Function 
 </code></pre>
<p>
To navigate through the hierarchy of folders, start with a known or available folder, such as the Inbox or Outbox, and examine its <a href="oleobjaf_1nec.htm">Folders</a> collection. You can use the collection's <a href="oleobjaf_68tq.htm"><b>GetFirst</b></a> and <a href="oleobjaf_81f2.htm"><b>GetNext</b></a> methods to get each <a href="oleobjaf_4u2c.htm">Folder</a> object in the collection. When you have a subfolder, you can examine its properties, such as its name, to see whether it is the desired folder. The following code fragment navigates through all existing subfolders of the Inbox: </p>
<pre><code>Function TestDrv_Util_ListFolders() 
    On Error GoTo error_olemsg 
    If objFolder Is Nothing Then 
        MsgBox "Must select a folder object; see Session menu" 
        Exit Function 
    End If 
    If 2 = objFolder.Class Then ' verify object is a Folder 
            ' with CDO Library 1.1, can use Class value: 
            ' If CdoFolder = objFolder.Class Then 
        x = Util_ListFolders(objFolder) ' use current global folder 
    End If 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
 
End Function 
 
' Function: Util_ListFolders 
' Purpose: Recursively list all folders below the current folder 
' See documentation topic: Folders collection 
Function Util_ListFolders(objParentFolder As Object) 
Dim objFoldersColl As Folders ' the child Folders collection 
Dim objOneSubfolder As Folder ' a single Folder object 
    On Error GoTo error_olemsg 
    If Not objParentFolder Is Nothing Then 
        MsgBox ("Folder name = " &amp; objParentFolder.Name) 
        Set objFoldersColl = objParentFolder.Folders 
        If Not objFoldersColl Is Nothing Then ' loop through all 
            Set objOneSubfolder = objFoldersColl.GetFirst 
            While Not objOneSubfolder Is Nothing 
                x = Util_ListFolders(objOneSubfolder) 
                Set objOneSubfolder = objFoldersColl.GetNext 
            Wend 
        End If 
    End If 
    Exit Function 
 
error_olemsg: 
    MsgBox "Error " &amp; Str(Err) &amp; ": " &amp; Error$(Err) 
    Resume Next 
End Function 
 </code></pre>
<h4>See Also </h4>
<p>
<a href="oletasks_0boy.htm">Searching for a Folder</a> </p>
<p>&nbsp;</p></body>
</HTML>
