<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Run-Time Type Information</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_run.2d.time_type_information"></a>Run-Time Type Information</h1>
<p>
Run-time type information (RTTI) is a mechanism that allows the type of an object to be determined during program execution. RTTI was added to the C++ language because many vendors of class libraries were implementing this functionality themselves. This caused incompatibilities between libraries. Thus, it became obvious that support for run-time type information was needed at the language level.</p>
<p>
For the sake of clarity, this discussion of RTTI is almost completely restricted to pointers. However, the concepts discussed also apply to references.</p>
<p>
There are three main C++ language elements to run-time type information:
<ul type=disc>
<li>
The dynamic_cast operator. <br>
Used for conversion of polymorphic types. See <a href="_pluslang_dynamic_cast_operator.htm">dynamic_cast Operator</a> for more information.<br><br></li>
<li>
The typeid operator. <br>
Used for identifying the exact type of an object.<br><br></li>
<li>
The type_info class. <br>
Used to hold the type information returned by the typeid operator.</li>
</ul>
</font></BODY>
</HTML>
