<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>back_insert_iterator</title></head>
<body bgcolor=white>

<h2><a name="back_insert_iterator">back_insert_iterator</a></h2>
<META NAME="MS-HKWD" CONTENT="back_insert_iterator">
<pre><code>template&lt;class Cont&gt;
    class <b>back_insert_iterator</b>
        : public iterator&lt;output_iterator_tag, void, void&gt; {
public:
    typedef Cont <a href="ITERATOR_back_insert_iteratorCCcontainer_type.htm#back_insert_iterator::container_type"><b>container_type</b></a>;
    typedef Cont::value_type <a href="ITERATOR_back_insert_iteratorCCvalue_type.htm#back_insert_iterator::value_type"><b>value_type</b></a>;
    explicit <a href="ITERATOR_back_insert_iteratorCCback_insert_iterator.htm#back_insert_iterator::back_insert_iterator"><b>back_insert_iterator</b></a>(Cont&amp; x);
    back_insert_iterator&amp; <a href="ITERATOR_back_insert_iteratorCCoperatorE.htm#back_insert_iterator::operator="><b>operator=</b></a>(const Cont::value_type&amp; val);
    back_insert_iterator&amp; <a href="ITERATOR_back_insert_iteratorCCoperatorX.htm#back_insert_iterator::operator*"><b>operator*</b></a>();
    back_insert_iterator&amp; <a href="ITERATOR_back_insert_iteratorCCoperatorPP.htm#back_insert_iterator::operator++"><b>operator++</b></a>();
    back_insert_iterator <a href="ITERATOR_back_insert_iteratorCCoperatorPP.htm#back_insert_iterator::operator++"><b>operator++</b></a>(int);
protected:
    Cont&amp; <a href="ITERATOR_back_insert_iterator.htm#back_insert_iterator::container"><b>container</b></a>;
    };</code></pre>
<p>The template class describes an output iterator object. It inserts elements into a container of type <code><b>Cont</b></code>, which it 
accesses via the protected reference object it stores called <a name="back_insert_iterator::container"><code><b>container</b></code></a>. The container must define:</p>
<ul>
<li>The member type <code><b>value_type</b></code>, which is the type of an element of the sequence controlled by the container.</li>
<li>The member function <code><b>push_back</b></code><code>(value_type c)</code>, which appends a new element with value <code>c</code> to the end of the 
sequence.</li>
</ul>
</body>
</html>
