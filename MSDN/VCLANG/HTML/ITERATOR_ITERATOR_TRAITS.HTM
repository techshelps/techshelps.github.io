<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>iterator_traits</title></head>
<body bgcolor=white>

<h2><a name="iterator_traits">iterator_traits</a></h2>
<META NAME="MS-HKWD" CONTENT="iterator_traits">
<pre><code>template&lt;class It&gt;
    struct <b>iterator_traits</b> {
    typedef It::iterator_category <b>iterator_category</b>;
    typedef It::value_type <b>value_type</b>;
    typedef It::distance_type <b>distance_type</b>;
    };</code></pre>
<p>The template class determines several critical types associated with the iterator type <code>It</code>. It defines the member types 
<a name="iterator_traits::iterator_category"><code>iterator_category</code></a> (a synonym for <code>It::iterator_category</code>), <a name="iterator_traits::value_type"><code>value_type</code></a> (a synonym for <code>It::value_type</code>), 
and <a name="iterator_traits::distance_type"><code>distance_type</code></a> (a synonym for <code>It::distance_type</code>).</p>
<p>In this <a href="INDEX_Table_of_Contents.htm#implementation">implementation</a>, if a translator does not support partial specialization of templates, you should use the template 
functions:</p>
<pre><code>template&lt;class C, class T, class Dist&gt;
    C <a name="_Iter_cat"><b>_Iter_cat</b></a>(const iterator&lt;C, T, Dist&gt;&amp;);
template&lt;class T&gt;
    random_access_iterator_tag <b>_Iter_cat</b>(const T *);

template&lt;class C, class T, class Dist&gt;
    T *<a name="_Val_type"><b>_Val_type</b></a>(const iterator&lt;C, T, Dist&gt;&amp;);
template&lt;class T&gt;
    T *<b>_Val_type</b>(const T *);

template&lt;class C, class T, class Dist&gt;
    Dist *<a name="_Dist_type"><b>_Dist_type</b></a>(const iterator&lt;C, T, Dist&gt;&amp;);
template&lt;class T&gt;
    ptrdiff_t *<b>_Dist_type</b>(const T *);</code></pre>
<p>which determine the same types somewhat less directly. You use these functions as arguments on a function call. Their 
sole purpose is to supply a useful template class parameter to the called function.</p>
</body>
</html>
