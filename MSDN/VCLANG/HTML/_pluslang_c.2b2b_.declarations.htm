<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Declarations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.declarations"></a>C++ Declarations</h1>
<p>
A declaration introduces one or more names into a program. Declarations can occur more than once in a program. Therefore, classes, structures, enumerated types, and other user-defined types can be declared for each compilation unit. The constraint on this multiple declaration is that all declarations must be identical. Declarations also serve as definitions, except when the declaration:
<ul type=disc>
<li>
Is a function prototype (a function declaration with no function body).<br><br></li>
<li>
Contains the <b>extern</b> specifier but no initializer (objects and variables) or function body (functions). This signifies that the definition is not necessarily in the current translation unit and gives the name external linkage.<br><br></li>
<li>
Is of a static data member inside a class declaration.<p class=tl>
Because static class data members are discrete variables shared by all objects of the class, they must be defined and initialized outside the class declaration. (For more information about classes and class members, see Chapter 8, <a href="_pluslang_classes.htm">Classes</a>.)</P></li>
<li>
Is a class name declaration with no following definition, such as <code>class T;</code>.<br><br></li>
<li>
Is a <b>typedef</b> statement.</li>
</ul>
<p>
Examples of declarations that are also definitions are:</p>
<pre><code>// Declare and define int variables i and j.
int i;
int j = 10;

// Declare enumeration suits.
enum suits { Spades = 1, Clubs, Hearts, Diamonds };

// Declare class CheckBox.
class CheckBox : public Control
{
public:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Boolean IsChecked();
 &nbsp;&nbsp; virtual int&nbsp;&nbsp;&nbsp;&nbsp; ChangeState() = 0;
};
</code></pre>
<p>
Some declarations that are not definitions are:</p>
<pre><code>extern int i;
char *strchr( const char *Str, const char Target );
</code></pre>
</font></BODY>
</HTML>
