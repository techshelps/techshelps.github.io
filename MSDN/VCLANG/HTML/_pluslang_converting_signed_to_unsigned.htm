<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Converting Signed to Unsigned</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_converting_signed_to_unsigned"></a><sup></sup>Converting Signed to Unsigned</h1>
<p>
Objects of signed integral types can be converted to corresponding unsigned types. When these conversions occur, the actual bit pattern does not change; however, the interpretation of the data changes. Consider this code:</p>
<pre><code>#include &lt;iostream.h&gt;

void main()
{
 &nbsp;&nbsp; short&nbsp; i = -3;
 &nbsp;&nbsp; unsigned short u;

 &nbsp;&nbsp; cout &lt;&lt; (u = i) &lt;&lt; "\n";
}
</code></pre>
<p>
The following output results:</p>
<pre><code>65533
</code></pre>
<p>
In the preceding example, a <b>signed short</b>, <code>i</code>, is defined and initialized to a negative number. The expression <code>(u = i)</code> causes <code>i</code> to be converted to an <b>unsigned short</b> prior to the assignment to <code>u</code>.</p>
</font></BODY>
</HTML>
