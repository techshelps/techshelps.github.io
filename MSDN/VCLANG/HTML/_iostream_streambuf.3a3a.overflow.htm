<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>streambuf::overflow</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_streambuf.3a3a.overflow"></a><sup></sup>streambuf::overflow</h1>
<p>
<b>virtual int overflow( int </b><i>nCh </i><b>= EOF ) = 0;</b></p>
<p class=label>
<b>Return Value</b></p>
<p>
<b>EOF</b> to indicate an error.</p>
<p class=label>
<b>Parameter</b></p>
<p class=dt>
<i>nCh</i></p>
<p class=indent>
<b>EOF</b> or the character to output.</p>
<p class=label>
<b>Remarks</b></p>
<p>
The virtual <b>overflow</b> function, together with the <b>sync</b> and <b>underflow</b> functions, defines the characteristics of the <b>streambuf</b>-derived class. Each derived class might implement <b>overflow</b> differently, but the interface with the calling stream class is the same.</p>
<p>
The <b>overflow</b> function is most frequently called by public <b>streambuf</b> functions like <b>sputc</b> and <b>sputn</b> when the put area is full, but other classes, including the stream classes, can call <b>overflow</b> anytime.</p>
<p>
The function “consumes” the characters in the put area between the <b>pbase</b> and <b>pptr</b> pointers and then reinitializes the put area. The <b>overflow</b> function must also consume <i>nCh</i> (if <i>nCh</i> is not <b>EOF</b>), or it might choose to put that character in the new put area so that it will be consumed on the next call.</p>
<p>
The definition of “consume” varies among derived classes. For example, the <b>filebuf</b> class writes its characters to a file, while the <b>strsteambuf</b> class keeps them in its buffer and (if the buffer is designated as dynamic) expands the buffer in response to a call to <b>overflow</b>. This expansion is achieved by freeing the old buffer and replacing it with a new, larger one. The pointers are adjusted as necessary.</p>
<p class=label>
<b>Default Implementation</b></p>
<p>
No default implementation. Derived classes must define this function.</p>
<p>
<a href="_iostream_streambuf.htm">streambuf Overview</a>  |&nbsp; <a href="_iostream_iostream_class_list.htm#_iostream_stream_buffer_classes">Stream Buffer Classes</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_iostream_streambuf.3a3a.pbase.htm">streambuf::pbase</a>, <a href="_iostream_streambuf.3a3a.pptr.htm">streambuf::pptr</a>, <a href="_iostream_streambuf.3a3a.setp.htm">streambuf::setp</a>, <a href="_iostream_streambuf.3a3a.sync.htm">streambuf::sync</a>, <a href="_iostream_streambuf.3a3a.underflow.htm">streambuf::underflow</a></p>
</font></BODY>
</HTML>
