<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Grammar of C++ Declarators</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_grammar_of_c.2b2b_.declarators"></a>Grammar of C++ Declarators</h1>
<p class=dt>
<i>declarator-list</i>: </p>
<p class=indent>
<i>init-declarator</i> <br>
<i>declarator-list</i> <b> ,</b>&nbsp;&nbsp;&nbsp;<i>init-declarator</i></p>
<p class=dt>
<i>init-declarator</i>: </p>
<p class=indent>
<i>ms-modifier-list</i><sub>opt</sub>  <i>declarator&nbsp; initializer</i><sub>opt</sub></p>
<p class=dt>
<i>declarator</i>: </p>
<p class=indent>
<i>dname</i> <br>
<i>ptr-operator&nbsp; declarator</i> <br>
<i>declarator</i>  <b>(</b> <i> argument-declaration-list</i>  <b>)</b> <i> cv-mod-list</i><sub>opt</sub> <br>
<i>declarator</i>  <b>[&nbsp; </b><i>constant-expression</i><sub>opt</sub>  <b>]</b> <br>
<b>(</b><i> declarator</i>  <b>)</b></p>
<p class=dt>
<i>cv-mod-list</i>:</p>
<p class=indent>
<i>cv-qualifier&nbsp; cv-mod-list</i><sub>opt</sub> </p>
<p class=dt>
<i>ptr-operator</i>: </p>
<p class=indent>
<i>ms-modifier-list</i><sub>opt</sub>  <b>*</b> <i> cv-qualifier-list</i><sub>opt</sub> <br>
<i>ms-modifier-list</i><sub>opt</sub>  <b>&amp;</b>  <i>cv-qualifier-list</i><sub>opt</sub> <br>
<i>ms-modifier-list</i><sub>opt</sub>  <i>complete-class-name</i>  <b>::</b>  <b>*</b> <i> cv-qualifier-list</i><sub>opt</sub></p>
<p class=dt>
<i>cv-qualifier-list</i>: </p>
<p class=indent>
<i>cv-qualifier&nbsp; cv-qualifier-list</i><sub>opt</sub></p>
<p class=dt>
<i>cv-qualifier</i>: </p>
<p class=indent>
<b>const</b> <br>
<b>volatile</b></p>
<p class=dt>
<i>dname</i>: </p>
<p class=indent>
<i>name</i> <br>
<i>class-name</i> <br>
<i>~&nbsp; class-name</i> <br>
<i>typedef-name</i> <br>
<i>qualified-type-name</i></p>
<p class=dt>
<i>type-name</i>: </p>
<p class=indent>
<i>type-specifier-list&nbsp; ms-modifier-list</i><sub>opt </sub> <i>abstract-declarator</i><sub>opt</sub></p>
<p class=dt>
<i>type-specifier-list</i>: </p>
<p class=indent>
<i>type-specifier&nbsp; type-specifier-list</i><sub>opt</sub></p>
<p class=dt>
<i>abstract-declarator</i>: </p>
<p class=indent>
<i>ptr-operator&nbsp; ms-modifier-list</i><sub>opt&nbsp; </sub><i>abstract-declarator</i><sub>opt</sub> <br>
<i>abstract-declarator</i><sub>opt </sub> <b>(</b> <i> argument-declaration-list</i>  <b>)</b> <i> cv-qualifier-list</i><sub>opt</sub><br>
<i>abstract-declarator</i><sub>opt</sub>  <b>[</b>  <i>constant-expression</i><sub>opt</sub>  <b>]</b> <br>
<b>(</b> <i> ms-modifier-list</i><sub>opt</sub>  <i>abstract-declarator</i>  <b>)</b></p>
<p class=dt>
<i>argument-declaration-list</i>: </p>
<p class=indent>
<i>arg-declaration-list</i><sub>opt</sub>  <b>. . .</b><sub>opt </sub><br>
<i>arg-declaration-list</i> <b> ,&nbsp; . . .</b></p>
<p class=dt>
<i>arg-declaration-list</i>: </p>
<p class=indent>
<i>argument-declaration</i> <br>
<i>arg-declaration-list&nbsp; </i><b>,</b>  <i>argument-declaration</i></p>
<p class=dt>
<i>argument-declaration</i>: </p>
<p class=indent>
<i>decl-specifiers&nbsp; ms-modifier-list</i><sub>opt </sub> <i>declarator</i> <br>
<i>decl-specifiers&nbsp; ms-modifier-list</i><sub>opt</sub>  <i>declarator</i>  <b>=</b> <i> expression</i> <br>
<i>decl-specifiers&nbsp; ms-modifier-list</i><sub>opt</sub>  <i>abstract-declarator</i><sub>opt</sub> <br>
<i>decl-specifiers&nbsp; ms-modifier-list</i><sub>opt</sub>  <i>abstract-declarator</i><sub>opt</sub>  <b>=</b>  <i>expression</i></p>
<p class=dt>
<i>function-definition</i>: </p>
<p class=indent>
<i>decl-specifiers</i><sub>opt</sub>  <i>ms-modifier-list</i><sub>opt</sub>  <i>declarator&nbsp; ctor-initializer</i><sub>opt</sub>  <i>fct-body</i></p>
<p class=dt>
<i>fct-body</i>: </p>
<p class=indent>
<i>compound-statement</i></p>
<p class=dt>
<i>initializer</i>: </p>
<p class=indent>
<b>=</b>  <i>expression</i> <br>
<b>=&nbsp; {&nbsp; </b><i>initializer-list</i>  <b>,</b><sub>opt</sub>  <b>}</b> <br>
<b>(</b> <i> expression-list</i> <b> )</b></p>
<p class=dt>
<i>initializer-list</i>: </p>
<p class=indent>
<i>expression</i> <br>
<i>initializer-list</i>  <b>,</b>  <i>expression</i> <br>
<b>{</b> <i> initializer-list</i>  <b>,</b><sub>opt</sub>  <b>}</b></p>
</font></BODY>
</HTML>
