<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Constant Expressions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_c_constant_expressions"></a><sup></sup>C Constant Expressions</h1>
<p>
A constant expression is evaluated at compile time, not run time, and can be used in any place that a constant can be used. The constant expression must evaluate to a constant that is in the range of representable values for that type. The operands of a constant expression can be integer constants, character constants, floating-point constants, enumeration constants, type casts, <b>sizeof</b> expressions, and other constant expressions.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>constant-expression</i> :</p>
<p class=indent>
<i>conditional-expression</i></p>
<p class=dt>
<i>conditional-expression</i> :</p>
<p class=indent>
<i>logical-OR-expression</i><br>
<i>logical-OR-expression</i> <b>?</b> <i>expression</i> <b>:</b> <i>conditional-expression</i></p>
<p class=dt>
<i>expression</i> :</p>
<p class=indent>
<i>assignment-expression</i><br>
<i>expression</i> <b>,</b> <i>assignment-expression</i></p>
<p class=dt>
<i>assignment-expression</i> :</p>
<p class=indent>
<i>conditional-expression</i><br>
<i>unary-expression</i> <i>assignment-operator</i> <i>assignment-expression</i></p>
<p class=dt>
<i>assignment-operator</i> : one of</p>
<p class=indent>
<b>=</b>  <b>*=</b>  <b>/=</b>  <b>%=</b>  <b>+=</b>  <b>–=</b>  <b>&lt;&lt;=</b>  <b>&gt;&gt;=</b>  <b>&amp;=</b>  <b>^=</b>  <b>|=</b></p>
<p>
The nonterminals for struct declarator, enumerator, direct declarator, direct-abstract declarator, and labeled statement contain the <i>constant-expression</i> nonterminal.</p>
<p>
An integral constant expression must be used to specify the size of a bit-field member of a structure, the value of an enumeration constant, the size of an array, or the value of a <b>case</b> constant. </p>
<p>
Constant expressions used in preprocessor directives are subject to additional restrictions. Consequently, they are known as “restricted constant expressions.” A restricted constant expression cannot contain <b>sizeof</b> expressions, enumeration constants, type casts to any type, or floating-type constants. It can, however, contain the special constant expression <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defined">
</object><a href=JavaScript:alink_1.Click()>defined</a><b>(</b><i>identifier</i><b>)</b>. </p>
</font></BODY>
</HTML>
