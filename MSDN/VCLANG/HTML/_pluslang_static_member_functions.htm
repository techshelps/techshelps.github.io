<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Static Member Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_static_member_functions"></a><sup></sup>Static Member Functions</h1>
<p>
Static member functions are considered to have class scope. In contrast to nonstatic member functions, these functions have no implicit <b>this</b> argument; therefore, they can use only static data members, enumerators, or nested types directly. Static member functions can be accessed without using an object of the corresponding class type. Consider this example:</p>
<pre><code>class WindowManager
{
public:
 &nbsp;&nbsp; static int&nbsp; CountOf();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Return count of open windows.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void Minimize();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Minimize current window.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WindowManager SideEffects(); // Function with side effects.
 &nbsp;&nbsp; ...
private:
 &nbsp;&nbsp; static int wmWindowCount;
};
int WindowManager::wmWindowCount = 0;

...

// Minimize (show iconic) all windows
for( int i = 0; i &lt; WindowManager::CountOf(); ++i )
 &nbsp;&nbsp; rgwmWin[i].Minimize();
</code></pre>
<p>
In the preceding code, the class <code>WindowManager</code> contains the static member function <code>CountOf</code>. This function returns the number of windows open but is not necessarily associated with a given object of type <code>WindowManager</code>. This concept is demonstrated in the loop where the <code>CountOf</code> function is used in the controlling expression; because <code>CountOf</code> is a static member function, it can be called without reference to an object.</p>
<p>
Static member functions have external linkage. These functions do not have <b>this</b> pointers (covered in the next section). As a result, the following restrictions apply to such functions:
<ul type=disc>
<li>
They cannot access nonstatic class member data using the member-selection operators (<b>.</b> or <b>–&gt;</b>).<br><br></li>
<li>
They cannot be declared as <b>virtual</b>.<br><br></li>
<li>
They cannot have the same name as a nonstatic function that has the same argument types.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The left side of a member-selection operator (<b>.</b> or <b>–&gt;</b>) that selects a static member function is not evaluated. This can be important if the function is used for its side effects. For example, the expression <code>SideEffects().CountOf()</code> does not call the function <code>SideEffects</code>.</p>
</font></BODY>
</HTML>
