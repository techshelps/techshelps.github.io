<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>partial_sort_copy</title></head>
<body bgcolor=white>

<h2><a name="partial_sort_copy">partial_sort_copy</a></h2>
<META NAME="MS-HKWD" CONTENT="partial_sort_copy">
<pre><code>template&lt;class InIt, class RanIt&gt;
    RanIt <b>partial_sort_copy</b>(InIt first1, InIt last1,
        RanIt first2, RanIt last2);
template&lt;class InIt, class RanIt, class Pred&gt;
    RanIt <b>partial_sort_copy</b>(InIt first1, InIt last1,
        RanIt first2, RanIt last2, Pred pr);</code></pre>
<p>The first template function determines <code>K</code>, the number of elements to copy as the smaller of <code>last1 - first1</code> and 
<code>last2 - first2</code>. It then copies and reorders <code>K</code> of the sequence designated by iterators in the range <code>[first1, 
last1)</code> such that the <code>K</code> elements copied to <code>first2</code> are <a href="lib_stl_Algorithm_Conventions.htm#sequence ordering">ordered by</a> <code>operator&lt;</code>. Moreover, for each <code>N</code> in the range 
<code>[0, K)</code> and for each <code>M</code> in the range <code>(0, last1 - first1)</code> corresponding to an uncopied element, the predicate 
<code>!(*(first2 + M) &lt; *(first1 + N))</code> is true. Thus, the smallest <code>K</code> elements of the entire sequence designated by 
iterators in the range <code>[first1, last1)</code> are copied and sorted in <i>ascending</i> order to the range <code>[first2, first2 + 
K)</code>.</p>
<p>The function evaluates the ordering predicate <code>X &lt; Y</code> <code>ceil((last - first) * log(K))</code> times, at most.</p>
<p>The second template function behaves the same, except that it replaces <code>operator&lt;(X, Y)</code> with <code>pr(X, Y)</code>.</p>
<p>Sample programs: <a href="sample_partial_sort_copy_(STL_Sample).htm#_sample_stl_partial_sort_copy">one</a> and <a href="sample_Predicate_Version_of_partial_sort_copy_(STL_Sample).htm#_sample_stl_partial_sort_copyP">one (predicate version)</a>.</p>

</body>
</html>
