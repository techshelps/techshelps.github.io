<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Expression Statement</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_the_expression_statement"></a><sup></sup>The Expression Statement</h1>
<p>
When an expression statement is executed, the expression is evaluated according to the rules outlined in Chapter 4, <a href="_clang_expressions_and_assignments.htm">Expressions and Assignments</a>. </p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>expression-statement</i> :</p>
<p class=indent>
<i>expression</i> <sub>opt</sub> <b>;</b></p>
<p>
All side effects from the expression evaluation are completed before the next statement is executed. An empty expression statement is called a null statement. See <a href="_clang_the_c_null_statement.htm">The Null Statement</a> for more information.</p>
<p>
These examples demonstrate expression statements. </p>
<pre><code>x = ( y + 3 );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* x is assigned the value of y + 3&nbsp; */
x++;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* x is incremented&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */
x = y = 0;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Both x and y are initialized to 0 */
proc( arg1, arg2 );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Function call returning void&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */
y = z = ( f( x ) + 3 );&nbsp;&nbsp; /* A function-call expression&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */
</code></pre>
<p>
In the last statement, the function-call expression, the value of the expression, which includes any value returned by the function, is increased by 3 and then assigned to both the variables <code>y</code> and <code>z</code>. </p>
</font></BODY>
</HTML>
