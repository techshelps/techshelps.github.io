<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>exp, log, and log10 (Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_exp_log_log10">exp, log, and log10 (Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>exp, log,</code> and <code>log10</code> STL functions in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;valarray&gt;</p>
<b>Prototype:</b><br>
<pre><code>
 // exp
template&lt;class T&gt;
     valarray&lt;T&gt; exp(const valarray&lt;T&gt;&amp; x);

 // log
template&lt;class T&gt;
     valarray&lt;T&gt; log(const valarray&lt;T&gt;&amp; x);

// log10
template&lt;class T&gt;
     valarray&lt;T&gt; log10(const valarray&lt;T&gt;&amp; x);
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 This article illustrates the use of the STL exp(), log(), and log10() functions through sample code.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: None
//
// &lt;filename&gt; :  main.cpp
//
// Functions:
//
//    exp, log, log10
//////////////////////////////////////////////////////////////////////

#include &lt;iostream&gt;                 // for i/o functions
#include &lt;valarray&gt;                 // for valarray
#include &lt;math.h&gt;                   // for exp(), log(), and log10()

using namespace std;


#define ARRAY_SIZE  3               // array size

typedef valarray&lt;double&gt; DB_VARRAY;

void main()
{
    // Set val_array to contain values 1, 10, 100 for the following test.
    DB_VARRAY val_array(ARRAY_SIZE);
    for (int i = 0; i &lt; ARRAY_SIZE; i++)
        val_array[i] = pow(10, i);

    // Display the size of val_array.
    cout &lt;&lt; "Size of val_array = " &lt;&lt; val_array.size() &lt;&lt; "\r\n";

    // Display the content of val_array before calling exp, log, and
    // log10 functions.
    cout &lt;&lt; "The values in val_array:\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; val_array[i] &lt;&lt; "    ";
    cout &lt;&lt; "\r\n\r\n";

    // rvalue_array to hold the return value from calling the sqrt() and
    // pow() functions.
    DB_VARRAY rvalue_array;

    // ----------------------------------------------------------------
    // exp() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = exp(val_array);
    cout &lt;&lt; "The result after calling exp():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";

    // ----------------------------------------------------------------
    // log() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = log(val_array);
    cout &lt;&lt; "The result after calling log():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";

    // ----------------------------------------------------------------
    // log10() - display the content of rvalue_array
    // ----------------------------------------------------------------
    rvalue_array = log10(val_array);
    cout &lt;&lt; "The result after calling log10():\r\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; rvalue_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\r\n\r\n";
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>Size of val_array = 3

The values in val_array:

1    10    100

The result after calling exp():

2.71828     22026.5     2.68812e+043

The result after calling log():

0     2.30259     4.60517

The result after calling log10():

0     1     2
</code></pre>

</body>
</html>
