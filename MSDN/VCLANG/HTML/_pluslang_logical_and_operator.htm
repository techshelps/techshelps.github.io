<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Logical AND Operator</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_logical_and_operator"></a><sup></sup>Logical AND Operator</h1>
<p>
The logical AND operator (&amp;&amp;) returns the integral value 1 if both operands are nonzero; otherwise, it returns 0. Logical AND has left-to-right associativity.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>logical-and-expression</i> :</p>
<p class=indent>
<i>inclusive-or-expression</i><br>
<i>logical-and-expression</i> &amp;&amp; <i>inclusive-or-expression</i></p>
<p>
The operands to the logical AND operator need not be of the same type, but they must be of integral or pointer type. The operands are commonly relational or equality expressions.</p>
<p>
The first operand is completely evaluated and all side effects are completed before continuing evaluation of the logical AND expression.</p>
<p>
The second operand is evaluated only if the first operand evaluates to true (nonzero). This evaluation eliminates needless evaluation of the second operand when the logical AND expression is false. You can use this short-circuit evaluation to prevent null-pointer dereferencing, as shown in the following example:</p>
<pre><code>char *pch = 0;
...
(pch) &amp;&amp; (*pch = 'a');
</code></pre>
<p>
If <code>pch</code> is null (0), the right side of the expression is never evaluated. Therefore, the assignment through a null pointer is impossible.</p>
</font></BODY>
</HTML>
