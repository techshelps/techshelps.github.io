<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_com_ptr_t Extractors</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang__com_ptr_t_extractors"></a>_com_ptr_t Extractors</h1>
<p>
<b>Microsoft Specific </b></p>
<p>
<b>operator Interface*( ) const throw( );</b></p>
<p>
<b>operator Interface&amp;( ) const throw( _com_error );</b></p>
<p>
<b>Interface&amp; operator*( ) const throw( _com_error );</b></p>
<p>
<b>Interface* operator-&gt;( ) const throw( _com_error );</b></p>
<p>
<b>Interface** operator&amp;( ) throw( );</b></p>
<p>
<b>operator bool( ) const throw( );</b></p>
<p class=label>
<b>Remarks</b>
<ul type=disc>
<li>
<b>operator Interface*</b>&nbsp;&nbsp;&nbsp;Returns the encapsulated interface pointer, which may be <b>NULL</b>.<br><br></li>
<li>
<b>operator Interface&amp;</b>&nbsp;&nbsp;&nbsp;Returns a reference to the encapsulated interface pointer, and issues an error if the pointer is <b>NULL</b>.<br><br></li>
<li>
<b>operator*</b>&nbsp;&nbsp;&nbsp;Allows a smart pointer object to act as though it were the actual encapsulated interface when dereferenced.<br><br></li>
<li>
<b>operator-&gt;</b>&nbsp;&nbsp;&nbsp;Allows a smart pointer object to act as though it were the actual encapsulated interface when dereferenced.<br><br></li>
<li>
<b>operator&amp;</b>&nbsp;&nbsp;&nbsp;Releases any encapsulated interface pointer, replacing it with <b>NULL</b>, and returns the address of the encapsulated pointer. This allows the smart pointer to be passed by address to a function which has an <b>out</b> parameter through which it returns an interface pointer.<br><br></li>
<li>
<b>operator bool</b>&nbsp;&nbsp;&nbsp;Allows a smart pointer object to be used in a conditional expression. This operator returns <b>true</b> if the pointer is not <b>NULL</b>.</li>
</ul>
<p>
<a href="_pluslang__com_ptr_t.htm">_com_ptr_t Overview</a></p>
<p>
<b>END Microsoft Specific</b></p>
</font></BODY>
</HTML>
