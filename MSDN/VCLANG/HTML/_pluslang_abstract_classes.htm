<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Abstract Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_abstract_classes"></a><sup></sup>Abstract Classes</h1>
<p>
Abstract classes act as expressions of general concepts from which more specific classes can be derived. You cannot create an object of an abstract class type; however, you can use pointers and references to abstract class types.</p>
<p>
A class that contains at least one pure virtual function is considered an abstract class. Classes derived from the abstract class must implement the pure virtual function or they, too, are abstract classes.</p>
<p>
A virtual function is declared as “pure” by using the <i>pure-specifier</i> syntax (described in <a href="_pluslang_class_protocol_implementation.htm">Class Protocol Implementation</a>). Consider the example presented in <a href="_pluslang_virtual_functions.htm">Virtual Functions</a>. The intent of class <code>Account</code> is to provide general functionality, but objects of type <code>Account</code> are too general to be useful. Therefore, <code>Account</code> is a good candidate for an abstract class:</p>
<pre><code>class Account
{
public:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Account( double d );&nbsp; // Constructor.
 &nbsp;&nbsp; virtual double GetBalance();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Obtain balance.
 &nbsp;&nbsp; virtual void&nbsp;&nbsp; PrintBalance() = 0;&nbsp;&nbsp; // Pure virtual function.
private:
 &nbsp;&nbsp; double _balance;
};
</code></pre>
<p>
The only difference between this declaration and the previous one is that <code>PrintBalance</code> is declared with the pure specifier (<code>= 0</code>).</p>
</font></BODY>
</HTML>
