<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>mbrtowc</title></head>
<body bgcolor=white>

<h2><a name="mbrtowc">mbrtowc</a></h2>
<META NAME="MS-HKWD" CONTENT="mbrtowc">
<p><code>size_t </code><code><b>mbrtowc</b></code><code>(wchar_t *pwc, const char *s, size_t n, mbstate_t *ps); </code></p>
<p>The function determines the number of bytes in a multibyte string that completes the next multibyte character, if 
possible.</p>
<p>If <code>ps</code> is not a null pointer, the conversion state for the multibyte string is assumed to be <code>*ps</code>. Otherwise, it is assumed to 
be <code>&amp;internal</code>, where <code>internal</code> is an object of type <a href="wchar_mbstate_t.htm#mbstate_t"><code>mbstate_t</code></a> internal to the <code>mbrtowc</code> function. At program 
startup, <code>internal</code> is initialized to the initial conversion state. No other library function alters the value stored in 
<code>internal</code>.</p>
<p>If <code>s</code> is not a null pointer, the function determines <code>x,</code> the number of bytes in the multibyte string <code>s</code> that complete or 
contribute to the next multibyte character. (<code>x</code> cannot be greater than <code>n</code>.) Otherwise, the function effectively returns 
<code>mbrtowc(0, &quot;&quot;, 1, ps)</code>, ignoring <code>pwc</code> and <code>n</code>. (The function thus returns zero only if the conversion state indicates 
that no incomplete multibyte character is pending from a previous call to <a href="wchar_mbrlen.htm#mbrlen"><code>mbrlen</code></a>, <code>mbrtowc</code>, or <a href="wchar_mbsrtowcs.htm#mbsrtowcs"><code>mbsrtowcs</code></a> for the 
same string and conversion state.)</p>
<p>If <code>pwc</code> is not a null pointer, the function converts a completed multibyte character to its corresponding wide-character 
value and stores that value in <code>*pwc</code>.</p>
<p>The function returns:</p>
<ul>
<li><code>(</code><code>size_t</code><code>)-2</code> if, after converting all <code>n</code> characters, the resulting conversion state indicates an incomplete multibyte 
character. </li>
<li><code>(</code><code>size_t</code><code>)-1</code> if the function detects an encoding error before completing the next multibyte character, in which 
case the function stores the value <code>EILSEQ</code> in <code>errno</code> and leaves the resulting conversion state undefined. </li>
<li>Zero, if the next completed character is a null character, in which case the resulting conversion state is the initial conversion state. </li>
<li><code>x,</code> the number of bytes needed to complete the next muitibyte character, in which case the resulting conversion 
state indicates that <code>x</code> bytes have been converted. </li>
</ul>
</body>
</html>
