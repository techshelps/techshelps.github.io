<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Summary of Declarations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_clang_summary_of_declarations"></a><sup></sup>Summary of Declarations</h1>
<p class=dt>
<i>declaration</i> :</p>
<p class=indent>
<i>declaration-specifiers attribute-seq</i> <sub>opt</sub> <i>init-declarator-list</i> <sub>opt</sub> <b>;</b><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* <i>attribute-seq</i> is Microsoft Specific */</p>
<p class=dt>
<i>declaration-specifiers</i> :</p>
<p class=indent>
<i>storage-class-specifier declaration-specifiers</i> <sub>opt</sub><br>
<i>type-specifier declaration-specifiers</i> <sub>opt</sub><br>
<i>type-qualifier declaration-specifiers</i> <sub>opt</sub></p>
<p>
<i>attribute-seq</i> :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* <i>attribute-seq</i> is Microsoft Specific */</p>
<p class=indent>
<i>attribute attribute-seq</i> <sub>opt</sub> <br>
<i>attribute</i> : one of&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Microsoft Specific */</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td width=26%>__<b>asm</b></td>
<td width=74%>__<b>fastcall</b></td>
</tr>
<tr valign=top>
<td width=26%>__<b>based</b></td>
<td width=74%>__<b>inline</b></td>
</tr>
<tr valign=top>
<td width=26%>__<b>cdecl</b></td>
<td width=74%>__<b>stdcall</b></td>
</tr>
</table><br>
<p class=dt>
<i>init-declarator-list</i> :</p>
<p class=indent>
<i>init-declarator</i><br>
<i>init-declarator-list</i> <b>,</b> <i>init-declarator</i></p>
<p class=dt>
<i>init-declarator</i> :</p>
<p class=indent>
<i>declarator</i><br>
<i>declarator</i> <b>=</b> <i>initializer</i>  /* For scalar initialization */</p>
<p class=dt>
<i>storage-class-specifier</i> :</p>
<p class=indent>
<b>auto</b><br>
<b>register</b><br>
<b>static</b><br>
<b>extern</b><br>
<b>typedef</b><br>
<b>__declspec</b> <b>(</b> <i>extended-decl-modifier-seq</i> <b>)</b>  /* Microsoft Specific */</p>
<p class=dt>
<i>type-specifier</i> :</p>
<p class=indent>
<b>void</b><br>
<b>char</b><br>
<b>short</b><br>
<b>int</b><br>
<b>__int8</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  /* Microsoft Specific */<br>
<b>__int16</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Microsoft Specific */<br>
<b>__int32</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Microsoft Specific */<br>
<b>__int64</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Microsoft Specific */<br>
<b>long</b><br>
<b>float</b><br>
<b>double</b><br>
<b>signed</b><br>
<b>unsigned</b><br>
<i>struct-or-union-specifier</i><br>
<i>enum-specifier</i><br>
<i>typedef-name</i></p>
<p class=dt>
<i>type-qualifier</i> :</p>
<p class=indent>
<b>const</b><br>
<b>volatile</b></p>
<p class=dt>
<i>declarator</i> :</p>
<p class=indent>
<i>pointer</i> <sub>opt</sub> <i>direct-declarator</i></p>
<p class=dt>
<i>direct-declarator</i> :</p>
<p class=indent>
<i>identifier</i><br>
<b>(</b> <i>declarator</i> <b>)</b><br>
<i>direct-declarator</i> <b>[</b> <i>constant-expression</i> <sub>opt</sub><b>]</b><br>
<i>direct-declarator</i> <b>(</b> <i>parameter-type-list</i> <b>)</b>&nbsp;&nbsp;&nbsp;/* New-style declarator */<br>
<i>direct-declarator</i> <b>(</b> <i>identifier-list</i> <sub>opt</sub> <b>)</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* Obsolete-style declarator */</p>
<p class=dt>
<i>pointer</i> :</p>
<p class=indent>
<b>*</b> <i>type-qualifier-list</i> <sub>opt</sub><br>
<b>*</b> <i>type-qualifier-list</i> <sub>opt</sub> <i>pointer</i></p>
<p class=dt>
<i>parameter-type-list</i> :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/* The parameter list */</p>
<p class=indent>
<i>parameter-list</i><br>
<i>parameter-list</i> <b>, ...</b></p>
<p class=dt>
<i>parameter-list</i> :</p>
<p class=indent>
<i>parameter-declaration</i><br>
<i>parameter-list</i> <b>,</b> <i>parameter-declaration</i></p>
<p class=dt>
<i>type-qualifier-list</i> :</p>
<p class=indent>
<i>type-qualifier</i><br>
<i>type-qualifier-list type-qualifier</i></p>
<p class=dt>
<i>enum-specifier</i> :</p>
<p class=indent>
<b>enum</b> <i>identifier</i> <sub>opt</sub> <b>{</b> <i>enumerator-list</i> <b>}</b><br>
<b>enum</b> <i>identifier</i></p>
<p class=dt>
<i>enumerator-list</i> :</p>
<p class=indent>
<i>enumerator</i><br>
<i>enumerator-list</i> <b>,</b> <i>enumerator</i></p>
<p class=dt>
<i>enumerator</i> :</p>
<p class=indent>
<i>enumeration-constant</i><br>
<i>enumeration-constant</i> <b>=</b> <i>constant-expression</i></p>
<p class=dt>
<i>enumeration-constant</i> :</p>
<p class=indent>
<i>identifier</i></p>
<p class=dt>
<i>struct-or-union-specifier</i> :</p>
<p class=indent>
<i>struct-or-union identifier</i> <sub>opt</sub> <b>{</b> <i>struct-declaration-list</i> <b>}</b><br>
<i>struct-or-union identifier</i></p>
<p class=dt>
<i>struct-or-union</i> :</p>
<p class=indent>
<b>struct</b><br>
<b>union</b></p>
<p class=dt>
<i>struct-declaration-list</i> :</p>
<p class=indent>
<i>struct-declaration</i><br>
<i>struct-declaration-list struct-declaration</i></p>
<p class=dt>
<i>struct-declaration</i> :</p>
<p class=indent>
<i>specifier-qualifier-list struct-declarator-list</i> <b>;</b></p>
<p class=dt>
<i>specifier-qualifier-list</i> :</p>
<p class=indent>
<i>type-specifier specifier-qualifier-list</i> <sub>opt</sub><br>
<i>type-qualifier specifier-qualifier-list</i> <sub>opt</sub></p>
<p class=dt>
<i>struct-declarator-list</i> :</p>
<p class=indent>
<i>struct-declarator</i><br>
<i>struct-declarator-list</i> <b>,</b> <i>struct-declarator</i></p>
<p class=dt>
<i>struct-declarator</i> :</p>
<p class=indent>
<i>declarator</i><br>
<i>type-specifier declarator</i> <sub>opt</sub> <b>:</b> <i>constant-expression</i></p>
<p class=dt>
<i>parameter-declaration</i> :</p>
<p class=indent>
<i>declaration-specifiers declarator</i>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /* Named declarator */<br>
<i>declaration-specifiers abstract-declarator</i> <sub>opt</sub>  <b>/*</b> Anonymous declarator <b>*/</b></p>
<p class=dt>
<i>identifier-list</i> :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>/*</b> For old-style declarator <b>*/</b></p>
<p class=indent>
<i>identifier</i><br>
<i>identifier-list</i> <b>,</b> <i>identifier</i></p>
<p class=dt>
<i>abstract-declarator</i> :&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<b>/*</b> Used with anonymous declarators <b>*/</b></p>
<p class=indent>
<i>pointer</i><br>
<i>pointer</i> <sub>opt</sub> <i>direct-abstract-declarator</i></p>
<p class=dt>
<i>direct-abstract-declarator</i> :</p>
<p class=indent>
<b>(</b> <i>abstract-declarator</i> <b>)</b><br>
<i>direct-abstract-declarator</i> <sub>opt</sub> <b>[</b> <i>constant-expression</i> <sub>opt</sub> <b>]</b><br>
<i>direct-abstract-declarator</i> <sub>opt</sub> <b>(</b> <i>parameter-type-list</i> <sub>opt</sub> <b>)</b></p>
<p class=dt>
<i>initializer</i> :</p>
<p class=indent>
<i>assignment-expression</i><br>
<b>{</b> <i>initializer-list</i> <b>}</b>&nbsp;&nbsp;&nbsp;/* For aggregate initialization */ <br>
<b>{</b> <i>initializer-list</i> <b>, }</b></p>
<p class=dt>
<i>initializer-list</i> :</p>
<p class=indent>
<i>initializer</i><br>
<i>initializer-list</i> <b>,</b> <i>initializer</i></p>
<p class=dt>
<i>type-name</i> :</p>
<p class=indent>
<i>specifier-qualifier-list abstract-declarator</i> <sub>opt</sub></p>
<p class=dt>
<i>typedef-name</i> :</p>
<p class=indent>
<i>identifier</i></p>
<p class=dt>
<i>extended-decl-modifier-seq</i> :/*&nbsp;&nbsp;&nbsp;Microsoft Specific */</p>
<p class=indent>
<i>extended-decl-modifier</i> <sub>opt</sub><br>
<i>extended-decl-modifier-seq extended-decl-modifier</i></p>
<p class=dt>
<i>extended-decl-modifier</i> :&nbsp;&nbsp;&nbsp;/* Microsoft Specific */</p>
<p class=indent>
<b>thread</b><br>
<b>naked</b><br>
<b>dllimport</b><br>
<b>dllexport</b></p>
</font></BODY>
</HTML>
