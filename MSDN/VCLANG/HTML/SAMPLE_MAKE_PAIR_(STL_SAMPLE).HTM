<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>make_pair (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_make_pair">make_pair (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>make_pair</code> STL function in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;utility&gt;</p>
<b>Prototype:</b><br>
<pre><code>
template&lt;class first, class second&gt; inline
     pair&lt;first, second&gt; make_pair(const first&amp; _X, const second&amp; _Y)
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The make_pair function creates a pair structure that contains two data elements of any type.  </p>
<p><b>Sample Code: </b></p>
<pre><code>///////////////////////////////////////////////////////////////////////
// Compile options needed: none
//
// mkpair.cpp: Illustrates how to use the make_pair function.
//
// Functions: make_pair - creates an object pair containing two data
//                        elements of any type.
///////////////////////////////////////////////////////////////////////

/* Compiler options needed: none
*/

#include &lt;utility&gt;
#include &lt;iostream&gt;

using namespace std;


/* STL pair data type containing int and float
*/

typedef struct pair&lt;int,float&gt; PAIR_IF;

void main(void)
{
  PAIR_IF pair1=make_pair(18,3.14f);

  cout &lt;&lt; pair1.first &lt;&lt; "  " &lt;&lt; pair1.second &lt;&lt; endl;
  pair1.first=10;
  pair1.second=1.0f;
  cout &lt;&lt; pair1.first &lt;&lt; "  " &lt;&lt; pair1.second &lt;&lt; endl;
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>18  3.14
10  1
</code></pre>

</body>
</html>
