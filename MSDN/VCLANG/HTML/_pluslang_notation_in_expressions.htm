<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Notation in Expressions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_notation_in_expressions"></a><sup></sup>Notation in Expressions</h1>
<p>
The C++ language specifies certain compatibilities when specifying operands. Table 4.5 shows the types of operands acceptable to operators that require operands of type <i>type</i>.</p>
<p class=label>
<b><a name="_pluslang_table_4..5"></a>Table 4.5&nbsp;&nbsp;&nbsp;Operand Types Acceptable to Operators</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Type Expected</b></td>
<td class=label width=71%><b>Types Allowed</b></td>
</tr>
<tr valign=top>
<td width=29%><i>type</i></td>
<td width=71%>const <i>type</i><br>
volatile <i>type</i><br>
<i>type</i>&amp;<br>
const <i>type</i>&amp;<br>
volatile <i>type</i>&amp;<br>
volatile const <i>type</i><br>
volatile const <i>type</i>&amp;</td>
</tr>
<tr valign=top>
<td width=29%><i>type*</i></td>
<td width=71%><i>type</i>* const<br>
<i>type</i>* volatile<br>
<i>type</i>* volatile const</td>
</tr>
<tr valign=top>
<td width=29%>const <i>type</i></td>
<td width=71%><i>type</i><br>
const <i>type</i><br>
const <i>type</i>&amp;</td>
</tr>
<tr valign=top>
<td width=29%>volatile <i>type</i></td>
<td width=71%><i>type</i><br>
volatile <i>type</i><br>
volatile <i>type</i>&amp;</td>
</tr>
</table><br>
<p>
Because the preceding rules can always be used in combination, a const pointer to a volatile object can be supplied where a pointer is expected. </p>
</font></BODY>
</HTML>
