<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ifstream::ifstream</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_ifstream.3a3a.ifstream"></a><sup></sup>ifstream::ifstream</h1>
<p>
<b>ifstream();</b></p>
<p>
<b>ifstream( const char* </b><i>szName</i><b>, int </b><i>nMode </i><b>= ios::in, int </b><i>nProt </i><b>= filebuf::openprot );</b></p>
<p>
<b>ifstream( filedesc </b><i>fd </i><b>);</b></p>
<p>
<b>ifstream( filedesc </b><i>fd</i><b>, char* </b><i>pch</i><b>, int </b><i>nLength </i><b>);</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>szName</i></p>
<p class=indent>
The name of the file to be opened during construction.</p>
<p class=dt>
<i>nMode</i></p>
<p class=indent>
An integer that contains mode bits defined as <b>ios</b> enumerators that can be combined with the bitwise OR ( <b>|</b> ) operator. The <i>nMode</i> parameter must have one of the following values:
<ul type=disc>
<li>
<b>ios::in</b>&nbsp;&nbsp;&nbsp;The file is opened for input (default).<br><br></li>
<li>
<b>ios::nocreate</b>&nbsp;&nbsp;&nbsp;If the file does not already exist, the function fails.<br><br></li>
<li>
<b>ios::binary</b>&nbsp;&nbsp;&nbsp;Opens the file in binary mode (the default is text mode).<p class=tl>
Note that the <b>ios::nocreate</b> flag is necessary if you intend to test for the file’s existence (the usual case).</P></li>
</ul>
<p class=dt>
<i>nProt</i></p>
<p class=indent>
The file protection specification; defaults to the static integer <b>filebuf::openprot</b> that is equivalent to <b>filebuf::sh_compat</b>. The possible <i>nProt</i> values are:
<ul type=disc>
<li>
<b>filebuf::sh_compat</b>&nbsp;&nbsp;&nbsp;Compatibility share mode.<br><br></li>
<li>
<b>filebuf::sh_none</b>&nbsp;&nbsp;&nbsp;Exclusive mode — no sharing.<br><br></li>
<li>
<b>filebuf::sh_read</b>&nbsp;&nbsp;&nbsp;Read sharing allowed.<br><br></li>
<li>
<b>filebuf::sh_write</b>&nbsp;&nbsp;&nbsp;Write sharing allowed.<p class=tl>
To combine the <b>filebuf::sh_read</b> and <b>filebuf::sh_write</b> modes, use the logical OR ( <b>||</b> ) operator.</P></li>
</ul>
<p class=dt>
<i>fd</i></p>
<p class=indent>
A file descriptor as returned by a call to the run-time function <b> _open</b> or <b>_sopen</b>; <b>filedesc</b> is a <b>typedef</b> equivalent to <b>int</b>.</p>
<p class=dt>
<i>pch</i></p>
<p class=indent>
Pointer to a previously allocated reserve area of length <i>nLength</i>. A <b>NULL</b> value (or <i>nLength</i> = 0) indicates that the stream will be unbuffered.</p>
<p class=dt>
<i>nLength</i></p>
<p class=indent>
The length (in bytes) of the reserve area (0 = unbuffered).</p>
<p class=label>
<b>Remarks</b></p>
<p>
The four <b>ifstream</b> constructors are:
<ul type=disc>
<li>
<b>ifstream()</b>&nbsp;&nbsp;&nbsp;Constructs an <b>ifstream</b> object without opening a file.<br><br></li>
<li>
<b>ifstream( const char*</b>, <b>int, int )</b>&nbsp;&nbsp;&nbsp;Contructs an <b>ifstream</b> object, opening the specified file.<br><br></li>
<li>
<b>ifstream( filedesc )</b>&nbsp;&nbsp;&nbsp;Constructs an <b>ifstream</b> object that is attached to an open file.<br><br></li>
<li>
<b>ifstream( filedesc, char*, int )</b>&nbsp;&nbsp;&nbsp;Constructs an <b>ifstream</b> object that is associated with a <b>filebuf</b> object. The <b>filebuf</b> object is attached to an open file and to a specified reserve area.</li>
</ul>
<p>
All <b>ifstream</b> constructors construct a <b>filebuf</b> object. The first three use an internally allocated reserve area, but the fourth uses a user-allocated area.</p>
<p>
<a href="_iostream_ifstream.htm">ifstream Overview</a>  |&nbsp; <a href="_iostream_iostream_class_list.htm#_iostream_input_stream_classes">Input Stream Classes</a></p>
</font></BODY>
</HTML>
