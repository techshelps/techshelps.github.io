<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The C continue Statement</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_the_c_continue_statement"></a><sup></sup>The C continue Statement</h1>
<p>
The <b>continue</b> statement passes control to the next iteration of the <b>do</b>, <b>for</b>, or <b>while</b> statement in which it appears, bypassing any remaining statements in the <b>do</b>, <b>for</b>, or <b>while</b> statement body. A typical use of the <b>continue</b> statement is to return to the start of a loop from within a deeply nested loop.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>jump-statement</i> :</p>
<p class=indent>
<b>continue;</b></p>
<p>
The next iteration of a <b>do</b>, <b>for</b>, or <b>while</b> statement is determined as follows: 
<ul type=disc>
<li>
Within a <b>do</b> or a <b>while</b> statement, the next iteration starts by reevaluating the expression of the <b>do</b> or <b>while</b> statement.<br><br></li>
<li>
A <b>continue</b> statement in a <b>for</b> statement causes the first expression of the <b>for</b> statement to be evaluated. Then the compiler reevaluates the conditional expression and, depending on the result, either terminates or iterates the statement body. See <a href="_clang_the_c_for_statement.htm">The for Statement</a> for more information on the <b>for</b> statement and its nonterminals.</li>
</ul>
<p>
This is an example of the <b>continue</b> statement: </p>
<pre><code>while ( i-- &gt; 0 ) 
{
 &nbsp;&nbsp; x = f( i );
 &nbsp;&nbsp; if ( x == 1 )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;
 &nbsp;&nbsp; y += x * x;
}
</code></pre>
<p>
In this example, the statement body is executed while <code>i</code> is greater than 0. First <code>f(i)</code> is assigned to <code>x</code>; then, if <code>x</code> is equal to 1, the <b>continue</b> statement is executed. The rest of the statements in the body are ignored, and execution resumes at the top of the loop with the evaluation of the loop’s test.</p>
</font></BODY>
</HTML>
