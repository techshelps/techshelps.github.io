<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_bstr_t::_bstr_t</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang__bstr_t.3a3a._bstr_t"></a>_bstr_t::_bstr_t</h1>
<p>
<b>Microsoft Specific </b></p>
<p>
<b>_bstr_t( ) throw( );</b></p>
<p>
<b>_bstr_t( const _bstr_t&amp; </b><i>s1</i><b> ) throw( );</b></p>
<p>
<b>_bstr_t( const char* </b><i>s2</i><b> ) throw( _com_error );</b></p>
<p>
<b>_bstr_t( const wchar_t* </b><i>s3</i><b> ) throw( _com_error );</b></p>
<p>
<b>_bstr_t( const _variant_t&amp; </b><i>var</i><b> ) throw ( _com_error );</b></p>
<p>
<b>_bstr_t( BSTR </b><i>bstr</i><b>, bool </b><i>fCopy</i><b> ) throw ( _com_error );</b></p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>s1</i></p>
<p class=indent>
a <b>_bstr_t</b> object to be copied</p>
<p class=dt>
<i>s2</i></p>
<p class=indent>
a multibyte string</p>
<p class=dt>
<i>s3</i></p>
<p class=indent>
a Unicode string</p>
<p class=dt>
<i>var</i></p>
<p class=indent>
a <b>_variant_t</b> object</p>
<p class=dt>
<i>bstr</i></p>
<p class=indent>
an existing <b>BSTR</b> object</p>
<p class=dt>
<i>fCopy</i></p>
<p class=indent>
if false, the <i>bstr</i> argument is attached to the new object without making a copy by calling <b>SysAllocString</b>.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Constructs a <b>_bstr_t</b> object.
<ul type=disc>
<li>
<b>_bstr_t( )</b>&nbsp;&nbsp;&nbsp;Constructs a default <b>_bstr_t</b> object that encapsulates a <b>NULL</b> <b>BSTR</b> object.<br><br></li>
<li>
<b>_bstr_t( _bstr_t&amp; </b><i>s1</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>_bstr_t</b> object as a copy of another. This is a “shallow” copy, which increments the reference count of the encapsulated <b>BSTR</b> object instead of creating a new one.<br><br></li>
<li>
<b>_bstr_t( char* </b><i>s2</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>_bstr_t</b> object by calling <b>SysAllocString</b> to create a new <b>BSTR</b> object and encapsulate it. This constructor first performs a multibyte to Unicode conversion.<br><br></li>
<li>
<b>_bstr_t( wchar_t* </b><i>s3</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>_bstr_t</b> object by calling <b>SysAllocString</b> to create a new <b>BSTR</b> object and encapsulates it.<br><br></li>
<li>
<b>_bstr_t( _variant_t&amp; </b><i>var</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>_bstr_t</b> object from a <a href="_pluslang__variant_t.htm">_variant_t</a> object by first retrieving a <b>BSTR</b> object from the encapsulated <b>VARIANT</b> object.<br><br></li>
<li>
<b>_bstr_t( BSTR </b><i>bstr</i><b>, bool </b><i>fCopy</i><b> )</b>&nbsp;&nbsp;&nbsp;Constructs a <b>_bstr_t</b> object from an existing <b>BSTR</b> (as opposed to a <b>wchar_t*</b> string). If <i>fCopy</i> is <b>false</b>, the supplied <b>BSTR</b> is attached to the new object without making a new copy via <b>SysAllocString</b>. This is the method used by the wrapper functions in the type library headers to encapsulate and take ownership of a <b>BSTR</b>, returned by an interface method, in a <b>_bstr_t</b> object.</li>
</ul>
<p>
<a href="_pluslang__bstr_t.htm">_bstr_t Overview</a></p>
<p>
<b>END Microsoft Specific</b></p>
</font></BODY>
</HTML>
