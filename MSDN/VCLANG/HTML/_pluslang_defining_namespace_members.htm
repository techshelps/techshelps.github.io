<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Defining namespace Members</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_defining_namespace_members"></a><sup></sup>Defining namespace Members</h1>
<p>
Members of a namespace may be defined within that namespace. For example:</p>
<pre><code>namespace X { void f() { } }
</code></pre>
<p>
Members of a named namespace can be defined outside the namespace in which they are declared by explicit qualification of the name being defined. However, the entity being defined must already be declared in the namespace. In addition, the definition must appear after the point of declaration in a namespace that encloses the declaration’s namespace. For example:</p>
<pre><code>namespace Q {
 &nbsp;&nbsp; namespace V {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void f();
 &nbsp;&nbsp; }

 &nbsp;&nbsp; void V::f() { }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // ok
 &nbsp;&nbsp; void V::g() { }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // error, g() is not yet a member of V

 &nbsp;&nbsp; namespace V {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void g();
 &nbsp;&nbsp; }
}
</code></pre>
</font></BODY>
</HTML>
