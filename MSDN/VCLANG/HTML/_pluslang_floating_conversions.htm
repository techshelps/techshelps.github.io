<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Floating Conversions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_floating_conversions"></a><sup></sup>Floating Conversions</h1>
<p>
An object of a floating type can be safely converted to a more precise floating type — that is, the conversion causes no loss of significance. For example, conversions from <b>float</b> to <b>double</b> or from <b>double</b> to <b>long double</b> are safe, and the value is unchanged.</p>
<p>
An object of a floating type can also be converted to a less precise type, if it is in a range representable by that type. (See <a href="_pluslang_floating_limits.htm">Floating Limits</a> in Chapter 2 for the ranges of floating types.) If the original value cannot be represented precisely, it can be converted to either the next higher or the next lower representable value. If no such value exists, the result is undefined. Consider the following example:</p>
<pre><code>cout &lt;&lt; (float)1E300 &lt;&lt; endl;
</code></pre>
<p>
The maximum value representable by type <b>float</b> is 3.402823466E38 — a much smaller number than 1E300. Therefore, the number is converted to infinity, and the result is 1.#INF.</p>
</font></BODY>
</HTML>
