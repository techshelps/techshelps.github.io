<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Trigraphs</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_trigraphs"></a><sup></sup>Trigraphs</h1>
<p>
The source character set of C source programs is contained within the 7-bit ASCII character set but is a superset of the ISO 646-1983 Invariant Code Set. Trigraph sequences allow C programs to be written using only the ISO (International Standards Organization) Invariant Code Set. Trigraphs are sequences of three characters (introduced by two consecutive question marks) that the compiler replaces with their corresponding punctuation characters. You can use trigraphs in C source files with a character set that does not contain convenient graphic representations for some punctuation characters. </p>
<p>
Table 1.1 shows the nine trigraph sequences. All occurrences in a source file of the punctuation characters in the first column are replaced with the corresponding character in the second column. </p>
<p class=label>
<b><a name="_clang_table_1..1"></a>Table 1.1&nbsp;&nbsp;&nbsp;Trigraph Sequences</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=15%><b>Trigraph</b></td>
<td class=label width=85%><b>Punctuation Character</b></td>
</tr>
<tr valign=top>
<td width=15%>??=</td>
<td width=85%>#</td>
</tr>
<tr valign=top>
<td width=15%>??(</td>
<td width=85%>[</td>
</tr>
<tr valign=top>
<td width=15%>??/</td>
<td width=85%>\</td>
</tr>
<tr valign=top>
<td width=15%>??)</td>
<td width=85%>]</td>
</tr>
<tr valign=top>
<td width=15%>??’</td>
<td width=85%>^</td>
</tr>
<tr valign=top>
<td width=15%>??&lt;</td>
<td width=85%>{</td>
</tr>
<tr valign=top>
<td width=15%>??! </td>
<td width=85%>|</td>
</tr>
<tr valign=top>
<td width=15%>??&gt;</td>
<td width=85%>}</td>
</tr>
<tr valign=top>
<td width=15%>??- </td>
<td width=85%>~</td>
</tr>
</table><br>
<p>
A trigraph is always treated as a single source character. The translation of trigraphs takes place in the first <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_predir_Phases_of_Translation">
</object><a href=JavaScript:alink_1.Click()>translation phase</a>, before the recognition of escape characters in string literals and character constants. Only the nine trigraphs shown in Table 1.1 are recognized. All other character sequences are left untranslated. </p>
<p>
The character escape sequence, <b>\?</b>, prevents the misinterpretation of trigraph-like character sequences. (For information about escape sequences, see <a href="_clang_escape_sequences.htm">Escape Sequences</a>.) For example, if you attempt to print the string <code>What??!</code> with this <b>printf</b> statement</p>
<pre><code>printf( "What??!\n" );
</code></pre>
<p>
the string printed is <code>What|</code> because <code>??!</code> is a trigraph sequence that is replaced with the <code>|</code> character. Write the statement as follows to correctly print the string:</p>
<pre><code>printf( "What?\?!\n" );
</code></pre>
<p>
In this <b>printf</b> statement, a backslash escape character in front of the second question mark prevents the misinterpretation of <code>??!</code> as a trigraph. </p>
</font></BODY>
</HTML>
