<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiple Base Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_multiple_base_classes"></a><sup></sup>Multiple Base Classes</h1>
<p>
As described in <a href="_pluslang_multiple_inheritance.htm">Multiple Inheritance</a>, a class can be derived from more than one base class. In a multiple-inheritance model (where classes are derived from more than one base class), the base classes are specified using the <i>base-list</i> grammar element (see Syntax in <a href="_pluslang_overview_of_derived_classes.htm">Overview</a>). For example, the class declaration for <code>CollectionOfBook</code>, derived from <code>Collection</code> and <code>Book</code>, can be specified:</p>
<pre><code>class CollectionOfBook : public Book, public Collection
{
 &nbsp;&nbsp; // New members
};
</code></pre>
<p>
The order in which base classes are specified is not significant except in certain cases where constructors and destructors are invoked. In these cases, the order in which base classes are specified affects the following:
<ul type=disc>
<li>
The order in which initialization by constructor takes place. If your code relies on the <code>Book</code> portion of <code>CollectionOfBook</code> to be initialized before the <code>Collection</code> part, the order of specification is significant. Initialization takes place in the order the classes are specified in the <i>base-list</i>.<br><br></li>
<li>
The order in which destructors are invoked to clean up. Again, if a particular “part” of the class must be present when the other part is being destroyed, the order is significant. Destructors are called in the reverse order of the classes specified in the <i>base-list</i>.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The order of specification of base classes can affect the memory layout of the class. Do not make any programming decisions based on the order of base members in memory.</p>
<p>
When specifying the <i>base-list</i>, you cannot specify the same class name more than once. However, it is possible for a class to be an indirect base to a derived class more than once.</p>
</font></BODY>
</HTML>
