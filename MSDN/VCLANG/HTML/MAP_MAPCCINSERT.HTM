<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>map::insert</title></head>
<body bgcolor=white>

<h3><a name="map::insert">map::insert</a></h3>
<META NAME="MS-HKWD" CONTENT="insert">
<pre><code>pair&lt;iterator, bool&gt; <b>insert</b>(const value_type&amp; x);
iterator <b>insert</b>(iterator it, const value_type&amp; x);
void <b>insert</b>(const value_type *first, const value_type *last);</code></pre>
<p>The first member function determines whether an element <code>y</code> exists in the sequence whose key matches that of <code>x</code>. (The 
keys match if <code>!</code><a href="MAP_mapCCkey_comp.htm#map::key_comp"><code>key_comp</code></a><code>()(x. </code><a href="UTILITY_pair.htm#pair::first"><code>first</code></a><code>, y.first) &amp;&amp; !key_comp()(y.first, x.first)</code>.) If not, it creates 
such an element <code>y</code> and initializes it with <code>x</code>. The function then determines the iterator <code>it</code> that designates <code>y</code>. If an insertion 
occurred, the function returns <a href="UTILITY_pair.htm#pair"><code>pair</code></a><code>(it, true)</code>. Otherwise, it returns <code>pair(it, false)</code>.</p>
<p>The second member function returns <code>insert(x)</code>, using <code>it</code> as a starting place within the controlled sequence to search 
for the insertion point. (Insertion can occur in amortized constant time, instead of logarithmic time, if the insertion point 
immediately follows <code>it</code>.) The third member function inserts the sequence of element values in the range <code>[first, 
last)</code>.</p>
<p>In this <a href="INDEX_Table_of_Contents.htm#implementation">implementation</a>, if a translator does not support member template functions, the template:</p>
<pre><code>template&lt;class InIt&gt;
    void <b>insert</b>(InIt first, InIt last);</code></pre>
<p>is replaced by:</p>
<pre><code>void <b>insert</b>(const value_type *first, const value_type *last);</code></pre>
<p>See the related <a href="sample_mapCCinsert__mapCCfind__and_mapCCend_(STL_Sample).htm#_sample_stl_mapCCinsert_find_end">sample program</a>.</p>

</body>
</html>
