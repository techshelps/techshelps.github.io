<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_filebuf::open</title></head>
<body bgcolor=white>

<h3><a name="basic_filebuf::open">basic_filebuf::open</a></h3>
<META NAME="MS-HKWD" CONTENT="open">
<pre><code>basic_filebuf *<b>open</b>(const char *s, ios_base::openmode mode);</code></pre>
<p>The member function endeavors to open the file with file name <code>s</code>, by calling <code>fopen</code><code>(s, strmode)</code>. Here <code>strmode</code> is 
determined from <code>mode &amp; ~(</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::ate"><code>ate</code></a><code> &amp; | </code><a href="IOS_ios_baseCCopenmode.htm#ios_base::binary"><code>binary</code></a><code>)</code>:</p>
<ul>
<li><code>ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::in"><code><b>in</b></code></a> becomes <code>&quot;r&quot;</code> (open existing file for reading).</li>
<li><code>ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::out"><code><b>out</b></code></a> or </li>
<li><code>ios_base::</code><code><b>out</b></code><code> | ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::trunc"><code><b>trunc</b></code></a> becomes <code>&quot;w&quot;</code> (truncate existing file or create for writing).</li>
<li><code>ios_base::</code><code><b>out</b></code><code> | </code><a href="IOS_ios_baseCCopenmode.htm#ios_base::app"><code><b>app</b></code></a> becomes <code>&quot;a&quot;</code> (open existing file for appending all writes).</li>
<li><code>ios_base::</code><code><b>in</b></code><code> | ios_base::</code><code><b>out</b></code> becomes <code>&quot;r+&quot;</code> (open existing file for reading and writing).</li>
<li><code>ios_base::</code><code><b>in</b></code><code> | ios_base::</code><code><b>out</b></code><code> | ios_base::</code><code><b>trunc</b></code> becomes <code>&quot;w+&quot;</code> (truncate existing file or create for 
reading and writing).</li>
<li><code>ios_base::</code><code><b>in</b></code><code> | ios_base::</code><code><b>out</b></code><code> | ios_base::</code><code><b>app</b></code> becomes <code>&quot;a+&quot;</code> (open existing file for reading and for 
appending all writes).</li>
</ul>
<p>If <code>mode &amp; ios_base::</code><code><b>binary</b></code> is nonzero, the function appends <code>b</code> to <code>strmode</code> to open a <a href="LIB_FILE_Text_and_Binary_Streams.htm#binary stream">binary stream</a> instead of a 
<a href="LIB_FILE_Text_and_Binary_Streams.htm#text stream">text stream</a>. It then stores the value returned by <code>fopen</code> in the <a href="FSTREAM_basic_filebuf.htm#file pointer">file pointer</a> <code>fp</code>. If <code>mode &amp; ios_base::</code><code><b>ate</b></code> is nonzero 
and the file pointer is not a null pointer, the function calls <code>fseek</code><code>(fp, 0, </code><code>SEEK_END</code><code>)</code> to position the stream at 
end-of-file. If that positioning operation fails, the function calls <a href="FSTREAM_basic_filebufCCclose.htm#basic_filebuf::close"><code>close</code></a><code>(fp)</code> and stores a null pointer in the file pointer.</p>
<p>If the file pointer is not a null pointer, the function determines the <a name="file conversion facet"><b>file conversion facet</b></a> <a href="LOCALE2_use_facet.htm#use_facet"><code>use_facet</code></a><code>&lt; </code><a href="LOCALE2_codecvt.htm#codecvt"><code>codecvt</code></a><code>&lt;E, 
char, T::</code><a href="STRING2_char_traitsCCstate_type.htm#char_traits::state_type"><code>state_type</code></a><code>&gt; &gt;(</code><a href="STREAMBU_basic_streambufCCgetloc.htm#basic_streambuf::getloc"><code>getloc</code></a><code>())</code>, for use by <a href="FSTREAM_basic_filebufCCunderflow.htm#basic_filebuf::underflow"><code>underflow</code></a> and <a href="FSTREAM_basic_filebufCCoverflow.htm#basic_filebuf::overflow"><code>overflow</code></a>. </p>
<p>If the file pointer is a null pointer, the function returns a null pointer. Otherwise, it returns <code>this</code>.</p>
</body>
</html>
