<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conditional-Expression Operator</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_conditional.2d.expression_operator"></a><sup></sup>Conditional-Expression Operator </h1>
<p>
C has one ternary operator: the conditional-expression operator (<b>? :</b>).&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>conditional-expression</i> :</p>
<p class=indent>
<i>logical-OR-expression</i><br>
<i>logical-OR-expression</i> <b>?</b> <i>expression</i> <b>:</b> <i>conditional-expression</i></p>
<p>
The <i>logical-OR-expression</i> must have integral, floating, or pointer type. It is evaluated in terms of its equivalence to 0. A sequence point follows <i>logical-OR-expression</i>. Evaluation of the operands proceeds as follows: 
<ul type=disc>
<li>
If <i>logical-OR-expression</i> is not equal to 0, <i>expression</i> is evaluated. The result of evaluating the expression is given by the nonterminal <i>expression</i>. (This means <i>expression</i> is evaluated only if <i>logical-OR-expression</i> is true.)<br><br></li>
<li>
If <i>logical-OR-expression</i> equals 0, <i>conditional-expression</i> is evaluated. The result of the expression is the value of <i>conditional-expression</i>. (This means <i>conditional-expression</i> is evaluated only if <i>logical-OR-expression</i> is false.)</li>
</ul>
<p>
Note that either <i>expression</i> or <i>conditional-expression</i> is evaluated, but not both. </p>
<p>
The type of the result of a conditional operation depends on the type of the <i>expression</i> or <i>conditional-expression</i> operand, as follows:
<ul type=disc>
<li>
If <i>expression</i> or <i>conditional-expression</i> has integral or floating type (their types can be different), the operator performs the usual arithmetic conversions. The type of the result is the type of the operands after conversion.<br><br></li>
<li>
If both <i>expression</i> and <i>conditional-expression</i> have the same structure, union, or pointer type, the type of the result is the same structure, union, or pointer type.<br><br></li>
<li>
If both operands have type <b>void</b>, the result has type <b>void</b>.<br><br></li>
<li>
If either operand is a pointer to an object of any type, and the other operand is a pointer to <b>void</b>, the pointer to the object is converted to a pointer to <b>void</b> and the result is a pointer to <b>void</b>.<br><br></li>
<li>
If either <i>expression</i> or <i>conditional-expression</i> is a pointer and the other operand is a constant expression with the value 0, the type of the result is the pointer type.</li>
</ul>
<p>
In the type comparison for pointers, any type qualifiers (<b>const</b> or <b>volatile</b>) in the type to which the pointer points are insignificant, but the result type inherits the qualifiers from both components of the conditional.</p>
<p class=label>
<b>Examples</b></p>
<p>
The following examples show uses of the conditional operator: </p>
<pre><code>j = ( i &lt; 0 ) ? ( -i ) : ( i );
</code></pre>
<p>
This example assigns the absolute value of <code>i</code> to <code>j</code>. If <code>i</code> is less than 0, <code>-i</code> is assigned to <code>j</code>. If <code>i</code> is greater than or equal to 0, <code>i</code> is assigned to <code>j</code>.</p>
<pre><code>void f1( void );
void f2( void );
int x;
int y;
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
( x == y ) ? ( f1() ) : ( f2() );
</code></pre>
<p>
In this example, two functions, <code>f1</code> and <code>f2</code>, and two variables, <code>x</code> and <code>y</code>, are declared. Later in the program, if the two variables have the same value, the function <code>f1</code> is called. Otherwise, <code>f2</code> is called.</p>
</font></BODY>
</HTML>
