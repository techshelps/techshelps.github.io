<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>set::swap, begin, end (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_setCCswap_begin_end">set::swap, begin, end (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>set::(swap, begin, end)</code> STL functions in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;set&gt;</p>
<b>Prototype:</b><br>
<pre><code>
template&lt;class _K, class _Pr, class _A&gt;
    class set
    {
        public:
        // Function 1:
        void swap(_Myt&amp; _X);
        // Function 2:
        friend void swap(_Myt&amp; _X, _Myt&amp; _Y);
        // Function 3:
        const_iterator begin() const;
        // Function 4:
        const_iterator end() const;
     }
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The swap function swaps the two controlled sequences. The begin function returns a bidirectional iterator that points at the first element of the sequence. The end function returns a bidirectional iterator that points just beyond the end of the sequence.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: -GX
//
// SetSwapBeginEnd.cpp:
//      Illustrates how to use the swap function to exchange the two
//      controlled sequences. It also illustrates how to use the
//      begin function to get a bidirectional iterator that points at
//      the first element of the controlled sequence. Finally, it
//      illustrates how to use the end function to get a bidirectional
//      iterator that points just beyond the end of the controlled
//      sequence.
//
// Functions:
//
//    swap        Exchanges the two controlled sequences.
//    begin       Returns a bidirectional iterator that points at the
//                first element of the controlled sequence.
//    end         Returns a bidirectional iterator that points just
//                beyond the end of the controlled sequence.
//
//////////////////////////////////////////////////////////////////////

#pragma warning(disable:4786)
#include &lt;set&gt;
#include &lt;iostream&gt;

using namespace std ;

typedef set&lt;int&gt; SET_INT;

void main() {
  SET_INT s1;
  SET_INT s2;
  SET_INT::iterator i;
  cout &lt;&lt; "s1.insert(5)" &lt;&lt; endl;
  s1.insert(5);
  cout &lt;&lt; "s1.insert(10)" &lt;&lt; endl;
  s1.insert(10);
  cout &lt;&lt; "s1.insert(15)" &lt;&lt; endl;
  s1.insert(15);
  cout &lt;&lt; "s2.insert(2)" &lt;&lt; endl;
  s2.insert(2);
  cout &lt;&lt; "s2.insert(4)" &lt;&lt; endl;
  s2.insert(4);

  cout &lt;&lt; "swap(s1,s2)" &lt;&lt; endl;
  swap(s1,s2);

  // Displays: 2,4
  for (i=s1.begin();i!=s1.end();i++)
     cout &lt;&lt; "s1 has " &lt;&lt; *i &lt;&lt; " in its set." &lt;&lt; endl;

  // Displays: 5,10,15
  for (i=s2.begin();i!=s2.end();i++)
     cout &lt;&lt; "s2 has " &lt;&lt; *i &lt;&lt; " in its set." &lt;&lt; endl;

  cout &lt;&lt; "s1.swap(s2)" &lt;&lt; endl;
  s1.swap(s2);

  // Displays: 5,10,15
  for (i=s1.begin();i!=s1.end();i++)
     cout &lt;&lt; "s1 has " &lt;&lt; *i &lt;&lt; " in its set." &lt;&lt; endl;

  // Displays: 2,4
  for (i=s2.begin();i!=s2.end();i++)
     cout &lt;&lt; "s2 has " &lt;&lt; *i &lt;&lt; " in its set." &lt;&lt; endl;
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>
s1.insert(5)
s1.insert(10)
s1.insert(15)
s2.insert(2)
s2.insert(4)
swap(s1,s2)
s1 has 2 in its set.
s1 has 4 in its set.
s2 has 5 in its set.
s2 has 10 in its set.
s2 has 15 in its set.
s1.swap(s2)
s1 has 5 in its set.
s1 has 10 in its set.
s1 has 15 in its set.
s2 has 2 in its set.
s2 has 4 in its set.
</code></pre>

</body>
</html>
