<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>locale</title></head>
<body bgcolor=white>

<h2><a name="locale">locale</a></h2>
<META NAME="MS-HKWD" CONTENT="locale">
<p><a href="LOCALE2_localeCCcategory.htm#locale::category"><code><b>category</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCclassic.htm#locale::classic"><code><b>classic</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCfacet.htm#locale::facet"><code><b>facet</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCglobal.htm#locale::global"><code><b>global</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCid.htm#locale::id"><code><b>id</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCClocale.htm#locale::locale"><code><b>locale</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCname.htm#locale::name"><code><b>name</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCoperatorNE.htm#locale::operator!="><code><b>operator!=</b></code></a><code><b> &#183; </b></code><a href="LOCALE2_localeCCoperator().htm#locale::operator()"><code><b>operator()</b></code></a><code><b> &#183; 
</b></code><a href="LOCALE2_localeCCoperatorEE.htm#locale::operator=="><code><b>operator==</b></code></a><code><b> </b></code></p>

<pre><code>class <b>locale</b> {
public:
    class <a href="LOCALE2_localeCCfacet.htm#locale::facet"><b>facet</b></a>;
    class <a href="LOCALE2_localeCCid.htm#locale::id"><b>id</b></a>;
    typedef int <a href="LOCALE2_localeCCcategory.htm#locale::category"><b>category</b></a>;
    static const category <b>none</b>, <b>collate</b>, <b>ctype</b>, <b>monetary</b>,
        <b>numeric</b>, <b>time</b>, <b>messages</b>, <b>all</b>;
    <a href="LOCALE2_localeCClocale.htm#locale::locale"><b>locale</b></a>();
    explicit <a href="LOCALE2_localeCClocale.htm#locale::locale"><b>locale</b></a>(const char *s);
    <a href="LOCALE2_localeCClocale.htm#locale::locale"><b>locale</b></a>(const locale&amp; x, const locale&amp; y,
        category cat);
    <a href="LOCALE2_localeCClocale.htm#locale::locale"><b>locale</b></a>(const locale&amp; x, const char *s, category cat);
    bool <a href="LOCALE2_localeCCoperator().htm#locale::operator()"><b>operator()</b></a>(const string&amp; lhs,
        const string&amp; rhs) const;
    string <a href="LOCALE2_localeCCname.htm#locale::name"><b>name</b></a>() const;
    bool <a href="LOCALE2_localeCCoperatorEE.htm#locale::operator=="><b>operator==</b></a>(const locale&amp; x) const;
    bool <a href="LOCALE2_localeCCoperatorNE.htm#locale::operator!="><b>operator!=</b></a>(const locale&amp; x) const;
    static locale <a href="LOCALE2_localeCCglobal.htm#locale::global"><b>global</b></a>(const locale&amp; x);
    static const locale&amp; <a href="LOCALE2_localeCCclassic.htm#locale::classic"><b>classic</b></a>();
    };</code></pre>
<p>The class describes a <a name="locale object"><b>locale object</b></a> that encapsulates a locale. It represents culture-specific information as a list of 
<a name="locale facet"><b>facets</b></a>. A facet is a pointer to an object of a class derived from class <a href="LOCALE2_localeCCfacet.htm#locale::facet"><code>facet</code></a> that has a public object of the form: </p>
<pre><code>static locale::id id;</code></pre>
<p>You can define an open-ended set of these facets. You can also construct a locale object that designates an arbitrary 
number of facets.</p>
<p>Predefined groups of these facets represent the locale categories traditionally managed in the Standard C library by the 
function <code>setlocale</code>.</p>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::collate"><code><b>collate</b></code></a> (<code>LC_COLLATE</code>) includes the facets:</p>
<pre><code>collate&lt;char&gt;
collate&lt;wchar_t&gt;</code></pre>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::ctype"><code><b>ctype</b></code></a> (<code>LC_CTYPE</code>) includes the facets:</p>
<pre><code>ctype&lt;char&gt;
ctype&lt;wchar_t&gt;
codecvt&lt;char, char, mbstate_t&gt;
codecvt&lt;wchar_t, char, mbstate_t&gt;</code></pre>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::monetary"><code><b>monetary</b></code></a> (<code>LC_MONETARY</code>) includes the facets:</p>
<pre><code>moneypunct&lt;char, false&gt;
moneypunct&lt;wchar_t, false&gt;
moneypunct&lt;char, true&gt;
moneypunct&lt;wchar_t, true&gt;
money_get&lt;char, istreambuf_iterator&lt;char&gt; &gt;
money_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t&gt; &gt;
money_put&lt;char, ostreambuf_iterator&lt;char&gt; &gt;
money_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t&gt; &gt;</code></pre>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::numeric"><code><b>numeric</b></code></a> (<code>LC_NUMERIC</code>) includes the facets:</p>
<pre><code>num_get&lt;char, istreambuf_iterator&lt;char&gt; &gt;
num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t&gt; &gt;
num_put&lt;char, ostreambuf_iterator&lt;char&gt; &gt;
num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t&gt; &gt;
numpunct&lt;char&gt;
numpunct&lt;wchar_t&gt;</code></pre>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::time"><code><b>time</b></code></a> (<code>LC_TIME</code>) includes the facets:</p>
<pre><code>time_get&lt;char, istreambuf_iterator&lt;char&gt; &gt;
time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t&gt; &gt;
time_put&lt;char, ostreambuf_iterator&lt;char&gt; &gt;
time_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t&gt; &gt;</code></pre>
<p>Category <a href="LOCALE2_localeCCcategory.htm#locale::messages"><code><b>messages</b></code></a> (<code>LC_MESSAGE</code>) includes the facets:</p>
<pre><code>messages&lt;char&gt;
messages&lt;wchar_t&gt;</code></pre>
<p>(The last category is required by Posix, but not the C Standard.)</p>
<p>Some of these predefined facets are used by the <a href="LIB_CPP_Iostreams_Conventions.htm#iostreams">iostreams</a> classes to control the conversion of numeric values to and 
from text sequences.</p>
<p>An object of class <code>locale</code> also stores a <a name="locale name"><b>locale name</b></a> as an object of class <a href="STRING2_string.htm#string"><code>string</code></a>. Using an invalid locale name to 
construct a <a href="LOCALE2_locale.htm#locale facet">locale facet</a> or a locale object throws an object of class <a href="STDEXCEP_runtime_error.htm#runtime_error"><code>runtime_error</code></a>. If the stored locale name is <code>&quot;*&quot;</code>, 
no C-style locale corresponds exactly to that represented by the object. Otherwise, you can establish a matching locale 
within the Standard C library by calling <code>setlocale</code><code>( </code><code>LC_ALL</code><code>, x.</code><a href="LOCALE2_localeCCname.htm#locale::name"><code>name</code></a><code>. </code><a href="STRING2_basic_stringCCc_str.htm#basic_string::c_str"><code>c_str</code></a><code>())</code>.</p>
<p>In this <a href="INDEX_Table_of_Contents.htm#implementation">implementation</a>, you can also call the static member function:</p>
<pre><code>static locale <a name="locale::empty"><b>empty</b></a>();</code></pre>
<p>to construct a locale object that has no facets. It is also a <a name="transparent locale"><b>transparent locale</b></a> -- the template function <a href="LOCALE2_use_facet.htm#use_facet"><code>use_facet</code></a> 
consults the <a href="LOCALE2_localeCCglobal.htm#global locale">global locale</a> if it cannot find the requested facet in a transparent locale. Thus, you can write:</p>
<pre><code>cout.imbue(locale::empty());</code></pre>
<p>Subsequent insertions to <a href="IOSTREAM_cout.htm#cout"><code>cout</code></a> are mediated by the current state of the global locale. You can even write:</p>
<pre><code>locale loc(locale::empty(), locale(&quot;C&quot;), locale::numeric);
cout.imbue(loc);</code></pre>
<p>Numeric formatting rules remain the same as in the C locale even as the global locale supplies changing rules for 
inserting dates and monetary amounts.</p>
</body>
</html>
