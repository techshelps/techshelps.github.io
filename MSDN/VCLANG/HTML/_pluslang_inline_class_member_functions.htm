<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inline Class Member Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_inline_class_member_functions"></a><sup></sup>Inline Class Member Functions</h1>
<p>
A function defined in the body of a class declaration is an inline function. Consider the following class declaration:</p>
<pre><code>class Account
{
public:
 &nbsp;&nbsp; Account(double initial_balance) { balance = initial_balance; }
 &nbsp;&nbsp; double GetBalance();
 &nbsp;&nbsp; double Deposit( double Amount );
 &nbsp;&nbsp; double Withdraw( double Amount );
private:
 &nbsp;&nbsp; double balance;
};
</code></pre>
<p>
The <code>Account</code> constructor is an inline function. The member functions <code>GetBalance</code>, <code>Deposit</code>, and <code>Withdraw</code> are not specified as <b>inline</b> but can be implemented as inline functions using code such as the following:</p>
<pre><code>inline double Account::GetBalance()
{
 &nbsp;&nbsp; return balance;
}

inline double Account::Deposit( double Amount )
{
 &nbsp;&nbsp; return ( balance += Amount );
}

inline double Account::Withdraw( double Amount )
{
 &nbsp;&nbsp; return ( balance -= Amount );
}
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In the class declaration, the functions were declared without the <b>inline</b> keyword. The <b>inline</b> keyword can be specified in the class declaration; the result is the same.</p>
<p>
A given inline member function must be declared the same way in every compilation unit. This constraint causes inline functions to behave as if they were instantiated functions. Additionally, there must be exactly one definition of an inline function.</p>
<p>
A class member function defaults to external linkage unless a definition for that function contains the <b>inline</b> specifier. The preceding example shows that these functions need not be explicitly declared with the <b>inline</b> specifier; using <b>inline</b> in the function definition causes it to be an inline function. However, it is illegal to redeclare a function as <b>inline</b> after a call to that function.</p>
</font></BODY>
</HTML>
