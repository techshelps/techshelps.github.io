<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Structure and Union Members</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_structure_and_union_members"></a><sup></sup>Structure and Union Members </h1>
<p>
A “member-selection expression” refers to members of structures and unions. Such an expression has the value and type of the selected member. </p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>postfix-expression</i> <b>.</b> <i>identifier</i><br>
<i>postfix-expression</i> <b>–&gt;</b> <i>identifier</i></p>
<p>
This list describes the two forms of the member-selection expressions: 
<ol>
<li>
In the first form, <i>postfix-expression</i> represents a value of <b>struct</b> or <b>union</b> type, and <i>identifier</i> names a member of the specified structure or union. The value of the operation is that of <i>identifier</i> and is an l-value if <i>postfix-expression</i> is an l-value. See <a href="_clang_l.2d.value_and_r.2d.value_expressions.htm">L-Value and R-Value Expressions</a> for more information.<br><br></li>
<li>
In the second form, <i>postfix-expression</i> represents a pointer to a structure or union, and <i>identifier</i> names a member of the specified structure or union. The value is that of <i>identifier</i> and is an l-value.</li>
</ol>
<p>
The two forms of member-selection expressions have similar effects. </p>
<p>
In fact, an expression involving the member-selection operator (<b>–&gt;</b>) is a shorthand version of an expression using the period (<b>.</b>) if the expression before the period consists of the indirection operator (<b>*</b>) applied to a pointer value. Therefore,</p>
<p>
<i>expression</i> <b>–&gt;</b> <i>identifier</i></p>
<p>
is equivalent to</p>
<p>
<b>(*</b><i>expression</i><b>)</b> <b>.</b> <i>identifier</i></p>
<p>
when <i>expression</i> is a pointer value.</p>
<p class=label>
<b>Examples</b></p>
<p>
The following examples refer to this structure declaration. For information about the indirection operator (<b>*</b>) used in these examples, see <a href="_clang_indirection_and_address.2d.of_operators.htm">Indirection and Address-of Operators</a>. </p>
<pre><code>struct pair 
{
 &nbsp;&nbsp; int a;
 &nbsp;&nbsp; int b;
 &nbsp;&nbsp; struct pair *sp;
} item, list[10];
</code></pre>
<p>
A member-selection expression for the <code>item</code> structure looks like this:</p>
<pre><code>item.sp = &amp;item;
</code></pre>
<p>
In the example above, the address of the <code>item</code> structure is assigned to the <code>sp</code> member of the structure. This means that <code>item</code> contains a pointer to itself. </p>
<pre><code>(item.sp)–&gt;a = 24;
</code></pre>
<p>
In this example, the pointer expression <code>item.sp</code> is used with the member-selection operator (<b>–&gt;</b>) to assign a value to the member <code>a</code>.</p>
<pre><code>list[8].b = 12;
</code></pre>
<p>
This statement shows how to select an individual structure member from an array of structures.</p>
</font></BODY>
</HTML>
