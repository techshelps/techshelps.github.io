<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The C for Statement</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_the_c_for_statement"></a><sup></sup>The C for Statement</h1>
<p>
The <b>for</b> statement lets you repeat a statement or compound statement a specified number of times. The body of a <b>for</b> statement is executed zero or more times until an optional condition becomes false. You can use optional expressions within the <b>for</b> statement to initialize and change values during the <b>for</b> statement’s execution.&nbsp; </p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>iteration-statement</i> :</p>
<p class=indent>
<b>for (</b> <i>init-expression</i> <sub>opt</sub> <b>;</b> <i>cond-expression</i> <sub>opt</sub> <b>;</b> <i>loop-expression</i> <sub>opt</sub> <b>)</b> <i>statement</i> </p>
<p>
Execution of a <b>for</b> statement proceeds as follows:
<ol>
<li>
The <i>init-expression</i>, if any, is evaluated. This specifies the initialization for the loop. There is no restriction on the type of <i>init-expression</i>.<br><br></li>
<li>
The <i>cond-expression</i>, if any, is evaluated. This expression must have arithmetic or pointer type. It is evaluated before each iteration. Three results are possible:<ul type=disc>
<li>
If <i>cond-expression</i> is true (nonzero), <i>statement</i> is executed; then <i>loop-expression</i>, if any, is evaluated. The <i>loop-expression</i> is evaluated after each iteration. There is no restriction on its type. Side effects will execute in order. The process then begins again with the evaluation of <i>cond-expression</i>.<br><br></li>
<li>
If <i>cond-expression</i> is omitted, <i>cond-expression</i> is considered true, and execution proceeds exactly as described in the previous paragraph. A <b>for</b> statement without a <i>cond-expression</i> argument terminates only when a <b>break</b> or <b>return</b> statement within the statement body is executed, or when a <b>goto</b> (to a labeled statement outside the <b>for</b> statement body) is executed.<br><br></li>
<li>
If <i>cond-expression</i> is false (0), execution of the <b>for</b> statement terminates and control passes to the next statement in the program.</li>
</ul>
</li>
</ol>
<p>
A <b>for</b> statement also terminates when a <b>break</b>, <b>goto</b>, or <b>return</b> statement within the statement body is executed. A <b>continue</b> statement in a <b>for</b> loop causes <i>loop-expression</i> to be evaluated. When a <b>break</b> statement is executed inside a <b>for</b> loop, <i>loop-expression</i> is not evaluated or executed. This statement</p>
<pre><code>for( ;; );
</code></pre>
<p>
is the customary way to produce an infinite loop which can only be exited with a <b>break</b>, <b>goto</b>, or <b>return</b> statement. </p>
<p>
This example illustrates the <b>for</b> statement: </p>
<pre><code>for ( i = space = tab = 0; i &lt; MAX; i++ ) 
{
 &nbsp;&nbsp; if ( line[i] == ' ' )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; space++;
 &nbsp;&nbsp; if ( line[i] == '\t' ) 
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; tab++;
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; line[i] = ' ';
 &nbsp;&nbsp; }
}
</code></pre>
<p>
This example counts space (<code>' '</code>) and tab (<code>'\t'</code>) characters in the array of characters named <code>line</code> and replaces each tab character with a space. First <code>i</code>, <code>space</code>, and <code>tab</code> are initialized to 0. Then <code>i</code> is compared with the constant <code>MAX</code>; if <code>i</code> is less than <code>MAX</code>, the statement body is executed. Depending on the value of <code>line[i]</code>, the body of one or neither of the <b>if</b> statements is executed. Then <code>i</code> is incremented and tested against <code>MAX</code>; the statement body is executed repeatedly as long as <code>i</code> is less than <code>MAX</code>. </p>
</font></BODY>
</HTML>
