<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rules for Declaring Conversion Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_rules_for_declaring_conversion_functions"></a><sup></sup>Rules for Declaring Conversion Functions</h1>
<p>
The following four rules are used when declaring conversion functions (see <a href="_pluslang_conversion_functions.htm">Conversion Functions</a> for syntax):
<ul type=disc>
<li>
Classes, enumerations, and <b>typedef</b> names cannot be declared in the <i>type-specifier-list</i>. Therefore, the following code generates an error:<pre><code>operator struct String{ char string_storage; }();
</code></pre>
<p class=tl>
Instead, declare the <code>String</code> structure prior to the conversion function.</P></li>
<li>
Conversion functions take no arguments. Specifying arguments generates an error.<br><br></li>
<li>
Conversion functions have the return type specified by the <i>conversion-type-name</i>; specifying any return type for a conversion function generates an error.<br><br></li>
<li>
Conversion functions can be declared as <b>virtual</b>.</li>
</ul>
</font></BODY>
</HTML>
