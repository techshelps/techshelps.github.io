<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Assignment Operators</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.assignment_operators"></a><sup></sup>C++ Assignment Operators</h1>
<p>
Assignment operators store a value in the object designated by the left operand. There are two kinds of assignment operations: “simple assignment,” in which the value of the second operand is stored in the object specified by the first operand, and “compound assignment,” in which an arithmetic, shift, or bitwise operation is performed prior to storing the result. All assignment operators in Table 4.4 except the = operator are compound assignment operators.</p>
<p class=label>
<b><a name="_pluslang_table_4..4"></a>Table 4.4&nbsp;&nbsp;&nbsp;Assignment Operators</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=18%><b>Operator</b></td>
<td class=label width=82%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=18%>=</td>
<td width=82%>Store the value of the second operand in the object specified by the first operand (“simple assignment”).</td>
</tr>
<tr valign=top>
<td width=18%>*=</td>
<td width=82%>Multiply the value of the first operand by the value of the second operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>/=</td>
<td width=82%>Divide the value of the first operand by the value of the second operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>%=</td>
<td width=82%>Take modulus of the first operand specified by the value of the second operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>+=</td>
<td width=82%>Add the value of the second operand to the value of the first operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>–=</td>
<td width=82%>Subtract the value of the second operand from the value of the first operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>&lt;&lt;=</td>
<td width=82%>Shift the value of the first operand left the number of bits specified by the value of the second operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>&gt;&gt;=</td>
<td width=82%>Shift the value of the first operand right the number of bits specified by the value of the second operand; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>&amp;=</td>
<td width=82%>Obtain the bitwise AND of the first and second operands; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>^=</td>
<td width=82%>Obtain the bitwise exclusive OR of the first and second operands; store the result in the object specified by the first operand.</td>
</tr>
<tr valign=top>
<td width=18%>|=</td>
<td width=82%>Obtain the bitwise inclusive OR of the first and second operands; store the result in the object specified by the first operand.</td>
</tr>
</table><br>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>assignment-expression</i> :</p>
<p class=indent>
<i>conditional-expression</i><br>
<i>unary-expression</i> <i>assignment-operator</i> <i>assignment-expression</i></p>
<p class=dt>
<i>assignment-operator</i> : one of</p>
<p class=indent>
=&nbsp;&nbsp;&nbsp;*=&nbsp;&nbsp;&nbsp;/=&nbsp;&nbsp;&nbsp;%=&nbsp;&nbsp;&nbsp;+=&nbsp;&nbsp;&nbsp;–=&nbsp;&nbsp;&nbsp;&lt;&lt;=&nbsp;&nbsp;&nbsp;&gt;&gt;=&nbsp;&nbsp;&nbsp;&amp;=&nbsp;&nbsp;&nbsp;^=&nbsp;&nbsp;&nbsp;|=</p>
</font></BODY>
</HTML>
