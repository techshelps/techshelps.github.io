<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_istream::get</title></head>
<body bgcolor=white>

<h3><a name="basic_istream::get">basic_istream::get</a></h3>
<META NAME="MS-HKWD" CONTENT="get">
<pre><code>int_type <a href="ISTREAM_basic_istreamCCget.htm#basic_istream::get"><b>get</b></a>();
basic_istream&amp; <b>get</b>(E&amp; c);
basic_istream&amp; <b>get</b>(E *s, streamsize n);
basic_istream&amp; <b>get</b>(E *s, streamsize n, E delim);
basic_istream&amp; <b>get</b>(basic_streambuf&lt;E, T&gt; *sb);
basic_istream&amp; <b>get</b>(basic_streambuf&lt;E, T&gt; *sb, E delim);</code></pre>
<p>The first of these <a href="ISTREAM_basic_istream.htm#unformatted input functions">unformatted input functions</a> extracts an element, if possible, as if by returning <code>rdbuf()-&gt;</code><a href="STREAMBU_basic_streambufCCsbumpc.htm#basic_streambuf::sbumpc"><code>sbumpc</code></a><code>()</code>. 
Otherwise, it returns <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>()</code>. If the function extracts no element, it calls <a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>.</p>
<p>The second function extracts the <a href="IOS_basic_iosCCint_type.htm#basic_ios::int_type"><code>int_type</code></a> element <code>x</code> the same way. If <code>x</code> compares equal to <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>(x)</code>, the function 
calls <a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>. Otherwise, it stores <code>T::</code><a href="STRING2_char_traitsCCto_char_type.htm#char_traits::to_char_type"><code>to_char_type</code></a><code>(x)</code> in <code>c</code>. The function returns <code>*this</code>.</p>
<p>The third function returns <code>get(s, n, widen('\n'))</code>.</p>
<p>The fourth function extracts up to <code>n - 1</code> elements and stores them in the array beginning at <code>s</code>. It always stores <code>E(0)</code> 
after any extracted elements it stores. Extraction stops early on end-of-file or on an element that compares equal to 
<code>delim</code> (which is not extracted). If the function extracts no elements, it calls <a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>. In any case, it 
returns <code>*this</code>.</p>
<p>The fifth function returns <code>get(sb, widen('\n'))</code>.</p>
<p>The sixth function extracts elements and inserts them into <code>sb</code>. Extraction stops on end-of-file or on an element that 
compares equal to <code>delim</code> (which is not extracted). It also stops, without extracting the element in question, if an 
insertion fails or throws an exception (which is caught but not rethrown). If the function extracts no elements, it calls 
<a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>. In any case, the function returns <code>*this</code>.</p>
</body>
</html>
