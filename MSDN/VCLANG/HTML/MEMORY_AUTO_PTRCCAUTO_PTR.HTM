<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>auto_ptr::auto_ptr</title></head>
<body bgcolor=white>

<h3><a name="auto_ptr::auto_ptr">auto_ptr::auto_ptr</a></h3>
<META NAME="MS-HKWD" CONTENT="auto_ptr">
<pre><code>explicit <b>auto_ptr</b>(T *p = 0) throw();
<b>auto_ptr</b>(const auto_ptr(auto_ptr&lt;T&gt;&amp; rhs) throw();</code></pre>
<p>The first constructor stores <code>p</code> as the pointer to the allocated object. It stores true as the <a href="MEMORY_auto_ptr.htm#ownership indicator">ownership indicator</a> only if <code>p 
!= 0</code>. The second constructor transfers ownership of the pointer stored in <code>rhs</code>, by storing both the pointer value and 
the ownership indicator from <code>rhs</code> in the constructed object. It effectively releases the pointer by calling 
<code>rhs.</code><a href="MEMORY_auto_ptrCCrelease.htm#auto_ptr::release"><code>release</code></a><code>()</code>.</p>
<p>In this <a href="INDEX_Table_of_Contents.htm#implementation">implementation</a>, if a translator does not support member template functions, the template:</p>
<pre><code>template&lt;class U&gt;
    <b>auto_ptr</b>(const auto_ptr(auto_ptr&lt;U&gt;&amp; rhs) throw();</code></pre>
<p>is replaced by:</p>
<pre><code><b>auto_ptr</b>(const auto_ptr(auto_ptr&lt;T&gt;&amp; rhs);</code></pre>
</body>
</html>
