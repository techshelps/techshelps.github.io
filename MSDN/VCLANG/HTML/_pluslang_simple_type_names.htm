<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Simple Type Names</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_simple_type_names"></a><sup></sup>Simple Type Names</h1>
<p>
A simple type name is the name of a complete type.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>simple-type-name</i>:</p>
<p class=indent>
<i>complete-class-name</i><br>
<i>qualified-type-name</i><br>
<b>char</b><br>
<b>short</b><br>
<b>int</b><br>
<b>long</b><br>
<b>signed</b><br>
<b>unsigned</b><br>
<b>float</b><br>
<b>double</b><br>
<b>void</b></p>
<p>
Table 6.2 shows how the simple type names can be used together.</p>
<p class=label>
<b><a name="_pluslang_table_6..2"></a>Table 6.2&nbsp;&nbsp;&nbsp;Type Name Combinations</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Type</b></td>
<td class=label width=34%><b>Can Appear With</b></td>
<td class=label width=47%><b>Comments</b></td>
</tr>
<tr valign=top>
<td width=19%><b>int</b></td>
<td width=34%><b>long</b> or <b>short</b>, but not both</td>
<td width=47%>Type <b>int</b> implies type <b>long int</b>.</td>
</tr>
<tr valign=top>
<td width=19%><b>long</b></td>
<td width=34%><b>int</b> or <b>double</b></td>
<td width=47%>Type <b>long</b> implies type <b>long int</b>. </td>
</tr>
<tr valign=top>
<td width=19%><b>short</b></td>
<td width=34%><b>int</b></td>
<td width=47%>Type <b>short</b> implies type <b>short int</b>.</td>
</tr>
<tr valign=top>
<td width=19%><b>signed</b></td>
<td width=34%><b>char</b>, <b>short</b>, <b>int</b>, or <b>long</b></td>
<td width=47%>Type <b>signed</b> implies <b>signed int</b>. The most-significant bit of objects of type <b>signed char</b> and bit fields of signed integral types is taken to be the sign bit.</td>
</tr>
<tr valign=top>
<td width=19%><b>unsigned</b></td>
<td width=34%><b>char</b>, <b>short</b>, <b>int</b>, or <b>long</b></td>
<td width=47%>Type <b>unsigned</b> implies <b>unsigned int</b>. The most-significant bit of objects of type <b>unsigned char</b> and bit fields of unsigned integral types is not treated as the sign bit.</td>
</tr>
</table><br>
</font></BODY>
</HTML>
