<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>string::getline (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_stringCCgetline">string::getline (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>string::getline</code> STL function in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;string&gt;</p>
<b>Prototype:</b><br>
<pre><code>
template&lt;class _E, class _TYPE, class _A&gt; inline
     basic_istream&lt;_E, _TYPE&gt;&amp; getline( basic_istream&lt;_E, _TYPE&gt;&amp; Istream,
     basic_string&lt;_E, _TYPE, _A&gt;&amp; Xstring,
     const _E _D=_TYPE::newline());
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The getline function creates a string containing all of the characters from the input stream until one of the following situations occurs:   - End of file.   - The delimiter is encountered.   - is.max_str() elements have been extracted.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: /GX
//
// Getline.cpp : Illustrates how to use the getline function to read a
//               line of text from the keyboard.
//
// Functions:
//
//    getline       Returns a string from the input stream.
//////////////////////////////////////////////////////////////////////

#pragma warning(disable:4786)
#include &lt;string&gt;
#include &lt;iostream&gt;

using namespace std ;

void main()
{
    string s1;
    cout &lt;&lt; "Enter a sentence (use &lt;space&gt; as the delimiter):";
    getline(cin,s1, ' ');
    cout &lt;&lt; "You entered: " &lt;&lt; s1;
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>Enter a sentence (use &lt;space&gt; as the delimiter): A_space_at_the_end.
You entered: A_space_at_the_end.
</code></pre>

</body>
</html>
