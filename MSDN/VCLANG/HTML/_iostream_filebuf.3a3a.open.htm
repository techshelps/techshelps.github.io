<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>filebuf::open</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_filebuf.3a3a.open"></a><sup></sup>filebuf::open</h1>
<p>
<b>filebuf* open( const char* </b><i>szName</i><b>, int </b><i>nMode</i><b>, int </b><i>nProt </i><b>= filebuf::openprot );</b></p>
<p>
Opens a disk file and attaches it with this <b>filebuf</b> object. </p>
<p class=label>
<b>Return Value</b></p>
<p>
If the file is already open, or if there is an error while opening the file, the function returns <b>NULL</b>; otherwise it returns the <b>filebuf</b> address.</p>
<p class=label>
<b>Parameters</b></p>
<p class=dt>
<i>szName</i></p>
<p class=indent>
The name of the file to be opened during construction.</p>
<p class=dt>
<i>nMode</i></p>
<p class=indent>
An integer containing mode bits defined as <b>ios</b> enumerators that can be combined with the OR ( <b>|</b> ) operator. See the <a href="_iostream_ofstream.htm">ofstream</a> constructor for a list of the enumerators.</p>
<p class=dt>
<i>nProt</i></p>
<p class=indent>
The file protection specification; defaults to the static integer <b>filebuf::openprot</b>, which is equivalent to the operating system default (<b>filebuf::sh_compat</b> for MS-DOS). The possible values of <i>nProt</i> are:
<ul type=disc>
<li>
<b>filebuf::sh_compat</b>&nbsp;&nbsp;&nbsp;Compatibility share mode (MS-DOS only).<br><br></li>
<li>
<b>filebuf::sh_none</b>&nbsp;&nbsp;&nbsp;Exclusive mode — no sharing.<br><br></li>
<li>
<b>filebuf::sh_read</b>&nbsp;&nbsp;&nbsp;Read sharing allowed.<br><br></li>
<li>
<b>filebuf::sh_write</b>&nbsp;&nbsp;&nbsp;Write sharing allowed.<p class=tl>
You can combine the <b>filebuf::sh_read</b> and <b>filebuf::sh_write</b> modes with the logical OR ( <b>||</b> ) operator.</P></li>
</ul>
<p>
<a href="_iostream_filebuf.htm">filebuf Overview</a>  |&nbsp; <a href="_iostream_iostream_class_list.htm#_iostream_stream_buffer_classes">Stream Buffer Classes</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_iostream_filebuf.3a3a.is_open.htm">filebuf::is_open</a>, <a href="_iostream_filebuf.3a3a.close.htm">filebuf::close</a>, <a href="_iostream_filebuf.3a3a7e.filebuf.htm">filebuf::~filebuf</a></p>
</font></BODY>
</HTML>
