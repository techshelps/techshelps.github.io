<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Declaring Destructors</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_declaring_destructors"></a><sup></sup>Declaring Destructors</h1>
<p>
Destructors are functions with the same name as the class but preceded by a tilde (<b>~</b>).</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>~class-name</i><b>()</b></p>
<p>
or</p>
<p>
<i>class-name</i>  <b>::</b>  <i>~class-name</i><b>()</b></p>
<p>
The first form of the syntax is used for destructors declared or defined inside a class declaration; the second form is used for destructors defined outside a class declaration.</p>
<p>
Several rules govern the declaration of destructors. Destructors:
<ul type=disc>
<li>
Do not accept arguments.<br><br></li>
<li>
Cannot specify any return type (including <b>void</b>).<br><br></li>
<li>
Cannot return a value using the <b>return</b> statement.<br><br></li>
<li>
Cannot be declared as <b>const</b>, <b>volatile</b>, or <b>static</b>. However, they can be invoked for the destruction of objects declared as <b>const</b>, <b>volatile</b>, or <b>static</b>.<br><br></li>
<li>
Can be declared as <b>virtual</b>. Using virtual destructors, you can destroy objects without knowing their type — the correct destructor for the object is invoked using the virtual function mechanism. Note that destructors can also be declared as pure virtual functions for abstract classes.</li>
</ul>
</font></BODY>
</HTML>
