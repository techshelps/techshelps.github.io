<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using Manipulators with Derived Stream Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_using_manipulators_with_derived_stream_classes"></a><sup></sup>Using Manipulators with Derived Stream Classes</h1>
<p>
Suppose you define a manipulator, <code>xstream</code>, that works with the <a href="_iostream_ostream.htm">ostream</a> class. The manipulator will work with all classes derived from <b>ostream</b>. Further suppose you need manipulators that work only with <code>xstream</code>. In this case, you must add an overloaded insertion operator that is not a member of <b>ostream</b>:</p>
<pre><code>xstream&amp; operator&lt;&lt; ( xstream&amp; xs, xstream&amp; (*_f)( xstream&amp; ) ) {
 &nbsp;&nbsp; (*_f)( xs );
 &nbsp;&nbsp; return xs;
}
</code></pre>
<p>
The manipulator code looks like this:</p>
<pre><code>xstream&amp; bold( xstream&amp; xs ) {
 &nbsp;&nbsp; return xs &lt;&lt; '\033' &lt;&lt; '[';
}
</code></pre>
<p>
If the manipulator needs to access <code>xstream</code> protected data member functions, you can declare the <code>bold</code> function as a friend of the <code>xstream</code> class.</p>
</font></BODY>
</HTML>
