<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pointers to Members</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_pointers_to_members"></a><sup></sup>Pointers to Members</h1>
<p>
Declarations of pointers to members are special cases of pointer declarations.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>decl-specifiers</i>  <i>class-name</i>  <b>::</b>  <b>*</b>  <i>cv-qualifier-list</i><sub>opt</sub>  <i>dname</i>  <b>;</b></p>
<p>
A pointer to a member of a class differs from a normal pointer because it has type information for the type of the member and for the class to which the member belongs. A normal pointer identifies (has the address of) only a single object in memory. A pointer to a member of a class identifies that member in any instance of the class. The following example declares a class, <code>Window</code>, and some pointers to member data.</p>
<pre><code>class Window
{
public:
 &nbsp;&nbsp; Window();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Default constructor.
 &nbsp;&nbsp; Window( int x1, int y1,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Constructor specifying
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int x2, int y2 );&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; window size.
 &nbsp;&nbsp; BOOL SetCaption( const char *szTitle ); // Set window caption.
 &nbsp;&nbsp; const char *GetCaption();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Get window caption.
 &nbsp;&nbsp; char *szWinCaption;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Window caption.
};

// Declare a pointer to the data member szWinCaption.
char * Window::* pwCaption = &amp;Window::szWinCaption;
</code></pre>
<p>
In the preceding example, <code>pwCaption</code> is a pointer to any member of class <code>Window</code> that has type <b>char*</b>. The type of <code>pwCaption</code> is <code>char * Window::*</code>. The next code fragment declares pointers to the <code>SetCaption</code> and <code>GetCaption</code> member functions.</p>
<pre><code>const char * (Window::*pfnwGC)() = &amp;Window::GetCaption;
BOOL (Window::*pfnwSC)( const char * ) = &amp;Window::SetCaption;
</code></pre>
<p>
The pointers <code>pfnwGC</code> and <code>pfnwSC</code> point to <code>GetCaption</code> and <code>SetCaption</code> of the <code>Window</code> class, respectively. The code copies information to the window caption directly using the pointer to member <code>pwCaption</code>:</p>
<pre><code>Window wMainWindow;
Window *pwChildWindow = new Window;
char&nbsp;&nbsp; *szUntitled&nbsp;&nbsp;&nbsp; = "Untitled -&nbsp; ";
int&nbsp;&nbsp;&nbsp; cUntitledLen&nbsp;&nbsp; = strlen( szUntitled );

strcpy( wMainWindow.*pwCaption, szUntitled );
(wMainWindow.*pwCaption)[cUntitledLen - 1] = '1';&nbsp;&nbsp;&nbsp;&nbsp; //same as
//wMainWindow.SzWinCaption [ ] = '1';
strcpy( pwChildWindow-&gt;*pwCaption, szUntitled );
(pwChildWindow-&gt;*pwCaption)[szUntitledLen - 1] = '2'; //same as
//pwChildWindow-&gt;szWinCaption[ ] = '2';
</code></pre>
<p>
The difference between the <b>.*</b> and <b>–&gt;*</b> operators (the pointer-to-member operators) is that the <b>.*</b> operator selects members given an object or object reference, while the <b>–&gt;*</b> operator selects members through a pointer. (For more about these operators, see <a href="_pluslang_expressions_with_pointer.2d.to.2d.member_operators.htm">Expressions with Pointer-to-Member Operators</a> in Chapter 4.)</p>
<p>
The result of the pointer-to-member operators is the type of the member — in this case, <b>char *</b>.</p>
<p>
The following code fragment invokes the member functions <code>GetCaption</code> and <code>SetCaption</code> using pointers to members:</p>
<pre><code>// Allocate a buffer.
char szCaptionBase[100];

// Copy the main window caption into the buffer
//&nbsp; and append " [View 1]".
strcpy( szCaptionBase, (wMainWindow.*pfnwGC)() );
strcat( szCaptionBase, " [View 1]" );

// Set the child window's caption.
(pwChildWindow-&gt;*pfnwSC)( szCaptionBase );
</code></pre>
</font></BODY>
</HTML>
