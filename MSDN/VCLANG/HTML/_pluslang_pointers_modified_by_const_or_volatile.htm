<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Pointers Modified by const or volatile</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_pointers_modified_by_const_or_volatile"></a><sup></sup>Pointers Modified by const or volatile</h1>
<p>
C++ does not supply a standard conversion from a <b>const</b> or <b>volatile</b> type to a type that is not <b>const</b> or <b>volatile</b>. However, any sort of conversion can be specified using explicit type casts (including conversions that are unsafe).</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;C++ pointers to members, except pointers to static members, are different from normal pointers and do not have the same standard conversions. Pointers to static members are normal pointers and have the same conversions as normal pointers. (See <a href="_pluslang_directly_derived_types.htm#_pluslang_pointers_to_class_members">Pointers to Class Members</a> in Chapter 2 for more information.)</p>
</font></BODY>
</HTML>
