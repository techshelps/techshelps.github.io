<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>nth_element</title></head>
<body bgcolor=white>

<h2><a name="nth_element">nth_element</a></h2>
<META NAME="MS-HKWD" CONTENT="nth_element">
<pre><code>template&lt;class RanIt&gt;
    void <b>nth_element</b>(RanIt first, RanIt nth, RanIt last);
template&lt;class RanIt, class Pred&gt;
    void <b>nth_element</b>(RanIt first, RanIt nth, RanIt last, Pred pr);</code></pre>
<p>The first template function reorders the sequence designated by iterators in the range <code>[first, last)</code> such that for 
each <code>N</code> in the range <code>[0, nth - first)</code> and for each <code>M</code> in the range <code>[nth - first, last - first)</code>, the predicate 
<code>!(*(first + M) &lt; *(first + N))</code> is true. Moreover, for <code>N</code> equal to <code>nth - first</code> and for each <code>M</code> in the range 
<code>(nth - first, last - first)</code> the predicate <code>!(*(first + M) &lt; *(first + N))</code> is true. Thus, if <code>nth != 
last</code>, the element <code>*nth</code> is in its proper position if elements of the entire sequence were sorted in ascending order, 
<a href="lib_stl_Algorithm_Conventions.htm#sequence ordering">ordered by</a> <code>operator&lt;</code>. Any elements before this one belong before it in the sort sequence, and any elements following it 
belong after it.</p>
<p>The function evaluates the ordering predicate <code>X &lt; Y</code> a number of times proportional to <code>last - first</code>, on average.</p>
<p>The second template function behaves the same, except that it replaces <code>operator&lt;(X, Y)</code> with <code>pr(X, Y)</code>.</p>
<p>Sample programs: <a href="sample_nth_element_(STL_Sample).htm#_sample_stl_nth_element">nth_element</a> and <a href="sample_Predicate_Version_of_nth_element_(STL_Sample).htm#_sample_stl_nth_elementP">nth_element (predicate version)</a>.</p>

</body>
</html>
