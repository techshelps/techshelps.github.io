<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Operators</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_c_operators"></a><sup></sup>C Operators</h1>
<p>
There are three types of operators. A unary expression consists of either a unary operator prepended to an operand, or the <b>sizeof</b> keyword followed by an expression. The expression can be either the name of a variable or a cast expression. If the expression is a cast expression, it must be enclosed in parentheses. A binary expression consists of two operands joined by a binary operator. A ternary expression consists of three operands joined by the conditional-expression operator.</p>
<p>
C includes the following unary operators: </p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Symbol</b></td>
<td class=label width=72%><b>Name</b></td>
</tr>
<tr valign=top>
<td width=28%><b>–  ~&nbsp; !</b> </td>
<td width=72%>Negation and complement operators</td>
</tr>
<tr valign=top>
<td width=28%><b>*&nbsp; &amp;</b> </td>
<td width=72%>Indirection and address-of operators</td>
</tr>
<tr valign=top>
<td width=28%><b>sizeof</b> </td>
<td width=72%>Size operator</td>
</tr>
<tr valign=top>
<td width=28%><b>+</b> </td>
<td width=72%>Unary plus operator</td>
</tr>
<tr valign=top>
<td width=28%><b>++&nbsp; ––</b> </td>
<td width=72%>Unary increment and decrement operators</td>
</tr>
</table><br>
<p>
Binary operators associate from left to right. C provides the following binary operators:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=28%><b>Symbol</b></td>
<td class=label width=72%><b>Name</b></td>
</tr>
<tr valign=top>
<td width=28%><b>*&nbsp; /&nbsp; %</b> </td>
<td width=72%>Multiplicative operators</td>
</tr>
<tr valign=top>
<td width=28%><b>+&nbsp; –</b> </td>
<td width=72%>Additive operators</td>
</tr>
<tr valign=top>
<td width=28%><b>&lt;&lt;</b>&nbsp;&nbsp;&nbsp;<b>&gt;&gt;</b> </td>
<td width=72%>Shift operators</td>
</tr>
<tr valign=top>
<td width=28%><b>&lt;&nbsp;&nbsp;&nbsp;&gt;&nbsp;&nbsp;&nbsp;&lt;=&nbsp;&nbsp;&nbsp;&gt;=&nbsp;&nbsp;&nbsp;==&nbsp;&nbsp;&nbsp;!=</b> </td>
<td width=72%>Relational operators</td>
</tr>
<tr valign=top>
<td width=28%><b>&amp;&nbsp;&nbsp;&nbsp;|&nbsp; ^</b> </td>
<td width=72%>Bitwise operators</td>
</tr>
<tr valign=top>
<td width=28%><b>&amp;&amp;&nbsp;&nbsp;&nbsp;||</b> </td>
<td width=72%>Logical operators</td>
</tr>
<tr valign=top>
<td width=28%><b>,</b></td>
<td width=72%>Sequential-evaluation operator</td>
</tr>
</table><br>
<p>
The conditional-expression operator has lower precedence than binary expressions and differs from them in being right associative. </p>
<p>
Expressions with operators also include assignment expressions, which use unary or binary assignment operators. The unary assignment operators are the increment (<b>++</b>) and decrement (<b>––</b>) operators; the binary assignment operators are the simple-assignment operator (<b>=</b>) and the compound-assignment operators. Each compound-assignment operator is a combination of another binary operator with the simple-assignment operator. </p>
</font></BODY>
</HTML>
