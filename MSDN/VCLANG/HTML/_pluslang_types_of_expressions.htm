<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Types of Expressions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_types_of_expressions"></a><sup></sup>Types of Expressions</h1>
<p>
C++ expressions are divided into several categories:
<ul type=disc>
<li>
<a href="_pluslang_c.2b2b_.primary_expressions.htm">Primary expressions</a>. These are the building blocks from which all other expressions are formed.&nbsp; <br><br></li>
<li>
<a href="_pluslang_postfix_expressions.htm">Postfix expressions</a>. These are primary expressions followed by an operator — for example, the array subscript or postfix increment operator.&nbsp; <br><br></li>
<li>
<a href="_pluslang_expressions_with_unary_operators.htm">Expressions formed with unary operators</a>. Unary operators act on only one operand in an expression.&nbsp; <br><br></li>
<li>
<a href="_pluslang_expressions_with_binary_operators.htm">Expressions formed with binary operators</a>. Binary operators act on two operands in an expression.&nbsp; <br><br></li>
<li>
<a href="_pluslang_expressions_with_the_conditional_operator.htm">Expressions with the conditional operator</a>. The conditional operator is a ternary operator — the only such operator in the C++ language — and takes three operands.&nbsp; <br><br></li>
<li>
<a href="_pluslang_c.2b2b_.constant_expressions.htm">Constant expressions</a>. Constant expressions are formed entirely of constant data.&nbsp; <br><br></li>
<li>
<a href="_pluslang_expressions_with_explicit_type_conversions.htm">Expressions with explicit type conversions</a>. Explicit type conversions, or “casts,” can be used in expressions.&nbsp; <br><br></li>
<li>
<a href="_pluslang_expressions_with_pointer.2d.to.2d.member_operators.htm">Expressions with pointer-to-member operators</a>.&nbsp; <br><br></li>
<li>
<a href="_pluslang_casting.htm">Casting</a>. Type-safe “casts” can be used in expressions.&nbsp; <br><br></li>
<li>
<a href="_pluslang_run.2d.time_type_information.htm">Run-Time Type Information</a>. Determine the type of an object during program execution.&nbsp; </li>
</ul>
</font></BODY>
</HTML>
