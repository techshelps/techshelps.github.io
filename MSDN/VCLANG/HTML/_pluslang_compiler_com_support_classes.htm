<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Compiler COM Support Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_compiler_com_support_classes"></a>Compiler COM Support Classes</h1>
<p>
<b>Microsoft Specific </b></p>
<p>
Standard classes are used to support some of the COM types. The classes are defined in COMDEF.H and the header files generated from the type library.</p>
<p>
<b>#include &lt;comdef.h&gt;</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=35%><b>Class</b></td>
<td class=label width=65%><b>Purpose</b></td>
</tr>
<tr valign=top>
<td width=35%><a href="_pluslang__com_error.htm">_com_error</a></td>
<td width=65%>Defines the error object thrown by <b>_com_raise_error</b> in most failures.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_pluslang__com_ptr_t.htm">_com_ptr_t</a></td>
<td width=65%>Encapsulates COM interface pointers, and automates the required calls to <b>AddRef</b>, <b>Release</b>, and <b>QueryInterface</b>.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_pluslang__bstr_t.htm">_bstr_t</a></td>
<td width=65%>Wraps the <b>BSTR</b> type to provide useful operators and methods.</td>
</tr>
<tr valign=top>
<td width=35%><a href="_pluslang__variant_t.htm">_variant_t</a></td>
<td width=65%>Wraps the <b>VARIANT</b> type to provide useful operators and methods.</td>
</tr>
</table><br>
<p>
In addition, there is a support routine called <b>_com_raise_error</b>, which is used by all compiler-generated COM support code to throw a _com_error in response to a failure</p>
<p>
<b>_com_raise_error</b> is defined in comdef.h as,</p>
<pre><code>void __stdcall _com_raise_error(HRESULT hr, IErrorInfo* perrinfo = 0) throw(_com_error);</code></pre>
<p>
The actual source code is,</p>
<pre><code>void __stdcall _com_raise_error(HRESULT hr, IErrorInfo* perrinfo) throw(_com_error)
{
   throw _com_error(hr, perrinfo);
}
</code></pre>
<p>
<b>_com_raise_error</b> can be replaced by a user-written version of the same name and prototype. This could be done if you want to use #import, but don't want to use C++ exception handling.&nbsp; In that case, a user version of <b>_com_raise_error </b>might decide to do a <b>longjmp</b> or pop up a message box and halt. The user version should not return, though, since the compiler COM support code does not expect it to return.</p>
<p>
<b>END Microsoft Specific</b></p>
</font></BODY>
</HTML>
