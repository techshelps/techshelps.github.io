<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Explicit Destructor Calls</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_explicit_destructor_calls"></a><sup></sup>Explicit Destructor Calls</h1>
<p>
Calling a destructor explicitly is seldom necessary. However, it can be useful to perform cleanup of objects placed at absolute addresses. These objects are commonly allocated using a user-defined <b>new</b> operator that takes a placement argument. The <b>delete</b> operator cannot deallocate this memory because it is not allocated from the free store (for more information, see <a href="_pluslang_the_new_and_delete_operators.htm">The new and delete Operators</a>). A call to the destructor, however, can perform appropriate cleanup. To explicitly call the destructor for an object, <code>s</code>, of class <code>String</code>, use one of the following statements:</p>
<pre><code>s.String::~String();&nbsp;&nbsp;&nbsp;&nbsp; // Nonvirtual call
ps-&gt;String::~String();&nbsp;&nbsp; // Nonvirtual call

s.~String();&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Virtual call
ps-&gt;~String();&nbsp;&nbsp;&nbsp;&nbsp; // Virtual call
</code></pre>
<p>
The notation for explicit calls to destructors, shown in the preceding, can be used regardless of whether the type defines a destructor. This allows you to make such explicit calls without knowing if a destructor is defined for the type. An explicit call to a destructor where none is defined has no effect. </p>
</font></BODY>
</HTML>
