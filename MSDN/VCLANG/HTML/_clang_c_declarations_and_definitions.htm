<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Declarations and Definitions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_clang_c_declarations_and_definitions"></a><sup></sup>C Declarations and Definitions</h1>
<p>
A “declaration” establishes an association between a particular variable, function, or type and its attributes. <a href="_clang_overview_of_declarations.htm">Overview of Declarations</a> in Chapter 3 gives the ANSI syntax for the <i>declaration</i> nonterminal. A declaration also specifies where and when an identifier can be accessed (the “linkage” of an identifier). See <a href="_clang_lifetime.2c_.scope.2c_.visibility.2c_.and_linkage.htm">Lifetime, Scope, Visibility, and Linkage</a> for information about linkage. </p>
<p>
A “definition” of a variable establishes the same associations as a declaration but also causes storage to be allocated for the variable. </p>
<p>
For example, the <code>main</code>, <code>find</code>, and <code>count</code> functions and the <code>var</code> and <code>val</code> variables are defined in one source file, in this order:</p>
<pre><code>void main()
{
}

int var = 0;
double val[MAXVAL];

char find( fileptr )
{
}

int count( double f )
{
}
</code></pre>
<p>
The variables <code>var</code> and <code>val</code> can be used in the <code>find</code> and <code>count</code> functions; no further declarations are needed. But these names are not visible (cannot be accessed) in <code>main</code>. </p>
</font></BODY>
</HTML>
