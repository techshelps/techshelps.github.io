<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Transfers of Control</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_transfers_of_control"></a><sup></sup>Transfers of Control</h1>
<p>
You can use the <b>goto</b> statement or a <b>case</b> label in a <b>switch</b> statement to specify a program that branches past an initializer. Such code is illegal unless the declaration that contains the initializer is in a block enclosed by the block in which the jump statement occurs.</p>
<p>
The following example shows a loop that declares and initializes the objects <code>total</code>, <code>ch</code>, and <code>i</code>. There is also an erroneous <code>goto</code> statement that transfers control past an initializer.</p>
<pre><code>// Read input until a nonnumeric character is entered.
while( 1 )
{
 &nbsp;&nbsp; int total = 0;

 &nbsp;&nbsp; char ch = _getch();

 &nbsp;&nbsp; if( ch &gt;= '0' || ch &lt;= '9' )
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; goto Label1;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Error: transfers past initialization
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; of i.

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int i = ch - '0';
Label1:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; total += i;
 &nbsp;&nbsp; } // i would be destroyed here if the 
 &nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; goto error were not present.
 &nbsp;&nbsp; else
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Break statement transfers control out of loop,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; destroying total and ch.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;
}
</code></pre>
<p>
In the preceding example, the <code>goto</code> statement tries to transfer control past the initialization of <code>i</code>. However, if <code>i</code> were declared but not initialized, the transfer would be legal.</p>
<p>
The objects <code>total</code> and <code>ch</code>, declared in the block that serves as the <i>statement</i> of the <code>while</code> statement, are destroyed when that block is exited using the <code>break</code> statement.</p>
</font></BODY>
</HTML>
