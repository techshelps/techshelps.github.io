<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Linkage to Non-C++ Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_linkage_to_non.2d.c.2b2b_.functions"></a><sup></sup>Linkage to Non-C++ Functions</h1>
<p>
C functions and data can be accessed only if they are previously declared as having C linkage. However, they must be defined in a separately compiled translation unit.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>linkage-specification</i> :</p>
<p class=indent>
<b>extern</b> <i>string-literal</i> <b>{</b> <i>declaration-list</i><sub>opt </sub><b>}</b><br>
<b>extern</b> <i>string-literal</i> <i>declaration</i></p>
<p class=dt>
<i>declaration-list</i> :</p>
<p class=indent>
<i>declaration</i><br>
<i>declaration-list</i> <i>declaration</i></p>
<p>
Microsoft C++ supports the strings <b>"C"</b> and <b>"C++"</b> in the <i>string-literal</i> field. The following example shows alternative ways to declare names that have C linkage:</p>
<pre><code>// Declare printf with C linkage.
extern "C" int printf( const char *fmt, ... );

//&nbsp; Cause everything in the header file "cinclude.h"
//&nbsp;&nbsp; to have C linkage.
extern "C"
{
#include &lt;cinclude.h&gt;
}

//&nbsp; Declare the two functions ShowChar and GetChar
//&nbsp;&nbsp; with C linkage.
extern "C"
{
 &nbsp;&nbsp; char ShowChar( char ch );
 &nbsp;&nbsp; char GetChar( void );
}

//&nbsp; Define the two functions ShowChar and GetChar
//&nbsp;&nbsp; with C linkage.
extern "C" char ShowChar( char ch )
{
 &nbsp;&nbsp; putchar( ch );
 &nbsp;&nbsp; return ch;
}

extern "C" char GetChar( void )
{
 &nbsp;&nbsp; char ch;

 &nbsp;&nbsp; ch = getchar();
 &nbsp;&nbsp; return ch;
}

// Declare a global variable, errno, with C linkage.
extern "C" int errno;
</code></pre>
</font></BODY>
</HTML>
