<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Effects of Buffering</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_the_effects_of_buffering"></a><sup></sup>The Effects of Buffering</h1>
<p>
The following example shows the effects of buffering. You might expect the program to print <code>please wait</code>, wait 5 seconds, and then proceed. It won’t necessarily work this way, however, because the output is buffered.</p>
<pre><code>#include &lt;iostream.h&gt;
#include &lt;time.h&gt;

void main()
{
 &nbsp; time_t tm = time( NULL ) + 5;
 &nbsp; cout &lt;&lt; "Please wait...";
 &nbsp; while ( time( NULL ) &lt; tm )
 &nbsp;&nbsp;&nbsp;&nbsp; ;
 &nbsp; cout &lt;&lt; "\nAll done" &lt;&lt; endl;
}
</code></pre>
<p>
To make the program work logically, the <b>cout</b> object must empty itself when the message is to appear. To flush an <b>ostream</b> object, send it the <b>flush</b> manipulator:</p>
<pre><code>cout &lt;&lt; "Please wait..." &lt;&lt; flush;
</code></pre>
<p>
This step flushes the buffer, ensuring the message prints before the wait. You can also use the <b>endl</b> manipulator, which flushes the buffer and outputs a carriage return–linefeed, or you can use the <b>cin</b> object. This object (with the <b>cerr</b> or <b>clog</b> objects) is usually tied to the <b>cout</b> object. Thus, any use of <b>cin</b> (or of the <b>cerr</b> or <b>clog</b> objects) flushes the <b>cout</b> object.</p>
</font></BODY>
</HTML>
