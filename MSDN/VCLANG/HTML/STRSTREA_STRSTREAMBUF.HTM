<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>strstreambuf</title></head>
<body bgcolor=white>

<h2><a name="strstreambuf">strstreambuf</a></h2>
<META NAME="MS-HKWD" CONTENT="strstreambuf">
<pre><code>class <b>strstreambuf</b> : public streambuf {
public:
    explicit <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(streamsize n = 0);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(void (*palloc)(size_t),
        void (*pfree)(void *));
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(char *gp, streamsize n,
        char *pp = 0);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(signed char *gp, streamsize n,
        signed char *pp = 0);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(unsigned char *gp, streamsize n,
        unsigned char *pp = 0);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(const char *gp, streamsize n);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(const signed char *gp, streamsize n);
    <a href="STRSTREA_strstreambuf.htm#strstreambuf"><b>strstreambuf</b></a>(const unsigned char *gp, streamsize n);
    void <a href="STRSTREA_strstreambufCCfreeze.htm#strstreambuf::freeze"><b>freeze</b></a>(bool frz = true) const;
    char *<a href="STRSTREA_strstreambufCCstr.htm#strstreambuf::str"><b>str</b></a>();
    streamsize <a href="STRSTREA_strstreambufCCpcount.htm#strstreambuf::pcount"><b>pcount</b></a>();
protected:
    virtual streampos <a href="STRSTREA_strstreambufCCseekoff.htm#strstreambuf::seekoff"><b>seekoff</b></a>(streamoff off, ios_base::seekdir way,
        ios_base::openmode which = ios_base::in | ios_base::out);
    virtual streampos <a href="STRSTREA_strstreambufCCseekpos.htm#strstreambuf::seekpos"><b>seekpos</b></a>(streampos sp,
        ios_base::openmode which = ios_base::in | ios_base::out);
    virtual int <a href="STRSTREA_strstreambufCCunderflow.htm#strstreambuf::underflow"><b>underflow</b></a>();
    virtual int <a href="STRSTREA_strstreambufCCpbackfail.htm#strstreambuf::pbackfail"><b>pbackfail</b></a>(int c = EOF);
    virtual int <a href="STRSTREA_strstreambufCCoverflow.htm#strstreambuf::overflow"><b>overflow</b></a>(int c = EOF);
    };</code></pre>
<p>The class describes a <a name="stream buffer"><b>stream buffer</b></a> that controls the transmission of elements to and from a sequence of elements 
stored in a <i>char</i> array object. Depending on how it is constructed, the object can be allocated, extended, and freed as 
necessary to accommodate changes in the sequence.</p>
<p>An object of class <code>strstreambuf</code> stores several bits of mode information as its <a name="strstreambuf mode"><b>strstreambuf mode</b></a>. These bits 
indicate whether the controlled sequence:</p>
<ul>
<li>Has been <b>allocated</b>, and hence needs to be freed eventually.</li>
<li>Is <b>modifiable</b>.</li>
<li>Is <b>extendable</b> by reallocating storage.</li>
<li>Has been <b>frozen</b> and hence needs to be unfrozen before the object is destroyed, or freed (if allocated) by an 
agency other than the object.</li>
</ul>
<p>A controlled sequence that is frozen cannot be modified or extended, regardless of the state of these separate mode 
bits.</p>
<p>The object also stores pointers to two functions that control <a name="strstreambuf allocation"><b>strstreambuf allocation</b></a>. If these are null pointers, the 
object devises its own method of allocating and freeing storage for the controlled sequence.</p>
</body>
</html>
