<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Conversions from Floating-Point Types</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_conversions_from_floating.2d.point_types"></a><sup></sup>Conversions from Floating-Point Types </h1>
<p>
A <b>float</b> value converted to a <b>double</b> or <b>long double</b>, or a <b>double</b> converted to a <b>long double</b>, undergoes no change in value. A <b>double</b> value converted to a <b>float</b> value is represented exactly, if possible. Precision may be lost if the value cannot be represented exactly. If the result is out of range, the behavior is undefined. See <a href="_clang_limits_on_floating.2d.point_constants.htm">Limits on Floating-Point Constants</a> in Chapter 1 for the range of floating-point types.&nbsp; </p>
<p>
A floating value is converted to an integral value by first converting to a <b>long</b>, then from the <b>long</b> value to the specific integral value, as described below in <a href="#_clang_table_4..4">Table 4.4</a>. The decimal portion of the floating value is discarded in the conversion to a <b>long</b>. If the result is still too large to fit into a <b>long</b>, the result of the conversion is undefined. </p>
<p>
<b>Microsoft Specific —&gt;</b></p>
<p>
When converting a <b>double</b> or <b>long double</b> floating-point number to a smaller floating-point number, the value of the floating-point variable is truncated toward zero when an underflow occurs. An overflow causes a run-time error. Note that the Microsoft C compiler maps <b>long double</b> to type <b>double</b>.</p>
<p>
<b>END Microsoft Specific</b></p>
<p>
Table 4.4 summarizes conversions from floating types.&nbsp;&nbsp;&nbsp;  </p>
<p class=label>
<b><a name="_clang_table_4..4"></a>Table 4.4&nbsp;&nbsp;&nbsp;Conversions from Floating-Point Types</b></p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=22%><b>From</b></td>
<td class=label width=25%><b>To</b></td>
<td class=label width=53%><b>Method</b></td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>char</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>char</b> </td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>short</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>long</b></td>
<td width=53%>Truncate at decimal point. If result is too large to be represented as <b>long</b>, result is undefined.</td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>unsigned short</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned</b> <b>short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>unsigned long</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned</b> <b>long</b></td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>double</b></td>
<td width=53%>Change internal representation</td>
</tr>
<tr valign=top>
<td width=22%><b>float</b></td>
<td width=25%><b>long double</b></td>
<td width=53%>Change internal representation</td>
</tr>
<tr valign=top>
<td width=22%><b>double</b></td>
<td width=25%><b>char</b></td>
<td width=53%>Convert to <b>float</b>; convert <b>float</b> to <b>char</b></td>
</tr>
<tr valign=top>
<td width=22%><b>double</b></td>
<td width=25%><b>short</b></td>
<td width=53%>Convert to <b>float</b>; convert <b>float</b> to <b>short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>double</b></td>
<td width=25%><b>long</b></td>
<td width=53%>Truncate at decimal point. If result is too large to be represented as <b>long</b>, result is undefined.</td>
</tr>
<tr valign=top>
<td width=22%><b>double</b></td>
<td width=25%><b>unsigned short</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>double</b></td>
<td width=25%><b>unsigned long</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned</b> <b>long</b></td>
</tr>
<tr valign=top>
<td width=22%><b>double</b> </td>
<td width=25%><b>float</b> </td>
<td width=53%>Represent as a <b>float</b>. If <b>double</b> value cannot be represented exactly as <b>float</b>, loss of precision occurs. If value is too large to be represented as <b>float</b>, the result is undefined.</td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>char</b></td>
<td width=53%>Convert to <b>float</b>; convert <b>float</b> to <b>char</b> </td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>short</b></td>
<td width=53%>Convert to <b>float</b>; convert <b>float</b> to <b>short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>long</b></td>
<td width=53%>Truncate at decimal point. If result is too large to be represented as <b>long</b>, result is undefined.</td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>unsigned short</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned</b> <b>short</b></td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>unsigned long</b></td>
<td width=53%>Convert to <b>long</b>; convert <b>long</b> to <b>unsigned</b> <b>long</b></td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>float</b></td>
<td width=53%>Represent as a <b>float</b>. If <b>double</b> value cannot be represented exactly as <b>float</b>, loss of precision occurs. If value is too large to be represented as <b>float</b>, the result is undefined.</td>
</tr>
<tr valign=top>
<td width=22%><b>long double</b></td>
<td width=25%><b>double</b></td>
<td width=53%>The <b>long</b> <b>double</b> value is treated as <b>double</b>.</td>
</tr>
</table><br>
<p>
Conversions from <b>float</b>, <b>double</b>, or <b>long double</b> values to <b>unsigned long</b> are not accurate if the value being converted is larger than the maximum positive <b>long</b> value. </p>
</font></BODY>
</HTML>
