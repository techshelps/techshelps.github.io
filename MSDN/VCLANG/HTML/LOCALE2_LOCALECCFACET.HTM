<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>locale::facet</title></head>
<body bgcolor=white>

<h3><a name="locale::facet">locale::facet</a></h3>
<META NAME="MS-HKWD" CONTENT="facet">
<pre><code>class <b>facet</b> {
protected:
    explicit <b>facet</b>(size_t refs = 0);
    virtual <b>~facet</b>();
private:
    <b>facet</b>(const facet&amp;)          // not defined
    <b>void operator=</b>(const facet&amp;) // not defined
    };</code></pre>
<p>The member class serves as the base class for all <a href="LOCALE2_locale.htm#locale facet">locale facets</a>. Note that you can neither copy nor assign an object of 
class <code>facet</code>. You can construct and destroy objects derived from class <code>locale::facet</code>, but not objects of the base 
class proper. Typically, you construct an object <code>myfac</code> derived from <code>facet</code> when you construct a locale, as in:</p>
<pre><code>locale loc(locale::classic(), new myfac);</code></pre>
<p>In such cases, the constructor for the base class <code>facet</code> should have a zero <code>refs</code> argument. When the object is no 
longer needed, it is deleted. Thus, you supply a nonzero <code>refs</code> argument only in those rare cases where you take 
responsibility for the lifetime of the object.</p>
</body>
</html>
