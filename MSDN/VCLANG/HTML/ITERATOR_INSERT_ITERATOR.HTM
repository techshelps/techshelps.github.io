<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>insert_iterator</title></head>
<body bgcolor=white>

<h2><a name="insert_iterator">insert_iterator</a></h2>
<META NAME="MS-HKWD" CONTENT="insert_iterator">
<pre><code>template&lt;class Cont&gt;
    class <b>insert_iterator</b>
        : public iterator&lt;output_iterator_tag, void, void&gt; {
public:
    typedef Cont <a href="ITERATOR_insert_iteratorCCcontainer_type.htm#insert_iterator::container_type"><b>container_type</b></a>;
    typedef Cont::value_type <a href="ITERATOR_insert_iteratorCCvalue_type.htm#insert_iterator::value_type"><b>value_type</b></a>;
    explicit <a href="ITERATOR_insert_iteratorCCinsert_iterator.htm#insert_iterator::insert_iterator"><b>insert_iterator</b></a>(Cont&amp; x, Cont::iterator it);
    insert_iterator&amp; <a href="ITERATOR_insert_iteratorCCoperatorE.htm#insert_iterator::operator="><b>operator=</b></a>(const Cont::value_type&amp; val);
    insert_iterator&amp; <a href="ITERATOR_insert_iteratorCCoperatorX.htm#insert_iterator::operator*"><b>operator*</b></a>();
    insert_iterator&amp; <a href="ITERATOR_insert_iteratorCCoperatorPP.htm#insert_iterator::operator++"><b>operator++</b></a>();
    insert_iterator&amp; <a href="ITERATOR_insert_iteratorCCoperatorPP.htm#insert_iterator::operator++"><b>operator++</b></a>(int);
protected:
    Cont&amp; <a href="ITERATOR_insert_iterator.htm#insert_iterator::container"><b>container</b></a>;
    Cont::iterator <a href="ITERATOR_insert_iterator.htm#insert_iterator::iter"><b>iter</b></a>;
    };</code></pre>
<p>The template class describes an output iterator object. It inserts elements into a container of type <code><b>Cont</b></code>, which it 
accesses via the protected reference object it stores called <a name="insert_iterator::container"><code><b>container</b></code></a>. It also stores the protected iterator object, of 
class <code>Cont::iterator</code>, called <a name="insert_iterator::iter"><code><b>iter</b></code></a>. The container must define:</p>
<ul>
<li>The member type <code><b>iterator</b></code>, which is the type of an iterator for the container.</li>
<li>The member type <code><b>value_type</b></code>, which is the type of an element of the sequence controlled by the container.</li>
<li>The member function <code><b>insert</b></code><code>(iterator it, value_type c)</code>, which inserts a new element with value <code>c</code> 
immediately before the element designated by <code>it</code> in the controlled sequence, then returns an iterator that 
designates the inserted element.</li>
</ul>
</body>
</html>
