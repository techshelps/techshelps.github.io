<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ostreambuf_iterator</title></head>
<body bgcolor=white>

<h2><a name="ostreambuf_iterator">ostreambuf_iterator</a></h2>
<META NAME="MS-HKWD" CONTENT="ostreambuf_iterator">
<pre><code>template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <b>ostreambuf_iterator</b>
        : public iterator&lt;output_iterator_tag, void, void&gt; {
public:
    typedef E <a href="ITERATOR_ostreambuf_iteratorCCchar_type.htm#ostreambuf_iterator::char_type"><b>char_type</b></a>;
    typedef T <a href="ITERATOR_ostreambuf_iteratorCCtraits_type.htm#ostreambuf_iterator::traits_type"><b>traits_type</b></a>;
    typedef basic_streambuf&lt;E, T&gt; <a href="ITERATOR_ostreambuf_iteratorCCstreambuf_type.htm#ostreambuf_iterator::streambuf_type"><b>streambuf_type</b></a>;
    typedef basic_ostream&lt;E, T&gt; <a href="ITERATOR_ostreambuf_iteratorCCostream_type.htm#ostreambuf_iterator::ostream_type"><b>ostream_type</b></a>;
    <a href="ITERATOR_ostreambuf_iteratorCCostreambuf_iterator.htm#ostreambuf_iterator::ostreambuf_iterator"><b>ostreambuf_iterator</b></a>(streambuf_type *sb) throw();
    <a href="ITERATOR_ostreambuf_iteratorCCostreambuf_iterator.htm#ostreambuf_iterator::ostreambuf_iterator"><b>ostreambuf_iterator</b></a>(ostream_type&amp; os) throw();
    ostreambuf_iterator&amp; <a href="ITERATOR_ostreambuf_iteratorCCoperatorE.htm#ostreambuf_iterator::operator="><b>operator=</b></a>(E x);
    ostreambuf_iterator&amp; <a href="ITERATOR_ostreambuf_iteratorCCoperatorX.htm#ostreambuf_iterator::operator*"><b>operator*</b></a>();
    ostreambuf_iterator&amp; <a href="ITERATOR_ostreambuf_iteratorCCoperatorPP.htm#ostreambuf_iterator::operator++"><b>operator++</b></a>();
    T1 <a href="ITERATOR_ostreambuf_iteratorCCoperatorPP.htm#ostreambuf_iterator::operator++"><b>operator++</b></a>(int);
    bool <a href="ITERATOR_ostreambuf_iteratorCCfailed.htm#ostreambuf_iterator::failed"><b>failed</b></a>() const throw();
    };</code></pre>
<p>The template class describes an output iterator object. It inserts elements of class <code><b>E</b></code> into an <b>output stream buffer</b>, 
which it accesses via an object it stores, of type pointer to <code>basic_streambuf&lt;E, T&gt;</code>.</p>
</body>
</html>
