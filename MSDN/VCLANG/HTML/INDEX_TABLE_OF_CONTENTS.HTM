<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Table of Contents</title>
<META NAME="HREF" CONTENT="../../../_topic_not_found.htm">
</head>
<body bgcolor=white>

<h2><a name="Table of Contents">Table of Contents</a></h2>
<p><a href="ALGORITH.HTM"><code><b>&lt;algorithm&gt;</b></code></a><code><b> &#183; </b></code><a href="BITSET.HTM"><code><b>&lt;bitset&gt;</b></code></a><code><b> &#183; </b></code><a href="COMPLEX.HTM"><code><b>&lt;complex&gt;</b></code></a><code><b> &#183; </b></code><a href="DEQUE.HTM"><code><b>&lt;deque&gt;</b></code></a><code><b> &#183; </b></code><a href="EXCEPTIO.HTM"><code><b>&lt;exception&gt;</b></code></a><code><b> &#183; </b></code><a href="FSTREAM.HTM"><code><b>&lt;fstream&gt;</b></code></a><code><b> &#183; </b></code><a href="FUNCTIO2.HTM"><code><b>&lt;functional&gt;</b></code></a><code><b> &#183; 
</b></code><a href="IOMANIP.HTM"><code><b>&lt;iomanip&gt;</b></code></a><code><b> &#183; </b></code><a href="IOS.HTM"><code><b>&lt;ios&gt;</b></code></a><code><b> &#183; </b></code><a href="IOSFWD.HTM"><code><b>&lt;iosfwd&gt;</b></code></a><code><b> &#183; </b></code><a href="IOSTREAM.HTM"><code><b>&lt;iostream&gt;</b></code></a><code><b> &#183; </b></code><a href="ISTREAM.HTM"><code><b>&lt;istream&gt;</b></code></a><code><b> &#183; </b></code><a href="ITERATOR.HTM"><code><b>&lt;iterator&gt;</b></code></a><code><b> &#183; </b></code><a href="LIMITS2.HTM"><code><b>&lt;limits&gt;</b></code></a><code><b> &#183; </b></code><a href="LIST.HTM"><code><b>&lt;list&gt;</b></code></a><code><b> &#183; 
</b></code><a href="LOCALE2.HTM"><code><b>&lt;locale&gt;</b></code></a><code><b> &#183; </b></code><a href="MAP.HTM"><code><b>&lt;map&gt;</b></code></a><code><b> &#183; </b></code><a href="MEMORY.HTM"><code><b>&lt;memory&gt;</b></code></a><code><b> &#183; </b></code><a href="NUMERIC.HTM"><code><b>&lt;numeric&gt;</b></code></a><code><b> &#183; </b></code><a href="OSTREAM.HTM"><code><b>&lt;ostream&gt;</b></code></a><code><b> &#183; </b></code><a href="QUEUE.HTM"><code><b>&lt;queue&gt;</b></code></a><code><b> &#183; </b></code><a href="SET.HTM"><code><b>&lt;set&gt;</b></code></a><code><b> &#183; </b></code><a href="SSTREAM.HTM"><code><b>&lt;sstream&gt;</b></code></a><code><b> 
&#183; </b></code><a href="STACK.HTM"><code><b>&lt;stack&gt;</b></code></a><code><b> &#183; </b></code><a href="STDEXCEP.HTM"><code><b>&lt;stdexcept&gt;</b></code></a><code><b> &#183; </b></code><a href="STREAMBU.HTM"><code><b>&lt;streambuf&gt;</b></code></a><code><b> &#183; </b></code><a href="STRING2.HTM"><code><b>&lt;string&gt;</b></code></a><code><b> &#183; </b></code><a href="STRSTREA.HTM"><code><b>&lt;strstream&gt;</b></code></a><code><b> &#183; </b></code><a href="UTILITY.HTM"><code><b>&lt;utility&gt;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY.HTM"><code><b>&lt;valarray&gt;</b></code></a><code><b> &#183; 
</b></code><a href="VECTOR.HTM"><code><b>&lt;vector&gt;</b></code></a><code><b> </b></code></p>
<p><a href="CASSERT.HTM"><code><b>&lt;cassert&gt;</b></code></a><code><b> &#183; </b></code><a href="CCTYPE.HTM"><code><b>&lt;cctype&gt;</b></code></a><code><b> &#183; </b></code><a href="CERRNO.HTM"><code><b>&lt;cerrno&gt;</b></code></a><code><b>&#183; </b></code><a href="CFLOAT.HTM"><code><b>&lt;cfloat&gt;</b></code></a> <code><b> &#183; </b></code><a href="CISO646.HTM"><code><b>&lt;ciso646&gt;</b></code></a><code><b> &#183; </b></code><a href="CLIMITS.HTM"><code><b>&lt;climits&gt;</b></code></a><code><b> &#183; </b></code><a href="CLOCALE.HTM"><code><b>&lt;clocale&gt;</b></code></a><code><b> &#183; </b></code><a href="CMATH.HTM"><code><b>&lt;cmath&gt;</b></code></a><code><b> &#183; </b></code><a href="CSETJMP.HTM"><code><b>&lt;csetjmp&gt;</b></code></a><code><b> 
&#183; </b></code><a href="CSIGNAL.HTM"><code><b>&lt;csignal&gt;</b></code></a><code><b> &#183; </b></code><a href="CSTDARG.HTM"><code><b>&lt;cstdarg&gt;</b></code></a><code><b> &#183; </b></code><a href="CSTDDEF.HTM"><code><b>&lt;cstddef&gt;</b></code></a><code><b> &#183; </b></code><a href="CSTDIO.HTM"><code><b>&lt;cstdio&gt;</b></code></a><code><b> &#183; </b></code><a href="CSTDLIB.HTM"><code><b>&lt;cstdlib&gt;</b></code></a><code><b> &#183; </b></code><a href="CSTRING.HTM"><code><b>&lt;cstring&gt;</b></code></a><code><b> &#183; </b></code><a href="CTIME.HTM"><code><b>&lt;ctime&gt;</b></code></a><code><b> &#183; 
</b></code><a href="CWCHAR.HTM"><code><b>&lt;cwchar&gt;</b></code></a></p>
<p><code><b> &#183; </b></code><a href="ISO646.HTM"><code><b>&lt;iso646.h&gt;</b></code></a> <code><b> &#183; </b></code><a href="WCHAR.HTM"><code><b>&lt;wchar.h&gt;</b></code></a> </p>

<p><a href="LIB_CPP.HTM"><code><b>C++ Library Overview</b></code></a><code><b> &#183; &#183; </b></code><a href="LIB_FILE.HTM"><code><b>Files and Streams</b></code></a><code><b> &#183; </b></code><a href="LIB_STL.HTM"><code><b>STL Conventions</b></code></a><code><b> &#183; </b></code><a href="LIB_CONT.HTM"><code><b>Containers</b></code></a><code><b> </b></code></p>
<p>Of the Standard C++ library headers listed below, 13 constitute the <a name="Standard Template Library"><b>Standard Template Library</b></a>, or <a name="STL"><b>STL</b></a>. These 
are indicated below with the notation (STL):</p>
<p><a href="ALGORITH.HTM"><code><b>&lt;algorithm&gt;</b></code></a> -- (STL) for defining numerous templates that implement useful algorithms<br>
<a href="BITSET.HTM"><code><b>&lt;bitset&gt;</b></code></a> -- for defining a template class that administers sets of bits<br>
<a href="CASSERT.HTM"><code><b>&lt;cassert&gt;</b></code></a> -- for enforcing assertions when functions execute<br>
<a href="CCTYPE.HTM"><code><b>&lt;cctype&gt;</b></code></a> -- for classifying characters<br>
<a href="CERRNO.HTM"><code><b>&lt;cerrno&gt;</b></code></a> -- for testing error codes reported by library functions<br>
<a href="CFLOAT.HTM"><code><b>&lt;cfloat&gt;</b></code></a> -- for testing floating-point type properties<br>
<a href="CISO646.HTM"><code><b>&lt;ciso646&gt;</b></code></a> -- for programming in ISO 646 variant character sets<br>
<a href="CLIMITS.HTM"><code><b>&lt;climits&gt;</b></code></a> -- for testing integer type properties<br>
<a href="CLOCALE.HTM"><code><b>&lt;clocale&gt;</b></code></a> -- for adapting to different cultural conventions<br>
<a href="CMATH.HTM"><code><b>&lt;cmath&gt;</b></code></a> -- for computing common mathematical functions<br>
<a href="COMPLEX.HTM"><code><b>&lt;complex&gt;</b></code></a> -- for defining a template class that supports complex arithmetic<br>
<a href="CSETJMP.HTM"><code><b>&lt;csetjmp&gt;</b></code></a> -- for executing nonlocal <i>goto</i> statements<br>
<a href="CSIGNAL.HTM"><code><b>&lt;csignal&gt;</b></code></a> -- for controlling various exceptional conditions<br>
<a href="CSTDARG.HTM"><code><b>&lt;cstdarg&gt;</b></code></a> -- for accessing a varying number of arguments<br>
<a href="CSTDDEF.HTM"><code><b>&lt;cstddef&gt;</b></code></a> -- for defining several useful types and macros<br>
<a href="CSTDIO.HTM"><code><b>&lt;cstdio&gt;</b></code></a> -- for performing input and output<br>
<a href="CSTDLIB.HTM"><code><b>&lt;cstdlib&gt;</b></code></a> -- for performing a variety of operations<br>
<a href="CSTRING.HTM"><code><b>&lt;cstring&gt;</b></code></a> -- for manipulating several kinds of strings<br>
<a href="CTIME.HTM"><code><b>&lt;ctime&gt;</b></code></a> -- for converting between various time and date formats<br>
<a href="CWCHAR.HTM"><code><b>&lt;cwchar&gt;</b></code></a> -- for manipulating <a href="LIB_FILE_Byte_and_Wide_Streams.htm#wide stream">wide streams</a> and several kinds of strings<br>
<a href="CWCTYPE.HTM"><code><b>&lt;cwctype&gt;</b></code></a> -- for classifying wide characters<br>
<a href="DEQUE.HTM"><code><b>&lt;deque&gt;</b></code></a> -- (STL) for defining a template class that implements a deque container<br>
<a href="EXCEPTIO.HTM"><code><b>&lt;exception&gt;</b></code></a> -- for defining several functions that control exception handling<br>
<a href="FSTREAM.HTM"><code><b>&lt;fstream&gt;</b></code></a> -- for defining several iostreams template classes that manipulate external files<br>
<a href="FUNCTIO2.HTM"><code><b>&lt;functional&gt;</b></code></a> -- (STL) for defining several templates that help construct predicates for the templates defined in 
<a href="ALGORITH.HTM"><code>&lt;algorithm&gt;</code></a> and <a href="NUMERIC.HTM"><code>&lt;numeric&gt;</code></a><br>
<a href="IOMANIP.HTM"><code><b>&lt;iomanip&gt;</b></code></a> -- for declaring several iostreams manipulators that take an argument<br>
<a href="IOS.HTM"><code><b>&lt;ios&gt;</b></code></a> -- for defining the template class that serves as the base for many iostreams classes<br>
<a href="IOSFWD.HTM"><code><b>&lt;iosfwd&gt;</b></code></a> -- for declaring several iostreams template classes before they are necessarily defined<br>
<a href="IOSTREAM.HTM"><code><b>&lt;iostream&gt;</b></code></a> -- for declaring the iostreams objects that manipulate the standard streams<br>
<a href="ISTREAM.HTM"><code><b>&lt;istream&gt;</b></code></a> -- for defining the template class that performs extractions<br>
<a href="ITERATOR.HTM"><code><b>&lt;iterator&gt;</b></code></a> -- (STL) for defining several templates that help define and manipulate iterators<br>
<a href="LIMITS2.HTM"><code><b>&lt;limits&gt;</b></code></a> -- for testing numeric type properties<br>
<a href="LIST.HTM"><code><b>&lt;list&gt;</b></code></a> -- (STL) for defining a template class that implements a list container<br>
<a href="LOCALE2.HTM"><code><b>&lt;locale&gt;</b></code></a> -- for defining several classes and templates that control locale-specific behavior, as in the iostreams classes<br>
<a href="MAP.HTM"><code><b>&lt;map&gt;</b></code></a> -- (STL) for defining template classes that implement associative containers<br>
<a href="MEMORY.HTM"><code><b>&lt;memory&gt;</b></code></a> -- (STL) for defining several templates that allocate and free storage for various container classes<br>
<a href="NUMERIC.HTM"><code><b>&lt;numeric&gt;</b></code></a> -- (STL) for defining several templates that implement useful numeric functions<br>
<a href="OSTREAM.HTM"><code><b>&lt;ostream&gt;</b></code></a> -- for defining the template class that performs insertions<br>
<a href="QUEUE.HTM"><code><b>&lt;queue&gt;</b></code></a> -- (STL) for defining a template class that implements a queue container<br>
<a href="SET.HTM"><code><b>&lt;set&gt;</b></code></a> -- (STL) for defining template classes that implement associative containers with unique elements<br>
<a href="SSTREAM.HTM"><code><b>&lt;sstream&gt;</b></code></a> -- for defining several iostreams template classes that manipulate string containers<br>
<a href="STACK.HTM"><code><b>&lt;stack&gt;</b></code></a> -- (STL) for defining a template class that implements a stack container<br>
<a href="STDEXCEP.HTM"><code><b>&lt;stdexcept&gt;</b></code></a> -- for defining several classes useful for reporting exceptions<br>
<a href="STREAMBU.HTM"><code><b>&lt;streambuf&gt;</b></code></a> -- for defining template classes that buffer iostreams operations<br>
<a href="STRING2.HTM"><code><b>&lt;string&gt;</b></code></a> -- for defining a template class that implements a string container<br>
<a href="STRSTREA.HTM"><code><b>&lt;strstream&gt;</b></code></a> -- for defining several iostreams classes that manipulate in-memory character sequences<br>
<a href="UTILITY.HTM"><code><b>&lt;utility&gt;</b></code></a> -- (STL) for defining several templates of general utility<br>
<a href="VALARRAY.HTM"><code><b>&lt;valarray&gt;</b></code></a> -- for defining several classes and template classes that support value-oriented arrays<br>
<a href="VECTOR.HTM"><code><b>&lt;vector&gt;</b></code></a> -- (STL) for defining a template class that implements a vector container</p>

<p>The Standard C++ library also includes the 18 headers from the <a name="Standard C Library"><b>Standard C library</b></a>, sometimes with small alterations. Most of the functions in the header files below are documented in the <A class="alink" href="javascript:document.x.iv.Alink('_crt_Run.2d.Time_Routines_by_Category','default.htm')">Run-Time Library Reference</a>, so they are not discussed in this Standard C++ Library reference. </p>
<p><code><b>&lt;assert.h&gt;</b></code> -- for enforcing assertions when functions execute<br>
<code><b>&lt;ctype.h&gt;</b></code> -- for classifying characters<br>
<code><b>&lt;errno.h&gt;</b></code> -- for testing error codes reported by library functions<br>
<code><b>&lt;float.h&gt;</b></code> -- for testing floating-point type properties<br>
<a href="ISO646.HTM"><code><b>&lt;iso646.h&gt;</b></code></a> -- for programming in ISO 646 variant character sets<br>
<code><b>&lt;limits.h&gt;</b></code> -- for testing integer type properties<br>
<code><b>&lt;locale.h&gt;</b></code> -- for adapting to different cultural conventions<br>
<code><b>&lt;math.h&gt;</b></code> -- for computing common mathematical functions<br>
<code><b>&lt;setjmp.h&gt;</b></code> -- for executing nonlocal <i>goto</i> statements<br>
<code><b>&lt;signal.h&gt;</b></code> -- for controlling various exceptional conditions<br>
<code><b>&lt;stdarg.h&gt;</b></code> -- for accessing a varying number of arguments<br>
<code><b>&lt;stddef.h&gt;</b></code> -- for defining several useful types and macros<br>
<code><b>&lt;stdio.h&gt;</b></code> -- for performing input and output<br>
<code><b>&lt;stdlib.h&gt;</b></code> -- for performing a variety of operations<br>
<code><b>&lt;string.h&gt;</b></code> -- for manipulating several kinds of strings<br>
<code><b>&lt;time.h&gt;</b></code> -- for converting between various time and date formats<br>
<a href="WCHAR.HTM"><code><b>&lt;wchar.h&gt;</b></code></a> -- for manipulating <a href="LIB_FILE_Byte_and_Wide_Streams.htm#wide stream">wide streams</a> and several kinds of strings<br>
<code><b>&lt;wctype.h&gt;</b></code> -- for classifying wide characters</p>

<p>Other information on the Standard C++ library includes:</p>
<p><a href="LIB_CPP.HTM"><b>C++ Library Overview</b></a> -- how to use the Standard C++ library <br>
<a href="LIB_FILE.HTM"><b>Files and Streams</b></a> -- how to read and write data between the program and <a href="LIB_FILE.htm#files">files</a> <br>
<a href="LIB_STL.HTM"><b>STL Conventions</b></a> -- how to read the descriptions of <a href="INDEX_Table_of_Contents.htm#STL">STL</a> template classes and functions <br>
<a href="LIB_CONT.HTM"><b>Containers</b></a> -- how to use an arbitrary <a href="INDEX_Table_of_Contents.htm#STL">STL</a> container template class </p>
<p>A few special conventions are introduced into this document specifically for this particular <a name="implementation"><b>implementation</b></a> of the 
Standard C++ library. Because the draft C++ Standard is still changing, not all implementations support all the features 
described here. Hence, this implementation introduces macros, or alternative declarations, where necessary to provide 
reasonable substitutes for the capabilities required by the current draft C++ Standard.</p>
</body>

</html>
