<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialization of Automatic Objects</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_initialization_of_automatic_objects"></a><sup></sup>Initialization of Automatic Objects</h1>
<p>
Each time declaration statements for objects of storage class <b>auto</b> or <b>register</b> are executed, initialization takes place. The following example, from <a href="_pluslang_the_c.2b2b_.continue_statement.htm">The continue Statement</a>, shows initialization of the automatic object <code>ch</code> inside the <code>do</code> loop.</p>
<pre><code>#include &lt;conio.h&gt;

// Get a character that is a member of the zero-terminated
//&nbsp; string, szLegalString. Return the index of the character
//&nbsp; entered.
int GetLegalChar( char *szLegalString )
{
 &nbsp;&nbsp; char *pch;

 &nbsp;&nbsp; do
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // This declaration statement is executed once for each
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; execution of the loop.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char ch = _getch();

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( (pch = strchr( szLegalString, ch )) == NULL )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; continue;

 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // A character that was in the string szLegalString
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; was entered. Return its index.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (pch - szLegalString);
 &nbsp;&nbsp; } while( 1 );
}
</code></pre>
<p>
For each iteration of the loop (each time the declaration is encountered), the macro _<code>getch</code> is evaluated and <code>ch</code> is initialized with the results. When control is transferred outside the block using the <code>return</code> statement, <code>ch</code> is destroyed (in this case, the storage is deallocated).</p>
<p>
See <a href="_pluslang_c.2b2b_.storage_classes.htm">Storage Classes</a> in Chapter 2 for another example of initialization.</p>
</font></BODY>
</HTML>
