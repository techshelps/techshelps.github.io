<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>lexicographical_compare</title></head>
<body bgcolor=white>

<h2><a name="lexicographical_compare">lexicographical_compare</a></h2>
<META NAME="MS-HKWD" CONTENT="lexicographical_compare">
<pre><code>template&lt;class InIt1, class InIt2&gt;
    bool <b>lexicographical_compare</b>(InIt1 first1, InIt1 last1,
        InIt2 first2, InIt2 last2);
template&lt;class InIt1, class InIt2, class Pred&gt;
    bool <b>lexicographical_compare</b>(InIt1 first1, InIt1 last1,
        InIt2 first2, InIt2 last2, Pred pr);</code></pre>
<p>The first template function determines <code>K</code>, the number of elements to compare as the smaller of <code>last1 - first1</code> and 
<code>last2 - first2</code>. It then determines the lowest value of <code>N</code> in the range <code>[0, K)</code> for which <code>*(first1 + N)</code> and 
<code>*(first2 + N)</code> do not have <a href="lib_stl_Algorithm_Conventions.htm#equivalent ordering">equivalent ordering</a>. If no such value exists, the function returns true only if <code>K &lt; (last2 
- first2)</code>. Otherwise, it returns true only if <code>*(first1 + N) &lt; *(first2 + N)</code>. Thus, the function returns true 
only if the sequence designated by iterators in the range <code>[first1, last1)</code> is lexicographically less than the other 
sequence.</p>
<p>The function evaluates the ordering predicate <code>X &lt; Y</code> at most <code>2 * K</code> times.</p>
<p>The second template function behaves the same, except that it replaces <code>operator&lt;(X, Y)</code> with <code>pr(X, Y)</code>.</p>

</body>
</html>
