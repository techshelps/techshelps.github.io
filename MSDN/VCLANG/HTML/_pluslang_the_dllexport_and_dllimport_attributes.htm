<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The dllexport and dllimport Attributes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_the_dllexport_and_dllimport_attributes"></a><sup></sup>The dllexport and dllimport Attributes</h1>
<p>
The <b>dllexport</b> and <b>dllimport</b> storage-class modifiers export and import functions, data, and objects to and from a DLL. These modifiers, or attributes, explicitly define the DLL’s interface to its client, which can be the executable file or another DLL. Declaring functions as <b>dllexport</b> eliminates the need for a module-definition (.DEF) file, at least with respect to the specification of exported functions. Note that <b>dllexport</b> replaces the <b>__export</b> keyword.</p>
<p>
The declaration of <b>dllexport</b> and <b>dllimport</b> uses extended attribute syntax:</p>
<pre><code>__declspec( dllexport ) void func();
</code></pre>
<p>
Alternatively, to make your code more readable, you can use macro definitions:</p>
<pre><code>#define DllImport   __declspec( dllimport )
#define DllExport   __declspec( dllexport )

DllExport void func();
DllExport int i = 10;
DllImport int j;
DllExport int n;
</code></pre>
</font></BODY>
</HTML>
