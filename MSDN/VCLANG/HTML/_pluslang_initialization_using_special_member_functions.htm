<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initialization Using Special Member Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_initialization_using_special_member_functions"></a><sup></sup>Initialization Using Special Member Functions</h1>
<p>
This section describes initialization using special member functions. It expands on the following discussions of initialization:
<ul type=disc>
<li>
<a href="_pluslang_initializing_aggregates.htm">Initializing Aggregates</a> in Chapter 7, which describes how to initialize arrays of nonclass types and objects of simple class types. These simple class types cannot have private or protected members, and they cannot have base classes.<br><br></li>
<li>
<a href="_pluslang_constructors.htm">Constructors</a>, which explains how to initialize class-type objects using special constructor functions.</li>
</ul>
<p>
The default method of initialization is to perform a bit-for-bit copy from the initializer into the object to be initialized. This technique is applicable only to:
<ul type=disc>
<li>
Objects of built-in types. For example:<pre><code>int i = 100;
</code></pre>
</li>
<li>
Pointers. For example:<pre><code>int i;
int *pi = &amp;i;
</code></pre>
</li>
<li>
References. For example:<pre><code>String sFileName( "FILE.DAT" );
String &amp;rs = sFileName;
</code></pre>
</li>
<li>
Objects of class type, where the class has no private or protected members, no virtual functions, and no base classes. For example:<pre><code>struct Point
{
 &nbsp;&nbsp; int x, y;
};

Point pt = { 10, 20 };&nbsp;&nbsp; // Static storage class only
</code></pre>
</li>
</ul>
<p>
Classes can specify more refined initialization by defining constructor functions. (For more information about declaring such functions, see <a href="_pluslang_constructors.htm">Constructors</a>.) If an object is of a class type that has a constructor, the object must be initialized, or there must be a default constructor. Objects that are not specifically initialized invoke the class’s default constructor.</p>
</font></BODY>
</HTML>
