<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Exception Handling</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_exception_handling"></a><sup></sup>Exception Handling</h1>
<p>
Microsoft C++ supports two kinds of exception handling, <a href="_pluslang_the_try.2c_.catch.2c_.and_throw_statements.htm">C++ exception handling</a> (<b>try</b>, <b>throw</b>, <b>catch</b>) and <a href="_pluslang_structured_exception_handling.htm">structured exception handling</a> (<b>__try</b>/<b>__except</b>, <b>__try/__finally</b>). If possible, you should use C++ exception handling rather than structured exception handling. </p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;In this section, the terms “structured exception handling” and “structured exception” (or “C exception”) refer exclusively to the structured exception handling mechanism provided by Win32<sup>®</sup>. All other references to exception handling (or “C++ exception”) refer to the C++ exception handling mechanism.</p>
<p>
Although structured exception handling works with C and C++ source files, it is not specifically designed for C++. For C++ programs, you should use C++ exception handling.</p>
</font></BODY>
</HTML>
