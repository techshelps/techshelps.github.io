<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Grammar of C++ Declarations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_grammar_of_c.2b2b_.declarations"></a><sup></sup>Grammar of C++ Declarations</h1>
<p class=dt>
<i>declaration</i>: </p>
<p class=indent>
<i>decl-specifiers</i><sub>opt </sub><i>declarator-list</i><sub>opt</sub> <b>;</b><br>
<i>asm-declaration</i> <br>
<i>function-definition</i> <br>
<i>linkage-specification</i><br>
<i>template-declaration</i>:</p>
<p class=dt>
<i>asm-declaration</i>:</p>
<p class=indent>
<b>__asm(</b> <i>string-literal</i> <b>);</b></p>
<p class=dt>
<i>decl-specifiers</i>: </p>
<p class=indent>
<i>decl-specifiers</i><sub>opt</sub>  <i>decl-specifier</i></p>
<p class=dt>
<i>decl-specifier</i>:</p>
<p class=indent>
<i>storage-class-specifier</i> <br>
<i>type-specifier</i> <br>
<i>fct-specifier</i> <br>
<b>friend</b> <br>
<b>typedef</b><br>
<b>__declspec</b> <b>(</b> <i>extended-decl-modifier-seq</i> <b>)</b></p>
<p class=dt>
<i>storage-class-specifier</i>: </p>
<p class=indent>
<b>auto</b> <br>
<b>register</b> <br>
<b>static</b> <br>
<b>extern</b></p>
<p class=dt>
<i>fct-specifier</i>: </p>
<p class=indent>
<b>inline</b> <br>
<b>virtual</b></p>
<p class=dt>
<i>type-specifier</i>: </p>
<p class=indent>
<i>simple-type-name</i> <br>
<i>class-specifier</i> <br>
<i>enum-specifier</i> <br>
<i>elaborated-type-specifier</i> <br>
<b>const</b> <br>
<b>volatile</b></p>
<p class=dt>
<i>extended-decl-modifier-seq</i>:</p>
<p class=indent>
<i>extended-decl-modifier</i><sub>opt</sub><br>
<i>extended-decl-modifier extended-decl-modifier-seq</i></p>
<p class=dt>
<i>extended-decl-modifier</i>:</p>
<p class=indent>
<b>thread</b><br>
<b>naked</b><br>
<b>dllimport</b><br>
<b>dllexport</b></p>
<p class=dt>
<i>simple-type-name</i>: </p>
<p class=indent>
<i>complete-class-name</i> <br>
<i>qualified-type-name</i> <br>
<b>char</b> <br>
<b>short</b> <br>
<b>int</b> <br>
<b>long</b> <br>
<b>signed</b> <br>
<b>unsigned</b> <br>
<b>float</b> <br>
<b>double</b> <br>
<b>void</b></p>
<p class=dt>
<i>elaborated-type-specifier</i>:</p>
<p class=indent>
<i>class-key&nbsp; identifier</i> <br>
<i>class-key&nbsp; class-name</i><br>
<i>enum-name</i></p>
<p class=dt>
<i>class-key</i>: </p>
<p class=indent>
<b>class</b> <br>
<b>struct</b> <br>
<b>union</b></p>
<p class=dt>
<i>qualified-type-name</i>: </p>
<p class=indent>
<i>typedef-name</i> <br>
<i>class-name</i>  <b>::</b>  <i>qualified-type-name</i></p>
<p class=dt>
<i>complete-class-name</i>: </p>
<p class=indent>
<i>qualified-class-name</i>  <br>
<b>::</b>  <i>qualified-class-name</i></p>
<p class=dt>
<i>qualified-class-name</i>: </p>
<p class=indent>
<i>class-name</i> <br>
<i>class-name</i>  <b>::</b>  <i>qualified-class-name</i></p>
<p class=dt>
<i>enum-specifier</i>: </p>
<p class=indent>
<b>enum</b> <i>identifier</i><sub>opt</sub>  <b>{</b> <i> enum-list</i><sub>opt</sub> <i> </i><b>}</b></p>
<p class=dt>
<i>enum-list</i>: </p>
<p class=indent>
<i>enumerator</i> <br>
<i>enum-list</i>  <b>,</b>  <i>enumerator</i></p>
<p class=dt>
<i>enumerator</i>: </p>
<p class=indent>
<i>identifier</i> <br>
<i>identifier</i>  <b>=</b> <i> constant-expression</i></p>
<p class=dt>
<i>constant-expression</i>: </p>
<p class=indent>
<i>conditional-expression</i></p>
<p class=dt>
<i>linkage-specification</i>: </p>
<p class=indent>
<b>extern</b> <i>string-literal</i>  <b>{</b>  <i>declaration-list</i><sub>opt</sub>  <b>}</b> <br>
<b>extern</b> <i>string-literal declaration</i></p>
<p class=dt>
<i>declaration-list</i>: </p>
<p class=indent>
<i>declaration<br>
declaration-list&nbsp; declaration</i></p>
<p class=dt>
<i>template-declaration</i>:</p>
<p class=indent>
<b>template</b> <b>&lt;</b> <i>template-argument-list</i>  <b>&gt;</b> <i>declaration</i></p>
<p class=dt>
<i>template-argument-list</i>:</p>
<p class=indent>
<i>template-argument</i><br>
<i>template-argument-list</i> <b>,</b> <i>template-argument</i></p>
<p class=dt>
<i>template-argument</i>:</p>
<p class=indent>
<i>type-argument</i><br>
<i>argument-declaration</i></p>
<p class=dt>
<i>type-argument</i>:</p>
<p class=indent>
<b>class</b> <i>identifier</i></p>
<p class=dt>
<i>template-class-name</i>:</p>
<p class=indent>
<i>template-name</i> <b>&lt;</b> <i>template-arg-list</i> <b>&gt;</b></p>
<p class=dt>
<i>template-arg-list</i>:</p>
<p class=indent>
<i>template-arg</i><br>
<i>template-arg-list</i> <b>,</b> <i>template-arg</i></p>
<p class=dt>
<i>template-arg</i>:</p>
<p class=indent>
<i>expression</i><br>
<i>type-name</i></p>
<p class=dt>
<i>original-namespace-name</i> :</p>
<p class=indent>
<i>identifier</i></p>
<p class=dt>
<i>namespace-definition</i> :</p>
<p class=indent>
<i>original-namespace-definition</i><br>
<i>extension-namespace-definition</i><br>
<i>unnamed-namespace-definition</i></p>
<p class=dt>
<i>original-namespace-definition</i> :</p>
<p class=indent>
<b>namespace</b> <i>identifier</i> <b>{</b> <i>namespace-body</i> <b>}</b></p>
<p class=dt>
<i>extension-namespace-definition</i> :</p>
<p class=indent>
<b>namespace</b> <i>original-namespace-name</i> <b>{</b> <i>namespace-body</i> <b>}</b></p>
<p class=dt>
<i>unnamed-namespace-definition</i> :</p>
<p class=indent>
<b>namespace</b> <b>{</b> <i>namespace-body</i> <b>}</b></p>
<p class=dt>
<i>namespace-body</i> :</p>
<p class=indent>
<i>declaration-seq</i><sub>opt</sub></p>
<p class=dt>
<i>id-expression</i> :</p>
<p class=indent>
<i>unqualified-id</i><br>
<i>qualified-id</i></p>
<p class=dt>
<i>nested-name-specifier</i> :</p>
<p class=indent>
<i>class-or-namespace-name</i> <b>::</b> <i>nested-name-specifier</i><sub>opt </sub> </p>
<p class=dt>
<i>class-or-namespace-name</i> :</p>
<p class=indent>
<i>class-name</i><br>
<i>namespace-name</i></p>
<p class=dt>
<i>namespace-name</i> :</p>
<p class=indent>
<i>original-namespace-name</i><br>
<i>namespace-alias</i></p>
<p class=dt>
<i>namespace-alias</i> :</p>
<p class=indent>
<i>identifier</i></p>
<p class=dt>
<i>namespace-alias-definition</i> :</p>
<p class=indent>
<b>namespace</b> <i>identifier</i> <i>=</i> <i>qualified-namespace-specifier;</i></p>
<p class=dt>
<i>qualified-namespace-specifier</i> :</p>
<p class=indent>
<b>::</b><sub>opt </sub> <i>nested-name-specifier</i>opt  <i>class-or-namespace-name</i></p>
<p class=dt>
<i>using-declaration</i> :</p>
<p class=indent>
<b>using</b> <b>::</b><sub>opt </sub> <i>nested-name-specifier</i> <i>unqualified-id</i><br>
<b>using</b> <b>::</b> <i>unqualified-id</i></p>
<p class=dt>
<i>using-directive</i> :</p>
<p class=indent>
<b>using</b> <b>namespace</b> <b>::</b><sub>opt </sub> <i>nested-name-specifier</i><sub>opt </sub> <i>namespace-name</i></p>
</font></BODY>
</HTML>
