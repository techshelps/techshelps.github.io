<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Ambiguities and Virtual Base Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_ambiguities_and_virtual_base_classes"></a><sup></sup>Ambiguities and Virtual Base Classes</h1>
<p>
If virtual base classes are used, functions, objects, types, and enumerators can be reached through multiple-inheritance paths. Because there is only one instance of the base class, there is no ambiguity when accessing these names. </p>
<p>
Figure 9.10 shows how objects are composed using virtual and nonvirtual inheritance.</p>
<p class=label>
<b>Figure 9.10&nbsp;&nbsp;&nbsp;Virtual vs. Nonvirtual Derivation</b></p>
<p>
<img src="l09vr10.gif" border=0></p>
<p>
In Figure 9.10, accessing any member of class <code>A</code> through nonvirtual base classes causes an ambiguity; the compiler has no information that explains whether to use the subobject associated with <code>B</code> or the subobject associated with <code>C</code>. However, when <code>A</code> is specified as a virtual base class, there is no question which subobject is being accessed.</p>
</font></BODY>
</HTML>
