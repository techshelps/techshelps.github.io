<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>operator&gt;&gt;</title></head>
<body bgcolor=white>

<h2><a name="operator&gt;&gt;">operator&gt;&gt;</a></h2>
<META NAME="MS-HKWD" CONTENT="operator>>">
<pre><code>template&lt;class E, class T&gt;
    basic_istream&lt;E, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;E, T&gt; is, E *s);
template&lt;class E, class T&gt;
    basic_istream&lt;E, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;E, T&gt; is, E&amp; c);
template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, signed char *s);
template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, signed char&amp; c);
template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, unsigned char *s);
template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, unsigned char&amp; c);</code></pre>
<p>The template function:</p>
<pre><code>template&lt;class E, class T&gt;
    basic_istream&lt;E, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;E, T&gt;&amp; is, E *s);</code></pre>
<p>extracts up to <code>n - 1</code> elements and stores them in the array beginning at <code>s</code>. If <code>is.</code><a href="IOS_ios_baseCCwidth.htm#ios_base::width"><code>width</code></a><code>()</code> is greater than zero, <code>n</code> is 
<code>is.width()</code>; otherwise it is the largest array of <code>E</code> that can be declared. The function always stores <code>E(0)</code> after any 
extracted elements it stores. Extraction stops early on end-of-file or on any element (which is not extracted) that would 
be discarded by <a href="ISTREAM_ws.htm#ws"><code>ws</code></a>. If the function extracts no elements, it calls <code>is.</code><a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>. In any case, it calls 
<code>is.width(0)</code> and returns <code>is</code>.</p>
<p>The template function:</p>
<pre><code>template&lt;class E, class T&gt;
    basic_istream&lt;E, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;E, T&gt;&amp; is, char&amp; c);</code></pre>
<p>extracts an element, if possible, and stores it in <code>c</code>. Otherwise, it calls <code>is.</code><a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code>setstate</code></a><code>(failbit)</code>. In any case, it returns 
<code>is</code>.</p>
<p>The template function:</p>
<pre><code>template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, signed char *s);</code></pre>
<p>returns <code>is &gt;&gt; (char *)s</code>.</p>
<p>The template function:</p>
<pre><code>template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, signed char&amp; c);</code></pre>
<p>returns <code>is &gt;&gt; (char&amp;)c</code>.</p>
<p>The template function:</p>
<pre><code>template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, unsigned char *s);</code></pre>
<p>returns <code>is &gt;&gt; (char *)s</code>.</p>
<p>The template function:</p>
<pre><code>template&lt;class T&gt;
    basic_istream&lt;char, T&gt;&amp; <b>operator&gt;&gt;</b>(basic_istream&lt;char, T&gt; is, unsigned char&amp; c);</code></pre>
<p>returns <code>is &gt;&gt; (char&amp;)c</code>.</p>
</body>
</html>
