<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>gslice_array</title></head>
<body bgcolor=white>

<h2><a name="gslice_array">gslice_array</a></h2>
<META NAME="MS-HKWD" CONTENT="gslice_array">
<pre><code>template&lt;class T&gt;
    class <b>gslice_array</b> {
public:
    typedef T <a name="gslice_array::value_type"><b>value_type</b></a>;
    void <a name="gslice_array::operator="><b>operator=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="#gslice_array::operator="><b>operator=</b></a>(const T&amp; x);
    void <a name="gslice_array::operator*="><b>operator*=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator/="><b>operator/=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator%="><b>operator%=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator+="><b>operator+=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator-="><b>operator-=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator^="><b>operator^=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator&amp;="><b>operator&amp;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator|="><b>operator|=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator&lt;&lt;="><b>operator&lt;&lt;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::operator&gt;&gt;="><b>operator&gt;&gt;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="gslice_array::fill"><b>fill</b></a>();
    };</code></pre>
<p>The class describes an object that stores a reference to an object <code>x</code> of class <a href="VALARRAY_valarray.htm#valarray"><code>valarray</code></a><code>&lt;T&gt;</code>, along with an object <code>gs</code> of 
class <a href="VALARRAY_gslice.htm#gslice"><code>gslice</code></a>, which describes the sequence of elements to select from the <code>valarray&lt;T&gt;</code> object.</p>
<p>You construct a <code>gslice_array&lt;T&gt;</code> object only by writing an expression of the form <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><code>x[gs]</code></a>. The member functions of 
class <code>gslice_array</code> then behave like the corresponding function signatures defined for <code>valarray&lt;T&gt;</code>, except that 
only the sequence of selected elements is affected.</p>
<p>The sequence is determined as follows. For a length vector <code>gs.</code><a href="VALARRAY_gsliceCCsize.htm#gslice::size"><code>size</code></a><code>()</code> of length <code>N</code>, construct the index vector 
<code>valarray&lt;size_t&gt; idx(0, N)</code>. This designates the initial element of the sequence, whose index <code>k</code> within <code>x</code> is given 
by the mapping:</p>
<pre><code>k = start;
for (size_t i = 0; i &lt; gs.size()[i]; ++i)
    k += idx[i] * gs.stride()[i];</code></pre>
<p>The successor to an index vector value is given by:</p>
<pre><code>for (size_t i = N; 0 &lt; i--; )
    if (++idx[i] &lt; gs.size()[i])
        break;
    else
        idx[i] = 0;</code></pre>
<p>For example:</p>
<pre><code>const size_t lv[] = {2, 3};
const size_t dv[] = {7, 2};
const valarray&lt;size_t&gt; len(lv, 2), str(dv, 2);
// x[gslice(3, len, str)] selects elements with indices
//   3, 5, 7, 10, 12, 14</code></pre>
</body>
</html>
