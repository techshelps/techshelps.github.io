<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Friend Functions and Nested Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_friend_functions_and_nested_classes"></a><sup></sup>Friend Functions and Nested Classes</h1>
<p>
Friend functions declared in a nested class are considered to be in the scope of the nested class, not the enclosing class. Therefore, the friend functions gain no special access privileges to members or member functions of the enclosing class. If you want to use a name that is declared in a nested class in a friend function and the friend function is defined in file scope, use qualified type names as follows:</p>
<pre><code>extern char *rgszMessage[];

class BufferedIO
{
public:
 &nbsp;&nbsp; ...
class BufferedInput
 &nbsp;&nbsp; {
 &nbsp;&nbsp; public:
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; friend int GetExtendedErrorStatus();
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static char *message;
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iMsgNo;
 &nbsp;&nbsp; };
};
char *BufferedIO::BufferedInput::message;

int GetExtendedErrorStatus()
{
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; strcpy( BufferedIO::BufferedInput::message,
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; rgszMessage[iMsgNo] );
 &nbsp;&nbsp; return iMsgNo;
}
</code></pre>
<p>
The preceding code shows the function <code>GetExtendedErrorStatus</code> declared as a friend function. In the function, which is defined in file scope, a message is copied from a static array into a class member. Note that a better implementation of <code>GetExtendedErrorStatus</code> is to declare it as:</p>
<pre><code>int GetExtendedErrorStatus( char *message )
</code></pre>
<p>
With the preceding interface, several classes can use the services of this function by passing a memory location where they want the error message copied.</p>
</font></BODY>
</HTML>
