<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>fstream</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_fstream"></a><sup></sup>fstream</h1>
<p>
<b>#include &lt;fstream.h&gt;</b></p>
<p>
The <b>fstream</b> class is an <b>iostream</b> derivative specialized for combined disk file input and output. Its constructors automatically create and attach a <b>filebuf</b> buffer object.</p>
<p>
See <a href="_iostream_filebuf.htm">filebuf</a> class for information on the get and put areas and their associated pointers. Although the <b>filebuf</b> object’s get and put pointers are theoretically independent, the get area and the put area are not active at the same time. When the stream’s mode changes from input to output, the get area is emptied and the put area is reinitialized. When the mode changes from output to input, the put area is flushed and the get area is reinitialized. Thus, either the get pointer or the put pointer is null at all times.</p>
<p class=label>
<b>Construction/Destruction — Public Members</b></p>
<p class=dt>
<a href="_iostream_fstream.3a3a.fstream.htm">fstream</a></p>
<p class=indent>
Constructs an <b>fstream</b> object.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a7e.fstream.htm">~fstream</a></p>
<p class=indent>
Destroys an <b>fstream</b> object.</p>
<p class=label>
<b>Operations — Public Members</b></p>
<p class=dt>
<a href="_iostream_fstream.3a3a.open.htm">open</a></p>
<p class=indent>
Opens a file and attaches it to the <b>filebuf</b> object and thus to the stream.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.close.htm">close</a></p>
<p class=indent>
Flushes any waiting output and closes the stream’s file.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.setbuf.htm">setbuf</a></p>
<p class=indent>
Attaches the specified reserve area to the stream’s <b>filebuf</b> object.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.setmode.htm">setmode</a></p>
<p class=indent>
Sets the stream’s mode to binary or text.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.attach.htm">attach</a></p>
<p class=indent>
Attaches the stream (through the <b>filebuf</b> object) to an open file.</p>
<p class=label>
<b>Status/Information — Public Members</b></p>
<p class=dt>
<a href="_iostream_fstream.3a3a.rdbuf.htm">rdbuf</a></p>
<p class=indent>
Gets the stream’s <b>filebuf</b> object.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.fd.htm">fd</a></p>
<p class=indent>
Returns the file descriptor associated with the stream.</p>
<p class=dt>
<a href="_iostream_fstream.3a3a.is_open.htm">is_open</a></p>
<p class=indent>
Tests whether the stream’s file is open.</p>
<p>
<a href="_iostream_iostream_class_list.htm#_iostream_input_stream_classes">Input Stream Classes</a></p>
<p>
<b>See Also</b>&nbsp;&nbsp;&nbsp;<a href="_iostream_ifstream.htm">ifstream</a>, <a href="_iostream_ofstream.htm">ofstream</a>, <a href="_iostream_strstream.htm">strstream</a>, <a href="_iostream_stdiostream.htm">stdiostream</a>, <a href="_iostream_filebuf.htm">filebuf</a></p>
</font></BODY>
</HTML>
