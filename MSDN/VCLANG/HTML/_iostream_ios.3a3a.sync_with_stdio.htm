<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ios::sync_with_stdio</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_ios.3a3a.sync_with_stdio"></a><sup></sup>ios::sync_with_stdio</h1>
<p>
<b>static void sync_with_stdio();</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
Synchronizes the C++ streams with the standard I/O system. The first time this function is called, it resets the predefined streams (<b>cin</b>, <b>cout</b>, <b>cerr</b>, <b>clog</b>) to use a <b>stdiobuf</b> object rather than a <b>filebuf</b> object. After that, you can mix I/O using these streams with I/O using <b>stdin</b>, <b>stdout</b>, and <b>stderr</b>. Expect some performance decrease because there is buffering both in the stream class and in the standard I/O file system.</p>
<p>
After the call to <b>sync_with_stdio</b>, the <b>ios::stdio</b> bit is set for all affected predefined stream objects, and <b>cout</b> is set to unit buffered mode.</p>
<p>
<a href="_iostream_ios.htm">ios Overview</a>  |&nbsp; <a href="_iostream_iostream_class_list.htm#_iostream_abstract_stream_base_class">Abstract Stream Base Class</a></p>
</font></BODY>
</HTML>
