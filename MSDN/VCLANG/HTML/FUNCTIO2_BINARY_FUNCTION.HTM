<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>binary_function</title></head>
<body bgcolor=white>

<h2><a name="binary_function">binary_function</a></h2>
<META NAME="MS-HKWD" CONTENT="binary_function">
<pre><code>template&lt;class Arg1, class Arg2, class Result&gt;
    struct <b>binary_function</b> {
    typedef Arg1 <b>first_argument_type</b>;
    typedef Arg2 <b>second_argument_type</b>;
    typedef Result <b>result_type</b>;
    };</code></pre>
<p>The template class serves as a base for classes that define a member function of the form:</p>
<p><code>result_type operator()(first_argument_type, second_argument_type)</code></p>
<p>Hence, all such <a name="binary functions"><b>binary functions</b></a> can refer to their first argument type as <a name="binary_function::first_argument_type"><code><b>first_argument_type</b></code></a>, their second 
argument type as <a name="binary_function::second_argument_type"><code><b>second_argument_type</b></code></a>, and their return type as <a name="binary_function::result_type"><code><b>result_type</b></code></a>.</p>
<p>See the related <a href="sample_binary_function_Structure_(STL_Sample).htm#_sample_stl_binary_function_structure">sample program</a>.</p>

</body>
</html>
