<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Inline Functions versus Macros</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_inline_functions_versus_macros"></a><sup></sup>Inline Functions versus Macros</h1>
<p>
Although inline functions are similar to macros (because the function code is expanded at the point of the call at compile time), inline functions are parsed by the compiler, whereas macros are expanded by the preprocessor. As a result, there are several important differences:
<ul type=disc>
<li>
Inline functions follow all the protocols of type safety enforced on normal functions.<br><br></li>
<li>
Inline functions are specified using the same syntax as any other function except that they include the <b>inline</b> keyword in the function declaration.<br><br></li>
<li>
Expressions passed as arguments to inline functions are evaluated once. In some cases, expressions passed as arguments to macros can be evaluated more than once. The following example shows a macro that converts lowercase letters to uppercase:<pre><code>#include &lt;stdio.h&gt;
#include &lt;conio.h&gt;

#define toupper(a) ((a) &gt;= 'a' &amp;&amp; ((a) &lt;= 'z') ? ((a)-('a'-'A')):(a))

void main()
{
 &nbsp;&nbsp; char ch = toupper( _getch() );
 &nbsp;&nbsp; printf( “%c”, ch );
}
</code></pre>
<p class=tl>
The intent of the expression <code>toupper( _getch() )</code> is that a character should&nbsp;be read from the console device (<b>stdin</b>) and, if necessary, converted to uppercase.</P><p class=tl>
Because of the implementation, _<b>getch</b> is executed once to determine whether the character is greater than or equal to “a,” and once to determine whether it is less than or equal to “z.” If it is in that range, _<b>getch</b> is executed again to convert the character to uppercase. This means the program waits for two or three characters when, ideally, it should wait for only one.</P><p class=tl>
Inline functions remedy this problem:</P><pre><code>#include &lt;stdio.h&gt;
#include &lt;conio.h&gt;

inline char toupper( char a )
{
 &nbsp;&nbsp; return ((a &gt;= 'a' &amp;&amp; a &lt;= 'z') ? a-('a'-'A') : a );
}

void main()
{
 &nbsp;&nbsp; char ch = toupper( _getch() );
 &nbsp;&nbsp; printf( "%c", ch );
}
</code></pre>
</li>
</ul>
</font></BODY>
</HTML>
