<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The C Null Statement</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_the_c_null_statement"></a><sup></sup>The C Null Statement</h1>
<p>
A “null statement” is a statement containing only a semicolon; it can appear wherever a statement is expected. Nothing happens when a null statement is executed. The correct way to code a null statement is: </p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>;</b></p>
<p>
Statements such as <b>do</b>, <b>for</b>, <b>if</b>, and <b>while</b> require that an executable statement appear as the statement body. The null statement satisfies the syntax requirement in cases that do not need a substantive statement body.</p>
<p>
As with any other C statement, you can include a label before a null statement. To label an item that is not a statement, such as the closing brace of a compound statement, you can label a null statement and insert it immediately before the item to get the same effect. </p>
<p>
This example illustrates the null statement:</p>
<pre><code>for ( i = 0; i &lt; 10; line[i++] = 0 )
 &nbsp;&nbsp;&nbsp; ;
</code></pre>
<p>
In this example, the loop expression of the <b>for</b> statement <code>line[i++] = 0</code> initializes the first 10 elements of <code>line</code> to 0. The statement body is a null statement, since no further statements are necessary.</p>
</font></BODY>
</HTML>
