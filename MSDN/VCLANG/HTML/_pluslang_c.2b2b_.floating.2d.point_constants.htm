<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Floating-Point Constants</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.floating.2d.point_constants"></a><sup></sup>C++ Floating-Point Constants</h1>
<p>
Floating-point constants specify values that must have a fractional part. These values contain decimal points (<b>.</b>) and can contain exponents.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>floating-constant</i> :</p>
<p class=indent>
<i>fractional-constant</i> <i>exponent-part</i><sub>opt </sub> <i>floating-suffix</i><sub>opt</sub><br>
<i>digit-sequence</i> <i>exponent-part</i> <i>floating-suffix</i><sub>opt</sub></p>
<p class=dt>
<i>fractional-constant</i> :</p>
<p class=indent>
<i>digit-sequence</i><sub>opt</sub> <i>.</i> <i>digit-sequence</i><br>
<i>digit-sequence</i> <i>.</i></p>
<p class=dt>
<i>exponent-part</i> :</p>
<p class=indent>
<b>e</b> <i>sign</i><sub>opt</sub> <i>digit-sequence</i><br>
<b>E</b> <i>sign</i><sub>opt</sub> <i>digit-sequence</i></p>
<p class=dt>
<i>sign</i> : one of</p>
<p class=indent>
<i>+</i> <i>–</i></p>
<p class=dt>
<i>digit-sequence</i> :</p>
<p class=indent>
<i>digit</i><br>
<i>digit-sequence</i> <i>digit</i></p>
<p class=dt>
<i>floating-suffix</i> :one of</p>
<p class=indent>
<b>f</b> <b>l</b> <b>F</b> <b>L</b></p>
<p>
Floating-point constants have a “mantissa,” which specifies the value of the number, an “exponent,” which specifies the magnitude of the number, and an optional suffix that specifies the constant’s type. The mantissa is specified as a sequence of digits followed by a period, followed by an optional sequence of digits representing the fractional part of the number. For example:</p>
<pre><code>18.46
38.
</code></pre>
<p>
The exponent, if present, specifies the magnitude of the number as a power of 10, as shown in the following example:</p>
<pre><code>18.46e0      // 18.46
18.46e1      // 184.6
</code></pre>
<p>
If an exponent is present, the trailing decimal point is unnecessary in whole numbers such as <code>18E0</code>.</p>
<p>
Floating-point constants default to type <b>double</b>. By using the suffixes <b>f</b> or <b>l</b> (or <b>F</b> or <b>L</b> — the suffix is not case sensitive), the constant can be specified as <b>float</b> or <b>long double</b>, respectively.</p>
<p>
Although <b>long double</b> and <b>double</b> have the same representation, they are not the same type. For example, you can have overloaded functions like</p>
<pre><code>void func( double );
</code></pre>
<p>
and </p>
<pre><code>void func( long double );
</code></pre>
</font></BODY>
</HTML>
