<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>collate::do_transform</title></head>
<body bgcolor=white>

<h3><a name="collate::do_transform">collate::do_transform</a></h3>
<META NAME="MS-HKWD" CONTENT="do_transform">
<pre><code>virtual string_type <b>do_transform</b>(const E *first, const E *last) const;</code></pre>
<p>The protected virtual member function returns an object of class <a href="LOCALE2_collateCCstring_type.htm#collate::string_type"><code>string_type</code></a> whose controlled sequence is a copy of 
the sequence <code>[first, last)</code>. If a class derived from <code>collate&lt;E&gt;</code> overrides <a href="LOCALE2_collateCCdo_compare.htm#collate::do_compare"><code>do_compare</code></a>, it should also override 
<code>do_transform</code> to match. Put simply, two transformed strings should yield the same result, when passed to 
<code>collate::compare</code>, that you would get from passing the untransformed strings to <code>compare</code> in the derived class.</p>
</body>
</html>
