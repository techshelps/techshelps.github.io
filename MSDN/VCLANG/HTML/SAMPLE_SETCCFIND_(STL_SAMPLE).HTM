<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>set::find (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_setCCfind">set::find (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>set::find</code> STL function in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;set&gt;</p>
<b>Prototype:</b><br>
<pre><code>
template&lt;class _K, class _Pr, class _A&gt;
     class set 
     {
        public:
        // Function 1:
        const_iterator find(const _K&amp; _Kv) const;
     }
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The find function is used to locate an element in a controlled sequence. It returns an iterator to the first element in the controlled sequence whose sort key matches its parameter. If no such element exists, the returned iterator equals end().  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: -GX
//
// SetFind.cpp:
//      Illustrates how to use the find function to get an iterator
//      that points to the first element in the controlled sequence
//      that has a particular sort key.
//
// Functions:
//
//    find         Returns an iterator that points to the first element
//                 in the controlled sequence that has the same sort key
//                 as the value passed to the find function. If no such
//                 element exists, the iterator equals end().
//////////////////////////////////////////////////////////////////////

#pragma warning(disable:4786)
#include &lt;set&gt;
#include &lt;iostream&gt;

using namespace std ;

typedef set&lt;int&gt; SET_INT;

void truefalse(int x)
{
  cout &lt;&lt; (x?"True":"False") &lt;&lt; endl;
}

void main() {
  SET_INT s1;
  cout &lt;&lt; "s1.insert(5)" &lt;&lt; endl;
  s1.insert(5);
  cout &lt;&lt; "s1.insert(8)" &lt;&lt; endl;
  s1.insert(8);
  cout &lt;&lt; "s1.insert(12)" &lt;&lt; endl;
  s1.insert(12);

  SET_INT::iterator it;
  cout &lt;&lt; "it=find(8)" &lt;&lt; endl;
  it=s1.find(8);
  cout &lt;&lt; "it!=s1.end() returned ";
  truefalse(it!=s1.end());  //  True

  cout &lt;&lt; "it=find(6)" &lt;&lt; endl;
  it=s1.find(6);
  cout &lt;&lt; "it!=s1.end() returned ";
  truefalse(it!=s1.end());  // False
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>
s1.insert(5)
s1.insert(8)
s1.insert(12)
it=find(8)
it!=s1.end() returned True
it=find(6)
it!=s1.end() returned False
</code></pre>

</body>
</html>
