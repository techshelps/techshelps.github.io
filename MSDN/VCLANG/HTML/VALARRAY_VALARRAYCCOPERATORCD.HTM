<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>valarray::operator[]</title></head>
<body bgcolor=white>

<h3><a name="valarray::operator[]">valarray::operator[]</a></h3>
<META NAME="MS-HKWD" CONTENT="operator[]">
<pre><code>T&amp; <b>operator[]</b>(size_t n);
slice_array&lt;T&gt; <b>operator[]</b>(slice sa);
gslice_array&lt;T&gt; <b>operator[]</b>(const gslice&amp; ga);
mask_array&lt;T&gt; <b>operator[]</b>(const valarray&lt;bool&gt;&amp; ba);
indirect_array&lt;T&gt; <b>operator[]</b>(const valarray&lt;size_t&gt;&amp; xa);

T <b>operator[]</b>(size_t n) const;
valarray&lt;T&gt; <b>operator[]</b>(slice sa) const;
valarray&lt;T&gt; <b>operator[]</b>(const gslice&amp; ga) const;
valarray&lt;T&gt; <b>operator[]</b>(const valarray&lt;bool&gt;&amp; ba) const;
valarray&lt;T&gt; <b>operator[]</b>(const valarray&lt;size_t&gt;&amp; xa) const;</code></pre>
<p>The member operator is overloaded to provide several ways to select sequences of elements from among those 
controlled by <code>*this</code>. The first group of five member operators works in conjunction with various overloads of 
<a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><code>operator=</code></a> (and other assigning operators) to allow selective replacement (slicing) of the controlled sequence. The 
selected elements must exist.</p>
<p>The first member operator selects element <code>n</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
v0[3] = 'A';
// v0 == valarray&lt;char&gt;(&quot;abcAefghijklmnop&quot;, 16)</code></pre>
<p>The second member operator selects those elements of the controlled sequence designated by <code>sa</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
valarray&lt;char&gt; v1(&quot;ABCDE&quot;, 5);
v0[slice(2, 5, 3)] = v1;
// v0 == valarray&lt;char&gt;(&quot;abAdeBghCjkDmnEp&quot;, 16)</code></pre>
<p>The third member operator selects those elements of the controlled sequence designated by <code>ga</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
valarray&lt;char&gt; v1(&quot;ABCDEF&quot;, 6);
const size_t lv[] = {2, 3};
const size_t dv[] = {7, 2};
const valarray&lt;size_t&gt; len(lv, 2), str(dv, 2);
v0[gslice(3, len, str)] = v1;
// v0 == valarray&lt;char&gt;(&quot;abcAeBgCijDlEnFp&quot;, 16)</code></pre>
<p>The fourth member operator selects those elements of the controlled sequence designated by <code>ma</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
valarray&lt;char&gt; v1(&quot;ABC&quot;, 3);
const bool vb[] = {false, false, true, true, false, true};
v0[valarray&lt;bool&gt;(vb, 6)] = v1;
// v0 == valarray&lt;char&gt;(&quot;abABeCghijklmnop&quot;, 16)</code></pre>
<p>The fifth member operator selects those elements of the controlled sequence designated by <code>ia</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
valarray&lt;char&gt; v1(&quot;ABCDE&quot;, 5);
const size_t vi[] = {7, 5, 2, 3, 8};
v0[valarray&lt;size_t&gt;(vi, 5)] = v1;
// v0 == valarray&lt;char&gt;(&quot;abCDeBgAEjklmnop&quot;, 16)</code></pre>
<p>In the second group, each of the five member operators constructs an object that represents the value(s) selected. The 
selected elements must exist.</p>
<p>The sixth member operator returns the value of element <code>n</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
// v0[3] returns 'd'</code></pre>
<p>The seventh member operator returns an object of class <code>valarray&lt;T&gt;</code> containing those elements of the controlled 
sequence designated by <code>sa</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
// v0[slice(2, 5, 3)] returns valarray&lt;char&gt;(&quot;cfilo&quot;, 5)</code></pre>
<p>The eighth member operator selects those elements of the controlled sequence designated by <code>ga</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
const size_t lv[] = {2, 3};
const size_t dv[] = {7, 2};
const valarray&lt;size_t&gt; len(lv, 2), str(dv, 2);
// v0[gslice(3, len, str)] returns valarray&lt;char&gt;(&quot;dfhkmo&quot;, 6)</code></pre>
<p>The ninth member operator selects those elements of the controlled sequence designated by <code>ma</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
const bool vb[] = {false, false, true, true, false, true};
// v0[valarray&lt;bool&gt;(vb, 6)] returns valarray&lt;char&gt;(&quot;cdf&quot;, 3)</code></pre>
<p>The last member operator selects those elements of the controlled sequence designated by <code>ia</code>. For example:</p>
<pre><code>valarray&lt;char&gt; v0(&quot;abcdefghijklmnop&quot;, 16);
const size_t vi[] = {7, 5, 2, 3, 8};
// v0[valarray&lt;size_t&gt;(vi, 5)] returns valarray&lt;char&gt;(&quot;hfcdi&quot;, 3)</code></pre>
</body>
</html>
