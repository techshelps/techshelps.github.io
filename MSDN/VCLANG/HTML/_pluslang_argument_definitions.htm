<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Argument Definitions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_argument_definitions"></a><sup></sup>Argument Definitions</h1>
<p>
The arguments in the prototype </p>
<p>
<b>int</b> <b>main(</b> <b>int</b> <i>argc</i>[ <b>,</b> <b>char</b> <b>*</b><i>argv</i><b>[</b> <b>]</b> [<b>,</b> <b>char</b> <b>*</b><i>envp</i><b>[</b> <b>]</b> ] ] <b>);</b></p>
<p>
or</p>
<p>
<b>int</b> <b>wmain(</b> <b>int</b> <i>argc</i>[ <b>,</b> <b>wchar_t</b> <b>*</b><i>argv</i><b>[</b> <b>]</b> [<b>,</b> <b>wchar_t</b> <b>*</b><i>envp</i><b>[</b> <b>]</b> ] ] <b>);</b></p>
<p>
allow convenient command-line parsing of arguments and, optionally, access to environment variables. The argument definitions are as follows:</p>
<p class=dt>
<i>argc</i></p>
<p class=indent>
An integer that contains the count of arguments that follow in <i>argv</i>. The <i>argc</i> parameter is always greater than or equal to 1.</p>
<p class=dt>
<i>argv</i></p>
<p class=indent>
An array of null-terminated strings representing command-line arguments entered by the user of the program. By convention, <i>argv</i><b>[0]</b> is the command with which the program is invoked, <i>argv</i><b>[1]</b> is the first command-line argument, and so on, until <i>argv</i><b>[</b><i>argc</i><b>]</b>, which is always <b>NULL</b>. See <a href="_pluslang_customizing_command_line_processing.htm">Customizing Command Line Processing</a> for information on suprressing command-line processing. </p>
<p class=tl>
The first command-line argument is always <i>argv</i><b>[1]</b> and the last one is <i>argv</i><b>[</b><i>argc</i> – 1<b>]</b>.</P><p>
<b>Microsoft Specific </b></p>
<p class=dt>
<i>envp</i></p>
<p class=indent>
The <i>envp</i> array, which is a common extension in many UNIX® systems, is used in Microsoft C++. It is an array of strings representing the variables set in the user’s environment. This array is terminated by a <b>NULL</b> entry. See <a href="_pluslang_customizing_command_line_processing.htm">Customizing Command Line Processing</a> for information on suprressing environment processing. This argument is ANSI compatible in C, but not in C++.</p>
<p>
<b>END Microsoft Specific</b></p>
<p>
The following example shows how to use the <i>argc</i>, <i>argv</i>, and <i>envp</i> arguments to <b>main</b>:</p>
<pre><code>#include &lt;iostream.h&gt;
#include &lt;string.h&gt;

void main( int argc, char *argv[], char *envp[] )
{
 &nbsp;&nbsp; int iNumberLines = 0;&nbsp;&nbsp;&nbsp; // Default is no line numbers.

 &nbsp;&nbsp; // If more than .EXE filename supplied, and if the 
 &nbsp;&nbsp; // /n command-line option is specified, the listing
 &nbsp;&nbsp; // of environment variables is line-numbered.

 &nbsp;&nbsp; if( argc == 2 &amp;&amp; stricmp( argv[1], "/n" ) == 0 )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; iNumberLines = 1;

 &nbsp;&nbsp; // Walk through list of strings until a NULL is encountered.
 &nbsp;&nbsp; for( int i = 0; envp[i] != NULL; ++i )
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( iNumberLines )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; cout &lt;&lt; i &lt;&lt; ": " &lt;&lt; envp[i] &lt;&lt; "\n";
 &nbsp;&nbsp; }
}
</code></pre>
</font></BODY>
</HTML>
