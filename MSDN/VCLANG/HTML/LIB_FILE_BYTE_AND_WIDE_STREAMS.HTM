<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Byte and Wide Streams</title></head>
<body bgcolor=white>

<h2><a name="Byte and Wide Streams">Byte and Wide Streams</a></h2>
<META NAME="MS-HKWD" CONTENT="byte and wide streams">
<p>A <a name="byte stream"><b>byte stream</b></a> treats a file as a sequence of bytes. Within the program, the stream looks like the same sequence of 
bytes, except for the possible alterations described above.</p>
<p>By contrast, a <a name="wide stream"><b>wide stream</b></a> treats a file as a sequence of <a name="generalized multibyte characters"><b>generalized multibyte characters</b></a>, which can have a broad 
range of encoding rules. (Text and binary files are still read and written as described above.) Within the program, the 
stream looks like the corresponding sequence of wide characters. Conversions between the two representations occur 
within the Standard C library. The conversion rules can, in principle, be altered by a call to <code>setlocale</code> that changes the 
category <code>LC_CTYPE</code>. Each wide stream determines its conversion rules at the time it becomes wide-oriented, and retains 
these rules even if the category <code>LC_CTYPE</code> subsequently changes.</p>
<p>Positioning within a wide stream is subject to the same limitations as for <a href="LIB_FILE_Text_and_Binary_Streams.htm#text stream">text streams</a>. Moreover, the <a href="LIB_FILE_Controlling_Streams.htm#file-position indicator">file-position indicator</a> 
may well have to deal with a state-dependent encoding. Typically, it includes both a byte offset within the stream and an 
object of type <a href="wchar_mbstate_t.htm#mbstate_t"><code>mbstate_t</code></a>. Thus, the only reliable way to obtain a file position within a wide stream is by calling 
<code>fgetpos</code>, and the only reliable way to restore a position obtained this way is by calling <code>fsetpos</code>. </p>
</body>
</html>
