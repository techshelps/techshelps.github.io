<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_stringbuf::str</title></head>
<body bgcolor=white>

<h3><a name="basic_stringbuf::str">basic_stringbuf::str</a></h3>
<META NAME="MS-HKWD" CONTENT="str">
<pre><code>basic_string&lt;E, T, A&gt; <b>str</b>() const;
void <b>str</b>(basic_string&lt;E, T, A&gt;&amp; x);</code></pre>
<p>The first member function returns an object of class <a href="STRING2_basic_string.htm#basic_string"><code>basic_string</code></a><code>&lt;E, T, </code><a href="MEMORY_allocator.htm#allocator"><code>allocator</code></a><code>&gt;</code>, whose controlled sequence 
is a copy of the sequence controlled by <code>*this</code>. The sequence copied depends on the stored <a href="SSTREAM_basic_stringbuf.htm#stringbuf mode">stringbuf mode</a> <code>mode</code>:</p>
<ul>
<li>If <code>mode &amp; ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::out"><code>out</code></a> is nonzero and an <a href="STREAMBU_basic_streambuf.htm#output buffer">output buffer</a> exists, the sequence is the entire output buffer 
(<a href="STREAMBU_basic_streambufCCepptr.htm#basic_streambuf::epptr"><code>epptr</code></a><code>() - </code><a href="STREAMBU_basic_streambufCCpbase.htm#basic_streambuf::pbase"><code>pbase</code></a><code>()</code> elements beginning with <code>pbase()</code>).</li>
<li>Otherwise, if <code>mode &amp; ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::in"><code>in</code></a> is nonzero and an <a href="STREAMBU_basic_streambuf.htm#input buffer">input buffer</a> exists, the sequence is the entire input 
buffer (<a href="STREAMBU_basic_streambufCCegptr.htm#basic_streambuf::egptr"><code>egptr</code></a><code>() - </code><a href="STREAMBU_basic_streambufCCeback.htm#basic_streambuf::eback"><code>eback</code></a><code>()</code> elements beginning with <code>eback()</code>).</li>
<li>Otherwise, the copied sequence is empty.</li>
</ul>
<p>The second member function deallocates any sequence currently controlled by <code>*this</code>. It then allocates a copy of the 
sequence controlled by <code>x</code>. If <code>mode &amp; ios_base::in</code> is nonzero, it sets the input buffer to begin reading at the 
beginning of the sequence. If <code>mode &amp; ios_base::out</code> is nonzero, it sets the output buffer to begin writing at the 
beginning of the sequence.</p>
</body>
</html>
