<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>abs (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_abs">abs (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>abs</code> STL function in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;valarray&gt;</p>
<b>Prototype:</b><br>
<pre><code>
   template&lt;class T&gt;
   valarray&lt;T&gt; abs(const valarray&lt;T&gt;&amp; x);
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The sample declares a valarray of integers and uses the abs()STL function to get the absolute value for each array element.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: None
//
// &lt;filename&gt; :  main.cpp
//
// Functions:
//
//    abs
//
//////////////////////////////////////////////////////////////////////

#include &lt;iostream&gt;                 // for i/o functions
#include &lt;valarray&gt;                 // for valarray

using namespace std;


#define ARRAY_SIZE  10              // array size
typedef valarray&lt;int&gt; INTVALARRAY;  // type for valarray of ints

void main()
{
    // Initialize val_array to 0, -1, -2, etc.
    INTVALARRAY val_array(ARRAY_SIZE);
    for (int i = 0; i &lt; ARRAY_SIZE; i++)
        val_array[i] = -i;

    // Display the size of val_array.
    cout &lt;&lt; "Size of val_array = " &lt;&lt; val_array.size() &lt;&lt; "\n\n";

    // Display the values of val_array before calling abs().
    cout &lt;&lt; "The values of val_array before calling abs():\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; val_array[i] &lt;&lt; "    ";
    cout &lt;&lt; "\n\n";

    // Display the result of val_array after calling abs().
    INTVALARRAY abs_array = abs(val_array);
    cout &lt;&lt; "The result of val_array after calling abs():\n";
    for (i = 0; i &lt; ARRAY_SIZE; i++)
        cout &lt;&lt; abs_array[i] &lt;&lt; "     ";
    cout &lt;&lt; "\n\n";
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>Size of val_array = 10

The values of val_array before calling abs():
0    -1    -2    -3    -4    -5    -6    -7    -8    -9

The result of val_array after calling abs():
0     1     2     3     4     5     6     7     8     9
</code></pre>
</body>
</html>
