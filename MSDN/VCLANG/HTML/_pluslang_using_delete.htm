<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using delete</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_using_delete"></a><sup></sup>Using delete</h1>
<p>
There are two syntactic variants for the delete operator: one for single objects and the other for arrays of objects. The following code fragment shows how these differ:</p>
<pre><code>void main()
{
 &nbsp;&nbsp; // Allocate a user-defined object, UDObject, and an object
 &nbsp;&nbsp; //&nbsp; of type double on the free store using the
 &nbsp;&nbsp; //&nbsp; new operator.
 &nbsp;&nbsp; UDType *UDObject = new UDType;
 &nbsp;&nbsp; double *dObject = new double;
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; // Delete the two objects.
 &nbsp;&nbsp; delete UDObject;
 &nbsp;&nbsp; delete dObject; 
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; // Allocate an array of user-defined objects on the
 &nbsp;&nbsp; // free store using the new operator.
 &nbsp;&nbsp; UDType (*UDArr)[7] = new UDType[5][7];
 &nbsp;&nbsp; ...
 &nbsp;&nbsp; // Use the array syntax to delete the array of objects.
 &nbsp;&nbsp; delete [] UDArr;
}
</code></pre>
<p>
These two cases produce undefined results: using the array form of delete (delete [ ]) on an object and using the nonarray form of delete on an array.</p>
</font></BODY>
</HTML>
