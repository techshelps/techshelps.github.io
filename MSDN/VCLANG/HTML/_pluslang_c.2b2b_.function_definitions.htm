<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Function Definitions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.function_definitions"></a><sup></sup>C++ Function Definitions</h1>
<p>
Function definitions differ from function declarations in that they supply function bodies — the code that makes up the function.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>function-definition</i> :</p>
<p class=indent>
<i>decl-specifiers</i><sub>opt</sub>  <i>declarator</i>  <i>ctor-initializer</i><sub>opt</sub>  <i>fct-body</i></p>
<p class=dt>
<i>fct-body</i> :</p>
<p class=indent>
<i>compound-statement</i></p>
<p>
As discussed in <a href="_pluslang_function_declarations.htm">Functions</a>, the form of the declarator in the syntax is:</p>
<p>
<i>dname</i>  <b>(</b>  <i>argument-declaration-list</i>  <b>)</b>  <i>cv-mod-list</i><sub>opt</sub></p>
<p>
The formal arguments declared in <i>argument-declaration-list</i> are in the scope of the function body.</p>
<p>
Figure 7.3 shows the parts of a function definition. The shaded area is the function body.</p>
<p class=label>
<b>Figure 7.3&nbsp;&nbsp;&nbsp;Parts of a Function Definition</b></p>
<p>
<img src="l07fun3.gif" border=0></p>
<p>
The <i>cv-mod-list</i> element of the declarator syntax specifies how the <b>this</b> pointer is to be treated; it is only for use with class member functions. </p>
<p>
The <i>ctor-initializer</i> element of the syntax is used only in constructors. Its purpose is to allow initialization of base classes and contained objects. (For more information about use of <i>ctor-initializer</i>, see <a href="_pluslang_initializing_bases_and_members.htm">Initializing Bases and Members</a> in Chapter 11.)</p>
</font></BODY>
</HTML>
