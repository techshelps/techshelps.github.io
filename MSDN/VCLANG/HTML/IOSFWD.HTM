</html>
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>

<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>&lt;iosfwd&gt;</title>
<meta name="GENERATOR" content="Microsoft FrontPage 1.1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>

<body bgcolor=white>

<h1><a name="&lt;iosfwd&gt;">&lt;iosfwd&gt;</a></h1>
<META NAME="MS-HKWD" CONTENT="iosfwd header file">
<pre><code>namespace std {
        // <b>TYPE DEFINITIONS</b>
typedef T1 <a href="IOS_streamoff.htm#streamoff"><b>streamoff</b></a>;
typedef T2 <a href="IOS_streampos.htm#streampos"><b>streampos</b></a>;
        // <b>TEMPLATES</b>
template&lt;class E&gt;
    class <a href="STRING2_char_traits.htm#char_traits"><b>char_traits</b></a>;
class <a href="STRING2_char_traitsLcharG.htm#char_traits&lt;char&gt;"><b>char_traits&lt;char&gt;</b></a>;
class <a href="STRING2_char_traitsLwchar_tG.htm#char_traits&lt;wchar_t&gt;"><b>char_traits&lt;wchar_t&gt;</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="IOS_basic_ios.htm#basic_ios"><b>basic_ios</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="ITERATOR_istreambuf_iterator.htm#istreambuf_iterator"><b>istreambuf_iterator</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="ITERATOR_ostreambuf_iterator.htm#ostreambuf_iterator"><b>ostreambuf_iterator</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="STREAMBU_basic_streambuf.htm#basic_streambuf"><b>basic_streambuf</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="ISTREAM_basic_istream.htm#basic_istream"><b>basic_istream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="OSTREAM_basic_ostream.htm#basic_ostream"><b>basic_ostream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="ISTREAM_basic_iostream.htm#basic_iostream"><b>basic_iostream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="SSTREAM_basic_stringbuf.htm#basic_stringbuf"><b>basic_stringbuf</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="SSTREAM_basic_istringstream.htm#basic_istringstream"><b>basic_istringstream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="SSTREAM_basic_ostringstream.htm#basic_ostringstream"><b>basic_ostringstream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="SSTREAM_basic_stringstream.htm#basic_stringstream"><b>basic_stringstream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="FSTREAM_basic_filebuf.htm#basic_filebuf"><b>basic_filebuf</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="FSTREAM_basic_ifstream.htm#basic_ifstream"><b>basic_ifstream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="FSTREAM_basic_ofstream.htm#basic_ofstream"><b>basic_ofstream</b></a>;
template&lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <a href="FSTREAM_basic_fstream.htm#basic_fstream"><b>basic_fstream</b></a>;
        // <b>char TYPE DEFINITIONS</b>
typedef basic_ios&lt;char, char_traits&lt;char&gt; &gt; <a href="IOS_ios.htm#ios"><b>ios</b></a>;
typedef basic_streambuf&lt;char, char_traits&lt;char&gt; &gt; <a href="STREAMBU_streambuf.htm#streambuf"><b>streambuf</b></a>;
typedef basic_istream&lt;char, char_traits&lt;char&gt; &gt; <a href="ISTREAM_istream.htm#istream"><b>istream</b></a>;
typedef basic_ostream&lt;char, char_traits&lt;char&gt; &gt; <a href="OSTREAM_ostream.htm#ostream"><b>ostream</b></a>;
typedef basic_iostream&lt;char, char_traits&lt;char&gt; &gt; <a href="ISTREAM_iostream.htm#iostream"><b>iostream</b></a>;
typedef basic_stringbuf&lt;char, char_traits&lt;char&gt; &gt; <a href="SSTREAM_stringbuf.htm#stringbuf"><b>stringbuf</b></a>;
typedef basic_istringstream&lt;char, char_traits&lt;char&gt; &gt; <a href="SSTREAM_istringstream.htm#istringstream"><b>istringstream</b></a>;
typedef basic_ostringstream&lt;char, char_traits&lt;char&gt; &gt; <a href="SSTREAM_ostringstream.htm#ostringstream"><b>ostringstream</b></a>;
typedef basic_stringstream&lt;char, char_traits&lt;char&gt; &gt; <a href="SSTREAM_stringstream.htm#stringstream"><b>stringstream</b></a>;
typedef basic_filebuf&lt;char, char_traits&lt;char&gt; &gt; <a href="FSTREAM_filebuf.htm#filebuf"><b>filebuf</b></a>;
typedef basic_ifstream&lt;char, char_traits&lt;char&gt; &gt; <a href="FSTREAM_ifstream.htm#ifstream"><b>ifstream</b></a>;
typedef basic_ofstream&lt;char, char_traits&lt;char&gt; &gt; <a href="FSTREAM_ofstream.htm#ofstream"><b>ofstream</b></a>;
typedef basic_fstream&lt;char, char_traits&lt;char&gt; &gt; <a href="FSTREAM_fstream.htm#fstream"><b>fstream</b></a>;
        // <b>wchar_t TYPE DEFINITIONS</b>
typedef basic_ios&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="IOS_wios.htm#wios"><b>wios</b></a>;
typedef basic_streambuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="STREAMBU_wstreambuf.htm#wstreambuf"><b>wstreambuf</b></a>;
typedef basic_istream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="ISTREAM_wistream.htm#wistream"><b>wistream</b></a>;
typedef basic_ostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="OSTREAM_wostream.htm#wostream"><b>wostream</b></a>;
typedef basic_iostream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="ISTREAM_wiostream.htm#wiostream"><b>wiostream</b></a>;
typedef basic_stringbuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="SSTREAM_wstringbuf.htm#wstringbuf"><b>wstringbuf</b></a>;
typedef basic_istringstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="SSTREAM_wistringstream.htm#wistringstream"><b>wistringstream</b></a>;
typedef basic_ostringstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="SSTREAM_wostringstream.htm#wostringstream"><b>wostringstream</b></a>;
typedef basic_stringstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="SSTREAM_wstringstream.htm#wstringstream"><b>wstringstream</b></a>;
typedef basic_filebuf&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="FSTREAM_wfilebuf.htm#wfilebuf"><b>wfilebuf</b></a>;
typedef basic_ifstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="FSTREAM_wifstream.htm#wifstream"><b>wifstream</b></a>;
typedef basic_ofstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="FSTREAM_wofstream.htm#wofstream"><b>wofstream</b></a>;
typedef basic_fstream&lt;wchar_t, char_traits&lt;wchar_t&gt; &gt; <a href="FSTREAM_wfstream.htm#wfstream"><b>wfstream</b></a>;
    };</code></pre>
<p>Include the <a href="LIB_CPP_Iostreams_Conventions.htm#iostreams">iostreams</a> standard header <code><b>&lt;iosfwd&gt;</b></code> to declare forward references to several template classes used 
throughout iostreams. All such template classes are defined in other standard headers. You include this header explicitly 
only when you need one of the above declarations, but not its definition.</p>
</body>

</html>
