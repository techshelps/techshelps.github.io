<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Lifetime of Objects Allocated with new</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_lifetime_of_objects_allocated_with_new"></a><sup></sup>Lifetime of Objects Allocated with new</h1>
<p>
Objects allocated with the <b>new</b> operator are not destroyed when the scope in which they are defined is exited. Because the <b>new</b> operator returns a pointer to the objects it allocates, the program must define a pointer with suitable scope to access those objects. For example:</p>
<pre><code>void main()
{
 &nbsp;&nbsp; // Use new operator to allocate an array of 20 characters.
 &nbsp;&nbsp; char *AnArray = new char[20];

 &nbsp;&nbsp; for( int i = 0; i &lt; 20; ++i )
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // On the first iteration of the loop, allocate
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; another array of 20 characters.
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if( i == 0 )
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char *AnotherArray = new char[20];
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...
 &nbsp;&nbsp; }

 &nbsp;&nbsp; delete AnotherArray; // Error: pointer out of scope.
 &nbsp;&nbsp; delete AnArray;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // OK: pointer still in scope.
}
</code></pre>
<p>
Once the pointer <code>AnotherArray</code> goes out of scope in the example, the object can no longer be deleted.</p>
</font></BODY>
</HTML>
