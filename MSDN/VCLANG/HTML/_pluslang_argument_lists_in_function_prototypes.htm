<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Argument Lists in Function Prototypes (Nondefining Declaration)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_argument_lists_in_function_prototypes"></a><sup></sup>Argument Lists in Function Prototypes (Nondefining Declaration)</h1>
<p>
The form <i>argument-declaration-list</i> is a list of the type names of the arguments. Consider an <i>argument-declaration-list</i> for a function, <code>func</code>, that takes these three arguments: pointer to type <b>char</b>, <b>char</b>, and <b>int</b>.</p>
<p>
The code for such an <i>argument-declaration-list</i> can be written:</p>
<pre><code>char *, char, int
</code></pre>
<p>
The function declaration (the prototype) might therefore be written:</p>
<pre><code>void func( char *, char, int );
</code></pre>
<p>
Although the preceding declaration contains enough information for the compiler to perform type checking and conversions, it does not provide much information about what the arguments are. A good way to document function declarations is to include identifiers as they would appear in the function definition, as in the following:</p>
<pre><code>void func( char *szTarget, char chSearchChar, int nStartAt );
</code></pre>
<p>
These identifiers in prototypes are useful only for default arguments, because they go out of scope immediately. However, they provide meaningful program documentation.</p>
</font></BODY>
</HTML>
