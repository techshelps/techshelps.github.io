<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Member-Selection Operator</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_member.2d.selection_operator"></a><sup></sup>Member-Selection Operator</h1>
<p>
A <i>postfix-expression</i> followed by the member-selection operator (<b>.</b>) and a <i>name</i> is another example of a <i>postfix-expression</i>. The first operand of the member-selection operator must have class or class reference type, and the second operand must identify a member of that class.</p>
<p>
The result of the expression is the value of the member, and it is an l-value if the named member is an l-value.</p>
<p>
A <i>postfix-expression</i> followed by the member-selection operator (<b>–&gt;</b>) and a <i>name</i> is a <i>postfix-expression</i>. The first operand of the member-selection operator must have type pointer to a class object (an object declared as <b>class</b>, <b>struct</b>, or <b>union</b> type), and the second operand must identify a member of that class.</p>
<p>
The result of the expression is the value of the member, and it is an l-value if the named member is an l-value. The <b>–&gt;</b> operator dereferences the pointer. Therefore, the expressions <i>e</i><b>–&gt;</b><i>member</i> and <b>(*</b><i>e</i><b>)</b>.<i>member</i> (where <i>e</i> represents an expression) yield identical results (except when the operators <b>–&gt;</b> or <b>*</b> are overloaded).</p>
<p>
When a value is stored through one member of a union but retrieved through another member, no conversion is performed. The following program stores data into the object <code>U</code> as <b>int</b> but retrieves the data as two separate bytes of type <b>char</b>:</p>
<pre><code>#include &lt;iostream.h&gt;

void main()
{
 &nbsp;&nbsp; struct ch
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char b1;
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char b2;
 &nbsp;&nbsp; };
 &nbsp;&nbsp; union u
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; struct ch uch;
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; short&nbsp; i;
 &nbsp;&nbsp; };

 &nbsp;&nbsp; u U;

 &nbsp;&nbsp; U.i = 0x6361;&nbsp; // Bit pattern for "ac"
 &nbsp;&nbsp; cout &lt;&lt; U.uch.b1 &lt;&lt; U.uch.b2 &lt;&lt; "\n";
}
</code></pre>
</font></BODY>
</HTML>
