<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Indirection Operator (*)</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_indirection_operator"></a><sup></sup>Indirection Operator (*)</h1>
<p>
The unary indirection operator (<b>*</b>) “dereferences” a pointer; that is, it converts a pointer value to an l-value. The operand of the indirection operator must be a pointer to a type. The result of the indirection expression is the type from which the pointer type is derived. The use of the <b>*</b> operator in this context is different from its meaning as a binary operator, which is multiplication.</p>
<p>
If the operand points to a function, the result is a function designator. If it points to a storage location, the result is an l-value designating the storage location.</p>
<p>
If the pointer value is invalid, the result is undefined. The following list includes some of the most common conditions that invalidate a pointer value.
<ul type=disc>
<li>
The pointer is a null pointer. <br><br></li>
<li>
The pointer specifies the address of a local item that is not visible at the time of the reference. <br><br></li>
<li>
The pointer specifies an address that is inappropriately aligned for the type of the object pointed to.<br><br></li>
<li>
The pointer specifies an address not used by the executing program.</li>
</ul>
</font></BODY>
</HTML>
