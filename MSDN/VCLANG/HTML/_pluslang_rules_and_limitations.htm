<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Rules and Limitations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_rules_and_limitations"></a><sup></sup>Rules and Limitations</h1>
<ul type=disc>
<li>
The <b>return</b> statement is not permitted in a naked function. However, you can return an <b>int</b> by moving the return value into the EAX register before the <b>RET</b> instruction.<br><br></li>
<li>
Structured exception handling constructs are not permitted in a naked function, because the constructs must unwind across the stack frame.<br><br></li>
<li>
The <b>setjmp</b> run-time function cannot be used in a naked function, because it too must unwind across the stack frame. However, use of the <b>longjmp</b> run-time function is permitted.<br><br></li>
<li>
Use of the <b>_alloca</b> function is not permitted in a naked function.<br><br></li>
<li>
To ensure that no initialization code for local variables appears before the prolog sequence, initialized local variables are not permitted at function scope. In particular, the declaration of C++ objects is not permitted at function scope. There can, however, be initialized data in a nested scope.<br><br></li>
<li>
Frame pointer optimization (the /Oy compiler option) is not recommended, but it is automatically suppressed for a naked function.</li>
</ul>
</font></BODY>
</HTML>
