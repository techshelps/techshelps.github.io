<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing Member Objects</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_initializing_member_objects"></a><sup></sup>Initializing Member Objects</h1>
<p>
Classes can contain member objects of class type, but to ensure that initialization requirements for the member objects are met, one of the following conditions must be met:
<ul type=disc>
<li>
The contained object’s class requires no constructor.<br><br></li>
<li>
The contained object’s class has an accessible default constructor.<br><br></li>
<li>
The containing class’s constructors all explicitly initialize the contained object.</li>
</ul>
<p>
The following example shows how to perform such an initialization:</p>
<pre><code>// Declare a class Point.
class Point
{
public:
 &nbsp;&nbsp; Point( int x, int y ) { _x = x; _y = y; }
private:
 &nbsp;&nbsp; int _x, _y;
};

// Declare a rectangle class that contains objects of type Point.
class Rect
{
public:
 &nbsp;&nbsp; Rect( int x1, int y1, int x2, int y2 );
private:
 &nbsp;&nbsp; Point _topleft, _bottomright;
};

//&nbsp; Define the constructor for class Rect. This constructor
//&nbsp;&nbsp; explicitly initializes the objects of type Point.
Rect::Rect( int x1, int y1, int x2, int y2 ) :
_topleft( x1, y1 ), _bottomright( x2, y2 )
{
}
</code></pre>
<p>
The <code>Rect</code> class, shown in the preceding example, contains two member objects of class <code>Point</code>. Its constructor explicitly initializes the objects <code>_topleft</code> and <code>_bottomright</code>. Note that a colon follows the closing parenthesis of the constructor (in the definition). The colon is followed by the member names and arguments with which to initialize the objects of type <code>Point</code>.</p>
<p class=indent>
<B><b>Warning</b></B>&nbsp;&nbsp;&nbsp;The order in which the member initializers are specified in the constructor does not affect the order in which the members are constructed; the members are constructed in the order in which they are declared in the class.</p>
<p>
Reference and <b>const</b> member objects must be initialized using the member initialization syntax shown in Syntax in <a href="_pluslang_initializing_bases_and_members.htm">Initializing Bases and Members</a>. There is no other way to initialize these objects.</p>
</font></BODY>
</HTML>
