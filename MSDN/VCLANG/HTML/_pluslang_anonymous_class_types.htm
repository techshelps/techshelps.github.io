<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Anonymous Class Types</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_anonymous_class_types"></a><sup></sup>Anonymous Class Types</h1>
<p>
Classes can be anonymous — that is, they can be declared without an <i>identifier</i>. This is useful when you replace a class name with a <b>typedef</b> name, as in the following:</p>
<pre><code>typedef struct
{
 &nbsp;&nbsp; unsigned x;
 &nbsp;&nbsp; unsigned y;
} POINT;
</code></pre>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The use of anonymous classes shown in the previous example is useful for preserving compatibility with existing C code. In some C code, the use of <b>typedef</b> in conjunction with anonymous structures is prevalent.</p>
<p>
Anonymous classes are also useful when you want a reference to a class member to appear as though it were not contained in a separate class, as in the following:</p>
<pre><code>struct PTValue
{
 &nbsp;&nbsp; POINT ptLoc;
 &nbsp;&nbsp; union
 &nbsp;&nbsp; {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int&nbsp; iValue;
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long lValue;
 &nbsp;&nbsp; };
};

PTValue ptv;
</code></pre>
<p>
In the preceding code, <code>iValue</code> can be accessed using the object member-selection operator (<b>.</b>) as follows:</p>
<pre><code>int i = ptv.iValue;
</code></pre>
<p>
Anonymous classes are subject to certain restrictions. (For more information about anonymous unions, see <a href="_pluslang_unions.htm">Unions</a>.) Anonymous classes:
<ul type=disc>
<li>
Cannot have a constructor or destructor.<br><br></li>
<li>
Cannot be passed as arguments to functions (unless type checking is defeated using ellipses).<br><br></li>
<li>
Cannot be returned as return values from functions.</li>
</ul>
</font></BODY>
</HTML>
