<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_streambuf::uflow</title></head>
<body bgcolor=white>

<h3><a name="basic_streambuf::uflow">basic_streambuf::uflow</a></h3>
<META NAME="MS-HKWD" CONTENT="uflow">
<pre><code>virtual int_type <b>uflow</b>();</code></pre>
<p>The protected virtual member function endeavors to extract the current element <code>c</code> from the input stream, then advance 
the current stream position, and return the element as <code>T::</code><a href="STRING2_char_traitsCCto_int_type.htm#char_traits::to_int_type"><code>to_int_type</code></a><code>(c)</code>. It can do so in various ways:</p>
<ul>
<li>If a <a href="STREAMBU_basic_streambuf.htm#read position">read position</a> is available, it takes <code>c</code> as the element stored in the read position and advances the next pointer 
for the <a href="STREAMBU_basic_streambuf.htm#input buffer">input buffer</a>. </li>
<li>It can read an element directly, from some external source, and deliver it as the value <code>c</code>. </li>
<li>For a stream buffer with common input and output streams, it can make a read position available by writing out, 
to some external destination, some or all of the elements between the beginning and next pointers for the output 
buffer. Or it can allocate new or additional storage for the input buffer. The function then reads in, from some 
external source, one or more elements. </li>
</ul>
<p>If the function cannot succeed, it returns <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>()</code>, or throws an exception. Otherwise, it returns the current element <code>c</code> 
in the input stream, converted as described above, and advances the next pointer for the input buffer. The default 
behavior is to call <a href="STREAMBU_basic_streambufCCunderflow.htm#basic_streambuf::underflow"><code>underflow</code></a><code>()</code> and, if that function returns <code>T::eof()</code>, to return <code>T::eof()</code>. Otherwise, the function 
returns the current element <code>c</code> in the input stream, converted as described above, and advances the next pointer for the 
input buffer.</p>
</body>
</html>
