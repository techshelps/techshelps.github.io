<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>queue functions (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_queue_functions">queue functions (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>queue::(push,pop,empty,back,front)</code> STL functions in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;queue&gt;</p>
<b>Prototype:</b><br>
<pre><code>
     queue::push();
     queue::pop();
     queue::empty();
     queue::back();
     queue::front();
     queue::size();
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The sample shows queue implementation using list and deque containers.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: none
//
// &lt;filename&gt; :  queue.cpp
//
// Functions:
//
//    queue::push(), queue::pop(), queue::empty(), queue::back(),
//    queue::front(),queue::size()
//
//////////////////////////////////////////////////////////////////////

/* Compile options needed:none
*/
#include &lt;list&gt;
#include &lt;iostream&gt;
#include &lt;queue&gt;
#include &lt;deque&gt;

using namespace std ;

// Using queue with list
typedef list&lt;int &gt; INTLIST;
typedef queue&lt;int&gt;  INTQUEUE;

// Using queue with deque
typedef deque&lt;char*&gt; CHARDEQUE;
typedef queue&lt;char*&gt; CHARQUEUE;

void main(void)
{
    int size_q;
    INTQUEUE q;
    CHARQUEUE p;

    // Insert items in the queue(uses list)
    q.push(42);
    q.push(100);
    q.push(49);
    q.push(201);

 </code></pre>

<p>Program Output is:</p>

<pre><code>
    // Output the size of queue
    size_q = q.size();
    cout &lt;&lt; "size of q is:" &lt;&lt; size_q &lt;&lt; endl;

    // Output items in queue using front()
    // and use pop() to get to next item until
    // queue is empty
    while (!q.empty())
    {
        cout &lt;&lt; q.front() &lt;&lt; endl;
        q.pop();

    }

// Insert items in the queue(uses deque)
    p.push("cat");
    p.push("ape");
    p.push("dog");
    p.push("mouse");
    p.push("horse");

    // Output the item inserted last using back()
    cout &lt;&lt; p.back() &lt;&lt; endl;

    // Output the size of queue
    size_q = p.size();
    cout &lt;&lt; "size of p is:" &lt;&lt; size_q &lt;&lt; endl;

    // Output items in queue using front()
    // and use pop() to get to next item until
    // queue is empty
    while (!p.empty())
    {
        cout &lt;&lt; p.front() &lt;&lt; endl;
        p.pop();

    }
}

Program Output:

201
size of q is:4
42
100
49
201
horse
size of p is:5
cat
ape
dog
mouse
horse
</code></pre>

</body>
</html>
