<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C Comments</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_c_comments"></a><sup></sup>C Comments</h1>
<p>
A “comment” is a sequence of characters beginning with a forward slash/asterisk combination (<b>/*</b>) that is treated as a single white-space character by the compiler and is otherwise ignored. A comment can include any combination of characters from the representable character set, including newline characters, but excluding the “end comment” delimiter (<b>*/</b>). Comments can occupy more than one line but cannot be nested. </p>
<p>
Comments can appear anywhere a white-space character is allowed. Since the compiler treats a comment as a single white-space character, you cannot include comments within tokens. The compiler ignores the characters in the comment.</p>
<p>
Use comments to document your code. This example is a comment accepted by the compiler:</p>
<pre><code>/* Comments can contain keywords such as
 &nbsp; for and while without generating errors. */
</code></pre>
<p>
Comments can appear on the same line as a code statement:</p>
<pre><code>printf( "Hello\n" );&nbsp; /* Comments can go here */
</code></pre>
<p>
You can choose to precede functions or program modules with a descriptive comment block:</p>
<pre><code>/* MATHERR.C illustrates writing an error routine 
 * for math functions. 
 */ 
</code></pre>
<p>
Since comments cannot contain nested comments, this example causes an error:</p>
<pre><code>/* Comment out this routine for testing 

   /* Open file */
 &nbsp;&nbsp; fh = _open( "myfile.c", _O_RDONLY );
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 &nbsp;&nbsp; .
 */
</code></pre>
<p>
The error occurs because the compiler recognizes the first <code>*/</code>, after the words <code>Open file</code>, as the end of the comment. It tries to process the remaining text and produces an error when it finds the <code>*/</code> outside a comment. </p>
<p>
While you can use comments to render certain lines of code inactive for test purposes, the preprocessor directives <b>#if</b> and <b>#endif</b> and conditional compilation are a useful alternative for this task. For more information, see <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_predir_Preprocessor_Directives">
</object><a href=JavaScript:alink_1.Click()>Preprocessor Directives</a> in the <i>Preprocessor Reference</i>.</p>
<p>
<b>Microsoft Specific —&gt;</b></p>
<p>
The Microsoft compiler also supports single-line comments preceded by two forward slashes (<b>//</b>). If you compile with /Za (ANSI standard), these comments generate errors. These comments cannot extend to a second line.</p>
<pre><code>// This is a valid comment
</code></pre>
<p>
Comments beginning with two forward slashes (<b>//</b>) are terminated by the next newline character that is not preceded by an escape character. In the next example, the newline character is preceded by a backslash (<b>\</b>), creating an “escape sequence.” This escape sequence causes the compiler to treat the next line as part of the previous line. (For more information, see <a href="_clang_escape_sequences.htm">Escape Sequences</a>.) </p>
<pre><code>// my comment \
 &nbsp;&nbsp; i++; 
</code></pre>
<p>
Therefore, the <code>i++;</code> statement is commented out.</p>
<p>
The default for Microsoft C is that the Microsoft extensions are enabled. Use /Za to disable these extensions.</p>
<p>
<b>END Microsoft Specific</b></p>
</font></BODY>
</HTML>
