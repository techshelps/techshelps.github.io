<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Multiple Access</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_multiple_access"></a><sup></sup>Multiple Access</h1>
<p>
In multiple-inheritance lattices involving virtual base classes, a given name can be reached through more than one path. Because different access control can be applied along these different paths, the compiler chooses the path that gives the most access. See Figure 10.3.</p>
<p class=label>
<b>Figure 10.3&nbsp;&nbsp;&nbsp;Access Along Paths of an Inheritance Graph</b></p>
<p>
<img src="l10inh3.gif" border=0></p>
<p>
In Figure 10.3, a name declared in class <code>VBase</code> is always reached through class <code>RightPath</code>. The right path is more accessible because <code>RightPath</code> declares <code>VBase</code> as a public base class, whereas <code>LeftPath</code> declares <code>VBase</code> as private. </p>
</font></BODY>
</HTML>
