<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ctype_base</title></head>
<body bgcolor=white>

<h2><a name="ctype_base">ctype_base</a></h2>
<META NAME="MS-HKWD" CONTENT="ctype_base">
<pre><code>class <b>ctype_base</b> {
public:
    enum <b>mask</b>;
    static const mask <b>space</b>, <b>print</b>, <b>cntrl</b>,
        <b>upper</b>, <b>lower</b>, <b>digit</b>, <b>punct</b>, <b>xdigit</b>,
        <b>alpha</b>, <b>alnum</b>, <b>graph</b>;
    };</code></pre>
<p>The class serves as a base class for facets of template class <a href="LOCALE2_ctype.htm#ctype"><code>ctype</code></a>. It defines just the enumerated type <a name="ctype_base::mask"><code><b>mask</b></code></a> and 
several constants of this type. Each of the constants characterizes a different way to classify characters, as defined by 
the functions with similar names declared in the header <code>&lt;ctype.h&gt;</code>. The constants are:</p>
<ul>
<li><a name="ctype_base::space"><code><b>space</b></code></a> (function <code>isspace</code>)</li>
<li><a name="ctype_base::print"><code><b>print</b></code></a> (function <code>isprint</code>)</li>
<li><a name="ctype_base::cntrl"><code><b>cntrl</b></code></a> (function <code>iscntrl</code>)</li>
<li><a name="ctype_base::upper"><code><b>upper</b></code></a> (function <code>isupper</code>)</li>
<li><a name="ctype_base::lower"><code><b>lower</b></code></a> (function <code>islower</code>)</li>
<li><a name="ctype_base::digit"><code><b>digit</b></code></a> (function <code>isdigit</code>)</li>
<li><a name="ctype_base::punct"><code><b>punct</b></code></a> (function <code>ispunct</code>)</li>
<li><a name="ctype_base::xdigit"><code><b>xdigit</b></code></a> (function <code>isxdigit</code>)</li>
<li><a name="ctype_base::alpha"><code><b>alpha</b></code></a> (function <code>isalpha</code>)</li>
<li><a name="ctype_base::alnum"><code><b>alnum</b></code></a> (function <code>isalnum</code>)</li>
<li><a name="ctype_base::graph"><code><b>graph</b></code></a> (function <code>isgraph</code>)</li>
</ul>
<p>You can characterize a combination of classifications by ORing these constants. In particular, it is always true that <code>alnum 
== (alpha | digit)</code> and <code>graph == (alnum | punct)</code>.</p>
</body>
</html>
