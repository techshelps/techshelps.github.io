<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Friend Declarations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_friend_declarations"></a><sup></sup>Friend Declarations</h1>
<p>
If you declare a friend function that was not previously declared, that function is exported to the enclosing nonclass scope.</p>
<p>
Functions declared in a friend declaration are treated as if they had been declared using the <b>extern</b> keyword. (For more information about <b>extern</b>, see <a href="_pluslang_static_storage.2d.class_specifiers.htm">Static Storage-Class Specifiers</a> in Chapter 6.)</p>
<p>
Although functions with global scope can be declared as friends prior to their prototypes, member functions cannot be declared as friends before the appearance of their complete class declaration. The following code shows why this fails:</p>
<pre><code>class ForwardDeclared;&nbsp;&nbsp; // Class name is known.

class HasFriends
{
 &nbsp;&nbsp; friend int ForwardDeclared::IsAFriend();&nbsp;&nbsp; // Error.
};
</code></pre>
<p>
The preceding example enters the class name <code>ForwardDeclared</code> into scope, but the complete declaration — specifically, the portion that declares the function <code>IsAFriend</code> — is not known. Therefore, the <b>friend</b> declaration in class <code>HasFriends</code> generates an error.</p>
<p>
To declare two classes that are friends of one another, the entire second class must be specified as a friend of the first class. The reason for this restriction is that the compiler has enough information to declare individual friend functions only at the point where the second class is declared.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Although the entire second class must be a friend to the first class, you can select which functions in the first class will be friends of the second class.</p>
</font></BODY>
</HTML>
