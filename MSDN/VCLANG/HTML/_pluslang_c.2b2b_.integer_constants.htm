<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Integer Constants</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.integer_constants"></a><sup></sup>C++ Integer Constants</h1>
<p>
Integer constants are constant data elements that have no fractional parts or exponents. They always begin with a digit. You can specify integer constants in decimal, octal, or hexadecimal form. They can specify signed or unsigned types and long or short types.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>integer-constant</i> :</p>
<p class=indent>
<i>decimal-constant</i> <i>integer-suffix</i><sub>opt</sub><br>
<i>octal-constant</i> <i>integer-suffix</i><sub>opt</sub><br>
<i>hexadecimal-constant</i> <i>integer-suffix</i><sub>opt</sub><br>
<b>'</b><i>c-char-sequence</i><b>'</b></p>
<p class=dt>
<i>decimal-constant</i> :</p>
<p class=indent>
<i>nonzero-digit</i><br>
<i>decimal-constant</i> <i>digit</i></p>
<p class=dt>
<i>octal-constant</i> :</p>
<p class=indent>
<b>0</b><br>
<i>octal-constant</i> <i>octal-digit</i></p>
<p class=dt>
<i>hexadecimal-constant</i> :</p>
<p class=indent>
<b>0x</b> <i>hexadecimal-digit</i><br>
<b>0X</b> <i>hexadecimal-digit</i><br>
<i>hexadecimal-constant</i> <i>hexadecimal-digit</i></p>
<p class=dt>
<i>nonzero-digit</i> : one of</p>
<p class=indent>
<b>1</b> <b>2</b> <b>3</b> <b>4</b> <b>5</b> <b>6</b> <b>7</b> <b>8</b> <b>9</b></p>
<p class=dt>
<i>octal-digit</i> : one of</p>
<p class=indent>
<b>0</b> <b>1</b> <b>2</b> <b>3</b> <b>4</b> <b>5</b> <b>6</b> <b>7</b></p>
<p class=dt>
<i>hexadecimal-digit</i> : one of</p>
<p class=indent>
<b>0</b> <b>1</b> <b>2</b> <b>3</b> <b>4</b> <b>5</b> <b>6</b> <b>7</b> <b>8</b> <b>9</b><br>
<b>a</b> <b>b</b> <b>c</b> <b>d</b> <b>e</b> <b>f</b><br>
<b>A</b> <b>B</b> <b>C</b> <b>D</b> <b>E</b> <b>F</b></p>
<p class=dt>
<i>integer-suffix</i> :</p>
<p class=indent>
<i>unsigned-suffix</i> <i>long-suffix</i><sub>opt</sub><br>
<i>long-suffix</i> <i>unsigned-suffix</i><sub>opt</sub></p>
<p class=dt>
<i>unsigned-suffix</i> : one of</p>
<p class=indent>
<b>u</b> <b>U</b></p>
<p class=dt>
<i>long-suffix</i> : one of</p>
<p class=indent>
<b>l</b> <b>L</b></p>
<p class=dt>
<i>64-bit integer-suffix</i> :</p>
<p class=indent>
<b>i64</b></p>
<p>
To specify integer constants using octal or hexadecimal notation, use a prefix that denotes the base. To specify an integer constant of a given integral type, use a suffix that denotes the type.</p>
<p>
To specify a decimal constant, begin the specification with a nonzero digit. For example:</p>
<pre><code>int i = 157;&nbsp;&nbsp; // Decimal constant
int j = 0198;&nbsp; // Not a decimal number; erroneous octal constant
int k = 0365;&nbsp; // Leading zero specifies octal constant, not decimal
</code></pre>
<p>
To specify an octal constant, begin the specification with 0, followed by a sequence of digits in the range 0 through 7. The digits 8 and 9 are errors in specifying an octal constant. For example:</p>
<pre><code>int i = 0377;   // Octal constant
int j = 0397;   // Error: 9 is not an octal digit
</code></pre>
<p>
To specify a hexadecimal constant, begin the specification with <code>0x</code> or <code>0X</code> (the case of the “x” does not matter), followed by a sequence of digits in the range <code>0</code> through <code>9</code> and <code>a</code> (or <code>A</code>) through <code>f</code> (or <code>F</code>). Hexadecimal digits <code>a</code> (or <code>A</code>) through <code>f</code> (or <code>F</code>) represent values in the range 10 through 15. For example:</p>
<pre><code>int i = 0x3fff;   // Hexadecimal constant
int j = 0X3FFF;   // Equal to i
</code></pre>
<p>
To specify an unsigned type, use either the <b>u</b> or <b>U</b> suffix. To specify a long type, use either the <b>l</b> or <b>L</b> suffix. For example:</p>
<pre><code>unsigned uVal = 328u;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Unsigned value
long lVal = 0x7FFFFFL;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Long value specified 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&nbsp; as hex constant
unsigned long ulVal = 0776745ul;&nbsp; // Unsigned long value
</code></pre>
</font></BODY>
</HTML>
