<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Positive and Negative Subscripts</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_positive_and_negative_subscripts"></a><sup></sup>Positive and Negative Subscripts</h1>
<p>
The first element of an array is element 0. The range of a C++ array is from <i>array</i><b>[</b>0<b>]</b> to <i>array</i><b>[</b><i>size –</i> 1<b>]</b>. However, C++ supports positive and negative subscripts. Negative subscripts must fall within array boundaries or results are unpredictable. The following code illustrates this concept:</p>
<pre><code>#include &lt;iostream.h&gt;

void main()
{
 &nbsp;&nbsp; int iNumberArray[1024];
 &nbsp;&nbsp; int *iNumberLine = &amp;iNumberArray[512];

 &nbsp;&nbsp; cout &lt;&lt; iNumberArray[-256] &lt;&lt; "\n";&nbsp;    // Unpredictable
 &nbsp;&nbsp; cout &lt;&lt; iNumberLine[-256] &lt;&lt; "\n";      // OK
}
</code></pre>
<p>
The negative subscript in <code>iNumberArray</code> can produce a run-time error because it yields an address 256 bytes lower in memory than the origin of the array. The object <code>iNumberLine</code> is initialized to the middle of <code>iNumberArray</code>; it is therefore possible to use both positive and negative array indexes on it. Array subscript errors do not generate compile-time errors, but they yield unpredictable results.</p>
<p>
The subscript operator is commutative. Therefore, the expressions <i>array</i><b>[</b><i>index</i><b>]</b> and <i>index</i><b>[</b><i>array</i><b>]</b> are guaranteed to be equivalent as long as the subscript operator is not overloaded (see <a href="_pluslang_overloaded_operators.htm">Overloaded Operators</a>). The first form is the most common coding practice, but either works.</p>
</font></BODY>
</HTML>
