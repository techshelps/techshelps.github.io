<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Constructors</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_constructors"></a><sup></sup>Constructors</h1>
<p>
A member function with the same name as its class is a constructor function. Constructors cannot return values, even if they have <b>return</b> statements. Specifying a constructor with a return type is an error, as is taking the address of a constructor.</p>
<p>
If a class has a constructor, each object of that type is initialized with the constructor prior to use in a program. (For more information about initialization, see <a href="_pluslang_initialization_using_special_member_functions.htm">Initialization Using Special Member Functions</a>.) </p>
<p>
Constructors are called at the point an object is created. Objects are created as:
<ul type=disc>
<li>
Global (file-scoped or externally linked) objects.<br><br></li>
<li>
Local objects, within a function or smaller enclosing block.<br><br></li>
<li>
Dynamic objects, using the <b>new</b> operator. The <b>new</b> operator allocates an object on the program heap or “free store.”<br><br></li>
<li>
Temporary objects created by explicitly calling a constructor. (For more information, see <a href="_pluslang_temporary_objects.htm">Temporary Objects</a>.)<br><br></li>
<li>
Temporary objects created implicitly by the compiler. (For more information, see <a href="_pluslang_temporary_objects.htm">Temporary Objects</a>.)<br><br></li>
<li>
Data members of another class. Creating objects of class type, where the class type is composed of other class-type variables, causes each object in the class to be created.<br><br></li>
<li>
Base class subobject of a class. Creating objects of derived class type causes the base class components to be created.</li>
</ul>
</font></BODY>
</HTML>
