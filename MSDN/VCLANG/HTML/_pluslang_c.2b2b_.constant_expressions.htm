<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Constant Expressions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.constant_expressions"></a><sup></sup>C++ Constant Expressions</h1>
<p>
C++ requires constant expressions — expressions that evaluate to a constant — for declarations of:
<ul type=disc>
<li>
Array bounds<br><br></li>
<li>
Selectors in case statements<br><br></li>
<li>
Bit-field length specification<br><br></li>
<li>
Enumeration initializers</li>
</ul>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>constant-expression</i> :</p>
<p class=indent>
<i>conditional-expression</i></p>
<p>
The only operands that are legal in constant expressions are:
<ul type=disc>
<li>
Literals<br><br></li>
<li>
Enumeration constants<br><br></li>
<li>
Values declared as const that are initialized with constant expressions<br><br></li>
<li>
sizeof expressions</li>
</ul>
<p>
Nonintegral constants must be converted (either explicitly or implicitly) to integral types to be legal in a constant expression. Therefore, the following code is legal:</p>
<pre><code>const double Size = 11.0;

char chArray[(int)Size];
</code></pre>
<p>
Explicit conversions to integral types are legal in constant expressions; all other types and derived types are illegal except when used as operands to the sizeof operator.</p>
<p>
The comma operator and assignment operators cannot be used in constant expressions.</p>
</font></BODY>
</HTML>
