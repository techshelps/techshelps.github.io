<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Binary Output Files</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_binary_output_files"></a><sup></sup>Binary Output Files</h1>
<p>
Streams were originally designed for text, so the default output mode is text. In text mode, the newline character (hexadecimal 10) expands to a carriage return–linefeed (16-bit only). The expansion can cause problems, as shown here:</p>
<pre><code>#include &lt;fstream.h&gt;
int iarray[2] = { 99, 10 };
void main()
{
 &nbsp;&nbsp; ofstream os( "test.dat" );
 &nbsp;&nbsp; os.write( (char *) iarray, sizeof( iarray ) );
}
</code></pre>
<p>
You might expect this program to output the byte sequence { 99, 0, 10, 0 }; instead, it outputs { 99, 0, 13, 10, 0 }, which causes problems for a program expecting binary input. If you need true binary output, in which characters are written untranslated, you have several choices:
<ul type=disc>
<li>
Construct a stream as usual, then use the <a href="_iostream_ofstream.3a3a.setmode.htm">setmode</a> member function, which changes the mode after the file is opened:<pre><code>ofstream ofs ( "test.dat" );
ofs.setmode( filebuf::binary );
ofs.write( char*iarray, 4 ); // Exactly 4 bytes written
</code></pre>
</li>
<li>
Specify binary output by using the <a href="_iostream_ofstream.htm">ofstream</a> constuctor mode argument: <pre><code>#include &lt;fstream.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;io.h&gt;
int iarray[2] = { 99, 10 };
void main()
{
 &nbsp;&nbsp; ofstream os( "test.dat", ios::binary );
 &nbsp;&nbsp; ofs.write( iarray, 4 ); // Exactly 4 bytes written
}
</code></pre>
</li>
<li>
Use the <a href="_iostream_ios.26_.binary.htm">binary</a> manipulator instead of the <a href="_iostream_ofstream.3a3a.setmode.htm">setmode</a> member function:<pre><code>ofs &lt;&lt; binary;
</code></pre>
<p class=tl>
Use the <a href="_iostream_ios.26_.text.htm">text</a> manipulator to switch the stream to text translation mode.</P></li>
<li>
Open the file using the run-time <a href="_iostream_output_file_stream_member_functions.htm#_iostream_the_open_function_for_output_streams">_open</a> function with a binary mode flag:<pre><code>filedesc fd = _open( "test.dat", 
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _O_BINARY | _O_CREAT | _O_WRONLY );
ofstream ofs( fd );
ofs.write( ( char* ) iarray, 4 ); // Exactly 4 bytes written
</code></pre>
</li>
</ul>
</font></BODY>
</HTML>
