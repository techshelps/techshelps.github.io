<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_ios</title></head>
<body bgcolor=white>

<h2><a name="basic_ios">basic_ios</a></h2>
<META NAME="MS-HKWD" CONTENT="basic_ios">
<p><a href="IOS_basic_iosCCbad.htm#basic_ios::bad"><code><b>bad</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCbasic_ios.htm#basic_ios::basic_ios"><code><b>basic_ios</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCchar_type.htm#basic_ios::char_type"><code><b>char_type</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCclear.htm#basic_ios::clear"><code><b>clear</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCcopyfmt.htm#basic_ios::copyfmt"><code><b>copyfmt</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCeof.htm#basic_ios::eof"><code><b>eof</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCexceptions.htm#basic_ios::exceptions"><code><b>exceptions</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCfail.htm#basic_ios::fail"><code><b>fail</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCgood.htm#basic_ios::good"><code><b>good</b></code></a><code><b> &#183; 
</b></code><a href="IOS_basic_iosCCimbue.htm#basic_ios::imbue"><code><b>imbue</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCinit.htm#basic_ios::init"><code><b>init</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCint_type.htm#basic_ios::int_type"><code><b>int_type</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCnarrow.htm#basic_ios::narrow"><code><b>narrow</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCoff_type.htm#basic_ios::off_type"><code><b>off_type</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCoperatorN.htm#basic_ios::operator!"><code><b>operator!</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCoperator_void_X.htm#basic_ios::operator void *"><code><b>operator void *</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCpos_type.htm#basic_ios::pos_type"><code><b>pos_type</b></code></a><code><b> &#183; 
</b></code><a href="IOS_basic_iosCCrdbuf.htm#basic_ios::rdbuf"><code><b>rdbuf</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCrdstate.htm#basic_ios::rdstate"><code><b>rdstate</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><code><b>setstate</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCtie.htm#basic_ios::tie"><code><b>tie</b></code></a><code><b> &#183; </b></code><a href="IOS_basic_iosCCwiden.htm#basic_ios::widen"><code><b>widen</b></code></a><code><b> </b></code></p>
<pre><code>template &lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <b>basic_ios</b> : public ios_base {
public:
    typedef E <a href="IOS_basic_iosCCchar_type.htm#basic_ios::char_type"><b>char_type</b></a>;
    typedef T::int_type <a href="IOS_basic_iosCCint_type.htm#basic_ios::int_type"><b>int_type</b></a>;
    typedef T::pos_type <a href="IOS_basic_iosCCpos_type.htm#basic_ios::pos_type"><b>pos_type</b></a>;
    typedef T::off_type <a href="IOS_basic_iosCCoff_type.htm#basic_ios::off_type"><b>off_type</b></a>;
    explicit <a href="IOS_basic_iosCCbasic_ios.htm#basic_ios::basic_ios"><b>basic_ios</b></a>(basic_streambuf&lt;E, T&gt;* sb);
    virtual <b>~basic_ios</b>();
    <a href="IOS_basic_iosCCoperator_void_X.htm#basic_ios::operator void *"><b>operator void *</b></a>() const;
    bool <a href="IOS_basic_iosCCoperatorN.htm#basic_ios::operator!"><b>operator!</b></a>() const;
    iostate <a href="IOS_basic_iosCCrdstate.htm#basic_ios::rdstate"><b>rdstate</b></a>() const;
    void <a href="IOS_basic_iosCCclear.htm#basic_ios::clear"><b>clear</b></a>(iostate state = goodbit);
    void <a href="IOS_basic_iosCCsetstate.htm#basic_ios::setstate"><b>setstate</b></a>(iostate state);
    bool <a href="IOS_basic_iosCCgood.htm#basic_ios::good"><b>good</b></a>() const;
    bool <a href="IOS_basic_iosCCeof.htm#basic_ios::eof"><b>eof</b></a>() const;
    bool <a href="IOS_basic_iosCCfail.htm#basic_ios::fail"><b>fail</b></a>() const;
    bool <a href="IOS_basic_iosCCbad.htm#basic_ios::bad"><b>bad</b></a>() const;
    iostate <a href="IOS_basic_iosCCexceptions.htm#basic_ios::exceptions"><b>exceptions</b></a>() const;
    iostate <a href="IOS_basic_iosCCexceptions.htm#basic_ios::exceptions"><b>exceptions</b></a>(iostate except);
    basic_ios&amp; <a href="IOS_basic_iosCCcopyfmt.htm#basic_ios::copyfmt"><b>copyfmt</b></a>(const basic_ios&amp; rhs);
    E <a href="IOS_basic_iosCCfill.htm#basic_ios::fill"><b>fill</b></a>() const;
    E <a href="IOS_basic_iosCCfill.htm#basic_ios::fill"><b>fill</b></a>(E ch);
    basic_ostream&lt;E, T&gt; *<a href="IOS_basic_iosCCtie.htm#basic_ios::tie"><b>tie</b></a>() const;
    basic_ostream&lt;E, T&gt; *<a href="IOS_basic_iosCCtie.htm#basic_ios::tie"><b>tie</b></a>(basic_ostream&lt;E, T&gt; *str);
    basic_streambuf&lt;E, T&gt; *<a href="IOS_basic_iosCCrdbuf.htm#basic_ios::rdbuf"><b>rdbuf</b></a>() const;
    basic_streambuf&lt;E, T&gt; *<a href="IOS_basic_iosCCrdbuf.htm#basic_ios::rdbuf"><b>rdbuf</b></a>(basic_streambuf&lt;E, T&gt; *sb);
    basic_ios&amp; <a href="IOS_basic_iosCCcopyfmt.htm#basic_ios::copyfmt"><b>copyfmt</b></a>(const basic_ios&amp; rhs);
    locale <a href="IOS_basic_iosCCimbue.htm#basic_ios::imbue"><b>imbue</b></a>(const locale&amp; loc);
    E <a href="IOS_basic_iosCCwiden.htm#basic_ios::widen"><b>widen</b></a>(char ch);
    char <a href="IOS_basic_iosCCnarrow.htm#basic_ios::narrow"><b>narrow</b></a>(E ch, char dflt);
protected:
    <a href="IOS_basic_iosCCbasic_ios.htm#basic_ios::basic_ios"><b>basic_ios</b></a>();
    void <a href="IOS_basic_iosCCinit.htm#basic_ios::init"><b>init</b></a>(basic_streambuf&lt;E, T&gt;* sb);
    };</code></pre>
<p>The template class describes the storage and member functions common to both input streams (of template class 
<a href="ISTREAM_basic_istream.htm#basic_istream"><code>basic_istream</code></a>) and output streams (of template class <a href="OSTREAM_basic_ostream.htm#basic_ostream"><code>basic_ostream</code></a>) that depend on the template parameters. 
(The class <a href="IOS_ios_base.htm#ios_base"><code>ios_base</code></a> describes what is common and not dependent on template parameters. An object of class 
<code>basic_ios&lt;E, T&gt;</code> helps control a stream with elements of type <code>E</code>, whose <a href="STRING2_char_traits.htm#character traits">character traits</a> are determined by the class 
<code>T</code>.</p>
<p>An object of class <code>basic_ios&lt;E, T&gt;</code> stores:</p>
<ul>
<li><a href="IOS_ios_base.htm#formatting information">formatting information</a> and <a href="IOS_ios_base.htm#stream state information">stream state information</a> in a base object of type <a href="IOS_ios_base.htm#ios_base"><code>ios_base</code></a></li>
<li>a <a name="fill character">fill character</a> in an object of type <i>E</i></li>
<li>a <a name="tie pointer">tie pointer</a> to an object of type <a href="OSTREAM_basic_ostream.htm#basic_ostream"><code>basic_ostream</code></a><code>&lt;E, T&gt;</code></li>
<li>a <a name="stream buffer pointer">stream buffer pointer</a> to an object of type <a href="STREAMBU_basic_streambuf.htm#basic_streambuf"><code>basic_streambuf</code></a><code>&lt;E, T&gt;</code></li>
</ul>
</body>
</html>
