<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Address of Overloaded Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_address_of_overloaded_functions"></a><sup></sup>Address of Overloaded Functions</h1>
<p>
Use of a function name without arguments returns the address of that function. For example:</p>
<pre><code>int Func( int i, int j );
int Func( long l );

...

int (*pFunc) ( int, int ) = Func;
</code></pre>
<p>
In the preceding example, the first version of <code>Func</code> is selected, and its address is copied into <code>pFunc</code>.</p>
<p>
The compiler determines which version of the function to select by finding a function with an argument list that exactly matches that of the target. The arguments in the overloaded function declarations are matched against one of the following:
<ul type=disc>
<li>
An object being initialized (as shown in the preceding example)<br><br></li>
<li>
The left side of an assignment statement<br><br></li>
<li>
A formal argument to a function<br><br></li>
<li>
A formal argument to a user-defined operator<br><br></li>
<li>
A function return type</li>
</ul>
<p>
If no exact match is found, the expression that takes the address of the function is ambiguous and an error is generated.</p>
<p>
Note that although a nonmember function, <code>Func</code>, was used in the preceding example, the same rules are applied when taking the address of overloaded member functions.</p>
</font></BODY>
</HTML>
