<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>istream_iterator</title></head>
<body bgcolor=white>

<h2><a name="istream_iterator">istream_iterator</a></h2>
<META NAME="MS-HKWD" CONTENT="istream_iterator">
<pre><code>template&lt;class U, class E = char, class T = char_traits&lt;E&gt; &gt;
    class <b>istream_iterator</b>
        : public iterator&lt;input_iterator_tag, U, ptrdiff_t&gt; {
public:
    typedef E <a href="ITERATOR_istream_iteratorCCchar_type.htm#istream_iterator::char_type"><b>char_type</b></a>;
    typedef T <a href="ITERATOR_istream_iteratorCCtraits_type.htm#istream_iterator::traits_type"><b>traits_type</b></a>;
    typedef basic_istream&lt;E, T&gt; <a href="ITERATOR_istream_iteratorCCistream_type.htm#istream_iterator::istream_type"><b>istream_type</b></a>;
    <a href="ITERATOR_istream_iteratorCCistream_iterator.htm#istream_iterator::istream_iterator"><b>istream_iterator</b></a>();
    <a href="ITERATOR_istream_iteratorCCistream_iterator.htm#istream_iterator::istream_iterator"><b>istream_iterator</b></a>(istream_type&amp; is);
    const U&amp; <a href="ITERATOR_istream_iteratorCCoperatorX.htm#istream_iterator::operator*"><b>operator*</b></a>() const;
    const U *<a href="ITERATOR_istream_iteratorCCoperatorMG.htm#istream_iterator::operator-&gt;"><b>operator-&gt;</b></a>() const;
    istream_iterator&lt;U, E, T&gt;&amp; <a href="ITERATOR_istream_iteratorCCoperatorPP.htm#istream_iterator::operator++"><b>operator++</b></a>();
    istream_iterator&lt;U, E, T&gt; <a href="ITERATOR_istream_iteratorCCoperatorPP.htm#istream_iterator::operator++"><b>operator++</b></a>(int);
    };</code></pre>
<p>The template class describes an input iterator object. It extracts objects of class <code><b>U</b></code> from an input stream, which it 
accesses via an object it stores, of type pointer to <code>basic_istream&lt;</code><code><b>E</b></code><code>, </code><code><b>T</b></code><code>&gt;</code>. After constructing or incrementing an 
object of class <code>istream_iterator</code> with a non-null stored pointer, the object attempts to extract and store an object 
of type <code>U</code> from the associated input stream. If the extraction fails, the object effectively replaces the stored pointer with 
a null pointer (thus making an end-of-sequence indicator).</p>
</body>
</html>
