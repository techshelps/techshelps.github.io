<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Type Names</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_type_names"></a><sup></sup>Type Names</h1>
<p>
Type names are used in some declarators in the following ways:
<ul type=disc>
<li>
In explicit conversions<br><br></li>
<li>
As arguments to the <b>sizeof</b> operator<br><br></li>
<li>
As arguments to the <b>new</b> operator<br><br></li>
<li>
In function prototypes<br><br></li>
<li>
In <b>typedef</b> statements</li>
</ul>
<p>
A type name consists of type specifiers, as described in Chapter 6, <a href="_pluslang_declarations.htm">Declarations</a>, and <a href="_pluslang_c.2b2b_.abstract_declarators.htm">Abstract Declarators</a>.</p>
<p>
In the following example, the arguments to the function <b>strcpy</b> are supplied using their type names. In the case of the <code>source</code> argument, <code>const</code> <code>char</code> is the specifier and <code>*</code> is the abstract declarator:</p>
<pre><code>static char *szBuf, *strcpy( char *dest, const char *source );
</code></pre>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>type-name</i> :</p>
<p class=indent>
<i>type-specifier-list</i> <i>abstract-declarator</i><sub>opt</sub></p>
<p class=dt>
<i>type-specifier-list</i> :</p>
<p class=indent>
<i>type-specifier</i> <i>type-specifier-list</i><sub>opt</sub></p>
<p class=dt>
<i>abstract-declarator</i> :</p>
<p class=indent>
<i>ptr-operator</i> <i>abstract-declarator</i><sub>opt</sub><br>
<i>abstract-declarator</i><sub>opt </sub> <b>(</b>  <i>argument-declaration-list</i>  <b>)</b>  <i>cv-qualifier-list</i><sub>opt</sub><br>
<i>abstract-declarator</i><sub>opt</sub>  <b>[</b>  <i>constant-expression</i><sub>opt</sub> <b>]</b><br>
<b>(</b>  <i>abstract-declarator</i>  <b>)</b></p>
</font></BODY>
</HTML>
