<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_streambuf::underflow</title></head>
<body bgcolor=white>

<h3><a name="basic_streambuf::underflow">basic_streambuf::underflow</a></h3>
<META NAME="MS-HKWD" CONTENT="underflow">
<pre><code>virtual int_type <b>underflow</b>();</code></pre>
<p>The protected virtual member function endeavors to extract the current element <code>c</code> from the input stream, without 
advancing the current stream position, and return it as <code>T::</code><a href="STRING2_char_traitsCCto_int_type.htm#char_traits::to_int_type"><code>to_int_type</code></a><code>(c)</code>. It can do so in various ways:</p>
<ul>
<li>If a <a href="STREAMBU_basic_streambuf.htm#read position">read position</a> is available, <code>c</code> is the element stored in the read position. </li>
<li>It can make a read position available by allocating new or additional storage for the <a href="STREAMBU_basic_streambuf.htm#input buffer">input buffer</a>, then reading in, 
from some external source, one or more elements. </li>
</ul>
<p>If the function cannot succeed, it returns <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>()</code>, or throws an exception. Otherwise, it returns the current element in 
the input stream, converted as described above. The default behavior is to return <code>T::eof()</code>.</p>
</body>
</html>
