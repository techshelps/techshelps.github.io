<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>mask_array</title></head>
<body bgcolor=white>

<h2><a name="mask_array">mask_array</a></h2>
<META NAME="MS-HKWD" CONTENT="mask_array">
<pre><code>template&lt;class T&gt;
    class <b>mask_array</b> {
public:
    typedef T <a name="mask_array::value_type"><b>value_type</b></a>;
    void <a name="mask_array::operator="><b>operator=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="#mask_array::operator="><b>operator=</b></a>(const T&amp; x);
    void <a name="mask_array::operator*="><b>operator*=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator/="><b>operator/=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator%="><b>operator%=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator+="><b>operator+=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator-="><b>operator-=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator^="><b>operator^=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator&amp;="><b>operator&amp;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator|="><b>operator|=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator&lt;&lt;="><b>operator&lt;&lt;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::operator&gt;&gt;="><b>operator&gt;&gt;=</b></a>(const valarray&lt;T&gt; x) const;
    void <a name="mask_array::fill"><b>fill</b></a>();
    };</code></pre>
<p>The class describes an object that stores a reference to an object <code>x</code> of class <a href="VALARRAY_valarray.htm#valarray"><code>valarray</code></a><code>&lt;T&gt;</code>, along with an object <code>ba</code> of 
class <a href="VALARRAY_valarrayLboolG.htm#valarray&lt;bool&gt;"><code>valarray&lt;bool&gt;</code></a> which describes the sequence of elements to select from the <code>valarray&lt;T&gt;</code> object.</p>
<p>You construct a <code>mask_array&lt;T&gt;</code> object only by writing an expression of the form <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><code>x[xa]</code></a>. The member functions of 
class <code>mask_array</code> then behave like the corresponding function signatures defined for <code>valarray&lt;T&gt;</code>, except that only 
the sequence of selected elements is affected.</p>
<p>The sequence consists of, at most, <code>ba.</code><a href="VALARRAY_valarrayCCsize.htm#valarray::size"><code>size</code></a><code>()</code> elements. An element <code>j</code> is included only if <code>ba[j]</code> is true. Thus, there are 
as many elements in the sequence as there are true elements in <code>ba</code>. If <code>i</code> is the index of the lowest true element in <code>ba</code>, 
then <code>x[i]</code> is element zero in the selected sequence. For example:</p>
<pre><code>const bool vb[] = {false, false, true, true, false, true};
// x[valarray&lt;bool&gt;(vb, 56] selects eleeents with indices
//   2, 3, 5</code></pre>

</body>
</html>
