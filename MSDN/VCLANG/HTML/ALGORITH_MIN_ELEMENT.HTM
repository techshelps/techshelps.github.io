<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>min_element</title></head>
<body bgcolor=white>

<h2><a name="min_element">min_element</a></h2>
<META NAME="MS-HKWD" CONTENT="min_element">
<pre><code>template&lt;class FwdIt&gt;
    FwdIt <b>min_element</b>(FwdIt first, FwdIt last);
template&lt;class FwdIt, class Pred&gt;
    FwdIt <b>min_element</b>(FwdIt first, FwdIt last, Pred pr);</code></pre>
<p>The first template function determines the lowest value of <code>N</code> in the range <code>[0, last - first)</code> such that, for each <code>M</code> in 
the range <code>[0, last - first)</code>, the predicate <code>*(first + M) &lt; *(first + N)</code> is false. It then returns <code>first + N</code>. 
Thus, the function determines the lowest position that contains the smallest value in the sequence.</p>
<p>The function evaluates the ordering predicate <code>X &lt; Y</code> exactly <code>max((last - first) - 1, 0)</code> times.</p>
<p>The second template function behaves the same, except that it replaces <code>operator&lt;(X, Y)</code> with <code>pr(X, Y)</code>.</p>
<p>Sample programs: <a href="sample_min_element_(STL_Sample).htm#_sample_stl_min_element">min_element</a> and <a href="sample_Predicate_Version_of_min_element_(STL_Sample).htm#_sample_stl_min_elementP">min_element (predicate version)</a>.</p>

</body>
</html>
