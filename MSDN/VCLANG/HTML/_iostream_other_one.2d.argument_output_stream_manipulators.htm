<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other One-Argument Output Stream Manipulators</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_iostream_other_one.2d.argument_output_stream_manipulators"></a><sup></sup>Other One-Argument Output Stream Manipulators</h1>
<p>
To create manipulators that take arguments other than <b>int</b> and <b>long</b>, you must use the <b>IOMANIPdeclare</b> macro, which declares the classes for your new type, as well as the <b>OMANIP</b> macro.</p>
<p>
The following example uses a class <code>money</code>, which is a <b>long</b> type. The <code>setpic</code> manipulator attaches a formatting “picture” string to the class that can be used by the overloaded stream insertion operator of the class <code>money</code>. The picture string is stored as a static variable in the <code>money</code> class rather than as data member of a stream class, so you do not have to derive a new output stream class.</p>
<pre><code>#include &lt;iostream.h&gt;
#include &lt;iomanip.h&gt;
#include &lt;string.h&gt;

typedef char* charp;
IOMANIPdeclare( charp );

class money {
private:
 &nbsp;&nbsp; long value;
 &nbsp;&nbsp; static char *szCurrentPic;
public:
 &nbsp;&nbsp; money( long val ) { value = val; }
 &nbsp;&nbsp; friend ostream&amp; operator &lt;&lt; ( ostream&amp; os, money m ) {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // A more complete function would merge the picture
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // with the value rather than simply appending it
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; os &lt;&lt; m.value &lt;&lt; '[' &lt;&lt; money::szCurrentPic &lt;&lt; ']';
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return os;
 &nbsp;&nbsp; }
 &nbsp;&nbsp; friend ostream&amp; setpic( ostream&amp; os, char* szPic ) {
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; money::szCurrentPic = new char[strlen( szPic ) + 1];
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; strcpy( money::szCurrentPic, szPic );
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return os;
 &nbsp;&nbsp; }
};
char *money::szCurrentPic;&nbsp; // Static pointer to picture

OMANIP(charp) setpic(charp c)
{
 &nbsp;&nbsp; return OMANIP(charp) (setpic, c);
}

void main()
{
 &nbsp;&nbsp; money amt = 35235.22;
 &nbsp;&nbsp; cout &lt;&lt; setiosflags( ios::fixed );
 &nbsp;&nbsp; cout &lt;&lt; setpic( "###,###,###.##" ) &lt;&lt; "amount = " &lt;&lt; amt &lt;&lt; endl;
}
</code></pre>
</font></BODY>
</HTML>
