<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>C++ Additive Operators</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_c.2b2b_.additive_operators"></a><sup></sup>C++ Additive Operators</h1>
<p>
The additive operators are:
<ul type=disc>
<li>
Addition (+)<br><br></li>
<li>
Subtraction (–)</li>
</ul>
<p>
These binary operators have left-to-right associativity.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>additive-expression</i> :</p>
<p class=indent>
<i>multiplicative-expression</i><br>
<i>additive-expression</i> + <i>multiplicative-expression</i><br>
<i>additive-expression</i> – <i>multiplicative-expression</i></p>
<p>
The additive operators take operands of arithmetic or pointer types. The result of the addition (+) operator is the sum of the operands. The result of the subtraction (–) operator is the difference between the operands. If one or both of the operands are pointers, they must be pointers to objects, not to functions.</p>
<p>
Additive operators take operands of <i>arithmetic</i>, <i>integral</i>, and <i>scalar</i> types. These are defined in Table 4.2.</p>
<p class=label>
<b><a name="_pluslang_table_4..2"></a>Table 4.2&nbsp;&nbsp;&nbsp;Types Used with Additive Operators</b></p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=18%><b>Type</b></td>
<td class=label width=82%><b>Meaning</b></td>
</tr>
<tr valign=top>
<td width=18%><i>arithmetic</i></td>
<td width=82%>Integral and floating types are collectively called “arithmetic” types.</td>
</tr>
<tr valign=top>
<td width=18%><i>integral</i></td>
<td width=82%>Types char and int of all sizes (long, short) and enumerations are “integral” types.</td>
</tr>
<tr valign=top>
<td width=18%><i>scalar</i></td>
<td width=82%>Scalar operands are operands of either arithmetic or pointer type.</td>
</tr>
</table><br>
<p>
The legal combinations for these operators are:</p>
<p>
<i>arithmetic</i> + <i>arithmetic</i><br>
<i>scalar</i> + <i>integral</i><br>
<i>integral</i> + <i>scalar</i><br>
<i>arithmetic</i> – <i>arithmetic</i><br>
<i>scalar </i>– <i>scalar</i></p>
<p>
Note that addition and subtraction are not equivalent operations. </p>
<p>
If both operands are of arithmetic type, the conversions covered in <a href="_pluslang_arithmetic_conversions.htm">Arithmetic Conversions</a> in Chapter 3 are applied to the operands, and the result is of the converted type.</p>
</font></BODY>
</HTML>
