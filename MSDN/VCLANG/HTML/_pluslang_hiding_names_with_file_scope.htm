<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Hiding Names with File Scope</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_pluslang_hiding_names_with_file_scope"></a><sup></sup>Hiding Names with File Scope</h1>
<p>
You can hide names with file scope by explicitly declaring the same name in block scope. However, file-scope names can be accessed using the scope-resolution operator (<b>::</b>). For example:</p>
<pre><code>#include &lt;iostream.h&gt;

int i = 7;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // i has file scope--declared
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // outside all blocks

void main( int argc, char *argv[] )
{
   int i = 5;&nbsp; // i has block scope--hides
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // the i with file scope

   cout &lt;&lt; "Block-scoped i has the value: " &lt;&lt; i &lt;&lt; "\n";
   cout &lt;&lt; "File-scoped i has the value: " &lt;&lt; ::i &lt;&lt; "\n";
}
</code></pre>
<p>
The result of the preceding code is:</p>
<pre><code>Block-scoped i has the value: 5
File-scoped i has the value: 7
</code></pre>
</font></BODY>
</HTML>
