<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>valarray</title></head>
<body bgcolor=white>

<h2><a name="valarray">valarray</a></h2>
<META NAME="MS-HKWD" CONTENT="valarray">
<p><a href="VALARRAY_valarrayCCapply.htm#valarray::apply"><code><b>apply</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCcshift.htm#valarray::cshift"><code><b>cshift</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCfill.htm#valarray::fill"><code><b>fill</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCfree.htm#valarray::free"><code><b>free</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCmax.htm#valarray::max"><code><b>max<
/b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCmin.htm#valarray::min"><code><b>min</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperator_T_X.htm#valarray::operator T *"><code><b>operator T *</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorN.htm#valarray::operator!"><code><b>operator!</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorRE.htm#valarray::operator%="><code><b>operator%=</b></code></a><code><b
> &#183;
</b></code><a href="VALARRAY_valarrayCCoperatorASE.htm#valarray::operator&amp;="><code><b>operator&amp;=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorGGE.htm#valarray::operator&gt;&gt;="><code><b>operator&gt;&gt;=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorLLE.htm#valarray::operator&lt;&lt;="><code><b>operator&lt;&lt;=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorXE.htm#valarray::operator*="><code><b>operato
r*=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorP.htm#valarray::operator+"><code><b>operator+</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorPE.htm#valarray::operator+="><code><b>operator+=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorM.htm#valarray::operator-"><code><b>operator-</b></code></a><code><b>
&#183; </b></code><a href="VALARRAY_valarrayCCoperatorME.htm#valarray::operator-="><code><b>operator-=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorDE.htm#valarray::operator/="><code><b>operator/=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><code><b>operator=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><code><b>operator[]</b></code></a><code><b> &#183;
</b></code><a href="VALARRAY_valarrayCCoperatorUE.htm#valarray::operator^="><code><b>operator^=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorOE.htm#valarray::operator|="><code><b>operator|=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCoperatorT.htm#valarray::operator~"><code><b>operator~</b></code></a><code><b>
&#183; </b></code><a href="VALARRAY_valarrayCCresize.htm#valarray::resize"><code><b>resize</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCshift.htm#valarray::shift"><code><b>shift</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCsize.htm#valarray::size"><code><b>size</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCsum.htm#valarray::sum"><code><b>sum</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCvalarray.htm#valarray::v
alarray"><code><b>valarray</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarrayCCvalue_type.htm#valarray::value_type"><code><b>value_type</b></code></a><code><b> </b></code></p>
<pre><code>template&lt;class T&gt;
    class <b>valarray</b> {
public:
    typedef T <a href="VALARRAY_valarrayCCvalue_type.htm#valarray::value_type"><b>value_type</b></a>;
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>();
    explicit <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(size_t n);
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const T&amp; val, size_t n));
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const T *p, size_t n);
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const slice_array&lt;T&gt;&amp; sa);
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const gslice_array&lt;T&gt;&amp; ga);
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const mask_array&lt;T&gt;&amp; ma);
    <a href="VALARRAY_valarrayCCvalarray.htm#valarray::valarray"><b>valarray</b></a>(const indirect_array&lt;T&gt;&amp; ia);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const valarray&lt;T&gt;&amp; va);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const slice_array&lt;T&gt;&amp; sa);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const gslice_array&lt;T&gt;&amp; ga);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const mask_array&lt;T&gt;&amp; ma);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorE.htm#valarray::operator="><b>operator=</b></a>(const indirect_array&lt;T&gt;&amp; ia);
    T <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(size_t n) const;
    T&amp; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(size_t n);
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(slice sa) const;
    slice_array&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(slice sa);
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const gslice&amp; ga) const;
    gslice_array&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const gslice&amp; ga);
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const valarray&lt;bool&gt;&amp; ba) const;
    mask_array&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const valarray&lt;bool&gt;&amp; ba);
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const valarray&lt;size_t&gt;&amp; xa) const;
    indirect_array&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><b>operator[]</b></a>(const valarray&lt;size_t&gt;&amp; xa);
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorP.htm#valarray::operator+"><b>operator+</b></a>();
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorM.htm#valarray::operator-"><b>operator-</b></a>();
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCoperatorT.htm#valarray::operator~"><b>operator~</b></a>();
    valarray&lt;bool&gt; <a href="VALARRAY_valarrayCCoperatorN.htm#valarray::operator!"><b>operator!</b></a>();
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorXE.htm#valarray::operator*="><b>operator*=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorXE.htm#valarray::operator*="><b>operator*=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorDE.htm#valarray::operator/="><b>operator/=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorDE.htm#valarray::operator/="><b>operator/=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorRE.htm#valarray::operator%="><b>operator%=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorRE.htm#valarray::operator%="><b>operator%=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorPE.htm#valarray::operator+="><b>operator+=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorPE.htm#valarray::operator+="><b>operator+=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorME.htm#valarray::operator-="><b>operator-=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorME.htm#valarray::operator-="><b>operator-=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorUE.htm#valarray::operator^="><b>operator^=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorUE.htm#valarray::operator^="><b>operator^=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorASE.htm#valarray::operator&amp;="><b>operator&amp;=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorASE.htm#valarray::operator&amp;="><b>operator&amp;=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorOE.htm#valarray::operator|="><b>operator|=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorOE.htm#valarray::operator|="><b>operator|=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorLLE.htm#valarray::operator&lt;&lt;="><b>operator&lt;&lt;=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorLLE.htm#valarray::operator&lt;&lt;="><b>operator&lt;&lt;=</b></a>(const T&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorGGE.htm#valarray::operator&gt;&gt;="><b>operator&gt;&gt;=</b></a>(const valarray&lt;T&gt;&amp; x);
    valarray&lt;T&gt;&amp; <a href="VALARRAY_valarrayCCoperatorGGE.htm#valarray::operator&gt;&gt;="><b>operator&gt;&gt;=</b></a>(const T&amp; x);
    size_t <a href="VALARRAY_valarrayCCsize.htm#valarray::size"><b>size</b></a>() const;
    T <a href="VALARRAY_valarrayCCsum.htm#valarray::sum"><b>sum</b></a>() const;
    T <a href="VALARRAY_valarrayCCmax.htm#valarray::max"><b>max</b></a>() const;
    T <a href="VALARRAY_valarrayCCmin.htm#valarray::min"><b>min</b></a>() const;
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCshift.htm#valarray::shift"><b>shift</b></a>(int n) const;
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCcshift.htm#valarray::cshift"><b>cshift</b></a>(int n) const;
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCapply.htm#valarray::apply"><b>apply</b></a>(T fn(T)) const;
    valarray&lt;T&gt; <a href="VALARRAY_valarrayCCapply.htm#valarray::apply"><b>apply</b></a>(T fn(const T&amp;)) const;
    void <a href="VALARRAY_valarrayCCfill.htm#valarray::fill"><b>fill</b></a>(const T&amp; val);
    void <a href="VALARRAY_valarrayCCfree.htm#valarray::free"><b>free</b></a>();
    void <a href="VALARRAY_valarrayCCresize.htm#valarray::resize"><b>resize</b></a>(size_t n, const T&amp; c = T());
    };</code></pre>
<p>The template class describes an object that controls a varying-length sequence of elements of <b>type </b><code><b>T</b></code>. The sequence is
stored as an array of <code><b>T</b></code>. It differs from template class <a href="VECTOR_vector.htm#vector"><code>vector</code></a> in two important ways:</p>
<ul>
<li>It defines numerous arithmetic operations between corresponding elements of <code>valarray&lt;T&gt;</code> objects of the same
type and length, such as <code>x = cos(y) + sin(z)</code>.</li>
<li>It defines a variety of interesting ways to subscript a <code>valarray&lt;T&gt;</code> object, by overloading <a href="VALARRAY_valarrayCCoperatorCD.htm#valarray::operator[]"><code>operator[]</code></a>.</li>
</ul>
</body>
</html>
