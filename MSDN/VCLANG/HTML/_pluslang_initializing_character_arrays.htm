<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing Character Arrays</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_initializing_character_arrays"></a><sup></sup>Initializing Character Arrays</h1>
<p>
Character arrays can be initialized in one of two ways:
<ul type=disc>
<li>
Individually, as follows:<pre><code>char chABCD[4] = { 'a', 'b', 'c', 'd' };
</code></pre>
</li>
<li>
With a string, as follows:<pre><code>char chABCD[5] = "abcd";
</code></pre>
</li>
</ul>
<p>
In the second case, where the character array is initialized with a string, the compiler appends a trailing <code>'\0'</code> (end-of-string character). Therefore, the array must be at least one larger than the number of characters in the string.</p>
<p>
Because most string handling uses the standard library functions or relies on the presence of the trailing end-of-string character, it is common to see unbounded array declarations initialized with strings:</p>
<pre><code>char chABCD[] = "ABCD";
</code></pre>
</font></BODY>
</HTML>
