<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>operator&gt;=</title></head>
<body bgcolor=white>

<h2><a name="operator&gt;=">operator&gt;=</a></h2>
<META NAME="MS-HKWD" CONTENT="operator>=">
<pre><code>template&lt;class E, class T, class A&gt;
    bool <b>operator&gt;=</b>(
        const basic_string&lt;E, T, A&gt;&amp; lhs,
        const basic_string&lt;E, T, A&gt;&amp; rhs);
template&lt;class E, class T, class A&gt;
    bool <b>operator&gt;=</b>(
        const basic_string&lt;E, T, A&gt;&amp; lhs,
        const E *rhs);
template&lt;class E, class T, class A&gt;
    bool <b>operator&gt;=</b>(
        const E *lhs,
        const basic_string&lt;E, T, A&gt;&amp; rhs);</code></pre>
<p>Each template function overloads <code>operator&gt;=</code> to compare two objects of template class <a href="STRING2_basic_string.htm#basic_string"><code>basic_string</code></a>. All 
effectively return <code>basic_string&lt;E, T, A&gt;(lhs).</code><a href="STRING2_basic_stringCCcompare.htm#basic_string::compare"><code>compare</code></a><code>(rhs) &gt;= 0</code>.</p>
<p>See the related <a href="sample_stringCCoperatorGE_(STL_Sample).htm#_sample_stl_stringCCoperatorGTE">sample program</a>.</p>

</body>
</html>
