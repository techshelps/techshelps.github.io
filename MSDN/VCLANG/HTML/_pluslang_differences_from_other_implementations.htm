<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Differences from Other Implementations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2"><h1><a name="_pluslang_differences_from_other_implementations"></a>Differences from Other Implementations</h1>
<p>
<b>Microsoft Specific </b></p>
<p>
Templates are not officially standardized and, as a result, different C++ compiler vendors have implemented them differently. The following list shows some differences between this version of Visual C++ and other compilers. Note that this list will change in future versions of the compiler.
<ul type=disc>
<li>
The compiler cannot instantiate a template outside of the module in which it is defined.<br><br></li>
<li>
Templates cannot be used with functions declared with <b>__declspec (dllimport)</b> or <b>__declspec (dllexport)</b>.<br><br></li>
<li>
All template arguments must be of an unambiguous type that exactly matches that of the template parameter list. For example:<pre><code>template&lt; class T &gt; T check( T );
template&lt; class S &gt; void watch( int (*)(S) );
watch( check );&nbsp;&nbsp;&nbsp;&nbsp; //error
</code></pre>
<p class=tl>
The compiler should instantiate the <code>check</code> templated function in the form <code>int check( int )</code>, but the inference can not be followed.</P></li>
<li>
Friend functions must be declared before they are used in a templated class. You cannot have a friend function defined within a class definition. This is because the friend function could be a templated function, which would cause an illegal nested template definition.</li>
</ul>
<p>
<b>END Microsoft Specific</b></p>
</font></BODY>
</HTML>
