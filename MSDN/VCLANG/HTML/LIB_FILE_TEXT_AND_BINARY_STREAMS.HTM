<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Text and Binary Streams</title></head>
<body bgcolor=white>

<h2><a name="Text and Binary Streams">Text and Binary Streams</a></h2>
<META NAME="MS-HKWD" CONTENT="text and binary streams">
<p>A <a name="text stream"><b>text stream</b></a> consists of one or more <a name="text lines"><b>lines</b></a> of text that can be written to a text-oriented display so that they can be 
read. When reading from a text stream, the program reads an <code><i>NL</i></code> (newline) at the end of each line. When writing to a 
text stream, the program writes an <code><i>NL</i></code> to signal the end of a line. To match differing conventions among target 
environments for representing text in files, the library functions can alter the number and representations of characters 
transmitted between the program and a text stream.</p>
<p>Thus, positioning within a text stream is limited. You can obtain the current <a href="LIB_FILE_Controlling_Streams.htm#file-position indicator">file-position indicator</a> by calling <code>fgetpos</code> or 
<code>ftell</code>. You can place a text stream at a position obtained this way, or at the beginning or end of the stream, by 
calling <code>fsetpos</code> or <code>fseek</code>. Any other change of position might well be unsupported.</p>
<p>For maximum portability, the program should not write:</p>
<ul>
<li>Empty files </li>
<li><code><i>Space</i></code> characters at the end of a line </li>
<li>Partial lines (by omitting the <code><i>NL</i></code> at the end of a file) </li>
<li>Characters other than the printable characters, <code><i>NL</i></code>, and <code><i>HT</i></code> (horizontal tab) </li>
</ul>
<p>If you follow these rules, the sequence of characters you read from a text stream (either as byte or multibyte characters) 
will match the sequence of characters you wrote to the text stream when you created the file. Otherwise, the library 
functions can remove a file you create if the file is empty when you close it. Or they can alter or delete characters you 
write to the file.</p>
<p>A <a name="binary stream"><b>binary stream</b></a> consists of one or more bytes of arbitrary information. You can write the value stored in an arbitrary 
object to a (byte-oriented) binary stream and read exactly what was stored in the object when you wrote it. The library 
functions do not alter the bytes you transmit between the program and a binary stream. They can, however, append an 
arbitrary number of null bytes to the file that you write with a binary stream. The program must deal with these 
additional null bytes at the end of any binary stream.</p>
<p>Thus, positioning within a binary stream is well defined, except for positioning relative to the end of the stream. You can 
obtain and alter the current <a href="LIB_FILE_Controlling_Streams.htm#file-position indicator">file-position indicator</a> the same as for a <a href="LIB_FILE_Text_and_Binary_Streams.htm#text stream">text stream</a>. Moreover, the offsets used by <code>ftell</code> 
and <code>fseek</code> count bytes from the beginning of the stream (which is byte zero), so integer arithmetic on these offsets 
yields predictable results.</p>
</body>
</html>
