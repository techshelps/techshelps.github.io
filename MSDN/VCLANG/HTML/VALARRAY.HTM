</html>
<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">

<html>

<head>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>&lt;valarray&gt;</title>
<meta name="GENERATOR" content="Microsoft FrontPage 1.1">
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
</head>

<body bgcolor=white>

<h1><a name="&lt;valarray&gt;">&lt;valarray&gt;</a></h1>
<META NAME="MS-HKWD" CONTENT="valarray header file">
<p><a href="VALARRAY_gslice.htm#gslice"><code><b>gslice</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_gslice_array.htm#gslice_array"><code><b>gslice_array</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_indirect_array.htm#indirect_array"><code><b>indirect_array</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_mask_array.htm#mask_array"><code><b>mask_array</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_slice.htm#slice"><code><b>slice</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_slice_array.htm#slice_array"><code><b>slice_array</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_valarray.htm#valarray"><code><b>valarray</b></code></a><code><b> &#183; 
</b></code><a href="VALARRAY_valarrayLboolG.htm#valarray&lt;bool&gt;"><code><b>valarray&lt;bool&gt;</b></code></a><code><b> </b></code></p>
<p><a href="VALARRAY_abs.htm#abs"><code><b>abs</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_acos.htm#acos"><code><b>acos</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_asin.htm#asin"><code><b>asin</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_atan.htm#atan"><code><b>atan</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_atan2.htm#atan2"><code><b>atan2</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_cos.htm#cos"><code><b>cos</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_cosh.htm#cosh"><code><b>cosh</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_exp.htm#exp"><code><b>exp</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_log.htm#log"><code><b>log</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_log10.htm#log10"><code><b>log10</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_max.htm#max"><code><b>max</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_min.htm#min"><code><b>min</b></code></a><code><b> &#183; 
</b></code><a href="VALARRAY_operatorNE.htm#operator!="><code><b>operator!=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorR.htm#operator%"><code><b>operator%</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorAS.htm#operator&amp;"><code><b>operator&amp;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorASAS.htm#operator&amp;&amp;"><code><b>operator&amp;&amp;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorG.htm#operator&gt;"><code><b>operator&gt;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorGG.htm#operator&gt;&gt;"><code><b>operator&gt;&gt;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorGE.htm#operator&gt;="><code><b>operator&gt;=</b></code></a><code><b> &#183; 
</b></code><a href="VALARRAY_operatorL.htm#operator&lt;"><code><b>operator&lt;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorLL.htm#operator&lt;&lt;"><code><b>operator&lt;&lt;</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorLE.htm#operator&lt;="><code><b>operator&lt;=</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorX.htm#operator*"><code><b>operator*</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorP.htm#operator+"><code><b>operator+</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorM.htm#operator-"><code><b>operator-</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorD.htm#operator/"><code><b>operator/</b></code></a><code><b> &#183; 
</b></code><a href="VALARRAY_operatorEE.htm#operator=="><code><b>operator==</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorU.htm#operator^"><code><b>operator^</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorO.htm#operator|"><code><b>operator|</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_operatorOO.htm#operator||"><code><b>operator||</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_pow.htm#pow"><code><b>pow</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_sin.htm#sin"><code><b>sin</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_sinh.htm#sinh"><code><b>sinh</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_sqrt.htm#sqrt"><code><b>sqrt</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_tan.htm#tan"><code><b>tan</b></code></a><code><b> &#183; </b></code><a href="VALARRAY_tanh.htm#tanh"><code><b>tanh</b></code></a><code><b> </b></code></p>
<pre><code>namespace std {
class <a href="VALARRAY_slice.htm#slice"><b>slice</b></a>;
class <a href="VALARRAY_gslice.htm#gslice"><b>gslice</b></a>;
        // <b>TEMPLATE CLASSES</b>
template&lt;class T&gt;
    class <a href="VALARRAY_valarray.htm#valarray"><b>valarray</b></a>;
template&lt;class T&gt;
    class <a href="VALARRAY_slice_array.htm#slice_array"><b>slice_array</b></a>;
template&lt;class T&gt;
    class <a href="VALARRAY_gslice_array.htm#gslice_array"><b>gslice_array</b></a>;
template&lt;class T&gt;
    class <a href="VALARRAY_mask_array.htm#mask_array"><b>mask_array</b></a>;
template&lt;class T&gt;
    class <a href="VALARRAY_indirect_array.htm#indirect_array"><b>indirect_array</b></a>;
        // <b>TEMPLATE FUNCTIONS</b>
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorX.htm#operator*"><b>operator*</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorX.htm#operator*"><b>operator*</b></a>(const valarray&lt;T&gt; lhs,
        const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorX.htm#operator*"><b>operator*</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorD.htm#operator/"><b>operator/</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorD.htm#operator/"><b>operator/</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorD.htm#operator/"><b>operator/</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorR.htm#operator%"><b>operator%</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const vararray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorR.htm#operator%"><b>operator%</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorR.htm#operator%"><b>operator%</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorP.htm#operator+"><b>operator+</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorP.htm#operator+"><b>operator+</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorP.htm#operator+"><b>operator+</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorM.htm#operator-"><b>operator-</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorM.htm#operator-"><b>operator-</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorM.htm#operator-"><b>operator-</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorU.htm#operator^"><b>operator^</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorU.htm#operator^"><b>operator^</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorU.htm#operator^"><b>operator^</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorAS.htm#operator&amp;"><b>operator&amp;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorAS.htm#operator&amp;"><b>operator&amp;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorAS.htm#operator&amp;"><b>operator&amp;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorO.htm#operator|"><b>operator|</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorO.htm#operator|"><b>operator|</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorO.htm#operator|"><b>operator|</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorLL.htm#operator&lt;&lt;"><b>operator&lt;&lt;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorLL.htm#operator&lt;&lt;"><b>operator&lt;&lt;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorLL.htm#operator&lt;&lt;"><b>operator&lt;&lt;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorGG.htm#operator&gt;&gt;"><b>operator&gt;&gt;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorGG.htm#operator&gt;&gt;"><b>operator&gt;&gt;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_operatorGG.htm#operator&gt;&gt;"><b>operator&gt;&gt;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorASAS.htm#operator&amp;&amp;"><b>operator&amp;&amp;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorASAS.htm#operator&amp;&amp;"><b>operator&amp;&amp;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorASAS.htm#operator&amp;&amp;"><b>operator&amp;&amp;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;biil&gt; <a href="VALARRAY_operatorOO.htm#operator||"><b>operator||</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorOO.htm#operator||"><b>operator||</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorOO.htm#operator||"><b>operator||</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorEE.htm#operator=="><b>operator==</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorEE.htm#operator=="><b>operator==</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorEE.htm#operator=="><b>operator==</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorNE.htm#operator!="><b>operator!=</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorNE.htm#operator!="><b>operator!=</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorNE.htm#operator!="><b>operator!=</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorL.htm#operator&lt;"><b>operator&lt;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorL.htm#operator&lt;"><b>operator&lt;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorL.htm#operator&lt;"><b>operator&lt;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorGE.htm#operator&gt;="><b>operator&gt;=</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorGE.htm#operator&gt;="><b>operator&gt;=</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorGE.htm#operator&gt;="><b>operator&gt;=</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorG.htm#operator&gt;"><b>operator&gt;</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorG.htm#operator&gt;"><b>operator&gt;</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorG.htm#operator&gt;"><b>operator&gt;</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorLE.htm#operator&lt;="><b>operator&lt;=</b></a>(const valarray&lt;T&gt;&amp; lhs,
        const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorLE.htm#operator&lt;="><b>operator&lt;=</b></a>(const valarray&lt;T&gt; lhs, const T&amp; rhs);
template&lt;class T&gt;
    valarray&lt;bool&gt; <a href="VALARRAY_operatorLE.htm#operator&lt;="><b>operator&lt;=</b></a>(const T&amp; lhs, const valarray&lt;T&gt;&amp; rhs);
template&lt;class T&gt;
    T <a href="VALARRAY_max.htm#max"><b>max</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    T <a href="VALARRAY_min.htm#min"><b>min</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_abs.htm#abs"><b>abs</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_acos.htm#acos"><b>acos</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_asin.htm#asin"><b>asin</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_atan.htm#atan"><b>atan</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_atan2.htm#atan2"><b>atan2</b></a>(const valarray&lt;T&gt;&amp; x,
        const valarray&lt;T&gt;&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_atan2.htm#atan2"><b>atan2</b></a>(const valarray&lt;T&gt; x, const T&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_atan2.htm#atan2"><b>atan2</b></a>(const T&amp; x, const valarray&lt;T&gt;&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_cos.htm#cos"><b>cos</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_cosh.htm#cosh"><b>cosh</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_exp.htm#exp"><b>exp</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_log.htm#log"><b>log</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&amp;ttT&gt; <a href="VALARRAY_log10.htm#log10"><b>log10</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_pow.htm#pow"><b>pow</b></a>(const valarray&lt;T&gt;&amp; x,
        const valarray&lt;T&gt;&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_pow.htm#pow"><b>pow</b></a>(const valarray&lt;T&gt; x, const T&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_pow.htm#pow"><b>pow</b></a>(const T&amp; x, const valarray&lt;T&gt;&amp; y);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_sin.htm#sin"><b>sin</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_sinh.htm#sinh"><b>sinh</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_sqrt.htm#sqrt"><b>sqrt</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_tan.htm#tan"><b>tan</b></a>(const valarray&lt;T&gt;&amp; x);
template&lt;class T&gt;
    valarray&lt;T&gt; <a href="VALARRAY_tanh.htm#tanh"><b>tanh</b></a>(const valarray&lt;T&gt;&amp; x);
    };</code></pre>
<p>Include the standard header <code><b>&lt;valarray&gt;</b></code> to define the template class <a href="VALARRAY_valarray.htm#valarray"><code>valarray</code></a> and numerous supporting template 
classes and functions. These template classes and functions are permitted unusual latitude, in the interest of improved 
performance. Specifically, any function returning <code>valarray&lt;T&gt;</code> may return an object of some other type <code>T'</code>. In that 
case, any function that accepts one or more arguments of type <code>valarray&lt;T&gt;</code> must have overloads that accept arbitrary 
combinations of those arguments, each replaced with an argument of type <code>T'</code>. (Put simply, the only way you can detect 
such a substitution is to go looking for it.)</p>

</body>
</html>
