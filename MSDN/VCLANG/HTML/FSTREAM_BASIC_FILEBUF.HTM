<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_filebuf</title></head>
<body bgcolor=white>

<h2><a name="basic_filebuf">basic_filebuf</a></h2>
<META NAME="MS-HKWD" CONTENT="basic_filebuf">
<pre><code>template &lt;class E, class T = char_traits&lt;E&gt; &gt;
    class <b>basic_filebuf</b> : public basic_streambuf&lt;E, T&gt; {
public:
    <a href="FSTREAM_basic_filebuf.htm#basic_filebuf"><b>basic_filebuf</b></a>();
    bool <a href="FSTREAM_basic_filebufCCis_open.htm#basic_filebuf::is_open"><b>is_open</b></a>() const;
    basic_filebuf *<a href="FSTREAM_basic_filebufCCopen.htm#basic_filebuf::open"><b>open</b></a>(const char *s, ios_base::openmode mode);
    basic_filebuf *<a href="FSTREAM_basic_filebufCCclose.htm#basic_filebuf::close"><b>close</b></a>();
protected:
    virtual pos_type <a href="FSTREAM_basic_filebufCCseekoff.htm#basic_filebuf::seekoff"><b>seekoff</b></a>(off_type off, ios_base::seekdir way,
        ios_base::openmode which = ios_base::in | ios_base::out);
    virtual pos_type <a href="FSTREAM_basic_filebufCCseekpos.htm#basic_filebuf::seekpos"><b>seekpos</b></a>(pos_type pos,
        ios_base::openmode which = ios_base::in | ios_base::out);
    virtual int_type <a href="FSTREAM_basic_filebufCCunderflow.htm#basic_filebuf::underflow"><b>underflow</b></a>();
    virtual int_type <a href="FSTREAM_basic_filebufCCpbackfail.htm#basic_filebuf::pbackfail"><b>pbackfail</b></a>(int_type c = T::eof());
    virtual int_type <a href="FSTREAM_basic_filebufCCoverflow.htm#basic_filebuf::overflow"><b>overflow</b></a>(int_type c = T::eof());
    virtual int <a href="FSTREAM_basic_filebufCCsync.htm#basic_filebuf::sync"><b>sync</b></a>();
    virtual basic_streambuf&lt;E, T&gt; *<a href="FSTREAM_basic_filebufCCsetbuf.htm#basic_filebuf::setbuf"><b>setbuf</b></a>(E *s, streamsize n);
    };</code></pre>
<p>The template class describes a <a name="stream buffer"><b>stream buffer</b></a> that controls the transmission of elements to and from a sequence of 
elements stored in an external <a href="LIB_FILE.htm#files">file</a>.</p>
<p>An object of class <code>basic_filebuf&lt;E, T&gt;</code> stores a <a name="file pointer"><b>file pointer</b></a>, which designates the <code>FILE</code> object that controls the 
<a href="LIB_FILE.htm#stream">stream</a> associated with an <a href="LIB_FILE.htm#file open">open</a> file. It also stores pointers to two <a href="FSTREAM_basic_filebufCCopen.htm#file conversion facet">file conversion facets</a> for use by the protected 
member functions <a href="FSTREAM_basic_filebufCCoverflow.htm#basic_filebuf::overflow"><code>overflow</code></a> and <a href="FSTREAM_basic_filebufCCunderflow.htm#basic_filebuf::underflow"><code>underflow</code></a>.</p>
</body>
</html>
