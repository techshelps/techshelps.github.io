<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>sizeof Operator</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_sizeof_operator"></a><sup></sup>sizeof Operator</h1>
<p>
The <b>sizeof</b> operator yields the size of its operand with respect to the size of type <b>char</b>. The result of the <b>sizeof</b> operator is of type <b>size_t</b>, an integral type defined in the include file STDDEF.H. The operand to <b>sizeof</b> can be one of the following:
<ul type=disc>
<li>
A type name. To use <b>sizeof</b> with a type name, the name must be enclosed in parentheses.<br><br></li>
<li>
An expression. When used with an expression, <b>sizeof</b> can be specified with or without the parentheses. The expression is not evaluated.</li>
</ul>
<p>
When the <b>sizeof</b> operator is applied to an object of type <b>char</b>, it yields 1. When the <b>sizeof</b> operator is applied to an array, it yields the total number of bytes in that array. For example:</p>
<pre><code>#include &lt;iostream.h&gt;

void main()
{
 &nbsp;&nbsp; char szHello[] = "Hello, world!";

 &nbsp;&nbsp; cout &lt;&lt; "The size of the type of " &lt;&lt; szHello &lt;&lt; " is: "
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&lt; sizeof( char ) &lt;&lt; "\n";
 &nbsp;&nbsp; cout &lt;&lt; "The length of " &lt;&lt; szHello &lt;&lt; " is: "
 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;&lt; sizeof szHello &lt;&lt; "\n";
}
</code></pre>
<p>
The program output is:</p>
<pre><code>The size of the type of Hello, world! is: 1
The length of Hello, world! is: 14
</code></pre>
<p>
When the <b>sizeof</b> operator is applied to a <b>class</b>, <b>struct</b>, or <b>union</b> type, the result is the number of bytes in an object of that <b>class</b>, <b>struct</b>, or <b>union</b> type, plus any padding added to align members on word boundaries. (The /Zp [pack structure members] compiler option and the <b>pack</b> pragma affect alignment boundaries for members.) The <b>sizeof</b> operator never yields 0, even for an empty class.</p>
<p>
The <b>sizeof</b> operator cannot be used with the following operands:
<ul type=disc>
<li>
Functions. (However, <b>sizeof</b> can be applied to pointers to functions.)<br><br></li>
<li>
Bit fields.<br><br></li>
<li>
Undefined classes.<br><br></li>
<li>
The type <b>void</b>.<br><br></li>
<li>
Incomplete types.<br><br></li>
<li>
Parenthesized names of incomplete types.</li>
</ul>
<p>
When the <b>sizeof</b> operator is applied to a reference, the result is the same as if <b>sizeof</b> had been applied to the object itself.</p>
<p>
The <b>sizeof</b> operator is often used to calculate the number of elements in an array using an expression of the form:</p>
<pre><code>sizeof array / sizeof array[0]
</code></pre>
</font></BODY>
</HTML>
