<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using __based in 32-bit Compilations</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang___based"></a><sup></sup>Using __based in 32-bit Compilations</h1>
<p>
Based addressing is useful when you need precise control over the segment in which objects are allocated (static and dynamic based data).</p>
<p>
The only form of based addressing acceptable in 32-bit compilations is “based on a pointer” that defines a type that contains a 32-bit displacement to a 32-bit base or based on <b>void</b>.</p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>based-range-modifier</i> :</p>
<p class=indent>
<b>__based</b> <b>(</b> <i>base-expression</i> <b>)</b></p>
<p class=dt>
<i>base-expression</i> :</p>
<p class=indent>
<i>based-variable</i><br>
<i>based-abstract-declarator</i><br>
<i>segment-name</i><br>
<i>segment-cast</i></p>
<p class=dt>
<i>based-variable</i> :</p>
<p class=indent>
<i>identifier</i></p>
<p class=dt>
<i>based-abstract-declarator</i> :</p>
<p class=indent>
<i>abstract-declarator</i></p>
<p class=dt>
<i>base-type</i> :</p>
<p class=indent>
<i>type-name</i></p>
</font></BODY>
</HTML>
