<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>deque::size and deque::resize (STL Sample)</title></head>
<body bgcolor=white>

<h2><a name="_sample_stl_dequeCCsize_resize">deque::size and deque::resize (STL Sample)</a></h2>
<p>The sample code below illustrates how to use the <code>deque::size</code> and <code>deque::resize</code> STL functions in Visual C++.</p>
<p><b>Required Header: </b><br>
&lt;deque&gt;</p>
<b>Prototype:</b><br>
<pre><code>
   size_type size() const;
   void resize(size_type n, T x = T());
   size_type max_size() const;
</code></pre></p>
<p>Note: The class/parameter names in the prototype do not match the version in the header file. Some have been
modified to improve readability.</p>
<p><b>Description:</b><br>
 The member function size returns the length of the controlled sequence.  The member function resize ensures that size() henceforth returns n. If it must make the controlled sequence longer, it appends elements with value x. If no value is supplied, the default value depends upon the type. For example, if it is a deque of chars, the default is a blank. If it is a deque of ints, the default is zero.  The member function max_size returns the length of the longest sequence that the object can control.  </p>
<p><b>Sample Code: </b></p>
<pre><code>//////////////////////////////////////////////////////////////////////
//
// Compile options needed: -GX
//
// deque.cpp :
//
// Functions:
//
//    size
//    resize
//    max_size
//    begin
//    end
//////////////////////////////////////////////////////////////////////

/* Compile options needed:-GX
*/
#include &lt;iostream&gt;
#include &lt;deque&gt;

using namespace std;


typedef deque&lt;char &gt;  CHARDEQUE;
void print_contents (CHARDEQUE  deque, char*);

void main()
{
    //create a  with  A, B, C and D
    CHARDEQUE  a;
    a.push_back('A');
    a.push_back('B');
    a.push_back('C');
    a.push_back('D');

    //print out the contents

    print_contents (a,"a");
    cout &lt;&lt;"max_size of a is " &lt;&lt;a.max_size() &lt;&lt;endl;
    cout &lt;&lt;"size of a is " &lt;&lt;a.size() &lt;&lt;endl;

    //let us increase the size to 10
    // and set the new elements to be 'X'
    a.resize(10,'X');
    print_contents (a,"a");
    cout &lt;&lt;"size of a is " &lt;&lt;a.size() &lt;&lt;endl;

    //let us resize it to 5
    a.resize(5);
    print_contents (a,"a");
    cout &lt;&lt;"size of a is " &lt;&lt;a.size() &lt;&lt;endl;
    cout &lt;&lt;"max_size of a is still " &lt;&lt;a.max_size() &lt;&lt;endl;

    }

//function to print the contents of deque
void print_contents (CHARDEQUE  deque, char *name)
{
    CHARDEQUE::iterator pdeque;

    cout &lt;&lt;"The contents of "&lt;&lt; name &lt;&lt;" : ";

        for(pdeque = deque.begin();
        pdeque != deque.end();
        pdeque++)
    {
        cout &lt;&lt; *pdeque &lt;&lt;" " ;
    }
        cout&lt;&lt;endl;
}

 </code></pre>

<p>Program Output is:</p>

<pre><code>The contents of a : A B C D
max_size of a is 4294967295
size of a is 4
The contents of a : A B C D X X X X X X
size of a is 10
The contents of a : A B C D X
size of a is 5
max_size of a is still 4294967295
</code></pre>

</body>
</html>
