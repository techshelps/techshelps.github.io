<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>The Compound Statement</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_the_compound_statement"></a><sup></sup>The Compound Statement</h1>
<p>
A compound statement (also called a “block”) typically appears as the body of another statement, such as the <b>if</b> statement. Chapter 3, <a href="_clang_declarations_and_types.htm">Declarations and Types</a>, describes the form and meaning of the declarations that can appear at the head of a compound statement.&nbsp; </p>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>compound-statement</i> :</p>
<p class=indent>
<b>{</b> <i>declaration-list</i> <sub>opt</sub> <i>statement-list</i> <sub>opt</sub> <b>}</b></p>
<p class=dt>
<i>declaration-list</i> :</p>
<p class=indent>
<i>declaration</i><br>
<i>declaration-list declaration</i></p>
<p class=dt>
<i>statement-list</i> :</p>
<p class=indent>
s<i>tatement</i><br>
<i>statement-list statement</i></p>
<p>
If there are declarations, they must come before any statements. The scope of each identifier declared at the beginning of a compound statement extends from its declaration point to the end of the block. It is visible throughout the block unless a declaration of the same identifier exists in an inner block. </p>
<p>
Identifiers in a compound statement are presumed <b>auto</b> unless explicitly declared otherwise with <b>register</b>, <b>static</b>, or <b>extern</b>, except functions, which can only be <b>extern</b>. You can leave off the <b>extern</b> specifier in function declarations and the function will still be <b>extern</b>. </p>
<p>
Storage is not allocated and initialization is not permitted if a variable or function is declared in a compound statement with storage class <b>extern</b>. The declaration refers to an external variable or function defined elsewhere.</p>
<p>
Variables declared in a block with the <b>auto</b> or <b>register</b> keyword are reallocated and, if necessary, initialized each time the compound statement is entered. These variables are not defined after the compound statement is exited. If a variable declared inside a block has the <b>static</b> attribute, the variable is initialized when program execution begins and keeps its value throughout the program. See <a href="_clang_c_storage_classes.htm">Storage Classes</a> in Chapter 3 for information about <b>static</b>.</p>
<p>
This example illustrates a compound statement: </p>
<pre><code>if ( i &gt; 0 ) 
{
 &nbsp;&nbsp; line[i] = x;
 &nbsp;&nbsp; x++;
 &nbsp;&nbsp; i--;
}
</code></pre>
<p>
In this example, if <code>i</code> is greater than 0, all statements inside the compound statement are executed in order. </p>
</font></BODY>
</HTML>
