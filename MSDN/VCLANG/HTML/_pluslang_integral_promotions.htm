<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Integral Promotions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_integral_promotions"></a><sup></sup>Integral Promotions</h1>
<p>
Objects of an integral type can be converted to another wider integral type (that is, a type that can represent a larger set of values). This widening type of conversion is called “integral promotion.” With integral promotion, you can use the following in an expression wherever another integral type can be used:
<ul type=disc>
<li>
Objects, literals, and constants of type <b>char</b> and <b>short int</b><br><br></li>
<li>
Enumeration types<br><br></li>
<li>
<b>int</b> bit fields<br><br></li>
<li>
Enumerators</li>
</ul>
<p>
C++ promotions are “value-preserving.” That is, the value after the promotion is guaranteed to be the same as the value before the promotion. In value-preserving promotions, objects of shorter integral types (such as bit fields or objects of type <b>char</b>) are promoted to type <b>int</b> if <b>int</b> can represent the full range of the original type. If <b>int</b> cannot represent the full range of values, then the object is promoted to type <b>unsigned int</b>. Although this strategy is the same as that used by ANSI C, value-preserving conversions do not preserve the “signedness” of the object.</p>
<p>
Value-preserving promotions and promotions that preserve signedness normally produce the same results. However, they can produce different results if the promoted object is one of the following:
<ul type=disc>
<li>
An operand of&nbsp; <b>/</b>, <b>%</b>, <b>/=</b>, <b>%=</b>, <b>&lt;</b>, <b>&lt;=</b>, <b>&gt;</b>, or&nbsp; <b>&gt;=</b><p class=tl>
These operators rely on sign for determining the result. Therefore, value-preserving and sign-preserving promotions produce different results when applied to these operands.</P></li>
<li>
The left operand of&nbsp; <b>&gt;&gt;</b> or&nbsp; <b>&gt;&gt;=</b><p class=tl>
These operators treat signed and unsigned quantities differently when performing a shift operation. For signed quantities, shifting a quantity right causes the sign bit to be propagated into the vacated bit positions. For unsigned quantities, the vacated bit positions are zero-filled.</P></li>
<li>
An argument to an overloaded function or operand of an overloaded operator that depends on the signedness of the type of that operand for argument matching. (See <a href="_pluslang_overloaded_operators.htm">Overloaded Operators</a> in Chapter 12 for more about defining overloaded operators.)</li>
</ul>
</font></BODY>
</HTML>
