<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Iteration Statements</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_iteration_statements"></a><sup></sup>Iteration Statements</h1>
<p>
Iteration statements cause statements (or compound statements) to be executed zero or more times, subject to some loop-termination criteria. When these statements are compound statements, they are executed in order, except when either the <b>break</b> statement or the <b>continue</b> statement is encountered. (For a description of these statements, see <a href="_pluslang_the_c.2b2b_.break_statement.htm">The break Statement</a> and <a href="_pluslang_the_c.2b2b_.continue_statement.htm">The continue Statement</a>.)</p>
<p>
C++ provides three iteration statements — <b>while</b>, <b>do</b>, and <b>for</b>. Each of these iterates until its termination expression evaluates to zero (false), or until loop termination is forced with a <b>break</b> statement. Table 5.2 summarizes these statements and their actions; each is discussed in detail in the sections that follow.</p>
<p class=label>
<b><a name="_pluslang_table_5..2"></a>Table 5.2&nbsp;&nbsp;&nbsp;C++ Iteration Statements</b></p>
<table border=1 cellpadding=5 cols=4 frame=below rules=rows>
<tr valign=top>
<td class=label width=18%><b>Statement</b></td>
<td class=label width=27%><b>Evaluated At</b></td>
<td class=label width=27%><b>Initialization</b></td>
<td class=label width=28%><b>Increment</b></td>
</tr>
<tr valign=top>
<td width=18%><b>while</b></td>
<td width=27%>Top of loop</td>
<td width=27%>No</td>
<td width=28%>No</td>
</tr>
<tr valign=top>
<td width=18%><b>do</b></td>
<td width=27%>Bottom of loop</td>
<td width=27%>No</td>
<td width=28%>No</td>
</tr>
<tr valign=top>
<td width=18%><b>for</b></td>
<td width=27%>Top of loop</td>
<td width=27%>Yes</td>
<td width=28%>Yes</td>
</tr>
</table><br>
<p class=label>
<b>Syntax</b></p>
<p class=dt>
<i>iteration-statement</i> :</p>
<p class=indent>
<b>while</b>  <b>(</b>  <i>expression</i>  <b>)</b>  <i>statement</i><br>
<b>do</b>  <i>statement</i>  <b>while</b>  <b>(</b>  <i>expression</i>  <b>)</b>  <b>;</b><br>
<b>for</b>  <b>(</b>  <i>for-init-statement</i> <i>expression</i><sub>opt</sub>  <b>;</b>  <i>expression</i><sub>opt </sub> <b>)</b>  <i>statement</i></p>
<p class=dt>
<i>for-init-statement</i> :</p>
<p class=indent>
<i>expression-statement</i><br>
<i>declaration-statement</i></p>
<p>
The statement part of an iteration statement cannot be a declaration. However, it can be a compound statement containing a declaration.</p>
</font></BODY>
</HTML>
