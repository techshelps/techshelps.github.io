<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_stringbuf::pbackfail</title></head>
<body bgcolor=white>

<h3><a name="basic_stringbuf::pbackfail">basic_stringbuf::pbackfail</a></h3>
<META NAME="MS-HKWD" CONTENT="pbackfail">
<pre><code>virtual int_type <b>pbackfail</b>(int_type c = T::eof());</code></pre>
<p>The protected virtual member function endeavors to put back an element into the <a href="STREAMBU_basic_streambuf.htm#input buffer">input buffer</a>, then make it the current 
element (pointed to by the next pointer). If <code>c</code> compares equal to <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>()</code>, the element to push back is effectively the 
one already in the stream before the current element. Otherwise, that element is replaced by <code>x = 
T::</code><a href="STRING2_char_traitsCCto_char_type.htm#char_traits::to_char_type"><code>to_char_type</code></a><code>(c)</code>. The function can put back an element in various ways:</p>
<ul>
<li>If a <a href="STREAMBU_basic_streambuf.htm#putback position">putback position</a> is available, and the element stored there compares equal to <code>x</code>, it can simply decrement the 
next pointer for the input buffer.</li>
<li>If a putback position is available, and if the <a href="SSTREAM_basic_stringbuf.htm#stringbuf mode">stringbuf mode</a> permits the sequence to be altered (<code>mode &amp; 
ios_base::</code><a href="IOS_ios_baseCCopenmode.htm#ios_base::out"><code>out</code></a> is nonzero), it can store <code>x</code> into the putback position and decrement the next pointer for the 
input buffer.</li>
</ul>
<p>If the function cannot succeed, it returns <code>T::eof()</code>. Otherwise, it returns <code>T::</code><a href="STRING2_char_traitsCCnot_eof.htm#char_traits::not_eof"><code>not_eof</code></a><code>(c)</code>.</p>
</body>
</html>
