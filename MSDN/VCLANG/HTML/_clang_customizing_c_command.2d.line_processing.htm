<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Customizing C Command-Line Processing</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_clang_customizing_c_command.2d.line_processing"></a><sup></sup>Customizing C Command-Line Processing</h1>
<p>
If your program does not take command-line arguments, you can save a small amount of space by suppressing use of the library routine that performs command-line processing. This routine is called <b>_setargv</b> (or <b>_wsetargv</b> in the wide-character environment), as described in <a href="_clang_expanding_wildcard_arguments.htm">Expanding Wildcard Arguments</a>. To suppress its use, define a routine that does nothing in the file containing the <b>main</b> function and name it <b>_setargv</b> (or <b>_wsetargv</b> in the wide-character environment). The call to <b>_setargv</b> or <b>_wsetargv</b> is then satisfied by your definition of <b>_setargv</b> or <b>_wsetargv</b> , and the library version is not loaded. </p>
<p>
Similarly, if you never access the environment table through the <i>envp</i> argument, you can provide your own empty routine to be used in place of <b>_setenvp</b> (or <b>_wsetenvp</b>), the environment-processing routine. </p>
<p>
If your program makes calls to the <b>_spawn</b> or <b>_exec</b> family of routines in the C run-time library, you should not suppress the environment-processing routine, since this routine is used to pass an environment from the spawning process to the new process. </p>
</font></BODY>
</HTML>
