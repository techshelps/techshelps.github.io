<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>basic_streambuf::pbackfail</title></head>
<body bgcolor=white>

<h3><a name="basic_streambuf::pbackfail">basic_streambuf::pbackfail</a></h3>
<META NAME="MS-HKWD" CONTENT="pbackfail">
<pre><code>virtual int_type <b>pbackfail</b>(int_type c = T::eof());</code></pre>
<p>The protected virtual member function endeavors to put back an element into the input stream, then make it the current 
element (pointed to by the next pointer). If <code>c</code> compares equal to <code>T::</code><a href="STRING2_char_traitsCCeof.htm#char_traits::eof"><code>eof</code></a><code>()</code>, the element to push back is effectively the 
one already in the stream before the current element. Otherwise, that element is replaced by <code>T::</code><a href="STRING2_char_traitsCCto_char_type.htm#char_traits::to_char_type"><code>to_char_type</code></a><code>(c)</code>. 
The function can put back an element in various ways:</p>
<ul>
<li>If a <a href="STREAMBU_basic_streambuf.htm#putback position">putback position</a> is available, it can store the element into the putback position and decrement the next 
pointer for the <a href="STREAMBU_basic_streambuf.htm#input buffer">input buffer</a>. </li>
<li>It can make a putback position available by allocating new or additional storage for the input buffer. </li>
<li>For a stream buffer with common input and output streams, it can make a putback position available by writing 
out, to some external destination, some or all of the elements between the beginning and next pointers for the 
output buffer. </li>
</ul>
<p>If the function cannot succeed, it returns <code>T::eof()</code> or throws an exception. Otherwise, it returns some other value. The 
default behavior is to return <code>T::eof()</code>.</p>
</body>
</html>
