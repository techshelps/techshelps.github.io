<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Initializing Base Classes</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_initializing_base_classes"></a><sup></sup>Initializing Base Classes</h1>
<p>
Direct base classes are initialized in much the same way as member objects. Consider the following example:</p>
<pre><code>//&nbsp; Declare class Window.
class Window
{
public:
 &nbsp;&nbsp; Window( Rect rSize );
 &nbsp;&nbsp; ...
};

//&nbsp; Declare class DialogBox, derived from class Window.
class DialogBox : public Window
{
public:
 &nbsp;&nbsp; DialogBox( Rect rSize );
 &nbsp;&nbsp; ...
};

//&nbsp; Define the constructor for DialogBox. This constructor
//&nbsp;&nbsp; explicitly initializes the Window subobject.
DialogBox::DialogBox( Rect rSize ) : Window( rSize )
{
}
</code></pre>
<p>
Note that in the constructor for <code>DialogBox</code>, the <code>Window</code> base class is initialized using the argument <code>rSize</code>. This initialization consists of the name of the base class to initialize, followed by a parenthesized list of arguments to the class’s constructor.</p>
<p>
In initialization of base classes, the object that is not the subobject representing a base class’s component is considered a “complete object.” The complete object’s class is considered the “most derived” class for the object.</p>
<p>
The subobjects representing virtual base classes are initialized by the constructor for the most derived class. That means that where virtual derivation is specified, the most derived class must explicitly initialize the virtual base class, or the virtual base class must have a default constructor. Initializations for virtual base classes that appear in constructors for classes other than the most derived class are ignored.</p>
<p>
Although initialization of base classes is usually restricted to direct base classes, a class constructor can initialize an indirect virtual base class.</p>
</font></BODY>
</HTML>
