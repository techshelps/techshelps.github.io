<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Access to Virtual Functions</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_access_to_virtual_functions"></a><sup></sup>Access to Virtual Functions</h1>
<p>
The access control applied to virtual functions is determined by the type used to make the function call. Overriding declarations of the function do not affect the access control for a given type. For example:</p>
<pre><code>class VFuncBase
{
public:
 &nbsp;&nbsp; virtual int GetState() { return _state; }
protected:
 &nbsp;&nbsp; int _state;
};

class VFuncDerived : public VFuncBase
{
private:
 &nbsp;&nbsp; int GetState() { return _state; }
};

...

VFuncDerived vfd;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Object of derived type.
VFuncBase *pvfb = &amp;vfd;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Pointer to base type.
VFuncDerived *pvfd = &amp;vfd;&nbsp;&nbsp;&nbsp; // Pointer to derived type.
int State;

State = pvfb-&gt;GetState();&nbsp;&nbsp;&nbsp;&nbsp; // GetState is public.
State = pvfd-&gt;GetState();&nbsp;&nbsp;&nbsp;&nbsp; // GetState is private; error.
</code></pre>
<p>
In the preceding example, calling the virtual function <code>GetState</code> using a pointer to type <code>VFuncBase</code> calls <code>VFuncDerived::GetState</code>, and <code>GetState</code> is treated as public. However, calling <code>GetState</code> using a pointer to type <code>VFuncDerived</code> is an access-control violation because <code>GetState</code> is declared private in class <code>VFuncDerived</code>.</p>
<p class=indent>
<B><b>! WARNING</b></B>&nbsp;&nbsp;&nbsp;The virtual function <code>GetState</code> can be called using a pointer to the base class <code>VFuncBase</code>. This does not mean that the function called is the base-class version of that function.</p>
</font></BODY>
</HTML>
