<html>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css">
<head><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>binary_search</title></head>
<body bgcolor=white>

<h2><a name="binary_search">binary_search</a></h2>
<META NAME="MS-HKWD" CONTENT="binary_search">
<pre><code>template&lt;class FwdIt, class T&gt;
    bool <b>binary_search</b>(FwdIt first, FwdIt last, const T&amp; val);
template&lt;class FwdIt, class T, class Pred&gt;
    bool <b>binary_search</b>(FwdIt first, FwdIt last, const T&amp; val,
        Pred pr);</code></pre>
<p>The first template function determines whether a value of <code>N</code> exists in the range <code>[0, last - first)</code> for which 
<code>*(first + N)</code> has <a href="lib_stl_Algorithm_Conventions.htm#equivalent ordering">equivalent ordering</a> to <code>val</code>, where the elements designated by iterators in the range <code>[first, 
last)</code> form a sequence <a href="lib_stl_Algorithm_Conventions.htm#sequence ordering">ordered by</a> <code>operator&lt;</code>. If so, the function returns true. If no such value exists, it returns false.</p>
<p>If <code>FwdIt</code> is a random-access iterator type, the function evaluates the ordering predicate <code>X &lt; Y</code> at most 
<code>ceil(log(last - first)) + 2</code> times. Otherwise, the function evaluates the predicate a number of times 
proportional to <code>last - first</code>.</p>
<p>The second template function behaves the same, except that it replaces <code>operator&lt;(X, Y)</code> with <code>pr(X, Y)</code>.</p>

</body>
</html>
