<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Namespaces</title>
<style>@import url(stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="stylesheets/msdn_ie3.css"></HEAD>
<BODY>
<font face="verdana,arial,helvetica" size="2">
<h1><a name="_pluslang_namespaces"></a><sup></sup>Namespaces</h1>
<p>
The C++ language provides a single global namespace. This can cause problems with global name clashes. For instance, consider these two C++ header files:</p>
<pre><code>// one.h
char func(char);
class String { ... };

// somelib.h
class String { ... };
</code></pre>
<p>
With these definitions, it is impossible to use both header files in a single program; the <code>String</code> classes will clash.</p>
<p>
A namespace is a declarative region that attaches an additional identifier to any names declared inside it. The additional identifier makes it less likely that a name will conflict with names declared elsewhere in the program. It is possible to use the same name in separate namespaces without conflict even if the names appear in the same translation unit. As long as they appear in separate namespaces, each name will be unique because of the addition of the namespace identifier. For example:</p>
<pre><code>// one.h
namespace one
{
 &nbsp;&nbsp; char func(char);
 &nbsp;&nbsp; class String { ... };
}

// somelib.h
namespace SomeLib
{
 &nbsp;&nbsp; class String { ... };
}
</code></pre>
<p>
Now the class names will not clash because they become <code>one::String</code> and <code>SomeLib::String</code>, respectively.</p>
<p>
Declarations in the file scope of a translation unit, outside all namespaces, are still members of the global namespace.</p>
</font></BODY>
</HTML>
