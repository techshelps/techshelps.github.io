<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GrayString</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_graystring"></a>GrayString</h1>
<p>
The <b>GrayString</b> function draws gray text at the specified location. The function draws the text by copying it into a memory bitmap, graying the bitmap, and then copying the bitmap to the screen. The function grays the text regardless of the selected brush and background. <b>GrayString</b> uses the font currently selected for the specified device context. </p>
<p>
If the <i>lpOutputFunc</i> parameter is NULL, GDI uses the <a href="fontext_5yd0.htm"><b>TextOut</b></a> function, and the <i>lpData</i> parameter is assumed to be a pointer to the character string to be output. If the characters to be output cannot be handled by <b>TextOut</b> (for example, the string is stored as a bitmap), the application must supply its own output function. </p>
<pre><code><b>BOOL GrayString(
  HDC</b><i> hDC</i><b>,        </b>// handle to the device context
<b>  HBRUSH</b><i> hBrush</i><b>,  </b>// handle to the brush for graying
<b>  GRAYSTRINGPROC</b><i> lpOutputFunc</i><b>,</b>
<b>                  </b>// pointer to the callback function
<b>  LPARAM</b><i> lpData</i><b>,  </b>// pointer to application-defined data
<b>  int</b><i> nCount</i><b>,     </b>// number of characters to output
<b>  int</b><i> X</i><b>,          </b>// horizontal position
<b>  int</b><i> Y</i><b>,          </b>// vertical position
<b>  int</b><i> nWidth</i><b>,     </b>// width
<b>  int</b><i> nHeight</i>     // height
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hDC</i></dt>
<dd>
Handle to the device context. </dd>
<dt>
<i>hBrush</i></dt>
<dd>
Handle to the brush to be used for graying. If this parameter is NULL, the text is grayed with the same brush that was used to draw window text. </dd>
<dt>
<i>lpOutputFunc</i></dt>
<dd>
Pointer to the application-defined function that will draw the string, or, if <b>TextOut</b> is to be used to draw the string, it is a NULL pointer. For details, see the <a href="pantdraw_48pv.htm"><b>OutputProc</b></a> callback function. </dd>
<dt>
<i>lpData</i></dt>
<dd>
Specifies a pointer to data to be passed to the output function. If the <i>lpOutputFunc</i> parameter is NULL, <i>lpData</i> must be a pointer to the string to be output. </dd>
<dt>
<i>nCount</i></dt>
<dd>
Specifies the number of characters to be output. If the <i>nCount</i> parameter is zero, <b>GrayString</b> calculates the length of the string (assuming <i>lpData</i> is a pointer to the string). If <i>nCount</i> is –1 and the function pointed to by <i>lpOutputFunc</i> returns FALSE, the image is shown but not grayed. </dd>
<dt>
<i>X</i></dt>
<dd>
Specifies the device x-coordinate of the starting position of the rectangle that encloses the string. </dd>
<dt>
<i>Y</i></dt>
<dd>
Specifies the device y-coordinate of the starting position of the rectangle that encloses the string. </dd>
<dt>
<i>nWidth</i></dt>
<dd>
Specifies the width, in device units, of the rectangle that encloses the string. If this parameter is zero, <b>GrayString</b> calculates the width of the area, assuming <i>lpData</i> is a pointer to the string. </dd>
<dt>
<i>nHeight</i></dt>
<dd>
Specifies the height, in device units, of the rectangle that encloses the string. If this parameter is zero, <b>GrayString</b> calculates the height of the area, assuming <i>lpData</i> is a pointer to the string. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the string is drawn, the return value is nonzero.</p>
<p>
If either the <b>TextOut</b> function or the application-defined output function returned zero, or there was insufficient memory to create a memory bitmap for graying, the return value is zero. </p>
<p>
<b>Windows NT: </b>To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
Without calling <b>GrayString</b>, an application can draw grayed strings on devices that support a solid gray color. The system color COLOR_GRAYTEXT is the solid-gray system color used to draw disabled text. The application can call the <b>GetSysColor</b> function to retrieve the color value of COLOR_GRAYTEXT. If the color is other than zero (black), the application can call the <b>SetTextColor</b> function to set the text color to the color value and then draw the string directly. If the retrieved color is black, the application must call <b>GrayString</b> to gray the text. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="pantdraw_3wtj.htm">Painting and Drawing Overview</a>, <a href="pantdraw_8igj.htm">Painting and Drawing Functions</a>, <a href="fontext_0odw.htm"><b>DrawText</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getsyscolor">
</object><a href=JavaScript:alink_2.Click()><b>GetSysColor</b></a>, <a href="pantdraw_48pv.htm"><b>OutputProc</b></a>, <a href="fontext_8bsi.htm"><b>SetTextColor</b></a>, <a href="fontext_001g.htm"><b>TabbedTextOut</b></a>, <a href="fontext_5yd0.htm"><b>TextOut</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
