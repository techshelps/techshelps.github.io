<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MonitorEnumProc</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_monitorenumproc"></a>MonitorEnumProc</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
A <i>MonitorEnumProc</i> function is an application-defined callback function that is called by the <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a> function. </p>
<p>
A value of type <b>MONITORENUMPROC</b> is a pointer to a <i>MonitorEnumProc</i> function.</p>
<pre><code><b>BOOL CALLBACK MonitorEnumProc(
  HMONITOR</b><i> hMonitor</i><b>,  </b>// handle to display monitor
<b>  HDC</b><i> hdcMonitor</i><b>,     </b>// handle to monitor-appropriate device context
<b>  LPRECT</b><i> lprcMonitor</i><b>, </b>// pointer to monitor intersection rectangle
<b>  LPARAM</b><i> dwData</i>       // data passed from EnumDisplayMonitors
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hMonitor</i></dt>
<dd>
A handle to the display monitor. This value will always be non-NULL.</dd>
<dt>
<i>hdcMonitor</i></dt>
<dd>
A handle to a device context. 
<p>
The device context has color attributes that are appropriate for the display monitor identified by <i>hMonitor</i>. The clipping area of the device context is set to the intersection of the visible region of the device context identified by the <i>hdc</i> parameter of <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a>, the rectangle pointed to by the <i>lprcClip</i> parameter of <b>EnumDisplayMonitors</b>, and the display monitor rectangle.

<p>
This value is NULL if the <i>hdc</i> parameter of <b>EnumDisplayMonitors</b> was NULL.
</dd>
<dt>
<i>lprcMonitor</i></dt>
<dd>
Pointer to a <a href="rectangl_6cqa.htm"><b>RECT</b></a> structure.
<p>
If <i>hdcMonitor</i> is non-NULL, this rectangle is the intersection of the clipping area of the device context identified by <i>hdcMonitor</i> and the display monitor rectangle. The rectangle coordinates are device-context coordinates.

<p>
If <i>hdcMonitor</i> is NULL, this rectangle is the display monitor rectangle . The rectangle coordinates are virtual-screen coordinates.
</dd>
<dt>
<i>dwData</i></dt>
<dd>
Application-defined data that <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a> passes directly to the enumeration function. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
To continue the enumeration, return TRUE.</p>
<p>
To stop the enumeration, return FALSE.</p>
<h4>Remarks</h4>
<p>
You can use the <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a> function to enumerate the set of display monitors that intersect the visible region of a specified device context and, optionally, a clipping rectangle. To do this, set the <i>hdc</i> parameter to a non-NULL value, and set the <i>lprcClip</i> parameter as needed. </p>
<p>
You can also use the <b>EnumDisplayMonitors</b> function to enumerate one or more of the display monitors on the desktop, without supplying a device context. To do this, set the <i>hdc</i> parameter of <b>EnumDisplayMonitors</b> to NULL and set the <i>lprcClip</i> parameter as needed. </p>
<p>
In all cases, <b>EnumDisplayMonitors</b> calls a specified <i>MonitorEnumProc</i> function once for each display monitor in the calculated enumeration set. The <i>MonitorEnumProc</i> function always receives a handle to the display monitor. </p>
<p>
If the <i>hdc</i> parameter of <b>EnumDisplayMonitors</b> is non-NULL, the <i>MonitorEnumProc</i> function also receives a handle to a device context whose color format is appropriate for the display monitor. You can then paint into the device context in a manner that is optimal for the display monitor.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 98.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>User-defined.</p>
<h4>See Also</h4>
<p>
<a href="monitor_53sj.htm">Multiple Display Monitors Overview</a>, <a href="monitor_8woj.htm">Multiple Display Monitors Functions</a>, <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a>  </p>
<p>&nbsp;</p></body>
</HTML>
