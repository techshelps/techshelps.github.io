<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Display Device Contexts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_display_device_contexts"></a>Display Device Contexts</h3>
<p>
An application obtains a display device context by calling the <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a>, <a href="devcons_4esj.htm"><b>GetDC</b></a>, or <a href="devcons_76wo.htm"><b>GetDCEx</b></a> function and identifying the window in which the corresponding output will appear. Typically, an application obtains a display device context only when it must draw in the client area. When the application is finished drawing, it must release the device context by calling the <a href="pantdraw_1th0.htm"><b>EndPaint</b></a> or <a href="devcons_66hv.htm"><b>ReleaseDC</b></a> function. </p>
<p>
There are three types of device contexts for video displays: 
<ul>
<li>
class</li>
<li>
common </li>
<li>
private </li>
</ul>
<p>
<b>Class Device Contexts</b></p>
<p>
<i>Class device contexts</i> are supported strictly for compatibility with 16-bit versions of Windows. When writing a Win32-based application, avoid using the class device context. Use a private device context instead. </p>
<p>
<b>Common Device Contexts</b></p>
<p>
<i>Common device contexts</i> are display device contexts maintained in a special cache by the window-management component (USER). Common device contexts are used in applications that perform infrequent drawing operations. Before the system returns the device context handle, it initializes the common device context with default objects, attributes, and modes. Any drawing operations performed by the application use these defaults unless one of the GDI functions is called to select a new object, change the attributes of an existing object, or select a new mode. </p>
<p>
Because only a limited number of common device contexts exist in the window manager's heap, an application should release these device contexts after it has finished drawing. When the application releases a common device context, any changes to the default data are lost. </p>
<p>
<b>Private Device Contexts</b></p>
<p>
<i>Private device contexts</i> are display device contexts that, unlike common device contexts, retain any changes to the default data — even after an application releases them. Private device contexts are used in applications that perform numerous drawing operations such as computer-aided design (CAD) applications, desktop-publishing applications, drawing and painting applications, and so on. Private device contexts are not part of the window manager's cache and therefore need not be released after use. The window manager automatically removes a private device context after the last window of that class has been destroyed. </p>
<p>
An application creates a private device context by first specifying the CS_OWNDC window-class style when it initializes the <b>style</b> member of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wndclass_str">
</object><a href=JavaScript:alink_1.Click()><b>WNDCLASS</b></a> structure and calls the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_registerclass">
</object><a href=JavaScript:alink_2.Click()><b>RegisterClass</b></a> function. (For more information about window classes, see <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_window_classes">
</object><a href=JavaScript:alink_3.Click()>Window Classes</a>.) After creating a window with the CS_OWNDC style, an application can call the <a href="devcons_4esj.htm"><b>GetDC</b></a>, <a href="devcons_76wo.htm"><b>GetDCEx</b></a>, or <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a> function once to obtain a handle identifying a private device context. The application can continue using this handle (and the associated device context) until it deletes the window created with this class. Any changes to graphic objects and their attributes, or graphic modes are retained by the system until the window is deleted. </p>
<p>&nbsp;</p></body>
</HTML>
