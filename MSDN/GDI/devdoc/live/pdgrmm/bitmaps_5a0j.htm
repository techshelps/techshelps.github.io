<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Device-Dependent Bitmaps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_device_dependent_bitmaps"></a>Device-Dependent Bitmaps</h3>
<p>
<b>Note</b>&nbsp;&nbsp;Device-dependent bitmaps are supported only for compatibility with applications written for early versions of 16-bit Windows (prior to 3.0). If you are writing a Win32-based application, or porting a 16-bit Windows-based application to the Win32 API, you should use DIBs. </p>
<p>
DDBs are described by using a single structure, the <a href="bitmaps_2h6a.htm"><b>BITMAP</b></a> structure. The members of this structure specify the width and height of a rectangular region, in pixels; the width of the array that maps entries from the device palette to pixels; and the device's color format, in terms of color planes and bits per pixel. An application can retrieve the color format of a device by calling the <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a> function and specifying the appropriate constants. </p>
<p>
There are two types of DDBs: discardable and nondiscardable. A discardable DDB is a bitmap that the system discards if the bitmap is not selected into a DC and if system memory is low. The <a href="bitmaps_3fw0.htm"><b>CreateDiscardableBitmap</b></a> function creates discardable bitmaps. The <a href="bitmaps_3ak0.htm"><b>CreateBitmap</b></a>, <a href="bitmaps_1cxc.htm"><b>CreateCompatibleBitmap</b></a>, and <a href="bitmaps_6r04.htm"><b>CreateBitmapIndirect</b></a> functions create nondiscardable bitmaps. </p>
<p>
An application can create a DDB from a DIB by initializing the required structures and calling the <a href="bitmaps_5d4g.htm"><b>CreateDIBitmap</b></a> function. Specifying CBM_INIT in the call to <b>CreateDIBitmap</b> is equivalent to calling the <b>CreateCompatibleBitmap </b>function to create a DDB in the format of the device and then calling the <a href="bitmaps_0qk3.htm"><b>SetDIBits</b></a> function to translate the DIB bits to the DDB. To determine whether a device supports the <b>SetDIBits</b> function, call the <b>GetDeviceCaps</b> function, specifying RC_DI_BITMAP as the RASTERCAPS flag. </p>
<p>&nbsp;</p></body>
</HTML>
