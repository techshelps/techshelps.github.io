<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GdiComment</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_gdicomment"></a>GdiComment</h1>
<p>
The <b>GdiComment</b> function copies a comment from a buffer into a specified enhanced-format metafile. </p>
<pre><code><b>BOOL GdiComment(
  HDC</b><i> hdc</i><b>,             </b>// handle to a device context
<b>  UINT</b><i> cbSize</i><b>,         </b>// size of text buffer
<b>  CONST BYTE</b><i> *lpData</i>   // pointer to text buffer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to an enhanced-metafile device context. </dd>
<dt>
<i>cbSize</i></dt>
<dd>
Specifies the length of the comment buffer, in bytes. </dd>
<dt>
<i>lpData</i></dt>
<dd>
Pointer to the buffer that contains the comment. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
A comment can include any kind of private information — for example, the source of a picture and the date it was created. A comment should begin with an application signature, followed by the data. </p>
<p>
Comments should not contain application-specific or position-specific data. Position-specific data specifies the location of a record, and it should not be included because one metafile may be embedded within another metafile. </p>
<p>
A public comment is a comment that begins with the comment signature identifier GDICOMMENT_IDENTIFIER. The following public comments are defined: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>GDICOMMENT_WINDOWS_METAFILE</td>
</tr>
<tr valign=top>
<td width=6%></td>
<td width=94%>The GDICOMMENT_WINDOWS_METAFILE public comment contains a Windows-format metafile that is equivalent to an enhanced-format metafile. This comment is written only by the <a href="metafile_1xwz.htm"><b>SetWinMetaFileBits</b></a> function. The comment record, if given, follows the <b>ENHMETAHEADER</b> metafile record. The comment has the following form:</td>
</tr>
</table><br>
<pre><code>DWORD ident;         // This contains GDICOMMENT_IDENTIFIER. 
DWORD iComment;      // This contains GDICOMMENT_WINDOWS_METAFILE. 
DWORD nVersion;      // This contains the version number of the 
                     // Windows-format metafile. 
DWORD nChecksum;     // This is the additive DWORD checksum for 
                     // the enhanced metafile.  The checksum 
                     // for the enhanced metafile data including 
                     // this comment record must be zero. 
                     // Otherwise, the enhanced metafile has been 
                     //  modified and the Windows-format 
                     // metafile is no longer valid. 
DWORD fFlags;        // This must be zero. 
DWORD cbWinMetaFile; // This is the size, in bytes. of the 
                     // Windows-format metafile data that follows. 
 </code></pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>GDICOMMENT_BEGINGROUP</td>
</tr>
<tr valign=top>
<td width=6%></td>
<td width=94%>The GDICOMMENT_BEGINGROUP public comment identifies the beginning of a group of drawing records. It identifies an object within an enhanced metafile. The comment has the following form:</td>
</tr>
</table><br>
<pre><code>DWORD   ident;         // This contains GDICOMMENT_IDENTIFIER. 
DWORD   iComment;      // This contains GDICOMMENT_BEGINGROUP. 
RECTL   rclOutput;     // This is the bounding rectangle for the 
                       // object in logical coordinates. 
DWORD   nDescription;  // This is the number of characters in the 
                       // optional Unicode description string that 
                       // follows. This is zero if there is no 
                       // description string. 
</code> </pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>GDICOMMENT_ENDGROUP</td>
</tr>
<tr valign=top>
<td width=6%></td>
<td width=94%>The GDICOMMENT_ENDGROUP public comment identifies the end of a group of drawing records. The GDICOMMENT_BEGINGROUP comment and the GDICOMMENT_ENDGROUP comment must be included in a pair and may be nested. The comment has the following form:</td>
</tr>
</table><br>
<pre><code>DWORD   ident;       // This contains GDICOMMENT_IDENTIFIER. 
DWORD   iComment;    // This contains GDICOMMENT_ENDGROUP. 
 </code></pre>
<table cellspacing=4 cols=2>
<tr valign=top>
<td colspan=2 width=100%>GDICOMMENT_MULTIFORMATS</td>
</tr>
<tr valign=top>
<td width=6%></td>
<td width=94%>The GDICOMMENT_MULTIFORMATS public comment allows multiple definitions of a picture to be included in an enhanced metafile. Using this comment, for example, an application can include an encapsulated PostScript definition as well as an enhanced metafile definition of a picture. When the record is played back, GDI selects and renders the first format recognized by the device. The comment has the following form:</td>
</tr>
</table><br>
<pre><code>DWORD   ident;          // This contains GDICOMMENT_IDENTIFIER. 
DWORD   iComment;       // This contains GDICOMMENT_MULTIFORMATS. 
RECTL   rclOutput;      // This is the bounding rectangle for the 
                        // picture in logical coordinates. 
DWORD   nFormats;       // This contains the number of formats in 
                        // the comment. 
EMRFORMAT aemrformat[1];// This is an array of EMRFORMAT structures 
                        // in the order of preference.  The data 
                        // for each format follows the last 
                        // EMRFORMAT structure. 
</code> </pre>
<p>
The <a href="metafile_48vm.htm"><b>EMRFORMAT</b></a> structure has the following form: </p>
<pre><code>typedef struct tagEMRFORMAT   { 
    DWORD   dSignature; 
    DWORD   nVersion; 
    DWORD   cbData; 
    DWORD   offData; 
} EMRFORMAT; 
 </code></pre>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="metafile_7ulv.htm">Metafiles Overview</a>, <a href="metafile_0whf.htm">Metafile Functions</a>, <a href="metafile_81yd.htm"><b>CreateEnhMetaFile</b></a>, <a href="metafile_48vm.htm"><b>EMRFORMAT</b></a>, <a href="metafile_1xwz.htm"><b>SetWinMetaFileBits</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
