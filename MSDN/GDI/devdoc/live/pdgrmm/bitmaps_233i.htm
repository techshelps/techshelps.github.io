<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateDIBSection</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createdibsection"></a>CreateDIBSection</h1>
<p>
The <b>CreateDIBSection</b> function creates a device-independent bitmap (DIB) that applications can write to directly. The function gives you a pointer to the location of the bitmap's bit values. You can supply a handle to a file mapping object that the function will use to create the bitmap, or you can let the system allocate the memory for the bitmap.</p>
<pre><code><b>HBITMAP CreateDIBSection(
  HDC</b><i> hdc</i><b>,          </b>// handle to device context
<b>  CONST BITMAPINFO</b><i> *pbmi</i><b>,</b>
<b>                    </b>// pointer to structure containing bitmap size, 
                    // format, and color data
<b>  UINT</b><i> iUsage</i><b>,      </b>// color data type indicator: RGB values or 
                    // palette indexes
<b>  VOID</b><i> *ppvBits</i><b>,    </b>// pointer to variable to receive a pointer to 
                    // the bitmap's bit values
<b>  HANDLE</b><i> hSection</i><b>,  </b>// optional handle to a file mapping object
<b>  DWORD</b><i> dwOffset    </i>// offset to the bitmap bit values within the 
                    // file mapping object
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to a device context. If the value of <i>iUsage</i> is DIB_PAL_COLORS, the function uses this device context's logical palette to initialize the device-independent bitmap's colors.</dd>
<dt>
<i>pbmi</i></dt>
<dd>
Pointer to a <a href="bitmaps_0zn6.htm"><b>BITMAPINFO</b></a> structure that specifies various attributes of the device-independent bitmap, including the bitmap's dimensions and colors. </dd>
<dt>
<i>iUsage</i></dt>
<dd>
Specifies the type of data contained in the <b>bmiColors</b> array member of the <b>BITMAPINFO</b> structure pointed to by <i>pbmi</i> (either logical palette indexes or literal RGB values). The following values are defined.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>DIB_PAL_COLORS</td>
<td width=52%>The <b>bmiColors</b> member is an array of 16-bit indexes into the logical palette of the device context specified by <i>hdc</i>.</td>
</tr>
<tr valign=top>
<td width=48%>DIB_RGB_COLORS</td>
<td width=52%>The <b>BITMAPINFO</b> structure contains an array of literal RGB values.</td>
</tr>
</table><br>

</dd>
<dt>
<i>ppvBits</i></dt>
<dd>
Pointer to a variable that receives a pointer to the location of the device-independent bitmap's bit values.</dd>
<dt>
<i>hSection</i></dt>
<dd>
Handle to a file mapping object that the function will use to create the device-independent bitmap. This parameter can be NULL.
<p>
If <i>hSection</i> is not NULL, it must be a handle to a file mapping object created by calling the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createfilemapping">
</object><a href=JavaScript:alink_1.Click()><b>CreateFileMapping</b></a> function with the PAGE_READWRITE or PAGE_WRITECOPY flag. Read-only DIB sections are not supported. Handles created by other means will cause <b>CreateDIBSection</b> to fail. 

<p>
If <i>hSection</i> is not NULL, the <b>CreateDIBSection</b> function locates the bitmap's bit values at offset <i>dwOffset</i> in the file mapping object referred to by <i>hSection</i>. An application can later retrieve the <i>hSection </i>handle by calling the <a href="devcons_912s.htm"><b>GetObject</b></a> function with the <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_simple_types_v5">
</object><a href=JavaScript:alink_2.Click()><b>HBITMAP</b></a> returned by <b>CreateDIBSection</b>.

<p>
If <i>hSection</i> is NULL, the system allocates memory for the device-independent bitmap. In this case, the <b>CreateDIBSection </b>function ignores the <i>dwOffset</i> parameter. An application cannot later obtain a handle to this memory. The <b>dshSection</b> member of the <a href="bitmaps_0cqa.htm"><b>DIBSECTION</b></a> structure filled in by calling the <b>GetObject</b> function will be NULL.
</dd>
<dt>
<i>dwOffset</i></dt>
<dd>
Specifies the offset from the beginning of the file mapping object referenced by <i>hSection</i> where storage for the bitmap's bit values is to begin. This value is ignored if <i>hSection</i> is NULL. The bitmap's bit values are aligned on doubleword boundaries, so <i>dwOffset</i> must be a multiple of the size of a <b>DWORD</b>.
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is a handle to the newly created device-independent bitmap, and *<i>ppvBits</i> points to the bitmap's bit values. </p>
<p>
If the function fails, the return value is NULL, and *<i>ppvBits</i> is NULL. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_3.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
As noted above, if <i>hSection</i> is NULL, the system allocates memory for the device-independent bitmap. The system closes the handle to that memory when you later delete the device-independent bitmap by calling the <b>DeleteObject</b> function. If <i>hSection</i> is not NULL, you must close the <i>hSection</i> memory handle yourself after calling <b>DeleteObject </b>to delete the bitmap.  </p>
<p>
<b>Windows NT:</b> You need to guarantee that the <b>GDI</b> subsystem has completed any drawing to a bitmap created by <b>CreateDIBSection </b>before you draw to the bitmap yourself. Access to the bitmap must be synchronized. Do this by calling the <b>GdiFlush</b> function. This applies to any use of the pointer to the bitmap's bit values, including passing the pointer in calls to functions such as <b>SetDIBits</b>. </p>
<p>
<b>ICM:</b> If the<b> bmiHeader</b> member of <b>BITMAPINFO</b> (pointed to by<i> pbmi</i>) does not contain<b> BITMAPV4HEADER</b> or <b>BITMAPV5HEADER</b>, no color management is done. Otherwise, color management is enabled, and the specified color space is associated with the bitmap.</p>
<p>
<b>Windows CE:</b> Set the <i>iUsage</i> parameter to DIB_RGB_COLORS, except when an 8 bpp bitmap is used, in which case you set <i>iUsage</i> to DIB_PAL_COLORS. However, if DIB_PAL_COLORS is used, Windows CE ignores the values in the <i>bmiColors</i> array member of the <b>BITMAPINFO</b> structure. In addition, you should set the <i>hSection</i> parameter to NULL. Windows CE ignores the<b> </b><i>dwOffset</i> parameter; set it to zero.</p>
<p>
In Windows CE version 1.0, the <b>BITMAPINFO</b> structure pointed to by the <i>pbmi</i> parameter must specify 1 or 2 bits per pixel.</p>
<p>
In Windows CE version 2.0, the <b>BITMAPINFO </b>structure must include a color table if the images are palettized (usually 1,2,4, and 8 bpp formats). For 16 bpp or 32 bpp non-palettized images, the color table must be three entries long; the entries must specify the values of the red, green, and blue bitmasks. GDI ignores the color table for 24 bpp images; their pixels must be stored in Blue-Green-Red (BGR) format. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="bitmaps_99ir.htm">Bitmaps Overview</a>, <a href="bitmaps_87eb.htm">Bitmap Functions</a>, <a href="bitmaps_0zn6.htm"><b>BITMAPINFO</b></a>, <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createfilemapping">
</object><a href=JavaScript:alink_4.Click()><b>CreateFileMapping</b></a>, <a href="devcons_1vsk.htm"><b>DeleteObject</b></a>, <a href="bitmaps_0cqa.htm"><b>DIBSECTION</b></a>, <a href="bitmaps_12zp.htm"><b>GetDIBColorTable</b></a>, <a href="devcons_912s.htm"><b>GetObject</b></a>, <a href="pantdraw_0enc.htm"><b>GdiFlush</b></a>, <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_simple_types_v5">
</object><a href=JavaScript:alink_5.Click()><b>HBITMAP</b></a>, <a href="bitmaps_0qk3.htm"><b>SetDIBits</b></a>, <a href="bitmaps_2y91.htm"><b>SetDIBColorTable</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
