<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EnumDisplaySettings</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_enumdisplaysettings"></a>EnumDisplaySettings</h1>
<p>
The <b>EnumDisplaySettings</b> function obtains information about one of a display device's graphics modes. You can obtain information for all of a display device's graphics modes by making a series of calls to this function.</p>
<pre><code><b>BOOL EnumDisplaySettings(
  LPCTSTR</b><i> lpszDeviceName</i><b>,  </b>// specifies the display device
<b>  DWORD</b><i> iModeNum</i><b>,          </b>// specifies the graphics mode
<b>  LPDEVMODE</b><i> lpDevMode      </i>// points to structure to receive settings
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszDeviceName</i></dt>
<dd>
Pointer to a null-terminated string that specifies the display device whose graphics mode the function will obtain information about. 
<p>
This parameter can be NULL. A NULL value specifies the current display device on the computer that the calling thread is running on.

<p>
If <i>lpszDeviceName</i> is not NULL, the string must be of the form <b>\\.\Display<i>X</i></b>, where <b><i>X</i></b> can have the values 1, 2, or 3.

<p>
<b>Windows 95 and Windows 98:</b> <i>lpszDeviceName</i> must be NULL. 
</dd>
<dt>
<i>iModeNum</i></dt>
<dd>
Indicates the type of information to retrieve. This value can be a graphics mode index or one of the following values.
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=45%>Value</th>
<th align=left width=55%>Meaning</th>
</tr>
<tr valign=top>
<td width=45%>ENUM_CURRENT_SETTINGS</td>
<td width=55%>Retrieve the current settings for the display device.</td>
</tr>
<tr valign=top>
<td width=45%>ENUM_REGISTRY_SETTINGS</td>
<td width=55%>Retrieve the settings for the display device that are currently stored in the registry.</td>
</tr>
</table><br>


<p>
Graphics mode indexes start at zero. To obtain information for all of a display device's graphics modes, make a series of calls to <b>EnumDisplaySettings</b>, as follows: Set <i>iModeNum</i> to zero for the first call, and increment <i>iModeNum</i> by one for each subsequent call. Continue calling the function until the return value is zero.

<p>
When you call <b>EnumDisplaySettings</b> with <i>iModeNum</i> set to zero, the operating system initializes and caches information about the display device. When you call <b>EnumDisplaySettings</b> with <i>iModeNum</i> set to a non-zero value, the function returns the information that was cached the last time the function was called with <i>iModeNum</i> set to zero.
</dd>
<dt>
<i>lpDevMode</i></dt>
<dd>
Pointer to a <a href="prntspol_8nle.htm"><b>DEVMODE</b></a> structure into which the function stores information about the specified graphics mode. Before calling <b>EnumDisplaySettings</b>, set the <b>dmSize</b> member to <b>sizeof</b>(<b>DEVMODE</b>), and set the <b>dmDriverExtra</b> member to indicate the size, in bytes, of the additional space available to receive private driver-data. 
<p>
The <b>EnumDisplaySettings</b> function sets values for the following five <b>DEVMODE</b> members: 

<ul>
<li>
<b>dmBitsPerPel</b></li>
<li>
<b>dmPelsWidth</b></li>
<li>
<b>dmPelsHeight</b></li>
<li>
<b>dmDisplayFlags</b></li>
<li>
<b>dmDisplayFrequency</b></li>
</ul>
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.  </p>
<h4>Remarks</h4>
<p>
The function fails if<i> iModeNum</i> is greater than the index of the display device's last graphics mode. As noted in the description of the <i>iModeNum</i> parameter, you can use this behavior to enumerate all of a display device's graphics modes. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.51 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="devcons_0g6r.htm">Device Contexts Overview</a>, <a href="devcons_7e2b.htm">Device Context Functions</a>, <a href="devcons_7gz7.htm"><b>ChangeDisplaySettings</b></a>, <a href="devcons_3tfc.htm"><b>ChangeDisplaySettingsEx</b></a>, <a href="devcons_5g83.htm"><b>CreateDC</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_createdesktop">
</object><a href=JavaScript:alink_2.Click()><b>CreateDesktop</b></a>, <a href="prntspol_8nle.htm"><b>DEVMODE</b></a>, <a href="devcons_2303.htm"><b>EnumDisplayDevices</b></a><b> </b></p>
<p>&nbsp;</p></body>
</HTML>
