<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BitBlt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_bitblt"></a>BitBlt</h1>
<p>
The <b>BitBlt</b> function performs a bit-block transfer of the color data corresponding to a rectangle of pixels from the specified source device context into a destination device context. </p>
<pre><code><b>BOOL BitBlt(
  HDC</b><i> hdcDest</i><b>, </b>// handle to destination device context
<b>  int</b><i> nXDest</i><b>,  </b>// x-coordinate of destination rectangle's upper-left 
               // corner
<b>  int</b><i> nYDest</i><b>,  </b>// y-coordinate of destination rectangle's upper-left 
               // corner
<b>  int</b><i> nWidth</i><b>,  </b>// width of destination rectangle
<b>  int</b><i> nHeight</i><b>, </b>// height of destination rectangle
<b>  HDC</b><i> hdcSrc</i><b>,  </b>// handle to source device context
<b>  int</b><i> nXSrc</i><b>,   </b>// x-coordinate of source rectangle's upper-left 
               // corner
<b>  int</b><i> nYSrc</i><b>,   </b>// y-coordinate of source rectangle's upper-left 
               // corner
<b>  DWORD</b><i> dwRop</i>  // raster operation code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdcDest</i></dt>
<dd>
Handle to the destination device context. </dd>
<dt>
<i>nXDest</i></dt>
<dd>
Specifies the logical x-coordinate of the upper-left corner of the destination rectangle.</dd>
<dt>
<i>nYDest</i></dt>
<dd>
Specifies the logical y-coordinate of the upper-left corner of the destination rectangle. </dd>
<dt>
<i>nWidth</i></dt>
<dd>
Specifies the logical width of the source and destination rectangles. </dd>
<dt>
<i>nHeight</i></dt>
<dd>
Specifies the logical height of the source and the destination rectangles. </dd>
<dt>
<i>hdcSrc</i></dt>
<dd>
Handle to the source device context. </dd>
<dt>
<i>nXSrc</i></dt>
<dd>
Specifies the logical x-coordinate of the upper-left corner of the source rectangle. </dd>
<dt>
<i>nYSrc</i></dt>
<dd>
Specifies the logical y-coordinate of the upper-left corner of the source rectangle. </dd>
<dt>
<i>dwRop</i></dt>
<dd>
Specifies a raster-operation code. These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color. 
<p>
The following list shows some common raster operation codes: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=29%>Value</th>
<th align=left width=71%>Description</th>
</tr>
<tr valign=top>
<td width=29%>BLACKNESS</td>
<td width=71%>Fills the destination rectangle using the color associated with index 0 in the physical palette. (This color is black for the default physical palette.)</td>
</tr>
<tr valign=top>
<td width=29%>DSTINVERT</td>
<td width=71%>Inverts the destination rectangle.</td>
</tr>
<tr valign=top>
<td width=29%>MERGECOPY</td>
<td width=71%>Merges the colors of the source rectangle with the specified pattern by using the Boolean AND operator.</td>
</tr>
<tr valign=top>
<td width=29%>MERGEPAINT</td>
<td width=71%>Merges the colors of the inverted source rectangle with the colors of the destination rectangle by using the Boolean OR operator.</td>
</tr>
<tr valign=top>
<td width=29%>NOTSRCCOPY</td>
<td width=71%>Copies the inverted source rectangle to the destination.</td>
</tr>
<tr valign=top>
<td width=29%>NOTSRCERASE</td>
<td width=71%>Combines the colors of the source and destination rectangles by using the Boolean OR operator and then inverts the resultant color.</td>
</tr>
<tr valign=top>
<td width=29%>PATCOPY</td>
<td width=71%>Copies the specified pattern into the destination bitmap.</td>
</tr>
<tr valign=top>
<td width=29%>PATINVERT</td>
<td width=71%>Combines the colors of the specified pattern with the colors of the destination rectangle by using the Boolean XOR operator.</td>
</tr>
<tr valign=top>
<td width=29%>PATPAINT</td>
<td width=71%>Combines the colors of the pattern with the colors of the inverted source rectangle by using the Boolean OR operator. The result of this operation is combined with the colors of the destination rectangle by using the Boolean OR operator.</td>
</tr>
<tr valign=top>
<td width=29%>SRCAND</td>
<td width=71%>Combines the colors of the source and destination rectangles by using the Boolean AND operator.</td>
</tr>
<tr valign=top>
<td width=29%>SRCCOPY</td>
<td width=71%>Copies the source rectangle directly to the destination rectangle.</td>
</tr>
<tr valign=top>
<td width=29%>SRCERASE</td>
<td width=71%>Combines the inverted colors of the destination rectangle with the colors of the source rectangle by using the Boolean AND operator.</td>
</tr>
<tr valign=top>
<td width=29%>SRCINVERT</td>
<td width=71%>Combines the colors of the source and destination rectangles by using the Boolean XOR operator.</td>
</tr>
<tr valign=top>
<td width=29%>SRCPAINT</td>
<td width=71%>Combines the colors of the source and destination rectangles by using the Boolean OR operator.</td>
</tr>
<tr valign=top>
<td width=29%>WHITENESS</td>
<td width=71%>Fills the destination rectangle using the color associated with index 1 in the physical palette. (This color is white for the default physical palette.)</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
If a rotation or shear transformation is in effect in the source device context, <b>BitBlt</b> returns an error. If other transformations exist in the source device context (and a matching transformation is <i>not</i> in effect in the destination device context), the rectangle in the destination device context is stretched, compressed, or rotated as necessary. </p>
<p>
If the color formats of the source and destination device contexts do not match, the <b>BitBlt</b> function converts the source color format to match the destination format. </p>
<p>
When an enhanced metafile is being recorded, an error occurs if the source device context identifies an enhanced-metafile device context. </p>
<p>
Not all devices support the <b>BitBlt</b> function. For more information, see the RC_BITBLT raster capability entry in  the <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a><b> </b>function as well as the following functions: <a href="bitmaps_229g.htm"><b>MaskBlt</b></a>, <a href="bitmaps_2dis.htm"><b>PlgBlt</b></a>, <a href="bitmaps_9cok.htm"><b>StretchBlt</b></a>. </p>
<p>
<b>BitBlt</b> returns an error if the source and destination device contexts represent different devices. </p>
<p>
<b>ICM:</b> No color management is performed when blits occur. </p>
<p>
<b>Windows CE:</b> In Windows CE version 1.0, the <i>dwRop</i> parameter can only be assigned the following values:</p>
<p class=indent1>
SRCCOPY</p>
<p class=indent1>
SRCAND</p>
<p class=indent1>
SRCPAINT </p>
<p class=indent1>
SRCINVERT </p>
<p>
In Windows CE version 2.0, the <i>dwRop</i> parameter can be any ROP3. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="bitmaps_99ir.htm">Bitmaps Overview</a>, <a href="bitmaps_87eb.htm">Bitmap Functions</a> </p>
<p>&nbsp;</p></body>
</HTML>
