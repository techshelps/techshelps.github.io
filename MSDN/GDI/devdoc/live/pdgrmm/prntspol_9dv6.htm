<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRINTER_ENUM_VALUES</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_printer_enum_values_str"></a>PRINTER_ENUM_VALUES</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
The <b>PRINTER_ENUM_VALUES</b> structure specifies the value name, type, and data for a printer configuration value returned by the <a href="prntspol_1708.htm"><b>EnumPrinterDataEx</b></a> function. </p>
<pre><code>typedef struct _PRINTER_ENUM_VALUES {
    LPTSTR   pValueName;
    DWORD   cbValueName;
    DWORD   dwType;
    LPBYTE  pData;
    DWORD   cbData;
} PRINTER_ENUM_VALUES, *PPRINTER_ENUM_VALUES, *LPPRINTER_ENUM_VALUES;
 </code></pre>
<h4>Members</h4>
<dl>
<dt>
<b>pValueName</b></dt>
<dd>
Pointer to a null-terminated string that specifies the name of the retrieved value. </dd>
<dt>
<b>cbValueName</b></dt>
<dd>
Specifies the number of bytes in <i>pValueName</i>, including the terminating NULL character.</dd>
<dt>
<b>dwType</b></dt>
<dd>
Pointer to a variable that receives a type code for the retrieved value. The type code can be one of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>REG_BINARY</td>
<td width=51%>Binary data in any form.</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD</td>
<td width=51%>A 32-bit number.</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD_LITTLE_ENDIAN</td>
<td width=51%>A 32-bit number in little-endian format. This is equivalent to REG_DWORD.<p>
In little-endian format, a multi-byte value is stored in memory from the lowest byte (the "little end") to the highest byte. For example, the value 0x12345678 is stored as (0x78 0x56 0x34 0x12) in little-endian format.</p>
<p>
Windows and Windows NT are designed to run on little-endian computer architectures. A user may connect to computers that have big-endian architectures, such as some UNIX systems. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD_BIG_ENDIAN</td>
<td width=51%>A 32-bit number in big-endian format. <p>
In big-endian format, a multi-byte value is stored in memory from the highest byte (the "big end") to the lowest byte. For example, the value 0x12345678 is stored as (0x12 0x34 0x56 0x78) in big-endian format.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>REG_EXPAND_SZ</td>
<td width=51%>A null-terminated string that contains unexpanded references to environment variables (for example, "%PATH%"). It will be a Unicode or ANSI string, depending on whether you use the Unicode or ANSI functions.</td>
</tr>
<tr valign=top>
<td width=49%>REG_LINK</td>
<td width=51%>A Unicode symbolic link.</td>
</tr>
<tr valign=top>
<td width=49%>REG_MULTI_SZ</td>
<td width=51%>An array of null-terminated strings, terminated by two null characters.</td>
</tr>
<tr valign=top>
<td width=49%>REG_NONE</td>
<td width=51%>No defined value type.</td>
</tr>
<tr valign=top>
<td width=49%>REG_RESOURCE_LIST</td>
<td width=51%>A device-driver resource list.</td>
</tr>
<tr valign=top>
<td width=49%>REG_SZ</td>
<td width=51%>A null-terminated string. It will be a Unicode or ANSI string, depending on whether you use the Unicode or ANSI functions.</td>
</tr>
</table><br>

</dd>
<dt>
<b>pData</b></dt>
<dd>
Pointer to a buffer containing the data for the retrieved value.</dd>
<dt>
<b>cbData</b></dt>
<dd>
Specifies the number of bytes retrieved in the <i>pData</i> buffer. 
</dd>
</dl>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 5.0 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winspool.h.<br>
<b>&nbsp;&nbsp;Unicode: </b>Defined as Unicode and ANSI structures.</p>
<h4>See Also</h4>
<p>
<a href="prntspol_62ia.htm">Printing and Print Spooler Overview</a>, <a href="prntspol_5nzn.htm">Printing and Print Spooler Structures</a>, <a href="prntspol_1708.htm"><b>EnumPrinterDataEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
