<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RealizePalette</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_realizepalette"></a>RealizePalette</h1>
<p>
The <b>RealizePalette</b> function maps palette entries from the current logical palette to the system palette. </p>
<pre><code><b>UINT RealizePalette(
  HDC</b><i> hdc</i>   // handle of device context
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to the device context (DC) into which a logical palette has been selected. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the number of entries in the logical palette mapped to the system palette.</p>
<p>
If the function fails, the return value is GDI_ERROR. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
An application can determine whether a device supports palette operations by calling the <b>GetDeviceCaps</b> function and specifying the RASTERCAPS constant. </p>
<p>
The <b>RealizePalette</b> function modifies the palette for the device associated with the specified device context. If the device context is a memory DC, the color table for the bitmap selected into the DC is modified. If the device context is a display DC, the physical palette for that device is modified. </p>
<p>
A logical color palette is a buffer between color-intensive applications and the system, allowing these applications to use as many colors as needed without interfering with colors displayed by other windows. </p>
<p>
When an application's window has the focus and it calls the <b>RealizePalette</b> function, the system attempts to realize as many of the requested colors as possible. The same is also true for applications with inactive windows. </p>
<p>
<b>Windows CE:</b> Windows CE does not arbitrate between the palettes of the background and foreground applications. The foreground application has complete control of the system palette. Therefore, Windows CE does not perform any color matching operations for foreground applications; it simply overwrites the system palette entries with the <i>hdc </i>parameter's palette entries<i>.</i></p>
<p>
Windows CE does not support <b>RealizePalette</b> for background applications.</p>
<p>
<b>RealizePalette</b> will fail if the device associated with <i>hdc</i> does not have a settable palette. Use <b>GetDeviceCaps</b> to find out if the device has a settable palette before using <b>RealizePalette</b>. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="colors_87zn.htm">Colors Overview</a>, <a href="colors_61v7.htm">Color Functions</a>, <a href="colors_4x5x.htm"><b>CreatePalette</b></a>, <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a>, <a href="colors_4u79.htm"><b>SelectPalette</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
