<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TabbedTextOut</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_tabbedtextout"></a>TabbedTextOut</h1>
<p>
The <b>TabbedTextOut</b> function writes a character string at a specified location, expanding tabs to the values specified in an array of tab-stop positions. Text is written in the currently selected font, background color, and text color. </p>
<pre><code><b>LONG TabbedTextOut(
  HDC</b><i> hDC</i><b>,                    </b>// handle to device context
<b>  int</b><i> X</i><b>,                      </b>// x-coordinate of starting position
<b>  int</b><i> Y</i><b>,                      </b>// y-coordinate of starting position
<b>  LPCTSTR</b><i> lpString</i><b>,           </b>// pointer to string
<b>  int</b><i> nCount</i><b>,                 </b>// number of characters in string
<b>  int</b><i> nTabPositions</i><b>,          </b>// number of tabs in array
<b>  LPINT</b><i> lpnTabStopPositions</i><b>,  </b>// pointer to array for tab positions
<b>  int</b><i> nTabOrigin</i>              // x-coordinate for tab expansion
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hDC</i></dt>
<dd>
Handle to the device context. </dd>
<dt>
<i>X</i></dt>
<dd>
Specifies the x-coordinate of the starting point of the string, in logical units. </dd>
<dt>
<i>Y</i></dt>
<dd>
Specifies the y-coordinate of the starting point of the string, in logical units. </dd>
<dt>
<i>lpString</i></dt>
<dd>
Pointer to the character string to draw. The string does not need to be zero-terminated, since <i>nCount</i> specifies the length of the string. </dd>
<dt>
<i>nCount</i></dt>
<dd>
Specifies the number of characters in the string. </dd>
<dt>
<i>nTabPositions</i></dt>
<dd>
Specifies the number of values in the array of tab-stop positions. </dd>
<dt>
<i>lpnTabStopPositions</i></dt>
<dd>
Pointer to an array containing the tab-stop positions, in device units. The tab stops must be sorted in increasing order; the smallest x-value should be the first item in the array. 
<p>
<b>Windows 95:</b> A tab stop can be specified as a negative value, which causes text to be right-aligned on the tab stop rather than left-aligned. 
</dd>
<dt>
<i>nTabOrigin</i></dt>
<dd>
Specifies the x-coordinate of the starting position from which tabs are expanded, in logical units. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the dimensions, in logical units, of the string. The height is in the high-order word and the width is in the low-order word. </p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
If the <i>nTabPositions</i> parameter is zero and the <i>lpnTabStopPositions</i> parameter is NULL, tabs are expanded to eight times the average character width. </p>
<p>
If <i>nTabPositions</i> is 1, the tab stops are separated by the distance specified by the first value in the <i>lpnTabStopPositions</i> array. </p>
<p>
If the <i>lpnTabStopPositions</i> array contains more than one value, a tab stop is set for each value in the array, up to the number specified by <i>nTabPositions</i>. </p>
<p>
The <i>nTabOrigin</i> parameter allows an application to call the <b>TabbedTextOut</b> function several times for a single line. If the application calls <b>TabbedTextOut</b> more than once with the <i>nTabOrigin</i> set to the same value each time, the function expands all tabs relative to the position specified by <i>nTabOrigin</i>. </p>
<p>
By default, the current position is not used or updated by the <b>TabbedTextOut</b> function. If an application needs to update the current position when it calls <b>TabbedTextOut</b>, the application can call the <b>SetTextAlign</b> function with the <i>wFlags</i> parameter set to TA_UPDATECP. When this flag is set, the system ignores the <i>X</i> and <i>Y</i> parameters on subsequent calls to the <b>TabbedTextOut</b> function, using the current position instead. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="fontext_8ctw.htm">Fonts and Text Overview</a>, <a href="fontext_9r77.htm">Font and Text Functions</a>, <a href="fontext_0odw.htm"><b>DrawText</b></a>, <a href="fontext_4rn8.htm"><b>GetTabbedTextExtent</b></a>, <a href="pantdraw_63mv.htm"><b>GrayString</b></a>, <a href="devcons_9v3o.htm"><b>SelectObject</b></a>, <a href="pantdraw_433m.htm"><b>SetBkColor</b></a>, <a href="fontext_20by.htm"><b>SetTextAlign</b></a>, <a href="fontext_8bsi.htm"><b>SetTextColor</b></a>, <a href="fontext_5yd0.htm"><b>TextOut</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
