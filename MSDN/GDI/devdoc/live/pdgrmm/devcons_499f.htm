<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateCompatibleDC</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createcompatibledc"></a>CreateCompatibleDC</h1>
<p>
The <b>CreateCompatibleDC</b> function creates a memory device context (DC) compatible with the specified device. </p>
<pre><code><b>HDC CreateCompatibleDC(
  HDC</b><i> hdc</i>   // handle to the device context
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to an existing device context. If this handle is NULL, the function creates a memory device context compatible with the application's current screen. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the handle to a memory device context.</p>
<p>
If the function fails, the return value is NULL. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
A memory device context is a device context that exists only in memory. When the memory device context is created, its display surface is exactly one monochrome pixel wide and one monochrome pixel high. Before an application can use a memory device context for drawing operations, it must select a bitmap of the correct width and height into the device context. This may be done by using <a href="bitmaps_1cxc.htm"><b>CreateCompatibleBitmap</b></a> specifying the height, width, and color organization required in the function call.  </p>
<p>
When a memory device context is created, all attributes are set to normal default values. The memory device context can be use as a normal device context. You can set the attributes to non-default values, obtain the current setting of its attributes, select pens, brushes and regions into it.</p>
<p>
The <b>CreateCompatibleDC</b> function can only be used with devices that support raster operations. An application can determine whether a device supports these operations by calling the <b>GetDeviceCaps</b> function. </p>
<p>
When you no longer need the memory device context, call the <b>DeleteDC</b> function to delete it. </p>
<p>
<b>ICM</b>: If the device context (DC) that is passed to this function through its<i> hdc</i> parameter is enabled for Independent Color Management (ICM), the DC created by the function is ICM-enabled. The source and destination color spaces are specified in the DC.&nbsp; </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="devcons_0g6r.htm">Device Contexts Overview</a>, <a href="devcons_7e2b.htm">Device Context Functions</a>, <a href="bitmaps_1cxc.htm"><b>CreateCompatibleBitmap</b></a>, <a href="devcons_2p2b.htm"><b>DeleteDC</b></a>, <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
