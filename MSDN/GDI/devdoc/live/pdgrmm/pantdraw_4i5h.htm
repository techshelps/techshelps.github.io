<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>LockWindowUpdate</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_lockwindowupdate"></a>LockWindowUpdate</h1>
<p>
The <b>LockWindowUpdate</b> function disables or reenables drawing in the specified window. Only one window can be locked at a time. </p>
<pre><code><b>BOOL LockWindowUpdate(
  HWND</b><i> hWndLock</i>   // handle of window to lock
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWndLock</i></dt>
<dd>
Specifies the window in which drawing will be disabled. If this parameter is NULL, drawing in the locked window is enabled. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero, indicating that an error occurred or another window was already locked. </p>
<p>
<b>Windows NT: </b>To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
If an application with a locked window (or any locked child windows) calls the <a href="devcons_4esj.htm"><b>GetDC</b></a>, <a href="devcons_76wo.htm"><b>GetDCEx</b></a>, or <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a> function, the called function returns a device context with a visible region that is empty. This will occur until the application unlocks the window by calling <b>LockWindowUpdate</b>, specifying a value of NULL for <i>hWndLock</i>. </p>
<p>
If an application attempts to draw within a locked window, the system records the extent of the attempted operation in a bounding rectangle. When the window is unlocked, the system invalidates the area within this bounding rectangle, forcing an eventual <a href="pantdraw_88ac.htm">WM_PAINT</a> message to be sent to the previously locked window and its child windows. If no drawing has occurred while the window updates were locked, no area is invalidated. </p>
<p>
<b>LockWindowUpdate</b> does not make the given window invisible and does not clear the WS_VISIBLE style bit. </p>
<p>
A locked window cannot be moved. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="pantdraw_3wtj.htm">Painting and Drawing Overview</a>, <a href="pantdraw_8igj.htm">Painting and Drawing Functions</a>, <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a>, <a href="devcons_4esj.htm"><b>GetDC</b></a>, <a href="devcons_76wo.htm"><b>GetDCEx</b></a>, <a href="pantdraw_88ac.htm">WM_PAINT</a> </p>
<p>&nbsp;</p></body>
</HTML>
