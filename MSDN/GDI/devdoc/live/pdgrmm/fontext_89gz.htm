<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Character Sets Used by Fonts</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_character_sets_used_by_fonts"></a>Character Sets Used by Fonts</h2>
<p>
All fonts use a character set. A character set contains punctuation marks, numerals, uppercase and lowercase letters, and all other printable characters. Each element of a character set is identified by a number. </p>
<p>
Most character sets used in are supersets of the U.S. ASCII character set, which defines characters for the 96 numeric values from 32 through 127. There are five major groups of character sets: 
<ul>
<li>
Windows </li>
<li>
Unicode </li>
<li>
OEM (original equipment manufacturer) </li>
<li>
Symbol </li>
<li>
Vendor-specific </li>
</ul>
<h4>Windows Character Set</h4>
<p>
The Windows character set is the most commonly used character set in Win32 programming. It is essentially equivalent to the ANSI character set. The blank character is the first character in the Windows character set. It has a hexadecimal value of 0x20 (decimal 32). The last character in the Windows character set has a hexadecimal value of 0xFF (decimal 255). </p>
<p>
Many fonts specify a default character. Whenever a request is made for a character that is not in the font, the system provides this default character. Many fonts using the Windows character set specify the period (.) as the default character. TrueType and OpenType fonts typically use an open box as the default character. </p>
<p>
Fonts use a break character called a quad to separate words and justify text. Most fonts using the Windows character set specify that the blank character will serve as the break character. </p>
<p>
Microsoft® Windows® version 3.1 added 24 characters to the Windows code page, as shown in the following table. </p>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=18%>Character</th>
<th align=left width=32%>Name</th>
<th align=left width=50%>Windows Character Code</th>
</tr>
<tr valign=top>
<td width=18%>‚</td>
<td width=32%>base line single quote</td>
<td width=50%>130 </td>
</tr>
<tr valign=top>
<td width=18%>ƒ</td>
<td width=32%>florin</td>
<td width=50%>131 </td>
</tr>
<tr valign=top>
<td width=18%>„</td>
<td width=32%>base line double quote</td>
<td width=50%>132 </td>
</tr>
<tr valign=top>
<td width=18%>…</td>
<td width=32%>ellipsis</td>
<td width=50%>133 </td>
</tr>
<tr valign=top>
<td width=18%>†</td>
<td width=32%>dagger</td>
<td width=50%>134 </td>
</tr>
<tr valign=top>
<td width=18%>‡</td>
<td width=32%>double dagger</td>
<td width=50%>135 </td>
</tr>
<tr valign=top>
<td width=18%>ˆ</td>
<td width=32%>circumflex</td>
<td width=50%>136 </td>
</tr>
<tr valign=top>
<td width=18%>‰</td>
<td width=32%>permille</td>
<td width=50%>137 </td>
</tr>
<tr valign=top>
<td width=18%>Š</td>
<td width=32%>S Hacek</td>
<td width=50%>138 </td>
</tr>
<tr valign=top>
<td width=18%>‹</td>
<td width=32%>left single guillemet</td>
<td width=50%>139 </td>
</tr>
<tr valign=top>
<td width=18%>Œ</td>
<td width=32%>OE ligature</td>
<td width=50%>140 </td>
</tr>
<tr valign=top>
<td width=18%>'</td>
<td width=32%>left single quote</td>
<td width=50%>145 </td>
</tr>
<tr valign=top>
<td width=18%>'</td>
<td width=32%>right single quote</td>
<td width=50%>146 </td>
</tr>
<tr valign=top>
<td width=18%>"</td>
<td width=32%>left double quote</td>
<td width=50%>147 </td>
</tr>
<tr valign=top>
<td width=18%>"</td>
<td width=32%>right double quote</td>
<td width=50%>148 </td>
</tr>
<tr valign=top>
<td width=18%>·</td>
<td width=32%>bullet</td>
<td width=50%>149 </td>
</tr>
<tr valign=top>
<td width=18%>–</td>
<td width=32%>en dash</td>
<td width=50%>150 </td>
</tr>
<tr valign=top>
<td width=18%>—</td>
<td width=32%>em dash</td>
<td width=50%>151 </td>
</tr>
<tr valign=top>
<td width=18%>˜</td>
<td width=32%>tilde</td>
<td width=50%>152 </td>
</tr>
<tr valign=top>
<td width=18%>™</td>
<td width=32%>trademark ligature</td>
<td width=50%>153 </td>
</tr>
<tr valign=top>
<td width=18%>š</td>
<td width=32%>s Hacek</td>
<td width=50%>154 </td>
</tr>
<tr valign=top>
<td width=18%>›</td>
<td width=32%>right single guillemet</td>
<td width=50%>155 </td>
</tr>
<tr valign=top>
<td width=18%>œ</td>
<td width=32%>oe ligature</td>
<td width=50%>156 </td>
</tr>
<tr valign=top>
<td width=18%>Ÿ</td>
<td width=32%>Y Dieresis</td>
<td width=50%>159 </td>
</tr>
</table><br>
<p>
It should be noted that the characters for left and right single quote were first added to the character set for the release of Windows version 3.0. </p>
<h4>Unicode Character Set</h4>
<p>
The Windows character set uses 8 bits to represent each character; therefore, the maximum number of characters that can be expressed using 8 bits is 256 (2^8). This is usually sufficient for Western languages, including the diacritical marks used in French, German, Spanish, and other languages. However, Eastern languages employ thousands of separate characters, which cannot be encoded by using a single-byte coding scheme. With the proliferation of computer commerce, double-byte coding schemes were developed so that characters could be represented in 8-bit, 16-bit, 24-bit, or 32-bit sequences. This requires complicated passing algorithms; even so, using different code sets could yield entirely different results on two different computers. </p>
<p>
To address the problem of multiple coding schemes, the Unicode standard for data representation was developed. A 16-bit character coding scheme, Unicode can represent 65,536 (2^16) characters, which is enough to include all languages in computer commerce today, as well as punctuation marks, mathematical symbols, and room for future expansion. Unicode establishes a unique code for every character to ensure that character translation is always accurate. </p>
<h4>OEM Character Set</h4>
<p>
The OEM character set is typically used in full-screen MS-DOS® sessions for screen display. Characters 32 through 127 are usually the same in the OEM, U.S. ASCII, and Windows character sets. The other characters in the OEM character set (0 through 31 and 128 through 255) correspond to the characters that can be displayed in a full-screen MS-DOS session. These characters are generally different from the Windows characters. </p>
<h4>Symbol Character Set</h4>
<p>
The Symbol character set contains special characters typically used to represent mathematical and scientific formulas. </p>
<h4>Vendor-Specific Character Sets</h4>
<p>
Many printers and other output devices provide fonts based on character sets that differ from the Windows and OEM sets — for example, the Extended Binary Coded Decimal Interchange Code (EBCDIC) character set. To use one of these character sets, the printer driver translates from the Windows character set to the vendor-specific character set. </p>
<p>&nbsp;</p></body>
</HTML>
