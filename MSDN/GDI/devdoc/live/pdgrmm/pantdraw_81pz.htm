<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RedrawWindow</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_redrawwindow"></a>RedrawWindow</h1>
<p>
The <b>RedrawWindow</b> function updates the specified rectangle or region in a window's client area. </p>
<pre><code><b>BOOL RedrawWindow(
  HWND</b><i> hWnd</i><b>,        </b>// handle of window
<b>  CONST RECT</b><i> *lprcUpdate</i><b>,</b>
<b>                    </b>// address of structure with update rectangle
<b>  HRGN</b><i> hrgnUpdate</i><b>,  </b>// handle of update region
<b>  UINT</b><i> flags</i>        // array of redraw flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window to be redrawn. If this parameter is NULL, the desktop window is updated. </dd>
<dt>
<i>lprcUpdate</i></dt>
<dd>
Pointer to a <a href="rectangl_6cqa.htm"><b>RECT</b></a> structure containing the coordinates of the update rectangle. This parameter is ignored if the <i>hrgnUpdate</i> parameter identifies a region. </dd>
<dt>
<i>hrgnUpdate</i></dt>
<dd>
Handle to the update region. If both the <i>hrgnUpdate</i> and <i>lprcUpdate</i> parameters are NULL, the entire client area is added to the update region. </dd>
<dt>
<i>flags</i></dt>
<dd>
Specifies one or more redraw flags. This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected by <b>RedrawWindow</b>. 
<p>
The following flags are used to invalidate the window: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=39%>Flag (invalidation)</th>
<th align=left width=61%>Description</th>
</tr>
<tr valign=top>
<td width=39%>RDW_ERASE</td>
<td width=61%>Causes the window to receive a WM_ERASEBKGND message when the window is repainted. The RDW_INVALIDATE flag must also be specified; otherwise, RDW_ERASE has no effect.</td>
</tr>
<tr valign=top>
<td width=39%>RDW_FRAME</td>
<td width=61%>Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message. The RDW_INVALIDATE flag must also be specified; otherwise, RDW_FRAME has no effect. The WM_NCPAINT message is typically not sent during the execution of <b>RedrawWindow</b> unless either RDW_UPDATENOW or RDW_ERASENOW is specified.</td>
</tr>
<tr valign=top>
<td width=39%>RDW_INTERNALPAINT</td>
<td width=61%>Causes a WM_PAINT<b> </b>message to be posted to the window regardless of whether any portion of the window is invalid.</td>
</tr>
<tr valign=top>
<td width=39%>RDW_INVALIDATE</td>
<td width=61%>Invalidates <i>lprcUpdate</i> or <i>hrgnUpdate</i> (only one may be non-NULL). If both are NULL, the entire window is invalidated.</td>
</tr>
</table><br>


<p>
The following flags are used to validate the window: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=43%>Flag (validation)</th>
<th align=left width=57%>Description</th>
</tr>
<tr valign=top>
<td width=43%>RDW_NOERASE</td>
<td width=57%>Suppresses any pending WM_ERASEBKGND messages.</td>
</tr>
<tr valign=top>
<td width=43%>RDW_NOFRAME</td>
<td width=57%>Suppresses any pending WM_NCPAINT messages. This flag must be used with RDW_VALIDATE and is typically used with RDW_NOCHILDREN. RDW_NOFRAME should be used with care, as it could cause parts of a window to be painted improperly.</td>
</tr>
<tr valign=top>
<td width=43%>RDW_NOINTERNALPAINT</td>
<td width=57%>Suppresses any pending internal WM_PAINT<b> </b>messages. This flag does not affect WM_PAINT<b> </b>messages resulting from a non-NULL update area.</td>
</tr>
<tr valign=top>
<td width=43%>RDW_VALIDATE</td>
<td width=57%>Validates <i>lprcUpdate</i> or <i>hrgnUpdate</i> (only one may be non-NULL). If both are NULL, the entire window is validated. This flag does not affect internal WM_PAINT<b> </b>messages.</td>
</tr>
</table><br>


<p>
The following flags control when repainting occurs. <b>RedrawWindow</b> will not repaint unless one of these flags is specified. 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=35%>Flag</th>
<th align=left width=65%>Description</th>
</tr>
<tr valign=top>
<td width=35%>RDW_ERASENOW</td>
<td width=65%>Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT and WM_ERASEBKGND messages, if necessary, before the function returns. WM_PAINT<b> </b>messages are received at the ordinary time.</td>
</tr>
<tr valign=top>
<td width=35%>RDW_UPDATENOW</td>
<td width=65%>Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT, WM_ERASEBKGND, and WM_PAINT<b> </b>messages, if necessary, before the function returns.</td>
</tr>
</table><br>


<p>
By default, the windows affected by <b>RedrawWindow</b> depend on whether the given window has the WS_CLIPCHILDREN style. Child windows that are not the WS_CLIPCHILDREN style are unaffected; non-WS_CLIPCHILDREN windows are recursively validated or invalidated until a WS_CLIPCHILDREN window is encountered. The following flags control which windows are affected by the <b>RedrawWindow</b> function: 

<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=36%>Flag</th>
<th align=left width=64%>Description</th>
</tr>
<tr valign=top>
<td width=36%>RDW_ALLCHILDREN</td>
<td width=64%>Includes child windows, if any, in the repainting operation.</td>
</tr>
<tr valign=top>
<td width=36%>RDW_NOCHILDREN</td>
<td width=64%>Excludes child windows, if any, from the repainting operation.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT: </b>To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
When <b>RedrawWindow</b> is used to invalidate part of the desktop window, the desktop window does not receive a WM_PAINT<b> </b>message. To repaint the desktop, an application uses the RDW_ERASE flag to generate a WM_ERASEBKGND message. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="pantdraw_3wtj.htm">Painting and Drawing Overview</a>, <a href="pantdraw_8igj.htm">Painting and Drawing Functions</a>, <a href="pantdraw_4dkk.htm"><b>GetUpdateRect</b></a>, <a href="pantdraw_5jfy.htm"><b>GetUpdateRgn</b></a>, <a href="pantdraw_7ano.htm"><b>InvalidateRect</b></a>, <a href="pantdraw_4c32.htm"><b>InvalidateRgn</b></a>, <a href="rectangl_6cqa.htm"><b>RECT</b></a>, <a href="pantdraw_4zef.htm"><b>UpdateWindow</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
