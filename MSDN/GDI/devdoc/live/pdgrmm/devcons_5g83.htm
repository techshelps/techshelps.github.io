<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CreateDC</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_createdc"></a>CreateDC</h1>
<p>
The <b>CreateDC</b> function creates a device context (DC) for a device by using the specified name. </p>
<pre><code><b>HDC CreateDC(
  LPCTSTR</b><i> lpszDriver</i><b>,  </b>// pointer to string specifying driver name
<b>  LPCTSTR</b><i> lpszDevice</i><b>,  </b>// pointer to string specifying device name
<b>  LPCTSTR</b><i> lpszOutput</i><b>,  </b>// do not use; set to NULL
<b>  CONST DEVMODE</b><i> *lpInitData</i> 
                       // pointer to optional printer data
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>lpszDriver</i></dt>
<dd>
<b>Windows NT:</b> Pointer to a null-terminated character string that specifies either "DISPLAY" for a display driver, or the name of a printer driver, which is usually "WINSPOOL".
<p>
<b>Windows 95 and Windows 98:</b> In Win32-based applications, this parameter is ignored and should be NULL, with one exception: You may obtain a display device context by specifying the null-terminated string "DISPLAY". If this parameter is "DISPLAY", all other parameters must be NULL.
</dd>
<dt>
<i>lpszDevice</i></dt>
<dd>
Pointer to a null-terminated character string that specifies the name of the specific output device being used, as shown by the Print Manager (for example, "Epson FX-80"). It is not the printer model name. The <i>lpszDevice</i> parameter must be used. </dd>
<dt>
<i>lpszOutput</i></dt>
<dd>
This parameter is ignored for Win32-based applications, and should set to NULL. It exists to provide compatibility for 16-bit Windows-based. For more information, see the following Remarks section.</dd>
<dt>
<i>lpInitData</i></dt>
<dd>
Pointer to a <a href="prntspol_8nle.htm"><b>DEVMODE</b></a> structure containing device-specific initialization data for the device driver. The <a href="prntspol_7k1f.htm"><b>DocumentProperties</b></a> function retrieves this structure filled in for a specified device. The <i>lpInitData</i> parameter must be NULL if the device driver is to use the default initialization (if any) specified by the user. </dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the handle to a device context for the specified device.</p>
<p>
If the function fails, the return value is NULL. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
Applications written for 16-bit versions of Windows used the <i>lpszOutput</i> parameter to specify a port name or to print to a file. Win32-based applications do not need to specify a port name. Win32-based applications can print to a file by calling the <b>StartDoc</b> function with a <b>DOCINFO</b> structure whose <b>lpszOutput</b> member specifies the path of the output filename.</p>
<p>
When you no longer need the device context, call the <b>DeleteDC</b> function to delete it. </p>
<p>
<b>ICM:</b> By setting the <b>dmICMMethod</b> member of the <a href="prntspol_8nle.htm">DEVMODE</a> structure(pointed to by the <i>pInitData </i>parameter) to the appropriate value, ICM can be enabled. </p>
<p>
<b>Windows CE:</b> If no driver name is given for the <i>lpszDriver</i> parameter, Windows CE returns a screen DC. </p>
<p>
Windows CE ignores the <i>lpszDevice</i> parameter. </p>
<p>
Windows CE passes the <i>lpInitData</i> and <i>lpszOutput</i> parameters to the driver without modification.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 2.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="devcons_0g6r.htm">Device Contexts Overview</a>, <a href="devcons_7e2b.htm">Device Context Functions</a>, <a href="devcons_2p2b.htm"><b>DeleteDC</b></a>, <a href="prntspol_8nle.htm"><b>DEVMODE</b></a>, <a href="prntspol_9ilu.htm"><b>DOCINFO</b></a>, <a href="prntspol_7k1f.htm"><b>DocumentProperties</b></a>, <a href="prntspol_95sz.htm"><b>StartDoc</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
