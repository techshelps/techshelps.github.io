<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>About Bitmaps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_about_bitmaps"></a>About Bitmaps</h1>
<p>
A bitmap is one of the GDI objects that can be selected into a <i>device context</i> (DC)<i>. </i><a href="devcons_0g6r.htm">Device Contexts</a> are structures that define a set of graphic objects and their associated attributes, and graphic modes that affect output. The table below describes the GDI objects that can be selected into a DC.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=27%>Graphic Object</th>
<th align=left width=73%>Purpose </th>
</tr>
<tr valign=top>
<td width=27%>Bitmaps</td>
<td width=73%>A <i>bitmap</i> is used to create, manipulate (scale, scroll, rotate, and paint), and store images as files on a disk. </td>
</tr>
<tr valign=top>
<td width=27%><a href="brushes_9ak3.htm">Brushes</a></td>
<td width=73%>A <i>brush</i> is  used to paint the interior of polygons, ellipses, and paths.</td>
</tr>
<tr valign=top>
<td width=27%><a href="fontext_8ctw.htm">Fonts</a> </td>
<td width=73%><i>Fonts</i> are used to draw text on video displays and other output devices. </td>
</tr>
<tr valign=top>
<td width=27%><a href="colors_92hx.htm">Logical Palette</a></td>
<td width=73%>A <i>logical palette</i> is a color palette that an application creates and associates with a given device context. </td>
</tr>
<tr valign=top>
<td width=27%><a href="paths_8acz.htm">Paths</a></td>
<td width=73%>A <i>path</i> is one or more figures (or shapes) that are filled, outlined, or both filled and outlined. </td>
</tr>
<tr valign=top>
<td width=27%><a href="pens_1q0j.htm">Pens</a></td>
<td width=73%>A <i>pen</i> is a graphics tool that a Win32-based application uses to draw lines and curves. </td>
</tr>
<tr valign=top>
<td width=27%><a href="regions_7ab7.htm">Regions</a></td>
<td width=73%>A <i>region</i> is a rectangle, polygon, or ellipse (or a combination of two or more of these shapes) that can be filled, painted, inverted, framed, and used to perform hit testing (testing for the cursor location). </td>
</tr>
</table><br>
<p>
From a developer's perspective, a <i>bitmap</i> consists of a collection of structures that specify or contain the following elements: 
<ul>
<li>
A header that describes the resolution of the device on which the rectangle of pixels was created, the dimensions of the rectangle, the size of the array of bits, and so on. </li>
<li>
A logical palette. </li>
<li>
An array of bits that defines the relationship between pixels in the bitmapped image and entries in the logical palette. </li>
</ul>
<p>
A bitmap size is related to the type of image it contains. Bitmap images can be either monochrome or color. In an image, each pixel corresponds to one or more bits in a bitmap. Monochrome images have a ratio of one bit per pixel. Color imaging is more complex. The number of colors that can be displayed by a bitmap is equal to 2 times the number of bits per pixel. A 256-color bitmap requires 8 bits per pixel. </p>
<p>
Control Panel applications are examples of applications that use bitmaps. When you select a wallpaper for your  desktop, you actually select a bitmap, which the system uses to paint the desktop background. The system creates the selected wallpaper pattern by repeatedly drawing a 32- by 32-pixel pattern on the desktop. The wallpaper pattern is stored as a bitmap in the file REDBRICK.BMP. </p>
<p>
The following illustration presents the developer's perspective of the bitmap found in the file REDBRICK.BMP. It shows a palette array, a 32- by 32-pixel rectangle, and the index array that maps colors from the palette to pixels in the rectangle. </p>
<p>
<img src="images/csbmp_01.gif" border=0></p>
<p>
In the preceding example, the rectangle of pixels was created on a VGA display device using a palette of 16 colors. A 16-color palette requires 4-bit indexes; therefore, the array that maps palette colors to pixel colors is composed of 4-bit indexes as well. (For more information about logical color-palettes, see <a href="colors_87zn.htm">Colors</a>.) </p>
<p>
<b>Note</b>&nbsp;&nbsp;In the above bitmap, the system maps indexes to pixels beginning with the bottom scan line of the rectangular region and ending with the top scan line. (A <i>scan line</i> is a single row of adjacent <i>pixels</i> on a video display.) For example, the first row of the array (row 0) corresponds to the bottom row of pixels, scan line 31. This is because the above bitmap is a "bottom-up" device-independent bitmap (DIB), a common type of bitmap. In "top-down" DIBs and in device-dependent bitmaps (DDB), The system maps indexes to pixels beginning with the top scan line.</p>
<p>&nbsp;</p></body>
</HTML>
