<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Preparing to Print</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_preparing_to_print"></a>Preparing to Print</h2>
<p>
The following code sample determines whether the selected printer is capable of printing bitmaps by calling the <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a> function, supplying the RASTERCAPS value. By examining this function's return value, the application can determine whether it should print a document or inform the user that the device does not support raster output. </p>
<pre><code>// Examine the raster capabilities of the device identified by pd.hDC 
// to verify that it supports the BitBlt function. 
 
if (!(GetDeviceCaps(pd.hDC, RASTERCAPS) 
    &amp; RC_BITBLT)) 
{ 
    DeleteDC(pd.hDC); 
    MessageBox(hwnd, 
        "Printer cannot display bitmaps.", 
        "Device Error", 
        MB_OK); 
    break; 
} 
 </code></pre>
<p>
After the sample application determines that the selected printer is capable of printing bitmaps, it follows these steps: 
<ol>
<li>
Sets a Boolean flag that the application's abort procedure can examine to determine whether to allow printing to continue. </li>
<li>
Registers the application's <a href="prntspol_21lv.htm"><b>AbortProc</b></a> function, which is used to cancel a print job. </li>
<li>
Displays a modeless Cancel dialog box. </li>
<li>
Disables the application's window while the dialog box is displayed. </li>
</ol>
<p>
The steps are illustrated in the following code sample.</p>
<pre><code>// Set the flag used by the AbortPrintJob dialog procedure. 
 
bPrint = TRUE; 
 
// Register the application's AbortProc function with GDI. 
 
SetAbortProc(pd.hDC, AbortProc); 
 
// Display the modeless Cancel dialog box. 
 
hdlgCancel = CreateDialog(hinst, (LPTSTR) "AbortDlg", 
    hwnd, (DLGPROC) AbortPrintJob); 
 
// Disable the application's window. 
 
EnableWindow(hwnd, FALSE); 
 </code></pre>
<p>
Once the application registers <a href="prntspol_21lv.htm"><b>AbortProc</b></a>, GDI calls the function repeatedly during the printing process to determine whether to cancel a job. In the current version of the Win32 API, GDI calls this function approximately every two seconds until the entire job has been spooled. </p>
<p>
If the user chooses to cancel the job, GDI notifies the spooler that it should delete the corresponding journal file from the print queue and reset the printer to its default state. </p>
<p>&nbsp;</p></body>
</HTML>
