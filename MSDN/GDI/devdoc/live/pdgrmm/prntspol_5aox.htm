<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SetPrinterData</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_setprinterdata"></a>SetPrinterData</h1>
<p>
The <b>SetPrinterData</b> function sets the configuration data for a printer or print server. </p>
<p>
<b>Windows NT 5.0 or later: </b>Calling <b>SetPrinterData</b> is equivalent to calling the <a href="prntspol_6o1k.htm"><b>SetPrinterDataEx</b></a> function with the <i>pKeyName</i> parameter set to "PrinterDriverData".</p>
<pre><code><b>DWORD SetPrinterData(
  HANDLE</b><i> hPrinter</i><b>,    </b>// handle to a printer or print server
<b>  LPTSTR</b><i> pValueName</i><b>,  </b>// string that identifies the data to set
<b>  DWORD</b><i> Type</i><b>,         </b>// specifies the type of data
<b>  LPBYTE</b><i> pData</i><b>,       </b>// pointer to the configuration data buffer
<b>  DWORD</b><i> cbData</i>        // size, in bytes, of buffer
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hPrinter</i></dt>
<dd>
Handle to the printer or print server for which the function sets configuration data. Use the <a href="prntspol_9qnm.htm"><b>OpenPrinter</b></a> function to retrieve this handle.</dd>
<dt>
<i>pValueName</i></dt>
<dd>
Pointer to a null-terminated string that identifies the data to set. 
<p>
For printers, this string is the name of a registry value under the printer's "PrinterDriverData" key in the registry. 

<p>
For print servers, this string is one of the predefined strings listed in the following Remarks section.
</dd>
<dt>
<i>Type</i></dt>
<dd>
Specifies the type of information to be stored as the value's data. This parameter can be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=49%>Value</th>
<th align=left width=51%>Meaning</th>
</tr>
<tr valign=top>
<td width=49%>REG_BINARY</td>
<td width=51%>Binary data in any form.</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD</td>
<td width=51%>A 32-bit number.</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD_LITTLE_ENDIAN</td>
<td width=51%>A 32-bit number in little-endian format. This is equivalent to REG_DWORD.<p>
In little-endian format, a multibyte value is stored in memory from the lowest byte (the "little end") to the highest byte. For example, the value 0x12345678 is stored as (0x78 0x56 0x34 0x12) in little-endian format.</p>
<p>
Windows and Windows NT are designed to run on little-endian computer architectures. A user may connect to computers that have big-endian architectures, such as some UNIX systems. </p>
</td>
</tr>
<tr valign=top>
<td width=49%>REG_DWORD_BIG_ENDIAN</td>
<td width=51%>A 32-bit number in big-endian format. <p>
In big-endian format, a multibyte value is stored in memory from the highest byte (the "big end") to the lowest byte. For example, the value 0x12345678 is stored as (0x12 0x34 0x56 0x78) in big-endian format.</p>
</td>
</tr>
<tr valign=top>
<td width=49%>REG_EXPAND_SZ</td>
<td width=51%>A null-terminated string that contains unexpanded references to environment variables (for example, "%PATH%"). It will be a Unicode or ANSI string, depending on whether you use the Unicode or ANSI functions.</td>
</tr>
<tr valign=top>
<td width=49%>REG_LINK</td>
<td width=51%>A Unicode symbolic link.</td>
</tr>
<tr valign=top>
<td width=49%>REG_MULTI_SZ</td>
<td width=51%>An array of null-terminated strings, terminated by two null characters.</td>
</tr>
<tr valign=top>
<td width=49%>REG_NONE</td>
<td width=51%>No defined value type.</td>
</tr>
<tr valign=top>
<td width=49%>REG_RESOURCE_LIST</td>
<td width=51%>A device-driver resource list.</td>
</tr>
<tr valign=top>
<td width=49%>REG_SZ</td>
<td width=51%>A null-terminated string. It will be a Unicode or ANSI string, depending on whether you use the Unicode or ANSI functions.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pData</i></dt>
<dd>
Pointer to an array of bytes that contains the printer configuration data. </dd>
<dt>
<i>cbData</i></dt>
<dd>
Specifies the size, in bytes, of the array. 
</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is ERROR_SUCCESS.</p>
<p>
If the function fails, the return value is an error value. </p>
<h4>Remarks</h4>
<p>
To retrieve existing configuration data for a printer, call the <a href="prntspol_4ss8.htm"><b>GetPrinterDataEx</b></a> or <a href="prntspol_0u3l.htm"><b>GetPrinterData</b></a> function. </p>
<p>
If <i>hPrinter</i> is a handle to a print server, <i>pValueName</i> can specify one of the following predefined values.</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=80%></th>
<th align=left width=20%></th>
</tr>
<tr valign=top>
<td colspan=2 width=100%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_DEFAULT_SPOOL_DIRECTORY</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_PORT_THREAD_PRIORITY_DEFAULT</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_PORT_THREAD_PRIORITY</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_SCHEDULER_THREAD_PRIORITY</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_BEEP_ENABLED</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_NET_POPUP</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_EVENT_LOG</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_MAJOR_VERSION</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_MINOR_VERSION</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_ARCHITECTURE</td>
<td width=20%></td>
</tr>
<tr valign=top>
<td width=80%>SPLREG_OS_VERSION</td>
<td width=20%></td>
</tr>
</table><br>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winspool.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use winspool.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="prntspol_62ia.htm">Printing and Print Spooler Overview</a>, <a href="prntspol_7mgj.htm">Printing and Print Spooler Functions</a>, <a href="prntspol_1gky.htm"><b>GetPrinter</b></a>, <a href="prntspol_0u3l.htm"><b>GetPrinterData</b></a>, <a href="prntspol_4ss8.htm"><b>GetPrinterDataEx</b></a>, <a href="prntspol_9qnm.htm"><b>OpenPrinter</b></a>, <a href="prntspol_6o1k.htm"><b>SetPrinterDataEx</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
