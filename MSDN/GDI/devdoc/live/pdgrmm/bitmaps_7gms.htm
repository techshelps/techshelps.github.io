<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetDIBits</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getdibits"></a>GetDIBits</h1>
<p>
The <b>GetDIBits</b> function retrieves the bits of the specified bitmap and copies them into a buffer using the specified format. </p>
<pre><code><b>int GetDIBits(
  HDC</b><i> hdc</i><b>,           </b>// handle to device context
<b>  HBITMAP</b><i> hbmp</i><b>,      </b>// handle to bitmap
<b>  UINT</b><i> uStartScan</i><b>,   </b>// first scan line to set in destination bitmap
<b>  UINT</b><i> cScanLines</i><b>,   </b>// number of scan lines to copy
<b>  LPVOID</b><i> lpvBits</i><b>,    </b>// address of array for bitmap bits
<b>  LPBITMAPINFO</b><i> lpbi</i><b>, </b>// address of structure with bitmap data
<b>  UINT</b><i> uUsage</i>        // RGB or palette index
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to the device context. </dd>
<dt>
<i>hbmp</i></dt>
<dd>
Handle to the bitmap. </dd>
<dt>
<i>uStartScan</i></dt>
<dd>
Specifies the first scan line to retrieve. </dd>
<dt>
<i>cScanLines</i></dt>
<dd>
Specifies the number of scan lines to retrieve. </dd>
<dt>
<i>lpvBits</i></dt>
<dd>
Pointer to a buffer to receive the bitmap data. If this parameter is NULL, the function passes the dimensions and format of the bitmap to the <b>BITMAPINFO</b> structure pointed to by the <i>lpbi</i> parameter. </dd>
<dt>
<i>lpbi</i></dt>
<dd>
Pointer to a <a href="bitmaps_0zn6.htm"><b>BITMAPINFO</b></a> structure that specifies the desired format for the device-independent bitmap (DIB) data. </dd>
<dt>
<i>uUsage</i></dt>
<dd>
Specifies the format of the <b>bmiColors</b> member of the <b>BITMAPINFO</b> structure. It must be one of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=33%><b>Value</b></td>
<th align=left width=67%>Meaning</th>
</tr>
<tr valign=top>
<td width=33%>DIB_PAL_COLORS</td>
<td width=67%>The color table should consist of an array of 16-bit indexes into the current logical palette.</td>
</tr>
<tr valign=top>
<td width=33%>DIB_RGB_COLORS</td>
<td width=67%>The color table should consist of literal red, green, blue (RGB) values.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the <i>lpvBits</i> parameter is non-NULL and the function succeeds, the return value is the number of scan lines copied from the bitmap.</p>
<p>
<b>Windows 95 and Windows 98: </b>If the <i>lpvBits</i> parameter is NULL and <b>GetDIBits</b> successfully fills the <b>BITMAPINFO</b> structure, the return value is the total number of scan lines in the bitmap. </p>
<p>
<b>Windows NT:</b> If the <i>lpvBits</i> parameter is NULL and <b>GetDIBits</b> successfully fills the <b>BITMAPINFO</b> structure, the return value is non-zero. </p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
If the requested format for the DIB matches its internal format, the RGB values for the bitmap are copied. If the requested format doesn't match the internal format, a color table is synthesized. The following table describes the color table synthesized for each format. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=14%>Value</th>
<th align=left width=86%>Meaning</th>
</tr>
<tr valign=top>
<td width=14%>1_BPP</td>
<td width=86%>The color table consists of a black and a white entry.</td>
</tr>
<tr valign=top>
<td width=14%>4_BPP</td>
<td width=86%>The color table consists of a mix of colors identical to the standard VGA palette.</td>
</tr>
<tr valign=top>
<td width=14%>8_BPP</td>
<td width=86%>The color table consists of a general mix of 256 colors defined by GDI. (Included in these 256 colors are the 20 colors found in the default logical palette.)</td>
</tr>
<tr valign=top>
<td width=14%>24_BPP</td>
<td width=86%>No color table is returned.</td>
</tr>
</table><br>
<p>
If the <i>lpvBits</i> parameter is a valid pointer, the first six members of the bitmap information header structure must be initialized to specify the size and format of the DIB.</p>
<p>
<b>Note</b>&nbsp;&nbsp;A bitmap information header structure may be one of the following: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Operating System</th>
<th align=left width=52%>Bitmap Information Header</th>
</tr>
<tr valign=top>
<td width=48%>Windows NT 3.51 and earlier</td>
<td width=52%><a href="bitmaps_1rw2.htm"><b>BITMAPINFOHEADER</b></a></td>
</tr>
<tr valign=top>
<td width=48%>Windows NT 4.0 and Windows 95</td>
<td width=52%><a href="bitmaps_2k1e.htm"><b>BITMAPV4HEADER</b></a> </td>
</tr>
<tr valign=top>
<td width=48%>Windows NT 5.0 and Windows 98</td>
<td width=52%><a href="bitmaps_7c36.htm"><b>BITMAPV5HEADER</b></a></td>
</tr>
</table><br>
<p>
A bottom-up DIB is specified by setting the height to a positive number, while a top-down DIB is specified by setting the height to a negative number. The bitmap's color table will be appended to the <b>BITMAPINFO</b> structure. </p>
<p>
If <i>lpvBits</i> is NULL, <b>GetDIBits</b> examines the first member of the first structure pointed to by <i>lpbi.</i> This member must specify the size, in bytes, of a <a href="bitmaps_7jaq.htm"><b>BITMAPCOREHEADER</b></a> or a<b><i> bitmap information header</i></b> structure. The function uses the specified size to determine how the remaining members should be initialized.</p>
<p>
If <i>lpvBits</i> is NULL and the bit count member of <a href="bitmaps_0zn6.htm"><b>BITMAPINFO</b></a> is initialized to zero, <b>GetDIBits</b> fills in a <b><i>bitmap information header</i></b> structure or <b>BITMAPCOREHEADER</b> without the color table. This technique can be used to query bitmap attributes. </p>
<p>
The bitmap identified by the <i>hbmp</i> parameter must not be selected into a device context when the application calls this function. </p>
<p>
The origin for a bottom-up DIB is the lower-left corner of the bitmap; the origin for a top-down DIB is the upper-left corner. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="bitmaps_99ir.htm">Bitmaps Overview</a>, <a href="bitmaps_87eb.htm">Bitmap Functions</a>, <a href="bitmaps_0qk3.htm"><b>SetDIBits</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
