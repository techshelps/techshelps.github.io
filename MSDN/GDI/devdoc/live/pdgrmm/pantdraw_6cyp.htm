<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Invalidating the Client Area</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_invalidating_the_client_area"></a>Invalidating the Client Area</h2>
<p>
The system is not the only source of <a href="pantdraw_88ac.htm">WM_PAINT</a> messages. The <a href="pantdraw_7ano.htm"><b>InvalidateRect</b></a> or <a href="pantdraw_4c32.htm"><b>InvalidateRgn</b></a> function can indirectly generate WM_PAINT<b> </b>messages for your windows. These functions mark all or part of a client area as invalid (that must be redrawn). </p>
<p>
In the following example, the window procedure invalidates the entire client area when processing <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wm_char">
</object><a href=JavaScript:alink_1.Click()>WM_CHAR</a> messages. This allows the user to change the figure by typing a number and view the results; these results are drawn as soon as there are no other messages in the application's message queue. </p>
<pre><code>
POINT aptPentagon[6] = {50,2, 98,35, 79,90, 21,90, 2,35, 50,2}, 
      aptHexagon[7]  = {50,2, 93,25, 93,75, 50,98, 7,75, 7,25, 50,2}; 
POINT *ppt = aptPentagon; 
int cpt = 6; 
 
  . 
  . 
  . 
 
case WM_CHAR: 
    switch (wParam) 
    { 
        case '5': 
            ppt = aptPentagon; 
            cpt = 6; 
            break; 
        case '6': 
            ppt = aptHexagon; 
            cpt = 7; 
            break; 
    } 
    InvalidateRect(hwnd, NULL, TRUE); 
    return 0L; 
 
case WM_PAINT: 
    hdc = BeginPaint(hwnd, &amp;ps); 
    GetClientRect(hwnd, &amp;rc); 
    SetMapMode(hdc, MM_ANISOTROPIC); 
    SetWindowExtEx(hdc, 100, 100, NULL); 
    SetViewportExtEx(hdc, rc.right, rc.bottom, NULL); 
    Polyline(hdc, ppt, cpt); 
    EndPaint(hwnd, &amp;ps); 
    return 0L; 
 </code></pre>
<p>
In this example, the NULL argument used by <a href="pantdraw_7ano.htm"><b>InvalidateRect</b></a> specifies the entire client area; the TRUE argument causes the background to be erased. If you do not want the application to wait until the application's message queue has no other messages, use the <a href="pantdraw_4zef.htm"><b>UpdateWindow</b></a> function to force the <a href="pantdraw_88ac.htm">WM_PAINT</a> message to be sent immediately. If there is any invalid part of the client area, <b>UpdateWindow</b> sends the WM_PAINT<b> </b>message for the given window directly to the window procedure. </p>
<p>&nbsp;</p></body>
</HTML>
