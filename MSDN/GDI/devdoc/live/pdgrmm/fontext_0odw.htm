<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DrawText</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_drawtext"></a>DrawText</h1>
<p>
The <b>DrawText</b> function draws formatted text in the specified rectangle. It formats the text according to the specified method (expanding tabs, justifying characters, breaking lines, and so forth). </p>
<pre><code><b>int DrawText(
  HDC</b><i> hDC</i><b>,          </b>// handle to device context
<b>  LPCTSTR</b><i> lpString</i><b>, </b>// pointer to string to draw
<b>  int</b><i> nCount</i><b>,       </b>// string length, in characters
<b>  LPRECT</b><i> lpRect</i><b>,    </b>// pointer to struct with formatting dimensions
<b>  UINT</b><i> uFormat</i>      // text-drawing flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hDC</i></dt>
<dd>
Handle to the device context. </dd>
<dt>
<i>lpString</i></dt>
<dd>
Pointer to the string to be drawn. If the <i>nCount</i> parameter is –1, the string must be null-terminated. 
<p>
If <i>uFormat</i> includes DT_MODIFYSTRING, the function could add up to four additional characters to this string. The buffer containing the string should be large enough to accommodate these extra characters.
</dd>
<dt>
<i>nCount</i></dt>
<dd>
Specifies the number of characters in the string. If <i>nCount</i> is –1, then the <i>lpString</i> parameter is assumed to be a pointer to a null-terminated string and <b>DrawText</b> computes the character count automatically. </dd>
<dt>
<i>lpRect</i></dt>
<dd>
Pointer to a <a href="rectangl_6cqa.htm"><b>RECT</b></a> structure that contains the rectangle (in logical coordinates) in which the text is to be formatted.</dd>
<dt>
<i>uFormat</i></dt>
<dd>
Specifies the method of formatting the text. It can be any combination of the following values: 
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=40%>Value</th>
<th align=left width=60%>Description</th>
</tr>
<tr valign=top>
<td width=40%>DT_BOTTOM</td>
<td width=60%>Justifies the text to the bottom of the rectangle. This value must be combined with DT_SINGLELINE.</td>
</tr>
<tr valign=top>
<td width=40%>DT_CALCRECT</td>
<td width=60%>Determines the width and height of the rectangle. If there are multiple lines of text, <b>DrawText</b> uses the width of the rectangle pointed to by the <i>lpRect</i> parameter and extends the base of the rectangle to bound the last line of text. If there is only one line of text, <b>DrawText</b> modifies the right side of the rectangle so that it bounds the last character in the line. In either case, <b>DrawText</b> returns the height of the formatted text but does not draw the text.</td>
</tr>
<tr valign=top>
<td width=40%>DT_CENTER</td>
<td width=60%>Centers text horizontally in the rectangle.</td>
</tr>
<tr valign=top>
<td width=40%>DT_EDITCONTROL</td>
<td width=60%>Duplicates the text-displaying characteristics of a multiline edit control. Specifically, the average character width is calculated in the same manner as for an edit control, and the function does not display a partially visible last line.</td>
</tr>
<tr valign=top>
<td width=40%>DT_END_ELLIPSIS or DT_PATH_ELLIPSIS</td>
<td width=60%>Replaces part of the given string with ellipses, if necessary, so that the result fits in the specified rectangle. The given string is not modified unless the DT_MODIFYSTRING flag is specified.<p>
You can specify DT_END_ELLIPSIS to replace characters at the end of the string, or DT_PATH_ELLIPSIS to replace characters in the middle of the string. If the string contains backslash (\) characters, DT_PATH_ELLIPSIS preserves as much as possible of the text after the last backslash.</p>
</td>
</tr>
<tr valign=top>
<td width=40%>DT_EXPANDTABS</td>
<td width=60%>Expands tab characters. The default number of characters per tab is eight.</td>
</tr>
<tr valign=top>
<td width=40%>DT_EXTERNALLEADING</td>
<td width=60%>Includes the font external leading in line height. Normally, external leading is not included in the height of a line of text.</td>
</tr>
<tr valign=top>
<td width=40%>DT_INTERNAL</td>
<td width=60%>Uses the system font to calculate text metrics. </td>
</tr>
<tr valign=top>
<td width=40%>DT_LEFT</td>
<td width=60%>Aligns text to the left.</td>
</tr>
<tr valign=top>
<td width=40%>DT_MODIFYSTRING</td>
<td width=60%>Modifies the given string to match the displayed text. This flag has no effect unless the DT_END_ELLIPSIS or DT_PATH_ELLIPSIS flag is specified.</td>
</tr>
<tr valign=top>
<td width=40%>DT_NOCLIP</td>
<td width=60%>Draws without clipping. <b>DrawText</b> is somewhat faster when DT_NOCLIP is used.</td>
</tr>
<tr valign=top>
<td width=40%>DT_NOPREFIX</td>
<td width=60%>Turns off processing of prefix characters. Normally, <b>DrawText</b> interprets the mnemonic-prefix character &amp; as a directive to underscore the character that follows, and the mnemonic-prefix characters &amp;&amp; as a directive to print a single &amp;. By specifying DT_NOPREFIX, this processing is turned off.</td>
</tr>
<tr valign=top>
<td width=40%>DT_RIGHT</td>
<td width=60%>Aligns text to the right.</td>
</tr>
<tr valign=top>
<td width=40%>DT_RTLREADING</td>
<td width=60%>Layout in right to left reading order for bi-directional text when the font selected into the <i>hdc</i> is a Hebrew or Arabic font. The default reading order for all text is left to right.</td>
</tr>
<tr valign=top>
<td width=40%>DT_SINGLELINE</td>
<td width=60%>Displays text on a single line only. Carriage returns and linefeeds do not break the line.</td>
</tr>
<tr valign=top>
<td width=40%>DT_TABSTOP</td>
<td width=60%>Sets tab stops. Bits 15–8 (high-order byte of the low-order word) of the <i>uFormat</i> parameter specify the number of characters for each tab. The default number of characters per tab is eight.</td>
</tr>
<tr valign=top>
<td width=40%>DT_TOP</td>
<td width=60%>Top-justifies text (single line only).</td>
</tr>
<tr valign=top>
<td width=40%>DT_VCENTER</td>
<td width=60%>Centers text vertically (single line only).</td>
</tr>
<tr valign=top>
<td width=40%>DT_WORDBREAK</td>
<td width=60%>Breaks words. Lines are automatically broken between words if a word would extend past the edge of the rectangle specified by the <i>lpRect</i> parameter. A carriage return-linefeed sequence also breaks the line.</td>
</tr>
<tr valign=top>
<td width=40%>DT_WORD_ELLIPSIS</td>
<td width=60%>Truncates text that does not fit in the rectangle and adds ellipses. </td>
</tr>
</table><br>


<p>
<b>Note</b>&nbsp;&nbsp;The DT_CALCRECT, DT_EXTERNALLEADING, DT_INTERNAL, DT_NOCLIP, and DT_NOPREFIX values cannot be used with the DT_TABSTOP value. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the height of the text. </p>
<p>
If the function fails, the return value is zero. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
The <b>DrawText</b> function uses the device context's selected font, text color, and background color to draw the text. Unless the DT_NOCLIP format is used, <b>DrawText</b> clips the text so that it does not appear outside the specified rectangle. All formatting is assumed to have multiple lines unless the DT_SINGLELINE format is specified. </p>
<p>
If the selected font is too large for the specified rectangle, the <b>DrawText</b> function does not attempt to substitute a smaller font. </p>
<p>
<b>Windows CE:</b> If DT_CALCRECT is specified for the <i>uFormat</i> parameter, you must set the <i>right </i>and <i>bottom</i> members of the <b>RECT</b> structure pointed to by <i>lpRect</i>. </p>
<p>
Windows CE does not support the DT_EXTERNALLEADING flag for the <i>uFormat</i> parameter.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.<br>
<b>&nbsp;&nbsp;Unicode: </b>Implemented as Unicode and ANSI versions on Windows NT.</p>
<h4>See Also</h4>
<p>
<a href="fontext_8ctw.htm">Fonts and Text Overview</a>, <a href="fontext_9r77.htm">Font and Text Functions</a>, <a href="pantdraw_63mv.htm"><b>GrayString</b></a>, <a href="fontext_001g.htm"><b>TabbedTextOut</b></a>, <a href="fontext_5yd0.htm"><b>TextOut</b></a>, <a href="rectangl_6cqa.htm"><b>RECT</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
