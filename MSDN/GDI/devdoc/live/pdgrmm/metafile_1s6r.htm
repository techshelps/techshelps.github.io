<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Opening an Enhanced Metafile and Displaying Its Contents</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_opening_an_enhanced_metafile_and_displaying_its_contents"></a>Opening an Enhanced Metafile and Displaying Its Contents</h2>
<p>
This section contains an example demonstrating how an application opens an enhanced metafile stored on disk and displays the associated picture in the client area. </p>
<p>
The example uses the <b>Open</b> common dialog box to enable the user to select an enhanced metafile from a list of existing files. It then passes the name of the selected file to the <a href="metafile_5git.htm"><b>GetEnhMetaFile</b></a> function, which returns a handle identifying the file. This handle is passed to the <a href="metafile_7hwl.htm"><b>PlayEnhMetaFile</b></a> function in order to display the picture. </p>
<pre><code>LoadString(hInst, IDS_FILTERSTRING, 
     (LPSTR)szFilter, sizeof(szFilter)); 
 
// Replace occurrences of '%' string separator 
// with '\0'. 
 
for (i=0; szFilter[i]!='\0'; i++) 
{
    if (szFilter[i] == '%') 
            szFilter[i] = '\0'; 
}
 
LoadString(hInst, IDS_DEFEXTSTRING, 
     (LPSTR)szDefExt, sizeof(szFilter)); 
 
 
// Use the OpenFilename common dialog box 
// to obtain the desired filename. 
 
szFile[0] = '\0'; 
Ofn.lStructSize = sizeof(OPENFILENAME); 
Ofn.hwndOwner = hWnd; 
Ofn.lpstrFilter = szFilter; 
Ofn.lpstrCustomFilter = (LPSTR)NULL; 
Ofn.nMaxCustFilter = 0L; 
Ofn.nFilterIndex = 1L; 
Ofn.lpstrFile = szFile; 
Ofn.nMaxFile = sizeof(szFile); 
Ofn.lpstrFileTitle = szFileTitle; 
Ofn.nMaxFileTitle = sizeof(szFileTitle); 
Ofn.lpstrInitialDir = (LPSTR) NULL; 
Ofn.lpstrTitle = (LPSTR)NULL; 
Ofn.Flags = OFN_SHOWHELP | OFN_PATHMUSTEXIST | OFN_FILEMUSTEXIST; 
Ofn.nFileOffset = 0; 
Ofn.nFileExtension = 0; 
Ofn.lpstrDefExt = szDefExt; 
 
GetOpenFileName(&amp;Ofn); 
 
// Open the metafile. 
 
hemf = GetEnhMetaFile(Ofn.lpstrFile); 
 
// Retrieve a handle to a window device context. 
 
hDC = GetDC(hWnd); 
 
// Retrieve the client rectangle dimensions. 
 
GetClientRect(hWnd, &amp;rct); 
 
// Draw the picture. 
 
PlayEnhMetaFile(hDC, hemf, &amp;rct); 
 
// Release the metafile handle. 
 
DeleteEnhMetaFile(hemf); 
 
// Release the window DC. 
 
ReleaseDC(hWnd, hDC); 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
