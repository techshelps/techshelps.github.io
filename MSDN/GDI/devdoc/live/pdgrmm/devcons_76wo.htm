<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetDCEx</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getdcex"></a>GetDCEx</h1>
<p>
The <b>GetDCEx</b> function retrieves a handle to a display device context for the client area of a specified window or for the entire screen. You can use the returned handle in subsequent GDI functions to draw in the device context. </p>
<p>
This function is an extension to the <a href="devcons_4esj.htm"><b>GetDC</b></a> function, which gives an application more control over how and whether clipping occurs in the client area. </p>
<pre><code><b>HDC GetDCEx(
  HWND</b><i> hWnd</i><b>,      </b>// handle of window
<b>  HRGN</b><i> hrgnClip</i><b>,  </b>// handle of clip region
<b>  DWORD</b><i> flags</i>     // device-context creation flags
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hWnd</i></dt>
<dd>
Handle to the window whose device context is to be retrieved. If this value is NULL, <b>GetDCEx</b> retrieves the device context for the entire screen. 
<p>
<b>Windows 98, Windows NT 5.0 and later:</b> If this parameter is NULL, <b>GetDCEx</b> retrieves the device context for the primary display monitor. To get the device context for other display monitors, use the <a href="monitor_82yb.htm"><b>EnumDisplayMonitors</b></a> and <a href="devcons_5g83.htm"><b>CreateDC</b></a> functions.
</dd>
<dt>
<i>hrgnClip</i></dt>
<dd>
Specifies a clipping region that may be combined with the visible region of the device context. </dd>
<dt>
<i>flags</i></dt>
<dd>
Specifies how the device context is created. This parameter can be a combination of the following values. 
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=47%><b>Value</b></td>
<th align=left width=53%>Meaning</th>
</tr>
<tr valign=top>
<td width=47%>DCX_WINDOW</td>
<td width=53%>Returns a device context corresponding to the window rectangle rather than the client rectangle.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_CACHE</td>
<td width=53%>Returns a device context from the cache, rather than the OWNDC or CLASSDC window. Essentially overrides CS_OWNDC and CS_CLASSDC.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_PARENTCLIP</td>
<td width=53%>Uses the visible region of the parent window. The parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The device context origin is set to the upper-left corner of the window identified by <i>hWnd</i>.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_CLIPSIBLINGS</td>
<td width=53%>Excludes the visible regions of all sibling windows above the window identified by <i>hWnd</i>.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_CLIPCHILDREN</td>
<td width=53%>Excludes the visible regions of all child windows below the window identified by <i>hWnd</i>.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_NORESETATTRS</td>
<td width=53%>Does not reset the attributes of this device context to the default attributes when this device context is released.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_LOCKWINDOWUPDATE</td>
<td width=53%>Allows drawing even if there is a <a href="pantdraw_4i5h.htm"><b>LockWindowUpdate</b></a> call in effect that would otherwise exclude this window. Used for drawing during tracking.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_EXCLUDERGN</td>
<td width=53%>The clipping region identified by <i>hrgnClip</i> is excluded from the visible region of the returned device context.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_INTERSECTRGN</td>
<td width=53%>The clipping region identified by <i>hrgnClip</i> is intersected with the visible region of the returned device context.</td>
</tr>
<tr valign=top>
<td width=47%>DCX_VALIDATE</td>
<td width=53%>When specified with DCX_INTERSECTUPDATE, causes the device context to be completely validated. Using this function with both DCX_INTERSECTUPDATE and DCX_VALIDATE is identical to using the <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a> function.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is the handle of the device context for the specified window.</p>
<p>
If the function fails, the return value is NULL. An invalid value for the <i>hWnd</i> parameter will cause the function to fail. </p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>.</p>
<h4>Remarks</h4>
<p>
Unless the display device context belongs to a window class, the <b>ReleaseDC</b> function must be called to release the device context after painting. Because only five common device contexts are available at any given time, failure to release a device context can prevent other applications from accessing a device context. </p>
<p>
The function returns a device context belonging to the window's class if CS_CLASSDC, CS_OWNDC or CS_PARENTDC was specified as a style in the <b>WNDCLASS</b> structure when the class was registered. </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in winuser.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use user32.lib.</p>
<h4>See Also</h4>
<p>
<a href="devcons_0g6r.htm">Device Contexts Overview</a>, <a href="devcons_7e2b.htm">Device Context Functions</a>, <a href="pantdraw_7b78.htm"><b>BeginPaint</b></a>, <a href="pantdraw_0hcz.htm"><b>GetWindowDC</b></a>, <a href="devcons_66hv.htm"><b>ReleaseDC</b></a>, <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wndclass_str">
</object><a href=JavaScript:alink_2.Click()><b>WNDCLASS</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
