<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>String Widths and Heights</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_win32_string_widths_and_heights"></a>String Widths and Heights</h3>
<p>
In addition to retrieving character-width data for individual characters, applications also need to compute the width and height of entire strings. Two functions retrieve string-width and height measurements: <a href="fontext_8smq.htm"><b>GetTextExtentPoint32</b></a>, and <a href="fontext_4rn8.htm"><b>GetTabbedTextExtent</b></a>. If the string does not contain tab characters, an application can use the <b>GetTextExtentPoint32</b> function to retrieve the width and height of a specified string. If the string contains tab characters, an application should call the <b>GetTabbedTextExtent</b> function. </p>
<p>
The Win32 API also supports a function, <a href="fontext_15kk.htm"><b>GetTextExtentExPoint</b></a>, that applications can use for word-wrapping operations. This function returns the number of characters from a specified string that fit within a given space. </p>
<h4>Font Ascenders and Descenders</h4>
<p>
Some applications determine the line spacing between text lines of different sizes by using a font's maximum ascender and descender. An application can retrieve these values by calling the <a href="fontext_6rlf.htm"><b>GetTextMetrics</b></a> function and then checking the <b>tmAscent</b> and <b>tmDescent</b> members of the <a href="fontext_7ss2.htm"><b>TEXTMETRIC</b></a>. </p>
<p>
The maximum ascent and descent are different from the typographic ascent and descent. In TrueType and OpenType fonts, the typographic ascent and descent are typically the top of the "f" glyph and bottom of the "g" glyph. An application can retrieve the typographic ascender and descender for a TrueType or OpenType font by calling the <a href="fontext_6lyr.htm"><b>GetOutlineTextMetrics</b></a> function and checking the values in the <b>otmMacAscent</b> and <b>otmMacDescent</b> members of the <a href="fontext_569e.htm"><b>OUTLINETEXTMETRIC</b></a> structure. </p>
<p>
The following figure shows the difference between the vertical text metric values returned in the <a href="fontext_2zqq.htm"><b>NEWTEXTMETRIC</b></a> and <b>OUTLINETEXTMETRIC</b> structures. (The names beginning with <i>otm</i> are members of the <b>OUTLINETEXTMETRIC</b> structure.) </p>
<p>
<img src="images/csftx_03.gif" border=0></p>
<h4>Font Dimensions</h4>
<p>
An application can retrieve the physical dimensions of a TrueType or OpenType font by calling the <a href="fontext_6lyr.htm"><b>GetOutlineTextMetrics</b></a> function. An application can retrieve the physical dimensions of any other font by calling the <a href="fontext_6rlf.htm"><b>GetTextMetrics</b></a> function. To determine the dimensions of an output device, an application can call the <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a> function. <b>GetDeviceCaps</b> returns both physical and logical dimensions. </p>
<p>
A logical inch is a measure the system uses to present legible fonts on the screen and is approximately 30 to 40 percent larger than a physical inch. The use of logical inches precludes an exact match between the output of the screen and printer. Developers should be aware that the text on a screen is not simply a scaled version of the text that will appear on the page, particularly if graphics are incorporated into the text. </p>
<p>&nbsp;</p></body>
</HTML>
