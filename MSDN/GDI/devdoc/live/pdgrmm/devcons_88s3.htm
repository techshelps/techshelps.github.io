<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GetDeviceCaps</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_getdevicecaps"></a>GetDeviceCaps</h1>
<p>
The <b>GetDeviceCaps</b> function retrieves device-specific information about a specified device. </p>
<pre><code><b>int GetDeviceCaps(
  HDC</b><i> hdc</i><b>,     </b>// handle to the device context
<b>  int</b><i> nIndex</i>   // index of capability to query
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdc</i></dt>
<dd>
Handle to the device context. </dd>
<dt>
<i>nIndex</i></dt>
<dd>
Specifies the item to return. This parameter can be one of the following values. 
<table cellspacing=4 cols=10>
<tr valign=top>
<th align=left width=31%>Index</th>
<th align=left colspan=7 width=65%>Meaning</th>
</tr>
<tr valign=top>
<td colspan=2 width=32%>DRIVERVERSION</td>
<td colspan=6 width=64%>The device driver version.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>TECHNOLOGY</td>
<td colspan=6 width=64%>Device technology. It can be any one of the following values.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_PLOTTER</td>
<td colspan=4 width=34%>Vector plotter</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_RASDISPLAY</td>
<td colspan=4 width=34%>Raster display</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_RASPRINTER</td>
<td colspan=4 width=34%>Raster printer</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_RASCAMERA</td>
<td colspan=4 width=34%>Raster camera</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_CHARSTREAM</td>
<td colspan=4 width=34%>Character stream</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_METAFILE</td>
<td colspan=4 width=34%>Metafile</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=2 width=30%>DT_DISPFILE</td>
<td colspan=4 width=34%>Display file</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=6 width=64%>If the <i>hdc</i> parameter identifies the device context of an enhanced metafile, the device technology is that of the referenced device as given to the <a href="metafile_81yd.htm"><b>CreateEnhMetaFile</b></a> function. To determine whether it is an enhanced metafile device context, use the <a href="devcons_9pt1.htm"><b>GetObjectType</b></a> function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>HORZSIZE</td>
<td colspan=6 width=64%>Width, in millimeters, of the physical screen.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>VERTSIZE</td>
<td colspan=6 width=64%>Height, in millimeters, of the physical screen.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>HORZRES</td>
<td colspan=6 width=64%>Width, in pixels, of the screen.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>VERTRES</td>
<td colspan=6 width=64%>Height, in raster lines, of the screen.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>LOGPIXELSX</td>
<td colspan=6 width=64%>Number of pixels per logical inch along the screen width. In a system with multiple display monitors, this value is the same for all monitors.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>LOGPIXELSY</td>
<td colspan=6 width=64%>Number of pixels per logical inch along the screen height. In a system with multiple display monitors, this value is the same for all monitors.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>BITSPIXEL</td>
<td colspan=6 width=64%>Number of adjacent color bits for each pixel.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PLANES</td>
<td colspan=6 width=64%>Number of color planes.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>NUMBRUSHES</td>
<td colspan=6 width=64%>Number of device-specific brushes.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>NUMPENS</td>
<td colspan=6 width=64%>Number of device-specific pens.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>NUMFONTS</td>
<td colspan=6 width=64%>Number of device-specific fonts.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>NUMCOLORS</td>
<td colspan=6 width=64%>Number of entries in the device's color table, if the device has a color depth of no more than 8 bits per pixel. For devices with greater color depths, -1 is returned.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>ASPECTX</td>
<td colspan=6 width=64%>Relative width of a device pixel used for line drawing.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>ASPECTY</td>
<td colspan=6 width=64%>Relative height of a device pixel used for line drawing.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>ASPECTXY</td>
<td colspan=6 width=64%>Diagonal width of the device pixel used for line drawing.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PDEVICESIZE</td>
<td colspan=6 width=64%>Reserved.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>CLIPCAPS</td>
<td colspan=6 width=64%>Flag that indicates the clipping capabilities of the device. If the device can clip to a rectangle, it is 1. Otherwise, it is 0.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>SIZEPALETTE</td>
<td colspan=6 width=64%>Number of entries in the system palette. This index is valid only if the device driver sets the RC_PALETTE bit in the RASTERCAPS index and is available only if the driver is compatible with 16-bit Windows.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>NUMRESERVED</td>
<td colspan=6 width=64%>Number of reserved entries in the system palette. This index is valid only if the device driver sets the RC_PALETTE bit in the RASTERCAPS index and is available only if the driver is compatible with 16-bit Windows.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>COLORRES</td>
<td colspan=6 width=64%>Actual color resolution of the device, in bits per pixel. This index is valid only if the device driver sets the RC_PALETTE bit in the RASTERCAPS index and is available only if the driver is compatible with 16-bit Windows.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PHYSICALWIDTH</td>
<td colspan=6 width=64%>For printing devices: the width of the physical page, in device units. For example, a printer set to print at 600 dpi on 8.5"x11" paper has a physical width value of 5100 device units. Note that the physical page is almost always greater than the printable area of the page, and never smaller. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PHYSICALHEIGHT</td>
<td colspan=6 width=64%>For printing devices: the height of the physical page, in device units. For example, a printer set to print at 600 dpi on 8.5"x11" paper has a physical height value of 6600 device units. Note that the physical page is almost always greater than the printable area of the page, and never smaller. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PHYSICALOFFSETX</td>
<td colspan=6 width=64%>For printing devices: the distance  from the left edge of the physical page to the left edge of the printable area, in device units. For example, a printer set to print at 600 dpi on 8.5"x11" paper, that cannot print on the leftmost 0.25" of paper, has a horizontal physical offset of 150 device units. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>PHYSICALOFFSETY</td>
<td colspan=6 width=64%>For printing devices: the distance  from the top edge of the physical page to the top edge of the printable area, in device units. For example, a printer set to print at 600 dpi on 8.5"x11" paper, that cannot print on the topmost 0.5" of paper, has a vertical physical offset of 300 device units. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>VREFRESH</td>
<td colspan=6 width=64%><b>Windows NT: </b>For display devices: the current vertical refresh rate of the device, in cycles per second (Hz).<p>
A vertical refresh rate value of 0 or 1 represents the display hardware's default refresh rate. This default rate is typically set by switches on a display card or computer motherboard, or by a configuration program that does not use Win32 display functions such as <a href="devcons_7gz7.htm"><b>ChangeDisplaySettings</b></a>. </p>
</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>DESKTOPHORZRES</td>
<td colspan=6 width=64%><b>Windows NT: </b>Width, in pixels, of the virtual desktop. This value may be larger than HORZRES if the device supports a virtual desktop or multiple displays.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>DESKTOPVERTRES</td>
<td colspan=6 width=64%><b>Windows NT: </b>Height, in pixels, of the virtual desktop. This value may be larger than VERTRES if the device supports a virtual desktop or multiple displays.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>SCALINGFACTORX</td>
<td colspan=6 width=64%>Scaling factor for the x-axis of the printer.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>SCALINGFACTORY</td>
<td colspan=6 width=64%>Scaling factor for the y-axis of the printer. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>BLTALIGNMENT</td>
<td colspan=6 width=64%><b>Windows NT: </b>Preferred horizontal drawing alignment, expressed as a multiple of pixels. For best drawing performance, windows should be horizontally aligned to a multiple of this value. A value of zero indicates that the device is accelerated, and any alignment may be used.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>SHADEBLENDCAPS</td>
<td colspan=6 width=64%><b>Windows 98, Windows NT 5.0 and later: </b>Value that indicates the shading and blending capabilities of the device. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_CONST_ALPHA</td>
<td width=30%>Handles the <b>SourceConstantAlpha</b> member of the <a href="bitmaps_3b3m.htm"><b>BLENDFUNCTION</b></a> structure, which is referenced by the <i>blendFunction</i> parameter of the <a href="bitmaps_6ig4.htm"><b>AlphaBlend</b></a> function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_GRAD_RECT</td>
<td width=30%>Capable of doing <a href="bitmaps_8oa4.htm"><b>GradientFill</b></a> rectangles.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_GRAD_TRI</td>
<td width=30%>Capable of doing <b>GradientFill</b> triangles.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_NONE</td>
<td width=30%>Device does not support any of these capabilities.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_PIXEL_ALPHA</td>
<td width=30%>Capable of handling per-pixel alpha in <b>AlphaBlend</b>. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%></td>
<td colspan=5 width=34%>SB_PREMULT_ALPHA</td>
<td width=30%>Capable of handling premultiplied alpha in <b>AlphaBlend</b>. </td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>RASTERCAPS</td>
<td colspan=6 width=64%>Value that indicates the raster capabilities of the device, as shown in the following table:</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_BANDING</td>
<td colspan=5 width=35%>Requires banding support.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_BITBLT</td>
<td colspan=5 width=35%>Capable of transferring bitmaps.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_BITMAP64</td>
<td colspan=5 width=35%>Capable of supporting bitmaps larger than 64K.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_DI_BITMAP</td>
<td colspan=5 width=35%>Capable of supporting the <a href="bitmaps_0qk3.htm"><b>SetDIBits</b></a> and <a href="bitmaps_7gms.htm"><b>GetDIBits</b></a> functions.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_DIBTODEV</td>
<td colspan=5 width=35%>Capable of supporting the <a href="bitmaps_8e5h.htm"><b>SetDIBitsToDevice</b></a> function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_FLOODFILL</td>
<td colspan=5 width=35%>Capable of performing flood fills.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_GDI20_OUTPUT</td>
<td colspan=5 width=35%>Capable of supporting features of 16-bit Windows 2.0.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_PALETTE</td>
<td colspan=5 width=35%>Specifies a palette-based device.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_SCALING</td>
<td colspan=5 width=35%>Capable of scaling.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_STRETCHBLT</td>
<td colspan=5 width=35%>Capable of performing the <a href="bitmaps_9cok.htm"><b>StretchBlt</b></a> function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>RC_STRETCHDIB</td>
<td colspan=5 width=35%>Capable of performing the <a href="bitmaps_1ppv.htm"><b>StretchDIBits</b></a> function.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>CURVECAPS</td>
<td colspan=6 width=64%>Value that indicates the curve capabilities of the device, as shown in the following table:</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_NONE</td>
<td colspan=5 width=35%>Device does not support curves.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_CHORD</td>
<td colspan=5 width=35%>Device can draw chord arcs.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_CIRCLES</td>
<td colspan=5 width=35%>Device can draw circles.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_ELLIPSES</td>
<td colspan=5 width=35%>Device can draw ellipses.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_INTERIORS</td>
<td colspan=5 width=35%>Device can draw interiors.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_PIE</td>
<td colspan=5 width=35%>Device can draw pie wedges.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_ROUNDRECT</td>
<td colspan=5 width=35%>Device can draw rounded rectangles.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_STYLED</td>
<td colspan=5 width=35%>Device can draw styled borders.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_WIDE</td>
<td colspan=5 width=35%>Device can draw wide borders.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td width=29%>CC_WIDESTYLED</td>
<td colspan=5 width=35%>Device can draw borders that are wide and styled.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>LINECAPS</td>
<td colspan=7 width=66%>Value that indicates the line capabilities of the device, as shown in the following table:</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_NONE</td>
<td colspan=5 width=37%>Device does not support lines.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_INTERIORS</td>
<td colspan=5 width=37%>Device can draw interiors.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_MARKER</td>
<td colspan=5 width=37%>Device can draw a marker.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_POLYLINE</td>
<td colspan=5 width=37%>Device can draw a polyline.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_POLYMARKER</td>
<td colspan=5 width=37%>Device can draw multiple markers.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_STYLED</td>
<td colspan=5 width=37%>Device can draw styled lines.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_WIDE</td>
<td colspan=5 width=37%>Device can draw wide lines.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>LC_WIDESTYLED</td>
<td colspan=5 width=37%>Device can draw lines that are wide and styled.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>POLYGONALCAPS</td>
<td colspan=7 width=66%>Value that indicates the polygon capabilities of the device, as shown in the following table:</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_NONE</td>
<td colspan=5 width=37%>Device does not support polygons.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_INTERIORS</td>
<td colspan=5 width=37%>Device can draw interiors.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_POLYGON</td>
<td colspan=5 width=37%>Device can draw alternate-fill polygons.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_RECTANGLE</td>
<td colspan=5 width=37%>Device can draw rectangles.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_SCANLINE</td>
<td colspan=5 width=37%>Device can draw a single scanline.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_STYLED</td>
<td colspan=5 width=37%>Device can draw styled borders.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_WIDE</td>
<td colspan=5 width=37%>Device can draw wide borders.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_WIDESTYLED</td>
<td colspan=5 width=37%>Device can draw borders that are wide and styled.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=3 width=31%>PC_WINDPOLYGON</td>
<td colspan=5 width=37%>Device can draw winding-fill polygons.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%>TEXTCAPS</td>
<td colspan=8 width=68%>Value that indicates the text capabilities of the device, as shown in the following table:</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_OP_CHARACTER</td>
<td colspan=4 width=35%>Device is capable of character output precision.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_OP_STROKE</td>
<td colspan=4 width=35%>Device is capable of stroke output precision.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_CP_STROKE</td>
<td colspan=4 width=35%>Device is capable of stroke clip precision.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_CR_90</td>
<td colspan=4 width=35%>Device is capable of 90-degree character rotation.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_CR_ANY</td>
<td colspan=4 width=35%>Device is capable of any character rotation.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SF_X_YINDEP</td>
<td colspan=4 width=35%>Device can scale independently in the x- and y-directions.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SA_DOUBLE</td>
<td colspan=4 width=35%>Device is capable of doubled character for scaling.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SA_INTEGER</td>
<td colspan=4 width=35%>Device uses integer multiples only for character scaling.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SA_CONTIN</td>
<td colspan=4 width=35%>Device uses any multiples for exact character scaling.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_EA_DOUBLE</td>
<td colspan=4 width=35%>Device can draw double-weight characters.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_IA_ABLE</td>
<td colspan=4 width=35%>Device can italicize.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_UA_ABLE</td>
<td colspan=4 width=35%>Device can underline.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SO_ABLE</td>
<td colspan=4 width=35%>Device can draw strikeouts.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_RA_ABLE</td>
<td colspan=4 width=35%>Device can draw raster fonts.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_VA_ABLE</td>
<td colspan=4 width=35%>Device can draw vector fonts.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_RESERVED</td>
<td colspan=4 width=35%>Reserved; must be zero.</td>
</tr>
<tr valign=top>
<td colspan=2 width=32%> </td>
<td colspan=4 width=33%>TC_SCROLLBLT</td>
<td colspan=4 width=35%>Device cannot scroll using a bit-block transfer. Note that this meaning may be the opposite of what you expect.</td>
</tr>
</table><br>

</dd>
</dl>
<h4>Return Values</h4>
<p>
The return value specifies the value of the desired item. </p>
<h4>Remarks</h4>
<p>
<b>GetDeviceCaps</b> provides the following six indices in place of printer escapes. </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Index</th>
<th align=left width=52%>Printer Escape Replaced</th>
</tr>
<tr valign=top>
<td width=48%>PHYSICALWIDTH</td>
<td width=52%>GETPHYSPAGESIZE</td>
</tr>
<tr valign=top>
<td width=48%>PHYSICALHEIGHT</td>
<td width=52%>GETPHYSPAGESIZE</td>
</tr>
<tr valign=top>
<td width=48%>PHYSICALOFFSETX</td>
<td width=52%>GETPRINTINGOFFSET</td>
</tr>
<tr valign=top>
<td width=48%>PHYSICALOFFSETY</td>
<td width=52%>GETPHYSICALOFFSET</td>
</tr>
<tr valign=top>
<td width=48%>SCALINGFACTORX</td>
<td width=52%>GETSCALINGFACTOR</td>
</tr>
<tr valign=top>
<td width=48%>SCALINGFACTORY</td>
<td width=52%>GETSCALINGFACTOR</td>
</tr>
</table><br>
<p>
<b>Windows CE:</b> Windows CE does not support the following values for the <i>nIndex</i> parameter:</p>
<p class=indent1>
VREFRESH </p>
<p class=indent1>
DESKTOPHORZRES </p>
<p class=indent1>
DESKTOPVERTRES </p>
<p class=indent1>
BLTALIGNMENT </p>
<p>
Windows CE version 1.0 does not support the following values for the <i>nIndex</i> parameter:</p>
<p class=indent1>
PHYSICALWIDTH </p>
<p class=indent1>
PHYSICALHEIGHT </p>
<p class=indent1>
PHYSICALOFFSETX </p>
<p class=indent1>
PHYSICALOFFSETY </p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Requires Windows 95 or later.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="devcons_0g6r.htm">Device Contexts Overview</a>, <a href="devcons_7e2b.htm">Device Context Functions</a>, <a href="metafile_81yd.htm"><b>CreateEnhMetaFile</b></a>, <a href="devcons_5ggz.htm"><b>CreateIC</b></a>, <a href="devcons_21bn.htm"><b>DeviceCapabilities</b></a>, <a href="bitmaps_7gms.htm"><b>GetDIBits</b></a>, <a href="devcons_9pt1.htm"><b>GetObjectType</b></a>, <a href="bitmaps_0qk3.htm"><b>SetDIBits</b></a>, <a href="bitmaps_8e5h.htm"><b>SetDIBitsToDevice</b></a>, <a href="bitmaps_9cok.htm"><b>StretchBlt</b></a>, <a href="bitmaps_1ppv.htm"><b>StretchDIBits</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
