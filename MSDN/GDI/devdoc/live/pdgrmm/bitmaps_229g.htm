<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MaskBlt</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_maskblt"></a>MaskBlt</h1>
<p>
The <b>MaskBlt</b> function combines the color data for the source and destination bitmaps using the specified mask and raster operation. </p>
<pre><code><b>BOOL MaskBlt(
  HDC</b><i> hdcDest</i><b>,     </b>// handle to destination device context
<b>  int</b><i> nXDest</i><b>,      </b>// x-coord. of upper-left corner of 
                   // destination rectangle
<b>  int</b><i> nYDest</i><b>,      </b>// y-coord. of upper-left corner of
                   // destination rectangle
<b>  int</b><i> nWidth</i><b>,      </b>// width of source and destination rectangles
<b>  int</b><i> nHeight</i><b>,     </b>// height of source and destination rectangles
<b>  HDC</b><i> hdcSrc</i><b>,      </b>// handle to source device context
<b>  int</b><i> nXSrc</i><b>,   </b>// x-coord. of upper-left corner of source rectangle
<b>  int</b><i> nYSrc</i><b>,   </b>// y-coord. of upper-left corner of source rectangle
<b>  HBITMAP</b><i> hbmMask</i><b>, </b>// handle to monochrome bit mask
<b>  int</b><i> xMask</i><b>,       </b>// horizontal pixel offset into the mask bitmap
<b>  int</b><i> yMask</i><b>,       </b>// vertical pixel offset into the mask bitmap
<b>  DWORD</b><i> dwRop</i>      // raster operation code
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hdcDest</i></dt>
<dd>
Handle to the destination device context. </dd>
<dt>
<i>nXDest</i></dt>
<dd>
Specifies the logical x-coordinate of the upper-left corner of the destination rectangle. </dd>
<dt>
<i>nYDest</i></dt>
<dd>
Specifies the logical y-coordinate of the upper-left corner of the destination rectangle. </dd>
<dt>
<i>nWidth</i></dt>
<dd>
Specifies the width, in logical units, of the destination rectangle and source bitmap. </dd>
<dt>
<i>nHeight</i></dt>
<dd>
Specifies the height, in logical units, of the destination rectangle and source bitmap. </dd>
<dt>
<i>hdcSrc</i></dt>
<dd>
Handle to the device context from which the bitmap is to be copied. It must be zero if the <i>dwRop</i> parameter specifies a raster operation that does not include a source. </dd>
<dt>
<i>nXSrc</i></dt>
<dd>
Specifies the logical x-coordinate of the upper-left corner of the source bitmap. </dd>
<dt>
<i>nYSrc</i></dt>
<dd>
Specifies the logical y-coordinate of the upper-left corner of the source bitmap. </dd>
<dt>
<i>hbmMask</i></dt>
<dd>
Handle to the monochrome mask bitmap combined with the color bitmap in the source device context. </dd>
<dt>
<i>xMask</i></dt>
<dd>
Specifies the horizontal pixel offset for the mask bitmap specified by the <i>hbmMask</i> parameter. </dd>
<dt>
<i>yMask</i></dt>
<dd>
Specifies the vertical pixel offset for the mask bitmap specified by the <i>hbmMask</i> parameter. </dd>
<dt>
<i>dwRop</i></dt>
<dd>
Specifies both foreground and background ternary raster operation codes that the function uses to control the combination of source and destination data. The background raster operation code is stored in the high-order byte of the high-order word of this value; the foreground raster operation code is stored in the low-order byte of the high-order word of this value; the low-order word of this value is ignored, and should be zero. The macro <a href="bitmaps_2i7o.htm"><b>MAKEROP4</b></a> creates such combinations of foreground and background raster operation codes. 
<p>
For a discussion of foreground and background in the context of this function, see the following Remarks section. 

<p>
For a list of common raster operation codes, see the <a href="bitmaps_0fzo.htm"><b>BitBlt</b></a> function. 

</dd>
</dl>
<h4>Return Values</h4>
<p>
If the function succeeds, the return value is nonzero.</p>
<p>
If the function fails, the return value is zero.</p>
<p>
<b>Windows NT:</b> To get extended error information, call <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_getlasterror">
</object><a href=JavaScript:alink_1.Click()><b>GetLastError</b></a>. </p>
<h4>Remarks</h4>
<p>
A value of 1 in the mask specified by <i>hbmMask</i> indicates that the foreground raster operation code specified by <i>dwRop</i> should be applied at that location. A value of 0 in the mask indicates that the background raster operation code specified by <i>dwRop</i> should be applied at that location. </p>
<p>
If the raster operations require a source, the mask rectangle must cover the source rectangle. If it does not, the function will fail. If the raster operations do not require a source, the mask rectangle must cover the destination rectangle. If it does not, the function will fail. </p>
<p>
If a rotation or shear transformation is in effect for the source device context when this function is called, an error occurs. However, other types of transformation are allowed. </p>
<p>
If the color formats of the source, pattern, and destination bitmaps differ, this function converts the pattern or source format, or both, to match the destination format. </p>
<p>
If the mask bitmap is not a monochrome bitmap, an error occurs. </p>
<p>
When an enhanced metafile is being recorded, an error occurs (and the function returns FALSE) if the source device context identifies an enhanced-metafile device context. </p>
<p>
Not all devices support the <b>MaskBlt</b> function. An application should call the <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a> function to determine whether a device supports this function. </p>
<p>
If no mask bitmap is supplied, this function behaves exactly like <b>BitBlt</b>, using the foreground raster operation code. </p>
<p>
<b>ICM:</b> No color management is performed when blits occur.</p>
<p>
<b>Windows CE:</b> Windows CE version 1.0 supports only the <b>SRCCOPY</b> and <b>SRCINVERT</b> raster operations. </p>
<p>
This function is the same in Windows CE version 2.0 as it is in Windows desktop platforms.</p>
<h4>QuickInfo</h4>
<p>
<b>&nbsp;&nbsp;Windows NT: </b>Requires version 3.1 or later.<br>
<b>&nbsp;&nbsp;Windows: </b>Unsupported.<br>
<b>&nbsp;&nbsp;Windows CE: </b>Requires version 1.0 or later.<br>
<b>&nbsp;&nbsp;Header: </b>Declared in wingdi.h.<br>
<b>&nbsp;&nbsp;Import Library: </b>Use gdi32.lib.</p>
<h4>See Also</h4>
<p>
<a href="bitmaps_99ir.htm">Bitmaps Overview</a>, <a href="bitmaps_87eb.htm">Bitmap Functions</a>, <a href="bitmaps_0fzo.htm"><b>BitBlt</b></a>, <a href="devcons_88s3.htm"><b>GetDeviceCaps</b></a>, <a href="bitmaps_2dis.htm"><b>PlgBlt</b></a>, <a href="bitmaps_9cok.htm"><b>StretchBlt</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
