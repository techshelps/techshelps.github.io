<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Obtaining a Private Display Device Context</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_win32_obtaining_a_private_display_device_context"></a>Obtaining a Private Display Device Context</h2>
<p>
An application performing numerous drawing operations in the client area of its window must use a private display device context. To create this type of device context, the application must specify the CS_OWNDC constant for the style member of the <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="../../notopic_0pk4.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_win32_wndclass_str">
</object><a href=JavaScript:alink_1.Click()><b>WNDCLASS</b></a> structure when registering the window class. After registering the window class, the application obtains a handle identifying a private display device context by calling the <a href="devcons_4esj.htm"><b>GetDC</b></a> function. </p>
<p>
The following example shows how to create a private display device context. </p>
<pre><code>#include &lt;windows.h&gt;    // required for all Win32-based applications 
#include &lt;stdio.h&gt;      // C run-time header for i/o
#include &lt;string.h&gt;     // C run-time header for strtok 
#include "dc.h"         // specific to this program 
 
// Function prototypes.
 
BOOL InitApplication(HINSTANCE); 
long FAR PASCAL MainWndProc(HWND, UINT, UINT, LONG); 
 
// Global variables 
 
HINSTANCE hinst;       // handle of current instance 
HDC hdc;               // display device context handle 
 
BOOL InitApplication(HINSTANCE hinstance) 
{ 
    WNDCLASS  wc; 
 
    // Fill in the window class structure with parameters 
    // describing the main window. 
 
    wc.style = CS_OWNDC;         // Private-DC constant 
    wc.lpfnWndProc = (WNDPROC) MainWndProc; 
 
    wc.cbClsExtra = 0; 
    wc.cbWndExtra = 0; 
    wc.hInstance = hinstance; 
 
    wc.hIcon = LoadIcon((HINSTANCE) NULL, 
        MAKEINTRESOURCE(IDI_APPLICATION)); 
 
    wc.hCursor = LoadCursor((HINSTANCE) NULL, 
        MAKEINTRESOURCE(IDC_ARROW)); 
 
    wc.hbrBackground = GetStockObject(WHITE_BRUSH); 
    wc.lpszMenuName =  "GenericMenu"; 
    wc.lpszClassName = "GenericWClass"; 
 
    // Register the window class and return the resulting code. 
 
    return RegisterClass(&amp;wc); 
} 
 
LRESULT APIENTRY MainWndProc( 
        HWND hwnd,           // window handle 
        UINT message,        // type of message 
        WPARAM wParam,       // additional information 
        LPARAM lParam)       // additional information 
{ 
 
    PAINTSTRUCT ps;              // paint structure 
 
    // Retrieve a handle identifying the private DC. 
 
    hdc = GetDC(hwnd); 
 
    switch (message) 
    { 
        case WM_PAINT: 
              BeginPaint(hwnd, &amp;ps); 
 
        // Draw and paint using private DC. 
 </code></pre>
<p>&nbsp;</p></body>
</HTML>
