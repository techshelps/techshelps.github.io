<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAgentUserInput</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="progagentsinterface2zip_14"></a>IAgentUserInput</h2>
<p>
When a <b>Command</b> event occurs, the Microsoft Agent server returns information through the <b>UserInput</b> object.<b> IAgentUserInput</b> defines an interface that allows applications to query these values. </p>
<h4>Methods in Vtable Order</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<td width=31%><b>IAgentUserInput Methods</b></td>
<td width=69%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=31%><b>GetCount</b></td>
<td width=69%>Returns the number of command alternatives returned in a <b>Command</b> event.</td>
</tr>
<tr valign=top>
<td width=31%><b>GetItemId</b></td>
<td width=69%>Returns the ID for a specific <b>Command</b> alternative.</td>
</tr>
<tr valign=top>
<td width=31%><b>GetItemConfidence</b></td>
<td width=69%>Returns the value of the <b>Confidence</b> property for a specific <b>Command</b> alternative.</td>
</tr>
<tr valign=top>
<td width=31%><b>GetItemText</b></td>
<td width=69%>Returns the value of <b>Voice</b> text for a specific <b>Command</b> alternative.</td>
</tr>
<tr valign=top>
<td width=31%><b>GetAllItemData</b></td>
<td width=69%>Returns the data for all <b>Command</b> alternatives.</td>
</tr>
</table><br>
<p>
<b>IAgentUserInput::GetAllItemData</b></p>
<pre><code>HRESULT GetAllItemData(
   VARIANT * pdwItemIndices,  // address of variable for alternative IDs
   VARIANT * plConfidences,   // address of variable for confidence scores
   VARIANT * pbszText         // address of variable for voice text
);
</code></pre>
<p>
Retrieves the data for all <b>Command</b> alternatives passed to an <b>IAgentNotifySink::Command</b> callback.
<ul>
<li>
Returns S_OK to indicate the operation was successful.</li>
</ul>
<p>
<i>pdwItemIndices</i></p>
<p class=indent1>
Address of a variable that receives the IDs of <b>Commands</b> passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
<i>plConfidences</i></p>
<p class=indent1>
Address of a variable that receives the confidence scores for <b>Command</b> alternatives passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
<i>pbszText</i></p>
<p class=indent1>
Address of a variable that receives the voice text for <b>Command</b> alternatives passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
If voice input was not the source for the <b>Command</b>, for example, if the user selected the command from the character's pop-up menu, the Microsoft Agent server returns the ID of the <b>Command</b> selected, with a confidence score of 100 and voice text as NULL. The other alternatives return as NULL with confidence scores of zero (0) and voice text as NULL.</p>
<p>
See also <b>IAgentUserInput::GetItemConfidence</b>, <b>IAgentUserInput::GetItemText</b>, <b>IAgentUserInput::GetItemID</b></p>
<p>
</p>
<p>
<b>IAgentUserInput::GetCount</b></p>
<pre><code>HRESULT GetCount(
   long * pdwCount  // address of a variable for number of alternatives 
);
</code></pre>
<p>
Retrieves the number of <b>Command</b> alternatives passed to an <b>IAgentNotifySink::Command</b> callback.
<ul>
<li>
Returns S_OK to indicate the operation was successful.</li>
</ul>
<p>
<i>pdwCount</i></p>
<p class=indent1>
Address of a variable that receives the count of <b>Commands</b> alternatives identified by the server.</p>
<p>
If voice input was not the source for the command, for example, if the user selected the command from the character's pop-up menu, <b>GetCount</b> returns 1. If <b>GetCount</b> returns zero (0), the speech recognition engine detected spoken input but determined that there was no matching command.</p>
<p>
</p>
<p>
<b>IAgentUserInput::GetItemConfidence</b></p>
<pre><code>HRESULT GetItemConfidence(
   long dwItemIndex,    // index of Command alternative
   long * plConfidence  // address of confidence value for Command 
);
</code></pre>
<p>
Retrieves the confidence value for a <b>Command</b> passed to an <b>IAgentNotifySink::Command</b> callback.
<ul>
<li>
Returns S_OK to indicate the operation was successful.</li>
</ul>
<p>
<i>dwItemIndex</i></p>
<p class=indent1>
The index of a <b>Command</b> alternative passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
<i>plConfidence</i></p>
<p class=indent1>
Address of a variable that receives the confidence score for a <b>Command</b> alternative passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
If voice input was not the source for the command, for example, if the user selected the command from the character's pop-up menu, the Microsoft Agent server returns the confidence value of the best match<b> </b>as 100 and the confidence values for all other alternatives as zero (0).</p>
<p>
See also <b>IAgentUserInput::GetItemID</b>, <b>IAgentUserInput::GetAllItemData</b>, <b>IAgentUserInput::GetItemText</b></p>
<p>
</p>
<p>
<b>IAgentUserInput::GetItemID</b></p>
<pre><code>HRESULT GetItemID(
   long dwItemIndex,    // index of Command alternative
   long * pdwCommandID  // address of a variable for number of alternatives 
);
</code></pre>
<p>
Retrieves the identifier of a <b>Command</b> alternative passed to an <b>IAgentNotifySink::Command</b> callback.
<ul>
<li>
Returns S_OK to indicate the operation was successful.</li>
</ul>
<p>
<i>dwItemIndex</i></p>
<p class=indent1>
The index of the <b>Command</b> alternative passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
<i>pdwCommandID</i></p>
<p class=indent1>
Address of a variable that receives the ID of a <b>Command</b>.</p>
<p>
If voice input triggers the <b>IAgentNotifySink::Command</b> callback, the server returns the IDs for any matching <b>Commands</b> defined by your application. </p>
<p>
See also <b>IAgentUserInput::GetItemConfidence</b>, <b>IAgentUserInput::GetItemText</b>, <b>IAgentUserInput::GetAllItemData</b></p>
<p>
</p>
<p>
<b>IAgentUserInput::GetItemText</b></p>
<pre><code>HRESULT GetItemText(
   Long dwItemIndex,  // index of Command alternative
   BSTR * pbszText    // address of voice text for Command 
);
</code></pre>
<p>
Retrieves the voice text for a <b>Command</b> alternative passed to the <b>IAgentNotifySink::Command</b> callback.
<ul>
<li>
Returns S_OK to indicate the operation was successful.</li>
</ul>
<p>
<i>dwItemIndex</i></p>
<p class=indent1>
The index of a <b>Command</b> alternative passed to the <b>IAgentNotifySink::Command</b> callback.</p>
<p>
<i>pbszText</i></p>
<p class=indent1>
Address of a BSTR that receives the value of the voice text for the <b>Command</b>.</p>
<p>
If voice input was not the source for the command, for example, if the user selected the command from the character's pop-up menu, the server returns NULL for the <b>Command</b>'s voice text.</p>
<p>
See also <b>IAgentUserInput::GetItemConfidence</b>, <b>IAgentUserInput::GetItemID</b>, <b>IAgentUserInput::GetAllItemData</b></p>
<p>&nbsp;</p></body>
</HTML>
