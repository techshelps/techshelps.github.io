<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using VBScript</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="progagentcontrol2zip_6"></a>Using VBScript</h2>
<p>
To program Microsoft Agent from VBScript, use the HTML &lt;SCRIPT&gt; tags. To access the programming interface, use the name of control you assign in the &lt;OBJECT&gt; tag, followed by the subobject (if any), the name of the method or property, and any parameters or values supported by the method or property: </p>
<pre><code><i>agent</i>[.<i>object</i>].<i>Method parameter</i>, [<i>parameter</i>]
<i>agent</i>[.<i>object</i>].<i>Property</i> = <i>value</i>
</code></pre>
<p>
For events, include the name of the control followed by the name of the event and any parameters:</p>
<pre><code><b>Sub</b> <i>agent_event</i> <b>(ByVal</b> <i>parameter</i>[,<b>ByVal </b><i>parameter</i>]<b>)</b>
<i>statements</i>…
<b>End Sub</b>
</code></pre>
<p>
You can also specify an event handler using the &lt;SCRIPT&gt; tag's <b>For…Event</b> syntax:</p>
<pre><code><b>&lt;SCRIPT</b><i> </i><b>LANGUAGE=VBScript For=</b><i>agent </i><b>Event=</b><i>event</i>[(<i>parameter</i>[,<i>parameter</i>])]<b>&gt;</b>
<i>statements…</i>
<b>&lt;/SCRIPT&gt;</b>
</code></pre>
<p>
Although Microsoft Internet Explorer supports this latter syntax, not all browsers do. For compatibility, use only the former syntax for events.</p>
<p>
With VBScript 2.0, you can verify whether Microsoft Agent is installed by trying to create the object and checking to see if it exists. The following sample demonstrates how to check for the Agent control without triggering an auto-download of the control (as would happen if you included an &lt;OBJECT&gt; tag for the control on the page): </p>
<pre><code>    
&lt;!-- WARNING - This code requires VBScript 2.0.
It will always fail to detect the Agent control
in VbScript 1.x, because CreateObject doesn't work.
--&gt;

&lt;SCRIPT LANGUAGE=VBSCRIPT&gt;
If HaveAgent() Then
        'Microsoft Agent control was found.
document.write "&lt;H2 align=center&gt;Found&lt;/H2&gt;"
Else
        'Microsoft Agent control was not found.
document.write "&lt;H2 align=center&gt;Not Found&lt;/H2&gt;"
End If

Function HaveAgent()
' This procedure attempts to create an Agent Control object.
' If it succeeds, it returns True.
'     This means the control is available on the client.
' If it fails, it returns False.
'     This means the control hasn't been installed on the client.

    Dim agent
    HaveAgent = False
    On Error Resume Next
    Set agent = CreateObject("Agent.Control.1")
    HaveAgent = IsObject(agent)

End Function

&lt;/SCRIPT&gt;
</code></pre>
<p>
You can download VBScript 2.0 and obtain further information on VBScript at the Microsoft Download site and the Microsoft VBScript site.</p>
<p>&nbsp;</p></body>
</HTML>
