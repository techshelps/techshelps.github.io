<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Loading Character and Animation Data</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="progagentsinterface2zip_5"></a>Loading Character and Animation Data</h1>
<p>
Once you have a pointer to the <b>IAgent</b> interface, you can use the <b>Load</b> method to load a character and retrieve its <b>IDispatch</b> interface:</p>
<pre><code>    // Create a variant to store the full path of the character to load

    VariantInit(&amp;vPath);

    vPath.vt = VT_BSTR;
    vPath.bstrVal = SysAllocString(kpwszCharacter);

    // Load the character

    hRes = pAgent-&gt;Load(vPath, &amp;lCharID, &amp;lRequestID);

    // Get its IDispatch interface

    hRes = pAgent-&gt;GetCharacter(lCharID, &amp;pdCharacter);
</code></pre>
<p>
You can then use this information to request a pointer to the <b>IAgentCharacter</b>:</p>
<pre><code>    // Query for IAgentCharacter

    hRes = pdCharacter-&gt;QueryInterface(IID_IAgentCharacter, (LPVOID *)&amp;pCharacter);

// Release the IDispatch

    pdCharacter-&gt;Release();
</code></pre>
<p>
You can use this interface to access the character's methods:</p>
<pre><code>    // Show the character.  The first parameter tells Microsoft
    // Agent to show the character by playing an animation.

    hRes = pCharacter-&gt;Show(FALSE, &amp;lRequestID);

    // Make the character speak

    bszSpeak = SysAllocString(L"Hello World!");

    hRes = pCharacter-&gt;Speak(bszSpeak, NULL, &amp;lRequestID);

    SysFreeString(bszSpeak);
</code></pre>
<p>
When you no longer need Microsoft Agent services, such as when your client application shuts down, release its interfaces.  Note that releasing the character interface does not unload the character. Call the <b>Unload</b> method to do this before releasing the <b>IAgent</b> interface:</p>
<pre><code>// Clean up

if (pCharacter) {

    // Release the character interface

    pCharacter-&gt;Release();

    // Unload the character.  NOTE:  releasing the character
    // interface does NOT make the character go away.  You must
    // call Unload.

    pAgent-&gt;Unload(lCharID);
}
    
// Release the Agent

pAgent-&gt;Release();

VariantClear(&amp;vPath);
</code></pre>
<p>&nbsp;</p></body>
</HTML>
