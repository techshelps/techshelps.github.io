<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Adding Microsoft Agent Functionality to Your Application</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="progagentsinterface2zip_4"></a>Adding Microsoft Agent Functionality to Your Application</h1>
<p>
To access Microsoft Agent services, create an instance of the server and request a pointer to a specific interface that the server supports using the standard COM convention. In particular, the COM library provides an API function, <b>CoCreateInstance</b>, that creates an instance of the object and returns a pointer to the requested interface of the object. Request a pointer to the <b>IAgent</b> interface in your <b>CoCreateInstance</b> call or in a subsequent call to <b>QueryInterface</b>.</p>
<p>
The following code illustrates this in C/C++:</p>
<pre><code>hRes = CoCreateInstance(CLSID_AgentServer,
                        NULL,
                        CLSCTX_SERVER,
                        IID_IAgent,
                        (LPVOID *)&amp;pAgent);
</code></pre>
<p>
If the Microsoft Agent server is running, this function connects to the server; otherwise, it starts up the server.</p>
<p>
Functions that take pointers to BSTRs allocate memory using <b>SysAllocString</b>. It is the caller's responsibility to free this memory using <b>SysFreeString</b>.</p>
<p>&nbsp;</p></body>
</HTML>
