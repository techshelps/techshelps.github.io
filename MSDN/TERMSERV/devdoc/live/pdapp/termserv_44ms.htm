<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Detecting the Terminal Server Environment</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_win32_detecting_the_terminal_server_environment"></a>Detecting the Terminal Server Environment</h1>
<p>
<span style=color:#FF0000>[This is preliminary documentation and subject to change.]</span> </p>
<p>
An application can detect if it is being installed in or is running in a Windows®-based Terminal Server environment. The application can then optimize its behavior for its environment.</p>
<p>
When Terminal Server is installed, it adds the string "Terminal Server" to the list of installed product suites in the registry. The following example function, <b>ValidateProductSuite</b>, shows how to check the registry for this string. You can use the following code with the sample function, <b>ValidateProductSuite</b>, to determine whether Terminal Server is installed.</p>
<pre><code>BOOL fIsTerminalServer;
fIsTerminalServer = ValidateProductSuite( TEXT("Terminal Server") );<b> </b>
<b> </b></code></pre>
<p>
The following code implements the <b>ValidateProductSuite</b> example function, which checks the registry to determine whether a specified product suite is installed.</p>
<pre><code>#include &lt;tchar.h&gt;
BOOL
ValidateProductSuite(
    LPTSTR lpszSuiteName
    )
{
    BOOL fValidated = FALSE;
    LONG lResult;
    HKEY hKey = NULL;
    DWORD dwType = 0;
    DWORD dwSize = 0;
    LPTSTR lpszProductSuites = NULL;
    LPTSTR lpszSuite;

// Open the ProductOptions key.

    lResult = RegOpenKey(
        HKEY_LOCAL_MACHINE,
        TEXT("System\\CurrentControlSet\\Control\\ProductOptions"),
        &amp;hKey
        );
    if (lResult != ERROR_SUCCESS) {
        goto exit;
    }

// Determine required size of ProductSuites buffer.

    lResult = RegQueryValueEx(
        hKey,
        TEXT("ProductSuite"),
        NULL,
        &amp;dwType,
        NULL,
        &amp;dwSize
        );
    if (lResult != ERROR_SUCCESS) {
        goto exit;
    }

    if (!dwSize) {
        goto exit;
    }

// Allocate buffer.

    lpszProductSuites = (LPTSTR) LocalAlloc( LPTR, dwSize );
    if (!lpszProductSuites) {
        goto exit;
    }

// Retrieve array of product suite strings.

    lResult = RegQueryValueEx(
        hKey,
        TEXT("ProductSuite"),
        NULL,
        &amp;dwType,
        (LPBYTE) lpszProductSuites,
        &amp;dwSize
        );
    if (lResult != ERROR_SUCCESS) {
        goto exit;
    }

    if (dwType != REG_MULTI_SZ) {
        goto exit;
    }

// Search for suite name in array of strings.

    lpszSuite = lpszProductSuites;
    while (*lpszSuite) {
        if (_tcscmp( lpszSuite, lpszSuiteName ) == 0) {
            fValidated = TRUE;
            break;
        }
        lpszSuite += (_tcslen( lpszSuite ) + 1);
    }

exit:
    if (lpszProductSuites) {
        LocalFree( lpszProductSuites );
    }

    if (hKey) {
        RegCloseKey( hKey );
    }

    return fValidated;
}
 </code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
