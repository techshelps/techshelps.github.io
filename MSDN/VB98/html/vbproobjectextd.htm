<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Object Property</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbproobjectextd"></a>Object Property</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproBooksOnlineJumpTopic;vbproObjectExtd_C;vbproObjectExtdC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproObjectExtd_X;vbproObjectExtdX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproObjectExtd_A;vbproObjectExtdA">
</object></p>
<p>
Returns a reference to a property or method of a control which has the same name as a property or method automatically extended to the control by Visual Basic.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i>.<b>Object</b>[.<i>property</i> | .<i>method</i>]</p>
<p>
The <b>Object</b> property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=30%><b>Part</b></td>
<td class=label width=70%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=30%><i>object</i></td>
<td width=70%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=30%><i>property</i></td>
<td width=70%>Property of the control that is identical to the name of a Visual Basic-supplied property.</td>
</tr>
<tr valign=top>
<td width=30%><i>Method</i></td>
<td width=70%>Method of the control that is identical to the name of a Visual Basic-supplied method.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The <b>Object</b> property returns the object which is the basis for the control without the properties or methods automatically extended to the control by Visual Basic. Therefore, you can also reference the controls' "custom" properties and methods through the <b>Object</b> property, such as&nbsp; <code>Print SSTab1.Object.Tabs</code>.</p>
<p>
Visual Basic supplies some or all of a standard set of properties and methods to controls in a Visual Basic project. It is possible for a control or ActiveX component (such as Microsoft Excel or Microsoft Word) to define a property or method which has the same name as one of these standard properties or methods. When this occurs, Visual Basic automatically uses the property or method it supplies instead of the one with the same name defined in the control. The <b>Object</b> property allows you to bypass the Visual Basic-supplied property or method and use the identically named property or method defined in the control.</p>
<p>
For example, the <b>Tag</b> property is a property supplied to all controls in a Visual Basic project. If a control in a project has the name <code>ctlDemo</code>, and you access the <b>Tag</b> property using this syntax:</p>
<pre><code>ctlDemo.Tag
</code></pre>
<p>
Visual Basic automatically uses the <b>Tag</b> property it supplies. However, if the control defines its own <b>Tag</b> property and you want to access that property, you use the <b>Object</b> property in this syntax:</p>
<pre><code>ctlDemo.Object.Tag
</code></pre>
<p>
Visual Basic automatically extends some or all of the following properties, methods, and events to controls in a Visual Basic project:</p>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Properties</b></td>
<td class=label width=34%></td>
<td class=label width=35%></td>
</tr>
<tr valign=top>
<td width=31%><b>Align</b></td>
<td width=34%><b>Height </b></td>
<td width=35%><b>Object</b></td>
</tr>
<tr valign=top>
<td width=31%><b>Binding</b></td>
<td width=34%><b>HelpContextID</b></td>
<td width=35%><b>Parent</b></td>
</tr>
<tr valign=top>
<td width=31%><b>Bindings</b></td>
<td width=34%><b>Index</b></td>
<td width=35%><b>TabIndex</b></td>
</tr>
<tr valign=top>
<td width=31%><b>Cancel</b></td>
<td width=34%><b>Left</b></td>
<td width=35%><b>TabStop </b></td>
</tr>
<tr valign=top>
<td width=31%><b>Container</b></td>
<td width=34%><b>LeftNoRun</b></td>
<td width=35%><b>TagParent</b></td>
</tr>
<tr valign=top>
<td width=31%><b>DataChanged</b></td>
<td width=34%><b>LinkItem</b></td>
<td width=35%><b>ToolTipText</b></td>
</tr>
<tr valign=top>
<td width=31%><b>DataField</b></td>
<td width=34%><b>LinkMode </b></td>
<td width=35%><b>Top</b></td>
</tr>
<tr valign=top>
<td width=31%><b>DataSource</b></td>
<td width=34%><b>LinkTimeout</b></td>
<td width=35%><b>TopNoRun</b></td>
</tr>
<tr valign=top>
<td width=31%><b>Default</b></td>
<td width=34%><b>LinkTopic</b></td>
<td width=35%><b>VisibleTabStop</b></td>
</tr>
<tr valign=top>
<td width=31%><b>DragIcon </b></td>
<td width=34%><b>Name</b></td>
<td width=35%><b>WhatsThisHelpID</b></td>
</tr>
<tr valign=top>
<td width=31%><b>DragMode </b></td>
<td width=34%><b>NegotiateLinkItem</b></td>
<td width=35%><b>Width</b></td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Methods</b></td>
<td class=label width=34%></td>
<td class=label width=35%></td>
</tr>
<tr valign=top>
<td width=31%><b>Drag</b></td>
<td width=34%><b>LinkSend</b></td>
<td width=35%><b>ShowWhatsThis</b></td>
</tr>
<tr valign=top>
<td width=31%><b>LinkExecute</b></td>
<td width=34%><b>Move</b></td>
<td width=35%><b>Zorder</b></td>
</tr>
<tr valign=top>
<td width=31%><b>LinkPoke</b></td>
<td width=34%><b>Refresh</b></td>
<td width=35%></td>
</tr>
<tr valign=top>
<td width=31%><b>LinkRequest</b></td>
<td width=34%><b>SetFocus</b></td>
<td width=35%></td>
</tr>
</table><br>
<table border=1 cellpadding=5 cols=3 frame=below rules=rows>
<tr valign=top>
<td class=label width=31%><b>Events</b></td>
<td class=label width=34%></td>
<td class=label width=35%></td>
</tr>
<tr valign=top>
<td width=31%><b>GotFocus</b></td>
<td width=34%><b>LinkError</b></td>
<td width=35%><b>LinkOpen</b></td>
</tr>
<tr valign=top>
<td width=31%><b>LinkClose</b></td>
<td width=34%><b>LinkNotify</b></td>
<td width=35%><b>LostFocus</b></td>
</tr>
</table><br>
<p>
If you use a property or method of a control and don't get the behavior you expect, check to see if the property or method has the same name as one of those shown in the preceding list. If the names match, check the documentation provided with the control to see if the behavior matches the Visual Basic-supplied property or method. If the behaviors aren't identical, you may need to use the <b>Object</b> property to access the feature of the control that you want.</p>
</BODY>
</HTML>
