<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Add Method (Licenses Collection)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbmthaddmethod(licencescollection)"></a>Add Method (Licenses Collection)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthAddMethod(LicencesCollection)_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthAddMethod(LicencesCollection)_X">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbmthAddMethod(LicencesCollection)_A">
</object></p>
<p>
Adds a license to the <b>Licenses</b> collection and returns the license key.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<i>object</i>.<b>Add </b>(<i>ProgID</i>, <i>LicenseKey</i>)</p>
<p>
The <b>Add </b>method syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=19%><b>Part</b></td>
<td class=label width=81%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=19%><i>object</i></td>
<td width=81%>Required. An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=19%><i>ProgID</i></td>
<td width=81%>Required. A string that specifies the control for which a license key will be added.</td>
</tr>
<tr valign=top>
<td width=19%><i>LicenseKey</i></td>
<td width=81%>Optional. A string that specifies the license key. </td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
Use the <b>Add</b> method whenever you want to dynamically add a control that requires a license key. For more information about controls that require license keys, see "Licensing Issues for Controls" in the See Also list.</p>
<p>
When you compile a user control that requires a license key, and you want to dynamically add that control to an existing application, you must use the <b>Add</b> method for the <b>Licenses</b> collection in two different ways.</p>
<p>
First, use the method to return the license key that is hard-coded into a user control. Second, use the method to add the same license key to the <b>Licenses</b> collection before adding the user control to the <b>Controls</b> collection.</p>
<p>
In most cases, you will have to use the method in both ways in order to properly deploy a compiled user control. The steps for this are outlined below.</p>
<p>
After you have compiled a user control that requires a license key, use the <b>Add </b>method to return the license key. Store that license key where it can be retrieved by the deployed application. For example, the example below writes the key to a file. You could also store it in a database, or in the Windows registry.</p>
<pre><code>Private Sub GenerateLicenseKey()
   Dim intFile As Integer
   intFile = FreeFile
   ' Open a file to write the license key to.
   Open "c:\Temp\Ctl_Licenses.txt" For Output As #intFile
   Dim strLicense As String
   strLicense = Licenses.Add("prjWeeks.WeeksCtl")
   ' Write the license key to the file. 
   Write #intFile, strLicense
   Close #intFile
End Sub
</code></pre>
<p>
When you deploy your control, the deployed application adds the license key to the <b>Licenses </b>collection before adding the control to the <b>Controls </b>collection. (Of course, the control must have been installed on the machine as well.) The code example below adds the license key, then adds the control:</p>
<pre><code>Option Explicit
Dim WithEvents extObj As VBControlExtender

Private Sub LoadDynamicControl()
   Dim intFile As Integer
   intFile = FreeFile
   Open "c:\Download\Ctl_Licenses.txt" For Input As #intFile
   Dim strKey As String
   ' On the client machine, read the license key from the file.
   Input #intFile, strKey
   Licenses.Add "prjWeeks.WeeksCtl", strKey
   Close #intFile
   Set extObj = Controls.Add("prjWeeks.WeeksCtl", "ctl1")
   With Controls("ctl1")
      .Visible = True
   End With
End Sub
</code></pre>
<h3>When To Add a License Key</h3>
<p>
When you create a user control and you want to distribute the control for dynamic control addition, you must consider the following question: Does the user control contain only intrinsic controls? If the answer is yes, then ask, "Do I want to require that the end user have a license key in order to use the control?" If the answer to both questions is "yes," then be sure to check the Require License Key option on the General tab of the Project Properties dialog box.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;Even if you clear the Require License Key option, a user control that contains third-party controls will still require a license key.</p>
<h3>When No License Key Is Needed</h3>
<p>
There are two circumstances when you do not have to add a license key in order to add a control to the <b>Controls</b> collection:
<ol>
<li>
When the control is an intrinsic control and you have not checked the Require License Key option.<br><br></li>
<li>
When you add a control that is referenced in the project. In other words, if the control is present in the Toolbox.</li>
</ol>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When you do have a control in the Toolbox and you plan to add that control only at run time, be sure to clear the Remove Information About Unused ActiveX Controls option on the Make tab of the Project Properties dialog box; otherwise, trying to add the control will fail.</p>
</BODY>
</HTML>
