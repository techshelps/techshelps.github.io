<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Message Queue</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconmessagequeue"></a>Message Queue</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconMessageQueue_C">
</object></p>
<p>
The work-flow sample consists of a system simulating a simplified 'insurance claim processing' system. Claims are entered using a Visual Basic front end. When submitted, these claims are placed in a 'insurance claims queue.' A second Visual Basic application allows an 'insurance claims processor' to approve the claims. Once approved, the claims are moved to a second 'accounting queue.' A third Visual Basic application is used to process the claims in the accounting queue. When these are approved the messages are removed from the second queue and the work-flow is complete.</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=36%><b>File</b></td>
<td class=label width=64%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=36%>Accounting_Step3.vbp</td>
<td width=64%>Allows the processing of claims from the second queue (finishes the work-flow).</td>
</tr>
<tr valign=top>
<td width=36%>Administer_Step0.vbp</td>
<td width=64%>Sets up the queues for the sample. Allows the viewing of queue contents.</td>
</tr>
<tr valign=top>
<td width=36%>ClaimEntry_Step1.vbp</td>
<td width=64%>Allows the submission of claims (starts the work-flow)</td>
</tr>
<tr valign=top>
<td width=36%>clsStringBag.cls</td>
<td width=64%>Class module for PropertyBag strings.</td>
</tr>
<tr valign=top>
<td width=36%>frmAdminister.frm</td>
<td width=64%>Form to create a new queue.</td>
</tr>
<tr valign=top>
<td width=36%>frmClaimProcessing.frm</td>
<td width=64%>Opens a "claims" message queue.</td>
</tr>
<tr valign=top>
<td width=36%>frmProcessClaim.frm</td>
<td width=64%>Submits a claim.</td>
</tr>
<tr valign=top>
<td width=36%>frmQueueMonitoring.frm</td>
<td width=64%>Message monitoring form.</td>
</tr>
<tr valign=top>
<td width=36%>fromAdminTitleScreen.frm</td>
<td width=64%>Show other forms.</td>
</tr>
<tr valign=top>
<td width=36%>MessageArrival.cls</td>
<td width=64%>Monitors message arrivals.</td>
</tr>
<tr valign=top>
<td width=36%>modInsuranceMQ.bas</td>
<td width=64%>Global constants.</td>
</tr>
<tr valign=top>
<td width=36%>modQueueSupport.bas</td>
<td width=64%>Contains functions useful for message queues. These functions are intended to be called from applications to create, destroy, manage, and access queues.</td>
</tr>
<tr valign=top>
<td width=36%>modQueueSupportHelper.bas</td>
<td width=64%>Contains HELPER functions useful for message queue access.</td>
</tr>
<tr valign=top>
<td width=36%>Processing_Step2.vbp</td>
<td width=64%>Allows the processing of claims from the first queue and moves them to the second queue.</td>
</tr>
</table><br>
<h3>To Run</h3>
<p>
See the Readme.htm file for details on running the sample.</p>
</BODY>
</HTML>
