<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DataMembers Collection</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbcoldatamemberscollection"></a>DataMembers Collection</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbcolDataMembersCollection_C;vbproDataMembersCollection_C">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbcolDataMembersCollection_X;vbproDataMembersCollection_X">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbcolDataMembersCollection_P">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vamthClear;vamthRemove;vbcolDataMembersCollection_M">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbcolDataMembersCollection_E">
</object></p>
<p>
A collection of data members for a data source.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>DataMembers</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
A data provider can have multiple sets of data that a data consumer can choose to bind to. Each set of data is called a "data member," and be either an <b>ADO Recordset</b>, a <b>Class</b> that implements the OLE Simple Provider (OSP) interface, or an OLEDB Provider created with Visual Basic. In any case, an arbitrary but unique string can be associated with the data member, and it is this identifying string that is added to the <b>DataMembers</b> collection using the <b>Add</b> method.</p>
<p>
When configuring a data consumer to use a complex data source, you must set both the <b>DataSource</b> and the <b>DataMember</b> properties to fully qualify the data source. For example, if you configure a <b>TextBox</b> control to use the Data Environment as a data source, you must set its <b>DataSource</b> property to the Data Environment, and its <b>DataMember </b>property<b> </b>to a specific <b>Command</b> object. Conversely, when you create your own complex data source, the <b>DataMembers</b> collection allows your data source to serve multiple data sets to any data consumer.</p>
<p>
For example, you can create a <b>User Control </b>configured as a data source by setting its <b>DataSourceBehavior</b> to <b>vbDataSource</b>. In the <b>Initialize </b>event, use the <b>Add </b>method to add the identifying strings of each data member to the <b>DataMembers</b> collection. Consequently, when the end user sets the <b>DataSource </b>property to your user control, and clicks <b>DataMembers</b> on the <b>Properties</b> window, those members added to the <b>DataMembers</b> collection will appear in the drop-down list.</p>
<p>
Similarly, when creating a <b>Class</b> configured as a data source, in the <b>Initialize</b> event, invoke the <b>Add </b>method to add the identifying strings to the <b>DataMembers</b> collection. Then, to configure a data consumer to use the class, set its <b>DataSource </b>property to the class and its <b>DataMember </b>property to a member of the <b>DataMembers </b>collection.</p>
<p>
When a data consumer's <b>DataSource </b>property is set to a class or User control configured as a data source, the <b>GetDataMember </b>event occurs. The event contains an argument, the <i>DataMember</i> argument, that passes the value of the <b>DataMember </b>property. The event also features an argument, the <i>Data </i>argument, that you can use to return the data to the consumer. In other words, in the GetDataMember event, query the <i>DataMember </i>value to determine which data member has been requested, and set the event's <i>Data </i>argument to the requested data source (i.e. an ADO Recordset, OLEDB provider, or class implementing the OSP interface).</p>
<p>
A data member can also be an empty string. When programming the GetDataMember event, be sure handle this possibility by setting a default data member.</p>
</BODY>
</HTML>
