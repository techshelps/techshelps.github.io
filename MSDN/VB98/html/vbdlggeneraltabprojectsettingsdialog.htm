<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>General Tab (Project Properties Dialog Box)</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbdlggeneraltabprojectsettingsdialog"></a>General Tab (Project Properties Dialog Box)</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbdlgGeneralTabProjectSettingsDialogC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Specifics">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbdlgGeneralTabProjectSettingsDialogS">
</object></p>
<p>
<img src="va1j551.gif" border=0></p>
<p>
<img src="avhdg006.gif" border=0></p>
<p>
Specifies the settings for the current Visual Basic project. The name of the project is displayed in the title bar.</p>
<h3>Tab Options</h3>
<p class=dt>
<B><b>Project Type</b></B></p>
<p class=indent>
Sets the project type. You can change any project type to another project type. When you change a project type, all associated changes are made automatically. If items are invalid in the new project type, they remain part of the project but you cannot add new instances. If you have properties in the current project that are not valid in the new project, you will get a message suggesting that you do not make the change.</p>
<p class=dt>
<B><b>Startup Object</b></B></p>
<p class=indent>
Sets which form or Sub/Main in the current project runs first.</p>
<p class=dt>
<B><b>Project Name</b></B></p>
<p class=indent>
Identifies your component in the Windows Registry and the <b>Object</b> <b>Browser</b>. It is important that it has a unique name.</p>
<p class=tl>
The project name is the name of the <i>type library</i> for your component. The type library, or TypeLib, contains the description of the objects and interfaces provided by your component.</P><p class=tl>
It is also used to qualify the names of classes. A combination of project name and class name is sometimes referred to as a <i>fully qualified class name</i>, or as a <i>programmatic ID</i>. The fully qualified class name may be required to correctly identify an object as belonging to your component.</P><p class=dt>
<B><b>Help File Name</b></B></p>
<p class=indent>
Displays the name of the Help file associated with the project.</p>
<p class=dt>
<B><b>Project Help Context ID</b></B></p>
<p class=indent>
Lists the context ID for the specific Help topic to be called when the user selects the <img src="but_help.gif" border=0> button while the application’s <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectlibrary">
</object><a href=JavaScript:alink_3.Click()>object library</a> is selected in the <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectbrowser">
</object><a href=JavaScript:alink_4.Click()>Object Browser</a>.</p>
<p class=dt>
<B><b>Project Description</b></B></p>
<p class=indent>
Sets the descriptive text that is displayed in the <b>Description</b> pane at the bottom of the <b>Object</b> <b>Browser</b>.</p>
<p class=tl>
You can use the Project Description as the description for ActiveX components. If you are creating an ActiveX control, it is the text that appears in the <b>Components</b> dialog box.</P><p class=tl>
If you are creating an ActiveX.dll or ActiveX.exe, this text appears in the <b>References</b> dialog box.</P><p class=dt>
<B><b>Unattended Execution</b></B></p>
<p class=indent>
Indicates that the project is intended to run without user interaction. Unattended projects have no interface elements. Any run-time functions such as messages that normally result in user interaction are written to an event log.</p>
<p class=dt>
<B><b>Upgrade ActiveX Controls</b></B></p>
<p class=indent>
When selected, the project automatically updates the ActiveX controls if you installed a newer version of them on your machine since the last time you opened the project. If a newer version of an ActiveX control is available and this option is not selected, a dialog box prompting you to upgrade the control appears. This option is selected by default.</p>
<p class=dt>
<B><b>Require License Key</b></B></p>
<p class=indent>
Enables licensing for ActiveX Control projects (projects that compile to .ocx files), not to .exe or .dll files. A Visual Basic license file (*.vbl) will be created when you build the project. The *.vbl must be registered on the user’s machine for the components to be used in the design environment. The SetUp Wizard will build a setup program that properly registers the information in the *.vbl file on the end user's machine when that setup program is run.</p>
<p class=dt>
<B><b>Retained in Memory</b></B></p>
<p class=indent>
Retains a project in memory. However, there is a performance cost: A project retained in memory is not unloaded until the process terminates.</p>
<p class=dt>
<B><b>Threading Model</b></B>
<ul type=disc>
<li>
<b>Threading Model List</b> —The threading model list box is only activated for ActiveX.dlls and ActiveX Control projects. The only options are single-threaded and apartment-threaded.<br><br></li>
<li>
<b>Thread per Object</b> — Indicates that each instance of a class marked as Multiuse in the Instancing property will be created on a new and distinct thread. Each thread has a unique copy of all global variables and objects, and will not interfere with any other thread.<br><br></li>
<li>
<b>Thread Pool</b> — Indicates that each instance of a class marked as Multiuse in the Instancing property will be created on a thread from the thread pool. The choice of thread is determined in a round-robin fashion. Each thread has a unique copy of all global variables, but multiple instances reside on a given thread and can potentially interfere with each other.<br><br></li>
<li>
<b>Number of threads</b> — Determines the maximum number of threads created for the thread pool. When a Multiuse class is instantiated, threads are created as needed up to the number set here. After the maximum number is reached, Visual Basic begins assigning new instances to existing threads.</li>
</ul>
</BODY>
</HTML>
