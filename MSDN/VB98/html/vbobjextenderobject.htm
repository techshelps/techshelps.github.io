<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Extender Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjextenderobject"></a>Extender Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject_C;vbobjExtenderObjectC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject_X;vbobjExtenderObjectX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject_P;vbobjExtenderObjectP">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject_M;vbobjExtenderObjectM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjExtenderObject_E;vbobjExtenderObjectE">
</object></p>
<p>
An <b>Extender</b> object holds properties of the control that are actually controlled by the container of the control rather than by the control itself.</p>
<p class=label>
<b>Syntax</b></p>
<p>
<b>Extender</b></p>
<p class=label>
<b>Remarks</b></p>
<p>
Some properties of a control are provided by the container rather than the control; these are extender properties. Examples of extender properties are: <b>Name</b>, <b>Tag</b> and <b>Left</b>. The control still needs to know what the value of these extender properties are, and sometimes needs to be able to change an extender property; the <b>Extender</b> object gives the control access to these properties.</p>
<p>
Some extender properties are standard, while others are specific to certain containers. A control may access non-standard extender properties, but this will make the control container-specific. If the control makes use of an extender property, the control should handle the case where the extender property is not supported by the current container.</p>
<p>
When the control is compiled, Visual Basic has no way of knowing what extender properties may be available when the control is run; therefore references to extender properties will always be late bound.</p>
<p>
The <b>Extender</b> object is not available when the Initialize event is raised; but is available when the InitProperties event or ReadProperties event is raised.</p>
<p>
The <b>Extender</b> object has several standard properties:
<ul type=disc>
<li>
The <b>Name</b> property, a read only String that contains the user-defined name of the control.<br><br></li>
<li>
The <b>Visible</b> property, a read/write Boolean that specifies if the control is visible or not.<br><br></li>
<li>
The <b>Parent</b> property, a read only object that represents the container of the control, such as a form in Visual Basic.<br><br></li>
<li>
The <b>Cancel</b> property, a read only Boolean that indicates that the control is the default <b>Cancel</b> button for the container.<br><br></li>
<li>
The <b>Default</b> property, a read only Boolean that indicates that the control is the default button for the container.</li>
</ul>
<p>
Visual Basic provides several more extender methods, properties and events; other containers are not guaranteed to provide these extender methods, properties and events. These Visual Basic specific extender methods, properties and events are:
<ul type=disc>
<li>
The <b>Container</b> property, a read only object that represents the visual container of the control.<br><br></li>
<li>
The <b>DragIcon</b> property, a read/write Picture that specifies the icon to use when the control is dragged.<br><br></li>
<li>
The <b>DragMode</b> property, a read/write Integer that specifies if the control will automatically drag, or if the user of the control must call the <b>Drag</b> method.<br><br></li>
<li>
The <b>Enabled</b> property, a read only Boolean that specifies if the control is enabled. This extender property is not present unless the control also has an <b>Enabled</b> property with the correct procedure ID. For additional information, refer to the topic "Allowing Your Controls to be Enabled and Disabled" in Chapter 9: Building ActiveX Controls.<br><br></li>
<li>
The <b>Height</b> property, a read/write Integer that specifies the height of the control in the container’s scale units.<br><br></li>
<li>
The <b>HelpContextID</b> property, a read/write Integer that specifies the context ID to use when the F1 key is pressed when the control has the focus.<br><br></li>
<li>
The <b>Index</b> property, a read only Integer that specifies the position in a control array this instance of the control occupies.<br><br></li>
<li>
The <b>Left</b> property, a read/write Integer that specifies the position of the left edge of the control to the left edge of the container, specified in the container’s scale units.<br><br></li>
<li>
The <b>TabIndex</b> property, a read/write Integer that specifies the position of the control in the tab order of the controls in the container.<br><br></li>
<li>
The <b>TabStop</b> property, a read/write Boolean that specifies if Tab will stop on the control.<br><br></li>
<li>
The <b>Tag</b> property, a read/write String that contains a user-defined value.<br><br></li>
<li>
The <b>ToolTipText</b> property, a read/write String that contains the text to be displayed when the cursor hovers over the control for more than a second.<br><br></li>
<li>
The <b>Top</b> property, a read/write Integer that specifies the position of the top edge of the control to the top edge of the container, specified in the container’s scale units.<br><br></li>
<li>
The <b>WhatThisHelpID</b> property, a read/write Integer that specifies the context ID to use when the <b>What’s This</b> pop-up is used on the control.<br><br></li>
<li>
The <b>Width</b> property, a read/write Integer that specifies the width of the control in the container’s scale units.<br><br></li>
<li>
The <b>Drag</b> method, a method to begin, end, or cancel a drag operation of the control.<br><br></li>
<li>
The <b>Move</b> method, a method to move the position of the control.<br><br></li>
<li>
The <b>SetFocus</b> method, a method to set the focus to the control.<br><br></li>
<li>
The <b>ShowWhatsThis</b> method, a method to display a selected topic in a Help file using the <b>What's This</b> popup provided by Help.<br><br></li>
<li>
The <b>ZOrder</b> method, a method to place the control at the front or back of the z-order within its graphical level.<br><br></li>
<li>
The DragDrop event, an event that is raised when another control on the form is dropped on this control.<br><br></li>
<li>
The DragOver event, an event that is raised when another control on the form is dragged over this control.<br><br></li>
<li>
The GotFocus event, an event that is raised when this control gets the focus.<br><br></li>
<li>
The LostFocus event, an event that is raised when this control loses the focus.</li>
</ul>
</BODY>
</HTML>
