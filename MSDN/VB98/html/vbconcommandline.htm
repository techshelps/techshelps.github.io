<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Command Line Arguments</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbconcommandline"></a>Command Line Arguments</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbconCommandLineC;vbproBooksOnlineJumpTopic">
</object></p>
<p>
Determines whether Visual Basic complies and runs a program, compiles and makes an executable (.exe) file or ActiveX DLL (.dll), or sets the argument part of the command line returned by the Command function.</p>
<p class=label>
<b>Syntax</b></p>
<p>
vb5[.exe] [[{<b>/run | /r</b>} <i>projectname</i>] [[{<b>/d </b><i>compileconst</i>}] {<b>/make</b> | <b>/m</b> } <i>projectname</i>] [{<b>/makedll | /l</b>} <i>projectname</i>] {/<b>cmd </b><i>argument </i><b>| /c </b><i>argument</i>}][{<b>/runexit</b>} <i>projectname</i>][{<b>/m</b>} or {<b>/runexit</b>} <i>projectname</i><b> /out </b><i>filename</i>}][{<b>/m</b>}][<b>/sdi</b>] or [<b>/mdi</b>]</p>
<p>
The parts of the command line switch syntax are:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=23%><b>Argument</b></td>
<td class=label width=77%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=23%><i>projectname</i></td>
<td width=77%>The name of your project (.vbp) file.</td>
</tr>
<tr valign=top>
<td width=23%><b>/run </b>or <b>/r</b></td>
<td width=77%>Tells Visual Basic to compile and run <i>projectname</i> using the arguments stored in the Command Line Arguments field of the Make tab of the Project Properties dialog box. You can run more than one project using this command. Replace <i>projectname</i> with <i>projectgroupname</i>.</td>
</tr>
<tr valign=top>
<td width=23%><b>/make</b> or<b> /m</b></td>
<td width=77%>Tells Visual Basic to compile <i>projectname</i> and make an executable (.exe) file, using the existing settings of the <b>Path</b>, <b>EXEName</b>, and <b>Title</b> properties of the APP object. You can compile and make an executable (.exe) file from more than one project using this command. Replace of the <i>projectname</i> with<i> projectgroupname</i>.</td>
</tr>
<tr valign=top>
<td width=23%>/<b>makedll</b> or <b>/l</b></td>
<td width=77%>Tells Visual Basic to compile <i>projectname</i> and make an in-process ActiveX server (.dll) file from it. </td>
</tr>
<tr valign=top>
<td width=23%>/<b>d</b> or <b>/D</b></td>
<td width=77%>Tells Visual Basic which values to use for conditional compilation constants when making an .EXE with the /<b>make</b> switch or an ActiveX DLL with the /<b>makedll</b> switch.</td>
</tr>
<tr valign=top>
<td width=23%><i>compileconst</i></td>
<td width=77%>The names and values of conditional compilation constants used in the project file.</td>
</tr>
<tr valign=top>
<td width=23%>/<b>cmd</b> or <b>/c</b></td>
<td width=77%>Puts argument in the Command Line Arguments field in the Make tab of the Project Properties dialog box. When used, this must be the last switch on the command line.</td>
</tr>
<tr valign=top>
<td width=23%><b>/runexit</b></td>
<td width=77%>Tells Visual Basic to run <i>projectname</i>. If for any reason the file is changed in the process of running, all changes are ignored and no dialog appears on exit to design mode.</td>
</tr>
<tr valign=top>
<td width=23%><b>filename</b></td>
<td width=77%>The name of the file to receive errors when you build an executable using the /<b>m </b>or <b>/runexit</b> option.</td>
</tr>
<tr valign=top>
<td width=23%><b>/out</b></td>
<td width=77%>Allows you to specify a file to receive errors when you build using the <b>/m</b> or <b>/runexit </b>option. The first error encountered is placed in this file with other status information. If you do not use the /out option, command line build errors are displayed in a message box. This option is useful if you are building multiple projects.</td>
</tr>
<tr valign=top>
<td width=23%><b>/?</b></td>
<td width=77%>Lists the available Command Line arguments.</td>
</tr>
<tr valign=top>
<td width=23%><b>/sdi</b></td>
<td width=77%>Changes the Visual Basic environment to <object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefsingledocumentinterface">
</object><a href=JavaScript:alink_2.Click()>SDI (Single Document Interface)</a> mode. Visual Basic remains in SDI mode until you change it. You can change to MDI mode by using the <b>/mdi</b> argument or by clearing the SDI Development Environment option in the Advanced tab of the Options dialog box.</td>
</tr>
<tr valign=top>
<td width=23%><b>/mdi</b></td>
<td width=77%>Opens Visual Basic in <object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="idh_vbdefmultipledocumentinterface">
</object><a href=JavaScript:alink_3.Click()>MDI (Multiple Document Interface)</a> mode. Visual Basic remains in MDI mode until you change it. You can change to SDI mode by using the /<b>sdi</b> argument or by selecting the SDI Development Environment option in the Advanced tab of the Options dialog box. MDI mode is the default.</td>
</tr>
</table><br>
<p>
When used, these arguments must be in a command line to run Visual Basic. For example, you might use them in the Run dialog box from the Run command of the Windows 95 Start Menu. Here is a valid command line that runs Visual Basic, loads a specific project, and runs it:</p>
<p>
C:\vb5.exe /r MyProj.vbp</p>
</BODY>
</HTML>
