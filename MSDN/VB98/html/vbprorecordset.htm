<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Recordset Property</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbprorecordset"></a>Recordset Property</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="daobjQueryDef;daproDataUpdatable;daproRecordCount;daproUpdatable;vbproBooksOnlineJumpTopic;vbproRecordset_C;vbproRecordsetC">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproRecordset_X;vbproRecordsetX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Applies To">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbproRecordset_A;vbproRecordsetA">
</object></p>
<p>
Returns or sets a <b>Recordset</b> object defined by a <b>Data</b> control's properties or by an existing <b>Recordset</b> object.</p>
<p class=label>
<b>Syntax</b></p>
<p>
Set<i> object</i><b>.Recordset</b> [<b>=</b> <i>value</i> ]</p>
<p>
The <b>Recordset</b> property syntax has these parts:</p>
<table border=1 cellpadding=5 cols=2 frame=below rules=rows>
<tr valign=top>
<td class=label width=29%><b>Part</b></td>
<td class=label width=71%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=29%><i>object</i></td>
<td width=71%>An <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defobjectexpression">
</object><a href=JavaScript:alink_4.Click()>object expression</a> that evaluates to an object in the Applies To list.</td>
</tr>
<tr valign=top>
<td width=29%><i>value</i></td>
<td width=71%>An object variable containing a <b>Recordset</b> object.</td>
</tr>
</table><br>
<p class=label>
<b>Remarks</b></p>
<p>
The <b>Data</b> control is automatically initialized when your application starts before the initial Form_Load procedure. If the <b>Connect</b>, <b>DatabaseName</b>, <b>Options</b>, <b>RecordSource</b>, <b>Exclusive</b>, <b>ReadOnly</b> and <b>RecordsetType</b> properties are valid, or if you set these <b>Data</b> control properties at <object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defruntime">
</object><a href=JavaScript:alink_5.Click()>run time</a> and use the <b>Refresh</b> method, the Microsoft Jet database engine attempts to create a new <b>Recordset</b> object based on those properties. This <b>Recordset</b> is accessible through the <b>Data</b> control's <b>Recordset</b> property. If, however, one or more of these properties is set incorrectly at design time, an untrappable error occurs when Visual Basic attempts to use the properties to open the specified database and create the <b>Recordset</b> object.</p>
<p>
You can use the <b>Recordset</b> property as you would any other <b>Recordset</b> object. For example, you can use any of the <b>Recordset</b> methods or properties and examine the structure of the <b>Recordset</b> object's underlying schema.</p>
<p>
You can also request the type of <b>Recordset</b> to be created by setting the <b>Data</b> control's <b>RecordsetType</b> property. If you don't request a specific type, a dynaset-type <b>Recordset</b> is created. Using the <b>RecordsetType</b> property, you can request to create either a table-, snapshot- or dynaset-type <b>Recordset</b>. However, if the Jet engine can't create the type requested, a trappable error occurs.</p>
<p>
In many cases, the default type and configuration of the <b>Recordset</b> object created is extremely inefficient. That is, you might not need an updatable, fully-scrollable, keyset-type cursor to access your data. For example, a read-only, snapshot-type <b>Recordset</b> might be far faster to create than the default <b>Recordset</b>. Be sure to choose the most efficient Type, <b>Exclusive</b>, <b>Options</b> and <b>ReadOnly</b> properties possible for your situation.</p>
<p>
The type of <b>Recordset</b> created can be determined at run time by examining the <b>Recordset</b> property's <b>Type</b> property or the <b>Data</b> control's <b>RecordsetType</b> property. Note, however, that the constants used for the type of <b>Recordset</b> created are different. For example:</p>
<pre><code>If Data1.Recordset.Type = dbOpenDynaset Then ...
If Data1.RecordsetType = dbDynasetType Then ...
</code></pre>
<p>
A <b>Recordset</b> might not be updatable even if you request a dynaset- or table-type <b>Recordset</b>. If the underlying database, table, or field isn't updatable, all or portions of your <b>Recordset</b> may be read-only. Examine the <b>Database</b> and <b>Recordset</b> objects' <b>Updatable</b> property or the <b>Field</b> object's <b>DataUpdatable</b> property to determine if your code can change the records. Even when the <b>DataUpdatable</b> property returns <b>True</b>, there are situations where the underlying data fields might <i>not </i>be updatable if, for example, you do not have sufficient permissions to make changes. Other factors can also prevent fields from being updatable.</p>
<p>
The number of records returned by the <b>Recordset</b> can be determined by moving to the last record in the <b>Recordset</b> and examining the <b>Recordset</b> object's <b>RecordCount</b> property. Before you move to the last record, the value returned by the <b>RecordCount</b> property only reflects the number of rows processed by the Jet engine. The following example shows how you can combine the <b>RecordCount</b> property of a <b>Recordset</b> with the <b>Recordset</b> property to display the number of records in a <b>Data</b> control's recordset:</p>
<pre><code>Data1.Recordset.MoveLast
MsgBox "Records: " &amp; Data1.Recordset.RecordCount
</code></pre>
<p class=label>
<b>Professional and Enterprise Editions</b></p>
<p>
If you create a <b>Recordset</b> object using either code or another <b>Data</b> control, you can set the <b>Recordset</b> property of the <b>Data</b> control to this new <b>Recordset</b>. Any existing <b>Recordset</b> in the <b>Data</b> control, and the <b>Database</b> object associated with it are released when a new <b>Recordset</b> is assigned to the <b>Recordset</b> property.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When the <b>Recordset</b> property is set, the <b>Data</b> control doesn't close the current <b>Recordset</b> or <b>Database,</b> but it does release it. If there are no other users, the database is closed automatically. You may wish to consider closing the <b>Recordset</b> and <b>Database</b> associated with the <b>Data</b> control prior to setting the <b>Recordset</b> property using the <b>Close</b> method.</p>
<p>
Make sure the <b>DataField</b> properties of the <object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="defboundcontrol">
</object><a href=JavaScript:alink_6.Click()>bound controls</a> connected to the <b>Data</b> control are set to match the new <b>Recordset</b> object's field names.</p>
<p>
For example, to create a <b>Recordset</b> in code and pass it to an existing <b>Data</b> control:</p>
<pre><code>Dim Db As Database, Rs As Recordset   ' Defined as public variables.
Sub ApplyRecordset()
   Set Db = Workspaces(0).OpenDatabase("BIBLIO.MDB")
   Set Rs = Db.OpenRecordset("AUTHORS") ' Defaults to Table object.
   Set Data1.Recordset = Rs   ' Assign Recordset.
   Data1.Recordset.Index = "PrimaryKey"
   Debug.print Rs.Type   ' Show type created.
End Sub
</code></pre>
<p>
You can use this technique to create an MDI parent and child data connection with a single hidden <b>Data</b> control on the MDI <object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbdefparentform">
</object><a href=JavaScript:alink_7.Click()>parent form</a> and another visible <b>Data</b> control on the <object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbdefmdichild">
</object><a href=JavaScript:alink_8.Click()>MDI child</a>. In the MDI child's Form_Load event, set the child's <b>Data</b> control <b>Recordset</b> property to the parent's <b>Data</b> control <b>Recordset</b> property. Using this technique synchronizes all the child forms and their bound controls with the parent.</p>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;The <b>Data</b> control doesn't support forward-only <b>Recordset</b> objects. If you try to assign a forward-only <b>Recordset</b> object to the <b>Recordset</b> property of the <b>Data</b> control, a trappable error results.</p>
<p>
All <b>Recordset</b> objects created by the <b>Data</b> control are created in <b>Workspaces</b>(0) except ODBCDirect (<b>DefaultType</b> = <b>dbUseODBC</b>) <b>Recordset</b> objects. If you need to use the <b>Data</b> control to manipulate a database in another <b>Workspace</b>, use the technique shown above to open the database in the desired <b>Workspace</b>, create a new <b>Recordset</b> and set the <b>Data</b> control's <b>Recordset</b> property to this new <b>Recordset</b>.</p>
<p class=indent>
<B><b>Important</b></B>&nbsp;&nbsp;&nbsp;You can always reference the properties of the <b>Data</b> control's <b>Recordset</b> by using the <b>Recordset</b> property.&nbsp; By directly referencing the <b>Recordset</b>, you can determine the <b>Index</b> to use with <b>Table</b> objects, the <b>Parameters</b> collection of a <b>QueryDef,</b> or the <b>Recordset</b> type.</p>
<p class=label>
<b>Data Type</b></p>
<p>
Recordset</p>
</BODY>
</HTML>
