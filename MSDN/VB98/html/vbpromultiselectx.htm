<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MultiSelect Property Example</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbpromultiselectx"></a>MultiSelect Property Example</h1>
<p>
This example fills a <b>ListBox</b> control with the names of your screen fonts and illustrates how the <b>MultiSelect</b> property affects the behavior of a <b>ListBox</b>. To try this example, create two <b>ListBox</b> controls and a <b>CommandButton</b> control on a form. In the first <b>ListBox</b>, set the <b>MultiSelect</b> property to 1 or 2. At run time, select several items in the first <b>ListBox</b>, and then click the <b>CommandButton</b>. All selected items are displayed in the second <b>ListBox</b>. Run the example several times with different settings of the <b>MultiSelect</b> property. Paste the code into the Declarations section, and then press F5 to run the program.</p>
<pre><code>Private Sub Form_Load ()
   Dim I   ' Declare variable.
   ' Fill the list box with screen font names.
   For I = 0 To Screen.FontCount - 1
      List1.AddItem Screen.Fonts(I)
   Next I
End Sub

Private Sub Command1_Click ()
   Dim I   ' Declare variable.
   ' Clear all items from the list.
   List2.Clear
   ' If an item is selected, add it to List2.
   For I = 0 To List1.ListCount - 1
      If List1.Selected(I) Then
         List2.AddItem List1.List(I)
      End If
   Next I
End Sub
</code></pre>
</BODY>
</HTML>
