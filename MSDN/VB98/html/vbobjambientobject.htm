<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>AmbientProperties Object</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY>

<h1><a name="vbobjambientobject"></a>AmbientProperties Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:See Also">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjAmbientObject_C;vbobjAmbientObjectC;vbproBooksOnlineJumpTopic">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Example">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjAmbientObject_X;vbobjAmbientObjectX">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Properties">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjAmbientObject_P;vbobjAmbientObjectP">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Methods">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjAmbientObject_M;vbobjAmbientObjectM">
</object>&nbsp;&nbsp;&nbsp;<object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink">
<PARAM name="Font" value=",,,,underline">
<PARAM name="Text" value="Text:Events">
<PARAM name="Flags" value=",,1">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="vbobjAmbientObject_E;vbobjAmbientObjectE">
</object></p>
<p>
An <b>AmbientProperties</b> object holds ambient information from a container to suggest behavior to controls contained within the container.</p>
<p class=label>
<b>Remarks</b></p>
<p>
Containers provide ambient properties in order to suggest behavior to controls. As an example, <b>BackColor</b> is one of the standard ambient properties; the container is suggesting what the well-behaved control should set its <b>BackColor</b> property to.</p>
<p>
The <b>AmbientProperties</b> object’s properties are the ambient properties of the container. These properties are read-only.</p>
<p>
Some ambient properties are standard, while others are specific to certain containers. A control may access non-standard ambient properties, but this will make the control container-specific. The control should handle the case where an ambient property is not present in the current container.</p>
<p>
When the control is compiled, Visual Basic has no way of knowing what container-specific ambient properties may be available when the control is run; therefore references to container-specific ambient properties will always be late bound.</p>
<p>
The <b>AmbientProperties</b> object is not available when the Initialize event is raised; but is available when the InitProperties event or ReadProperties event is raised.</p>
<p>
The <b>AmbientProperties</b> object has several standard properties:
<ul type=disc>
<li>
The <b>BackColor</b> property, a Color that contains the suggested interior color of the contained control. The Visual Basic supplied default if the container does not support this property is 0x80000005: the system color for a window background.<br><br></li>
<li>
The <b>DisplayAsDefault</b> property, a Boolean that specifies if the control is the default control. The Visual Basic supplied default if the container does not support this property is <b>False</b>.<br><br></li>
<li>
The <b>DisplayName</b> property, a String containing the name that the control should display for itself. The Visual Basic supplied default if the container does not support this property is an empty string: "".<br><br></li>
<li>
The <b>Font</b> property, a <b>Font</b> object that contains the suggested font information of the contained control. The Visual Basic supplied default if the container does not support this property is MS Sans Serif 8.<br><br></li>
<li>
The <b>ForeColor</b> property, a Color that contains the suggested foreground color of the contained control. The Visual Basic supplied default if the container does not support this property is 0x80000008: the system color for window text.<br><br></li>
<li>
The <b>LocaleID</b> property, a Long that specifies the language and country of the user. The Visual Basic supplied default if the container does not support this property is the current system locale ID.<br><br></li>
<li>
The <b>MessageReflect</b> property, a Boolean that specifies if the container supports message reflection. The Visual Basic supplied default if the container does not support this property is <b>False</b>.<br><br></li>
<li>
The <b>Palette</b> property, a <b>Picture</b> object whose palette specifies the suggested palette for the contained control.<br><br></li>
<li>
The <b>RightToLeft</b> property, a Boolean that indicates the text display direction and control visual appearance on a bidirectional system. The Visual Basic supplied default if the container does not support this property is <b>False</b>.<br><br></li>
<li>
The <b>ScaleUnits</b> property, a String containing the name of the coordinate units being used by the container. The Visual Basic supplied default if the container does not support this property is an empty string: "".<br><br></li>
<li>
The <b>ShowGrabHandles</b> property, a Boolean that specifies if the container handles the showing of grab handles. The Visual Basic supplied default if the container does not support this property is <b>True</b>.<br><br></li>
<li>
The <b>ShowHatching</b> property, a Boolean that specifies if the container handles the showing of hatching. The Visual Basic supplied default if the container does not support this property is <b>True</b>.<br><br></li>
<li>
The <b>SupportsMnemonics</b> property, a Boolean that specifies if the container handles access keys for the control. The Visual Basic supplied default if the container does not support this property is <b>False</b>.<br><br></li>
<li>
The <b>TextAlign</b> property, an enumeration that specifies how text is to be aligned. The Visual Basic supplied default if the container does not support this property is <b>0 - General Align</b>.<br><br></li>
<li>
The <b>UserMode</b> property, a Boolean that specifies if the environment is in design mode or end user mode. The Visual Basic supplied default if the container does not support this property is <b>True</b>.<br><br></li>
<li>
The <b>UIDead</b> property, a Boolean that specifies if the User Interface is unresponsive. The Visual Basic supplied default if the container does not support this property is <b>False</b>.</li>
</ul>
<p class=indent>
<B><b>Note</b></B>&nbsp;&nbsp;&nbsp;When you access the Font property of the AmbientProperties object, you do not get a reference to the container's font. Rather, you get a copy (clone) of the font.</p>
<p class=indent>
The reason for this is that AmbientProperties.Font is commonly used to initialize a control's font whenever an instance of the control is added to a container. If a reference to the font itself were supplied, then changing the control's font would change the container's font as well.</p>
<p class=indent>
If for some reason your control requires a reference to the container's font, you can obtain it by accessing the container through the Parent property of the UserControl object.</p>
</BODY>
</HTML>
