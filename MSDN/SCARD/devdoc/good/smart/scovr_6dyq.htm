<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Smart Card Resource Manager</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_smart_card_resource_manager"></a>Smart Card Resource Manager</h1>
<p>
The smart card resource manager manages the access to <a href="scgloss_7mwi.htm#_smart_reader_gly">readers</a> and to <a href="scgloss_7mwj.htm#_smart_smart_card_gly">smart cards</a>. To manage these resources, it performs the following three functions.
<ul>
<li>
Identifies and tracks resources.</li>
<li>
Allocates readers and resources across multiple applications.</li>
<li>
Supports transaction primitives for accessing services available on a given card. <p>
<b>Note</b>  This is an important point because current cards are single-threaded devices that often require the execution of multiple commands to complete a single function. Transactions allow multiple commands to be executed without interruption, ensuring that intermediate state information is not corrupted.
</li>
</ul>
<p>
The resource manager can be accessed directly via the resource manager API or indirectly through any smart card <a href="scgloss_7mwj.htm#_smart_service_provider_gly">service provider</a>.</p>
<p>
The resource manager API is a set of Win32® functions that provide direct access to the resource manager's services. (For an overview of the Win32 functions provided by the API, see <a href="scovr_00dl.htm">Smart Card Resource Manager API</a>.) In comparison, smart card service providers use COM interfaces.</p>
<p>
Many of the Win32 functions in the resource manager API have equivalents in the properties and methods of the smart card service providers' COM interfaces. And although most application developers will find the COM model easier to work with, some applications will still need to use the Win32 functions to perform certain tasks. For example, applications that need to manipulate the list of readers or reader groups in the <a href="scgloss_7mwj.htm#_smart_smart_card_database_gly">smart card database</a>, and those that need direct control of a reader must use the resource manager API. The services that provide these capabilities are available only in the Win32 functions, not in the COM model provided by the service providers.</p>
<p>
For information on how the resource manager is implemented in Microsoft® Windows®, see <a href="scovr_30ku.htm">Resource Manager Implementation</a>.</p>
<p>&nbsp;</p></body>
</HTML>
