<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISCardISO7816::WriteRecord</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_iscardiso7816_writerecord"></a>ISCardISO7816::WriteRecord</h1>
<p>
The <b>WriteRecord</b> method constructs an <a href="scgloss_7mw1.htm#_smart_apdu_gly">APDU</a> command that initiates one of the following operations:
<ul>
<li>
The write once of a record.</li>
<li>
The logical OR of the data bytes of a record already present in the card with the data bytes of the record given in the command APDU.</li>
<li>
The logical AND of the data bytes of a record already present in the card with the data bytes of the record given in the command APDU.</li>
</ul>
<p>
When no indication is given in the data coding byte, the logical OR behavior applies.</p>
<p>
<b>Note</b>  When using current record addressing, the command sets the record pointer on the successfully updated record.</p>
<pre><code><b>HRESULT WriteRecord(
  BYTE</b><i> byRecordId</i><b>,</b>
<b>  BYTE</b><i> byRefCtrl</i><b>,</b>
<b>  LPBYTEBUFFER</b><i> pData</i><b>,</b>
<b>  LPSCARDCMD</b><i> *ppCmd</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>byRecordId </i>[in, defaultvalue(NULL_BYTE)] </dt>
<dd>
Record identification. This is the P1 value:
<p>
P1 = '00' designates the current record.

<p>
P1 != '00' is the number of the specified record.
</dd>
<dt>
<i>byRefCtrl </i>[in, defaultvalue(NULL_BYTE)] </dt>
<dd>
Coding of the reference control P2:

<table cellspacing=4 cols=9>
<tr valign=top>
<th align=left width=25%>Meaning</th>
<th align=left width=10%>8</th>
<th align=left width=9%>7</th>
<th align=left width=9%>6</th>
<th align=left width=9%>5</th>
<th align=left width=10%>4</th>
<th align=left width=9%>3</th>
<th align=left width=9%>2</th>
<th align=left width=10%>1</th>
</tr>
<tr valign=top>
<td width=25%>Current EF</td>
<td width=10%>0</td>
<td width=9%>0</td>
<td width=9%>0</td>
<td width=9%>0</td>
<td width=10%>0</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
</tr>
<tr valign=top>
<td width=25%>Short EF ID</td>
<td width=10%>x</td>
<td width=9%>x</td>
<td width=9%>x</td>
<td width=9%>x</td>
<td width=10%>x</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
</tr>
<tr valign=top>
<td width=25%>First Record</td>
<td width=10%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
<td width=9%>0</td>
<td width=9%>0</td>
<td width=10%>0</td>
</tr>
<tr valign=top>
<td width=25%>Last Record</td>
<td width=10%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
<td width=9%>0</td>
<td width=9%>0</td>
<td width=10%>1</td>
</tr>
<tr valign=top>
<td width=25%>Next Record</td>
<td width=10%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
<td width=9%>0</td>
<td width=9%>1</td>
<td width=10%>0</td>
</tr>
<tr valign=top>
<td width=25%>Previous Record</td>
<td width=10%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
<td width=9%>0</td>
<td width=9%>1</td>
<td width=10%>1</td>
</tr>
<tr valign=top>
<td width=25%>Record # in P1</td>
<td width=10%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=9%>-</td>
<td width=10%>-</td>
<td width=9%>1</td>
<td width=9%>0</td>
<td width=10%>0</td>
</tr>
</table><br>

</dd>
<dt>
<i>pData </i>[in] </dt>
<dd>
Pointer to the record to be written.</dd>
<dt>
<i>ppCmd </i>[in, out] </dt>
<dd>
On input, a pointer to an <b>ISCardCmd</b> interface object or NULL.
<p>
On return, it is filled with the APDU command constructed by this operation. If <i>ppCmd</i> was set to NULL, a smart card <b>ISCardCmd</b> object is internally created and returned via the <i>ppCmd</i> pointer.
</dd>
</dl>
<h4>Return Values</h4>
<p>
The possible return values are the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>S_OK</td>
<td width=44%>Operation completed successfully.</td>
</tr>
<tr valign=top>
<td width=56%>E_INVALIDARG</td>
<td width=44%>Invalid parameter.</td>
</tr>
<tr valign=top>
<td width=56%>E_POINTER</td>
<td width=44%>A bad pointer was passed in.</td>
</tr>
<tr valign=top>
<td width=56%>E_OUTOFMEMORY</td>
<td width=44%>Out of memory.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The encapsulated command can only be performed if the security status of the smart card satisfies the security attributes of the elementary file being processed.</p>
<p>
When the command contains a valid short elementary identifier, it sets the file as current elementary file. If another elementary file is currently selected at the time of issuing this command, this command may be processed without identification of the currently selected file.</p>
<p>
If the encapsulated command applies to a linear-fixed or cyclic-structured elementary file, it will abort if the record length is different from the length of the existing record. If it applies to a linear-variable structured elementary file, it may be carried out when the record length is different from the length of the existing record.</p>
<p>
If P2=xxxxx011 and the elementary file is cyclic file, this command has the same behavior a command constructed using <b>AppendRecord</b>.</p>
<p>
Elementary files without a record structure cannot be written to. The constructed command aborts if applied to an elementary file without a record structure.</p>
<p>
For a list of all the methods provided by the <b>ISCardISO7816</b> interface, see<b> ISCardISO7816</b>.</p>
<p>
In addition to the COM error codes listed above, this interface may return a smart card error code if a smart card function was called to complete the request. For information on smart card error codes, see <a href="scerrors_39v7.htm">Error Codes</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in scardsrv.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> scardsrv.tlb.</p>
<h4>See Also</h4>
<p>
<a href="scspint4_3q3o.htm"><b>AppendRecord</b></a>, <a href="scspint4_1trq.htm"><b>ISCardISO7816</b></a>, <a href="scspint4_9jok.htm"><b>ReadRecord</b></a>, <a href="scspint4_1mn8.htm"><b>UpdateRecord</b></a></p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
