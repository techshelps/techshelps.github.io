<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISCardISO7816::Verify</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_iscardiso7816_verify"></a>ISCardISO7816::Verify</h1>
<p>
The <b>Verify</b> method constructs an <a href="scgloss_7mw1.htm#_smart_apdu_gly">APDU</a> command that initiates the comparison (in the card) of the verification data sent from the interface device with the reference data stored in the card (for example, password).</p>
<pre><code><b>HRESULT Verify(
  BYTE</b><i> byRefCtrl</i><b>,</b>
<b>  LPBYTEBUFFER</b><i> pData</i><b>,</b>
<b>  LPSCARDCMD</b><i> *ppCmd</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>byRefCtrl </i>[in, defaultvalue(NULL_BYTE)] </dt>
<dd>
Quantifier of the reference data; coding of the reference control P2:

<table cellspacing=4 cols=9>
<tr valign=top>
<th align=left width=19%>Meaning</th>
<th align=left width=10%>8</th>
<th align=left width=10%>7</th>
<th align=left width=10%>6</th>
<th align=left width=10%>5</th>
<th align=left width=10%>4</th>
<th align=left width=10%>3</th>
<th align=left width=10%>2</th>
<th align=left width=11%>1</th>
</tr>
<tr valign=top>
<td width=19%>No Info</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=10%>0</td>
<td width=11%>0</td>
</tr>
<tr valign=top>
<td width=19%>Global Ref</td>
<td width=10%>0</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=11%>-</td>
</tr>
<tr valign=top>
<td width=19%>Specific Ref</td>
<td width=10%>1</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=11%>-</td>
</tr>
<tr valign=top>
<td width=19%>RFU</td>
<td width=10%>-</td>
<td width=10%>x</td>
<td width=10%>x</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=11%>-</td>
</tr>
<tr valign=top>
<td width=19%>Ref Data #</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>-</td>
<td width=10%>x</td>
<td width=10%>x</td>
<td width=10%>x</td>
<td width=10%>x</td>
<td width=11%>x</td>
</tr>
</table><br>

</dd>
</dl>
<p>
An example of <b>Global Ref</b> would be a password.</p>
<p>
An example of <b>Specific Ref</b> is DF specific password.</p>
<p>
P2=00 is reserved to indicate that no particular qualifier is used in those cards where the verify command references the secret data unambiguously.</p>
<p>
The reference data number may be for example a password number or a short EF identifier.</p>
<p>
When the body is empty, the command may be used either to retrieve the number 'X' of further allowed retries (SW1-SW2=63CX) or to check whether the verification is not required (SW1-SW2=9000).
<dl>
<dt>
<i>pData </i>[in, defaultvalue(NULL)] </dt>
<dd>
Pointer to the verification data, or can be NULL.</dd>
<dt>
<i>ppCmd </i>[in, out] </dt>
<dd>
On input, a pointer to an <b>ISCardCmd</b> interface object or NULL.
<p>
On return, it is filled with the APDU command constructed by this operation. If <i>ppCmd</i> was set to NULL, a smart card <b>ISCardCmd</b> object is internally created and returned via the <i>ppCmd</i> pointer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
The possible return values are the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>S_OK</td>
<td width=44%>Operation completed successfully.</td>
</tr>
<tr valign=top>
<td width=56%>E_INVALIDARG</td>
<td width=44%>Invalid parameter.</td>
</tr>
<tr valign=top>
<td width=56%>E_POINTER</td>
<td width=44%>A bad pointer was passed in.</td>
</tr>
<tr valign=top>
<td width=56%>E_OUTOFMEMORY</td>
<td width=44%>Out of memory.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The security status may be modified as a result of a comparison. Unsuccessful comparisons may be recorded in the card (for example, to limit the number of further attempts of the use of the reference data).</p>
<p>
For a list of all the methods provided by the <b>ISCardISO7816</b> interface, see<b> ISCardISO7816</b>.</p>
<p>
In addition to the COM error codes listed above, this interface may return a smart card error code if a smart card function was called to complete the request. For information on smart card error codes, see <a href="scerrors_39v7.htm">Error Codes</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in scardsrv.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> scardsrv.tlb.</p>
<h4>See Also</h4>
<p>
<a href="scspint4_1trq.htm"><b>ISCardISO7816</b></a></p>
<p>&nbsp;</p></body>
</HTML>
