<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCardGetStatusChange</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_scardgetstatuschange"></a>SCardGetStatusChange</h1>
<p>
The <b>SCardGetStatusChange</b> function blocks execution until the current availability of the cards in a specific set of readers changes. </p>
<p>
The caller supplies a list of <a href="scgloss_7mwi.htm#_smart_reader_gly">readers</a> to be monitored via an SCARD_READERSTATE array and the maximum amount of time (in seconds) that it is willing to wait for an action to occur on one of the listed readers. The function returns when there is a change in availability, having filled in the <b>dwEventState</b> members of the <i>rgReaderStates</i> parameter appropriately.</p>
<pre><code><b>LONG SCardGetStatusChange(
  IN SCARDCONTEXT</b><i> hContext</i><b>,</b>
<b>  IN DWORD</b><i> dwTimeout</i><b>,</b>
<b>  IN OUT LPSCARD_READERSTATE</b><i> rgReaderStates</i><b>,</b>
<b>  IN DWORD</b><i> cReaders</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hContext</i></dt>
<dd>
Supplies the handle that identifies the <a href="scgloss_7mwi.htm#_smart_resource_manager_context_gly">resource manager context</a>. The resource manager context is set by a previous call to <b>SCardEstablishContext</b>.</dd>
<dt>
<i>dwTimeOut</i></dt>
<dd>
Supplies the maximum amount of time (in milliseconds) to wait for an action. A value of zero implies a value of INFINITE, <i>dwTimeOut</i> will never timeout.</dd>
<dt>
<i>rgReaderStates</i></dt>
<dd>
Supplies an array of SCARD_READERSTATE structures that specify the readers to watch, and receives the result.</dd>
<dt>
<i>cReaders</i></dt>
<dd>
Supplies the number of elements in the <i>rgReaderStates</i> array.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>If the function…</th>
<th align=left width=52%>The return value is…</th>
</tr>
<tr valign=top>
<td width=48%>Succeeds</td>
<td width=52%>SCARD_S_SUCCESS.</td>
</tr>
<tr valign=top>
<td width=48%>Fails</td>
<td width=52%>An error code (see <a href="scerrors_39v7.htm">Error Codes</a> for a list of all error codes).</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<b>SCardGetStatusChange</b> is a smart card tracking function. For a description of other tracking functions, see <a href="scovr_3kz7.htm">Smart Card Tracking Functions</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winscard.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with winscard.lib.</p>
<h4>See Also</h4>
<p>
<a href="smartfun_34x8.htm"><b>SCardCancel</b></a>, <a href="smartfun_5t2s.htm"><b>SCardEstablishContext</b></a>, <a href="smartfun_8rub.htm"><b>SCardLocateCards</b></a>, <a href="smartstr_8qud.htm"><b>SCARD_READERSTATE</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
