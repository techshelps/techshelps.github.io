<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCardGetAttrib</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_scardgetattrib"></a>SCardGetAttrib</h1>
<p>
The <b>SCardGetAttrib</b> function gets the current reader attributes for the given handle. It does not affect the state of the reader, driver, or card.</p>
<pre><code><b>LONG SCardGetAttrib(
  IN SCARDHANDLE</b><i> hCard</i><b>,</b>
<b>  IN DWORD</b><i> dwAttrId</i><b>,</b>
<b>  OUT LPBYTE</b><i> pbAttr</i><b>,</b>
<b>  IN OUT LPDWORD</b><i> pcbAttrLen</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCard</i></dt>
<dd>
Supplies the reference value returned from <b>SCardConnect</b>.</dd>
<dt>
<i>dwAttrId</i></dt>
<dd>
Supplies the identifier for the attribute to get.</dd>
<dt>
<i>pbAttr</i></dt>
<dd>
Points to a buffer that receives the attribute whose ID is supplied in <i>dwAttrId</i>. If this value is NULL, <b>SCardGetAttrib</b> ignores the buffer length supplied in <i>pcbAttrLength</i>, writes the length of the buffer that would have been returned if this parameter had not been NULL to <i>pcbAttrLength</i>, and returns a success code.</dd>
<dt>
<i>pcbAttrLength</i></dt>
<dd>
Supplies the length of the <i>pbAttr</i> buffer in bytes, and receives the actual length of the received attribute. If the buffer length is specified as <a href="scgloss_7mwj.htm#_smart_scard_autoallocate_gly">SCARD_AUTOALLOCATE</a>, then <i>pbAttrBuffer</i> is converted to a pointer to a byte pointer, and receives the address of a block of memory containing the attribute. This block of memory must be deallocated with <b>SCardFreeMemory</b>.
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>If the function…</th>
<th align=left width=52%>The return value is…</th>
</tr>
<tr valign=top>
<td width=48%>Succeeds</td>
<td width=52%>SCARD_S_SUCCESS.</td>
</tr>
<tr valign=top>
<td width=48%>Fails</td>
<td width=52%>An error code (see <a href="scerrors_39v7.htm">Error Codes</a> for a list of all error codes).</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<b>SCardGetAttrib</b> is a direct card access function. For a description of other direct access functions, see <a href="scovr_68oj.htm">Direct Card Access Functions</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winscard.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with winscard.lib.</p>
<h4>See Also</h4>
<p>
<a href="smartfun_8qlw.htm"><b>SCardConnect</b></a>, <a href="smartfun_28s9.htm"><b>SCardFreeMemory</b></a>, <a href="smartfun_321u.htm"><b>SCardSetAttrib</b></a></p>
<p>&nbsp;</p></body>
</HTML>
