<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISCardISO7816::WriteBinary</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_iscardiso7816_writebinary"></a>ISCardISO7816::WriteBinary</h1>
<p>
The <b>WriteBinary</b> method constructs an <a href="scgloss_7mw1.htm#_smart_apdu_gly">APDU</a> command that writes binary values into an elementary file.</p>
<p>
Depending upon the file attributes, the command performs one of the following operations:
<ul>
<li>
The logical OR of the bits already present in the card with the bits given in the command APDU (logical erased state of the bits of the file is 0).</li>
<li>
The logical AND of the bits already present in the card with the bits given in the command APDU (logical erased state of the bits of the file is 1).</li>
<li>
The one-time write in the card of the bits given in the command APDU.</li>
</ul>
<p>
When no indication is given in the data coding byte, the logical OR behavior applies.</p>
<pre><code><b>HRESULT WriteBinary(
  BYTE</b><i> byP1</i><b>,</b>
<b>  BYTE</b><i> byP2</i><b>,</b>
<b>  LPBYTEBUFFER</b><i> pData</i><b>,</b>
<b>  LPSCARDCMD</b><i> *ppCmd</i>
<b>);</b>
 </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>byP1, byP2 </i>[in] </dt>
<dd>
Offset to the write location from the beginning of the binary file (EF).
<p>
If b8=1 in P1, then b7 and b6 of P1 are set to 0 (RFU bits), b5 to b1 of P1 are a short EF identifier and P2 is the offset of the first byte to be written in data units from the beginning of the file.

<p>
If b8=0 in P1, then P1||P2 is the offset of the first byte to be written in data units from the beginning of the file.
</dd>
<dt>
<i>pData </i>[in] </dt>
<dd>
Pointer to the string of data units to be written.</dd>
<dt>
<i>ppCmd </i>[in, out] </dt>
<dd>
On input, a pointer to an <b>ISCardCmd</b> interface object or NULL.
<p>
On return, it is filled with the APDU command constructed by this operation. If <i>ppCmd</i> was set to NULL, a smart card <b>ISCardCmd</b> object is internally created and returned via the <i>ppCmd</i> pointer.

</dd>
</dl>
<h4>Return Values</h4>
<p>
The possible return values are the following:</p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=56%>Value</th>
<th align=left width=44%>Meaning</th>
</tr>
<tr valign=top>
<td width=56%>S_OK</td>
<td width=44%>Operation completed successfully.</td>
</tr>
<tr valign=top>
<td width=56%>E_INVALIDARG</td>
<td width=44%>Invalid parameter.</td>
</tr>
<tr valign=top>
<td width=56%>E_POINTER</td>
<td width=44%>A bad pointer was passed in.</td>
</tr>
<tr valign=top>
<td width=56%>E_OUTOFMEMORY</td>
<td width=44%>Out of memory.</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
The encapsulated command can only be performed if the security status of the smart card satisfies the security attributes of the elementary file being processed.</p>
<p>
When the command contains a valid short elementary identifier, it sets the file as current elementary file.</p>
<p>
Once a write binary operation has been applied to a data unit of a one-time write EF, any further write operation referring to this data unit will be aborted if the content of the data unit or the logical erased state indicator (if any) attached to this data unit is different from the logical erased state.</p>
<p>
Elementary files without a transparent structure cannot be written to. The encapsulated command aborts if applied to an elementary file without a transparent structure.</p>
<p>
For a list of all the methods provided by the <b>ISCardISO7816</b> interface, see<b> ISCardISO7816</b>.</p>
<p>
In addition to the COM error codes listed above, this interface may return a smart card error code if a smart card function was called to complete the request. For information on smart card error codes, see <a href="scerrors_39v7.htm">Error Codes</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in scardsrv.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> scardsrv.tlb.</p>
<h4>See Also</h4>
<p>
<a href="scspint4_4gop.htm"><b>EraseBinary</b></a>, <a href="scspint4_1trq.htm"><b>ISCardISO7816</b></a>, <a href="scspint4_4a2h.htm"><b>ReadBinary</b></a>, <a href="scspint4_6d15.htm"><b>UpdateBinary</b></a></p>
<p>&nbsp;</p></body>
</HTML>
