<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SCardStatus</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h1><a name="_smart_scardstatus"></a>SCardStatus</h1>
<p>
The <b>SCardStatus</b> function provides the current status of a smart card in a <a href="scgloss_7mwi.htm#_smart_reader_gly">reader</a>. You can call it any time after a successful call to <b>SCardConnect</b> and before a successful call to <b>SCardDisconnect</b>. It does not affect the state of the reader or <a href="scgloss_7mwi.htm#_smart_reader_driver_gly">reader driver</a>.</p>
<pre><code><b>LONG SCardStatus(
  IN SCARDHANDLE</b><i> hCard</i><b>,</b>
<b>  OUT</b> <b>LPTSTR</b></code> <code><b> </b><i>mszReaderNames,</i></code>
<code><b>  IN OUT LPDWORD </b><i>pcchReaderLen,</i></code>
<code><b>  OUT LPDWORD</b><i> pdwState</i><b>,</b></code>
<code><b>  OUT LPDWORD</b><i> pdwProtocol</i><b>,</b></code>
<code><b>  OUT LPBYTE</b><i> pbAtr</i><b>,</b></code>
<code><b>  OUT LPDWORD</b><i> pbcAtrLen</i></code>
<b><code>);</code></b>
<code> </code></pre>
<h4>Parameters</h4>
<dl>
<dt>
<i>hCard</i></dt>
<dd>
This is the reference value returned from <b>SCardConnect</b>.</dd>
<dt>
<i>mszReaderNames</i></dt>
<dd>
Receives a list of friendly names (multi-string) by which the currently connected reader is known.</dd>
<dt>
<i>pcchReaderLen</i></dt>
<dd>
On input, supplies the length of the mszReaderNames buffer
<p>
On output, receives the actual length (in characters) of the reader name list, including the trailing NULL character.
</dd>
<dt>
<i>pdwState</i></dt>
<dd>
Receives the current state of the smart card in the reader. Upon success, it receives one of the following state indicators:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>SCARD_ABSENT </td>
<td width=52%>There is no card in the reader.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_PRESENT </td>
<td width=52%>There is a card in the reader, but it has not been moved into position for use.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_SWALLOWED </td>
<td width=52%>There is a card in the reader in position for use. The card is not powered.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_POWERED </td>
<td width=52%>Power is being provided to the card, but the reader driver is unaware of the mode of the card.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_NEGOTIABLEMODE </td>
<td width=52%>The card has been reset and is awaiting PTS negotiation.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_SPECIFICMODE </td>
<td width=52%>The card has been reset and specific communication protocols have been established.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pdwProtocol</i></dt>
<dd>
Receives the current protocol, if any. The returned value is meaningful only if the returned value of <i>pdwState</i> is SCARD_SPECIFICMODE. Possible returned values are the following:
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>Value</th>
<th align=left width=52%>Meaning</th>
</tr>
<tr valign=top>
<td width=48%>SCARD_PROTOCOL_RAW </td>
<td width=52%>The Raw Transfer protocol is in use.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_PROTOCOL_T0 </td>
<td width=52%>The ISO 7816/3 T=0 protocol is in use.</td>
</tr>
<tr valign=top>
<td width=48%>SCARD_PROTOCOL_T1 </td>
<td width=52%>The ISO 7816/3 T=1 protocol is in use.</td>
</tr>
</table><br>

</dd>
<dt>
<i>pbAtr</i></dt>
<dd>
Points to a 32-byte buffer that receives the <a href="scgloss_7mw1.htm#_smart_atr_string_gly">ATR string</a> from the currently inserted card, if available.</dd>
<dt>
<i>pbcAtrLen</i></dt>
<dd>
Points to a DWORD to receive the number of bytes in the ATR string (32 bytes maximum).
</dd>
</dl>
<h4>Return Values</h4>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=48%>If the function…</th>
<th align=left width=52%>The return value is…</th>
</tr>
<tr valign=top>
<td width=48%>Succeeds</td>
<td width=52%>SCARD_S_SUCCESS.</td>
</tr>
<tr valign=top>
<td width=48%>Fails</td>
<td width=52%>An error code (see <a href="scerrors_39v7.htm">Error Codes</a> for a list of all error codes).</td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
<b>SCardStatus</b> is a smart card and reader access function. For a description of other access functions, see <a href="scovr_9qpf.htm">Smart Card and Reader Access Functions</a>.</p>
<h4>QuickInfo</h4>
<p>
&nbsp;&nbsp;<b>Windows NT:</b>  Use version 4.0 SP3 and later.<br>
&nbsp;&nbsp;<b>Windows:</b>  Use Windows 95 OSR2.1.<br>
&nbsp;&nbsp;<b>Windows CE:</b>  Unsupported.<br>
&nbsp;&nbsp;<b>Header:</b> Declared in winscard.h.<br>
&nbsp;&nbsp;<b>Import Library:</b> Link with winscard.lib.</p>
<h4>See Also</h4>
<p>
<a href="smartfun_8qlw.htm"><b>SCardConnect</b></a>, <a href="smartfun_4gms.htm"><b>SCardDisconnect</b></a></p>
<p>&nbsp;</p></body>
</HTML>
