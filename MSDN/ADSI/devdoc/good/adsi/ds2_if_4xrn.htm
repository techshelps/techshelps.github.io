<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IADsContainer Property Methods</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_iadscontainer_property_methods"></a>IADsContainer Property Methods</h3>
<p>
Property methods take the form of either <b>get_&lt;property&gt;</b> or <b>put_&lt;property&gt;</b>. The property methods of the <b>IADsContainer</b> interface get or set the properties described below. For more information, see <a href="ds2_if_56yb.htm"><b>Interface Property Methods</b></a>.</p>
<h4>Properties in Vtable Order</h4>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=34%>Property</th>
<th align=left width=15%>Access</th>
<th align=left width=51%>Compiler Syntax</th>
</tr>
<tr valign=top>
<td colspan=3 width=100%></td>
</tr>
<tr valign=top>
<th align=left width=34%>_NewEnum</th>
<th align=left width=15%>R/O</th>
<td width=51%>HRESULT <b>get__NewEnum</b> <br>
([out]  <b>IUnknown</b> *<i>ppEnumerator</i>);</td>
</tr>
<tr valign=top>
<td width=34%><b>Count</b></td>
<th align=left width=15%>R/O</th>
<td width=51%>HRESULT <b>get_Count</b> <br>
([out]  LONG *<i>plCount</i>);</td>
</tr>
<tr valign=top>
<td width=34%><b>Filter</b></td>
<th align=left width=15%>R/W</th>
<td width=51%>HRESULT <b>get_Filter</b><br>
([out]  VARIANT *<i>pvFilter</i>);<p>
HRESULT <b>put_Filter<br>
</b>([in]  VARIANT <i>vFilter</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=34%><b>Hints</b></td>
<th align=left width=15%>R/W</th>
<td width=51%>HRESULT <b>get_Hints</b><br>
([out]  VARIANT *<i>pvHints</i>);<p>
HRESULT <b>put_Hints<br>
</b>([in]  VARIANT <i>vHints</i>);</p>
</td>
</tr>
</table><br>
<h4>Property Descriptions</h4>
<dl>
<dt>
<b>_NewEnum</b></dt>
<dd>
Returns an enumerator dependent object that implements <b>IEnumVARIANT</b>.</dd>
<dt>
<b>Count</b></dt>
<dd>
Gets the number of items in the container. If the filter is set then count returns only the number of items that fit the filter description. </dd>
<dt>
<b>Filter</b></dt>
<dd>
Gets and sets the filter on the object classes that can be retrieved in a given enumeration. The client can also give hints (see below) about which properties of the objects it uses after the enumeration. If <i>Filter</i> is not set or set to empty, all objects of all classes are retrieved by the enumerator. Otherwise, each array entry is a schema class name in <b>BSTR</b> format or another format specified by the provider. </dd>
<dt>
<b>Hints</b></dt>
<dd>
The <i>vHints</i> parameter allows the client to indicate which properties to load, so the provider can attempt to optimize network access. If no hints are specified, the <b>VARIANT</b> <i>vHints</i> is marked as empty, and the provider is expected to provide as much smart network access as possible. Otherwise, each entry in the array should have the following format is a <b>BSTR</b> value identifying a property name found in the schema definition for this object type. 
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="ds2_obj_9i5w.htm"><b>ADSI Container Object</b></a>, <a href="ds2_obj_05ro.htm"><b>ADSI Enumerator Object</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
