<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>COM Vtable Examples - Deleting a User Object</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_com_vtable_examples_deleting_a_user_object"></a>COM Vtable Examples - Deleting a User Object</h3>
<pre><code>IADsContainer *pContainer;
BSTR     bstrContainerPath;
IADsUser *pUser;
BSTR     bstrUserName;
//
// Bind to the known object.  In this case, we happen to know
// the explicit path, but typically the object will be discovered
// using query or enumeration.
//
ADsGetObject(TEXT("WinNT://MSFT/Users/Jane"),
             IID_IADsUser,
             (void**)&amp;pUser);
//
// Get the container object path.
//
pUser-&gt;get_Parent(&amp;bstrContainerPath);
//
// Get the container object.
//
ADsGetObject(bstrContainerPath,
             IID_IADsContainer,
             (void**)&amp;pContainer);
//
// Get the user object's name.  (This step is unneccesary in
// this example since we already know the name, but is included to
// indicate that we either need to know the name, or have a ptr 
// to the object).
//
pUser-&gt;get_Name(&amp;bstrUserName);
//
// Release the user object.  Note that we are about to delete
// the underlying DS object, so we should not hang on to the user
// component.
//
pUser-&gt;Release();
//
// Delete the user.
//
pContainer-&gt;Delete(TEXT("user"),bstrUserName);
//
// Cleanup.
//
SysFreeString(bstrContainerPath);
SysFreeString(bstrUserPath);
pContainer-&gt;Release();
 </code></pre>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
