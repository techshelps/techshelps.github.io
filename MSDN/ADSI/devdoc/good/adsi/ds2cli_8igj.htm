<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Debugging Hints</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ds_debugging_hints"></a>Debugging Hints</h2>
<p>
Here are some hints for the most common errors experienced by first-time ADSI application writers:
<dl>
<dt>
Case-sensitivity</dt>
<dd>
The ProgIDs for ADSI are case sensitive! This is a feature of the underlying namespace because some directory services use case sensitive path names. For example, when you call <b>ADsGetObject</b> with an ADsPath name for the ADSI LDAP provider, use "LDAP:" and not "ldap:".</dd>
<dt>
VT_BOOLEAN for Automation clients</dt>
<dd>
A reminder that VT_BOOLEAN is defined as -1, not 1.</dd>
<dt>
Dim for Automation clients</dt>
<dd>
The Dim() statement sets the upper bound of an array. For example, if you Dim(8), you get an array of size 9 where the first element index is 0 and the last element index is 8. If you initialize just 8 elements of the array and pass the result to an ADSI method expecting an initialized VARIANT, Visual Basic errors out.  </dd>
<dt>
Binding to an object over the net</dt>
<dd>
If you are having trouble getting <b>ADsGetObject</b> to get past the server connection and return without error, try accessing the same ADsPath string through a command prompt window, using the "net use &lt;ADsPath&gt;".For example, if 
<pre><code>GetObject("WinNT://MyDomain/MyComputer")
 </code></pre>

<p>
results in an error, enter the following at the command prompt:

<pre><code>&gt;net use * \\MyDomain\netlogon
 </code></pre>

<p>
If you can successfully execute the command prompt syntax, you know your ADsPath is accurate and that your network connections are valid and can continue to look elsewhere for the problem. 
</dd>
<dt>
Not finding properties for an object</dt>
<dd>
In some implementations of ADSI, there is a direct correspondence between the properties listed in a schema definition for an object and the underlying properties in a directory service. In other implementations of ADSI, the property names included in the mandatory and optional attribute lists of the schema class object may be simulated from various places in the underlying system to supply an easy way to work with these properties. In both cases, when client software calls <b>.get</b> or <b>get_<i>propertyname</i></b> and a corresponding property does not exist in the underlying directory service, E_ADS_PROPERTY_NOT_FOUND is returned. Whether the underlying directory service property had never been set or there is no underlying value, the client code should handle the result gracefully. For more information about how the property cache works, see <a href="ds2cli_65et.htm"><b>Property Cache</b></a>.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
