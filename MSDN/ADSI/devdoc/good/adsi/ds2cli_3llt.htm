<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the ADSI Schema</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ds_using_the_adsi_schema"></a>Using the ADSI Schema</h2>
<p>
ADSI providers create a representation of the underlying schema by implementing the schema-management interfaces <a href="ds2_if_89tf.htm"><b>IADsClass</b></a>, <a href="ds2_if_0rnd.htm"><b>IADsProperty</b></a>, and <a href="ds2_if_1i2g.htm"><b>IADsSyntax</b></a>. For example, on LDAP, <b>IADsClass</b> represents the attribute "objectClass" which contains values that identify every type of object known to an ldap server. NDS uses "object class". WinNT defines each object type directly, such as "Domain", "Computer", or "User". In all these cases, the <b>IADsClass</b> interface supplies methods to identify and manage the list of properties or attributes a class uses. Similarly, <b>IADsProperty</b> supplies methods to define a property as it is known to the underlying directory service. If you browse a directory service directly, you probably will not find anything corresponding to syntax objects. ADSI abstracts the syntax information as necessary and lets you use <b>IADsSyntax</b> to identify the syntax needed to represent an object's data. </p>
<p>&nbsp;</p></body>
</HTML>
