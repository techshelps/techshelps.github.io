<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Schema Extensions</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_schema_extensions"></a>Schema Extensions</h3>
<p>
Because of the architecture of the ADSI schema, new schema classes can be added to the schema class container and new properties to an existing schema class object at run time. The latter ability requires no new code, and for namespaces that allow extensible directory services, this is an important feature. The provider component must allow for this extensibility and know where to access and store the class instance and the values of its properties. In a typical extensible directory service, this information is stored in the directory service database in the same manner as any other schema class and property definitions.</p>
<p>
<b>Note</b>&nbsp;&nbsp;In COM interface terminology, only properties can be added to an existing schema class, not methods. Adding a new method would require adding a new implementation of that method and thus require additional code.</p>
<p>
For an example of a specific provider schema, see <a href="ds2samp_2ol0.htm"><b>Schema Management</b></a>. </p>
<p>&nbsp;</p></body>
</HTML>
