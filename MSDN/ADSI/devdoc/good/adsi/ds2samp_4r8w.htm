<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CPRPOBJ.CPP</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ds_cprpobj.cpp"></a>CPRPOBJ.CPP</h2>
<p>
In the example provider component, property object routines are in cprpobj.cpp.
<dl>
<dt>
<b>CSampleDSProperty::CSampleDSProperty</b></dt>
<dd>
Standard constructor.</dd>
<dt>
<b>CSampleDSProperty::~CSampleDSProperty</b></dt>
<dd>
Standard destructor.</dd>
<dt>
<b>CSampleDSProperty::CreateProperty</b></dt>
<dd>
Create an ADS Property object, looking up the attribute definitions by calling <b>SampleDSGetPropertyDefinition</b>.</dd>
<dt>
<b>CSampleDSProperty::CreateProperty</b></dt>
<dd>
Given the attribute definition, create a property object, setting the correspondence between supported ADS syntaxes and the provider syntaxes.</dd>
<dt>
<b>CSampleDSProperty::AllocatePropertyObject</b></dt>
<dd>
Create a property object and load its type information.</dd>
<dt>
<b>CSampleDSProperty:: QueryInterface</b></dt>
<dd>
Return the requested interface pointer if available. </dd>
<dt>
<b>CSampleDSProperty:: </b>Standard <b>IADs </b>methods.</dt>
<dd>
</dd>
<dt>
<b>CSampleDSProperty:: </b>Standard <b>IADsProperty </b>methods.</dt>
<dd>
</dd>
<dt>
<b>MapSyntaxIdtoADsSyntax</b></dt>
<dd>
Set the correspondence between the syntax id and the ADS syntax.</dd>
<dt>
<b>MapSyntaxIdtoSampleDSSyntax</b></dt>
<dd>
Set the correspondence between the syntax id and the provider syntax.
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
