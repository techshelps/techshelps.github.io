<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the ADSI OLE DB Provider for Searches</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_using_the_adsi_ole_db_provider_for_searches"></a>Using the ADSI OLE DB Provider for Searches</h3>
<p>
Under the OLE DB implementation, a directory service is exposed as a Data Source Object. Data source objects are factories for session objects and support <b>IDBInitialize</b> to connect to the directory, <b>IDBCreateSession</b> to create the session object, <b>IDBProperties</b> to supply authentication information to the underlying namespace and supply the query command and <b>IPersist</b> to save the information necessary to create the data source object to the underlying directory service. </p>
<p>
The OLE DB Sessions Object represents a transaction on the data source object and, in the ADSI implementation, can create rowset objects and command objects. It supports <b>IOpenRowSet </b>to allow direct access to DS tables without having to use command objects. <b>ISessionProperties </b>to manage the information stored in property sets, and <b>IDBCreateCommand </b>to create a command object. </p>
<p>
The OLE DB Command Object manages the information required by a search. The object supports the following interfaces: 
<ul>
<li>
<b>ICommand</b> methods execute the command once it is set up. </li>
<li>
<b>IAccessor</b> methods describe how the data should be stored in a consumer's buffer. </li>
<li>
<b>IColumnsInfo</b> methods provide information about the columns. </li>
<li>
<b>ICommandProperties</b> methods to specify some of the characteristics of the search, for example, Scope andDerefAliases. </li>
<li>
<b>ICommandText</b> methods to set the command text, which contains the basic search information including the root of the search, search filter, and list of attributes to be returned. </li>
<li>
<b>IConvertType</b> to examine what kind of data conversions among different data types are allowed by the provider. </li>
</ul>
<p>
The OLE DB Rowset Object allows the DS to expose its information in tabular form. The ADSI implementation of this object supports the following interfaces:
<ul>
<li>
<b>IRowset</b> methods traverse the tables row by row.</li>
<li>
<b>IAccessor</b> methods describe how the data should be stored in a consumer's buffer.</li>
<li>
<b>IColumnsInfo</b> methods provide information about the columns.</li>
<li>
<b>IConvertType</b> methods determine if the type of information for this row can be converted to, for example, an Automation-supported type. </li>
<li>
<b>IRowsetLocate</b>, <b>IRowsetScroll</b>, and <b>IRowsetIndex</b> methods support complex rowset navigational methods that include cursoring, bookmarks, and client-side filtering. </li>
</ul>
<p>
For more information about OLE DB, see the Database and Messaging Services section of the Microsoft Platform SDK. </p>
<p>
To see if a specific provider implements these interfaces, see ADSI System Providers. </p>
<p>
The ADSI SDK includes adsqry source code in the sampapp\cxx\adsqry directory. For an edited version of this example, see <a href="ds2cli_1c9x.htm"><b>ADSI OLE DB Example</b></a>.</p>
<p>&nbsp;</p></body>
</HTML>
