<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IADsClass Property Methods</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_iadsclass_property_methods"></a>IADsClass Property Methods</h3>
<p>
Property methods take the form of either <b>get_&lt;property&gt;</b> or <b>put_&lt;property&gt;</b>. The property methods of the <b>IADsClass</b> interface get or set the properties described below. For more information, see <a href="ds2_if_56yb.htm"><b>Interface Property Methods</b></a>.</p>
<h4>Properties in Vtable Order</h4>
<table cellspacing=4 cols=3>
<tr valign=top>
<th align=left width=33%>Property</th>
<th align=left width=14%>Access</th>
<th align=left width=53%>Method Prototype</th>
</tr>
<tr valign=top>
<td width=33%><b>Abstract</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_Abstract<br>
 </b>([out] BOOLEAN<b> *</b>pbAbstract);<p>
HRESULT<b> put_Abstract<br>
</b> ([in] BOOLEAN<b> </b>bAbstract);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>AuxDerivedFrom</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_AuxDerivedFrom<br>
</b> ([out] VARIANT<b> *</b><i>pvAuxDerivedFrom</i>);<p>
HRESULT<b> put_AuxDerivedFrom<br>
</b> ([in] VARIANT <i>vAuxDerivedFrom</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>Auxiliary</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_Auxiliary<br>
</b> ([out] BOOLEAN <b>*</b><i>pbAuxiliary</i>);<p>
HRESULT<b> put_Auxiliary<br>
</b> ([in] BOOLEAN <i>bAuxiliary</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>CLSID</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_CLSID<br>
</b> ([out] BSTR <b>*</b><i>pbstrCLSID</i>);<p>
HRESULT<b> put_CLSID<br>
</b> ([in] BSTR <i>bstrCLSID</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>Container</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_Container<br>
</b> ([out] BOOLEAN <b>*</b><i>pbContainer</i>);<p>
HRESULT<b> put_Container|<br>
</b> ([in] BOOLEAN <i>bContainer</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>Containment</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_Containment<br>
</b> ([out] VARIANT <b>*</b><i>pvContainment</i>);<p>
HRESULT<b> put_Containment<br>
</b> ([in] VARIANT <i>vContainment</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>DerivedFrom</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_DerivedFrom<br>
</b> ([out] VARIANT <b>*</b><i>pvDerivedFrom</i>);<p>
HRESULT<b> put_DerivedFrom<br>
</b> ([in] VARIANT <i>vDerivedFrom</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>HelpFileContext</b><p>
(optional)</p>
</td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_HelpFileContext <br>
</b>([out] BSTR <b>*</b><i>pbstrHelpFileContext</i>);<p>
HRESULT<b> put_HelpFileContext<br>
</b>([in] BSTR <i>bstrHelpFileContext</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>HelpFileName</b><p>
(optional)</p>
</td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_HelpFileName <br>
</b>([out] BSTR <b>*</b><i>pbstrHelpFileName</i>);<p>
HRESULT<b> put_HelpFileName<br>
</b>([in] BSTR<b> </b><i>bstrHelpFileName</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>MandatoryProperties</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_MandatoryProperties<br>
</b> ([out] VARIANT <b>*</b><i>pvarMandatoryProperties</i>);<p>
HRESULT<b> put_MandatoryProperties<br>
</b> ([in] VARIANT <i>varMandatoryProperties</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>OptionalProperties</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_OptionalProperties<br>
</b> ([out] VARIANT <b>*</b><i>pvarOptionalProperties</i>);<p>
HRESULT<b> put_OptionalProperties<br>
</b> ([in] VARIANT <i>varOptionalProperties</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>NamingProperties</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_NamingProperties<br>
</b> ([out] VARIANT <b>*</b><i>pvarNamingProperties</i>);<p>
HRESULT<b> put_NamingProperties<br>
 </b>([in] VARIANT <i>varNamingProperties</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>OID</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_OID <br>
</b>([out] BSTR <b>*</b><i>pbstrOID</i>);<p>
HRESULT<b> put_OID <br>
</b>([in] BSTR <i>bstrOID</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>PossibleSuperiors</b></td>
<td width=14%><b>R/W</b></td>
<td width=53%>HRESULT<b> get_PossibleSuperiors<br>
</b> ([out] VARIANT <b>*</b><i>pvSuperiors</i>);<p>
HRESULT<b> put_PossibleSuperiors<br>
</b> ([in] VARIANT <i>vSuperiors</i>);</p>
</td>
</tr>
<tr valign=top>
<td width=33%><b>PrimaryInterface</b></td>
<td width=14%><b>R/O</b></td>
<td width=53%>HRESULT<b> get_PrimaryInterface<br>
</b>([out] BSTR <b>*</b><i>pbstrGUID</i>);</td>
</tr>
</table><br>
<h4>Property Descriptions</h4>
<dl>
<dt>
<b>Abstract</b></dt>
<dd>
Boolean value indicating whether this class is Abstract or non-abstract. When <b>TRUE</b> this class is an Abstract class and cannot be directly instantiated in the directory service. Abstract classes can only be used as superclasses.</dd>
<dt>
<b>Auxiliary</b></dt>
<dd>
Boolean value indicating whether or not this class is Auxiliary. When TRUE this class is an Auxiliary class and cannot be directly instantiated in the DS. Auxiliary classes can only be used as superclasses of other Auxiliary classes or as a source of additional properties on structural classes.</dd>
<dt>
<b>AuxDerivedFrom</b></dt>
<dd>
Array of ADsPath strings that indicate the Auxiliary classes contributing to this class.</dd>
<dt>
<b>CLSID</b></dt>
<dd>
Optional provider-specific CLSID that associates a COM object with this class. </dd>
<dt>
<b>Container</b></dt>
<dd>
Property that determines if this class is an Active Directory container.</dd>
<dt>
<b>Containment</b></dt>
<dd>
Container types that can contain objects of this class. Each container name is an element in a BSTR<b> </b>array. </dd>
<dt>
<b>DerivedFrom</b></dt>
<dd>
Array of ADsPath strings that indicate which classes this class was derived from. </dd>
<dt>
<b>HelpFileContext</b></dt>
<dd>
Context ID inside HelpFileName where specific information on this class can be found.</dd>
<dt>
<b>HelpFileName</b></dt>
<dd>
Name of a help file (no path) that contains further information about objects of this class. </dd>
<dt>
<b>MandatoryProperties</b></dt>
<dd>
<b>SAFEARRAY</b> of <b>BSTRs</b> listing the properties that must be set for this class to be written to storage. </dd>
<dt>
<b>NamingProperties</b></dt>
<dd>
<b>SAFEARRAY</b> of <b>BSTRs</b> listing the properties that are for naming attributes of this schema class. For example, in NDS, "CN" and "OU" are naming properties. </dd>
<dt>
<b>OID</b></dt>
<dd>
Provider-specific Object Identifier defining this class. This is provided to allow schema extension via Active Directory in directory services that require provider-specific OIDs for classes. </dd>
<dt>
<b>OptionalProperties</b></dt>
<dd>
<b>SAFEARRAY</b> of <b>BSTRs</b> listing the properties that are optional for this schema class. </dd>
<dt>
<b>PossibleSuperiors</b></dt>
<dd>
Array of ADsPath strings that indicate the schema classes that can contain instances of this class.</dd>
<dt>
<b>PrimaryInterface</b></dt>
<dd>
Optional provider-specific identifier GUID that associates an interface with objects of this schema class. For example, the "User" class is defined by supporting <b>IADsUser</b>; the Primary interface is identified by <b>IID_IADsUser</b>. This must be in the standard string format of a GUID as defined by COM. This GUID is the value that will appear in the <a href="ds2_if_74s3.htm"><b>IADs::get_GUID</b></a> property in instances of this class for providers that implement this property. Identifying a schema class by IID of the class code's primary interface enables the use of QueryInterface at run time to determine whether an object is of the desired class. 
</dd>
</dl>
<p>&nbsp;</p></body>
</HTML>
