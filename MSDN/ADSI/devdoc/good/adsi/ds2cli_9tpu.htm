<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Search Filter</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_using_a_search_filter"></a>Using a Search Filter</h3>
<p>
The search filter specifies the relationship between the attributes and values of those attributes in the prefix expression notation. </p>
<p>
The following are examples of valid search filters: </p>
<table cellspacing=4 cols=2>
<tr valign=top>
<th align=left width=69%>Search Filter</th>
<th align=left width=31%>Meaning</th>
</tr>
<tr valign=top>
<td width=69%>(objectClass=*)</td>
<td width=31%>All objects that have objectClass attribute present.</td>
</tr>
<tr valign=top>
<td width=69%>(cn=FooBar)</td>
<td width=31%>All objects having cn property equal to "FooBar".</td>
</tr>
<tr valign=top>
<td width=69%>(&amp;(objectClass=User)(revision&gt;=10))</td>
<td width=31%>All user objects that have the property revision greater than or equal to 10.</td>
</tr>
<tr valign=top>
<td width=69%>(&amp;(objectClass=Computer)(|(name=a*)(name=b*)))</td>
<td width=31%>All Computer objects which have name attribute starting with "a" or "b".</td>
</tr>
</table><br>
<p>
The formal definition of the search filter is as follows (from RFC 1960):</p>
<p>
<code>&lt;filter&gt; ::= '(' &lt;filtercomp&gt; ')'</code></p>
<p>
<code>&lt;filtercomp&gt; ::= &lt;and&gt; | &lt;or&gt; | &lt;not&gt; | &lt;item&gt;</code></p>
<p>
<code>&lt;and&gt; ::= '&amp;' &lt;filterlist&gt;</code></p>
<p>
<code>&lt;or&gt; ::= '|' &lt;filterlist&gt;</code></p>
<p>
<code>&lt;not&gt; ::= '!' &lt;filter&gt;</code></p>
<p>
<code>&lt;filterlist&gt; ::= &lt;filter&gt; | &lt;filter&gt; &lt;filterlist&gt;</code></p>
<p>
<code>&lt;item&gt; ::= &lt;simple&gt; | &lt;present&gt; | &lt;substring&gt;</code></p>
<p>
<code>&lt;simple&gt; ::= &lt;attr&gt; &lt;filtertype&gt; &lt;value&gt;   </code></p>
<p>
<code>&lt;filtertype&gt; ::= &lt;equal&gt; | &lt;approx&gt; | &lt;ge&gt; | &lt;le&gt;</code></p>
<p>
<code>&lt;equal&gt; ::= '='</code></p>
<p>
<code>&lt;approx&gt; ::= '~='</code></p>
<p>
<code>&lt;ge&gt; ::= '&gt;='</code></p>
<p>
<code>&lt;le&gt; ::= '&lt;='</code></p>
<p>
<code>&lt;present&gt; ::= &lt;attr&gt; '=*'</code></p>
<p>
<code>&lt;substring&gt; ::= &lt;attr&gt; '=' &lt;initial&gt; &lt;any&gt; &lt;final&gt;</code></p>
<p>
<code>&lt;initial&gt; ::= NULL | &lt;value&gt;</code></p>
<p>
<code>&lt;any&gt; ::= '*' &lt;starval&gt;</code></p>
<p>
<code>&lt;starval&gt; ::= NULL | &lt;value&gt; '*' &lt;starval&gt;</code></p>
<p>
<code>&lt;final&gt; ::= NULL | &lt;value&gt;</code></p>
<p>
The token &lt;attr&gt; is a string representing an AttributeType. The token &lt;value&gt; is a string representing an AttributeValue whose format is defined by the underlying directory service. </p>
<p>
If a &lt;value&gt; must contain one of the characters * or ( or ), the character should be preceded by \ escape character.</p>
<p>&nbsp;</p></body>
</HTML>
