<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dual Interfaces</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ds_dual_interfaces"></a>Dual Interfaces</h2>
<p>
Use COM interfaces to access the properties and methods on any provider ADSI objects. A read-only property maps to an interface entry of the form <b>get_</b>&lt;PropertyName&gt;. A read/write property maps to two interface entries of the form <b>get_</b>&lt;PropertyName&gt; and <b>put_</b>&lt;PropertyName&gt;. </p>
<p>
All methods on a COM interface must:
<ul>
<li>
Return an HRESULT value to indicate success or failure. The HRESULT type is discussed in the COM specification. </li>
<li>
Return E_NOTIMPL for interfaces that have not been implemented. </li>
<li>
Return E_ADS_PROPERTY_NOT_SUPPORTED for interface properties that are not supported. </li>
</ul>
<p>
To retain compatibility with Automation controllers, all parameters and return types should be within the subset defined by the Automation VARIANT data type. For more information, see VARIANT and VARIANTARGS in the Microsoft Platform SDK.</p>
<p>
A provider Active Directory object can expose interfaces that use data types other than those in the VARIANT subset. However, Automation controllers such as Visual Basic and Java will not be able to call those interfaces. Since all ADSI provider interfaces are derived from <b>IDispatch</b>, they can be used as <b>IDispatch</b> interface pointers. </p>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
