<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Interface Summary</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h2><a name="_ds_interface_summary"></a>Interface Summary</h2>
<p>
A list of all Active Directory Service Interfaces can be found in <a href="ds2_if_89rn.htm"><b>ADSI Definitions</b></a>, but in general, interfaces fall into several groups of functionality. </p>
<p>
<a href="ds2_if_74s3.htm"><b>IADs</b></a>, <a href="ds2_if_325u.htm"><b>IADsContainer</b></a>, and <a href="ds2_if_6ptg.htm"><b>IADsPropertyList</b></a> (along with its associated <a href="ds2_if_0x6h.htm"><b>IADsPropertyEntry</b></a> and <a href="ds2_if_0a05.htm"><b>IADsPropertyValue</b></a>) are the fundamental interfaces that supply the foundation for interactions among ADSI objects. You can use their built-in house-keeping functions to keep track of names and hierarchical relationships, and their cache functions for improved performance. </p>
<p>
The schema-management interfaces <a href="ds2_if_89tf.htm"><b>IADsClass</b></a>, <a href="ds2_if_0rnd.htm"><b>IADsProperty</b></a>, and <a href="ds2_if_1i2g.htm"><b>IADsSyntax</b></a> identify the types of objects used to represent a specific directory service. You can use these interfaces to determine what types of objects are known to a specific directory service and to define and add new schema classes at runtime. </p>
<p>
You can use <a href="ds2_if_4703.htm"><b>IADsMembers</b></a>, <a href="ds2_if_2zzi.htm"><b>IADsCollection</b></a> and <a href="ds2_if_1lbk.htm"><b>IADsGroup</b></a> to define, enumerate, and manage collections of similar objects. Group memberships use are special collections of <b>IADsMembers</b> interfaces. </p>
<p>
You can use the interfaces <a href="ds2_if_188p.htm"><b>IADsAccessControlEntry</b></a>, <a href="ds2_if_97zo.htm"><b>IADsAccessControlList</b></a>, and <a href="ds2_if_9s4y.htm"><b>IADsSecurityDescriptor</b></a> to support access control lists. </p>
<p>
Use <a href="ds2_if_0e5w.htm"><b>IADsOpenDSObject</b></a> or the helper function <a href="ds2_func_0bp0.htm"><b>ADsOpenObject</b></a> to supply credentials to an operating system when first binding to a directory service object. </p>
<p>
<a href="ds2_if_5qco.htm"><b>IDirectorySearch</b></a>, available only to non-Automation clients, supports the ability to query a directory service and provides several practical means to guide the search for performance reasons. Because ADSI is an OLE DB provider, Automation clients can use the OLE DB-style queries discussed in <a href="ds2cli_72gj.htm"><b>Using the ADSI OLE DB Provider for Searches</b></a>. </p>
<p>
<a href="ds2_if_0blg.htm"><b>IDirectoryObject</b></a>, available only to non-Automation clients, expands the set of supported syntaxes to a wider range, including provider-specific syntaxes. This interface also bypasses the overhead of ADSI housekeeping functions and provides direct, on-the-wire interactions with the directory service. </p>
<p>
ADSI supplies implementations of interfaces, such as <a href="ds2_if_488i.htm"><b>IADsUser</b></a><b>, <a href="ds2_if_82we.htm">IADsDomain</a></b>, and <a href="ds2_if_60tx.htm"><b>IADsOU</b></a>, that represent a hierarchical grouping of the underlying data and services. By using these ADSI implementations, an application can maximize its functionality across all namespaces with installed ADSI providers on a network. </p>
<p>
ADSI also supplies <a href="ds2cli_8u0j.htm"><b>helper functions</b></a> for C and C++ client applications. </p>
<p>&nbsp;</p></body>
</HTML>
