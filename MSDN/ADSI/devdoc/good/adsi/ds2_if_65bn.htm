<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IADs Property Methods</title>
<link disabled rel=stylesheet href=../../backsdk3.css>
<style type="text/css">
@import url(../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>

<h3><a name="_ds_iads_property_methods"></a>IADs Property Methods</h3>
<p>
Property methods take the form of either <b>get_&lt;property&gt;</b> or <b>put_&lt;property&gt;</b>. The property methods of the <b>IADs</b> interface get or set the properties described below. For more information, see <a href="ds2_if_56yb.htm"><b>Interface Property Methods</b></a>.</p>
<h4>Properties in Vtable Order</h4>
<table cellspacing=4 cols=4>
<tr valign=top>
<th align=left width=34%>Property</th>
<th align=left width=15%>Access</th>
<th align=left colspan=2 width=51%>Method Prototype</th>
</tr>
<tr valign=top>
<td colspan=3 width=99%></td>
</tr>
<tr valign=top>
<th align=left width=34%>Class</th>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_Class</b> <br>
([out] BSTR *<i>pbstrClass</i>);</td>
</tr>
<tr valign=top>
<td width=34%><b>GUID</b></td>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_GUID</b> <br>
([out] BSTR *<i>pbstrGUID</i>);</td>
</tr>
<tr valign=top>
<th align=left width=34%>Name</th>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_Name</b> <br>
([out] BSTR *<i>pbstrName</i>);</td>
</tr>
<tr valign=top>
<td width=34%><b>ADsPath</b></td>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_ADsPath</b> <br>
([out] BSTR *<i>pbstrADsPath</i>);</td>
</tr>
<tr valign=top>
<td width=34%><b>Parent</b></td>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_Parent</b> <br>
([out] BSTR *<i>pbstrParent</i>);</td>
</tr>
<tr valign=top>
<th align=left width=34%>Schema</th>
<th align=left width=15%>R/O</th>
<td colspan=2 width=51%>HRESULT <b>get_Schema</b> <br>
([out] BSTR *<i>pbstrSchema</i>);</td>
</tr>
</table><br>
<h4>Property Descriptions</h4>
<dl>
<dt>
<b>Class</b></dt>
<dd>
Gets the name of the schema class of this object.</dd>
<dt>
<b>GUID</b></dt>
<dd>
Gets an optional provider-specific unique identifier for objects of this schema class.

<p>
<b>Notes to Implementers</b>&nbsp;&nbsp;You can use this property to uniquely identify the schema class of this object. If you do not provide a GUID, return E_ADS_PROPERTY_NOT_SUPPORTED when this property is read.

</dd>
<dt>
<b>Name</b></dt>
<dd>
Gets the relative name of the object as named within the underlying directory service. This is the leaf name of this object, which distinguishes this object from its siblings. </dd>
<dt>
<b>ADsPath</b></dt>
<dd>
Gets the ADsPath string of the object that uniquely identifies the object in a networked environment. The object can always be retrieved using this path. </dd>
<dt>
<b>Parent</b></dt>
<dd>
Gets the ADsPath string of the parent container. There is no implied ability in Active Directory to form the ADsPath of a given object by concatenating the Parent and Name properties. While this operation might work in some providers, it is not guaranteed to work for other implementations. The ADsPath is guaranteed to be valid and should always be used to retrieve an object's interface pointer. </dd>
<dt>
<b>Schema</b></dt>
<dd>
Gets the ADsPath string of the object that supports the <b>IADsClass</b> interface for this schema class.
</dd>
</dl>
<h4>See Also</h4>
<p>
<a href="ds2_if_325u.htm"><b>IADsContainer</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
