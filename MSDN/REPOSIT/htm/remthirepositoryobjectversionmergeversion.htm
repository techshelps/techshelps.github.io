<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IRepositoryObjectVersion::MergeVersion</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="remthirepositoryobjectversionmergeversion"></a>IRepositoryObjectVersion::MergeVersion</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reifcIRelationship; remthIRelationshipget_Source">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
Changes the current object version by combining its property values and origin collections with the property values and origin collections of another version of the same object.</p>
<p>
<b>HRESULT MergeVersion(</b><br>
<b>IRepositoryObjectVersion</b>  <i>*pOtherVersion<br>
</i><b>long</b>  <i>fFlags<br>
</i><b>);</b></p>
<p>
<b>Parameters</b></p>
<p>
<i>*pOtherVersion</i></p>
<p>
[in]<br>
The <b>IRepositoryObjectVersion</b> interface pointer for the predecessor of the merge — the object version whose property values and collections should be merged into the current version.</p>
<p>
<i>fFlags</i></p>
<p>
[in]<br>
Indicates which object version is the primary and which is secondary in the merge.</p>
<p>
<b>Return Value</b></p>
<p>
S_OK</p>
<p>
The method completed successfully.</p>
<p>
<u>Error</u></p>
<p>
<a href="reconrepositoryerrorsalphabeticalorder.htm">Values</a></p>
<p>
This method failed to complete successfully.</p>
<p>
<b>Remarks</b></p>
<p>
The two object versions must be versions of the same object.</p>
<p>
The current object version must be unfrozen. The other object version must be frozen. </p>
<p>
<b>MergeVersion</b> compares the property values and collections of each object version to a third version, called the Basis Version.</p>
<p>
The Repository considers one of the two to-be-merged object versions to be the primary version, and the other to be the secondary version, according to the value of <i>fFlags</i> you supply. During the merge, the Repository considers each property and origin collection type in turn. For each property, MergeVersion uses this rule:
<ul>
<li>
If the primary version differs from the Basis Version, the Repository uses the property value from the primary version. If <i>only</i> the secondary version differs from the Basis Version, the Repository uses the property value from the secondary version. If neither version differs from the Basis Version, the Repository leaves the property value in the current version unchanged.</li>
</ul>
<p>
For each origin collection type whose Collection_MergeWhole flag is set, <b>MergeVersion</b> uses this rule: 
<ul>
<li>
If the primary version's collection differs (see Comparing Collections) from the Basis Version's collection, the Repository uses the collection from the primary version. If <i>only</i> the secondary version's collection differs from the Basis Version's, the Repository uses the collection from the secondary version. If neither version differs from the Basis Version, the Repository leaves the property value in the current version unchanged.</li>
</ul>
<p>
For each origin collection type whose Collection_MergeWhole flag is <i>not</i> set, <b>MergeVersion</b> combines the items in the two collections as follows:
<ul>
<li>
First, <b>MergeVersion</b> includes in the resulting collection each item in the Basis Version not changed in or deleted from either the primary version or secondary version. (See "Comparing Versioned Relationships.")<br><br></li>
<li>
Second, <b>MergeVersion</b> includes in the resulting collection each item in the primary version's collection that differs from the Basis Version.<br><br></li>
<li>
Third, MergeVersion includes in the resulting collection each item in the secondary version's collection that differs Basis Version — provided the corresponding items in the primary version and Basis Version do not differ from each other.<p>
<b>Note</b>&nbsp;&nbsp;&nbsp;The resulting collection can exclude some items found in the basis object version's collection. For example, if the primary version's collection excludes the item, the resulting collection will exclude the item. Similarly, if the primary version's collection includes an item that is identical to an item in the Basis Version's collection, but the secondary object version excludes the item, the resulting collection will exclude the item.
</li>
</ul>
</BODY>
</HTML>
