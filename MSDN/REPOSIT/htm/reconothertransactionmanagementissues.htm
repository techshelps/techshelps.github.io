<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Other Transaction Management Issues</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconothertransactionmanagementissues"></a>Other Transaction Management Issues</h1>
<p>
When you design an application that uses Repository, you must consider these transaction management issues:
<ul>
<li>
What are the implications of reading Repository data outside the scope of a transaction?<br><br></li>
<li>
Is a locking protocol necessary for the application?<br><br></li>
<li>
Are Repository cache overflows likely to occur, and what can be done to avoid cache overflows?<p>
The next sections discuss each of these issues:
</li>
<li>
<a href="reconreadingrepositorydataoutsideofatransaction.htm">Reading Repository Data Outside of a Transaction</a><br><br></li>
<li>
<a href="reconusingalockprotocol.htm">Using a Lock Protocol</a><br><br></li>
<li>
<a href="reconavoidingrepositorycacheoverflows.htm">Avoiding Repository Cache Overflows</a></li>
</ul>
</BODY>
</HTML>
