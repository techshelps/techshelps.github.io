<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Repository Data Types</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="redatrepositorydatatypes"></a>Repository Data Types</h1>
<p>
The following structures and data types are defined for the Microsoft Repository application programming interface.</p>
<p>
<b>Internal Identifier</b></p>
<pre><code>struct INTID
{
   ULONG  iSiteID;
   ULONG  iLocalID;
};

typedef const INTID &amp;REFINTID;
</code></pre>
<p>
An <b>INTID</b> or a <b>REFINTID</b> variable is an internal identifier for a specific Repository object that uniquely identifies the object within a particular Repository database. It is <i>not</i> unique across all repositories. This is not the same thing as the interface identifier for an interface, or the class identifier that is used to create an instance of a class.</p>
<p>
The internal identifier is composed of an internal site identifier (iSiteID), and an internal local identifier (iLocalID).</p>
<p>
<b>Internal Version Identifier</b></p>
<pre><code>struct VERSIONID
{
    INTID           sIntID;
    BRANCHID       iBranchID;
    VERSIONNUM    iVersionStart;
};

typedef const VERSIONID &amp;REFVERSIONID;
</code></pre>
<p>
A <b>VERSIONID</b> or a <b>REFVERSIONID</b> variable is an internal identifier for a specific Repository object version that uniquely identifies the object version within a particular Repository database. It is <i>not</i> unique across all repositories.</p>
<p>
The internal identifier is composed of an internal identifier (sIntID), a branch identifier (iBranchID), and a version-within-branch identifier (iVersionStart).</p>
<p>
<b>Object Identifier and Object-Version Identifier</b></p>
<pre><code>typedef const OBJECTID OBJID;
typedef const OBJID    &amp;REFOBJID;
</code></pre>
<p>
An <b>OBJID</b> or a <b>REFOBJID</b> variable can be used in either of two ways:
<ul>
<li>
It can be an object identifier for a specific Repository object in a particular Repository database. An object identifier is unique across all repositories.<br><br></li>
<li>
It can be an object-version identifier for a specific version of a Repository object in a particular Repository database. An object-version identifier is unique across all repositories.</li>
</ul>
<p>
An <b>OBJID</b> or a <b>REFOBJID</b> variable is composed of a global identifier (GUID) and a four-byte local identifier appended to the GUID. The GUID portion of the variable specifies where the identifier was created, and the local identifier has a value that is unique within the Repository database. When you use an <b>OBJID</b> or a <b>REFOBJID</b> variable to contain an object-version identifier, the four-byte local identifier is <i>not</i> the branch ID or the version-within-branch id of the object version.</p>
</BODY>
</HTML>
