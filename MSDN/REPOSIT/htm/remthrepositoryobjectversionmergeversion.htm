<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RepositoryObjectVersion MergeVersion Method</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="remthrepositoryobjectversionmergeversion"></a>RepositoryObjectVersion MergeVersion Method</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reobjRepositoryObject">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
This method changes the current object version by combining its property values and origin collections with the property values and origin collections of another version of the same object.</p>
<h2>Syntax</h2>
<p>
<b>Call </b><i>object</i><b>.MergeVersion( </b><i>otherVersion</i><b> , </b><i>flags</i><b> )</b></p>
<p>
The <b>MergeVersion</b> method syntax has the following parts.</p>
<table cols=2>
<tr valign=top>
<td width=33%><b>Part</b></td>
<td width=67%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%><i>object</i></td>
<td width=67%>An object expression that evaluates to a <b>RepositoryObjectVersion</b> object.</td>
</tr>
<tr valign=top>
<td width=33%><i>otherVersion</i></td>
<td width=67%>An object expression that evaluates to a <b>RepositoryObjectVersion</b> object; the object version whose value you want to merge into the current object version.</td>
</tr>
<tr valign=top>
<td width=33%><i>flags</i></td>
<td width=67%>A flag indicating which version (the current version or the other version) the Repository should use as the primary version of the merge operation.</td>
</tr>
</table><br>
<h2>Remarks</h2>
<p>
The two object versions must be versions of the same object.</p>
<p>
The current object version must be unfrozen. The other object version must be frozen. </p>
<p>
MergeVersion compares the property values and collections of each object version to a third version, called the Basis Version.</p>
<p>
The Repository considers one of the two to-be-merged object versions to be the primary version, and the other to be the secondary version, according to the value of <i>flags</i> you supply. During the merge, the Repository considers each property and origin collection type in turn. For each property, MergeVersion uses this rule:
<ul>
<li>
If the primary version differs from the basis version, the Repository uses the property value from the primary version. If <i>only</i> the secondary version differs from the basis version, the Repository uses the property value from the secondary version. If neither version differs from the basis version, the Repository leaves the property value in the current version unchanged.</li>
</ul>
<p>
For each origin collection type whose Collection_MergeWhole flag is set, MergeVersion uses this rule: 
<ul>
<li>
If the primary version's collection differs from the basis version's collection, the Repository uses the collection from the primary version. If <i>only</i> the secondary version's collection differs from the basis version's, the Repository uses the collection from the secondary version. If neither version differs from the basis version, the Repository leaves the collection in the current version unchanged.</li>
</ul>
<p>
For each origin collection type whose Collection_MergeWhole flag is <i>not</i> set, MergeVersion combines the items in the two collections as follows:
<ul>
<li>
First, MergeVersion includes in the resulting collection each item in the basis version not changed in or deleted from either the primary version or secondary version<br><br></li>
<li>
Second, MergeVersion includes in the resulting collection each item in the primary version's collection that differs from the basis version.<br><br></li>
<li>
Third, MergeVersion includes in the resulting collection each item in the secondary version's collection that differs from the basis version – provided the corresponding items in the primary version and basis version do not differ from each other.</li>
</ul>
<p>
Note that the resulting collection can exclude some items found in the basis object version's collection. For example, if the primary version's collection excludes the item, the resulting collection will exclude the item. Similarly, if the primary version's collection includes an item that is identical to an item in the basis version's collection, but the secondary object version excludes the item, the resulting collection will exclude the item.</p>
</BODY>
</HTML>
