<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Storage Strategy in the Repository Database</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconstoragestrategyintherepositorydatabase"></a>Storage Strategy in the Repository Database</h1>
<p>
Repository's database storage model differs from its run-time object model. While the run-time object model is designed to accommodate run-time operations conveniently, the database model is designed to accommodate storage efficiently.</p>
<p>
To save space in the database, Repository can sometimes store a single copy of a property value, even if that property value describes many object versions. Similarly, Repository can sometimes store a relationship once, even if many different object versions have that relationship.</p>
<p>
Repository anticipates which object versions are especially likely to share property values and relationships and which object versions are less likely to. It uses these guidelines:
<ul>
<li>
Two versions of the same object are likely to share property values and collections, but two versions of different objects are less likely to. In other words, if two object versions are not on the same version graph, they are not especially likely to share property values or relationships. (See <a href="reconthe_version_graph.htm">The Version Graph</a>.)<br><br></li>
<li>
Within a version graph, two versions that are near each other are more likely to share values; two versions that are far apart are less likely to share values. Repository arranges each version graph into branches. (See <a href="reconbranchesintheversiongraph.htm">Branches in the Version Graph</a>.) Each branch contains versions that are especially likely to share values.<br><br></li>
<li>
Although property values and collections can change, they do not change back and forth frequently. More commonly, a value holds for a few consecutive versions of an object, and then that value changes to a new value, which holds for a few more versions of the object. Thus, when Repository stores a property value, it stores the property value for an entire range of object versions. (See <a href="reconrangesintheversiongraph.htm">Ranges in the Version Graph</a>.)<p>
Similarly, in a single row of the RTblRelships table, Repository can indicate that every object version in a range (of origin object versions) has a relationship to every object version in a range (of destination object versions).
</li>
</ul>
<p>
The following table summarizes how Repository stores versions and relationships.</p>
<table cols=2 width=595>
<tr valign=top>
<td width=34%><b>To store</b></td>
<td width=66%><b>Repository uses</b></td>
</tr>
<tr valign=top>
<td width=34%>Objects and object versions</td>
<td width=66%><a href="reconrtblversions.htm">RTblVersions</a> table<p>
<a href="reconinterfacespecifictables.htm">Interface-Specific Tables</a></p>
</td>
</tr>
<tr valign=top>
<td width=34%>Relationships</td>
<td width=66%><a href="reconrtblrelships.htm">RTblRelships</a> table</td>
</tr>
</table><br>
</BODY>
</HTML>
