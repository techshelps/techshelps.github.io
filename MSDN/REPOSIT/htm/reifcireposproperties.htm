<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IReposProperties Interface</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reifcireposproperties"></a>IReposProperties Interface</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reclaReposProperties; reifcIRepositoryDispatch; reifcIReposProperty; remthIReposPropertiesget_Count; remthIReposPropertiesget_Item; remthIReposPropertiesget_Type; remthIReposProperties_NewEnum">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
The <b>IReposProperties</b> interface provides access to the <b>Properties</b> collection. The <b>Properties</b> collection gives you a convenient mechanism to enumerate through all of the persistent properties and collections of an interface, when you don't already know the names of all of the interface members. </p>
<p>
When you instantiate an Automation object that represents an object from your tool information model, and that object conforms to a class for which there is no custom implementation (in other words, you have provided no software implementation of the class), the Repository will provide an interface implementation for you. This interface implementation uses <b>IRepositoryDispatch</b> as its dispatch interface. This dispatch interface contains one additional method, the get_Properties method, that returns an <b>IReposProperties</b> interface pointer.</p>
<p>
This support enables the Automation programmer to use syntax like:</p>
<pre><code><b>Dim</b><i> firstProperty</i> <b>As</b> <b>ReposProperty</b>
<b>Set</b> <i>firstProperty</i> <b>=</b> <i>repObject</i>.<b>Properties(</b>1<b>)</b>
</code></pre>
<p>
The second statement is resolved like this:
<ol type=1>
<li>
In this example, <i>repObject</i> is an Automation instantiation of a Repository object where the default implementation has been used.<br><br></li>
<li>
The <b>Properties</b> term is the Automation level name for the <b>get_Properties</b> method that is supplied by the <b>IRepositoryDispatch</b> dispatch interface.<br><br></li>
<li>
The <b>get_Properties</b> method returns the interface pointer to the <b>IReposProperties</b> interface.<br><br></li>
<li>
The default method of the <b>IReposProperties</b> interface is the <b>get_Item</b> method, which returns an <b>IReposProperty</b> interface pointer for the specified property object in the <b>Properties</b> collection. </li>
</ol>
<p>
At this point, the Automation programmer has access to the first property in the collection through the <i>firstProperty</i> object variable.</p>
<h2>When to Use</h2>
<p>
Use the <b>IReposProperties</b> interface to access the properties and collections of a Repository object, when no custom implementation is available, and you do not already know what members are exposed by the object's interface. With the <b>IReposProperties</b> interface, you can:
<ul>
<li>
Get a count of the number of members in the collection.<br><br></li>
<li>
Retrieve an <b>IReposProperty</b> interface pointer to one of the members in the collection.<br><br></li>
<li>
Enumerate the members in the collection.</li>
</ul>
<h2>Methods</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>IUnknown Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>QueryInterface</b></td>
<td width=60%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=40%><b>AddRef</b></td>
<td width=60%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=40%><b>Release</b></td>
<td width=60%>Decrements the reference count.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>GetIDsOfNames</b></td>
<td width=60%>Maps a single member and a set of argument names to a corresponding set of dispatch identifiers.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfo</b></td>
<td width=60%>Retrieves a type information object, which can be used to get the type information for an interface.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfoCount</b></td>
<td width=60%>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</td>
</tr>
<tr valign=top>
<td width=40%><b>Invoke</b></td>
<td width=60%>Provides access to properties and methods exposed by an Automation object.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IReposPropert</b>ies<b> Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>get_Count</b></td>
<td width=60%>Retrieves the count of the number of members in the collection.</td>
</tr>
<tr valign=top>
<td width=40%><b>get_Item</b></td>
<td width=60%>Retrieves the <b>IReposProperty</b> interface pointer for the specified member of the collection.</td>
</tr>
<tr valign=top>
<td width=40%><b>get_Type</b></td>
<td width=60%>Retrieves the type of the interface to which these properties are attached.</td>
</tr>
<tr valign=top>
<td width=40%><b>_NewEnum</b></td>
<td width=60%>Retrieves a standard Automation enumeration interface pointer for the collection.</td>
</tr>
</table><br>
<h2>Remarks</h2>
<p>
Only persistent members (that is, members that are stored in the Repository) are represented in the <b>Properties</b> collection.</p>
</BODY>
</HTML>
