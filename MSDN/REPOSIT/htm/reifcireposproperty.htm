<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IReposProperty Interface</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reifcireposproperty"></a>IReposProperty Interface</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reclaReposProperty; reifcIReposProperties; reifcIRepositoryDispatch; remthIReposPropertyget_Name; remthIReposPropertyget_Type; remthIReposPropertyget_Value; remthIReposPropertyput_Value">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
The <b>IReposProperty</b> interface provides access to a persistent member (a property or collection) of a tool information model interface. </p>
<p>
When you instantiate an Automation object that represents an object from your tool information model, and that object conforms to a class for which there is no custom implementation (in other words, you have provided no software implementation of the class), the Repository will provide an interface implementation for you. This interface implementation uses <b>IRepositoryDispatch</b> as its dispatch interface.</p>
<p>
The <b>IRepositoryDispatch</b> interface is an enhanced <b>IDispatch</b> interface; in addition to all of the standard <b>IDispatch</b> methods, <b>IRepositoryDispatch</b> also provides access to the <b>Properties</b> collection. The <b>Properties</b> collection gives you a convenient mechanism to enumerate through all of the persistent properties and collections of an interface. The <b>IReposProperty</b> interface can be used to access the individual members in the <b>Properties</b> collection.</p>
<p>
This support enables the Automation programmer to use syntax like:</p>
<pre><code><b>Dim</b><i> firstPropName</i> <b>As</b> <b>String</b>
<b>Let</b> <i>firstPropName</i> <b>=</b> <i>repObject</i>.<b>Properties(</b>1<b>).Name</b>
</code></pre>
<p>
The second statement resolves like this:
<ol type=1>
<li>
In this example, <i>repObject</i> is an Automation instantiation of a Repository object where the default implementation has been used.<br><br></li>
<li>
The <b>Properties</b> term is the Automation level name for the <b>get_Properties</b> method that is supplied by the <b>IRepositoryDispatch</b> interface.<br><br></li>
<li>
The <b>get_Properties</b> method returns the interface pointer to the <b>IReposProperties</b> interface.<br><br></li>
<li>
The default method of the <b>IReposProperties</b> interface is the <b>get_Item</b> method, which returns an <b>IReposProperty</b> interface pointer for the specified property object in the <b>Properties</b> collection.<br><br></li>
<li>
The <b>Name</b> term is the Automation level name for the <b>get_Name</b> method that is supplied by the <b>IReposProperty</b> interface.</li>
</ol>
<p>
At this point, the Automation programmer has access to the name of the first property in the collection through the <i>firstPropName</i> variable.</p>
<h2>When to Use</h2>
<p>
Use the <b>IReposProperty</b> interface to access a persistent interface member, when no custom implementation is available, and you do not already know the type or name of the member. With this interface, you can:
<ul>
<li>
Retrieve the name of a property or collection.<br><br></li>
<li>
Retrieve the type of a property or collection.<br><br></li>
<li>
Get or set the value of a property.</li>
</ul>
<h2>Methods</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>IUnknown Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>QueryInterface</b></td>
<td width=60%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=40%><b>AddRef</b></td>
<td width=60%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=40%><b>Release</b></td>
<td width=60%>Decrements the reference count.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>GetIDsOfNames</b></td>
<td width=60%>Maps a single member and a set of argument names to a corresponding set of dispatch identifiers.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfo</b></td>
<td width=60%>Retrieves a type information object, which can be used to get the type information for an interface.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfoCount</b></td>
<td width=60%>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</td>
</tr>
<tr valign=top>
<td width=40%><b>Invoke</b></td>
<td width=60%>Provides access to properties and methods exposed by an Automation object.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IReposProperty</b> <b>Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>get_Type</b></td>
<td width=60%>Retrieves the type of a persistent interface member.</td>
</tr>
<tr valign=top>
<td width=40%><b>get_Name</b></td>
<td width=60%>Retrieves the name of a persistent interface member.</td>
</tr>
<tr valign=top>
<td width=40%><b>get_Value</b></td>
<td width=60%>Retrieves the value of a persistent interface member.</td>
</tr>
<tr valign=top>
<td width=40%><b>put_Value</b></td>
<td width=60%>Sets the value of a persistent property.</td>
</tr>
</table><br>
<h2>Remarks</h2>
<p>
Only persistent members (that is, members that are stored in the Repository) can be accessed by the <b>IReposProperty</b> interface.</p>
</BODY>
</HTML>
