<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>IAnnotationalProps Interface</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reifciannotationalprops"></a>IAnnotationalProps Interface</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reclaClassDef; reclaRelationship; reclaInterfaceDef; reclaCollectionDef; reclaMethodDef; reclaPropertyDef; reclaRelationshipDef; reclaReposTypeLib; reclaReposRoot; remthIReposPropertyput_Value; remthIRepositoryDispatchget_Properties">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
<i>Annotational properties</i> are Repository properties that can be associated with <i>individual</i>  Repository objects <i>or relationships</i>. When a normal property is defined as a member of a Repository interface, it is defined for <i>all</i> objects that implement that interface. Normal properties cannot be associated with Repository relationships. </p>
<p>
In order to be able to attach an annotational property value to a particular Repository object, two requirements must be met:
<ol type=1>
<li>
The object must conform to an object class that exposes the <b>IAnnotationalProps</b> interface.<br><br></li>
<li>
A property definition object must exist for an <b>IAnnotationalProps</b> interface property with a name that matches the name of your annotational property.</li>
</ol>
<p>
If these two requirements are met, you can attach an annotational property value to an object by using the <b>IReposProperty::put_Value</b> method to set the value of the annotational property for that particular object.</p>
<h2>When to Use</h2>
<p>
Use the <b>IAnnotationalProps</b> interface to access the annotational properties of a Repository object or relationship.</p>
<h2>Methods</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>IUnknown Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>QueryInterface</b></td>
<td width=60%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=40%><b>AddRef</b></td>
<td width=60%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=40%><b>Release</b></td>
<td width=60%>Decrements the reference count.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>GetIDsOfNames</b></td>
<td width=60%>Maps a single member and a set of argument names to a corresponding set of dispatch identifiers.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfo</b></td>
<td width=60%>Retrieves a type information object, which can be used to get the type information for an interface.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfoCount</b></td>
<td width=60%>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</td>
</tr>
<tr valign=top>
<td width=40%><b>Invoke</b></td>
<td width=60%>Provides access to properties and methods exposed by an Automation object.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IRepositoryDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>get_Properties</b></td>
<td width=60%>Retrieves the <b>IReposProperties</b> interface pointer. The <b>IreposProperties</b> interface provides access to the <b>Properties</b> collection.</td>
</tr>
</table><br>
<h2>Remarks</h2>
<p>
Annotational properties are maintained by the Repository as string data. The creator and users of the annotational property must get and set the property value using the appropriate data type through the <b>VARIANT</b> structure. If a data type other than <i>string</i> is used, the Repository will perform the appropriate data conversion.</p>
<p>
Since <i>all</i> annotational properties in the Repository must be defined as interface members of the <b>IAnnotationalProps</b> interface, all annotational property names <i>share the same name space</i>. When you choose a name for an annotational property, make the name as specific and unique as possible.</p>
</BODY>
</HTML>
