<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Requirements for Object-Version Deletion</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconrequirementsforobjectversiondeletion"></a>Requirements for Object-Version Deletion</h1>
<p>
The following restrictions apply to object-version deletion:
<ul>
<li>
If the object version has any successor, it cannot be deleted.<br><br></li>
<li>
If the object version is the member of a TargetVersions collection of an origin relationship, and that relationship’s source object version is unchangeable, it cannot be deleted. (See <a href="reconrequirementsforchanginganobjectversion.htm">Requirements for Changing an Object Version</a>.)</li>
</ul>
<p>
If a to-be-deleted object version does not satisfy these requirements, Repository does not necessarily return an error. If you are explicitly deleting the object version with the <b>Delete</b> method, the method fails and returns an error. But if Repository is automatically attempting to delete the object version during delete propagation, it does not return an error. Instead, Repository continues considering other object versions as candidates for propagated deletions.</p>
</BODY>
</HTML>
