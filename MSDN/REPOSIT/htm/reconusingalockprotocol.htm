<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using a Lock Protocol</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconusingalockprotocol"></a>Using a Lock Protocol</h1>
<p>
Executing transactions concurrently can adversely affect the integrity of Repository data if a locking protocol is not used. For example, consider two concurrently executing transactions that both increment an integer property of a Repository object. This property represents a sequential counter.
<ol type=1>
<li>
Transaction A reads the value of the property. The current value is six.<br><br></li>
<li>
Transaction B reads the same current value of the property.<br><br></li>
<li>
Transaction A increments the retrieved property value by one, and writes it back to the Repository database. The value in the database is now seven.<br><br></li>
<li>
Transaction B increments its copy of the retrieved property value by one and writes it back to the Repository database. The value in the database is still seven. It should be eight.</li>
</ol>
<p>
To avoid this problem, use the <b>Lock</b> method in concurrently executing transactions to serialize access to a Repository item. The <b>Lock</b> method sets an exclusive lock on the item, and refreshes any unchanged cache data for the item. The lock is effective across processes and across computers. If the Repository item is already locked, the lock request waits until the lock becomes available. The item is unlocked when the transaction is ended, either by the <b>Abort</b> method or by the final invocation of the <b>Commit</b> method for the transaction.</p>
<p>
By invoking the <b>Lock</b> method, the caller has exclusive access to a Repository item, as long as all other concurrently executing transactions also obtain a lock on that Repository item before updating it. </p>
<p>
<b>Caution</b>&nbsp;&nbsp;&nbsp;Calling the <b>Lock</b> method on a Repository item only prevents other transactions from executing the <b>Lock</b> method on the Repository item. It does not block other transactions that are not using the locking protocol from changing the Repository item.</p>
</BODY>
</HTML>
