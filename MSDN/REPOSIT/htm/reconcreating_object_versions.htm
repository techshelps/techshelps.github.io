<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Creating Object Versions</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconcreating_object_versions"></a>Creating Object Versions</h1>
<p>
Whenever you want to continue modifying an object without overwriting the non-annotational property values and origin collections of the existing object versions, you create a new version of the object. When you create a new object version, you must use an existing, frozen version of the object as the creation version of the to-be-created version. To create the new version, you invoke the <b>CreateVersion</b> method with an <b>IRepositoryObjectVersion</b> interface pointer to the creation version. Repository creates a new, unfrozen version of the object. The new version has property values identical to those of the creation version. The new version's collections are based on the creation version's collections, as follows:
<ul>
<li>
Repository copies each origin collection whose type has the COLLECTION_NEWORGVERSIONSPARTICIPATE flag set. If this flag is not set, the origin collection is not copied.<br><br></li>
<li>
By default, Repository does not copy the creation version's destination collections into the newly created version. Your application might, however, include custom behavior for the <b>CreateVersion</b> method that does copy some or all destination collections. </li>
</ul>
<p>
When you create a new version of an object, Repository modifies the version graph accordingly. </p>
</BODY>
</HTML>
