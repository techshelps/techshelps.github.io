<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Repository Features</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconrepositoryfeatures"></a>Repository Features</h1>
<p>
These Repository features help you manage the process of producing application software:
<ul>
<li>
Already contains useful information — For example, the version of Repository that is included with Visual Basic can maintain information about Visual Basic applications. You can build tools that analyze, report on, or present this information in useful ways. Note that you need not build any tools to collect this data; Repository includes a tool that maintains this data in the Repository for you. Over time, Repository will include more data about more tools, making it increasingly useful to you.<p>
The existing information in the Repository can be extended in three ways:
<ul>
<li>
Add an entirely new kind of information.<br><br></li>
<li>
Extend an existing kind of information.<br><br></li>
<li>
Combine an existing kind of information with an entirely new kind of information.</li>
</ul>
</li>
<li>
Is object-oriented — Microsoft Repository's methods recognize the object as a unit of persistence. If you are an object-oriented programmer, Repository makes it easy for you to manage your persistent data. In contrast, if Repository were merely a relational database, your tools would have to translate between objects (the units of run-time manipulation) and rows (the units of persistence within a database table). Microsoft Repository eliminates this programming chore. <br><br></li>
<li>
Enables manipulation of object models using the same techniques used to manipulate your other data — For example, you can store the classes of your object model in the Repository, retrieve them from the Repository, and use the Repository's general data manipulation facilities on them. <br><br></li>
<li>
Supports both COM and Automation programming — From your programs that manipulate the contents of the Repository, you can use COM or Automation paradigms. </li>
</ul>
</BODY>
</HTML>
