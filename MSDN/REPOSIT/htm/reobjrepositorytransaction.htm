<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RepositoryTransaction Object</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reobjrepositorytransaction"></a>RepositoryTransaction Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reproRepositoryTransaction; reproRepositoryTransactionStatus; remthRepositoryTransactionAbort; remthRepositoryTransactionBegin; remthRepositoryTransactionCommit; remthRepositoryTransactionGetOption; remthRepositoryTransactionSetOption; remthRepositoryTransactionFlush">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
The Repository supports the bracketing of multiple changes within the scope of a transaction. Changes to a Repository that are bracketed within a transaction are either all committed or all undone, depending upon the way that the transaction is completed. Repository methods that are reading data from the Repository may be executed outside of a transaction, but methods that write data must be bracketed within a transaction. </p>
<p>
You cannot directly instantiate a <b>RepositoryTransaction</b> object. When you connect to a Repository, a <b>RepositoryTransaction</b> object is created for you. It is accessible via the <a href="reprorepositorytransaction.htm">Repository.Transaction</a> property.</p>
<h2>When to Use</h2>
<p>
Use the <b>RepositoryTransaction</b> object to manage Repository transactions.</p>
<h2>Properties</h2>
<table cols=2>
<tr valign=top>
<td width=25%><b>Property</b></td>
<td width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%><b>Status</b></td>
<td width=75%>The transaction status of the Repository.</td>
</tr>
</table><br>
<h2>Methods</h2>
<table cols=2>
<tr valign=top>
<td width=25%><b>Method</b></td>
<td width=75%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=25%><b>Abort</b></td>
<td width=75%>Cancels the current transaction.</td>
</tr>
<tr valign=top>
<td width=25%><b>Begin</b></td>
<td width=75%>Begins a new transaction.</td>
</tr>
<tr valign=top>
<td width=25%><b>Commit</b></td>
<td width=75%>Commits the current transaction.</td>
</tr>
<tr valign=top>
<td width=25%><b>Flush</b></td>
<td width=75%>Flushes uncommitted changes to the Repository database.</td>
</tr>
<tr valign=top>
<td width=25%><b>GetOption</b></td>
<td width=75%>Retrieves various transaction options.</td>
</tr>
<tr valign=top>
<td width=25%><b>SetOption</b></td>
<td width=75%>Sets various transaction options.</td>
</tr>
</table><br>
<h2>Remarks</h2>
<p>
Only one transaction may be active at a time for each opened Repository instance. Nesting of Begin/Commit method invocations is permitted, but no actual nesting of transactions occurs.</p>
</BODY>
</HTML>
