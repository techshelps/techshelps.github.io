<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ICollectionDef Interface</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reifcicollectiondef"></a>ICollectionDef Interface</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reclaCollectionDef; reifcIInterfaceDef; reproICollectionDefFlags; reproICollectionDefIsOrigin; reproICollectionDefMaxCount; reproICollectionDefMinCount; remthIRepositoryDispatchget_Properties; recolICollectionDefCollectionItem">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
A collection type (also referred to as a collection definition) defines how instances of a particular type of collection will behave. The properties of the collection type determine:
<ul>
<li>
The minimum and maximum number of items in a collection.<br><br></li>
<li>
Whether or not the collection type is an origin collection type.<br><br></li>
<li>
Whether or not the collection type permits the naming of destination objects, and if so, whether those names are case-sensitive, and required to be unique.<br><br></li>
<li>
Whether or not the collection type permits the explicit sequencing of items in the collection.<br><br></li>
<li>
What happens to related objects when objects or relationships in the collection are deleted.<br><br></li>
<li>
Whether or not origin collections of this type are automatically copied to new object versions by the <b>CreateVersion</b> method.<br><br></li>
<li>
Whether the <b>MergeVersion</b> method combines origin collections of this type as a whole, or item by item.<br><br></li>
<li>
Whether the <b>FreezeVersion</b> method requires that destination object versions of relationships of this type be frozen before the attendant origin object versions can be frozen.</li>
</ul>
<p>
The kind of relationship that a particular collection type uses to relate objects to each other is determined by its CollectionItem collection. The CollectionItem collection associates a single relationship type to the collection type. </p>
<p>
To add a new collection type, use the <b>IInterfaceDef</b> interface.</p>
<h2>When to Use</h2>
<p>
Use the <b>ICollectionDef</b> interface to retrieve or modify the properties of a collection type, or to determine the kind of relationship that the collection implements.</p>
<h2>Methods</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>IUnknown Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>QueryInterface</b></td>
<td width=60%>Returns pointers to supported interfaces.</td>
</tr>
<tr valign=top>
<td width=40%><b>AddRef</b></td>
<td width=60%>Increments the reference count.</td>
</tr>
<tr valign=top>
<td width=40%><b>Release</b></td>
<td width=60%>Decrements the reference count.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>GetIDsOfNames</b></td>
<td width=60%>Maps a single member and a set of argument names to a corresponding set of dispatch identifiers.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfo</b></td>
<td width=60%>Retrieves a type information object, which can be used to get the type information for an interface.</td>
</tr>
<tr valign=top>
<td width=40%><b>GetTypeInfoCount</b></td>
<td width=60%>Retrieves the number of type information interfaces that an object provides (either 0 or 1).</td>
</tr>
<tr valign=top>
<td width=40%><b>Invoke</b></td>
<td width=60%>Provides access to properties and methods exposed by an Automation object.</td>
</tr>
</table><br>
<table cols=2>
<tr valign=top>
<td width=40%><b>IRepositoryDispatch Method</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>get_Properties</b></td>
<td width=60%>Retrieves the <b>IreposProperties</b> interface pointer. The <b>IreposProperties</b> interface provides access to the <b>Properties</b> collection.</td>
</tr>
</table><br>
<h2>Properties</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>Property</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>Flags</b></td>
<td width=60%>Flags that determine the behavior of this type of collection.</td>
</tr>
<tr valign=top>
<td width=40%><b>IsOrigin</b></td>
<td width=60%>Indicates whether or not collections of this type are origin collections.</td>
</tr>
<tr valign=top>
<td width=40%><b>MaxCount</b></td>
<td width=60%>The maximum number of target objects that can be contained in a collection of this type.</td>
</tr>
<tr valign=top>
<td width=40%><b>MinCount</b></td>
<td width=60%>The minimum number of target objects that must be contained in a collection of this type.</td>
</tr>
</table><br>
<h2>Collections</h2>
<table cols=2>
<tr valign=top>
<td width=40%><b>Collection</b></td>
<td width=60%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=40%><b>CollectionItem</b></td>
<td width=60%>The collection of one relationship type that defines the relationship between target objects of this type of collection and a single source object.</td>
</tr>
</table><br>
</BODY>
</HTML>
