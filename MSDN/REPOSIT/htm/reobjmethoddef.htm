<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MethodDef Object</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reobjmethoddef"></a>MethodDef Object</h1>
<p>
<object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="_topic_not_found.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="reobjRepositoryObject; remthInterfaceDefCreateMethodDef; reproMethodDefDispatchID; reproMethodDefFlags; recolMethodDefProperties; recolMethodDefInterface">
</object><a href=JavaScript:alink_1.Click()>See Also</a></p>
<p>
When you define a class for a tool information model, you specify the interfaces that the class implements. For each of those interfaces, you specify the <i>members</i> (properties, methods, and collections) that are attached to the interface. </p>
<p>
The definition of a method as a member of an interface does not result in the method's implementation logic being stored in the Repository. However, it does add the method name to the set of defined member names for that interface. It also reserves the method's dispatch identifier in the set of defined dispatch identifier values for the interface.</p>
<p>
A method definition (a <b>MethodDef</b> object) is also a <a href="reobjrepositoryobject.htm">RepositoryObject</a>. In addition to the members described here, <b>MethodDef</b> objects also provide the members that are defined for Repository objects.</p>
<p>
To attach a new method to an interface, use the <b>CreateMethodDef</b> method of the <b>InterfaceDef</b> object.</p>
<h2>When to Use</h2>
<p>
Use the <b>MethodDef</b> object to access or modify the characteristics of a method definition, or to determine the interface definition to which a particular method is attached.</p>
<h2>Properties</h2>
<table cols=2 width=595>
<tr valign=top>
<td width=33%><b>Property</b></td>
<td width=67%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%><b>DispatchID</b></td>
<td width=67%>The dispatch identifier to use when invoking a method that conforms to this method definition.</td>
</tr>
<tr valign=top>
<td width=33%><b>Flags</b></td>
<td width=67%>Flags that specify details about this method definition.</td>
</tr>
</table><br>
<h1>Collections</h1>
<table cols=2 width=595>
<tr valign=top>
<td width=33%><b>Collection</b></td>
<td width=67%><b>Description</b></td>
</tr>
<tr valign=top>
<td width=33%><b>Interface</b></td>
<td width=67%>The interface to which this method definition is attached.</td>
</tr>
<tr valign=top>
<td width=33%><b>Properties</b></td>
<td width=67%>The collection of all persistent properties that are attached to the <b>MethodDef</b> object.</td>
</tr>
</table><br>
</BODY>
</HTML>
