<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Establishing Workspace Context</title>
<style>@import url(/stylesheets/msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="/stylesheets/msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h1><a name="reconestablishingworkspacecontext"></a>Establishing Workspace Context</h1>
<p>
When you create or open a Repository instance, the Repository returns to you a reference to the Repository's root object. From there, you can immediately begin to manipulate other Repository objects. For example, you can invoke <b>get_Object</b> to materialize a reference to a specific Repository object. Or you can begin to move from the root object to other Repository objects. In either of these cases, the resulting references refer to run-time objects that exist within the general context of the open Repository instance. Thus, if you invoke methods exposed by this object, the methods perform their work within that context.</p>
<p>
On the other hand, you can first establish a workspace context before manipulating any Repository objects. To establish a workspace context, you must materialize a workspace object in any of these ways:
<ul>
<li>
From the root object, you can materialize the Workspaces collection, and then retrieve a particular workspace from the resulting collection.<br><br></li>
<li>
You can invoke the <b>get_Object</b> method to explicitly retrieve a reference to the workspace object in whose context you want to operate.<br><br></li>
<li>
From the Workspace Definition object you can use the <b>ObjectInstances</b> method to establish a collection of all workspaces in the Repository. Then you can retrieve a particular workspace from that collection.</li>
</ul>
<p>
After you have a reference to the workspace object, you can operate within the context of that workspace. To retrieve an object directly within the context of the workspace, you can invoke the <b>get_Object</b> method <i>as exposed by the workspace object</i>. (Remember that the <b>Workspace</b> class implements <b>IRepository2</b>, so each workspace exposes methods like <b>get_Object</b> and <b>get_RootObject</b>.) Similarly, to move to an object within the context of a workspace, start by invoking the <b>get_RootObject</b> method exposed by the workspace object. Then, move from the root object to other objects.</p>
<p>
To reiterate:  Remember that the <b>Workspace</b> class and the <b>Repository</b> class both implement the <b>IRepository2</b> interface. Thus, you can invoke methods like <b>get_Object</b> and <b>get_RootObject</b> either from a Repository or from a workspace. When you invoke one of these methods, the resulting object reference uses the same context as the object on which you called the method. Thus, if you invoke <b>get_Object</b> from a Repository, the resulting object exists within the general context of the open Repository instance, and subsequent calls to that new object's methods will occur within the general context of the open Repository instance. But if you invoke <b>get_Object</b> from a workspace, the resulting object exists within the specific context of that workspace, and subsequent calls to that new object's methods will occur within the specific context of that workspace.</p>
</BODY>
</HTML>
