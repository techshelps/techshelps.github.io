<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAPIMSG.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1953"></a>MAPIMSG.H</h2>
<pre><code>// ----------------------------------------------------------------------------- <br>// MAPIMsg.h: Wrapper class for a mapi message interface pointer. <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br> <br>#ifndef _MAPIMSG_H_ <br>#define _MAPIMSG_H_ <br> <br>#include "ErrCpp.h" <br> <br>// ----------------------------------------------------------------------------- <br>// A wrapper class to contain an interface to a mapi message.  This contains the <br>// error checking and automatic release of the pointer upon destruction.   <br>// <br>// Construct by passing a pointer to a mapi container (could be a folder), a  <br>// count of bytes of the entry id, and the entry id. <br>// <br>// Test FAILED( m_hr) for validity of the object, and use m_pMsg to access <br>// the mapi message interface pointer. <br>// ----------------------------------------------------------------------------- <br> <br>class CMAPIMessage <br>{ <br>public: <br>    // CONSTRUCTOR: Opens the mapi message using a mapi container and does the  <br>    // appropriate error checking.  Releases the object if it is not a MAPI_MESSAGE. <br>    CMAPIMessage(  <br>        LPMAPICONTAINER pMAPIContainer, // Containter to use to open message. <br>        ULONG cb,                       // Count of bytes in Entry Id. <br>        LPENTRYID pEID,                 // Entry Id of message to open. <br>        ULONG ulFlags = 0L);            // MAPI_MODIFY is a likely one to pass in. <br>     <br>    // DESTRUCTOR: Releases MAPI's IMessage interface pointer. <br>    ~CMAPIMessage()     {ULRELEASE( m_pMsg);} <br> <br>    LPMESSAGE   m_pMsg; // Pointer to MAPI's IMessage interface. <br>    CHRESULT    m_hr;   // Contains the actual HRESULT from the OpenEntry(). <br> <br>    // Returns a pointer to the MAPI Message. <br>    operator LPMESSAGE() {return( m_pMsg);} <br> <br>    // Returns a pointer to the MAPI Message for -&gt; operations. <br>    LPMESSAGE operator -&gt;() {return( m_pMsg);} <br>}; <br> <br>// ----------------------------------------------------------------------------- <br>#ifdef _GLOBAL_OBJECTS_ <br>#pragma message("Declaration of global objects for: " __FILE__) <br> <br>#endif //_GLOBAL_OBJECTS_ <br>// ----------------------------------------------------------------------------- <br> <br>#endif // _MAPIMSG_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
