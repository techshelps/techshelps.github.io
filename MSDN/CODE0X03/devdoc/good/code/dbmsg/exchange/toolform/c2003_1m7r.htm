<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FORMFACT.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2007"></a>FORMFACT.CPP</h2>
<pre><code>// --formfact.cpp------------------------------------------------------------- <br>// <br>// Implementation of the FRMFAC class <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// --------------------------------------------------------------------------- <br> <br>#include "stdafx.h" <br>#include "tool.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>#define new DEBUG_NEW <br> <br>#include &lt;ole2.h&gt; <br>#include &lt;initguid.h&gt; <br>#include &lt;mapiform.h&gt; <br>#define INITGUID <br>#include &lt;initguid.h&gt; <br>#include &lt;mapix.h&gt; <br>#include &lt;mapiutil.h&gt; <br>#include &lt;mapinls.h&gt; <br> <br>// Tool form clsid.  This must match the configuration file. <br>DEFINE_GUID(CLSID_MyFormsClsId,  0x861E4010, 0x5030, 0xFEDC, 0x99, 0x12, 0x00, 0x0a, 0x00, 0x38, 0x90, 0x1b); <br> <br>#include "formdata.h" <br>#include "form.h" <br>#include "tooldoc.h" <br>#include "toolform.h" <br> <br>/* <br> *  F o r m   C l a s s   F a c t o r y <br> * <br> *  Because we are an exe server, we must implement a class factory <br> *  so that other viewers (like Exchange) can learn of our clsid <br> * <br> */ <br> <br>//$--FRMFAC::FRMFAC----------------------------------------------------------- <br>// <br>//  Purpose: <br>//      Creates a new form factory <br>// <br>//---------------------------------------------------------------------------- <br>FRMFAC::FRMFAC() <br>{ <br>    m_clsid = CLSID_MyFormsClsId; <br>    m_cRef = 1; <br>} <br> <br>//$--FRMFAC::CreateInstance--------------------------------------------------- <br>// <br>//  Purpose: <br>//      Creates a new form object of the IPM.Form class. <br>// <br>//  Returns: <br>//      HRESULT         S_OK, or one of the following errors: <br>//                      CLASS_E_NOAGGREGATION, E_OUTOFMEMORY, <br>//                      E_NOINTERFACE, E_INVALIDARG. <br>//---------------------------------------------------------------------------- <br>STDMETHODIMP <br>FRMFAC::CreateInstance( <br>            LPUNKNOWN punkOuter,    // Outer object to aggregate with (not supported). <br>            REFIID riid,            // Desired interface on new form object. <br>            LPVOID FAR * ppvObject) // Where to put new form object. <br>{ <br>    FRM *   pfrm = NULL; <br>    HRESULT hr = NOERROR; <br> <br>    // ----- Initialize out parameter and check validity of parameters <br>    if (!ppvObject) <br>    { <br>        hr = ResultFromScode(E_INVALIDARG); <br>        goto Cleanup; <br>    } <br>    *ppvObject = NULL; <br> <br>    if (punkOuter) <br>    { <br>        hr = ResultFromScode(CLASS_E_NOAGGREGATION); <br>        goto Cleanup; <br>    } <br> <br>    // ----- Instantiate new form <br>    TRY <br>    { <br>        pfrm = new FRM(m_clsid); <br>    } <br>    CATCH(CMemoryException, e) <br>    { <br>        hr = ResultFromScode(E_OUTOFMEMORY); <br>        goto Cleanup; <br>    } <br>    END_CATCH <br> <br>    // ----- Get the desired interface <br>    hr = pfrm-&gt;QueryInterface(riid, ppvObject); <br> <br>Cleanup: <br>    if (pfrm) <br>        ReleaseObj(pfrm); <br> <br>    return hr; <br>} <br> <br>//$--FRMFAC::QueryInterface--------------------------------------------------- <br>//   <br>//  Purpose: <br>//      Returns a pointer to the specified interface. <br>// <br>//  Returns: <br>//      HRESULT         Error status. <br>//---------------------------------------------------------------------------- <br>STDMETHODIMP <br>FRMFAC::QueryInterface( <br>            REFIID riid,        // Interface we want. <br>            LPVOID FAR * ppvObj)// Interface we return. <br>{ <br>    if (IsEqualIID(riid, IID_IUnknown) ||  <br>        IsEqualIID(riid, IID_IClassFactory)) <br>    { <br>        *ppvObj = this; <br>        AddRef(); <br>        return NOERROR; <br>    } <br> <br>    *ppvObj = NULL; <br> <br>    return ResultFromScode(E_NOINTERFACE); <br>} <br> <br>//$--FRMFAC::LockServer------------------------------------------------------- <br>// <br>//  Purpose: <br>//       <br>//  Returns: <br>//      HRESULT         S_OK always. <br>//---------------------------------------------------------------------------- <br>STDMETHODIMP <br>FRMFAC::LockServer( <br>            BOOL fLock) // Whether to increment or decrement DLL reference count. <br>{ <br>    return NOERROR; <br>} <br> <br>//$--FRMFAC::AddRef----------------------------------------------------------- <br>// <br>//  Purpose: <br>//      Increments reference count on the form class factory. <br>// <br>//  Returns: <br>//      ULONG           New value of reference count. <br>//---------------------------------------------------------------------------- <br>STDMETHODIMP_(ULONG) <br>FRMFAC::AddRef(void) <br>{ <br>    return ++m_cRef; <br>} <br> <br>//$--FRMFAC::Release---------------------------------------------------------- <br>//   <br>// <br>//  Purpose: <br>//      Decrements reference count on the form class factory. <br>//      If count is decremented to zero, the object is freed. <br>// <br>//  Returns: <br>//      ULONG           New value of reference count. <br>//---------------------------------------------------------------------------- <br>STDMETHODIMP_(ULONG) FRMFAC::Release(void) <br>{ <br>    if (!(--m_cRef)) <br>    { <br>        delete this; <br>        return 0; <br>    } <br>    return m_cRef; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
