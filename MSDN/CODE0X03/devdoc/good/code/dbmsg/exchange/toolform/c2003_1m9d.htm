<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MAINFRM.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2011"></a>MAINFRM.CPP</h2>
<pre><code>// --mainfrm.cpp-------------------------------------------------------------- <br>// <br>//   Implementation of CMainFrame <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// --------------------------------------------------------------------------- <br> <br>#include "stdafx.h" <br>#include "tool.h" <br> <br>#include "mainfrm.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>#define new DEBUG_NEW <br> <br>#define kszAppName"ToolForm" <br>#define kDefaultWindowHSize 600// Form width <br>#define kDefaultWindowVSize 525// Form height <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMainFrame <br> <br>IMPLEMENT_DYNCREATE(CMainFrame, CFrameWnd) <br> <br>BEGIN_MESSAGE_MAP(CMainFrame, CFrameWnd) <br>//{{AFX_MSG_MAP(CMainFrame) <br>// NOTE - the ClassWizard will add and remove mapping macros here. <br>//    DO NOT EDIT what you see in these blocks of generated code ! <br>ON_WM_CREATE() <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// arrays of IDs used to initialize control bars <br> <br>static UINT BASED_CODE indicators[] = <br>{ <br>ID_SEPARATOR,           // status line indicator <br>ID_INDICATOR_CAPS, <br>ID_INDICATOR_NUM, <br>ID_INDICATOR_SCRL, <br>}; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMainFrame construction/destruction <br> <br>CMainFrame::CMainFrame() <br>{ <br>// TODO: add member initialization code here <br>} <br> <br>CMainFrame::~CMainFrame() <br>{ <br>} <br> <br>int CMainFrame::OnCreate(LPCREATESTRUCT lpCreateStruct) <br>{ <br>if (CFrameWnd::OnCreate(lpCreateStruct) == -1) <br>return -1; <br> <br>if (!m_wndStatusBar.Create(this) || <br>!m_wndStatusBar.SetIndicators(indicators, <br>  sizeof(indicators)/sizeof(UINT))) <br>{ <br>TRACE0("Failed to create status bar\n"); <br>return -1;      // fail to create <br>} <br> <br>SetWindowText(kszAppName); <br>SetWindowPos(NULL, 0, 0, kDefaultWindowHSize, kDefaultWindowVSize,  <br>             SWP_NOMOVE | SWP_NOZORDER); <br>     <br>    return 0; <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMainFrame diagnostics <br> <br>#ifdef _DEBUG <br>void CMainFrame::AssertValid() const <br>{ <br>CFrameWnd::AssertValid(); <br>} <br> <br>void CMainFrame::Dump(CDumpContext&amp; dc) const <br>{ <br>CFrameWnd::Dump(dc); <br>} <br> <br>#endif //_DEBUG <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMainFrame message handlers <br> <br>BOOL CMainFrame::PreCreateWindow(CREATESTRUCT&amp; cs)  <br>{ <br>    cs.style &amp;= ~FWS_ADDTOTITLE;    // don't update the title bar <br> <br>return CFrameWnd::PreCreateWindow(cs); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
