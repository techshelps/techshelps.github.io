<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FORMUNK.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2010"></a>FORMUNK.CPP</h2>
<pre><code>// --formunk.cpp-------------------------------------------------------------- <br>// <br>//   Implementation of the FRM IUnknown methods <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// --------------------------------------------------------------------------- <br> <br>#include "stdafx.h" <br>#include "tool.h" <br> <br>#include "formdata.h" <br>#include "form.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>#define new DEBUG_NEW <br> <br>//$--FRM::QueryInterface------------------------------------------------------ <br>// <br>//  Purpose: <br>//      Returns a pointer to the specified interface. <br>// <br>//  Returns: <br>//      HRESULT             Error status. <br>// --------------------------------------------------------------------------- <br>STDMETHODIMP <br>FRM::QueryInterface( <br>         REFIID riid,           // Interface wanted. <br>         LPVOID FAR * ppvObj)   // Interface we return. <br>{ <br>    HRESULT hr = NOERROR; <br> <br>    ASSERT(m_cRef &gt; 0); <br>    if (IsEqualIID(riid, IID_IUnknown)) <br>    { <br>        AddRef(); <br>        *ppvObj = (IMAPIForm *)this; <br>    } <br>    else if (IsEqualIID(riid, IID_IPersistMessage)) <br>    { <br>        AddRef(); <br>        *ppvObj = (IPersistMessage *)this; <br>    } <br>    else if (IsEqualIID(riid, IID_IMAPIForm)) <br>    { <br>        AddRef(); <br>        *ppvObj = (IMAPIForm *)this; <br>    } <br>    else <br>    { <br>        hr = ResultFromScode(E_NOINTERFACE); <br>        *ppvObj = NULL; <br>    } <br>   <br>    return hr; <br>} <br> <br> <br>//$--FRM::AddRef-------------------------------------------------------------- <br>// <br>//  Purpose: <br>//      Increments reference count on the sample extension. <br>// <br>//  Returns: <br>//      ULONG               New value of reference count. <br>// --------------------------------------------------------------------------- <br>STDMETHODIMP_(ULONG) FRM::AddRef(void) <br>{ <br>    ASSERT(m_cRef &gt; 0); <br>    return ++m_cRef; <br>} <br> <br> <br>//$--FRM::Release------------------------------------------------------------- <br>// <br>//  Purpose: <br>//      Decrements reference count on the sample extension.  If count is <br>//      decremented to zero, the object is freed. <br>// <br>//  Returns: <br>//      ULONG               New value of reference count. <br>// --------------------------------------------------------------------------- <br>STDMETHODIMP_(ULONG) FRM::Release(void) <br>{ <br>    ASSERT(m_cRef &gt; 0); <br>    if (!(--m_cRef)) <br>    { <br>        delete this; <br>        return 0; <br>    } <br>    return m_cRef; <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
