<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DIRSYNC.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1771"></a>DIRSYNC.H</h2>
<pre><code>// --dirsync.h------------------------------------------------------------------ <br>// <br>// Header file containing definitions that are used by multiple files of the  <br>// directory synchronization sample code. <br>// <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br>#if !defined(_DIRSYNC_H) <br>#define _DIRSYNC_H <br> <br>#include "dapi.h" <br> <br>// <br>// Names of DAPI Attributes <br>// <br> <br>#define OBJ_CLASS                           "Obj-Class" <br>#define USN_CHANGED                         "USN-Changed" <br>#define USN_CREATED                         "USN-Created" <br>#define IS_DELETED                          "Is-Deleted" <br>#define OBJ_DIST_NAME                       "Obj-Dist-Name" <br>#define COMMON_NAME                         "Common-Name" <br>#define IMPORTED_FROM                       "Imported-From" <br>#define HOME_SERVER                         "Home-Server" <br> <br>#define OBJECT_CLASS_REMOTE                 "Remote" <br>#define OBJECT_CLASS_MAILBOX                "Mailbox" <br> <br>// <br>// Defined Types <br>// <br> <br>//$--DIR_SYNC_OPERATION--------------------------------------------------------- <br>//  Type of operation to be performed on directory. <br>// ----------------------------------------------------------------------------- <br>typedef enum _DirSyncOperation {            // (hungarian = e) <br>    OPERATION_ADD = 0,                      // add a user to the directory <br>    OPERATION_DELETE,                       // delete a user from the directory <br>    OPERATION_MODIFY,                       // modify a user in the directory <br>    OPERATION_LAST                          // all operations are less than this <br>} DIR_SYNC_OPERATION, *LPDIR_SYNC_OPERATION; <br> <br>// <br>// Structures <br>// <br> <br>//$--DIR_SYNC_ATTRIBUTE_INFO---------------------------------------------------- <br>//  Holds information about an attribute being passed back from BIMPORT. <br>//  An array of these structures is passed the the user's fWriteExport()  <br>//  routine.  Each element of this array corresponds to the element of the  <br>//  pEntry array element with the same index. <br>// <br>//  Note: the boolean variable is stored as a DWORD for alignment purposes. <br>// ----------------------------------------------------------------------------- <br>typedef struct _DirSyncAttributeInfo {      // (hungarian = ds) <br>    DWORD   fRequested;                     // TRUE=user requested this attribute <br>    LPTSTR  pszName;                        // the name of this attribute <br>} DIR_SYNC_ATTRIBUTE_INFO, *LPDIR_SYNC_ATTRIBUTE_INFO; <br> <br>//$--REG_VARIABLE--------------------------------------------------------------- <br>//  Structure used to map variables in memory to registry values. <br>//  This is used by routines which read and write data to the registry. <br>// ----------------------------------------------------------------------------- <br>typedef struct _RevVariable {               // (hungarian = rv) <br>    LPTSTR  pszValueName;                   // name of registry value <br>    DWORD   dwType;                         // type of value (e.g. REG_DWORD) <br>    DWORD   cbData;                         // in: size of buffer, out: size of data <br>    LPVOID  pbData;                         // pointer to data buffer <br>} REG_VARIABLE, *LPREG_VARIABLE; <br> <br>// <br>// Function Declarations <br>// <br> <br>//$--HrOpenExport--------------------------------------------------------------- <br>//  Function to do whatever initialization needs to be done before exporting  <br>//  records for directory synchronization.  It should return NOERROR if  <br>//  the initialization was successful and an error otherwise.  If this function  <br>//  returns an error then HrWriteExport() and HrCloseExport() will not be  <br>//  called. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrOpenExport(                       // RETURNS: HRESULT <br>    IN LPTSTR pszExportFile);               // file name from /EXPFILE <br> <br>//$--HrWriteExport-------------------------------------------------------------- <br>//  Function to export a single record for directory synchronization.  It is  <br>//  called repeatedly: once for each record to be exported.  If this function  <br>//  returns an error it will not be called again, and HrCloseExport() will be  <br>//  called once to clean everything up. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrWriteExport(                      // RETURNS: HRESULT <br>    IN PDAPI_ENTRY pEntry,                  // record to export <br>    IN LPDIR_SYNC_ATTRIBUTE_INFO rgdsAttributeInfo, <br>                                            // additional information about pEntry <br>    IN LPTSTR pszDN,                        // distinguished name of this object <br>    IN DIR_SYNC_OPERATION eOperation);      // type of operation to do with object <br> <br>//$--HrCloseExport-------------------------------------------------------------- <br>//  Function to do whatever cleanup needs to be done after exporting records  <br>//  for directory synchronization. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrCloseExport(void);                // RETURNS: HRESULT <br> <br>//$--HrOpenImport--------------------------------------------------------------- <br>//  Function to do whatever initialization needs to be done before importing  <br>//  records for directory synchronization.  It should return NOERROR if  <br>//  the initialization was successful and an error otherwise.  If this function  <br>//  returns an error then HrReadImport() and HrCloseImport() will not be  <br>//  called. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrOpenImport(                       // RETURNS: HRESULT <br>    IN  LPTSTR pszImportFile,               // name of file to import <br>    IN  LPTSTR pszObjectClass,              // default object class <br>    IN  LPTSTR pszSourceStamp,              // string for Imported-From attr <br>    IN  LPTSTR pszBasePoint,                // default base point <br>    IN  LPTSTR pszContainer,                // default container <br>    IN  LPTSTR pszHomeServer);              // default home server for new mailbox <br> <br>//$--HrReadImport--------------------------------------------------------------- <br>//  Function to import a single record for directory synchronization.  It is  <br>//  called repeatedly: once for each record to be imported.  If this function  <br>//  returns an error it will not be called again, and HrCloseImport() will be  <br>//  called once to clean everything up. <br>// <br>//  When there are no more records to import, HrReadImport should return  <br>//  EDK_E_END_OF_FILE. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrReadImport(                       // RETURNS: HRESULT <br>    OUT LPDIR_SYNC_OPERATION peOperation,   // type of operation <br>    OUT PDAPI_ENTRY * ppAttributes,         // list of attribute names <br>    OUT PDAPI_ENTRY * ppValues);            // list of attribute values2365 <br> <br> <br>//$--HrCloseImport-------------------------------------------------------------- <br>//  Function to do whatever cleanup needs to be done after importing records  <br>//  for directory synchronization. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrCloseImport(void);                // RETURNS: HRESULT <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
