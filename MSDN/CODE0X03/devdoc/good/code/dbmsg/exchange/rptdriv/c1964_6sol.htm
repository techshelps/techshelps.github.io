<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>REPORT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1965"></a>REPORT.H</h2>
<pre><code>// --report.h------------------------------------------------------------------- <br>//  <br>//  Header file for module containing report functions. <br>//  <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br>#if !defined(_REPORT_H) <br>#define _REPORT_H <br> <br>#include &lt;wchar.h&gt; <br>#include &lt;tchar.h&gt; <br>#include "retcode.h" <br>#include "edkdebug.h" <br> <br>#ifdef __cplusplus <br>extern "C" { <br>#endif // __cplusplus <br> <br> <br>//$--HrEDKCreateDeliveryReport-------------------------------------------------- <br>//  Create a delivery report. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrEDKCreateDeliveryReport(          // RETURNS: return code <br>    IN LPMAPIFOLDER lpFolder,               // pointer to folder <br>    IN LPMESSAGE lpEnvelope,                // pointer to message envelope <br>    IN LPMESSAGE lpMessage,                 // pointer to message <br>    IN LPADRLIST lpAdrList,                 // pointer to address list <br>    OUT LPMESSAGE *lppReportEnvelope,       // pointer to report envelope <br>    OUT LPMESSAGE *lppReport);              // pointer to report <br> <br>//$--HrEDKCreateReadNotificationReport------------------------------------------ <br>//  Create a read notification report. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrEDKCreateReadNotificationReport(  // RETURNS: return code <br>    IN LPMAPIFOLDER lpFolder,               // pointer to folder <br>    IN LPMESSAGE lpMessage,                 // pointer to message <br>    IN LPTSTR lpszReportText,               // pointer to report text <br>    OUT LPMESSAGE *lppReportEnvelope,       // pointer to report envelope <br>    OUT LPMESSAGE *lppReport);              // pointer to report <br> <br>//$--HrEDKCreateNonReadNotificationReport--------------------------------------- <br>//  Create a non-read notification report. <br>// ----------------------------------------------------------------------------- <br>HRESULT HrEDKCreateNonReadNotificationReport(   // RETURNS: return code <br>    IN LPMAPIFOLDER lpFolder,                   // pointer to folder <br>    IN LPMESSAGE lpMessage,                     // pointer to message <br>    IN LPTSTR lpszReportText,                   // pointer to report text <br>    IN ULONG ulNonReceiptReason,                // non-receipt reason <br>    IN ULONG ulDiscardReason,                   // discard reason <br>    OUT LPMESSAGE *lppReportEnvelope,           // pointer to report envelope <br>    OUT LPMESSAGE *lppReport);                  // pointer to report <br> <br>#ifdef __cplusplus <br>} <br>#endif // __cplusplus <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
