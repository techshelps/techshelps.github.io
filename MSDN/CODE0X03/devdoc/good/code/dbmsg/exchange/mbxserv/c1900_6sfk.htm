<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODLIST.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1910"></a>ODLIST.CPP</h2>
<pre><code>//--odlist.cpp---------------------------------------------------------------- <br>// <br>// implementation of the COwnerDrawListBox class <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>//---------------------------------------------------------------------------- <br> <br>#include "stdafx.h" <br>#include "oditem.h" <br>#include "odlist.h" <br>#include "miscgdi.h"  <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// COwnerDrawListBox <br> <br>IMPLEMENT_DYNCREATE(COwnerDrawListBox, CListBox) <br> <br>BEGIN_MESSAGE_MAP(COwnerDrawListBox, CListBox) <br>    //{{AFX_MSG_MAP(COwnerDrawListBox) <br>    ON_WM_GETDLGCODE() <br>    //}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>COwnerDrawListBox::COwnerDrawListBox () <br>{ <br>    m_nCurSel = -1; <br>} <br> <br>COwnerDrawListBox::~COwnerDrawListBox () <br>{ <br>} <br> <br>int COwnerDrawListBox::SetCurSel (int index) <br>{ <br>    if ((index != LB_ERR) &amp;&amp; (index &lt; GetCount())) <br>    { <br>        COwnerDrawItem *pODI = GetODI (index); <br>        ASSERTERROR (pODI != NULL, "No owner draw item object found"); <br>     <br>        if (pODI-&gt;m_dwFlags &amp; ODI_DISABLED) // can not select disabled item <br>        { <br>            MessageBeep (0); <br>            // check if previous selection is not disabled and if so - find undesabled one <br>            COwnerDrawItem *pODIPrev = GetODI (m_nCurSel); <br>            COwnerDrawItem *pODINext; <br>            int             nCount   = GetCount (); <br>            int             i; <br>                                       <br>            // select first enabled                                       <br>            if (pODIPrev-&gt;m_dwFlags &amp; ODI_DISABLED)           <br>            { <br>                m_nCurSel = -1; <br>                for (i = 0; i &lt; nCount; i++) <br>                { <br>                    pODINext = GetODI (i); <br>                    ASSERTERROR (pODINext != NULL,"No owner draw item found"); <br>                    if (!(pODINext-&gt;m_dwFlags &amp; ODI_DISABLED)) <br>                    { <br>                        m_nCurSel = i; <br>                        break; <br>                    }     <br>                }     <br>            } <br>        }                                     <br>        else <br>        { <br>            m_nCurSel = index; <br>        }     <br>    }     <br>    else <br>    { <br>        m_nCurSel = index; <br>    }                  <br>     <br>    return CListBox::SetCurSel (m_nCurSel); <br>} <br>     <br>void COwnerDrawListBox::EnableString (int index, BOOL bEnable) <br>{ <br>    ASSERTERROR (index != LB_ERR, "Invalid index used"); <br>     <br>    COwnerDrawItem *pODI = GetODI (index); <br>    ASSERTERROR (pODI != NULL, "No owner draw item found"); <br>     <br>    if (bEnable) <br>    { <br>        pODI-&gt;m_dwFlags &amp;= ~(DWORD) ODI_DISABLED; <br>        pODI-&gt;m_crText   = RGB (0, 0, 0); <br>    } <br>    else <br>    { <br>        pODI-&gt;m_dwFlags |= ODI_DISABLED;  <br>        pODI-&gt;m_crText   = GetSysColor (COLOR_GRAYTEXT); <br>    }         <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// COwnerDrawListBox diagnostics <br> <br>#ifdef _DEBUG <br>void COwnerDrawListBox::AssertValid() const <br>{ <br>    CListBox::AssertValid(); <br>} <br> <br>void COwnerDrawListBox::Dump(CDumpContext&amp; dc) const <br>{ <br>    CListBox::Dump(dc); <br>} <br>#endif //_DEBUG <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// COwnerDrawListBox commands <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// OWNER DRAW stuff <br> <br>void COwnerDrawListBox::MeasureItem(LPMEASUREITEMSTRUCT lpMIS) <br>{ <br>    // all items are of fixed size <br>    // must use LBS_OWNERDRAWVARIABLE for this to work <br>    lpMIS-&gt;itemHeight = 20; <br>} <br> <br>void COwnerDrawListBox::DrawItem(LPDRAWITEMSTRUCT lpDIS) <br>{ <br>    ::DrawItem (lpDIS);     <br>} <br> <br>void COwnerDrawListBox::DeleteItem(LPDELETEITEMSTRUCT lpDeleteItemStruct) <br>{ <br>    COwnerDrawItem *pItem = (COwnerDrawItem *)lpDeleteItemStruct-&gt;itemData; <br>    ASSERT_VALID (pItem); <br>     <br>    if (pItem-&gt;m_dwFlags &amp; ODI_DELOBJECT) <br>        delete pItem-&gt;m_pObject; <br>                 <br>    delete pItem;    <br>    SendMessage (LB_SETITEMDATA, lpDeleteItemStruct-&gt;itemID, NULL);   <br>} <br> <br>UINT COwnerDrawListBox::OnGetDlgCode() <br>{ <br>    return (DLGC_WANTMESSAGE | CListBox::OnGetDlgCode()); <br>} <br>                                         <br>#ifdef _DEBUG <br>#define _MSX_INLINE <br>#include "odlist.inl" <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
