<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>MBXSERV.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1904"></a>MBXSERV.CPP</h2>
<pre><code>//--mbxserv.cpp--------------------------------------------------------------- <br>// <br>// implementation of the CMbxServApp class <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>//---------------------------------------------------------------------------- <br> <br>#include "stdafx.h" <br>#include "mbxserv.h" <br>#include "oditem.h" <br>#include "odlist.h" <br>#include "dchkmail.h" <br> <br>#include "initguid.h" <br>#include "mapiguid.h" <br>#include "edkguid.h" <br> <br>#ifdef _DEBUG <br>#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br>#define SERVER_STORE_MASK   0x04 <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMbxServApp <br> <br>BEGIN_MESSAGE_MAP(CMbxServApp, CWinApp) <br>//{{AFX_MSG_MAP(CMbxServApp) <br>// NOTE - the ClassWizard will add and remove mapping macros here. <br>//    DO NOT EDIT what you see in these blocks of generated code! <br>//}}AFX_MSG <br>ON_COMMAND(ID_HELP, CWinApp::OnHelp) <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMbxServApp construction <br> <br>CMbxServApp::CMbxServApp() <br>{ <br>m_lpSession = NULL; <br>m_lpMDB= NULL; <br>m_lpAddrBook= NULL; <br>m_lpGAL= NULL; <br>// Place all significant initialization in InitInstance <br>} <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// The one and only CMbxServApp object <br> <br>CMbxServApp theApp; <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CMbxServApp initialization <br> <br>BOOL CMbxServApp::InitInstance() <br>{ <br>char szMsg[255]; <br> <br>// Standard initialization <br>// If you are not using these features and wish to reduce the size <br>//  of your final executable, you should remove from the following <br>//  the specific initialization routines you do not need. <br> <br>#ifdef _AFXDLL <br>Enable3dControls();// Call this when using MFC in a shared DLL <br>#else <br>Enable3dControlsStatic();// Call this when linking to MFC statically <br>#endif <br> <br>    HRESULT hr; <br>ULONG           ulObjType; <br>    ULONG           cbeid; <br>    LPENTRYID       lpeid = NULL; <br> <br>hr = MAPIInitialize (NULL); <br> <br>    if (FAILED(hr)) <br>    { <br>        AfxMessageBox ("MAPIInitialize() failed"); <br>        return FALSE; <br>    } <br> <br>hr = (HRESULT) MAPILogonEx(  <br>0,  <br>NULL,           // lpszProfileName; let the user pick <br>NULL, <br>MAPI_NO_MAIL | MAPI_NEW_SESSION | MAPI_LOGON_UI,  <br>&amp;m_lpSession); <br> <br>    if (FAILED(hr)) <br>    { <br>        AfxMessageBox ("Could not logon to this profile."); <br>        return FALSE; <br>    } <br> <br>    // Get the entry ID of the Exchange message store. We can't use default store, <br>    // as it may be a PST. <br>ASSERT_IUNKNOWN_PTR (m_lpSession, "Invalid m_lpSession"); <br> <br> <br>    hr = HrOpenExchangePrivateStore(m_lpSession, &amp;m_lpMDB); <br> <br>if (FAILED(hr)) <br>{ <br>sprintf (szMsg, "Could not open exchange message store (0x%x)", hr); <br>AfxMessageBox (szMsg); <br>return FALSE; <br>} <br> <br>    ASSERT_IUNKNOWN_PTR (m_lpMDB, "Invalid m_lpMDB"); <br> <br>hr = m_lpSession-&gt;OpenAddressBook (0, NULL, AB_NO_DIALOG, &amp;m_lpAddrBook); <br> <br>    if (FAILED(hr)) <br>    { <br>        AfxMessageBox ("Could not open address book."); <br>        return FALSE; <br>    } <br> <br>hr = HrFindExchangeGlobalAddressList (m_lpAddrBook, &amp;cbeid, &amp;lpeid); <br> <br>    if (FAILED(hr)) <br>    { <br>        AfxMessageBox ("Could not find exchange global address list."); <br>        return FALSE; <br>    } <br> <br>hr = m_lpSession-&gt;OpenEntry (cbeid, lpeid, NULL, MAPI_BEST_ACCESS, &amp;ulObjType, (LPUNKNOWN FAR *)&amp;m_lpGAL); <br> <br>    if (FAILED(hr)) <br>    { <br>        AfxMessageBox ("Could not open exchange global address list."); <br>        return FALSE; <br>    } <br> <br>    ASSERT_IUNKNOWN_PTR (m_lpGAL, "Invalid m_lpGAL"); <br> <br>CCheckMailDlg dlg; <br>m_pMainWnd = &amp;dlg; <br>dlg.m_lpGAL = m_lpGAL; <br>dlg.m_lpSession = m_lpSession; <br>dlg.m_lpMDB = m_lpMDB; <br>int nResponse = dlg.DoModal(); <br>if (nResponse == IDOK) <br>{ <br>// TODO: Place code here to handle when the dialog is <br>//  dismissed with OK <br>} <br>else if (nResponse == IDCANCEL) <br>{ <br>// TODO: Place code here to handle when the dialog is <br>//  dismissed with Cancel <br>} <br> <br>// Since the dialog has been closed, return FALSE so that we exit the <br>//  application, rather than start the application's message pump. <br>return FALSE; <br>} <br> <br>int CMbxServApp::ExitInstance()  <br>{ <br>if (m_lpSession) <br>{ <br>m_lpSession-&gt;Logoff(0,0,0); <br>ULRELEASE(m_lpSession); <br>} <br> <br>ULRELEASE(m_lpMDB); <br>ULRELEASE(m_lpAddrBook); <br>ULRELEASE(m_lpGAL); <br> <br>MAPIUninitialize(); <br> <br>return CWinApp::ExitInstance(); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
