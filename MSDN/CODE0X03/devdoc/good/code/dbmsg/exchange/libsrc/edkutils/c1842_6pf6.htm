<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>_VSOF.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1842"></a>_VSOF.H</h2>
<pre><code>//--_vsof.h-------------------------------------------------------------------- <br>// <br>// This file contains methods and #define's for implementing an OLE 2.0 <br>// storage stream (as defineed in the OLE 2.0 specs) on top of OS file. <br>// <br>// Copyright 1986-1996.  Microsoft Corporation.  All Rights Reserved. <br>// <br>//------------------------------------------------------------------------------- <br> <br>#ifndef __VSOF_H <br>#define __VSOF_H <br> <br>#define BUFFER_SIZE 4096 <br>#define VIRTUAL_BUFFER_SIZE 16384L <br>#define VBUFF_ENV_NAME "virtual_stream_on_file_buffer_size" <br>#define VSOF_DEFAULT_PREFIX "VSF" <br> <br>#define SET_FILE_POINTER_ERROR 0xffffffff <br> <br>/*IStream Interface ------------------------------------------------ */ <br> <br>//Warning:  This is not multithread safe with respect to clones. <br> <br>#define MAPI_ISTREAM_METHODS(IPURE)\ <br>MAPIMETHOD(Read)\ <br>(THIS_OUT VOID HUGEP *lpv,\ <br>IN ULONGcb,\ <br>OUT ULONG FAR *lpcbRead) IPURE;\ <br>MAPIMETHOD(Write)\ <br>(THIS_IN VOID const HUGEP *lpv,\ <br>IN ULONGcb,\ <br>OUT ULONG FAR *lpcbWritten) IPURE;\ <br>MAPIMETHOD(Seek)\ <br>(THIS_IN LARGE_INTEGERlibMove,\ <br>IN DWORDdwOrigin,\ <br>OUT ULARGE_INTEGER FAR *lplibNewPosition) IPURE;\ <br>MAPIMETHOD(SetSize)\ <br>(THIS_IN ULARGE_INTEGERlibNewSize) IPURE;\ <br>MAPIMETHOD(CopyTo)\ <br>(THIS_IN IStream FAR *lpstm,\ <br>IN ULARGE_INTEGERcb,\ <br>OUT ULARGE_INTEGER FAR *lpcbRead,\ <br>OUT ULARGE_INTEGER FAR *lpcbWritten) IPURE;\ <br>MAPIMETHOD(Commit)\ <br>(THIS_IN DWORDdwCommitFlags) IPURE;\ <br>MAPIMETHOD(Revert)\ <br>(THIS)IPURE;\ <br>MAPIMETHOD(LockRegion)\ <br>(THIS_IN ULARGE_INTEGERlibOffset,\ <br>IN ULARGE_INTEGERcb,\ <br>IN DWORDdwLockType) IPURE;\ <br>MAPIMETHOD(UnlockRegion)\ <br>(THIS_IN ULARGE_INTEGERulibOffset,\ <br>IN ULARGE_INTEGERcb,\ <br>IN DWORDdwLockType) IPURE;\ <br>MAPIMETHOD(Stat)\ <br>(THIS_IN STATSTG FAR *lpstatstg,\ <br>IN DWORDdwStatFlag) IPURE;\ <br>MAPIMETHOD(Clone)\ <br>(THIS_OUT IStream FAR * FAR *lppstm) IPURE;\ <br> <br>/*VSOF Interface -------------------------------------------------- */ <br> <br>#undefINTERFACE <br>#defineINTERFACE struct _VSOF <br>#undefMAPIMETHOD_ <br>#defineMAPIMETHOD_(type, method)MAPIMETHOD_DECLARE(type, method, VSOF_) <br>MAPI_IUNKNOWN_METHODS(IMPL) <br>MAPI_ISTREAM_METHODS(IMPL) <br>#undefMAPIMETHOD_ <br>#defineMAPIMETHOD_(type, method)MAPIMETHOD_TYPEDEF(type, method, VSOF_) <br>MAPI_IUNKNOWN_METHODS(IMPL) <br>MAPI_ISTREAM_METHODS(IMPL) <br>#undefMAPIMETHOD_ <br>#defineMAPIMETHOD_(type, method)STDMETHOD_(type, method) <br> <br>DECLARE_MAPI_INTERFACE(VSOF_) <br>{ <br>BEGIN_INTERFACE <br>MAPI_IUNKNOWN_METHODS(IMPL) <br>MAPI_ISTREAM_METHODS(IMPL) <br>}; <br> <br>//$--_VSOF--------------------------------------------------------------------- <br>// <br>// Virtual Stream On File internal structure. <br>// <br>//----------------------------------------------------------------------------- <br>typedef struct _VSOF <br>{ <br>VSOF_Vtbl FAR *lpVtbl; <br>LONGlcInit; <br>ULONGulFlags; <br>CHARrgchFile[MAX_PATH]; <br>HANDLEhf;         // == INVALID_HANDLE_VALUE if in virutal mode. <br>LPALLOCATEBUFFERlpfnAlloc; <br>LPFREEBUFFERlpfnFree; <br>    DWORD               dwVirtualBufferSize; <br>    ULONG               ulFileSize;     // for virtual mode. <br>    ULONG               ulFilePointer;  // for virtual mode. <br>    LPVOID              lpvVBuff;    //  Virtual buffer.  NULL if not in virtual mode. <br>    struct _VSOF *      lpVSOFOrig;  // Original.  we are a clone if this is non-NULL. <br>BOOL                fDirty;// stream dirty flag <br> <br>} VSOF, FAR * LPVSOF; <br> <br>typedef struct _VSOF *VSOF_HANDLE; <br> <br>DWORD <br>VSOF_SetFilePointer( <br>    VSOF_HANDLE vhFile, <br>    LONG lDistanceToMove, <br>    PLONG lpDistanceToMoveHigh, <br>    DWORD dwMoveMethod <br>    ); <br> <br>BOOL <br>VSOF_SetEndOfFile( <br>    VSOF_HANDLE vhFile <br>    ); <br> <br>BOOL <br>VSOF_FlushFileBuffers( <br>    VSOF_HANDLE vhFile <br>    ); <br> <br>BOOL <br>VSOF_ReadFile( <br>    VSOF_HANDLE vhFile, <br>    LPVOID lpBuffer, <br>    DWORD nNumberOfBytesToRead, <br>    LPDWORD lpNumberOfBytesRead, <br>    LPOVERLAPPED lpOverlapped <br>    ); <br> <br>BOOL <br>VSOF_WriteFile( <br>    VSOF_HANDLE vhFile, <br>    LPCVOID lpBuffer, <br>    DWORD nNumberOfBytesToWrite, <br>    LPDWORD lpNumberOfBytesWritten, <br>    LPOVERLAPPED lpOverlapped <br>    ); <br> <br>DWORD <br>VSOF_GetFileSize( <br>    VSOF_HANDLE vhFile, <br>    LPDWORD lpFileSizeHigh <br>    ); <br> <br>BOOL <br>VSOF_CloseHandle( <br>    VSOF_HANDLE vhObject <br>    ); <br> <br>VSOF_HANDLE <br>VSOF_CreateFile( <br>    LPCSTR lpFileName, <br>    DWORD dwDesiredAccess, <br>    DWORD dwShareMode, <br>    LPSECURITY_ATTRIBUTES lpSecurityAttributes, <br>    DWORD dwCreationDisposition, <br>    DWORD dwFlagsAndAttributes, <br>    HANDLE hTemplateFile <br>    ); <br> <br>BOOL <br>VSOF_DeleteFile( <br>    VSOF_HANDLE vhFile <br>    ); <br> <br>STDMETHODIMP_(VOID) InvalidateVSOF (LPVSOF); <br> <br>//$--VSOF_Vtbl----------------------------------------------------------------- <br>// <br>// Virtual function table for the Virtual Stream On File interface. <br>// <br>//----------------------------------------------------------------------------- <br>const VSOF_Vtbl VtblVSOF = <br>{ <br>VSOF_QueryInterface, <br>VSOF_AddRef, <br>VSOF_Release, <br>VSOF_Read, <br>VSOF_Write, <br>VSOF_Seek, <br>VSOF_SetSize, <br>VSOF_CopyTo, <br>VSOF_Commit, <br>VSOF_Revert, <br>VSOF_LockRegion, <br>VSOF_UnlockRegion, <br>VSOF_Stat, <br>VSOF_Clone <br>}; <br> <br>#endif// __VSOF_H </code></pre>
<p>&nbsp;</p></body>
</HTML>
