<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>UTL_PAS.C</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1849"></a>UTL_PAS.C</h2>
<pre><code>// --UTL_PAS.C------------------------------------------------------------------ <br>// <br>// Get password from the user helper function <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br> <br>#include "edk.h" <br>#include "utl_pas.chk" <br> <br>//$--_HrInputCommandLinePassword--------------------------------------------------------- <br>// <br>//  DESCRIPTION: Input password and echo *'s. <br>// <br>//  INPUT:  dwFlags     --  reserved - must be zero <br>//          cbLength    --  length of buffer/password <br>// <br>//  OUTPUT: pszBuffer   --  buffer to write password into <br>// <br>//  RETURNS:    HRESULT --  NOERROR if no error, <br>//                          E_FAIL if user enters ctrl-c, <br>//                          E_INVALIDARG if bad input <br>// <br>// ----------------------------------------------------------------------------- <br>HRESULT _HrInputCommandLinePassword(// RETURNS: HRESULT <br>IN DWORD dwFlags,// reserved--must be zero <br>IN DWORD cbLength,          // size of the buffer in bytes <br>OUT LPSTR pszBuffer)// buffer to write string into <br>{ <br>    HRESULT     hr          = NOERROR; <br>    LPSTRpsz= pszBuffer; <br> <br>DEBUGPUBLIC("_HrInputCommandLinePassword()\n"); <br> <br>    // check input parameters <br>    hr = CHK__HrInputCommandLinePassword(dwFlags, cbLength, pszBuffer); <br> <br>    if ( FAILED(hr) ) <br>    { <br>        RETURN(hr); <br>    } <br> <br>    for(;;) <br>    { <br>        int ch = _getch(); <br> <br>// Handle Ctrl-C. <br> <br>if (ch == '\003') <br>{ <br>printf("^C"); <br>hr = HR_LOG(E_FAIL); <br>*pszBuffer = 0; <br>break; <br>} <br> <br>// Handle backspace. <br> <br>if (ch == '\b' &amp;&amp; psz &gt; pszBuffer) <br>{ <br>printf( "\b \b" ); <br>psz--; <br>cbLength++; <br>} <br> <br>// Handle normal printable character. <br> <br>if (isprint(ch)) <br>{ <br>        printf ( "*" ); <br>        *psz++ = ch; <br>        cbLength--; <br>} <br> <br>// Handle input termination. <br> <br>        if (ch == '\n' || ch == '\r' || cbLength &lt; 2) <br>        { <br>            *psz = 0; <br>            break; <br>        } <br>    } <br> <br>    printf ( "\n" ); <br> <br>RETURN(hr); <br> <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
