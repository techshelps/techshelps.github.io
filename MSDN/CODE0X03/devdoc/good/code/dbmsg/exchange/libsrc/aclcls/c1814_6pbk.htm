<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>SROWLST.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1820"></a>SROWLST.H</h2>
<pre><code>// --srowlst.h----------------------------------------------------------------- <br>// <br>// Header file for classes CSROWNODE and CSROWLST. <br>//   <br>// Copyright (C) Microsoft Corp,, 1986-1996.  All rights reserved. <br>// <br>//----------------------------------------------------------------------------- <br> <br>#ifndef_SROWLST_H <br>#define _SROWLST_H <br> <br>#include "llmacro.h" <br> <br>// Count of properties supported by the ACL object. <br> <br>#defineC_ACLPROPS3 <br> <br>// Indices of ACL properties in the SRow associated with a rule object. <br> <br>#defineI_MEMBER_ENTRYID0 <br>#defineI_MEMBER_RIGHTS1 <br>#defineI_MEMBER_NAME2 <br> <br>class CSROWNODE// srn <br>{ <br>friend class CIExchangeFolderACLs; <br>friend class CSROWLST; <br> <br>    public: <br> <br>        // constructor &amp; destructor <br> <br>CSROWNODE( <br>INLPSRowlpSRow <br>    ); <br> <br>~CSROWNODE(); <br> <br>protected: <br> <br>CSROWNODE *m_pNxt; <br>CSROWNODE *m_pPrv; <br>SRowm_SRow; <br>}; <br> <br>class CSROWLST// srl <br>{ <br>    public: <br> <br>CSROWLST();     // constructor <br> <br>~CSROWLST();    // destructor <br>         <br>        // standard C++ Get and Set member functions <br> <br>CSROWNODE * GetCurrentNode(VOID); <br> <br>LONG GetCursor(VOID) const; <br> <br>LONG GetNodeCount(VOID) const; <br> <br>LONG SetCursor( <br>INLONGlPos <br>); <br> <br>HRESULT HrInitialize( <br>INLPSRowSetlpRows <br>); <br> <br>HRESULT HrDelete(VOID); <br> <br>HRESULT HrInsert( <br>INLPSRowlpSRow <br>); <br> <br>HRESULT HrRemoveFromLst( <br>OUTCSROWNODE * *ppRemovedNode <br>); <br> <br>HRESULT HrWriteToTable( <br>INLPEXCHANGEMODIFYTABLElpExchTbl <br>); <br> <br>private: <br> <br>ULONGm_cNodes; <br>LONGm_lPos; <br>CSROWNODE *m_pCurNode; <br>CSROWNODE *m_pLstHd; <br>}; <br> <br>// $--CSROWNODE::GetCurrentNode------------------------------------------------ <br>// <br>// DESCRIPTION:Return a ptr to the current node. <br>// <br>// INPUT:   None. <br>// <br>// RETURNS:A ptr to the current node. <br>// <br>//----------------------------------------------------------------------------- <br> <br>inline CSROWNODE * CSROWLST::GetCurrentNode(VOID) <br>{ <br>    return m_pCurNode; <br>} <br> <br>// $--CSROWLST::GetCursor------------------------------------------------------ <br>// <br>// DESCRIPTION:Return the current cursor position. <br>// <br>// INPUT:   None. <br>// <br>// RETURNS:The current cursor position. <br>// <br>//----------------------------------------------------------------------------- <br> <br>inline LONG CSROWLST::GetCursor() const <br>{ <br>    return m_lPos; <br>} <br> <br>// $--CSROWLST::GetNodeCount--------------------------------------------------- <br>// <br>// DESCRIPTION:Return the count of nodes in the list. <br>// <br>// INPUT:   None. <br>// <br>// RETURNS:The count of nodes in the list. <br>// <br>//----------------------------------------------------------------------------- <br> <br>inline LONG CSROWLST::GetNodeCount(VOID) const <br>{ <br>    return m_cNodes; <br>} <br> <br>#endif // _SROWLSTH_ <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
