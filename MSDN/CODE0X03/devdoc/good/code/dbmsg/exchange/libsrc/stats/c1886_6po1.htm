<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>JSWINDOW.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1891"></a>JSWINDOW.H</h2>
<pre><code>// --jswindow.h----------------------------------------------------------------- <br>//  <br>//  Defines Jump Sliding Window object. <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br> <br>#ifndef __jswindow_h <br>#define __jswindow_h <br> <br>#include &lt;windows.h&gt; <br>#include "fifo.h" <br> <br>//$--CJSWindow------------------------------------------------------------------ <br>// Defines the Jump Slide base class. Other kinds of Jump Slide windows <br>// are derived from this class. <br>// ----------------------------------------------------------------------------- <br>class CJSWindow <br>{ <br>public: <br>    CJSWindow (); <br>    virtual ~CJSWindow (); <br>    virtual HRESULT HrReset(IN __int64 liNow, IN __int64 liResolution, IN DWORD dwWindowDuration); <br>    virtual VOID DataPoint(IN __int64 liNow, IN DWORD dwValue) = 0; <br>    virtual HRESULT HrGetValue(IN __int64 liNow, OUT DWORD &amp;dwValue, DWORD &amp;dwFractionCompleteNum, DWORD &amp;dwFractionCompleteDen) = 0; <br> <br>    VOID AdvanceToNow(IN __int64 liNow, OUT DWORD &amp;dwFIFOOut, OUT BOOL &amp;fAdvanced); <br> <br>    __int64 m_liCurrentIntervalTimeStart; <br>    __int64 m_liResolution; <br>    CFIFO m_FIFO; <br>    DWORD m_dwIntervalValue; <br>}; <br> <br> <br>//$--CJSWindowMin--------------------------------------------------------------- <br>// Defines the Jump Slide window that determines the minimum value for a period. <br>// Derived from the CJSWindow Base Class. <br>// ----------------------------------------------------------------------------- <br>class CJSWindowMin : public CJSWindow <br>{ <br>public: <br>    VOID DataPoint(IN __int64 liNow, IN DWORD dwValue); <br>    HRESULT HrGetValue(IN __int64 liNow, OUT DWORD &amp;dwValue, DWORD &amp;dwFractionCompleteNum, OUT DWORD &amp;dwFractionCompleteDen); <br>}; <br> <br> <br>//$--CJSWindowMax--------------------------------------------------------------- <br>// Defines the Jump Slide window that determines the maximum value for a period. <br>// Derived from the CJSWindow Base Class. <br>// ----------------------------------------------------------------------------- <br>class CJSWindowMax : public CJSWindow <br>{ <br>public: <br>    VOID DataPoint(IN __int64 liNow, IN DWORD dwValue); <br>    HRESULT HrGetValue(IN __int64 liNow, OUT DWORD &amp;dwValue, DWORD &amp;dwFractionCompleteNum, DWORD &amp;dwFractionCompleteDen); <br>}; <br> <br> <br>//$--CJSWindowAverage------------------------------------------------------------ <br>// Defines the Jump Slide window that determines the average value for a period. <br>// Derived from the CJSWindow Base Class. <br>// ----------------------------------------------------------------------------- <br>class CJSWindowAverage : public CJSWindow <br>{ <br>public: <br>    HRESULT HrReset(IN __int64 liNow, IN __int64 liResolution, IN DWORD dwWindowDuration); <br>    VOID DataPoint(IN __int64 liNow, IN DWORD dwValue); <br>    HRESULT HrGetValue(IN __int64 liNow, OUT DWORD &amp;dwValue, DWORD &amp;dwFractionCompleteNum, DWORD &amp;dwFractionCompleteDen); <br> <br>private: <br>    DWORD m_dwIntervalTotal; <br>    DWORD m_cIntervalValues; <br>}; <br> <br> <br>//$--CJSWindowTotal-------------------------------------------------------------- <br>// Defines the Jump Slide window that determines the total value for a period. <br>// Derived from the CJSWindow Base Class. <br>// ----------------------------------------------------------------------------- <br>class CJSWindowTotal : public CJSWindow <br>{ <br>public: <br>    HRESULT HrReset(IN __int64 liNow, IN __int64 liResolution, IN DWORD dwWindowDuration); <br>    VOID DataPoint(IN __int64 liNow, IN DWORD dwValue); <br>    HRESULT HrGetValue(IN __int64 liNow, OUT DWORD &amp;dwValue, OUT DWORD &amp;dwFractionCompleteNum, OUT DWORD &amp;dwFractionCompleteDen); <br> <br>private: <br>    DWORD m_dwWindowTotal; <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
