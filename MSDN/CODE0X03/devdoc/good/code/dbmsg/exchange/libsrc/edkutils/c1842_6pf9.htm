<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EDKUTCPP.CPP</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1845"></a>EDKUTCPP.CPP</h2>
<pre><code>// EdkUtCpp.CPP----------------------------------------------------------------- <br>// Implements methods for a class that supplies a list of id's and strings  <br>// which can be found by ID. <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br> <br>#include "edk.h" <br>#include "EdkUtCpp.h" <br> <br>#ifdef _DEBUG <br>#undef THIS_FILE <br>static char BASED_CODE THIS_FILE[] = __FILE__; <br>#endif <br> <br>// ----------------------------------------------------------------------------- <br>// CONSTRUCTOR: Pass in a pointer to an array of IDList and it's number of items. <br>// Use ARRAY_CNT( IDListArray) to get this. <br>// ----------------------------------------------------------------------------- <br> <br>CIDList::CIDList(  <br>    PIDList pIDList,    // Pointer to array of IDList. <br>    UINT nCnt)          // Number of items in the list. <br>{ <br>    m_pIDList = pIDList; <br>    m_nCnt = nCnt; <br>} <br> <br>// ----------------------------------------------------------------------------- <br>// Find an ID in the pIDList and return it's string. <br>// ----------------------------------------------------------------------------- <br> <br>const LPSTR CIDList::Find(  // Returns the string found or a not found message string. <br>    ULONG ulID)             // ID to search for. <br>{ <br>    if( m_pIDList) <br>    { <br>        PIDList pIDList = m_pIDList; <br>        UINT nCnt = m_nCnt; <br>        while( nCnt) <br>        { <br>            if( pIDList-&gt;ulID == ulID) <br>                return( pIDList-&gt;pszValue); // Found the item we were looking for. <br>            pIDList ++; <br>            nCnt --; <br>        } <br>    } <br>         <br>    // NOTE: If you change this format you must also change the declration  <br>    // of m_chNotFound to reflect the maximum size. <br>    sprintf( m_chNotFound, "(ID: 0x%lX not found)", ulID); <br>    return( m_chNotFound); <br>} <br> <br>// ----------------------------------------------------------------------------- </code></pre>
<p>&nbsp;</p></body>
</HTML>
