<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>GWOBJCLS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1795"></a>GWOBJCLS.H</h2>
<pre><code>// --gwobjcls.h--------------------------------------------------------------- <br>// <br>// Class header file for the GWCLEAN class object. <br>// <br>// Copyright (C) Microsoft Corporation 1986-1996,  All Rights Reserved <br> <br>#ifndef _GWOBJCLS_H <br>#define _GWOBJCLS_H <br> <br>// $--CGWClean--------------------------------------------------------------- <br>// <br>// GWCLEAN class defintion.  Main purpose is to avoid lots of global variables <br>// and to make memory de-allocation at program termination simple. <br>// <br>// --------------------------------------------------------------------------- <br> <br>class CGWClean <br>{ <br>public: <br>    // class methods <br>    CGWClean();                     // constructor <br>    ~CGWClean();                    // destructor <br> <br>    // initializes class members <br>    HRESULT CGWClean::HrInitialize( <br>             IN LPTSTR lpProfileName,       // gateway profile name <br>             IN LPTSTR lpPSTName,           // New PST name <br>             IN LPTSTR lpFolderName,        // gateway folder name <br>             IN LPFILETIME lpBeforeTime);   // date/time before which to move messages <br> <br>    HRESULT HrMoveMsgs();               // Moves messages before date/time from GW out folder to new PST out folder <br> <br>private:     <br>    // Additional, helper functions <br>    HRESULT HrCreatePSTFolder();        // Creates new folder in new PST <br>    HRESULT HrCopyGWMessageProps(IN LPENTRYLIST, IN LPENTRYLIST);   // Copies gateway message properties not copied by CopyMessages <br>    HRESULT HrCopyGWAttachProps(IN LPMESSAGE, IN LPMESSAGE);    // Copies gateway attachment properties not copied by CopyMessages <br>    HRESULT HrCreateNewProps(IN LPMESSAGE, IN LPMESSAGE);   // created uncopied properties on new message <br> <br>    // class members <br>    LPTSTR     m_lpPSTName;            // PST to copy to <br>    LPTSTR     m_lpProfileName;        // gateway profile to copy from <br>    LPFILETIME  m_lpBeforeDateTime;     // Remove messages before date and time <br>    LPTSTR     m_lpFolderName;         // Gateway folder to move messages from <br> <br>    // MAPI session variables <br>    LPMAPISESSION m_lpSessGW;           // Session for gateway profile <br>    LPMAPISESSION m_lpSessNew;          // Session for temporary profile <br>    LPMDB         m_lpMDBGateway;       // Gateway message store pointer <br>    LPMDB         m_lpMDBNew;           // PST message store pointer <br>    LPMAPIFOLDER  m_lpFolderFrom;       // Gateway folder <br>    LPMAPIFOLDER  m_lpFolderTo;         // PST folder <br> <br>    // variables for temporary profile created by CreateNewPST() <br>    LPTSTR   m_lpTempProfilePW;         // temporary profile's password <br>    LPTSTR   m_lpTempProfName;          // temporary profile's name <br> <br>    // state variables <br>    BOOL    m_fNewPST;                  // TRUE if PST is created <br>    BOOL    m_fNoMessages;              // TRUE if there were no messages to move <br> <br>}; <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
