<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>FLDPICK.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1923"></a>FLDPICK.H</h2>
<pre><code>//========================================================================= <br>// FldPick.H <br>// <br>// Copyright (C) 1986-1996.  Microsoft Corp.  All Rights Reserved. <br>// <br>// Purpose: <br>//    Definition of CFolderPicker class <br>//========================================================================= <br> <br> <br>extern void WINAPI CreateAndPostMessage(); <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CFolderPicker dialog <br> <br>class CFolderPicker : public CDialog <br>{ <br>// Construction <br>public: <br>CFolderPicker(CWnd* pParent = NULL);   // standard constructor <br> <br>// Dialog Data <br>//{{AFX_DATA(CFolderPicker) <br>enum { IDD = IDD_FOLDERPICKER }; <br>CButtonm_ok; <br>CButtonm_cancel; <br>CTreeCtrlm_TreeCtrl; <br>//}}AFX_DATA <br> <br> <br>BOOL AddTreeViewItems(); <br>HTREEITEM AddOneItem (HTREEITEM hParent, LPSTR szText,HTREEITEM hInsAfter, int iImage, DWORD lparam); <br>STDMETHODIMP TvmtFromRoot(HTREEITEM   hitemParent); <br>STDMETHODIMP TvmtFromFolder(HTREEITEM      hitemParent, LPMAPIFOLDER   pfld); <br>STDMETHODIMP FirstTimeExpand(HTREEITEM  hitem, SMailID*   pMailID); <br>STDMETHODIMP CreateMailID(ULONG ulType, ULONG cbEntryID,LPENTRYID pEntryID,  <br>LPCTSTR lpszDisplayName, SMailID**  ppob ); <br>STDMETHODIMP OpenFolder(SMailID *pMailID, LPMAPIFOLDER *lppFld); <br>  <br>STDMETHODIMP GetSelectedFolder(LPMAPIFOLDER*  ppfld); <br>STDMETHODIMP AddRows(HTREEITEM   hitemParent, LPMAPITABLE pmt); <br>INT MapTypeToExchangeImageListIndex(ULONG ulType, INT*  piSelectedImage); <br>    <br>// Overrides <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CFolderPicker) <br>protected: <br>virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>protected: <br> <br>// Generated message map functions <br>//{{AFX_MSG(CFolderPicker) <br>virtual void OnOK(); <br>virtual void OnCancel(); <br>virtual BOOL OnInitDialog(); <br>afx_msg void OnItemexpandingTreeview(NMHDR* pNMHDR, LRESULT* pResult); <br>afx_msg void OnGetdispinfoTreeview(NMHDR* pNMHDR, LRESULT* pResult); <br>afx_msg void OnSelchangedTreeview(NMHDR* pNMHDR, LRESULT* pResult); <br>afx_msg void OnDeleteitemTreeview(NMHDR* pNMHDR, LRESULT* pResult); <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br>}; </code></pre>
<p>&nbsp;</p></body>
</HTML>
