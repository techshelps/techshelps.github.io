<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TASKS.BAS</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1971"></a>TASKS.BAS</h2>
<pre><code>Attribute VB_Name = "TaskObjectRoutines" <br>Option Explicit <br> <br>Function bCreate8KRecurTask(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br>Dim dt As Date <br>Dim szText As String <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Get the 8k of text <br>szText = szGetMuchText(8192) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(RECURRING_TASKS) <br> <br>For i = 1 To nNumber <br>    dt = DateAdd("d", i, Now()) <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreate8KRecurTask " &amp; Str$(i) &amp; " " &amp; Now() &amp; szText), Notes:="Notes", _ <br>        Priority:=CLng((67 * 2 ^ 8) And (51)), _ <br>        AccessActual:=saclOwner, _ <br>        AlarmAmount:=CLng(10), AlarmTypeUnit:=CLng(0), BusyType:=CLng(1), BeforeEnd:=True, ring:=True, _ <br>        AmountActualEffort:=CLng(10), TypeUnitActualEffort:=CLng(2), AmountEstimatedEffort:=CLng(5), TypeUnitEstimatedEffort:=CLng(2), _ <br>        AmountStartWork:=CLng(2), TypeUnitStartWork:=CLng(2), _ <br>        Billing:="Billing", Mileage:="Mileage", Role:="Role", _ <br>        IsTaskAutoDone:=True, PercentCompleted:=CLng(55) <br>    objItem.SetProperties RecurringType:=trecurWeekly, WeekInterval:=CLng(1), DayOfWeekMask:=CLng(4), DayOfWeekStart:=CLng(0), _ <br>        StartRecurringDate:=lConvertToJohnnyDate(dt), _ <br>        StartRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 1, dt)), _ <br>        EndRecurringDate:=lConvertToJohnnyDate(DateAdd("yyyy", 1, dt)), _ <br>        EndRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 2, dt)) <br> <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>Set objTable = Nothing <br> <br>bCreate8KRecurTask = True <br> <br>End Function <br> <br>'**************************** <br>' <br>' bCreateRecurTaskAllFields - Creates Recurring Task while setting all fields <br>' <br>'**************************** <br>Function bCreateRecurTaskAllFields(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br>Dim dt As Date <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(RECURRING_TASKS) <br> <br>For i = 1 To nNumber <br>    dt = DateAdd("d", i, Now()) <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreateRecurTaskAllFields " &amp; Str$(i) &amp; " " &amp; Now()), Notes:="Notes", _ <br>        Priority:=CLng((67 * 2 ^ 8) And (51)), _ <br>        AccessActual:=saclOwner, _ <br>        AlarmAmount:=CLng(10), AlarmTypeUnit:=CLng(0), BusyType:=CLng(1), BeforeEnd:=True, ring:=True, _ <br>        AmountActualEffort:=CLng(10), TypeUnitActualEffort:=CLng(2), AmountEstimatedEffort:=CLng(5), TypeUnitEstimatedEffort:=CLng(2), _ <br>        AmountStartWork:=CLng(2), TypeUnitStartWork:=CLng(2), _ <br>        Billing:="Billing", Mileage:="Mileage", Role:="Role", _ <br>        IsTaskAutoDone:=True, PercentCompleted:=CLng(55) <br>    objItem.SetProperties RecurringType:=trecurWeekly, WeekInterval:=CLng(1), DayOfWeekMask:=CLng(4), DayOfWeekStart:=CLng(0), _ <br>        StartRecurringDate:=lConvertToJohnnyDate(dt), _ <br>        StartRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 1, dt)), _ <br>        EndRecurringDate:=lConvertToJohnnyDate(DateAdd("yyyy", 1, dt)), _ <br>        EndRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 2, dt)) <br> <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>Set objTable = Nothing <br> <br>bCreateRecurTaskAllFields = True <br> <br>End Function <br> <br>'******************************************* <br>' <br>'Creates a weekly recurring task with no end date <br>' <br>'******************************************* <br>Function bCreateSimpleRecurTask(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br>Dim dt As Date <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(RECURRING_TASKS) <br> <br>For i = 1 To nNumber <br>    Set objItem = objTable.New <br>    dt = DateAdd("d", i, Now()) <br>    objItem.SetProperties Text:=("OLE: bCreateSimpleRecurTask " &amp; Str$(i) &amp; " " &amp; Now()), Notes:="Notes", _ <br>        Start:=dt, End:=(DateAdd("h", 1, dt)), _ <br>        RecurringType:=trecurWeekly, WeekInterval:=CLng(1), DayOfWeekMask:=CLng(4), DayOfWeekStart:=CLng(0), _ <br>        StartRecurringDate:=lConvertToJohnnyDate(dt), _ <br>        StartRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 1, dt)), _ <br>        EndRecurringTime:=lConvertToJohnnyTime(DateAdd("h", 2, dt)) <br> <br>'        EndRecurringDate:=lConvertToJohnnyDate(DateAdd("yyyy", 1, dt)), _ <br> <br>    objItem.Flush <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>bCreateSimpleRecurTask = True <br> <br>End Function <br> <br>'****************************** <br>' <br>' Calls all scripts in this module <br>' <br>'****************************** <br>Function CallAllTaskScripts() <br> <br>Set gobjBase = objSetBaseObject <br> <br>If gobjBase.LoggedOn = False Then <br>    gobjBase.Logon profileName:="ryanw24" <br>End If <br> <br>Set gobjSched = gobjBase.ScheduleSelected <br>gobjSched.Activate <br> <br>'Create a simple task (desc. and notes) <br>'    bCreateSimpleTask (1) <br> <br>'Create a task with all fields filled (except contact and role) <br>'    bCreateTaskAllFields (1) <br>     <br>'Create an 8K Task <br>'    bCreate8KTask (1) <br> <br>'Create simple recurring task <br>    bCreateSimpleRecurTask (1) <br> <br>'Create recurring task with all fields filled <br>    bCreateRecurTaskAllFields (1) <br> <br>'Create an 8K task <br>    bCreate8KRecurTask (1) <br> <br>Set gobjSched = Nothing <br>Set gobjBase = Nothing <br> <br>End Function <br> <br> <br> <br> <br>Function bCreateSimpleTask(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(SINGLE_TASKS) <br> <br>For i = 1 To nNumber <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreateSimpleTask " &amp; Str$(i) &amp; " " &amp; Now()), Notes:="Notes" <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>bCreateSimpleTask = True <br> <br>End Function <br> <br> <br>Function bCreate8KTask(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br>Dim szText As String <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Get the 8k of text <br>szText = szGetMuchText(8192) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(SINGLE_TASKS) <br> <br>For i = 1 To nNumber <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreate8KTask " &amp; Str$(i) &amp; " " &amp; Now() &amp; szText), Notes:="Notes", _ <br>        Priority:=CLng((67 * 2 ^ 8) And (51)), _ <br>        AlarmAmount:=CLng(10), AlarmTypeUnit:=CLng(0), BusyType:=CLng(1), BeforeEnd:=True, ring:=True, _ <br>        Start:=(DateAdd("d", i, Now())), End:=(DateAdd("d", i + 1, Now())), _ <br>        AmountActualEffort:=CLng(10), TypeUnitActualEffort:=CLng(2), _ <br>        AmountEstimatedEffort:=CLng(5), TypeUnitEstimatedEffort:=CLng(2), _ <br>        AmountStartWork:=CLng(2), TypeUnitStartWork:=CLng(2), _ <br>        Billing:="Billing", Mileage:="Mileage", Role:="Role", _ <br>        IsTaskAutoDone:=True, PercentCompleted:=CLng(55) <br> <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>Set objTable = Nothing <br> <br>bCreate8KTask = True <br> <br>End Function <br> <br>Function bCreateTaskAllFields(nNumber As Integer) As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br>Dim i As Integer <br> <br>'Check to make sure nNumber was set <br>nNumber = IIf(nNumber = 0, 1, nNumber) <br> <br>'Create some simple tasks <br> <br>Set objTable = objGetTable(SINGLE_TASKS) <br> <br>For i = 1 To nNumber <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreateTaskAllFields " &amp; Now()), Notes:="Notes", _ <br>        Priority:=CLng((67 * 2 ^ 8) And (51)), _ <br>        AccessActual:=saclOwner, _ <br>        AlarmAmount:=CLng(10), AlarmTypeUnit:=CLng(0), BusyType:=CLng(1), BeforeEnd:=True, ring:=True, _ <br>        Start:=DateAdd("d", i, Now()), End:=DateAdd("d", i + 1, Now()), _ <br>        AmountActualEffort:=CLng(10), TypeUnitActualEffort:=CLng(2), _ <br>        AmountEstimatedEffort:=CLng(5), TypeUnitEstimatedEffort:=CLng(2), _ <br>        AmountStartWork:=CLng(2), TypeUnitStartWork:=CLng(2), _ <br>        Billing:="Billing", Mileage:="Mileage", Role:="Role", _ <br>        IsTaskAutoDone:=True, PercentCompleted:=CLng(55) <br> <br>    Set objItem = Nothing <br>    DoEvents <br>Next i <br> <br>Set objTable = Nothing <br> <br>bCreateTaskAllFields = True <br> <br>End Function <br> <br>Function UETest() As Boolean <br>Dim objTable As Object <br>Dim objItem As Object <br> <br>'Create a Sched+ object <br>    Set gobjBase = CreateObject("Schedule+.Application") <br> <br>'Find out if we're logged on, if not use a profile <br>    If gobjBase.LoggedOn = False Then <br>        gobjBase.Logon profileName:="ryanw24" <br>    End If <br> <br>'Get the handle for the selected schedule and activate it's window <br>    Set gobjSched = gobjBase.ScheduleSelected <br>    gobjSched.Activate <br> <br>'Create a simple task <br> <br>    'Get the tasks table <br>    Set objTable = gobjSched.SingleTasks <br> <br>    'Create a new item <br>    Set objItem = objTable.New <br>    objItem.SetProperties Text:=("OLE: bCreateSimpleTask " &amp; Now()), Notes:="Notes" <br>    Set objItem = Nothing <br> <br>'Release Objects and log off <br>    Set objTable = Nothing <br>    Set gobjSched = Nothing <br>    gobjBase.Logoff <br>    Set gobjBase = Nothing <br>End Function <br> <br> <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
