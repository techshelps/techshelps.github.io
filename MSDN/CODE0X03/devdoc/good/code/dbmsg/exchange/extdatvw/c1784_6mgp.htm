<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRVALARY.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1789"></a>PRVALARY.H</h2>
<pre><code>// PrValAry.H ------------------------------------------------------------------ <br>// Declaration of a structure and set of functions that maintain a MAPI <br>// allocated array of property values. <br>// <br>// Copyright (C) Microsoft Corp. 1986-1996.  All Rights Reserved. <br>// ----------------------------------------------------------------------------- <br> <br>#ifndef __PRVALARY_H__ <br>#define __PRVALARY_H__ <br> <br>// ----------------------------------------------------------------------------- <br> <br>#ifdef THIS <br>#undef THIS <br>#define THIS    // Documents a parameter type. <br>#endif <br> <br>// ----------------------------------------------------------------------------- <br> <br>typedef struct <br>{ <br>    ULONG           cExpandAmt; // Expand array by this ammount when full. <br>    ULONG           cTotal;     // Current array total. <br>    ULONG           cMax;       // Current maximum array will hold. <br>    LPSPropValue    lpPVOrig;   // Original MAPI allocated array. <br>    LPSPropValue    lpPropVal;  // Actual array without data unless it equals lpPVOrig. <br>} PropValArray, *LPPropValArray; <br> <br>// ----------------------------------------------------------------------------- <br> <br>HRESULT PVA_HrInit( <br>    THIS LPPropValArray pva,          // Uninitialized structure to be initialized. <br>    IN   ULONG          cExpandAmt,   // Amount to expand array by when it gets full. <br>    IN   ULONG          cProps,       // Count of properties in array. <br>    IN   LPSPropValue   lpPropVal);   // A MAPI allocated array of properties, or NULL. <br> <br>void PVA_Destroy( <br>    THIS LPPropValArray pva);         // Structure to be destroyed <br> <br>HRESULT PVA_HrInsert( <br>    THIS LPPropValArray pva,          // Array to manipulate <br>    IN   ULONG          iProp,        // Index of insertion point. <br>    IN   LPSPropValue   lppPropVal);  // Property value to insert. <br> <br>HRESULT PVA_HrModify( <br>    THIS LPPropValArray pva,          // Array to manipulate <br>    IN   ULONG          iProp,        // Index of insertion point. <br>    IN   LPSPropValue   lpPropVal);   // Property value to insert. <br> <br>HRESULT PVA_HrDelete( <br>    THIS LPPropValArray pva,          // Array to manipulate <br>    IN   ULONG          iProp);       // Index of property to delete. <br> <br>// ----------------------------------------------------------------------------- <br> <br>#endif // __PRVALARY_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
