<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>BITARRAY.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2313"></a>BITARRAY.H</h2>
<pre><code>//-------------------------------------------------------------------- <br>// Microsoft OLE DB Sample Provider <br>// (C) Copyright 1994 - 1996 Microsoft Corporation.  All Rights Reserved. <br>// <br>// @doc <br>// <br>// @module BITARRAY.H | Class Definitions for Bitarray Class <br>// <br>// <br>#ifndef _BITARRAY_H_ <br>#define _BITARRAY_H_ <br> <br>// Forward Declaration <br>class FAR CBitArray; <br>typedef CBitArray FAR *LPBITARRAY; <br> <br> <br>//-------------------------------------------------------------------- <br>// @class Allocates and manages a bit array through various methods  <br>// defined in the class <br>//  <br>// @hungarian bits or pbits <br>// <br>class FAR CBitArray <br>{ <br>private://@access private <br>//@cmember Count of Slots <br>ULONG    m_cslotCurrent; <br>//@cmember Maximum number of pages  <br>ULONG    m_cPageMax; <br>//@cmember Current number of pages <br>ULONG    m_cPageCurrent; <br>//@cmember Number of bytes per page <br>ULONG    m_cbPage; <br>//@cmember Mask buffer <br>BYTE     m_rgbBitMask[8]; <br>//@cmember Bit Array <br>BYTE     *m_rgbBit; <br> <br> <br>public://@access public <br>//@cmember Class constructor <br>CBitArray( void ); <br>//@cmember Class destructor <br>~CBitArray( void ); <br>//@cmember Initialization method <br>STDMETHODIMP FInit(ULONG cslotMax, ULONG cbPage); <br>//@cmember Set a range of slots <br>STDMETHODIMP SetSlots(ULONG islotFirst, ULONG islotLast); <br>//@cmember Reset a range of slots <br>STDMETHODIMP ResetSlots(ULONG islotFirst, ULONG islotLast); <br>//@cmember Reset all slots <br>VOID ResetAllSlots(void); <br>//@cmember Check if any bits are set <br>STDMETHODIMP ArrayEmpty(void); <br>//@cmember Check the status of a particular bit <br>STDMETHODIMP IsSlotSet(ULONG islot); <br>//@cmember Find the first set bit in a range of bits <br>STDMETHODIMP FindSet(ULONG islotStart, ULONG islotLimit, ULONG* pislot); <br> <br>}; <br> <br>#endif <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
