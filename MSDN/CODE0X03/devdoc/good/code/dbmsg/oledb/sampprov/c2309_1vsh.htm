<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DBPROP.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2321"></a>DBPROP.CPP</h2>
<pre><code>//-------------------------------------------------------------------- <br>// Microsoft OLE DB Sample Provider <br>// (C) Copyright 1994 - 1996 Microsoft Corporation.  All Rights Reserved. <br>// <br>// @doc <br>// <br>// @module DBPROP.CPP | IDBProperties and IDBInfo interface implementations <br>// <br>// <br> <br>// Includes ------------------------------------------------------------------ <br>#include "headers.h" <br> <br>// Code ---------------------------------------------------------------------- <br> <br>//  IDBInfo specific interface methods <br>// CImpIDBInfo::GetKeywords  -------------------------------------------- <br>// <br>// @mfunc Returns information about keywords used in text commands <br>// <br>// @rdesc HRESULT <br>//      @flag E_INVALIDARG  | ppwszKeywords was NULL <br>//      @flag E_NOTIMPL| this method is not implemented <br>// <br>STDMETHODIMP    CImpIDBInfo::GetKeywords <br>    ( <br>    LPWSTR*ppwszKeywords <br>    ) <br>{ <br>    // check params <br>    if (NULL == ppwszKeywords) <br>return ResultFromScode( E_INVALIDARG ); <br> <br>    // we don't implement this method, fail gracefully <br>    *ppwszKeywords= NULL; <br> <br>    return ResultFromScode( E_NOTIMPL ); <br>} <br> <br>// CImpIDBInfo::GetLiteralInfo  ----------------------------------------- <br>// <br>// @mfunc Returns information about literals used in text command <br>// <br>// @rdesc HRESULT <br>//      @flag E_INVALIDARG  | cLiterals not equal to 9 and rgLiterals was NULL or <br>//| pcLiteralInfo, prgLiteralInfo, or ppCharBuffer was NULL <br>//      @flag E_NOTIMPL| this method is not implemented <br>// <br>STDMETHODIMP    CImpIDBInfo::GetLiteralInfo <br>    ( <br>    ULONG           cLiterals,      //@parm IN | Number of literals being asked about <br>const DBLITERAL rgLiterals[],   //@parm IN | Array of literals about which to return <br>                        //           information <br>ULONG*          pcLiteralInfo,  //@parm OUT | Number of literals for which info is <br>                            //            returned <br>DBLITERALINFO** prgLiteralInfo, //@parm OUT | Array of info structures <br>WCHAR**         ppCharBuffer    //@parm OUT | Buffer for characters <br>    ) <br>{ <br>    // check params <br>    if ((cLiterals != 0) &amp;&amp; (rgLiterals == NULL)) <br>        return ResultFromScode( E_INVALIDARG ); <br> <br>    if (!pcLiteralInfo || !prgLiteralInfo || !ppCharBuffer) <br>        return ResultFromScode( E_INVALIDARG ); <br>     <br>    // we don't implement this method, fail gracefully <br>    *pcLiteralInfo  = 0; <br>    *prgLiteralInfo = NULL; <br>    *ppCharBuffer   = NULL; <br> <br>    return ResultFromScode( E_NOTIMPL ); <br>} <br> <br> <br> <br>//  IDBProperties specific interface methods <br> <br>// CImpIDBProperties::GetPropertyInfo  ----------------------------------------- <br>// <br>// @mfunc Returns information about rowset and data source properties supported <br>// by the provider <br>// <br>// @rdesc HRESULT <br>//      @flag S_OK          | The method succeeded <br>//      @flag E_INVALIDARG  | pcPropertyInfo or prgPropertyInfo was NULL <br>//      @flag E_OUTOFMEMORY | Out of memory <br>// <br>STDMETHODIMP    CImpIDBProperties::GetPropertyInfo <br>    ( <br>    ULONGcPropertySets,//@parm IN  | Number of properties being asked about <br>    const DBPROPIDSETrgPropertySets[],//@parm IN  | Array of cPropertySets properties about <br>                                //            which to return information <br>    ULONG*pcPropertyInfoSets,//@parm OUT | Number of properties for which information <br>                                    //            is being returned <br>    DBPROPINFOSET**prgPropertyInfoSets,//@parm OUT | Buffer containing default values returned <br>WCHAR**ppDescBuffer//@parm OUT| Buffer containing property descriptions <br>    ) <br>{ <br>    assert( m_pObj ); <br>    assert( m_pObj-&gt;m_pUtilProp ); <br> <br>    // just pass this call on to the utility object that manages our properties <br>    return m_pObj-&gt;m_pUtilProp-&gt;GetPropertyInfo(  <br>cPropertySets,  <br>rgPropertySets, <br>pcPropertyInfoSets,  <br>prgPropertyInfoSets, <br>ppDescBuffer); <br>} <br> <br> <br>// IDBProperties::GetProperties ---------------------------------------------------- <br>// <br>// @mfunc Returns current settings of all properties in the DBPROPFLAGS_DATASOURCE  <br>//property group <br>// <br>// @rdesc HRESULT <br>//      @flag S_OK          | The method succeeded <br>//      @flag E_INVALIDARG  | pcProperties or prgPropertyInfo was NULL <br>//      @flag E_OUTOFMEMORY | Out of memory <br>// <br>STDMETHODIMP CImpIDBProperties::GetProperties <br>    ( <br>    ULONGcPropertySets,//@parm IN | count of restiction guids <br>const DBPROPIDSETrgPropertySets[],//@parm IN | restriction guids <br>ULONG*              pcProperties,//@parm OUT | count of properties returned <br>DBPROPSET**prgProperties//@parm OUT | property information returned <br>    ) <br>{ <br>    assert( m_pObj ); <br>    assert( m_pObj-&gt;m_pUtilProp ); <br> <br>    // just pass this call on to the utility object that manages our properties <br>    return m_pObj-&gt;m_pUtilProp-&gt;GetProperties(  <br>cPropertySets,  <br>rgPropertySets, <br>pcProperties,  <br>prgProperties ); <br>} <br> <br> <br>// CImpIDBProperties::SetProperties  -------------------------------------------- <br>// <br>// @mfunc Set properties in the DBPROPFLAGS_DATASOURCE property group <br>// <br>// @rdesc HRESULT <br>//      @flag E_INVALIDARG  | cProperties was not equal to 0 and rgProperties was NULL <br>//      @flag E_NOTIMPL| this method is not implemented <br>// <br>STDMETHODIMP    CImpIDBProperties::SetProperties <br>    ( <br>    ULONGcProperties, <br>DBPROPSETrgProperties[] <br>) <br>{ <br>    assert( m_pObj ); <br>    assert( m_pObj-&gt;m_pUtilProp ); <br> <br>    // just pass this call on to the utility object that manages our properties <br>    return m_pObj-&gt;m_pUtilProp-&gt;SetProperties(  <br>cProperties,  <br>rgProperties); <br>} <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
