<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ASSERTS.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2311"></a>ASSERTS.H</h2>
<pre><code>//-------------------------------------------------------------------- <br>// Microsoft OLE DB Sample Provider <br>// (C) Copyright 1994 - 1996 Microsoft Corporation.  All Rights Reserved. <br>// <br>// @doc <br>// <br>// @module ASSERTS.H | Assertion Routines <br>// <br>// <br>#ifndef _ASSERTS_H_ <br>#define _ASSERTS_H_ <br> <br>//----------------------------------------------------------------------------- <br>// Global function prototypes -- helper stuff <br>//----------------------------------------------------------------------------- <br> <br>// The assert and trace macros below calls these. <br>void OLEDB_Assert(LPSTR expression, LPSTR filename, long linenum); <br> <br>void OLEDB_Trace(const char* format, ...); <br> <br>//----------------------------------------------------------------------------- <br>// Debugging macros <br>//----------------------------------------------------------------------------- <br> <br>// Ensure "DEBUG" is set if "_DEBUG" is set. <br>#ifdef _DEBUG <br># ifndef DEBUG <br>#  define DEBUG 1 <br># endif <br>#endif <br> <br>// Ensure no previous versions of our macros. <br>#ifdef  assert <br># undef assert <br>#endif <br>#ifdef  Assert <br># undef Assert <br>#endif <br>#ifdef  ASSERT <br># undef ASSERT <br>#endif <br>#ifdef  TRACE <br># undef TRACE <br>#endif <br> <br> <br>#ifdef DEBUG <br># define assert(x) { if ( ! (x) ) OLEDB_Assert( #x, __FILE__, __LINE__ ); } <br># define Assert(x) assert(x) <br># define ASSERT(x) assert(x) <br># define VERIFY(x) assert(x) <br># define TRACE  OLEDB_Trace <br># define DEBUGCODE(p) p <br>#else// DEBUG <br># define assert(x)  ((void)0) <br># define Assert(x)  ((void)0) <br># define ASSERT(x)  ((void)0) <br># define VERIFY(x)  ((void)(x)) <br># define TRACE  OLEDB_Trace <br>  inline void OLEDB_Trace( const char *format, ... ) { /* do nothing */ } <br># define DEBUGCODE(p) <br>#endif// DEBUG <br> <br>#endif <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
