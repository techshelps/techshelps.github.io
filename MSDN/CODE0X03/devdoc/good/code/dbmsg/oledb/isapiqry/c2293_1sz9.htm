<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ISAPIQRY.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2295"></a>ISAPIQRY.CPP</h2>
<pre><code>//-------------------------------------------------------------------- <br>// Microsoft OLE DB ISAPI Sample <br>// Copyight(c) 1996 Microsoft Corporation.  All Rights Reserved. <br>// <br>// @doc <br>// <br>// @module ISAPIQRY.CPP | Internet Server Extention. Created by VC++ 4.1  <br>//             ISAPI extention wizard. This class is used by the MFC file <br>//             ISAPI.cpp. Standard IS calls are mapped to this class.  <br>// <br>// @rev 1 | 06-11-96 | Created <br>// <br> <br> <br>//----------------------------------------------------------------------------- <br>// Includes  <br>//----------------------------------------------------------------------------- <br>//#include &lt;afx.h&gt; <br>#include &lt;afxwin.h&gt; <br>#include &lt;afxisapi.h&gt; <br>#include "resource.h" <br>#include "ISAPIQRY.h" <br> <br>//Headers needed to run OLE DB DO <br>//Note : #define DBINITCONSTANTS is not present <br>#include &lt;afxole.h&gt; <br>#include &lt;iostream.h&gt; <br>#include &lt;assert.h&gt; <br>#include &lt;oledb.h&gt; <br>#include &lt;oledberr.h&gt; <br>#include "DOclient.h"   //Data Objects Client Header File <br> <br>//----------------------------------------------------------------------------- <br>// Externals  <br>//----------------------------------------------------------------------------- <br> <br>extern  g_pIMalloc;                             //Global memory allocator    <br> <br>TCHAR szTitle[] = _T("OLE DB - Internet Demo (Results)"); <br> <br>// command-parsing map <br>BEGIN_PARSE_MAP(CIsapiqryExtension, CHttpServer) <br>    ON_PARSE_COMMAND(MainFunction, CIsapiqryExtension, ITS_PSTR ITS_PSTR ITS_PSTR ITS_PSTR) <br>ON_PARSE_COMMAND_PARAMS ("DSN=~ UserName=~ Password=~ SQL=~") <br>DEFAULT_PARSE_COMMAND(MainFunction, CIsapiqryExtension) <br>END_PARSE_MAP(CIsapiqryExtension) <br> <br> <br> <br>CIsapiqryExtension theExtension; <br> <br> <br>//----------------------------------------------------------------------------- <br>// CIsapiqryExtension implementation <br> <br>CIsapiqryExtension::CIsapiqryExtension() <br>{ <br>    <br>} <br> <br>CIsapiqryExtension::~CIsapiqryExtension() <br>{ <br>} <br> <br> <br>LPCTSTR CIsapiqryExtension::GetTitle (void) const <br>{ <br>   return szTitle; <br>} <br> <br>BOOL CIsapiqryExtension::GetExtensionVersion(HSE_VERSION_INFO* pVer) <br>{ <br>// Call default implementation for initialization <br>CHttpServer::GetExtensionVersion(pVer); <br> <br>// Load description string <br>TCHAR sz[HSE_MAX_EXT_DLL_NAME_LEN+1]; <br>ISAPIVERIFY(::LoadString(AfxGetResourceHandle(), <br>IDS_SERVER, sz, HSE_MAX_EXT_DLL_NAME_LEN)); <br>_tcscpy(pVer-&gt;lpszExtensionDesc, sz); <br>return TRUE; <br>} <br> <br> <br>//----------------------------------------------------------------------------------- <br>// CFirstExtension::MainFunction <br>// <br>// @mfunc void| MainFunction | All the code functions are called from here.  <br>//                1. Initialize  DataObjects                        <br>//                2. Set the SQL command <br>//                3. etc. <br>// <br>// @rdesc NONE <br>//         <br>//----------------------------------------------------------------------------------- <br>void CIsapiqryExtension::MainFunction <br>      ( <br>   CHttpServerContext* pCtxt,     //@param IN | Place where output is directed    <br>   LPCSTR pstrDSN,                //@param IN | DSN connection name <br>   LPCSTR pstrUserName,           //@param IN | User name <br>   LPCSTR pstrPassword,           //@param IN | Passwd <br>   LPCSTR pstrSQLCommand          //@param IN | SQL Command to executed  <br>  ) <br>{ <br> <br>//************************************ BEGIN OLE DB DO Variables *********************************************** <br>    WCHAR  wszSQLCommand[MAXBUFLEN+1]; <br>    ULONG cCol; <br> <br>   //Bindings and accessor <br>    DBBINDING *         prgBind=NULL; <br>    ULONG               cBind; <br>    HACCESSOR           hAccessor=NULL; <br>    ULONG               cbMaxRowSize; <br> <br>  //Column Info <br>    DBCOLUMNINFO *      pColumnInfo=NULL; <br>WCHAR *             pStringBuffer=NULL; <br> <br>    IRowset*            pIRowset            = NULL; <br>    IDBCreateCommand *pIDBCreateCommand   = NULL;// IDBCreateCommand <br> <br>//***************************** END OLE DB DO Variables ********************************** <br>  <br>  <br>StartContent(pCtxt);     <br>//********************************** OLE DB Calls **************************************** <br>WriteTitle(pCtxt); <br>  <br>    if( FAILED(ConnectDB(&amp;pIDBCreateCommand, pstrDSN, pstrUserName, pstrPassword, pCtxt)) )  <br>goto error; <br> <br>    if (0==MultiByteToWideChar (CP_ACP,0,pstrSQLCommand,-1,wszSQLCommand,MAXBUFLEN+1)) <br>{ <br>*pCtxt &lt;&lt; "MultiByteToWideChar Failed!!!\n"; <br>goto error; <br>}; <br> <br>if( FAILED(SetAndExecute(wszSQLCommand, pIDBCreateCommand, &amp;pIRowset, &amp;pColumnInfo, &amp;pStringBuffer, <br>&amp;cCol, &amp;prgBind, &amp;cBind, &amp;hAccessor, &amp;cbMaxRowSize, pCtxt)) ) <br>goto error; <br> <br>    if( FAILED(GetAndWrite(pIRowset, cbMaxRowSize, hAccessor, prgBind, cBind,  <br>pColumnInfo, cCol, pCtxt)) ) <br>goto error; <br> <br>error : <br>FreeEnvironment(pIRowset, hAccessor, pColumnInfo, pStringBuffer); <br>delete [] prgBind; <br>//********************************** END OLE DB Calls ************************************ <br>EndContent(pCtxt); <br> <br>  <br>}//MainFunction <br> <br> <br> <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
