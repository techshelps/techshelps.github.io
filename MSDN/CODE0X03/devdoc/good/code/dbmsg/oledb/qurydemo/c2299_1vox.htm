<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>QURYDEMO.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2301"></a>QURYDEMO.H</h2>
<pre><code>//----------------------------------------------------------------------------- <br>// Microsoft OLE DB Main Include File <br>// Copyright (C) 1994 - 1996 By Microsoft Corporation. <br>// <br>// @doc <br>// <br>// @module main include file <br>// <br>//----------------------------------------------------------------------------- <br> <br>#ifdef RC_INVOKED <br>#define ID(id) id <br>#else <br>#define ID(id) MAKEINTRESOURCE(id) <br>#endif <br> <br>/* Resource Identifiers */ <br>#define BMP_NEWQUERYID(10)// new window button bitmap <br>#define BMP_RUNQUERYID(20)// exec query button bitmap <br>#defineAPPICONID(30)// application icon <br>#define QUERYWINDOWICONID(40)// MDI Child window icon <br>#define QURYDEMOMENUID(50)// Application menu <br>#define INITDIALOGID(60)// connect modal dialog box <br>#define DISCONNECTDIALOGID(70)// disconnect modal dialog box <br>#define ABOUTDIALOGID(80)// about modal dialog box <br>#define MDICHILDDIALOGID(90)// MDI Child modeless dialog box <br>#define APPACCELERATORID(100)// Accelerator table for the app <br> <br>/* Menu Identifiers */ <br>#define IDM_POPUPAPPSYS10// Placeholder, used by status bar <br>#define IDM_POPUPMDISYS20// Placeholder, used by status bar <br>#define IDM_POPUPLOGIN100// Placeholder, used by status bar <br>#define IDM_INITIALIZE110 <br>#define IDM_DISCONNECT120 <br>#define IDM_EXIT130 <br>#define IDM_POPUPQUERY140// Placeholder, used by status bar <br>#define IDM_QUERY150 <br>#define IDM_NEW160 <br>#define IDM_POPUPSCHEMA170     // Placeholder, used by status bar <br>#define IDM_TYPES           180 <br>#define IDM_TABLES          190 <br>#define IDM_COLUMNS         200 <br>#define IDM_POPUPWINDOW210     // Placeholder, used by status bar <br>#define IDM_TILE220 <br>#define IDM_CASCADE230 <br>#define IDM_ICONS240 <br>#define IDM_CLOSEALL250 <br>#define IDM_POPUPHELP260// Placeholder, used by status bar <br>#define IDM_APPHELP270 <br>#define IDM_ABOUT280 <br>#define IDM_MDICHILD290 <br> <br>#define IDM_CATALOGS        300 <br>#define IDM_FOREIGN_KEYS    310 <br>#define IDM_PRIMARY_KEYS    320 <br>#define IDM_PROCEDURE_PARAMETERS  330 <br>#define IDM_PROCEDURES      340 <br>#define IDM_SCHEMATA        350 <br>#define IDM_INDEXES         360  //added <br> <br>/* child window ids */ <br>#define IDW_TOOLBAR10 <br>#define IDW_STATUSBAR20 <br>#define IDW_MDICLIENT30 <br> <br>#define IDW_CRSRLIST10// toolbar comboboxes <br>#define IDW_COMMANDLIST20 <br> <br>#define IDCOMBO_PROVIDER10// connect dialog box controls <br>#define IDCOMBO_NAME20 <br>#define IDTEXT_USERID30 <br>#define IDTEXT_PASSWORD40 <br>#define IDENUM              50 <br> <br>#define IDLIST_SESSION10// disconnect dialog box controls <br>#define IDLIST_COMMAND20 <br>#define IDCLOSE_ACTVTY30 <br>#define IDDISCONNECT40 <br>#define IDICON_WARN50 <br> <br>#define IDTEXT_PRMPT10// MDI child's modeless dialog controls <br>#define IDTEXT_SQL20 <br>#define IDLIST_RSLT30 <br> <br>/* MDI Child Window Offsets */ <br>#define CBWNDEXTRA4// storage in MDI Child Window <br>#define GWLAPP_HDLG0// child dialog handle <br> <br>/* Other Constants */ <br>#define MAXCHILDWNDS    10//maximum child windows allowed <br>#define MAXBUFLEN256//display buffer size <br>#define MAX_COL35//maximum column in result set <br>#define MAX_ROW100//maximum number of rows <br>#define MAXDATALEN25//maximum data length per column <br>#define MAXCOLNAMELEN20 <br>#define MAXCOLNDATALENGTH   23 <br>#define MAXDISPLAYSIZEMAX_COL*(MAXDATALEN+1) <br>#defineMINWIDTH415//minimum width of app window <br>#defineMINHEIGHT350//minimum height of app window <br>#define LISTTABSTOP100//tabstop in the display listbox <br>#define LISTHORZSCROLL(LISTTABSTOP*2)//horizontal scroll for the listbox <br>#define LISTHORZEXT0//horizontal extent inthe list box <br>#define WINDOWMENUPLACE2//Window menu place for adding MDI child windows <br>#define IDT_STATUSTIMER1//timer id <br>#define TIMERDELAY60000//timer duration <br>#define BTTNX345//first toolbar button location <br>#define BTTNY2//button y position <br>#defineBTTNWIDTH25                      //button width <br>#define BTTNHEIGHT23                      //button height <br>#define BTTNMARGIN5//distance between toolbar buttons <br>#define TOOLBARMARGINY5//fixed margin w/o combobox height <br>#define STATUSBARMARGINY8//fixed margin w/o textbox height <br> <br>/* String Constants */ <br>#define POPUPLOGIN"&amp;Login" <br>#define MENUITEMCONNECT"&amp;Connect... \aCtrl+C" <br>#define MENUITEMDISCONNECT"&amp;Unitialize... \aCtrl+U" <br>#defineMENUITEMEXIT"E&amp;xit" <br>#define POPUPQUERY"&amp;Command" <br>#define MENUITEMQUERY"&amp;Execute Command Text \aCtrl+E" <br>#define MENUITEMNEW"&amp;New Command \aCtrl+N" <br>#define POPUPSCHEMA"&amp;Schema \aCtrl+S" <br>#define MENUITEMTYPES"&amp;PROVIDER_TYPES \aCtrl+P" <br>#defineMENUITEMTABLES"T&amp;ABLES \aCtrl+A" <br>#define MENUITEMCOLUMNS"&amp;COLUMNS \aCtrl+C" <br>#define POPUPWINDOW"&amp;Window" <br>#define MENUITEMTILE"&amp;Tile" <br>#defineMENUITEMCASCADE"&amp;Cascade" <br>#define MENUITEMICONS"Arrange &amp;Icons" <br>#defineMENUITEMCLOSEALL"Close &amp;All" <br>#define POPUPHELP"&amp;Help" <br>#define MENUITEMAPPHELP"&amp;Help on Qurydemo \aF1" <br>#defineMENUITEMABOUT"&amp;About Qurydemo..." <br> <br>#define OLEDBFRAMECLASS"QDEMO32MAIN" <br> <br>#define OLEDBTOOLCLASS"QDEMOTool" <br>#define OLEDBSTATUSCLASS"QDEMOStatus" <br>#define OLEDBMDICLASS"QDEMOMDI" <br>#define COMBOBOXCLASS"COMBOBOX" <br>#define MDICLIENTCLASS"MDICLIENT" <br>#define UNTITLED"Untitled" <br>#define APPTITLE"Microsoft OLE DB Sample Query Program" <br>#defineEXECERROR"Execution Error" <br>#define INITERROR"Failed to initialize Session interface" <br>#define CLASSERROR"Failed to register application class" <br>#define CREATEMAINERR"Failed to create application main window" <br>#define CREATECHILDERR"Failed to create a new Command" <br>#define ALPHABETS"abcdefghijklmnopqrstuvwxyz" <br>#define TIMETEXT"MM:MM MM" <br>#define DATETEXT"MMM-MM" <br>#define TIMEFORMAT" %I:%M %p" <br>#define DATEFORMAT" %b-%d" <br>#define NOPROVIDERERR"Please provide a Data Source" <br>#define MOREINFO"Incomplete Information" <br> <br>#define STATUSPOPUPAPPSYS   " Control menu for the application " <br>#define STATUSPOPUPMDISYS" Control menu for the window " <br>#define STATUSRESTORE       " Restore window to normal " <br>#define STATUSMOVE          " Move window " <br>#define STATUSSIZE          " Size window " <br>#define STATUSMINIMIZE      " Minimize window " <br>#define STATUSMAXIMIZE      " Maximize window " <br>#define STATUSCLOSE         " Close window " <br>#define STATUSNEXTWINDOW    " Switch to next window " <br>#define STATUSPREVWINDOW    " Switch to previous window " <br>#define STATUSTASKLIST      " Bring up task list " <br>#define STATUSPOPUPLOGIN" Login and logout commands " <br>#define STATUSCONNECT" Connect with default parameters... " <br>#define STATUSDISCONNECT" Release open sessions... " <br>#define STATUSEXIT" Exit application " <br>#define STATUSPOPUPQUERY" Commands " <br>#define STATUSQUERY" Execute Command text... " <br>#define STATUSNEW" New Command on current Session... " <br>#define STATUSPOPUPSCHEMA" IDBSchema Commands " <br> <br>#define STATUSCATALOGS" DBSCHEMA_CATALOGS Rowset " <br>#define STATUSCOLUMNS" DBSCHEMA_COLUMNS Rowset " <br>#define STATUSFOREIGN_KEYS" DBSCHEMA_FOREIGN_KEYS Rowset " <br>#define STATUSPRIMARY_KEYS" DBSCHEMA_PRIMARY_KEYS Rowset " <br>#define STATUSPROCEDURE_PARAMETERS" DBSCHEMA_PROCEDURE_PARAMETERS Rowset " <br>#define STATUSPROCEDURES" DBSCHEMA_PROCEDURES Rowset " <br>#define STATUSSCHEMATA" DBSCHEMA_SCHEMATA Rowset " <br>#define STATUSTYPES" DBSCHEMA_PROVIDER_TYPES Rowset " <br>#define STATUSTABLES" DBSCHEMA_TABLES Rowset " <br> <br>#define STATUSPOPUPWINDOW" Window management commands " <br>#define STATUSTILE" Tile all normal child windows " <br>#define STATUSCASCADE" Cascade all normal child windows " <br>#define STATUSICONS" Arrange iconic child windows " <br>#define STATUSCLOSEALL" Close all child windows " <br>#define STATUSMDICHILD      " Activate the window marked as %d" <br>#define STATUSPOPUPHELP" Help commands " <br>#define STATUSAPPHELP" Display help on application " <br>#define STATUSABOUT" About application " <br>#define STATUSDEFAULT" Ready " <br> <br>#define DEFDBNAME"?" <br>#define PROVIDER_SESSION_FORMAT"%s!%lX" <br>#define PROVIDER_SESSION_COMMAND_FORMAT"Provider:=%s!Session=%lX!Command=%lX" <br>#define SCANPROVIDERSESSION_FORMAT"%[^!]!%lX" <br>#define SCANSESSION_FORMAT"%*[^!]!%lX" <br>#define SCANSESSION_TITLEFORMAT"Provider:=%*[^!]!Session=%lX" <br>#define SCANSESSIONCOMMAND_FORMAT"Provider:=%*[^!]!Session=%lX!Command=%lX" <br>#define SCANCOMMAND_TITLEFORMAT"Provider:=%*[^!]!Session=%*lX!Command=%lX" <br>#define CUR_MARK"&lt;-" <br>#define CURQUERY_STRING"Command!%lX&lt;-" <br>#define QUERY_STRING"Command!%lX" <br>#define MAKECONNECT"Please connect to a data source using Login menu." <br>#defineOPENWINDOW"Please open a window from Query menu." <br>#define NOSESSIONERROR"No Session Available" <br>#define NOCOMMANDERROR"No Command Window Available" <br>#define MAXCHILDEXCEEDED"Please close a child window and try again." <br>#define MAXCHLDERR"Error - Too many Child Windows" <br>#define COLTRUNC_WARNG"Number of columns in display truncated to %u" <br>#define ROWTRUNC_WARNG"Number of rows in display truncated to %u" <br>#define TRUNCERR"Data Truncation" <br>#define CLOSEALLSESSION"All open sessions have been released." <br>#define LOGOUTINFO"Log Out Information" <br>#define SQLERR_FORMAT"SQL Error State:%s, Native Error Code: %lX, OLEDB Error: %s" <br>#define SQLERRMSGTITLE"SQL_ERROR results" <br>#define SQLERRCNTDTITLE"SQL_ERROR results continued" <br>#define SQLWRNMSGTITLE"SQL_SUCCESS_WITH_INFO results" <br>#define SQLWRNCNTDTITLE"SQL_SUCCESS_WITH_INFO results continued" <br>#define NULLDATASTRING"SQL_NULL_DATA" <br> <br>/* Globals */ <br>//HWNDhWndFrame;      // Main Frame Window handle <br>//HWNDhWndCrsrList;   // hdbc(s) combobox on the tool bar <br>//HWNDhWndStmtList;   // hstmt(s) combobox on the tool bar <br>//HWNDhWndMDIClient;  // MDI Client window handle <br>//HWNDhWndActiveChild;// Current active MDI Child window <br>//HINSTANCEhAppInstance;   // Application instance <br> <br> <br>/* Macros and Function Prototypes */ <br>#ifdef WIN32 <br>#defineACTIVATEWINDOW(h)SetForegroundWindow(h) <br>#else <br>#defineACTIVATEWINDOW(h)SetFocus(h) <br>#endif <br> <br>#define DRAWBTTNRECT(h,x,y,cx,cy)MoveToEx(h,x+1,y,NULL);\ <br>LineTo(h,x+cx,y);\ <br>MoveToEx(h,x+cx,y+1,NULL);\ <br>LineTo(h,x+cx,y+cy);\ <br>MoveToEx(h,x+cx-1,y+cy,NULL);\ <br>LineTo(h,x,y+cy);\ <br>MoveToEx(h,x,y+cy-1,NULL);\ <br>LineTo(h,x,y); <br> <br>#define DRAWBTTNLIFT1(h,x,y,cx,cy)MoveToEx(h,x+1,y+cy-1,NULL);\ <br>LineTo(h,x+1,y+1);\ <br>LineTo(h,x+cx-1,y+1); <br> <br>#defineDRAWBTTNLIFT2(h,x,y,cx,cy)MoveToEx(h,x+1,y+cy-1,NULL);\ <br>LineTo(h,x+cx-1,y+cy-1);\ <br>LineTo(h,x+cx-1,y);\ <br>MoveToEx(h,x+2,y+cy-2,NULL);\ <br>LineTo(h,x+cx-2,y+cy-2);\ <br>LineTo(h,x+cx-2,y+1); <br>// MAIN.CPP <br>intPASCALWinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow); <br>longCALLBACKMainWndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>longCALLBACKToolbarProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>longCALLBACKStatusbarProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>longCALLBACKMDIChildProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>BOOLCALLBACKConnectDlgProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>BOOLCALLBACKDisconnectDlgProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>BOOLCALLBACKAboutDlgProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>BOOLCALLBACKMDIChildDlgProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam); <br>VOIDFAR PASCALDrawBitmap(HDC hDC, int iLeft, int iTop, HBITMAP hBitmap); <br> <br>// QURYDEMO.CPP <br>BOOLFAR PASCALInitEnvironment(); <br>voidFAR PASCALDisplayProviders(HWND hWnd); <br>BOOLFAR PASCAL  ConnectDatabase(HWND hWnd); <br>voidFAR PASCALDisplayConnections(HWND hWndhdbc); <br>voidFAR PASCALDisplayICommands(HWND hWndhstmt, HWND hWndhdbc, int nCrsrIndex); <br>voidFAR PASCALNewICommandWindow(); <br>voidFAR PASCALNewIOpenRowsetWindow(); <br>voidFAR PASCALChangeCurrentICommand(HWND hWndStmtList); <br>voidFAR PASCALChangeCurrentCursor(HWND hWndCrsrList); <br>voidFAR PASCALDisplayNewCrsrAndICommand(); <br>voidFAR PASCALFreeConnect(HWND hWndhdbc); <br>voidFAR PASCALFreeICommand(HWND hWndhstmt, HWND hWndhdbc, int nIndex); <br>voidFAR PASCALCloseICommandWindow(HWND hWnd); <br>voidFAR PASCALExecuteQuery(); <br>BOOLFAR PASCALCloseIDBCreateCommand(); <br>HRESULT DisplayDataSource(HWND hWnd); <br>HRESULTFreeEnvironment(); <br>voidFAR PASCALGetSchemaRowset(GUID rguidSchema); <br> <br>HRESULT EnumerateProviders (); <br> <br>HRESULT ExecuteCommand <br>( <br>IUnknown*pIUnknown, <br>ICommand*pICommand, <br>LPWSTRwszBuffer, <br>IRowset**ppIRowset_out  <br>); <br> <br>HRESULT GetDataFromRowset <br>( <br>IRowset*pIRowset <br>); <br> <br>HRESULT GetColumnsInfo <br>( <br>IRowset*pIRowset, <br>ULONG* pcCol, <br>DBCOLUMNINFO**ppColumnInfo, <br>WCHAR**ppStringsBuffer <br>); <br> <br>HRESULT SetupBindings <br>( <br>ULONG cCol, <br>DBCOLUMNINFO*pColumnInfo, <br>DBBINDING*rgBind_out, <br>ULONG*cBind_out, <br>    ULONG*          pcMaxRowSize_out <br>); <br>     <br>HRESULT CreateAccessor <br>( <br>IRowset*pIRowset, <br>DBBINDING*rgBind, <br>ULONGcBind, <br>HACCESSOR*phAccessor_out <br>); <br> <br>HRESULT GetData <br>( <br>IRowset*pIRowset, <br>ULONG   cMaxRowSize, <br>    HACCESSORhAccessor, <br>    DBBINDING*    rgBind,// needed for pretty printing <br>    ULONG    cBind,    // for pretty printing <br>    DBCOLUMNINFO*pColumnInfo, // for pretty printing <br>    ULONGcCol,// for pretty printing <br>HWNDhList, <br>DWORDdwText, <br>DWORDaddString <br>); <br> <br>HRESULT CleanupRowset <br>( <br>IRowset*pIRowset, <br>HACCESSOR hAccessor <br>); <br> <br>void DumpRow <br>( <br>    DBBINDING* rgBind, <br>    ULONGcBind, <br>    ULONGcMaxColWidth, <br>    BYTE* pData, <br>HWNDhList, <br>DWORDdwText, <br>DWORDaddString <br>    ); <br> <br>HRESULT GetDetailedErrorInfo  <br>      ( <br>   IUnknown * pBadObject,                   <br>   GUID IID_BadIntereface,                  <br>       char * szErrorDescription_out, <br>   char * szErrorSource_out <br>  ); <br> <br>void DumpError <br>     ( HRESULT hr,  <br>   LPSTR lpStrBuffer,  <br>   LPSTR lpSource,  <br>   LPSTR lpDescription <br>  ); <br> <br>void DumpErrorHResult <br>(  <br>HRESULT hr, <br>LPSTR lpStrBuffer <br>); <br> <br>// How to lay out each column in memory. <br>// Note that bData should be DWORD aligned, since it may contain a DWORD. <br>struct COLUMNDATA  <br>{ <br>DBSTATUSwStatus;// status of column <br>DWORDdwLength;// length of data (not space allocated) <br>BYTEbData[1];// data here and beyond <br>}; <br> <br> <br>/******************************* End of File ********************************/ </code></pre>
<p>&nbsp;</p></body>
</HTML>
