<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PROGRESS.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2354"></a>PROGRESS.CPP</h2>
<pre><code>//----------------------------------------------------------------------------- <br>// Microsoft OLE DB TABLECOPY Sample <br>// Copyright (C) 1996 By Microsoft Corporation. <br>// <br>// @doc <br>// <br>// @module PROGRESS.CPP <br>// <br>//----------------------------------------------------------------------------- <br> <br>//////////////////////////////////////////////////////////////////// <br>// Includes <br>// <br>//////////////////////////////////////////////////////////////////// <br>#include "progress.h" <br>#include "common.h" <br> <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// CProgress::CProgress <br>// <br>//////////////////////////////////////////////////////////////////// <br>CProgress::CProgress(HWND hWnd, HINSTANCE hInst) <br>: CDialog(hWnd, hInst) <br>{ <br>} <br> <br>//////////////////////////////////////////////////////////////////// <br>// CProgress::~CProgress <br>// <br>//////////////////////////////////////////////////////////////////// <br>CProgress::~CProgress() <br>{ <br>StopProgress(); <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL WINAPI CProgress::DlgProc <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL WINAPI CProgress::DlgProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) <br>{ <br>switch(msg)  <br>{ <br>case WM_INITDIALOG: <br>{ <br>//Save the this pointer, since this is a static method <br>CProgress* pThis = (CProgress*)lParam; <br>SetWindowLong(hWnd, GWL_USERDATA, (LONG)pThis); <br> <br>//On INIT we know we have a valid hWnd to store <br>pThis-&gt;m_hWnd = hWnd; <br> <br>CenterDialog(hWnd); <br>return TRUE; <br>} <br>break; <br> <br>case WM_COMMAND: <br>{ <br>// All buttons are handled the same way <br>//Restore instance pointer, since this is a static function <br>CProgress* pThis = (CProgress*)GetWindowLong(hWnd, GWL_USERDATA); <br> <br>switch(GET_WM_COMMAND_ID(wParam, lParam))  <br>{ <br>                case IDCANCEL: <br>pThis-&gt;m_fCancel = TRUE; <br>                return TRUE; <br>} <br>return FALSE; <br>} <br>break; <br> <br>default: <br>return FALSE; <br>} <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// ULONG CProgress::Display <br>// <br>//////////////////////////////////////////////////////////////////// <br>ULONG CProgress::Display() <br>{ <br>m_fCancel = FALSE; <br> <br>//Create a ModeLess Dialog Box <br>m_hWnd = CreateDialogParam(m_hInst, MAKEINTRESOURCE(IDD_PROGRESS), NULL, DlgProc, (LPARAM)this); <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::StopProgress <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::StopProgress() <br>{ <br>if(m_hWnd)  <br>{ <br>DestroyWindow(m_hWnd); <br>m_hWnd = NULL; <br>} <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::SetWorkingItem <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::SetWorkingItem(WCHAR* pwszWorking) <br>{ <br>ASSERT(pwszWorking); <br> <br>wSetDlgItemText(m_hWnd, IDT_STATUS, pwszWorking); <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::SetProgressText <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::SetProgressText(WCHAR* pwszProgress) <br>{ <br>ASSERT(pwszProgress); <br> <br>wSetDlgItemText(m_hWnd, IDT_STAT_INFO, pwszProgress); <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::Cancel <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::Cancel() <br>{ <br>MSGmsg; <br> <br>//Must have an existing window to cancel <br>if(m_hWnd==NULL) <br>return FALSE; <br> <br>while(PeekMessage(&amp;msg, m_hWnd, 0, 0, PM_REMOVE))  <br>{ <br>if(!IsDialogMessage(m_hWnd, &amp;msg))  <br>{ <br>TranslateMessage(&amp;msg); <br>DispatchMessage(&amp;msg); <br>} <br>} <br> <br>return m_fCancel; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::ShowCancel <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::ShowCancel(BOOL fShow) <br>{ <br>ShowWindow(GetDlgItem(m_hWnd, IDCANCEL), (fShow) ? SW_SHOW: SW_HIDE ); <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::RestartProgress <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::RestartProgress() <br>{ <br>m_fCancel = FALSE; <br>return TRUE; <br>} <br> <br> <br>//////////////////////////////////////////////////////////////////// <br>// BOOL CProgress::UpdateProgress <br>// <br>//////////////////////////////////////////////////////////////////// <br>BOOL CProgress::UpdateProgress(WCHAR* pwszItem, WCHAR* pwszText) <br>{ <br>ASSERT(pwszItem &amp;&amp; pwszText); <br> <br>//Update the progress text <br>SetProgressText(pwszText); <br> <br>// Now check for a cancel from the user, by checking <br>// the messages from the user <br>if(Cancel())  <br>{ <br>SetWorkingItem(pwszItem); <br>if(IDYES == wMessageBox(NULL, MB_ICONEXCLAMATION | MB_YESNO, wsz_CANCEL, wsz_CANCEL_OP)) <br>{ <br>//Indicate the users wishes to stop  <br>return FALSE; <br>} <br>else  <br>{ <br>SetWorkingItem(pwszItem); <br>RestartProgress(); <br>} <br>} <br> <br>//Indicate the user wishes to continue <br>return TRUE; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
