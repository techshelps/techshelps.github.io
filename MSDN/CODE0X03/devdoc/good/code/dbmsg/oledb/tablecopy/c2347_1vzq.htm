<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>TABLE.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2366"></a>TABLE.H</h2>
<pre><code>//----------------------------------------------------------------------------- <br>// Microsoft OLE DB TABLECOPY Sample <br>// Copyright (C) 1996 By Microsoft Corporation. <br>// <br>// @doc <br>// <br>// @module TABLE.H <br>// <br>//----------------------------------------------------------------------------- <br>#ifndef _TABLE_H_ <br>#define _TABLE_H_ <br> <br> <br>///////////////////////////////////////////////////////////////// <br>// Includes <br>// <br>///////////////////////////////////////////////////////////////// <br>#include "DataSource.h" <br>#include "TableCopy.h" <br> <br> <br> <br>///////////////////////////////////////////////////////////////// <br>// Defines <br>// <br>///////////////////////////////////////////////////////////////// <br>enum ESQL_STMT <br>{ <br>ESQL_SELECT, <br>ESQL_SELECT_BOGUS, <br>ESQL_INSERT, <br>ESQL_CREATE_TABLE, <br>ESQL_DROP_TABLE <br>}; <br> <br> <br>///////////////////////////////////////////////////////////////// <br>// Structs for Column/Index info <br>// <br>///////////////////////////////////////////////////////////////// <br>struct TYPEINFO <br>{ <br>WCHARwszTypeName[MAX_NAME_LEN]; <br>USHORTwType; <br>ULONGulColumnSize; <br>WCHARwszCreateParams[MAX_NAME_LEN]; <br>VARIANT_BOOLfIsNullable; <br>GUIDguidType; <br>}; <br> <br> <br>struct INDEXINFO <br>{ <br>WCHARwszIndexName[MAX_NAME_LEN]; <br>WCHARwszColName[MAX_NAME_LEN]; <br>DWORDdwCollation; <br>ULONGiOrdinal; <br>BOOLfUnique; <br>BOOLfIsPrimaryKey; <br>GUIDguidCol; <br>}; <br> <br> <br>struct PRIMARYKEY <br>{ <br>WCHARwszColName[MAX_NAME_LEN]; <br>ULONGiOrdinal; <br>GUIDguidCol; <br>}; <br> <br> <br>struct SCHEMATABLES <br>{ <br>WCHARwszUserName[MAX_NAME_LEN]; <br>WCHARwszTableName[MAX_NAME_LEN]; <br>}; <br> <br>struct SCHEMACOLUMNS <br>{ <br>WCHARwszColName[MAX_NAME_LEN]; <br>ULONGiOrdinal; <br>GUIDguidCol; <br>DBCOLUMNFLAGSdwFlags; <br>USHORTwType; <br>ULONGulMaxLength; <br>USHORTwPrecision; <br>USHORTwScale; <br>GUIDguidType; <br>}; <br> <br> <br>struct COLDESC <br>{ <br>//DBCOLUMNINFO <br>WCHARwszColName[MAX_NAME_LEN]; <br>ULONGiOrdinal; <br>DBCOLUMNFLAGSdwFlags; <br>ULONGulColumnSize; <br>DBTYPEwType; <br>BYTEbPrecision; <br>BYTEbScale; <br> <br>//SCHEMACOLUMNS <br>GUIDguidCol; <br> <br>//TYPEINFO <br>WCHARwszTypeName[MAX_NAME_LEN]; <br>ULONGulCreateParams; <br>BOOLfIsNullable; <br>GUIDguidType; <br>}; <br> <br> <br> <br>///////////////////////////////////////////////////////////////// <br>// CTable  <br>// <br>///////////////////////////////////////////////////////////////// <br>class CTable <br>{ <br>public: <br>//Constructors <br>CTable(CWizard* pCWizard); <br>virtual ~CTable(); <br> <br>//Members <br>virtual BOOLConnect(HWND hWnd); <br>virtual BOOLIsConnected(); <br> <br>virtual BOOLTranslateNames(); <br>virtual BOOLGetQuotedID(WCHAR* pwszOutBuff, WCHAR* pwszInBuff); <br> <br>virtual HRESULT GetColInfo(); <br>virtual HRESULT GetTypeInfo(); <br>virtual HRESULT GetLiteralInfo(); <br> <br>virtual HRESULT CreateSQLStmt(ESQL_STMT eSqlStmt, WCHAR* pwszSqlStmt, BOOL fShowSql = TRUE); <br> <br>virtual HRESULT MapTableInfo(CTable* pCSourceTable); <br>virtual HRESULT CreateTable(); <br> <br>virtual HRESULT GetRowset(REFIID riid, IUnknown** ppIRowset, HACCESSOR* phAccessor, ULONG* pcRowSize, ULONG ulBlobSize); <br>virtual HRESULT CopyData(CTable* pCSourceTable, ULONG* pcRows, ULONG ulParamSets, ULONG ulBlobSize); <br>virtual HRESULT CopyIndexes(CTable* pCSourceTable); <br> <br>virtual HRESULT GetTypeInfoRowset(IAccessor** ppIAccessor, HACCESSOR* phAccessor, IRowset** ppIRowset); <br> <br>//Data <br>WCHAR m_wszIDQuote[MAX_NAME_LEN]; <br>WCHAR m_wszIDSeperator[MAX_NAME_LEN]; <br> <br>WCHARm_wszSchemaName[MAX_NAME_LEN]; <br>WCHARm_wszTableName[MAX_NAME_LEN]; <br>WCHARm_wszQualTableName[MAX_NAME_LEN]; <br> <br>//Index info <br>ULONGm_cIndexes;// Count of indexes <br>INDEXINFO*m_rgIndexInfo;// Index information <br> <br>//ColumnInfo <br>ULONGm_cColumns;// Count of columns <br>COLDESC* m_rgColDesc;// Column Information <br>ULONG       m_cBlobs;// Blob columns <br> <br>//DataSource <br>CDataSource*m_pCDataSource; <br>CWizard*m_pCWizard; <br>}; <br> <br> <br> <br> <br> <br>#endif//_TABLE_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
