<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>STEP3.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2363"></a>STEP3.CPP</h2>
<pre><code>//----------------------------------------------------------------------------- <br>// Microsoft OLE DB TABLECOPY Sample <br>// Copyright (C) 1996 By Microsoft Corporation. <br>// <br>// @doc <br>// <br>// @module STEP3.CPP <br>// <br>//----------------------------------------------------------------------------- <br> <br> <br> <br>///////////////////////////////////////////////////////////////////// <br>// Includes <br>// <br>///////////////////////////////////////////////////////////////////// <br>#include "wizard.h" <br>#include "common.h" <br>#include "Tablecopy.h" <br>#include "Table.h" <br> <br> <br>///////////////////////////////////////////////////////////////////// <br>// CS3Dialog::CS3Dialog <br>// <br>///////////////////////////////////////////////////////////////////// <br>CS3Dialog::CS3Dialog(HWND hWnd, HINSTANCE hInst, CTableCopy* pCTableCopy) <br>: CDialog(hWnd, hInst) <br>{ <br>ASSERT(pCTableCopy); <br>m_pCTableCopy = pCTableCopy; <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////// <br>// CS3Dialog::~CS3Dialog <br>// <br>///////////////////////////////////////////////////////////////////// <br>CS3Dialog::~CS3Dialog() <br>{ <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// ULONG CS3Dialog::Display <br>// <br>///////////////////////////////////////////////////////////////////////////// <br>ULONG CS3Dialog::Display() <br>{ <br>return DialogBoxParam(m_hInst, MAKEINTRESOURCE(IDD_TO_INFO), NULL, DlgProc, (LPARAM)this); <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////// <br>// CS3Dialog::DlgProc <br>// <br>///////////////////////////////////////////////////////////////////// <br>BOOL WINAPI CS3Dialog::DlgProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam) <br>{ <br>switch(msg)  <br>{ <br>case WM_INITDIALOG: <br>{ <br>//Store the "this" pointer, since this is a static method <br>CS3Dialog* pThis = (CS3Dialog*)lParam; <br>SetWindowLong(hWnd, GWL_USERDATA, (LONG)pThis); <br> <br>//On INIT we know we have a valid hWnd to store <br>pThis-&gt;m_hWnd = hWnd; <br> <br>//Limit the length of User Entered CTableName <br>SendDlgItemMessage(hWnd, IDE_TO_TABLE, EM_LIMITTEXT, (WPARAM)MAX_NAME_LEN-1, 0L); <br> <br>pThis-&gt;RefreshControls(); <br>CenterDialog(hWnd); <br>return HANDLED_MSG; <br>} <br> <br>case WM_COMMAND: <br>{ <br>//Obtain the "this" pointer <br>CS3Dialog* pThis = (CS3Dialog*)GetWindowLong(hWnd, GWL_USERDATA); <br> <br>CTable* pCFromTable = pThis-&gt;m_pCTableCopy-&gt;m_pCFromTable; <br>CTable* pCToTable = pThis-&gt;m_pCTableCopy-&gt;m_pCToTable; <br> <br>// All buttons are handled the same way <br>switch(GET_WM_COMMAND_ID(wParam, lParam))  <br>{ <br>case IDB_TO_CONNECT: <br>{ <br>if(pThis-&gt;Connect())  <br>{ <br>pThis-&gt;RefreshControls(); <br>SetFocus(GetDlgItem(hWnd, IDE_TO_TABLE)); <br>} <br>return HANDLED_MSG; <br>} <br> <br>                case IDOK: <br>{ <br>//Get the TableName <br>wSendMessage(GetDlgItem(hWnd, IDE_TO_TABLE), WM_GETTEXT, MAX_NAME_LEN-1, pCToTable-&gt;m_wszTableName); <br> <br>//If the TableNames are the same and the DataSource is the <br>//same then the copy is worthless (a no-op) <br>if(wcscmp(pCToTable-&gt;m_wszTableName, pCFromTable-&gt;m_wszTableName)==0 &amp;&amp; <br>pCToTable-&gt;m_pCDataSource-&gt;IsEqual(pCFromTable-&gt;m_pCDataSource)) <br>{ <br>//Need to enter a different table name from the source <br>wMessageBox(hWnd, MB_ICONEXCLAMATION | MB_OK,  <br>wsz_ERROR, wsz_SAME_TABLE_NAME); <br>SetFocus(GetDlgItem(hWnd, IDE_TO_TABLE)); <br>return HANDLED_MSG; <br>} <br> <br>wcscpy(pCToTable-&gt;m_wszQualTableName,pCToTable-&gt;m_wszTableName); <br>                EndDialog(hWnd, GET_WM_COMMAND_ID(wParam, lParam)); <br>                return HANDLED_MSG; <br>} <br>                 <br>                case IDB_PREV: <br>//Get the TableName <br>wSendMessage(GetDlgItem(hWnd, IDE_TO_TABLE), WM_GETTEXT, MAX_NAME_LEN-1, pCToTable-&gt;m_wszTableName); <br>wcscpy(pCToTable-&gt;m_wszQualTableName,pCToTable-&gt;m_wszTableName); <br>                EndDialog(hWnd, GET_WM_COMMAND_ID(wParam, lParam)); <br>                return HANDLED_MSG; <br> <br>case IDCANCEL: <br>                EndDialog(hWnd, GET_WM_COMMAND_ID(wParam, lParam)); <br>                return HANDLED_MSG; <br>} <br> <br>// Now look for notification messages <br>switch (GET_WM_COMMAND_CMD(wParam, lParam))  <br>{ <br>case EN_CHANGE: <br>{ <br>pThis-&gt;EnableTable(); <br>return HANDLED_MSG; <br>} <br>} <br>} <br>} <br> <br>return UNHANDLED_MSG; <br>} <br> <br> <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// BOOL CS3Dialog::RefreshControls <br>// <br>///////////////////////////////////////////////////////////////////////////// <br>BOOL CS3Dialog::RefreshControls() <br>{ <br>BOOLfConnected; <br> <br>CTable* pCToTable = m_pCTableCopy-&gt;m_pCToTable; <br>CTable* pCFromTable = m_pCTableCopy-&gt;m_pCFromTable; <br> <br>// Must have a connection to edit other controls <br>fConnected = pCToTable-&gt;IsConnected(); <br> <br>//Enable certain dialog controls, only if connected <br>EnableWindow(GetDlgItem(m_hWnd, IDT_TO_TITLE),fConnected); <br>EnableWindow(GetDlgItem(m_hWnd, IDE_TO_TABLE),fConnected); <br> <br>// Show user the connection string, and enable Next that requires connection <br>if(fConnected) <br>{ <br>wSetDlgItemText(m_hWnd, IDT_CONNECT, wsz_CONNECT_STRING_, <br>pCToTable-&gt;m_pCDataSource-&gt;m_pwszDataSource,  <br>pCToTable-&gt;m_pCDataSource-&gt;m_pwszUserName, <br>pCToTable-&gt;m_pCDataSource-&gt;m_pwszPassword, <br>pCToTable-&gt;m_pCDataSource-&gt;m_pwszDBMS, <br>pCToTable-&gt;m_pCDataSource-&gt;m_pwszDBMSVer); <br>} <br>else <br>{ <br>wSetDlgItemText(m_hWnd, IDT_CONNECT, wsz_NOT_CONNECTED); <br>} <br> <br>if(pCFromTable-&gt;m_pCDataSource-&gt;m_pwszProvider) <br>{ <br>wSetDlgItemText(m_hWnd, IDT_TO_PROVIDER, wsz_PROVIDER_STRING_,  <br>pCFromTable-&gt;m_pCDataSource-&gt;m_pwszProvider,  <br>pCFromTable-&gt;m_pCDataSource-&gt;m_pwszProviderVer, <br>pCFromTable-&gt;m_pCDataSource-&gt;m_pwszProviderOLEDBVer); <br>} <br>else <br>{ <br>wSetDlgItemText(m_hWnd, IDT_TO_PROVIDER, wsz_NO_PROVIDER); <br>} <br> <br>// Set the from info <br>    wSetDlgItemText(m_hWnd, IDT_FROM_INFO, L"%s, %s",  <br>pCFromTable-&gt;m_pCDataSource-&gt;m_pwszDataSource,  <br>pCFromTable-&gt;m_wszQualTableName); <br>     <br>// If there is already a CTable from previous selections, just use that one <br>wSetDlgItemText(m_hWnd, IDE_TO_TABLE, pCToTable-&gt;m_wszTableName[0] ? pCToTable-&gt;m_wszTableName :pCFromTable-&gt;m_wszTableName); <br> <br>// Determine if there is enough information to move on <br>return EnableTable(); <br>} <br> <br> <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// BOOL CS3Dialog::Connect <br>// <br>///////////////////////////////////////////////////////////////////////////// <br>BOOL CS3Dialog::Connect() <br>{ <br>BOOL fConnected = FALSE; <br> <br>CDataSource* pCToDataSource = m_pCTableCopy-&gt;m_pCToTable-&gt;m_pCDataSource; <br>CDataSource* pCFromDataSource = m_pCTableCopy-&gt;m_pCFromTable-&gt;m_pCDataSource; <br> <br>//Connect to the DataSource <br>HRESULT hr = m_pCTableCopy-&gt;m_pCToTable-&gt;Connect(m_hWnd); <br> <br>//If Connected <br>if(SUCCEEDED(hr)) <br>{ <br>fConnected = TRUE; <br> <br>// Verify we can use this data source <br>if(pCToDataSource-&gt;m_fReadOnly)  <br>{ <br>wMessageBox(m_hWnd, MB_ICONEXCLAMATION | MB_OK, wsz_ERROR,  <br>wsz_READONLY_DATASOURCE_, pCToDataSource-&gt;m_pwszDataSource); <br> <br>fConnected =  FALSE; <br>} <br> <br>//See if this is a similar DSN than the Source <br>//If DSN's are not similar, then we need to translate <br>m_pCTableCopy-&gt;m_fTranslate = !pCToDataSource-&gt;IsSimilar(pCFromDataSource); <br>} <br> <br>return fConnected; <br>} <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// BOOL CS3Dialog::EnableTable <br>// <br>///////////////////////////////////////////////////////////////////////////// <br>BOOL CS3Dialog::EnableTable() <br>{ <br>BOOL fConnected = m_pCTableCopy-&gt;m_pCToTable-&gt;IsConnected(); <br> <br>EnableWindow(GetDlgItem(m_hWnd, IDOK),  <br>fConnected &amp;&amp; SendDlgItemMessage(m_hWnd, IDE_TO_TABLE, WM_GETTEXTLENGTH, 0, 0L)); <br> <br>return TRUE; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
