<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2411"></a>README.TXT</h2>
<pre><code>**************************************************************** <br>          MICROSOFT SQL SERVER WORKSTATION SYSTEM 6.5 <br>                OLE AUTOMATION SAMPLE PROGRAMS <br>**************************************************************** <br>This file describes the OLE automation sample programs included  <br>with Microsoft(R) SQL Server(TM) Workstation System 6.5. <br> <br>For additional information about SQL Server 6.5, DB-Library, and  <br>ODBC, see the "What's New in SQL Server 6.5," "Programming  <br>DB-Library for Visual Basic," and "Programming ODBC for SQL  <br>Server" sections of SQL Server Books Online, which containsthe  <br>most up-to-date information available. <br> <br>**************************************************************** <br>OLE AUTOMATION SAMPLE APPLICATIONS <br> <br>The sample applications require the Microsoft(R) Visual Basic(R) 4.0  <br>Enterprise Edition. The following Visual Basic sample programs and  <br>Transact-SQL scripts are located in the C:\MSSQL\SAMPLES\OLEAUTO  <br>directory by default: <br> <br>GETNPV <br>Demonstrates the use of an OLE Automation object to call an NPV  <br>function in Visual Basic from a trigger. Includes the following  <br>files: <br>    CGETNPV.CLS <br>    GETNPV.VBP <br>    NPVMAIN.BAS <br>    NPVTEST.SQL <br>    NPVTRIG.SQL <br>    TESTERR.SQL <br> <br>To run this application <br>1.  Create the test table and trigger by running the NPVTEST.SQL  <br>    script. <br>2.  Open the Visual Basic project, GETNPV.VBP. From the File Menu  <br>    choose Make EXE file or Make OLE DLL file to compile GETNPV.VBP. <br>3.  Run the script, NPVTEST.SQL to insert sample data into the table.  <br>    The trigger then fires and calls the Visual Basic NPV function. <br>4.  Run the script, TESTERR.SQL, to show an example of the VB  <br>    function raising a custom error message that can be retrieved by  <br>    calling sp_OAGetErrorInfo. <br> <br>LOOPBACK.DAO <br>Demonstrates connecting back to a SQL Server via an OLE Automation <br>object. The OLE Automation server retrieves a result set from a SQL  <br>Server table and returns it to the stored procedure that called it.  <br>In the Visual Basic project, if you make an OLE DLL file, the OA  <br>server that is created will run in the same process space as SQL  <br>Server. If you make an EXE file, the OA server will run as a separate  <br>process. Includes the following files: <br>    CSQLDAO.CLS <br>    DAOMAIN.BAS <br>    LOOPDAO.SQL <br>    SQLDAO.VBP <br> <br>LOOPBACK.RDO <br>Demonstrates connecting back to a SQL Server via an OLE Automation <br>object. The OLE Automation server retrieves a result set from a SQL  <br>Server table and returns it to the stored procedure that called it.  <br>In the Visual Basic project, if you make an OLE DLL file, the OA  <br>server that is created will run in the same process space as SQL  <br>Server. Ifyou make an EXE file, the OA server will run as a separate  <br>process. Includes the following files: <br>    CSQLRDO.CLS <br>    LOOPRDO.SQL <br>    RDOMAIN.BAS <br>    SQLRDO.VBP <br> <br>TRAVERSE <br>Transact-SQL script that demonstrates how to use traversal syntax  <br>for object hierarchies. Uses the SQL-DMO administration objects.  <br>Includes the following file: <br>    TRAVERSE.SQL <br>     <br>     <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
