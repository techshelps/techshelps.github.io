<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RPC.FRM</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2443"></a>RPC.FRM</h2>
<pre><code>VERSION 2.00 <br>Begin Form PrimaryWindow  <br>   Caption         =   "Remote Stored Procedure" <br>   Height          =   6765 <br>   Icon            =   0 <br>   Left            =   150 <br>   LinkMode        =   1  'Source <br>   LinkTopic       =   "Form1" <br>   ScaleHeight     =   6075 <br>   ScaleWidth      =   9060 <br>   Top             =   390 <br>   Width           =   9180 <br>   Begin VBSQL VBSQL1  <br>      Caption         =   "VBSQL1" <br>      Height          =   255 <br>      Left            =   5280 <br>      Top             =   120 <br>      Visible         =   0   'False <br>      Width           =   855 <br>   End <br>   Begin TextBox RESULT_FIELD  <br>      FontBold        =   -1  'True <br>      FontItalic      =   0   'False <br>      FontName        =   "Courier" <br>      FontSize        =   9.75 <br>      FontStrikethru  =   0   'False <br>      FontUnderline   =   0   'False <br>      Height          =   2430 <br>      Left            =   120 <br>      MultiLine       =   -1  'True <br>      ScrollBars      =   3  'Both <br>      TabIndex        =   3 <br>      Text            =   "Text1" <br>      Top             =   3600 <br>      Width           =   8460 <br>   End <br>   Begin Frame Frame2  <br>      Caption         =   "Procedure Sampler" <br>      Height          =   1575 <br>      Left            =   120 <br>      TabIndex        =   11 <br>      Top             =   1680 <br>      Width           =   8895 <br>      Begin TextBox PARAMVALUE_FIELD  <br>         Height          =   285 <br>         Left            =   1800 <br>         TabIndex        =   15 <br>         Text            =   "Text1" <br>         Top             =   1080 <br>         Width           =   6975 <br>      End <br>      Begin TextBox PARAMNAME_FIELD  <br>         Height          =   285 <br>         Left            =   1800 <br>         TabIndex        =   16 <br>         Text            =   "Text2" <br>         Top             =   720 <br>         Width           =   6975 <br>      End <br>      Begin ComboBox PROCNAME_COMBO  <br>         Height          =   300 <br>         Left            =   1800 <br>         TabIndex        =   17 <br>         Top             =   360 <br>         Width           =   2895 <br>      End <br>      Begin Label Label7  <br>         Caption         =   "Parameter &amp;Values:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   14 <br>         Top             =   1080 <br>         Width           =   1815 <br>      End <br>      Begin Label Label6  <br>         Caption         =   "Para&amp;meter Names:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   13 <br>         Top             =   720 <br>         Width           =   1815 <br>      End <br>      Begin Label Label3  <br>         Caption         =   "&amp;Procedure Name:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   12 <br>         Top             =   360 <br>         Width           =   1575 <br>      End <br>   End <br>   Begin CommandButton SEND_QUERY_BUTTON  <br>      Caption         =   "E&amp;xecute Proc" <br>      Enabled         =   0   'False <br>      Height          =   375 <br>      Left            =   6360 <br>      TabIndex        =   1 <br>      Top             =   720 <br>      Width           =   1575 <br>   End <br>   Begin CommandButton MAKE_PROC_BUTTON  <br>      Caption         =   "&amp;Make Test Proc" <br>      Enabled         =   0   'False <br>      Height          =   375 <br>      Left            =   6360 <br>      TabIndex        =   0 <br>      Top             =   240 <br>      Width           =   1575 <br>   End <br>   Begin Frame Frame1  <br>      Caption         =   "Procedure qualifiers (optional)" <br>      Height          =   1455 <br>      Left            =   120 <br>      TabIndex        =   4 <br>      Top             =   120 <br>      Width           =   5055 <br>      Begin TextBox OWNER_FIELD  <br>         Height          =   285 <br>         Left            =   2040 <br>         TabIndex        =   10 <br>         Text            =   "Text3" <br>         Top             =   1080 <br>         Width           =   2535 <br>      End <br>      Begin TextBox DBNAME_FIELD  <br>         Height          =   285 <br>         Left            =   2040 <br>         TabIndex        =   8 <br>         Text            =   "Text2" <br>         Top             =   720 <br>         Width           =   2535 <br>      End <br>      Begin ComboBox SERVER_COMBO  <br>         Height          =   300 <br>         Left            =   2040 <br>         TabIndex        =   6 <br>         Top             =   360 <br>         Width           =   2535 <br>      End <br>      Begin Label Label5  <br>         Caption         =   "&amp;Owner:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   9 <br>         Top             =   1080 <br>         Width           =   735 <br>      End <br>      Begin Label Label4  <br>         Caption         =   "&amp;Database Name:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   7 <br>         Top             =   720 <br>         Width           =   1455 <br>      End <br>      Begin Label Label1  <br>         Caption         =   "Remote &amp;Server:" <br>         Height          =   255 <br>         Left            =   120 <br>         TabIndex        =   5 <br>         Top             =   360 <br>         Width           =   1455 <br>      End <br>   End <br>   Begin Label Label2  <br>      Caption         =   "&amp;Results:" <br>      Height          =   255 <br>      Left            =   120 <br>      TabIndex        =   2 <br>      Top             =   3360 <br>      Width           =   735 <br>   End <br>   Begin Menu CONNECT_MENU  <br>      Caption         =   "&amp;Connection" <br>      Begin Menu LOGIN_MENU  <br>         Caption         =   "&amp;Login" <br>      End <br>      Begin Menu DATABASE_MENU  <br>         Caption         =   "Change &amp;Database" <br>      End <br>      Begin Menu EXIT_MENU  <br>         Caption         =   "E&amp;xit" <br>      End <br>   End <br>End <br> <br>Sub ClearFields () <br>    RESULT_FIELD.Text = "" <br>    DBNAME_FIELD.Text = "" <br>    OWNER_FIELD.Text = "" <br>    PARAMNAME_FIELD.Text = "" <br>    PARAMVALUE_FIELD.Text = "" <br>End Sub <br> <br>Sub DATABASE_MENU_Click () <br>    If SqlConn% = 0 Then <br>        MsgBox "Must login first" <br>        Exit Sub <br>    End If <br>    CHNGDB.Show 1 <br> <br>End Sub <br> <br>Sub EXIT_MENU_Click () <br> <br>    ExitApplication <br> <br>End Sub <br> <br>Sub Form_Load () <br> <br>Rem <br>Rem Initialize the connection to SQL Server <br>Rem <br>    InitializeApplication <br>    MsgBox DBLIB_VERSION$ <br>    PrimaryWindowTitle = "VBSQL RPC demonstration" <br> <br>Rem <br>Rem Call routine to clear the fields <br>Rem Fill in the procedure names combobox <br>Rem <br> <br>    ClearFields <br>    PROCNAME_COMBO.AddItem "sp_help" <br>    PROCNAME_COMBO.AddItem "sp_who" <br>    PROCNAME_COMBO.AddItem "echo_test" <br>End Sub <br> <br>Function GetServers (Server_Control As Control) As Integer <br> <br>Rem <br>Rem This routine gets the name of all the remote servers <br>Rem Fill each element in the combobox or list box which is passed into this procedure <br>Rem execute the command.  Get each server name and fill the combobox. <br>Rem <br> <br>    If ExecuteSQLCommand("Select srvname from master..sysservers where srvid != 0") = FAIL% Then <br>        GetServers = FAIL <br>        Exit Function <br>    Else <br>        If SqlResults(SqlConn%) = FAIL% Then Exit Function <br>        While SqlNextRow(SqlConn%) &lt;&gt; NOMOREROWS% <br>            Server_Control.AddItem SqlData(SqlConn%, 1) <br>        Wend <br>    End If <br> <br> <br>    GetServers = SUCCEED <br>End Function <br> <br>Sub LOGIN_MENU_Click () <br>     <br>    Login.Show 1 <br> <br>    If SqlConn% &lt;&gt; 0 Then <br>        SEND_QUERY_BUTTON.Enabled = True <br>        MAKE_PROC_BUTTON.Enabled = True <br>        Results% = GetServers(SERVER_COMBO) <br>    End If <br>End Sub <br> <br>Sub MAKE_PROC_BUTTON_Click () <br>Static OutputData(0) As String <br> <br> <br>cmd$ = "CREATE PROCEDURE echo_test(@inparm1 varchar(20), @inparm2 int, " <br>cmd$ = cmd$ + "@outparm varchar(20) = NULL OUTPUT) AS " <br>cmd$ = cmd$ + "select @outparm = @inparm1 " <br>cmd$ = cmd$ + "return @inparm2" <br> <br>Ret% = ExecuteSQLCommand(cmd$) <br>If Ret% = SUCCEED% Then <br>    MsgBox "Procedure echo_test created successfully" <br>    ' get rid of an result rows <br>    numrows&amp; = Process_SQL_query("", OutputData()) <br>End If <br> <br>End Sub <br> <br>Sub Parse_params (ParamIn As String, Delimiter As String, ParamOut() As String) ' <br> <br>Rem <br>Rem This routine takes the comma delimited Parameter names/values <br>Rem <br> <br>Start% = 1 <br>For i% = 0 To UBound(ParamOut) <br>    If done% = False Then <br>        'look for delimiter <br>        endpos% = InStr(Start%, ParamIn$, Delimiter$) <br>        If endpos% = 0 Then <br>            'we're at the last parameter <br>            ParamOut(i%) = Mid$(ParamIn$, Start%, 255) <br>            done% = True <br>        Else <br>            ParamOut(i%) = Mid$(ParamIn$, Start%, (endpos% - Start%)) <br>            Start% = endpos% + 1 <br>        End If <br>    Else <br>        'clear out rest of array <br>        ParamOut(i%) = "" <br>    End If <br>Next i% <br> <br> <br>End Sub <br> <br>Sub PROCNAME_COMBO_Click () <br> <br>Select Case PROCNAME_COMBO.Text <br>    Case Is = "sp_help" <br>        PARAMNAME_FIELD.Text = "@objname VARCHAR(30)" <br>        PARAMVALUE_FIELD.Text = "sysobjects" <br>    Case Is = "echo_test" <br>        PARAMNAME_FIELD.Text = "@inparm1 VARCHAR(20),@inparm2 INTEGER,@outparm VARCHAR(20) OUT" <br>        PARAMVALUE_FIELD.Text = "hello,7,notused" <br>    Case Else <br>        PARAMNAME_FIELD.Text = "" <br>        PARAMVALUE_FIELD.Text = "" <br>End Select <br> <br>End Sub <br> <br>Sub SEND_QUERY_BUTTON_Click () <br>     <br>Static OutputData(500) As String <br>CRLF$ = Chr$(13) + Chr$(10) <br> <br>Rem <br>Rem Assemble the procedure name <br>Rem Get the parameter names <br>Rem Get the parameter values <br>Rem Initialize the stored proc. <br>Rem Fill the parameters <br>Rem <br> <br>     <br>Static Param_Values(10) As String <br>Static Param_Declares(10) As String <br>Static Param_Types(2) As String <br>Static Param_Datatype(1) As String <br> <br> <br>'  Note:  If this is a remote server-to-server procedure call (SERVER_NAME is <br>'       not blank), and your remote password is different from your local <br>'       password, you will need to set the remote password field with SqlRPwSet% <br>'       prior to logging on. <br> <br>procname$ = SERVER_COMBO.Text + "." + DBNAME_FIELD.Text + "." + OWNER_FIELD.Text + "." + PROCNAME_COMBO.Text <br>Results% = SqlRpcInit(SqlConn%, procname$, 0) <br> <br> <br>If PARAMVALUE_FIELD.Text &lt;&gt; "" Then <br>    In$ = PARAMVALUE_FIELD.Text <br>    Parse_params In$, ",", Param_Values() <br>    In$ = PARAMNAME_FIELD.Text <br>    Parse_params In$, ",", Param_Declares() <br>    For i% = 0 To 10 <br>        'check to see if we are at the end of the parameters provided <br>        If Param_Values(i%) = "" Then Exit For <br> <br>        'for each parameter, find out its type <br>        'first split type declaration into name, type(len), output <br>        In$ = Param_Declares(i%) <br>        Parse_params In$, " ", Param_Types() <br> <br>        'param name is first part <br>        paramname$ = Param_Types(0) <br> <br>        'If this is an output var, set the flag <br>        If Left$(Param_Types(2), 3) = "OUT" Then <br>            status% = SQLRPCRETURN% <br>        Else <br>            status% = 0 <br>        End If <br>         <br>        'now take type(len) and split into type, len) <br>        In$ = Param_Types(1) <br>        Parse_params In$, "(", Param_Datatype() <br>         <br>        Select Case Param_Datatype(0) <br>            Case "VARCHAR" <br>                typecode% = SQLVARCHAR% <br>                If status% = SQLRPCRETURN% Then <br>                    maxlen&amp; = Val(Left$(Param_Datatype(1), Len(Param_Datatype(1)) - 1)) <br>                Else <br>                    maxlen&amp; = -1 <br>                End If <br>                datalen&amp; = Len(Param_Values(i%)) <br> <br>            Case "INTEGER" <br>                typecode% = SQLINT4% <br>                maxlen&amp; = -1 <br>                datalen&amp; = -1 <br> <br>            Case Else <br>                MsgBox "Sample does not handle " + Param_Datatype(0) + " paramters" <br>                Exit Sub <br>        End Select <br> <br>        Results% = SqlRpcParam(SqlConn%, paramname$, status%, typecode%, maxlen&amp;, datalen&amp;, Param_Values(i%)) <br>    Next i% <br>End If <br> <br>Results% = SqlRpcSend(SqlConn%) <br> <br>Rem <br>Rem Clear the result array, and result controls first <br>Rem <br> <br>i% = 0 <br>For i% = 0 To 499 <br>    OutputData(i%) = "" <br>Next <br> <br>Rem <br>Rem Fill the result array with the data <br>Rem Fill the results field <br>Rem <br> <br>RESULT_FIELD.Text = "" <br>numrows&amp; = Process_SQL_query(cmd$, OutputData()) <br> <br> <br>For i% = 0 To numrows&amp; - 1 <br>    DataLine$ = DataLine$ + OutputData(i%) + CRLF$ <br>Next i% <br> <br>RESULT_FIELD.Text = DataLine$ <br> <br>End Sub <br> <br>Sub VBSQL1_Error (SqlConn As Integer, Severity As Integer, ErrorNum As Integer, ErrorStr As String, RetCode As Integer) <br>' Call the required VBSQL error-handling function <br>' OSErr and OSErrStr not used in VBSQL for Windows, but DOS interprets <br>' anything other than -1 as an OS error <br>    OsErr% = -1 <br> <br>    RetCode% = UserSqlErrorHandler%(SqlConn, Severity%, ErrorNum%, OsErr%, ErrorStr$, OsErrStr$) <br> <br> <br>End Sub <br> <br>Sub VBSQL1_Message (SqlConn As Integer, Message As Long, State As Integer, Severity As Integer, MsgStr As String) <br>    UserSqlMsgHandler SqlConn, Message&amp;, State%, Severity%, MsgStr$ <br> <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
