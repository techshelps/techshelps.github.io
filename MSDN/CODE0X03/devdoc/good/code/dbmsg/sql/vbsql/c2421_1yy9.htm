<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2421"></a>README.TXT</h2>
<pre><code>**************************************************************** <br>                MICROSOFT SQL WORKSTATION 6.0 <br>          DB-LIBRARY FOR VISUAL BASIC SAMPLE PROGRAMS <br>**************************************************************** <br>This file tells about the DB-Library for Visual Basic sample <br>programs included with Microsoft(R) SQL Workstation 6.0. The <br>information in this file supplements the information in your  <br>Microsoft SQL Workstation documentation. <br> <br>**************************************************************** <br>DB-LIBRARY FOR VISUAL BASIC SAMPLE APPLICATIONS <br> <br>DB-Library for Visual Basic provides a set of sample applications <br>that demonstrate the use of many DB-Library for Visual Basic functions <br>and routines. <br> <br>You can use the code in these sample applications as models or <br>templates for your own applications. By cutting and pasting code from <br>specific application files, by using global procedures from the sample <br>common code files, and by including the declarations for those <br>procedures from the sample include files, you can quickly create the <br>foundation for your own applications. <br> <br>The QUERY sample application demonstrates the following SQL Server  <br>operations. Each sample: <br>* Logs in and opens a connection to SQL Server from the client. <br>* Allows a user to choose which database to use. <br>* Allows the user to send a query to SQL Server. <br>* Accepts results from SQL Server and returns the results to the user. <br>* Closes the SQL Server connection. <br>* Exits the application. <br>* Handles any errors or messages generated by these operations. <br> <br>The rest of this file describes the contents of all of the Project <br>files used by the QUERY sample application. This information is <br>organized by the names of the subdirectories in which each Project <br>file resides. <br> <br>Once you are familiar with the QUERY sample applications and their <br>use of the common code directories, refer to the other sample <br>applications provided for examples of implementing additional <br>SQL Server features. <br> <br>COMMON CODE <br> <br>The files in the subdirectory DBLIB\VSAMPLES\COMMON contain general <br>code that can be used by all DB-Library for Visual Basic applications. <br>The QUERY sample application include all of the COMMON files with  <br>their Project files and invoke the procedures that these files contain. <br>The following sections describe the files contained in the COMMON <br>subdirectory. <br> <br>The VBSQLGEN.BAS File <br>The VBSQLGEN.BAS module defines a set of procedures that perform tasks  <br>common to most DB-Library for Visual Basic applications. Such tasks <br>include: <br>* Opening and closing a SQL Server connection <br>* Processing SQL queries  <br>* Executing SQL commands  <br>* Displaying error messages  <br> <br>The LOGIN.FRM File <br>The LOGIN.FRM file calls a subroutine in the VBSQLGEN.BAS module that <br>uses DB-Library for Visual Basic functions to open a SQL Server <br>connection and log in users. The code for logging in users is used in <br>all of the sample applications except the browse-mode example. <br> <br>The CHNGDB.FRM File <br>The CHNGDB.FRM file uses the DB-Library for Visual Basic function <br>SqlUse% to change the current database to a database name supplied <br>by the user. The code for changing databases is used in all of the <br>sample applications. <br> <br>THE WINCODE DIRECTORY <br> <br>The files in the DBLIB\VSAMPLES\WINCODE subdirectory contain code <br>that is available for use by all applications. To use the common code, <br>you can add the files to a Visual Basic Project or you can copy the <br>code from these files into an existing file. The following sections <br>describe the files in the WINCODE subdirectory. <br> <br>INIEXITW.BAS <br>INIEXITW.BAS contains DB-Library initialization and exit code. <br> <br>RESULTSW.BAS <br>RESULTSW.BAS contains procedures for handling compute rows and stored  <br>procedure output parameters. These procedures are called by the  <br>Process_Sql_query procedure defined in VBSQLGEN.BAS. <br> <br>THE VBQUERY DIRECTORY <br> <br>The directory DBLIB\VSAMPLES\QUERY include the project make file for <br>the sample application and the sample application's primary, or <br>startup, form, VBQUERY.FRM. <br> <br>VBQUERY.BAS and VBSQL.BAS <br>VBQUERY.BAS and VBSQL.BAS contain the global definitions for this  <br>application. They include the relevant variable definitions from <br>GENGLOB.BAS. These are required. The VBSQL.BAS file contains the <br>global definitions for VBSQL functions and constants. <br> <br>ADDITIONAL SAMPLE APPLICATIONS <br> <br>This section provides information about some of the other <br>DB-Library for Visual Basic sample applications provided in your <br>package. <br> <br>The TEXT Sample Application <br>The TEXT sample application enables users to select text files from <br>a database, and view and edit the text in the text file. <br> <br>The TEXT.FRM file of the TEXT project contains the code of the main <br>form of the application. It includes subroutines for selecting,  <br>retrieving, and editing text files. For example, the LoadText <br>subroutine contains DB-Library for Visual Basic functions that read <br>text fields from database tables; the InsertText subroutine contains <br>DB-Library for Visual Basic functions that insert text into database <br>text tables. <br> <br>The IMAGE Sample Application <br>The IMAGE sample application enables users to select image files from <br>a database, view images, and add images to a database. It looks and <br>works much like the preceding TEXT sample application. <br> <br>The IMAGE.FRM file of the IMAGE project contains the code of the <br>main form of the application. It includes subroutines for selecting, <br>retrieving, and adding image files. For example, the LoadImage  <br>subroutine contains DB-Library functions that read images from  <br>databases; the InsertImage subroutine contains DB-Library functions <br>that insert images into databases. <br> <br>The BROWSE Sample Application <br>The BROWSE sample application demonstrates the use of DB-Library <br>for Visual Basic browse-mode functions. The BROWSE project uses the <br>common code files VBSQLGEN.BAS and ABOUT.FRM. The code from the <br>GENGLOB.BAS file is included in the BROWSE.BAS global file. <br> <br>The BLOGIN.FRM file includes the code from the common code file <br>LOGIN.FRM. However, because the browse mode requires two SQL Server <br>connections, the code to open a connection is repeated. The <br>OK_BUTTON_Click subroutine of the BLOGIN.FRM file illustrates the <br>correct way to open SQL Server connections for browsing. <br> <br>The BROWSE.FRM file of the BROWSE project contains the code of <br>the main form of the application. It includes subroutines for <br>selecting, retrieving, and updating rows of information. For example, <br>the Select_Button_Click subroutine sends a command to query <br>SQL Server and processes the results of the query; the  <br>Update_Button_Click subroutine sends a command to update or change  <br>information in results rows; the ProcessResultRow subroutine  <br>processes the data in a results row. This subroutine is used in  <br>the Select_Button_Click subroutine mentioned previously. <br> <br>The CURSORS Sample Application <br>The CURSORS sample application illustrates the use of cursors in <br>DB-Library for Visual Basic applications. The CURSORS project uses <br>the common code files VBSQLGEN.BAS, and LOGIN.FRM. The code from  <br>the GENGLOB.BAS file is included in the CURSORS.BAS global file. <br>The CURSORS.FRM file of the CURSORS project contains the code of  <br>the main form of the application. It includes subroutines for  <br>opening and closing cursors, fetching rows of data, updating rows,  <br>and displaying rows. <br> <br>The RPC Sample Application <br>The RPC sample application shows the use of SqlRpcSend% and related <br>calls. This sample invokes stored procedures directly (not through <br>a language command) and retrieves return status and output  <br>parameters. Direct invocation of stored procedures is especially  <br>useful with Open Data Services applications. The sample also shows <br>the use of SqlServerEnum% for listing available servers. <br> <br>The RPC sample application contains most of the stored procedure <br>calls in the RPC.FRM module. The RPCLOGIN.FRM file shows the use of  <br>SqlServerEnum%. RPC return status and output parameter handling are  <br>covered in RESULTSW.BAS, called by the Process_Sql_query function  <br>in VBSQLGEN.BAS. <br> <br>The PUBS Sample Application <br>The PUBS sample application is a full-featured application showing <br>how many VBSQL functions can be combined into a business application. <br>This sample shows a data entry and query form for the authors in  <br>the pubs database. It illustrates the use of a list box for  <br>maintaining a key set of records, browse mode for optimistic  <br>concurrency, and building SQL statements based on data entered. <br>It also shows techniques for using Visual Basic features such as  <br>MDI child windows and grid controls within an application. <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
