<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>RESULTSW.BAS</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2441"></a>RESULTSW.BAS</h2>
<pre><code><br>Sub Process_altrows (Result As Integer, OutputData() As String, outputrowcnt As Integer, colpositions() As Integer) <br> <br>Rem Alternate rows (from COMPUTE clause) only available in VBWin <br>Rem Get the number of columns in the compute row. <br>Rem Determine what type of aggregate each column uses <br>Rem Line up the column in the correct position <br>Rem Output the row. <br> <br>OutputData(outputrowcnt%) = " " <br>outputrowcnt% = outputrowcnt% + 1 <br>AltStr1$ = Space$(256) <br>AltStr2$ = Space$(256) <br>AltStr3$ = Space$(256) <br> <br>numalts% = SqlNumAlts%(SqlConn, Result%) <br>For x% = 1 To numalts% <br>    altcol% = SqlAltColId%(SqlConn, Result%, x%) <br>    alttype$ = SQLPRTYPE(SqlAltOp(SqlConn, Result%, x%)) <br>    altvalue$ = SqlAData$(SqlConn, Result%, x%) <br> <br>    Mid$(AltStr1$, colpositions(altcol%), Len(alttype$)) = alttype$ <br>    Mid$(AltStr2$, colpositions(altcol%), Len(alttype$)) = String$(Len(alttype$), "-") <br>    Mid$(AltStr3$, colpositions(altcol%), Len(altvalue$)) = altvalue$ <br>     <br>Next x% <br> <br>OutputData(outputrowcnt%) = AltStr1$ <br>outputrowcnt% = outputrowcnt% + 1 <br>OutputData(outputrowcnt%) = AltStr2$ <br>outputrowcnt% = outputrowcnt% + 1 <br>OutputData(outputrowcnt%) = AltStr3$ <br>outputrowcnt% = outputrowcnt% + 1 <br>OutputData(outputrowcnt%) = " " <br>outputrowcnt% = outputrowcnt% + 1 <br> <br> <br>End Sub <br> <br>Sub Process_rpc_returns (OutputData() As String, outputrowcnt As Integer) <br> <br>Rem See if there are any return parameters from a stored procedure (available in VBWin only). <br>Rem Then See if there is a return status <br> <br>    numrets% = SQLNumRets(SqlConn) <br>    If numrets% &lt;&gt; 0 Then <br>OutputData(outputrowcnt%) = " " <br>outputrowcnt% = outputrowcnt% + 1 <br>For i% = 1 To numrets% <br>    DataStr$ = "NAME: " + SQLRetName(SqlConn, i%) <br>    DataStr$ = DataStr$ + "  TYPE: " + SQLPRTYPE(SQLRetType(SqlConn, i%)) <br>    DataStr$ = DataStr$ + "  LENGTH: " + Str$(SQLRetLen(SqlConn, i%)) <br>    DataStr$ = DataStr$ + "  VALUE: " + SQLRetData(SqlConn, i%) <br>    OutputData(outputrowcnt%) = DataStr$ <br>    outputrowcnt% = outputrowcnt% + 1 <br>Next i% <br>    End If <br> <br>    If (SQLHasRetStat(SqlConn) = SUCCEED%) Then <br>OutputData(outputrowcnt%) = " " <br>outputrowcnt% = outputrowcnt% + 1 <br>OutputData(outputrowcnt%) = "RETURN STATUS: " + Str$(SQLRetStatus(SqlConn)) <br>outputrowcnt% = outputrowcnt% + 1 <br>    End If <br> <br>End Sub <br> </code></pre>
<p>&nbsp;</p></body>
</HTML>
