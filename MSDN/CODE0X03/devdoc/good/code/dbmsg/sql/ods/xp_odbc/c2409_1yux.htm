<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ODBCSS.H</title>
<link disabled rel=stylesheet href=../../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2409"></a>ODBCSS.H</h2>
<pre><code>/* <br>** ODBCSS.H - This is the application include file for the <br>** SQL Server driver specific defines. <br>** <br>** (C) Copyright 1993-1996 By Microsoft Corp. <br>** <br>*/ <br> <br>//SQLSetConnectOption/SQLSetStmtOption driver specific defines. <br>//Microsoft has 1200 thru 1249 reserved for Microsoft SQL Server driver usage. <br> <br>//Connection Options <br>#define SQL_COPT_SS_BASE1200 <br>#define SQL_REMOTE_PWD(SQL_COPT_SS_BASE+1) // dbrpwset SQLSetConnectOption only <br>#define SQL_USE_PROCEDURE_FOR_PREPARE(SQL_COPT_SS_BASE+2) // Use create proc for SQLPrepare <br>#define SQL_INTEGRATED_SECURITY (SQL_COPT_SS_BASE+3) // Force integrated security on login <br>#define SQL_PRESERVE_CURSORS(SQL_COPT_SS_BASE+4) // Preserve server cursors after SQLTransact <br>#define SQL_COPT_SS_USER_DATA(SQL_COPT_SS_BASE+5) // dbgetuserdata/dbsetuserdata <br>#define SQL_COPT_SS_ANSI_OEM(SQL_COPT_SS_BASE+6) // dbsetopt/DBANSItoOEM/DBOEMtoANSI <br>#define SQL_COPT_SS_ENLIST_IN_DTC(SQL_COPT_SS_BASE+7) // Enlist in a Viper transaction <br>#define SQL_COPT_SS_ENLIST_IN_XA(SQL_COPT_SS_BASE+8) // Enlist in a XA transaction <br>#define SQL_COPT_SS_CONNECTION_DEAD(SQL_COPT_SS_BASE+9) // dbdead SQLGetConnectOption only <br>#define SQL_COPT_SS_FALLBACK_CONNECT(SQL_COPT_SS_BASE+10) // Enables FallBack connections <br>#define SQL_COPT_SS_PERF_DATA(SQL_COPT_SS_BASE+11) // Used to access SQL Server ODBC driver performance data <br>#define SQL_COPT_SS_PERF_DATA_LOG(SQL_COPT_SS_BASE+12) // Used to set the logfile name for the Performance data <br>#define SQL_COPT_SS_PERF_QUERY_INTERVAL (SQL_COPT_SS_BASE+13) // Used to set the query logging threshold in milliseconds. <br>#define SQL_COPT_SS_PERF_QUERY_LOG(SQL_COPT_SS_BASE+14) // Used to set the logfile name for saving queryies. <br>#define SQL_COPT_SS_PERF_QUERY(SQL_COPT_SS_BASE+15) // Used to start and stop query logging. <br>#define SQL_COPT_SS_PERF_DATA_LOG_NOW(SQL_COPT_SS_BASE+16) // Used to make a statistics log entry to disk. <br> <br>#define SQL_COPT_SS_MAX_USEDSQL_COPT_SS_PERF_DATA_LOG_NOW <br> <br>//Statement Options <br>#define SQL_SOPT_SS_BASE1225 <br>#define SQL_TEXTPTR_LOGGING (SQL_SOPT_SS_BASE+0) // Text pointer logging <br>#define SQL_SOPT_SS_CURRENT_COMMAND(SQL_SOPT_SS_BASE+1) // dbcurcmd SQLGetStmtOption only <br>#define SQL_SOPT_SS_MAX_USEDSQL_SOPT_SS_CURRENT_COMMAND <br> <br> <br>//Defines for use with SQL_USE_PROCEDURE_FOR_PREPARE <br>#define SQL_UP_OFF0L//Procedures won't be used for prepare <br>#define SQL_UP_ON1L//Procedures will be used for prepare <br>#define SQL_UP_ON_DROP2L//Temp procedures will be explicitly dropped <br>#define SQL_UP_DEFAULTSQL_UP_ON <br> <br>//Defines for use with SQL_INTEGRATED_SECURITY - only useable before connecting <br>#define SQL_IS_OFF0L//Integrated security isn't used <br>#define SQL_IS_ON1L//Integrated security is used <br>#define SQL_IS_DEFAULTSQL_IS_OFF <br> <br>//Defines for use with SQL_PRESERVE_CURSORS <br>#define SQL_PC_OFF0L//Cursors are closed on SQLTransact <br>#define SQL_PC_ON1L//Cursors remain open on SQLTransact <br>#define SQL_PC_DEFAULTSQL_PC_OFF <br> <br>//Defines for use with SQL_COPT_SS_USER_DATA <br>#define SQL_UD_NOTSET0L//No user data pointer set <br> <br>//Defines for use with SSQL_COPT_SS_ANSI_OEMQL_ANSI_OEM <br>#define SQL_AO_OFF0L//ANSI/OEM translation is not performed <br>#define SQL_AO_ON1L//ANSI/OEM translation is performed <br>#define SQL_AO_DEFAULTSQL_AO_OFF//Default unless DSN OEM/ANSI checkbox is checked <br> <br>//Defines for use with SQL_COPT_SS_CONNECTION_DEAD <br>#define SQL_CD_FALSE0L//Connection is open/available <br>#define SQL_CD_TRUE1L//Connection is closed/dead <br> <br>//Defines for use with SQL_COPT_SS_FALLBACK_CONNECT <br>#define SQL_FB_OFF0L//FallBack connections are disabled <br>#define SQL_FB_ON1L//FallBack connections are enabled <br>#define SQL_FB_DEFAULTSQL_FB_OFF <br> <br>//Defines for use with SQL_ENLIST_IN_DTC <br>#define SQL_DTC_DONE0L//Delimits end of Viper transaction <br> <br>//Defines for use with SQL_TEXTPTR_LOGGING <br>#define SQL_TL_OFF0L//No logging on text pointer ops <br>#define SQL_TL_ON1L//Logging occurs on text pointer ops <br>#define SQL_TL_DEFAULTSQL_TL_ON <br> <br> <br>//SQLColAttributes driver specific defines. <br>//SQLSet/GetDescField driver specific defines. <br>//Microsoft has 1200 thru 1249 reserved for Microsoft SQL Server driver usage. <br> <br>#define SQL_CA_SS_BASE1200 <br>#define SQL_CA_SS_COLUMN_SSTYPE(SQL_CA_SS_BASE+0)//dbcoltype/dbaltcoltype <br>#define SQL_CA_SS_COLUMN_UTYPE(SQL_CA_SS_BASE+1)//dbcolutype/dbaltcolutype <br>#define SQL_CA_SS_NUM_ORDERS(SQL_CA_SS_BASE+2)//dbnumorders <br>#define SQL_CA_SS_COLUMN_ORDER(SQL_CA_SS_BASE+3)//dbcolorder <br>#define SQL_CA_SS_COLUMN_VARYLEN(SQL_CA_SS_BASE+4)//dbvarylen <br>#define SQL_CA_SS_NUM_COMPUTES(SQL_CA_SS_BASE+5)//dbnumcompute <br>#define SQL_CA_SS_COMPUTE_ID(SQL_CA_SS_BASE+6)//dbnextrow status return <br>#define SQL_CA_SS_COMPUTE_BYLIST(SQL_CA_SS_BASE+7)//dbbylist <br>#define SQL_CA_SS_COLUMN_ID(SQL_CA_SS_BASE+8)//dbaltcolid <br>#define SQL_CA_SS_COLUMN_OP(SQL_CA_SS_BASE+9)//dbaltcolop <br>#define SQL_CA_SS_MAX_USEDSQL_CA_SS_COLUMN_OP <br> <br>// SQL Server Data Type Tokens. Returned by SQLColAttributes/SQL_CA_SS_COLUMN_SSTYPE. <br>#define SQLTEXT 0x23 <br>#define SQLVARBINARY0x25 <br>#define SQLINTN 0x26 <br>#define SQLVARCHAR0x27 <br>#define SQLBINARY0x2d <br>#define SQLIMAGE0x22 <br>#define SQLCHARACTER0x2f <br>#define SQLINT1 0x30 <br>#define SQLBIT0x32 <br>#define SQLINT2 0x34 <br>#define SQLINT4 0x38 <br>#define SQLMONEY0x3c <br>#define SQLDATETIME 0x3d <br>#define SQLFLT8 0x3e <br>#define SQLFLTN 0x6d <br>#define SQLMONEYN0x6e <br>#define SQLDATETIMN 0x6f <br>#define SQLFLT4 0x3b <br>#define SQLMONEY40x7a <br>#define SQLDATETIM4 0x3a <br>#define SQLDECIMAL0x37 <br>#define SQLDECIMALN0x6a <br>#define SQLNUMERIC0x3f <br>#define SQLNUMERICN 0x6c <br> <br>//User Data Type definitions. Returned by SQLColAttributes/SQL_CA_SS_COLUMN_UTYPE. <br>#define SQLudtTEXT19 <br>#define SQLudtVARBINARY 4 <br>#define SQLudtINTN13 <br>#define SQLudtVARCHAR2 <br>#define SQLudtBINARY3 <br>#define SQLudtIMAGE 20 <br>#define SQLudtCHAR1 <br>#define SQLudtINT15 <br>#define SQLudtBIT16 <br>#define SQLudtINT26 <br>#define SQLudtINT47 <br>#define SQLudtMONEY 11 <br>#define SQLudtDATETIME12 <br>#define SQLudtFLT88 <br>#define SQLudtFLTN14 <br>#define SQLudtMONEYN17 <br>#define SQLudtDATETIMN15 <br>#define SQLudtSYSNAME18 <br>#define SQLudtTIMESTAMP 80 <br>#define SQLudtFLT423 <br>#define SQLudtMONEY421 <br>#define SQLudtDATETIM422 <br>#define SQLudtDECML24 <br>#define SQLudtDECMLN26 <br>#define SQLudtNUM10 <br>#define SQLudtNUMN25 <br>#define MIN_USER_DATATYPE100 <br> <br>// aggregate operator types (returned by SQLColAttributes/SQL_CA_SS_COLUMN_OP) <br>#define SQLAOPCNT0x4b <br>#define SQLAOPSUM0x4d <br>#define SQLAOPAVG0x4f <br>#define SQLAOPMIN0x51 <br>#define SQLAOPMAX0x52 <br>#define SQLAOPANY0x53 <br>#define SQLAOPNOOP0x56 <br> <br> <br>//SQLGetInfo driver specific defines. <br>//Microsoft has 1200 thru 1249 reserved for Microsoft SQL Server driver usage. <br> <br>#define SQL_INFO_SS_FIRST1200 <br>#define SQL_INFO_SS_NETLIB_NAME (SQL_INFO_SS_FIRST+0) //  dbprocinfo <br>#define SQL_INFO_SS_MAX_USEDSQL_INFO_SS_NETLIB_NAME <br> <br> <br>//Internal server datatypes - used when binding to SQL_C_BINARY <br>#ifndef MAXNUMERICLEN// Resolve ODS/DBLib conflicts <br>typedef struct dbmoney <br>{// Internal representation of MONEY data type <br>LONG  mnyhigh;// Money value *10,000 (High 32 bits/signed) <br>ULONG mnylow;// Money value *10,000 (Low 32 bits/unsigned) <br>} DBMONEY; <br> <br>typedef struct dbdatetime <br>{// Internal representation of DATETIME data type <br>LONG  dtdays;// No of days since Jan-1-1900 (maybe negative) <br>ULONG dttime;// No. of 300 hundredths of a second since midnight <br>} DBDATETIME; <br> <br>typedef struct dbdatetime4 <br>{// Internal representation of SMALLDATETIME data type <br>USHORT numdays; // No of days since Jan-1-1900 <br>USHORT nummins; // No. of minutes since midnight <br>} DBDATETIM4; <br> <br>typedef LONG DBMONEY4;// Internal representation of SMALLMONEY data type <br>// Money value *10,000 <br> <br>#define MAXNUMERICLEN 16 <br> <br>#define DBNUM_PREC_TYPE BYTE <br>#define DBNUM_SCALE_TYPE BYTE <br>#define DBNUM_VAL_TYPE BYTE <br> <br>typedef struct dbnumeric <br>{// Internal representation of NUMERIC data type <br>DBNUM_PREC_TYPE   precision;// Precision <br>DBNUM_SCALE_TYPE  scale;// Scale <br>BYTE  sign; // Sign (1 if positive, 0 if negative) <br>DBNUM_VAL_TYPE  val[MAXNUMERICLEN];// Value <br>} DBNUMERIC; <br> <br>typedef DBNUMERIC DBDECIMAL;// Internal representation of DECIMAL data type <br>#endif //MAXNUMERICLEN <br> <br>/***************************************************************** <br> This struct is a global used for  <br> gathering statistal data on the driver. <br> Access to this struct is controled via the  <br> pStatCrit; <br>******************************************************************/ <br> <br>typedef struct sqlperf <br>{ <br>// Application Profile Statistics <br>DWORD TimerResolution; <br>DWORD SQLidu; <br>DWORD SQLiduRows; <br>DWORD SQLSelects; <br>DWORD SQLSelectRows; <br>DWORD Transactions; <br>DWORD SQLPrepares; <br>DWORD ExecDirects; <br>DWORD SQLExecutes; <br>DWORD CursorOpens; <br>DWORD CursorSize; <br>DWORD CursorUsed; <br>LDOUBLE PercentCursorUsed; <br>LDOUBLE AvgFetchTime; <br>LDOUBLE AvgCursorSize;  <br>LDOUBLE AvgCursorUsed; <br>DWORD SQLFetchTime; <br>DWORD SQLFetchCount; <br>DWORD CurrentStmtCount; <br>DWORD MaxOpenStmt; <br>DWORD SumOpenStmt; <br> <br>// Connection Statistics <br>DWORD CurrentConnectionCount; <br>DWORD MaxConnectionsOpened; <br>DWORD SumConnectionsOpened; <br>DWORD SumConnectiontime; <br>LDOUBLE AvgTimeOpened; <br> <br>// Network Statistics <br>DWORD ServerRndTrips; <br>DWORD BuffersSent; <br>DWORD BuffersRec; <br>DWORD BytesSent; <br>DWORD BytesRec; <br> <br>// Time Statistics; <br>DWORD msExecutionTime; <br>DWORD msNetWorkServerTime; <br> <br>} SQLPERF; <br> <br>// The following are option for SQL_COPT_SS_PERF_DATA and SQL_COPT_SS_PERF_QUERY <br>#define SQL_PERF_START1// Starts the driver sampling performance data. <br>#define SQL_PERF_STOP2// Stops the counters from sampling performance data. <br> <br>//The following options have been deprecated <br> <br>#define SQL_FAST_CONNECT(SQL_COPT_SS_BASE+0) <br>//Defines for use with SQL_FAST_CONNECT - only useable before connecting <br>#define SQL_FC_OFF0L//Fast connect is off <br>#define SQL_FC_ON1L//Fast connect is on <br>#define SQL_FC_DEFAULTSQL_FC_OFF <br> <br>/*  <br> <br>The following data struct is used as the vParam with  <br>SQL_COPT_SS_ENLIST_IN_XA to enlist in a XA stansaction <br>when calling SQLSetStmtAttribute(); <br> <br>*/ <br>typedef struct SQLXaTranTAG <br>{ <br>    void FAR *transManager; <br>    void FAR *xaTransID; <br>    ULONGxaTransIDLength; <br>    DWORD   dwErrorInfo; <br>} SQLXaTran; <br>                            <br>//End of odbcss.h </code></pre>
<p>&nbsp;</p></body>
</HTML>
