<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EMPDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context1737"></a>EMPDLG.CPP</h2>
<pre><code>// EmpDlg.cpp : implementation file <br>// <br> <br>#include "stdafx.h" <br>#include "Emp.h" <br>#include "EmpDlg.h" <br> <br>#ifdef _DEBUG <br>//#define new DEBUG_NEW <br>#undef THIS_FILE <br>static char THIS_FILE[] = __FILE__; <br>#endif <br> <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CAboutDlg dialog used for App About <br> <br>class CAboutDlg : public CDialog <br>{ <br>public: <br>CAboutDlg(); <br> <br>// Dialog Data <br>//{{AFX_DATA(CAboutDlg) <br>enum { IDD = IDD_ABOUTBOX }; <br>//}}AFX_DATA <br> <br>// ClassWizard generated virtual function overrides <br>//{{AFX_VIRTUAL(CAboutDlg) <br>protected: <br>virtual void DoDataExchange(CDataExchange* pDX);    // DDX/DDV support <br>//}}AFX_VIRTUAL <br> <br>// Implementation <br>protected: <br>//{{AFX_MSG(CAboutDlg) <br>//}}AFX_MSG <br>DECLARE_MESSAGE_MAP() <br>}; <br> <br>CAboutDlg::CAboutDlg() : CDialog(CAboutDlg::IDD) <br>{ <br>//{{AFX_DATA_INIT(CAboutDlg) <br>//}}AFX_DATA_INIT <br>} <br> <br>void CAboutDlg::DoDataExchange(CDataExchange* pDX) <br>{ <br>CDialog::DoDataExchange(pDX); <br>//{{AFX_DATA_MAP(CAboutDlg) <br>//}}AFX_DATA_MAP <br>} <br> <br>BEGIN_MESSAGE_MAP(CAboutDlg, CDialog) <br>//{{AFX_MSG_MAP(CAboutDlg) <br>// No message handlers <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CEmpDlg dialog <br> <br>CEmpDlg::CEmpDlg(CWnd* pParent /*=NULL*/) <br>: CDialog(CEmpDlg::IDD, pParent) <br>{ <br>//{{AFX_DATA_INIT(CEmpDlg) <br>m_nEmpNum = 0; <br>m_strFirstName = _T(""); <br>m_strHomePhone = _T(""); <br>m_strLastName = _T(""); <br>m_strTitle = _T(""); <br>//}}AFX_DATA_INIT <br>// Note that LoadIcon does not require a subsequent DestroyIcon in Win32 <br>m_hIcon = AfxGetApp()-&gt;LoadIcon(IDR_MAINFRAME); <br>} <br> <br>CEmpDlg::~CEmpDlg() <br>{ <br>if (m_pBiz != NULL) <br>delete m_pBiz; <br>} <br> <br>void CEmpDlg::DoDataExchange(CDataExchange* pDX) <br>{ <br>CDialog::DoDataExchange(pDX); <br>//{{AFX_DATA_MAP(CEmpDlg) <br>DDX_Text(pDX, IDC_EMPNUM, m_nEmpNum); <br>DDX_Text(pDX, IDC_FIRSTNAME, m_strFirstName); <br>DDX_Text(pDX, IDC_HOMEPHONE, m_strHomePhone); <br>DDX_Text(pDX, IDC_LASTNAME, m_strLastName); <br>DDX_Text(pDX, IDC_TITLE, m_strTitle); <br>//}}AFX_DATA_MAP <br>} <br> <br>BEGIN_MESSAGE_MAP(CEmpDlg, CDialog) <br>//{{AFX_MSG_MAP(CEmpDlg) <br>ON_WM_SYSCOMMAND() <br>ON_WM_PAINT() <br>ON_WM_QUERYDRAGICON() <br>ON_BN_CLICKED(ID_EDIT_ADD, OnEditAdd) <br>ON_BN_CLICKED(ID_EDIT_DELETE, OnEditDelete) <br>ON_BN_CLICKED(ID_EDIT_NEXT, OnEditNext) <br>ON_BN_CLICKED(ID_EDIT_PREVIOUS, OnEditPrevious) <br>ON_BN_CLICKED(ID_EDIT_FIRST, OnEditFirst) <br>ON_BN_CLICKED(ID_EDIT_LAST, OnEditLast) <br>ON_BN_CLICKED(ID_EDIT_FINDF, OnEditFindF) <br>ON_BN_CLICKED(ID_APP_OPEN_RECORD, OnAppOpenRecord) <br>//}}AFX_MSG_MAP <br>END_MESSAGE_MAP() <br> <br>///////////////////////////////////////////////////////////////////////////// <br>// CEmpDlg message handlers <br> <br>BOOL CEmpDlg::OnInitDialog() <br>{ <br>CDialog::OnInitDialog(); <br> <br>// Add "About..." menu item to system menu. <br> <br>// IDM_ABOUTBOX must be in the system command range. <br>ASSERT((IDM_ABOUTBOX &amp; 0xFFF0) == IDM_ABOUTBOX); <br>ASSERT(IDM_ABOUTBOX &lt; 0xF000); <br> <br>CMenu* pSysMenu = GetSystemMenu(FALSE); <br>CString strAboutMenu; <br>strAboutMenu.LoadString(IDS_ABOUTBOX); <br>if (!strAboutMenu.IsEmpty()) <br>{ <br>pSysMenu-&gt;AppendMenu(MF_SEPARATOR); <br>pSysMenu-&gt;AppendMenu(MF_STRING, IDM_ABOUTBOX, strAboutMenu); <br>} <br> <br>// Set the icon for this dialog.  The framework does this automatically <br>//  when the application's main window is not a dialog <br>SetIcon(m_hIcon, TRUE);// Set big icon <br>SetIcon(m_hIcon, FALSE);// Set small icon <br>    <br>//Never enable the employee ID <br>(GetDlgItem(IDC_EMPNUM))-&gt;EnableWindow(FALSE); <br> <br>// TODO: Add extra initialization here <br>m_pBiz = new CEmpBiz; <br> <br>return TRUE;  // return TRUE  unless you set the focus to a control <br>} <br> <br>void CEmpDlg::OnSysCommand(UINT nID, LPARAM lParam) <br>{ <br>if ((nID &amp; 0xFFF0) == IDM_ABOUTBOX) <br>{ <br>CAboutDlg dlgAbout; <br>dlgAbout.DoModal(); <br>} <br>else <br>{ <br>CDialog::OnSysCommand(nID, lParam); <br>} <br>} <br> <br>// If you add a minimize button to your dialog, you will need the code below <br>//  to draw the icon.  For MFC applications using the document/view model, <br>//  this is automatically done for you by the framework. <br> <br>void CEmpDlg::OnPaint()  <br>{ <br>if (IsIconic()) <br>{ <br>CPaintDC dc(this); // device context for painting <br> <br>SendMessage(WM_ICONERASEBKGND, (WPARAM) dc.GetSafeHdc(), 0); <br> <br>// Center icon in client rectangle <br>int cxIcon = GetSystemMetrics(SM_CXICON); <br>int cyIcon = GetSystemMetrics(SM_CYICON); <br>CRect rect; <br>GetClientRect(&amp;rect); <br>int x = (rect.Width() - cxIcon + 1) / 2; <br>int y = (rect.Height() - cyIcon + 1) / 2; <br> <br>// Draw the icon <br>dc.DrawIcon(x, y, m_hIcon); <br>} <br>else <br>{ <br>CDialog::OnPaint(); <br>} <br> <br>try  <br>{ <br>m_nEmpNum =  m_pBiz-&gt;GetEmployeeId(); <br>m_strFirstName = m_pBiz-&gt;GetFirstName(); <br>m_strLastName = m_pBiz-&gt;GetLastName(); <br>m_strHomePhone = m_pBiz-&gt;GetHomePhone(); <br>m_strTitle = m_pBiz-&gt;GetTitle(); <br>} <br>catch (HRESULT hr) <br>{ <br>TCHAR szBuf[256]; <br>MessageBeep(0); <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>return ; <br>}  <br> <br>UpdateData(FALSE); //Invoke Data Exchange (copy member data to form controls) <br>return ; <br>} <br> <br>// The system calls this to obtain the cursor to display while the user drags <br>//  the minimized window. <br>HCURSOR CEmpDlg::OnQueryDragIcon() <br>{ <br>return (HCURSOR) m_hIcon; <br>} <br> <br> <br>void CEmpDlg::OnEditAdd()  <br>{ <br>// TODO: Add your control notification handler code here <br>try <br>{ <br>if(!CommitAlteredEmpRec()) <br>return; <br> <br>m_pBiz-&gt;AddRecord(); <br> <br>OnPaint(); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>MessageBeep(0); <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>return ; <br>} <br> <br>void CEmpDlg::OnEditDelete()  <br>{ <br>// TODO: Add your control notification handler code here <br>try <br>{ <br>//Delete method depends on current mode <br>m_pBiz-&gt;DeleteRecord(); <br>OnPaint(); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>MessageBeep(0); <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>return ; <br>} <br> <br>void CEmpDlg::OnEditNext()  <br>{ <br>// TODO: Add your control notification handler code here <br>if(!CommitAlteredEmpRec())  <br>return; <br> <br>try <br>{ <br>if(m_pBiz-&gt;MoveNext()) <br>OnPaint(); <br>else <br>MessageBeep(0); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>} <br> <br>void CEmpDlg::OnEditPrevious()  <br>{ <br>// TODO: Add your control notification handler code here <br>if(!CommitAlteredEmpRec()) <br>return; <br> <br>try <br>{ <br>if(m_pBiz-&gt;MovePrevious()) <br>OnPaint(); <br>else <br>MessageBeep(0); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>} <br> <br> <br> <br>void CEmpDlg::OnEditFirst()  <br>{ <br>// TODO: Add your control notification handler code here <br>if(!CommitAlteredEmpRec()) <br>return; <br> <br>try <br>{ <br>if(m_pBiz-&gt;MoveFirst()) <br>OnPaint(); <br>else <br>MessageBeep(0); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>} <br> <br>void CEmpDlg::OnEditLast()  <br>{ <br>// TODO: Add your control notification handler code here <br>if(!CommitAlteredEmpRec()) <br>return; <br> <br>try <br>{ <br>if(m_pBiz-&gt;MoveLast()) <br>OnPaint(); <br>else <br>MessageBeep(0); <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>} <br> <br>void CEmpDlg::OnEditFindF()  <br>{ <br>try <br>{ <br>if(m_pBiz-&gt;FindForward(PrepareCriteria())) <br>{ <br>OnPaint(); <br>} <br>else <br>{//not found. <br>MessageBeep(0); <br>//.. Should return to the last visited record. <br>} <br>} <br>catch( HRESULT hr ) <br>{ <br>TCHAR szBuf[256]; <br>MessageBeep(0); <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>} <br>} <br> <br> <br> <br>BOOL CEmpDlg::CommitAlteredEmpRec() <br>{ <br>CStringstrOldFirstName, strOldHomePhone, strOldLastName, strOldTitle; <br>COleVariantvFirstName, vHomePhone, vLastName, vTitle, vID; <br> <br>if (!m_pBiz-&gt;m_fConnected) <br>return FALSE; <br> <br>//Get current record string values <br>try <br>{ <br>strOldFirstName = m_pBiz-&gt;GetFirstName(); <br>strOldLastName = m_pBiz-&gt;GetLastName(); <br>strOldHomePhone = m_pBiz-&gt;GetHomePhone(); <br>strOldTitle = m_pBiz-&gt;GetTitle(); <br>} <br>catch(HRESULT  hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>return FALSE; <br>} <br> <br>//Force DDX to update member values <br>if(!UpdateData()) <br>return FALSE; <br> <br>// Did any fields change value? <br>if( <br>(m_strFirstName== strOldFirstName) &amp;&amp; <br>(m_strHomePhone== strOldHomePhone) &amp;&amp; <br>(m_strLastName== strOldLastName) &amp;&amp; <br>(m_strTitle== strOldTitle) &amp;&amp; !m_pBiz-&gt;IsAddMode() ) <br>return TRUE; <br> <br>//Save it, dump it or stay on it? <br>switch (AfxMessageBox(IDS_PROMPT_COMMIT_EMPREC, MB_YESNOCANCEL)) <br>{ <br>case IDYES: <br>{ <br>try <br>{ <br>m_pBiz-&gt;UpdateEmpRec(m_strFirstName, <br>m_strHomePhone, <br>m_strLastName, <br>m_strTitle); <br>} <br>catch (CMemoryException &amp;memx) <br>{ <br>TCHAR szBuf[256]; <br>memx.GetErrorMessage(szBuf, sizeof(szBuf), NULL); <br>AfxMessageBox(szBuf); <br>return FALSE; <br>} <br>catch(HRESULT  hr ) <br>{ <br>TCHAR szBuf[256]; <br>wsprintf(szBuf, _T("Error: %X \n"), hr); <br>AfxMessageBox(szBuf); <br>return FALSE; <br>} <br> <br>return TRUE; <br>} <br> <br>case IDNO: <br>{ <br>return TRUE; <br>} <br> <br>default: <br>{ <br>GetDlgItem(IDC_EMPNUM)-&gt;SetFocus(); <br>return TRUE; <br>} <br>} <br>return TRUE; <br>} <br> <br>   <br>  <br> <br>CString CEmpDlg::PrepareCriteria() <br>{ <br>CStringstrCriteria = ""; <br> <br>//Force DDX to update member values <br>if(!UpdateData()) <br>return strCriteria; <br> <br>if(m_strFirstName != "") <br>strCriteria = "FirstName = '" + m_strFirstName +"'"; <br>if(m_strLastName != "") <br>strCriteria = strCriteria + ( strCriteria == "" ? "":" AND ") + "LastName = '" + m_strLastName +"'"; <br>if(m_strHomePhone != "") <br>strCriteria = strCriteria + ( strCriteria == "" ? "":" AND ") + "HomePhone = '" + m_strHomePhone +"'"; <br>if(m_strTitle != "") <br>strCriteria = strCriteria + ( strCriteria == "" ? "":" AND ") + "Title = '" + m_strTitle +"'"; <br> <br>return strCriteria; <br>} <br> <br> <br> <br> <br>void CEmpDlg::OnAppOpenRecord()  <br>{ <br>// TODO: Add your control notification handler code here <br> <br>//Connect to the EMPLOYEE database <br>if(!m_pBiz-&gt;ConnectToDatabase()) <br>{ <br>m_pBiz-&gt;m_fConnected = FALSE; <br>return; <br>} <br> <br>m_pBiz-&gt;m_fConnected = TRUE; <br> <br>GetDlgItem(ID_EDIT_PREVIOUS)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_NEXT)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_DELETE)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_ADD)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_LAST)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_FIRST)-&gt;EnableWindow(TRUE); <br>GetDlgItem(ID_EDIT_FINDF)-&gt;EnableWindow(TRUE); <br> <br>OnPaint(); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
