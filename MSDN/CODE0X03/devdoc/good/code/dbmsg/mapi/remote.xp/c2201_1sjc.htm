<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WINDS.IDL</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2208"></a>WINDS.IDL</h2>
<pre><code>[ <br>    uuid(DDFFFE60-36D0-11CE-9F2D-00AA00510E3B), <br>    version(1.6), <br>    pointer_default(unique) <br>] <br> <br>#define MAX_ALIAS_SIZE      16+1 <br>#define MAX_STRING_SIZE     32+1 <br>#define MAX_PHONE_SIZE      12+1 <br>#define MAX_COMMENT_SIZE    79+1 <br>#define MAX_PASSWORD_SIZE   MAX_ALIAS_SIZE <br> <br>interface WINDSREM <br>{ <br>    long RemoteIsServerRunning <br>            (); <br>    long RemoteGetAllAccounts <br>            ([out] long *                                               pPipeNumber); <br>    long RemoteFinishUpload                                              <br>            ([in, string] unsigned char *                               szCookie); <br>    long RemoteGetContainerProps                                         <br>            ([in] unsigned long                                         dwContainerID, <br>             [out] unsigned long *                                      pdwContentCount); <br>    long RemoteGetContainerRecipients                                    <br>            ([in] unsigned long                                         dwFlags, <br>             [in] unsigned long                                         dwContainerID,  <br>             [out] long *                                               pPipeNumber); <br>    long RemoteGetPublicFoldersList                                      <br>            ([in] short                                                 nFlags, <br>             [out] long *                                               pPipeNumber); <br>    long RemoteGetPublicFolderMessages                                   <br>            ([in] short                                                 nFlags, <br>             [in] unsigned long                                         dwFolderID, <br>             [out] long *                                               pPipeNumber); <br>                                                                         <br>    // ANSI Remote server calls <br>    long RemoteChangePasswordA                                           <br>            ([in] unsigned char *                                       szMailbox, <br>             [in, string] unsigned char *                               szOldPassword, <br>             [in, string] unsigned char *                               szNewPassword); <br>    long RemoteLogonMailBoxA                                             <br>            ([in, string] unsigned char *                               szMailbox, <br>             [in, string] unsigned char *                               szPassword, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szFullName, <br>             [out] unsigned long *                                      pdwMailboxID); <br>    long RemoteLogonMailBoxAndSetNotifA <br>            ([in, string] unsigned char *                               szMailbox, <br>             [in, string] unsigned char *                               szPassword, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szFullName, <br>             [out] unsigned long *                                      pdwMailboxID, <br>             [in, string] unsigned char *                               szComputerName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br>    long RemoteTerminateNotifA <br>            ([in, string] unsigned char *                               szComputerName, <br>             [in] unsigned long                                         ulConnectionID); <br>    long RemoteValidateNotifA <br>            ([in, string] unsigned char *                               szComputerName, <br>             [in, string] unsigned char *                               szMailboxName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br>    long RemoteOpenMsgUploadPipeA <br>            ([in, string] unsigned char *                               szSenderMailbox, <br>             [out] long *                                               pPipeNumber, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szCookie); <br>    long RemoteSendMsgToAccountA <br>            ([in, string] unsigned char *                               szRecipAccount, <br>             [in, string] unsigned char *                               szHeaderInfo, <br>             [in, string] unsigned char *                               szCookie); <br>    long RemoteOpenMsgDownloadPipeA                                      <br>            ([in, string] unsigned char *                               szMailbox, <br>             [out] unsigned long *                                      pPipeNumber); <br>    long RemoteOpenHeaderDownloadPipeA                                   <br>            ([in, string] unsigned char *                               szMailbox, <br>             [out] long *                                               pPipeNumber); <br>    long RemoteCheckNewMailA                                             <br>            ([in, string] unsigned char *                               szMailbox, <br>             [out] unsigned long *                                      pulPending); <br>    long RemoteOpenOneMsgDownloadPipeA                                   <br>            ([in, string] unsigned char *                               szMailbox, <br>             [out] long *                                               pPipeNumber); <br>    long RemoteGetRecipientPropsA  <br>            ([in] unsigned long                                         dwObjID, <br>             [out] unsigned long *                                      pdwUserType, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szMailboxName, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szFullName, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szJobTitle, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szOffice, <br>             [out, string, size_is(MAX_PHONE_SIZE)] unsigned char *     szPhone, <br>             [out, string, size_is(MAX_PHONE_SIZE)] unsigned char *     szAltPhone, <br>             [out, string, size_is(MAX_PHONE_SIZE)] unsigned char *     szFax, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] unsigned char *   szComments, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szCompany, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szDepartment, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szManagerName, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szManagerAlias, <br>             [out] unsigned long *                                      pdwManagerID); <br>    long RemoteGetDistListPropsA <br>            ([in] unsigned long                                         dwObjID, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szDLAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szDLFullName, <br>             [out] unsigned long *                                      pdwContentCount, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szOwnerAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szOwnerName, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] unsigned char *   szComments); <br> <br>    // UNICODE Remote server calls <br>    long RemoteChangePasswordW <br>            ([in] wchar_t *                                             szMailbox, <br>             [in, string] wchar_t *                                     szOldPassword, <br>             [in, string] wchar_t *                                     szNewPassword); <br>    long RemoteLogonMailBoxW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [in, string] wchar_t *                                     szPassword, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szFullName, <br>             [out] unsigned long *                                      pdwMailboxID); <br>    long RemoteLogonMailBoxAndSetNotifW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [in, string] wchar_t *                                     szPassword, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szFullName, <br>             [out] unsigned long *                                      pdwMailboxID, <br>             [in, string] wchar_t *                                     szComputerName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br>    long RemoteTerminateNotifW <br>            ([in, string] wchar_t *                                     szComputerName, <br>             [in] unsigned long                                         ulConnectionID); <br>    long RemoteValidateNotifW <br>            ([in, string] wchar_t *                                     szComputerName, <br>             [in, string] wchar_t *                                     szMailboxName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br>    long RemoteOpenMsgUploadPipeW <br>            ([in, string] wchar_t *                                     szSenderMailbox, <br>             [out] long *                                               pPipeNumber, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szCookie); <br>    long RemoteSendMsgToAccountW <br>            ([in, string] wchar_t *                                     szRecipAccount, <br>             [in, string] wchar_t *                                     szHeaderInfo, <br>             [in, string] wchar_t *                                     szCookie); <br>    long RemoteOpenMsgDownloadPipeW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [out] unsigned long *                                      pPipeNumber); <br>    long RemoteOpenHeaderDownloadPipeW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [out] long *                                               pPipeNumber); <br>    long RemoteCheckNewMailW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [out] unsigned long *                                      pulPending); <br>    long RemoteOpenOneMsgDownloadPipeW <br>            ([in, string] wchar_t *                                     szMailbox, <br>             [out] long *                                               pPipeNumber); <br>    long RemoteGetRecipientPropsW <br>            ([in] unsigned long                                         dwObjID, <br>             [out] unsigned long *                                      pdwUserType, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szMailboxName, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szFullName, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szJobTitle, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szOffice, <br>             [out, string, size_is(MAX_PHONE_SIZE)] wchar_t *           szPhone, <br>             [out, string, size_is(MAX_PHONE_SIZE)] wchar_t *           szAltPhone, <br>             [out, string, size_is(MAX_PHONE_SIZE)] wchar_t *           szFax, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] wchar_t *         szComments, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szCompany, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szDepartment, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szManagerName, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szManagerAlias, <br>             [out] unsigned long *                                      pdwManagerID); <br>    long RemoteGetDistListPropsW <br>            ([in] unsigned long                                         dwObjID, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szDLAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szDLFullName, <br>             [out] unsigned long *                                      pdwContentCount, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szOwnerAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szOwnerName, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] wchar_t *         szComments); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
