<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>XPSOF.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2160"></a>XPSOF.H</h2>
<pre><code>/* <br> -  X P S O F . H <br> - <br> *  Purpose: <br> *      Wraps the StreamOnFile object to add buffering of the stream. <br> *      The wrappered version uses an in-memory buffer, or cache, to  <br> *      reduce the number of actual Reads and Writes to the underlying  <br> *      stream.  The goal is, obviously, to improve performance.   <br> * <br> *  Copyright 1992-1995, Microsoft Corporation.  All Rights Reserved. <br> */ <br> <br> <br>#define XPSOF_BUFF_MAX      ((ULONG) 1024) <br> <br>#define XPSOF_READ          ((ULONG) 0x00000001) <br>#define XPSOF_WRITE         ((ULONG) 0x00000002) <br>#define XPSOF_READWRITE     ((ULONG) 0x00000003) <br> <br>/* Creates the wrapped SOF object */ <br> <br>STDMETHODIMP HrWrapStreamOnFile( <br>    LPALLOCATEBUFFER    lpAllocBuffer, <br>    LPFREEBUFFER        lpFreeBuffer, <br>    ULONG               ulFlags, <br>    LPSTREAM            lpStream, <br>    LPSTREAM *          lppWrappedStream); <br> <br> <br>/* IStream Interface */ <br> <br>#define MAPI_ISTREAM_METHODS(IPURE)                                     \ <br>    MAPIMETHOD(Read)                                                    \ <br>        (THIS_  VOID HUGEP *                lpv,                        \ <br>                ULONG                       cb,                         \ <br>                ULONG FAR *                 lpcbRead) IPURE;            \ <br>    MAPIMETHOD(Write)                                                   \ <br>        (THIS_  VOID const HUGEP *          lpv,                        \ <br>                ULONG                       cb,                         \ <br>                ULONG FAR *                 lpcbWritten) IPURE;         \ <br>    MAPIMETHOD(Seek)                                                    \ <br>        (THIS_  LARGE_INTEGER               libMove,                    \ <br>                DWORD                       dwOrigin,                   \ <br>                ULARGE_INTEGER FAR *        lplibNewPosition) IPURE;    \ <br>    MAPIMETHOD(SetSize)                                                 \ <br>        (THIS_  ULARGE_INTEGER              libNewSize) IPURE;          \ <br>    MAPIMETHOD(CopyTo)                                                  \ <br>        (THIS_  IStream FAR *               lpstm,                      \ <br>                ULARGE_INTEGER              cb,                         \ <br>                ULARGE_INTEGER FAR *        lpcbRead,                   \ <br>                ULARGE_INTEGER FAR *        lpcbWritten) IPURE;         \ <br>    MAPIMETHOD(Commit)                                                  \ <br>        (THIS_  DWORD                       dwCommitFlags) IPURE;       \ <br>    MAPIMETHOD(Revert)                                                  \ <br>        (THIS)                              IPURE;                      \ <br>    MAPIMETHOD(LockRegion)                                              \ <br>        (THIS_  ULARGE_INTEGER              libOffset,                  \ <br>                ULARGE_INTEGER              cb,                         \ <br>                DWORD                       dwLockType) IPURE;          \ <br>    MAPIMETHOD(UnlockRegion)                                            \ <br>        (THIS_  ULARGE_INTEGER              ulibOffset,                 \ <br>                ULARGE_INTEGER              cb,                         \ <br>                DWORD                       dwLockType) IPURE;          \ <br>    MAPIMETHOD(Stat)                                                    \ <br>        (THIS_  STATSTG FAR *               lpstatstg,                  \ <br>                DWORD                       dwStatFlag) IPURE;          \ <br>    MAPIMETHOD(Clone)                                                   \ <br>        (THIS_  IStream FAR * FAR *         lppstm) IPURE;              \ <br> <br> <br>/* Interface declaration */ <br> <br>#undef  INTERFACE <br>#define INTERFACE struct _XPSOF <br>#undef  MAPIMETHOD_ <br>#define MAPIMETHOD_(type, method)   MAPIMETHOD_DECLARE(type, method, XPSOF_) <br>        MAPI_IUNKNOWN_METHODS(IMPL) <br>        MAPI_ISTREAM_METHODS(IMPL) <br>#undef  MAPIMETHOD_ <br>#define MAPIMETHOD_(type, method)   MAPIMETHOD_TYPEDEF(type, method, XPSOF_) <br>        MAPI_IUNKNOWN_METHODS(IMPL) <br>        MAPI_ISTREAM_METHODS(IMPL) <br>#undef  MAPIMETHOD_ <br>#define MAPIMETHOD_(type, method)   STDMETHOD_(type, method) <br> <br>DECLARE_MAPI_INTERFACE(XPSOF_) <br>{ <br>    MAPI_IUNKNOWN_METHODS(IMPL) <br>    MAPI_ISTREAM_METHODS(IMPL) <br>}; <br> <br>typedef struct _XPSOF <br>{ <br>    XPSOF_Vtbl *        lpVtbl; <br>    LONG                lcInit; <br>    ULONG               ulFlags; <br>    LPSTREAM            lpstrm; <br>    LPVOID              lpvBuff; <br>    ULONG               libBuff; <br>    ULONG               cbBuffMac; <br>    BOOL                fDirty; <br>    LPFREEBUFFER        FreeBuffer; <br> <br>} XPSOF, FAR * LPXPSOF; </code></pre>
<p>&nbsp;</p></body>
</HTML>
