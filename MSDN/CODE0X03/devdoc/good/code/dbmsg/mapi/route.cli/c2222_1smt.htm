<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CLIENT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2225"></a>CLIENT.H</h2>
<pre><code>/* <br> -  C L I E N T . H <br> - <br> *  Purpose: <br> *      Header file for the sample mail client based on Extended MAPI. <br> * <br> *      Copyright 1995, Microsoft Corporation. All Rights Reserved. <br> */ <br> <br>#ifndef __CLIENT_H__ <br>#define __CLIENT_H__ <br> <br> <br>/* Menu Item IDs */ <br> <br>#define IDM_LOGON       100 <br>#define IDM_LOGOFF      101 <br>#define IDM_EXIT        102 <br>#define IDM_READ        103 <br>#define IDM_SEND        104 <br>#define IDM_ABOUT       105 <br>#define IDM_OPEN        106 <br>#define IDM_HIER        107 <br> <br>#define IDM_ROUTE       108 <br> <br>#define IDM_NEWFORM     109 <br>/* Resource IDs */ <br> <br>#define ICON_NOMAIL     200 <br>#define ICON_MAIL       201 <br>#define IDB_ENVELOPE    300 <br> <br> <br>/* Address Book Control IDs */ <br> <br>#define IDT_ADDRESS     101 <br>#define IDC_ADDRESS     102 <br>#define IDT_LIST        103 <br>#define IDC_LIST        104 <br>#define IDC_ADD         105 <br>#define IDC_REMOVE      106 <br> <br> <br>/* Compose Note Control IDs */ <br> <br>#define IDC_SEND        101 <br>#define IDC_RESOLVE     102 <br>#define IDC_ATTACH      103 <br>#define IDC_OPTIONS     104 <br>#define IDC_ADDRBOOK    105 <br>#define IDT_TO          106 <br>#define IDC_TO          107 <br>#define IDT_CC          108 <br>#define IDC_CC          109 <br>#define IDT_SUBJECT     110 <br>#define IDC_SUBJECT     111 <br>#define IDC_NOTE        112 <br>#define IDC_LINE1       -1 <br>#define IDC_LINE2       -1 <br>#define IDC_CATTACHMENT 113 <br>#define IDT_CATTACHMENT -1 <br> <br> <br>#define IDC_ADDROUTESLIP 115 <br> <br>//RouteNote control IDs <br>#define IDC_RTCC            101 <br>#define IDT_RTCC            -1 <br>#define IDT_RTSUBJECT           -1 <br>#define IDC_RTSUBJECT           102 <br>#define IDC_RTNOTE          103 <br>#define IDC_RTROUTE         104 <br>#define IDC_RTATTACH            105 <br>#define IDC_RTEDITROUTESLIP 106 <br>#define IDC_RTATTACHLIST        107 <br>#define IDT_RTATTACHLIST        108 <br>#define IDC_RTSAVEATTACH        109 <br>#define IDC_RTDELATTACH         110 <br> <br>/* InBox Control IDs */ <br> <br>#define IDT_MSG         101 <br>#define IDC_MSG         102 <br>#define IDC_NEW         103 <br>#define IDC_READ        104 <br>#define IDC_DELETE      105 <br>#define IDC_CLOSE       106 <br>#define IDC_DOWN                107     // Hierarchy Table only <br>#define IDC_FLUSH       108 <br> <br>/* ReadNote Control IDs */ <br> <br>#define IDC_SAVECHANGES 101 <br>#define IDC_SAVEATTACH  102 <br>#define IDC_REPLY       103 <br>#define IDC_REPLYALL    104 <br>#define IDC_FORWARD     105 <br>#define IDT_RFROM       106 <br>#define IDT_RDATE       107 <br>#define IDT_RTO         108 <br>#define IDT_RCC         109 <br>#define IDT_RSUBJECT    110 <br>#define IDC_RFROM       111 <br>#define IDC_RDATE       112 <br>#define IDC_RTO         113 <br>#define IDC_RCC         114 <br>#define IDC_RSUBJECT    115 <br>#define IDC_READNOTE    116 <br>#define IDT_ATTACHMENT  117 <br>#define IDC_ATTACHMENT  118 <br> <br> <br>/* Options Control IDs */ <br> <br>#define IDC_RETURN      101 <br> <br> <br>/* Details Control IDs */ <br> <br>#define IDT_NAME        100 <br>#define IDC_NAME        101 <br>#define IDT_TYPE        102 <br>#define IDC_TYPE        103 <br>#define IDT_ADDR        104 <br>#define IDC_ADDR        105 <br> <br>/* About Box Control IDs */ <br> <br>#define IDC_VERSION             101 <br> <br> <br> <br>/* Route Box Control IDs*/ <br> <br>#define IDC_ROUTE               100             <br>#define IDC_ADDRLISTOLD         101 <br>#define IDC_ADDRLISTACTIVE      102 <br>#define IDC_ADDADDR             103 <br>#define IDC_REMOVEADDR          104 <br>#define IDC_MOVEUP              105 <br>#define IDC_MOVEDOWN            106 <br>#define IDC_STATIC                      -1 <br> <br>#define LENGTHOLD        80 <br>#define LENGTHACTIVE 80 <br>#define LBLENGTH (LENGTHOLD + LENGTHACTIVE) /*sum of the lengths of the two listboxes in RouteNote DlgBox*/ <br>#define DELTA 5  /*distance between the bottom of the first LB and the top of the second <br>                    DELATA is not used directly in the .rc file. it has to be calculated manualy*/ <br>#define LBX 70  /* The x coordinate of the left edges of the listboxes*/ <br>#define DELTAX 140 /*the width of the listboxes*/ <br>#define OLDY   5        /*the y coordinate of the top of the first listbox*/ <br>#define MINY   40 /*the min height of a listbox*/ <br> <br> <br> <br>/* String Table IDs */ <br> <br>#define MAPI_ERROR_MAX          30 <br> <br>#define IDS_LOGONFAIL           (MAPI_ERROR_MAX + 1) <br>#define IDS_ADDRBOOKFAIL        (MAPI_ERROR_MAX + 2) <br>#define IDS_RESOLVEFAIL         (MAPI_ERROR_MAX + 3) <br>#define IDS_UNRESOLVEDNAMES     (MAPI_ERROR_MAX + 4) <br>#define IDS_SENDERROR           (MAPI_ERROR_MAX + 5) <br>#define IDS_DETAILS_TOO_MANY    (MAPI_ERROR_MAX + 6) <br>#define IDS_DETAILSFAIL         (MAPI_ERROR_MAX + 7) <br>#define IDS_NORECIPS            (MAPI_ERROR_MAX + 8) <br>#define IDS_SAVEATTACHERROR     (MAPI_ERROR_MAX + 9) <br>#define IDS_READFAIL            (MAPI_ERROR_MAX + 10) <br>#define IDS_STORETBLFAIL        (MAPI_ERROR_MAX + 11) <br>#define IDS_QUERYROWFAIL        (MAPI_ERROR_MAX + 12) <br>#define IDS_OPENSTOREFAIL       (MAPI_ERROR_MAX + 13) <br>#define IDS_STATUSTBLFAIL       (MAPI_ERROR_MAX + 14) <br>#define IDS_OPENFOLDERFAIL      (MAPI_ERROR_MAX + 15) <br>#define IDS_GETRCVFAIL          (MAPI_ERROR_MAX + 16) <br>#define IDS_SETRCVFAIL          (MAPI_ERROR_MAX + 17) <br>#define IDS_SETPROPFAIL         (MAPI_ERROR_MAX + 18) <br>#define IDS_NOENTRYID           (MAPI_ERROR_MAX + 19) <br>#define IDS_OPERATION           (MAPI_ERROR_MAX + 20) <br>#define IDS_NODEFAULTSTORE      (MAPI_ERROR_MAX + 21) <br>#define IDS_SETCOLFAIL          (MAPI_ERROR_MAX + 22) <br>#define IDS_CRTOUTMSG                   (MAPI_ERROR_MAX + 23) <br>#define IDS_SHOWFORM                    (MAPI_ERROR_MAX + 24) <br>#define IDS_OPENAB                              (MAPI_ERROR_MAX + 25) <br>#define IDS_INIDIAG                             (MAPI_ERROR_MAX + 26) <br>#define IDS_UNXERR                              (MAPI_ERROR_MAX + 27) <br>#define IDS_OPENOUTF                    (MAPI_ERROR_MAX + 28) <br>#define IDS_MAPIINIF                    (MAPI_ERROR_MAX + 29) <br>#define IDS_OPENSTOREWARN               (MAPI_ERROR_MAX + 30) <br>#define IDS_OPENABWARN                  (MAPI_ERROR_MAX + 31) <br>#define IDS_LASTRECIP                   (MAPI_ERROR_MAX + 32) <br> <br>#define IDS_IPM                 (MAPI_ERROR_MAX + 42) <br>#define IDS_IPM_COMMENT         (MAPI_ERROR_MAX + 43) <br>#define IDS_INBOX               (MAPI_ERROR_MAX + 44) <br>#define IDS_INBOX_COMMENT       (MAPI_ERROR_MAX + 45) <br>#define IDS_OUTBOX              (MAPI_ERROR_MAX + 46) <br>#define IDS_OUTBOX_COMMENT      (MAPI_ERROR_MAX + 47) <br>#define IDS_SENTMAIL            (MAPI_ERROR_MAX + 48) <br>#define IDS_SENTMAIL_COMMENT    (MAPI_ERROR_MAX + 49) <br>#define IDS_FILTER              (MAPI_ERROR_MAX + 50) <br>#define IDS_OPENOUTB                    (MAPI_ERROR_MAX + 51) <br> <br>/* Manifest Constants */ <br> <br>#define MBS_ERROR           (MB_ICONSTOP | MB_OK) <br>#define MBS_INFO            (MB_ICONINFORMATION | MB_OK) <br>#define MBS_OOPS            (MB_ICONEXCLAMATION | MB_OK) <br> <br>/* Structure Definitions */ <br> <br>typedef struct _msgid *LPMSGID; <br> <br>typedef struct _msgid <br>{ <br>    ULONG           cbEID; <br>    LPENTRYID       lpEID; <br>    BOOL        fHasAttach; <br>    BOOL        fUnRead; <br>    LPSTR       lpszFrom; <br>    LPSTR       lpszSubject; <br>    LPSTR       lpszDateRec; <br>    LPMSGID     lpPrev; <br>    LPMSGID     lpNext; <br>} MSGID; <br> <br>typedef struct _inboxdata <br>{ <br>    LPMSGID         lpMsgIdList; <br>    LPMAPIFOLDER pfld; <br>} INBOXDATA, FAR * LPINBOXDATA; <br> <br> <br>typedef struct _oar *LPOAR; <br> <br>typedef struct _oar <br>{ <br>    LPOAR                   lpNext; <br>    LPOAR                   lpPrev; <br>    ULONG                   cValues; <br>    LPSPropValue    lpProps; <br>} OAR; <br> <br>/* Types of MAPI Tables shown by common dialog */ <br>enum { <br>    iStores, <br>    iHierarchy <br>}; <br> <br>/* Data structure used by CommonDlgProc */ <br>typedef struct { <br>    int             iDlgType;       // dialog type.  see "enum" above <br>    LPOAR           poarHead;       // chain of rows within the dialog <br>    ULONG           cbEntryID; <br>    LPENTRYID       lpEntryID; <br>} DIALOGDATA, FAR * LPDIALOGDATA; <br> <br> <br> <br>/* Globals */ <br>extern LPMAPISESSION pses; <br>extern LPADRBOOK pabAddrB; <br>extern LPMDB pmdb; <br>extern HANDLE hInst; <br>extern HCURSOR hWaitCur; <br>extern LPMAPIFOLDER pfldOutBox; <br>extern LPSPropValue pvalSentMailEID; <br>/* Function Prototypes */ <br> <br>int  PASCAL WinMain(HINSTANCE, HINSTANCE, LPSTR, int); <br>BOOL InitApplication(HANDLE); <br>BOOL InitInstance(HANDLE, int); <br>void DeinitApplication(void); <br>BOOL ClientLogon(HWND); <br>VOID ClientLogoff(HWND); <br>BOOL InitMAPI (HWND); <br>void DeinitMAPI(); <br>LPMDB OpenDefaultStore(HWND);  <br>long FAR PASCAL MainWndProc(HWND, UINT, UINT, LPARAM); <br>BOOL CALLBACK CommonDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK InBoxDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK AboutDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK ComposeDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK ReadMailDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK OptionsDlgProc(HWND, UINT, WPARAM, LPARAM); <br>BOOL CALLBACK DetailsDlgProc(HWND, UINT, WPARAM, LPARAM); <br>void    MakeMessageBox(HWND, SCODE, UINT, LPMAPIERROR, UINT); <br>HRESULT HrCreateChildFolder (HWND, LPMAPIFOLDER, ULONG, ULONG, LPTSTR, ULONG, LPMAPIFOLDER FAR *); <br>VOID    PopulateStores ( HWND hDlg, LPOAR FAR * ppoarHead, int idlgType, ULONG cb, LPENTRYID lpeid); <br>VOID    FreeOarList (LPOAR FAR *ppoarHead); <br>VOID    DrawOarItem (DRAWITEMSTRUCT FAR * pdis, int idlgType); <br>VOID    PopulateMessages( HWND hDlg, LPINBOXDATA pibData ); <br>LPMSGID MakeMsgNode(LPSRow); <br>LPMSGID FindNode (LPMSGID lpMsgHead, LPENTRYID pEntryID, ULONG cbEntryID); <br>void    InsertMsgNode(LPMSGID, LPMSGID *); <br>void    DeleteMsgNode(LPMSGID, LPMSGID *); <br>void    FreeMsgList(LPMSGID); <br>void    LogSendMail(ULONG); <br>void    ToggleMenuState(HWND, BOOL);    <br>void    FormatMessageID(ULONG, LPBYTE, LPSTR); <br>void    FormatFILETIME(FILETIME *, LPSTR); <br>LPDIALOGDATA CreateDialogData(int iDlgType); <br>BOOL READ_OnCommand(HWND hDlg, int id, HWND hwndCtl, UINT codeNotify); <br>BOOL READ_OnInitDialog(HWND hDlg, HWND hwndFocus, LPARAM lParam); <br>void INBOX_OnCommand(HWND hDlg, int id, HWND hwndCtl, UINT codeNotify); <br>LONG MAIN_OnCommand(HWND hWnd, int id, HWND hwndCtl, UINT codeNotify); <br>BOOL Common_OnCommand(HWND hDlg, int id, HWND hwndCtl, UINT codeNotify); <br>HRESULT DeliverNow(HWND hWnd); <br>void SecureMenu(HWND hWnd, BOOL fBeforeLogon); <br> <br> <br> <br>#endif  </code></pre>
<p>&nbsp;</p></body>
</HTML>
