<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>VIEWNTFR.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2247"></a>VIEWNTFR.CPP</h2>
<pre><code>/* copyright (c) 1995 Microsoft Corporation -- All rights reserved */ <br> <br>#include "precomp.h" <br> <br>#pragma warning(disable:4514) // Unreferened inline function has been removed <br> <br>CViewNotifier::CViewNotifier (void) <br>{ <br>    Initialize(); <br>} <br> <br>CViewNotifier::~CViewNotifier () <br>{ <br>} <br> <br>BOOL CViewNotifier::Initialize (void) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) <br>    { <br>        m_aryAdviseSink [i] = NULL; <br>    } <br> <br>    return TRUE; <br>} <br> <br>HRESULT CViewNotifier::Advise(LPMAPIVIEWADVISESINK pAdvise, <br>                              ULONG * pulConnection) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) <br>    { <br>        if (NULL == m_aryAdviseSink [i] ) <br>        { <br>            m_aryAdviseSink [i] = pAdvise; <br>            m_aryAdviseSink [i] -&gt;AddRef(); <br>            *pulConnection = ++i; <br>            // connection == index + 1 <br>            return S_OK; <br>        } <br>    } <br> <br>    return ResultFromScode(E_OUTOFMEMORY); <br>} <br> <br>HRESULT CViewNotifier::Unadvise (ULONG ulConnection) <br>{ <br>    if (--ulConnection &lt; MAXSINKS) <br>    {   // connection == index + 1 <br>        m_aryAdviseSink [ulConnection] -&gt;Release(); <br>        m_aryAdviseSink [ulConnection] = NULL; <br>        return S_OK; <br>    } <br>    return ResultFromScode(E_INVALIDARG); <br>} <br> <br>void CViewNotifier::OnShutdown (void) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) <br>    { <br>        if (NULL != m_aryAdviseSink [i] ) <br>        { <br>            m_aryAdviseSink [i] -&gt; OnShutdown (); <br>        } <br>    } <br>} <br> <br>void CViewNotifier::OnNewMessage (void) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) <br>    { <br>        if (NULL != m_aryAdviseSink [i] ) <br>        { <br>            m_aryAdviseSink [i] -&gt;OnNewMessage(); <br>        } <br>    } <br>} <br> <br>HRESULT CViewNotifier::OnPrint(ULONG ulPageNumber, HRESULT hrStatus) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) <br>    { <br>        if (NULL != m_aryAdviseSink [i] ) <br>        { <br>            if(MAPI_E_USER_CANCEL == GetScode(m_aryAdviseSink [i] -&gt;OnPrint(ulPageNumber, hrStatus))) <br>                return MAPI_E_USER_CANCEL; <br>        } <br>    } <br>     <br>    return hrSuccess; <br>} <br> <br>void CViewNotifier::OnSubmitted (void) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) { <br>        if (NULL != m_aryAdviseSink [i] ) { <br>            m_aryAdviseSink [i] -&gt;OnSubmitted(); <br>        } <br>    } <br>} <br> <br>void CViewNotifier::OnSaved (void) <br>{ <br>    ULONG   i; <br> <br>    for (i = 0; i &lt; MAXSINKS; ++i) { <br>        if (NULL != m_aryAdviseSink [i] ) { <br>            m_aryAdviseSink [i] -&gt;OnSaved(); <br>        } <br>    } <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
