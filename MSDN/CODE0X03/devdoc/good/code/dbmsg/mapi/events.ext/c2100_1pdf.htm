<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>PRSHTDLG.CPP</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2103"></a>PRSHTDLG.CPP</h2>
<pre><code>/////////////////////////////////////////////////////////////////////////////// <br>// <br>//  File Name  <br>//      PRSHTDLG.CPP <br>// <br>//  Description <br>//      This file contains the dialogproc that handles messages for <br>//      the property page extended onto the Tools Options Property Sheet <br>// <br>//  Revision: 1.00 <br>// <br>//  Copyright (c) 1992-1995 Microsoft Corporation. All rights reserved. <br>// <br> <br>#include "EVNTEXT.H" <br> <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    FUNCTION SignatureOptionsDlgProc <br>// <br>//    Parameters <br>//    hDlg   - handle to modeless dialog, the property page <br>//    uMsg   - message <br>//    wParam - wParam of wndproc, not used <br>//    lParam - lParam of wndproc, points to NMHDR for notifications <br>// <br>//    Purpose <br>//    Handles the notifications sent for managing a custom property page <br>//    to allow user to turn Signtures on or off. <br>// <br>//    Return Value <br>//    Appropriate return values are set in the DWL_MSGRESULT longword <br>//    of the dialog handle.  See Win95 Common Controls documentation on <br>//    Property Sheets for more information. <br>// <br> <br>BOOL CALLBACK SignatureOptionsDlgProc(HWND hDlg, UINT uMsg,  <br>        WPARAM wParam, LPARAM lParam) <br>{ <br> BOOL bMsgResult; <br> static HBRUSH hBrush; <br> static COLORREF GrayColor; <br> static LPNMHDR pnmhdr; <br> static HWND hWndPage; <br> <br> switch (uMsg) <br> { <br> <br>  case WM_INITDIALOG: <br>  { <br>   LOGBRUSH lb; <br> <br>    GrayColor = (COLORREF)GetSysColor(COLOR_BTNFACE); <br> <br>    memset(&amp;lb, 0, sizeof(LOGBRUSH)); <br>    lb.lbStyle = BS_SOLID; <br>    lb.lbColor = GrayColor; <br>    hBrush = CreateBrushIndirect(&amp;lb); <br> <br>    return TRUE; <br>  } <br>  break; <br> <br>  case WM_CTLCOLORDLG: <br>  case WM_CTLCOLORBTN: <br>  case WM_CTLCOLORSTATIC: <br>   <br>    if (hBrush != NULL) <br>    { <br>      SetBkColor((HDC)wParam, GrayColor); <br> <br>      return (BOOL)hBrush; <br>    } <br> <br>  break; <br> <br>  case WM_DESTROY: <br>  { <br>   if (hBrush != NULL) <br>        DeleteObject(hBrush); <br>     <br> <br>   return TRUE; <br>  } <br>   <br>  case WM_COMMAND: <br>  { <br>   if (LOWORD(wParam) == IDC_ENABLESGN) <br>   { <br>      SendMessage(GetParent(hDlg), PSM_CHANGED, (WPARAM)hDlg, 0L); <br>      bSignatureOn = SendDlgItemMessage(hDlg, IDC_ENABLESGN, BM_GETCHECK, 0, 0L); <br>      bMsgResult = FALSE; <br>   } <br>  } <br>  break; <br> <br>  case WM_NOTIFY: <br>  { <br>   pnmhdr = ((LPNMHDR) lParam); <br> <br>   switch ( pnmhdr-&gt;code) <br>   { <br>    case PSN_KILLACTIVE: <br>        bMsgResult = FALSE;  // allow this page to receive PSN_APPLY <br>        break; <br> <br>    case PSN_SETACTIVE: <br> <br>        // initialize controls <br>        if (bSignatureOn) <br>            SendDlgItemMessage(hDlg, IDC_ENABLESGN, BM_SETCHECK, 1, 0L); <br>        else <br>            SendDlgItemMessage(hDlg, IDC_ENABLESGN, BM_SETCHECK, 0, 0L); <br> <br>        hWndPage = pnmhdr-&gt;hwndFrom;   // to be used in WM_COMMAND <br>              <br>        bMsgResult = FALSE;  // accepts activation <br>        break; <br> <br>    case PSN_APPLY: <br> <br>        // get user input <br>        bSignatureOn = SendDlgItemMessage(hDlg, IDC_ENABLESGN, BM_GETCHECK, 0, 0L); <br> <br>        bMsgResult = PSNRET_NOERROR; <br>        break; <br> <br>    case PSN_HELP:                                               <br>        MessageBox( pnmhdr-&gt;hwndFrom, <br>                    "Microsoft Exchange Client\n" <br>                    "Message Event Extension Sample\n" <br>                    "Microsoft (c) Corporation, 1995", <br>                    "About", <br>                    MB_OK); <br>        bMsgResult = TRUE;    // doesn't matter on this notification <br>        break; <br> <br> <br>    default: <br>        bMsgResult = FALSE; <br>        break; <br>   }  // switch <br> <br>    SetWindowLong( hDlg, DWL_MSGRESULT, bMsgResult); <br>    break; <br>   <br>  }   // case WM_NOTIFY <br> <br>  default: <br>    bMsgResult = FALSE; <br>    break; <br> <br> }  // switch <br> <br> <br> return bMsgResult; <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
