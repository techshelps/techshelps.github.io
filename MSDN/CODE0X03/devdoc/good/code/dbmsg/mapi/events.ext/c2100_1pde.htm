<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>EVNTEXT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2102"></a>EVNTEXT.H</h2>
<pre><code>/////////////////////////////////////////////////////////////////////////////// <br>// <br>//  File Name  <br>//      EVNTEXT.H <br>// <br>//  Description <br>//      Interface Methods are declared in this file for evntext.cpp <br>// <br>//  Author <br>//      Gary Peluso <br>// <br>//  Revision: 1.00 <br>// <br>// Written for Microsoft Windows Developer Support <br>// Copyright (c) 1992-1995 Microsoft Corporation. All rights reserved. <br>// <br>#ifndef __EVNTEXT_H__ <br>#define __EVNTEXT_H__ <br> <br>#include &lt;WINDOWS.H&gt;  <br>#include &lt;COMMCTRL.H&gt; <br>#include &lt;MAPIX.H&gt; <br>#include &lt;MAPIUTIL.H&gt; <br>#include &lt;MAPIFORM.H&gt; <br>#include &lt;EXCHEXT.H&gt; <br> <br>#include "RESOURCE.H" <br> <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    Prototypes <br>// <br> <br>extern "C" <br>{ <br> LPEXCHEXT CALLBACK ExchEntryPoint(void); <br>} <br> <br>void ErrorMessageBox(HWND hWnd, HRESULT hr,  <br>        LPSTR szFunction, LPSTR szMessage); <br>HRESULT CalcULONGCheckSum(LPMESSAGE pMessage, ULONG *pulCheckSum); <br>BOOL CALLBACK SignatureOptionsDlgProc(HWND hDlg, UINT uMsg,  <br>        WPARAM wParam, LPARAM lParam); <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    Global Data Declarations <br>// <br>extern BOOL bSignatureOn;   // defined in EVNTEXT.CPP <br> <br> <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    forward declarations <br>// <br>class MyExchExt; <br>class MyExchExtPropertySheets; <br>class MyExchExtMessageEvents; <br> <br>class MyExchExt : public IExchExt <br>{ <br>  <br> public: <br>    MyExchExt();  <br>    STDMETHODIMP QueryInterface <br>                    (REFIID                     riid, <br>                     LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                    () { ++m_cRef; return m_cRef; }; <br>    STDMETHODIMP_(ULONG) Release();  <br>    STDMETHODIMP Install (LPEXCHEXTCALLBACK pmecb,  <br>                        ULONG mecontext, ULONG ulFlags); <br>     <br> private: <br>    ULONG m_cRef; <br>    UINT  m_context; <br>    MyExchExtPropertySheets * m_pExchExtPropertySheets; <br>    MyExchExtMessageEvents * m_pExchExtMessageEvents; <br> <br>}; <br> <br>class MyExchExtPropertySheets : public IExchExtPropertySheets <br>{ <br> public: <br>    MyExchExtPropertySheets (LPUNKNOWN pParentInterface) {  <br>    m_pExchExt = pParentInterface; <br>    m_cRef = 0;  <br>    }; <br> <br>     <br>    STDMETHODIMP QueryInterface <br>                    (REFIID                     riid, <br>                     LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                    () { ++m_cRef; return m_cRef; }; <br>    inline STDMETHODIMP_(ULONG) Release <br>                    () { ULONG ulCount = --m_cRef; <br>                         if (!ulCount) { delete this; } <br>                         return ulCount;}; <br> <br>    STDMETHODIMP_ (ULONG) GetMaxPageCount(ULONG ulFlags);           <br>    STDMETHODIMP  GetPages(LPEXCHEXTCALLBACK peecb, <br>                          ULONG ulFlags, LPPROPSHEETPAGE ppsp, ULONG FAR * pcpsp);           <br>    STDMETHODIMP_ (VOID) FreePages(LPPROPSHEETPAGE ppsp, ULONG ulFlags,  <br>                                         ULONG cpsp);           <br> <br> private: <br>    ULONG m_cRef; <br>    LPUNKNOWN m_pExchExt; <br>}; <br> <br>class MyExchExtMessageEvents : public IExchExtMessageEvents <br>{ <br> public: <br>    MyExchExtMessageEvents (LPUNKNOWN pParentInterface) {  <br>    m_pExchExt = pParentInterface; <br>    m_cRef = 0;  <br>    m_bInSubmitState = FALSE; <br>    }; <br> <br>    STDMETHODIMP QueryInterface <br>                    (REFIID                     riid, <br>                     LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                    () { ++m_cRef; return m_cRef; }; <br>    inline STDMETHODIMP_(ULONG) Release <br>                    () { ULONG ulCount = --m_cRef; <br>                         if (!ulCount) { delete this; } <br>                         return ulCount;}; <br> <br>    STDMETHODIMP OnRead(LPEXCHEXTCALLBACK lpeecb); <br>    STDMETHODIMP OnReadComplete(LPEXCHEXTCALLBACK lpeecb, ULONG ulFlags); <br>    STDMETHODIMP OnWrite(LPEXCHEXTCALLBACK lpeecb); <br>    STDMETHODIMP OnWriteComplete(LPEXCHEXTCALLBACK lpeecb, ULONG ulFlags); <br>    STDMETHODIMP OnCheckNames(LPEXCHEXTCALLBACK lpeecb); <br>    STDMETHODIMP OnCheckNamesComplete(LPEXCHEXTCALLBACK lpeecb, ULONG ulFlags); <br>    STDMETHODIMP OnSubmit(LPEXCHEXTCALLBACK lpeecb); <br>    STDMETHODIMP_ (VOID)OnSubmitComplete(LPEXCHEXTCALLBACK lpeecb, ULONG ulFlags); <br> <br> <br> private: <br>    ULONG   m_cRef; <br>    HRESULT m_hrOnReadComplete; <br>    BOOL    m_bInSubmitState; <br>    LPUNKNOWN m_pExchExt; <br> <br>}; <br> <br> <br>#endif // __EVNTEXT_H__ </code></pre>
<p>&nbsp;</p></body>
</HTML>
