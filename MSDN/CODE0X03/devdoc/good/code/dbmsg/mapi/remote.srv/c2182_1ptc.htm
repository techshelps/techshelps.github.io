<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WDSADM.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2190"></a>WDSADM.H</h2>
<pre><code>/* this ALWAYS GENERATED file contains the definitions for the interfaces */ <br> <br> <br>/* File created by MIDL compiler version 2.00.0102 */ <br>/* at Wed Sep 27 11:30:53 1995 <br> */ <br>//@@MIDL_FILE_HEADING(  ) <br>#include "rpc.h" <br>#include "rpcndr.h" <br> <br>#ifndef __wdsadm_h__ <br>#define __wdsadm_h__ <br> <br>#ifdef __cplusplus <br>extern "C"{ <br>#endif  <br> <br>/* Forward Declarations */  <br> <br>void __RPC_FAR * __RPC_USER MIDL_user_allocate(size_t); <br>void __RPC_USER MIDL_user_free( void __RPC_FAR * );  <br> <br>#ifndef __WINDSADM_INTERFACE_DEFINED__ <br>#define __WINDSADM_INTERFACE_DEFINED__ <br> <br>/**************************************** <br> * Generated header for interface: WINDSADM <br> * at Wed Sep 27 11:30:53 1995 <br> * using MIDL 2.00.0102 <br> ****************************************/ <br>/* [implicit_handle][unique][version][uuid] */  <br> <br> <br>            /* size is 396 */ <br>typedef struct  _ADM_MAILBOX_INFO_A <br>    { <br>    unsigned char szMailboxName[ 17 ]; <br>    unsigned char szFullName[ 33 ]; <br>    unsigned char szJobTitle[ 33 ]; <br>    unsigned char szOffice[ 33 ]; <br>    unsigned char szPhone[ 13 ]; <br>    unsigned char szAltPhone[ 13 ]; <br>    unsigned char szFax[ 13 ]; <br>    unsigned char szPassword[ 17 ]; <br>    unsigned char szCompany[ 33 ]; <br>    unsigned char szDepartment[ 33 ]; <br>    unsigned char szComments[ 80 ]; <br>    unsigned char szManagerName[ 33 ]; <br>    unsigned char szManagerAlias[ 33 ]; <br>    unsigned long dwManagerID; <br>    unsigned long dwObjID; <br>    unsigned long dwFlags; <br>    }   ADM_MAILBOX_INFO_A; <br> <br>            /* size is 64 */ <br>typedef struct  _DLM_INFO_A <br>    { <br>    unsigned char szMemberName[ 36 ]; <br>    unsigned char szMemberAlias[ 20 ]; <br>    unsigned long dwMemberID; <br>    unsigned long dwMemberType; <br>    }   DLM_INFO_A; <br> <br>            /* size is 68 */ <br>typedef struct  _DLM_LIST_A <br>    { <br>    DLM_INFO_A Info; <br>    struct _DLM_LIST_A __RPC_FAR *pNext; <br>    }   DLM_LIST_A; <br> <br>            /* size is 4 */ <br>typedef struct  _DLM_ARRAY_A <br>    { <br>    unsigned long dwCount; <br>    /* [size_is] */ DLM_INFO_A pMembers[ 1 ]; <br>    }   DLM_ARRAY_A; <br> <br>            /* size is 68 */ <br>typedef /* [transmit] */ DLM_LIST_A DLM_XMIT_LIST_A; <br> <br>            /* size is 780 */ <br>typedef struct  _ADM_MAILBOX_INFO_W <br>    { <br>    wchar_t szMailboxName[ 17 ]; <br>    wchar_t szFullName[ 33 ]; <br>    wchar_t szJobTitle[ 33 ]; <br>    wchar_t szOffice[ 33 ]; <br>    wchar_t szPhone[ 13 ]; <br>    wchar_t szAltPhone[ 13 ]; <br>    wchar_t szFax[ 13 ]; <br>    wchar_t szPassword[ 17 ]; <br>    wchar_t szCompany[ 33 ]; <br>    wchar_t szDepartment[ 33 ]; <br>    wchar_t szComments[ 80 ]; <br>    wchar_t szManagerName[ 33 ]; <br>    wchar_t szManagerAlias[ 33 ]; <br>    unsigned long dwManagerID; <br>    unsigned long dwObjID; <br>    unsigned long dwFlags; <br>    }   ADM_MAILBOX_INFO_W; <br> <br>            /* size is 120 */ <br>typedef struct  _DLM_INFO_W <br>    { <br>    wchar_t szMemberName[ 36 ]; <br>    wchar_t szMemberAlias[ 20 ]; <br>    unsigned long dwMemberID; <br>    unsigned long dwMemberType; <br>    }   DLM_INFO_W; <br> <br>            /* size is 124 */ <br>typedef struct  _DLM_LIST_W <br>    { <br>    DLM_INFO_W Info; <br>    struct _DLM_LIST_W __RPC_FAR *pNext; <br>    }   DLM_LIST_W; <br> <br>            /* size is 4 */ <br>typedef struct  _DLM_ARRAY_W <br>    { <br>    unsigned long dwCount; <br>    /* [size_is] */ DLM_INFO_W pMembers[ 1 ]; <br>    }   DLM_ARRAY_W; <br> <br>            /* size is 124 */ <br>typedef /* [transmit] */ DLM_LIST_W DLM_XMIT_LIST_W; <br> <br>            /* size is 4 */ <br>long RemoteAdmIsServerRunning( void); <br> <br>            /* size is 4 */ <br>long RemoteAdmDeleteObject(  <br>    /* [in] */ unsigned long dwObjID); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetServerMailboxes(  <br>    /* [out] */ long __RPC_FAR *pPipeNumber); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetServerDistLists(  <br>    /* [out] */ long __RPC_FAR *pPipeNumber); <br> <br>            /* size is 4 */ <br>long RemoteAdmEmptyMailbox(  <br>    /* [in] */ unsigned long dwMailboxID); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetGALDirectory(  <br>    /* [in] */ unsigned long dwFlags, <br>    /* [out] */ long __RPC_FAR *pPipeNumber); <br> <br>            /* size is 4 */ <br>long RemoteAdmTerminateNotifA(  <br>    /* [string][in] */ unsigned char __RPC_FAR *szComputerName, <br>    /* [in] */ unsigned long ulConnectionID); <br> <br>            /* size is 4 */ <br>long RemoteAdmValidateNotifA(  <br>    /* [string][in] */ unsigned char __RPC_FAR *szComputerName, <br>    /* [in] */ unsigned long ulNotifMask, <br>    /* [out] */ unsigned long __RPC_FAR *pulConnectionID); <br> <br>            /* size is 4 */ <br>long RemoteAdmCreateMailboxA(  <br>    /* [in] */ ADM_MAILBOX_INFO_A __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetMailboxPropsA(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [out] */ unsigned long __RPC_FAR *pdwObjType, <br>    /* [out] */ ADM_MAILBOX_INFO_A __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmSetMailboxPropsA(  <br>    /* [in] */ ADM_MAILBOX_INFO_A __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmCreateDistListA(  <br>    /* [string][in] */ unsigned char __RPC_FAR *szDLAlias, <br>    /* [string][in] */ unsigned char __RPC_FAR *szDLFullName, <br>    /* [in] */ unsigned long dwFlags, <br>    /* [string][in] */ unsigned char __RPC_FAR *szOwnerAlias, <br>    /* [string][in] */ unsigned char __RPC_FAR *szOwnerName, <br>    /* [in] */ unsigned long dwOwnerID, <br>    /* [in] */ DLM_XMIT_LIST_A __RPC_FAR *pMembers); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetDLPropsA(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [size_is][string][out] */ unsigned char __RPC_FAR *szDLAlias, <br>    /* [size_is][string][out] */ unsigned char __RPC_FAR *szDLFullName, <br>    /* [out] */ unsigned long __RPC_FAR *pdwFlags, <br>    /* [size_is][string][out] */ unsigned char __RPC_FAR *szOwnerAlias, <br>    /* [size_is][string][out] */ unsigned char __RPC_FAR *szOwnerName, <br>    /* [out] */ unsigned long __RPC_FAR *pdwOwnerID, <br>    /* [size_is][string][out] */ unsigned char __RPC_FAR *szComments, <br>    /* [out][in] */ DLM_XMIT_LIST_A __RPC_FAR *pMembers); <br> <br>            /* size is 4 */ <br>long RemoteAdmSetDLPropsA(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [string][in] */ unsigned char __RPC_FAR *szDLAlias, <br>    /* [string][in] */ unsigned char __RPC_FAR *szDLFullName, <br>    /* [in] */ unsigned long dwFlags, <br>    /* [string][in] */ unsigned char __RPC_FAR *szOwnerAlias, <br>    /* [string][in] */ unsigned char __RPC_FAR *szOwnerName, <br>    /* [in] */ unsigned long dwOwnerID, <br>    /* [string][in] */ unsigned char __RPC_FAR *szComments, <br>    /* [out][in] */ DLM_XMIT_LIST_A __RPC_FAR *pMembers); <br> <br>            /* size is 4 */ <br>long RemoteAdmTerminateNotifW(  <br>    /* [string][in] */ wchar_t __RPC_FAR *szComputerName, <br>    /* [in] */ unsigned long ulConnectionID); <br> <br>            /* size is 4 */ <br>long RemoteAdmValidateNotifW(  <br>    /* [string][in] */ wchar_t __RPC_FAR *szComputerName, <br>    /* [in] */ unsigned long ulNotifMask, <br>    /* [out] */ unsigned long __RPC_FAR *pulConnectionID); <br> <br>            /* size is 4 */ <br>long RemoteAdmCreateMailboxW(  <br>    /* [in] */ ADM_MAILBOX_INFO_W __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetMailboxPropsW(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [out] */ unsigned long __RPC_FAR *pdwObjType, <br>    /* [out] */ ADM_MAILBOX_INFO_W __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmSetMailboxPropsW(  <br>    /* [in] */ ADM_MAILBOX_INFO_W __RPC_FAR *pMailboxInfo); <br> <br>            /* size is 4 */ <br>long RemoteAdmCreateDistListW(  <br>    /* [string][in] */ wchar_t __RPC_FAR *szDLAlias, <br>    /* [string][in] */ wchar_t __RPC_FAR *szDLFullName, <br>    /* [in] */ unsigned long dwFlags, <br>    /* [string][in] */ wchar_t __RPC_FAR *szOwnerAlias, <br>    /* [string][in] */ wchar_t __RPC_FAR *szOwnerName, <br>    /* [in] */ unsigned long dwOwnerID, <br>    /* [in] */ DLM_XMIT_LIST_W __RPC_FAR *pMembers); <br> <br>            /* size is 4 */ <br>long RemoteAdmGetDLPropsW(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [size_is][string][out] */ wchar_t __RPC_FAR *szDLAlias, <br>    /* [size_is][string][out] */ wchar_t __RPC_FAR *szDLFullName, <br>    /* [out] */ unsigned long __RPC_FAR *pdwFlags, <br>    /* [size_is][string][out] */ wchar_t __RPC_FAR *szOwnerAlias, <br>    /* [size_is][string][out] */ wchar_t __RPC_FAR *szOwnerName, <br>    /* [out] */ unsigned long __RPC_FAR *pdwOwnerID, <br>    /* [size_is][string][out] */ wchar_t __RPC_FAR *szComments, <br>    /* [out][in] */ DLM_XMIT_LIST_W __RPC_FAR *pMembers); <br> <br>            /* size is 4 */ <br>long RemoteAdmSetDLPropsW(  <br>    /* [in] */ unsigned long dwObjID, <br>    /* [string][in] */ wchar_t __RPC_FAR *szDLAlias, <br>    /* [string][in] */ wchar_t __RPC_FAR *szDLFullName, <br>    /* [in] */ unsigned long dwFlags, <br>    /* [string][in] */ wchar_t __RPC_FAR *szOwnerAlias, <br>    /* [string][in] */ wchar_t __RPC_FAR *szOwnerName, <br>    /* [in] */ unsigned long dwOwnerID, <br>    /* [string][in] */ wchar_t __RPC_FAR *szComments, <br>    /* [out][in] */ DLM_XMIT_LIST_W __RPC_FAR *pMembers); <br> <br> <br>extern handle_t hWINDSADM; <br> <br> <br>extern RPC_IF_HANDLE WINDSADM_v1_0_c_ifspec; <br>extern RPC_IF_HANDLE WINDSADM_v1_0_s_ifspec; <br>#endif /* __WINDSADM_INTERFACE_DEFINED__ */ <br> <br>/* Additional Prototypes for ALL interfaces */ <br> <br> <br>void __RPC_USER DLM_XMIT_LIST_A_to_xmit( DLM_XMIT_LIST_A __RPC_FAR *, DLM_ARRAY_A  __RPC_FAR * __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_A_from_xmit( DLM_ARRAY_A  __RPC_FAR *, DLM_XMIT_LIST_A __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_A_free_inst( DLM_XMIT_LIST_A __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_A_free_xmit( DLM_ARRAY_A  __RPC_FAR * ); <br> <br>void __RPC_USER DLM_XMIT_LIST_W_to_xmit( DLM_XMIT_LIST_W __RPC_FAR *, DLM_ARRAY_W  __RPC_FAR * __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_W_from_xmit( DLM_ARRAY_W  __RPC_FAR *, DLM_XMIT_LIST_W __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_W_free_inst( DLM_XMIT_LIST_W __RPC_FAR * ); <br>void __RPC_USER DLM_XMIT_LIST_W_free_xmit( DLM_ARRAY_W  __RPC_FAR * ); <br> <br>/* end of Additional Prototypes */ <br> <br>#ifdef __cplusplus <br>} <br>#endif <br> <br>#endif </code></pre>
<p>&nbsp;</p></body>
</HTML>
