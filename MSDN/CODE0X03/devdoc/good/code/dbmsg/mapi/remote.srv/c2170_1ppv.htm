<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ADMIN.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2173"></a>ADMIN.H</h2>
<pre><code>/////////////////////////////////////////////////////////////////////////////// <br>// <br>//  File Name  <br>//      WINDSADM.H <br>// <br>//  Description <br>// <br>//  Author <br>//      Irving De la Cruz <br>// <br>//  Revision: 1.7 <br>// <br>// Written for Microsoft Windows Developer Support <br>// Copyright (c) 1995-1996 Microsoft Corporation. All rights reserved. <br>// <br>#ifndef _WINDSADM_H <br>#define _WINDSADM_H <br> <br>#define STRICT <br>#include &lt;WINDOWS.H&gt; <br>#include &lt;WINDOWSX.H&gt; <br>#include &lt;COMMDLG.H&gt; <br>#include &lt;COMMCTRL.H&gt; <br>#include "WRAP3D.H" <br> <br>#ifdef _DEBUG <br>#define ENABLE_DEBUG_OUTPUT     1 <br>#endif // _DEBUG <br>#define TRACES_NO_MAPI          1 <br> <br>#include "TRACES.H" <br>#include "RESOURCE.H" <br> <br>#include &lt;RPC.H&gt; <br>#include "WDSADM.H"    // Header file generated by the MIDL compiler <br>#include "WINDSGBL.H" <br> <br>//  CTL3D wrapper <br>extern "C" LPVOID g_pctl3d; <br> <br>#ifdef UNICODE <br>#error WINDS Administrator: Not ready for UNICODE yet... IrvingD (9/10/95) <br>#define RemoteAdmTerminateNotif     RemoteAdmTerminateNotifW <br>#define RemoteAdmValidateNotif      RemoteAdmValidateNotifW <br>#define RemoteAdmCreateMailbox      RemoteAdmCreateMailboxW <br>#define RemoteAdmGetMailboxProps    RemoteAdmGetMailboxPropsW <br>#define RemoteAdmSetMailboxProps    RemoteAdmSetMailboxPropsW <br>#define RemoteAdmCreateDistList     RemoteAdmCreateDistListW <br>#define RemoteAdmGetDLProps         RemoteAdmGetDLPropsW <br>#define RemoteAdmSetDLProps         RemoteAdmSetDLPropsW <br>#define ADMIN_DL_MEMBERS            ADMIN_DL_MEMBERS_W <br>#define DLM_LIST                    DLM_LIST_W <br>#define DLM_INFO                    DLM_INFO_W <br>#define ADM_MAILBOX_INFO            ADM_MAILBOX_INFO_W <br>#else <br>#define RemoteAdmTerminateNotif     RemoteAdmTerminateNotifA <br>#define RemoteAdmValidateNotif      RemoteAdmValidateNotifA <br>#define RemoteAdmCreateMailbox      RemoteAdmCreateMailboxA <br>#define RemoteAdmGetMailboxProps    RemoteAdmGetMailboxPropsA <br>#define RemoteAdmSetMailboxProps    RemoteAdmSetMailboxPropsA <br>#define RemoteAdmCreateDistList     RemoteAdmCreateDistListA <br>#define RemoteAdmGetDLProps         RemoteAdmGetDLPropsA <br>#define RemoteAdmSetDLProps         RemoteAdmSetDLPropsA <br>#define ADMIN_DL_MEMBERS            ADMIN_DL_MEMBERS_A <br>#define DLM_LIST                    DLM_LIST_A <br>#define DLM_INFO                    DLM_INFO_A <br>#define ADM_MAILBOX_INFO            ADM_MAILBOX_INFO_A <br>#endif // UNICODE <br> <br>enum <br>{ <br>    IMG_MAILABLE_OBJECTS_CLOSE  = 0, <br>    IMG_MAILABLE_OBJECTS_OPEN, <br>    IMG_PUBLIC_FOLDER, <br>    IMG_USER, <br>    IMG_FOREIGN_USER, <br>    IMG_MAIL_GROUP, <br>    IMG_DIST_LIST, <br>    IMG_SERVER_PUB_FOLDER, <br>    IMG_SERVER, <br>    IMG_SERVER_OBJECTS, <br>    IMG_SERVER_GATEWAY, <br>    IMG_GATEWAY, <br>    IMG_USER_MAILBOX, <br>    IMG_FOLDER_CLOSE, <br>    IMG_FOLDER_OPEN, <br>}; <br> <br>enum <br>{ <br>    ICON_AUTO_REPLY     = 0, <br>    ICON_CONSTRUCT, <br>    ICON_DL_MEMBERS, <br>    ICON_LABELS, <br>    ICON_LARGE_ENVEL, <br>    ICON_MAILBOX, <br>    ICON_PHONE_HAND, <br>    ICON_KEY, <br>    ICON_PEOPLE, <br>    ICON_DL_OWNER, <br>    ICON_CONNECT, <br>    ICON_TIMEUP, <br>    ICON_WORLD, <br>    ICON_CLIP <br>}; <br> <br>#define WM_WINDS_UPDATEHEADERWIDTH          (WM_USER + 100) <br>#define WM_WINDS_REMOTE_CALL_IN_PROGRESS    (WM_USER + 101) <br>#define WM_WINDS_REMOTE_CALL_COMPLETED      (WM_USER + 102) <br>#define WM_WINDS_RESET_NOTIF_LINK           (WM_USER + 103) <br>#define WM_WINDS_IMPORT_START               (WM_USER + 104) <br>#define WM_WINDS_IMPORT_FINISHED            (WM_USER + 105) <br>#define WM_WINDS_EXPORT_START               (WM_USER + 106) <br>#define WM_WINDS_EXPORT_FINISHED            (WM_USER + 107) <br> <br>typedef enum _ITEM_TYPE <br>{ <br>    ITEM_UNDEFINED_TYPE, <br>    ITEM_SERVER_USER_MAILBOXES, <br>    ITEM_SERVER_DIST_LISTS, <br>    ITEM_SERVER_FOREIGN_MAILBOXES, <br>    ITEM_SERVER_PUBLIC_FOLDERS, <br>    ITEM_SERVER_GATEWAYS, <br>    ITEM_REMOTE_SERVER, <br>    ITEM_OBJECT_DIRECTORY <br>} ITEM_TYPE; <br> <br>typedef struct _OBJECT_INFO_A <br>{ <br>    DWORD               dwData; <br>    WINDS_AB_OBJTYPE    Type; <br>    MAILBOX_INFO_A      MB; <br>    DIST_LIST_INFO_A    DL; <br>    DLM_LIST_A *        pMembers; <br>} OBJECT_INFO_A, *POBJECT_INFO_A; <br> <br>#ifdef UNICODE <br>#define OBJECT_INFO     OBJECT_INFO_W <br>#define POBJECT_INFO    POBJECT_INFO_W <br>#else <br>#define OBJECT_INFO     OBJECT_INFO_A <br>#define POBJECT_INFO    POBJECT_INFO_A <br>#endif // UNICODE <br> <br>extern "C" <br>{ <br>    extern ITEM_TYPE g_LVItemsType; <br>    extern HINSTANCE ghInstance; <br>    extern HANDLE ghMemHeap; <br>    extern HANDLE ghCancelEvent; <br>    extern HWND ghTreeView, ghListView, ghWnd, ghStatusBar, ghToolBar; <br>    extern BOOL gfCancel, gfRPCinProgress; <br>    extern HFONT ghBoldFont; <br>    extern CRITICAL_SECTION csCancel; <br>    extern CRITICAL_SECTION csRemoteServer; <br>    extern TCHAR g_szCurrentServer[]; <br>    extern HIMAGELIST g_hImages, g_hIconImgs; <br> <br>    void WINAPI AddServerToList <br>                        (LPTSTR                     szServer, <br>                         BOOL                       fExpandRoot); <br> <br>    void WINAPI CreateNewMailbox <br>                        (HWND                       hOwnerWnd); <br>    void WINAPI CreateNewDistList <br>                        (HWND                       hOwnerWnd); <br>    void WINAPI CreateNewPubFolder <br>                        (HWND                       hOwnerWnd); <br>    void WINAPI ShowMailboxProps <br>                        (HWND                       hOwnerWnd, <br>                         DWORD                      dwObjID); <br>    void WINAPI ShowDistListProps <br>                        (HWND                       hOwnerWnd, <br>                         DWORD                      dwObjID); <br>    void WINAPI DeleteServerObject <br>                        (HWND                       hOwnerWnd, <br>                         DWORD                      dwObjID); <br>    void WINAPI PurgeMailboxMessages <br>                        (HWND                       hOwnerWnd, <br>                         DWORD                      dwObjID); <br>    void WINAPI ErrorHandler <br>                        (HWND                       hOwnerWnd, <br>                         HRESULT                    hError); <br>    void WINAPI DrawListViewItem <br>                        (LPDRAWITEMSTRUCT           pDIS); <br>    void WINAPI UpdateHeaderWidth <br>                        (HWND                       hWndHeader, <br>                         int                        iItem); <br> <br>    BOOL WINAPI CreateListView <br>                        (HWND                       hOwnerWnd, <br>                         HIMAGELIST                 hImages); <br>    BOOL WINAPI CreateTreeView <br>                        (HWND                       hOwnerWnd, <br>                         HIMAGELIST                 hImages); <br>    BOOL WINAPI CreateStatusBar <br>                        (HWND                       hOwnerWnd); <br>    BOOL WINAPI CreateToolBar <br>                        (HWND                       hOwnerWnd); <br>    BOOL WINAPI IsObjAliasValid <br>                        (HWND                       hOwnerWnd, <br>                         LPTSTR                     szObjAlias); <br> <br>    HRESULT WINAPI BindToServer <br>                        (LPTSTR                     szServer); <br>    HRESULT WINAPI GetServerMailboxes <br>                        (HWND                       hOwnerWnd); <br>    HRESULT WINAPI GetServerDistLists <br>                        (HWND                       hOwnerWnd); <br>    HRESULT WINAPI DownloadBulkInfo <br>                        (HWND                       hOwnerWnd, <br>                         HWND                       hListView, <br>                         ITEM_TYPE                  Type); <br>     <br>    HCURSOR WINAPI GetAnimatedTimerCursor <br>                        (); <br> <br>    BOOL WINAPI BrowseFileName <br>                        (HWND                       hOwnerWnd, <br>                         LPTSTR                     szFileName, <br>                         BOOL                       fImport); <br>    BOOL CALLBACK AboutDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK ServerConnectDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK ExportDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK ImportDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK ImportProgressDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK ExportProgressDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK RemoveServersDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>    BOOL CALLBACK SelectUserDlgProc <br>                        (HWND                       hDlg,  <br>                         UINT                       message,  <br>                         WPARAM                     wParam,  <br>                         LPARAM                     lParam); <br>}; <br> <br>inline BOOL WINAPI AbortRemoteCall() <br>{ <br>    BOOL fState; <br>    EnterCriticalSection (&amp;csCancel); <br>    fState = gfCancel; <br>    if (TRUE == gfCancel) <br>    { <br>        gfCancel = FALSE; <br>    } <br>    LeaveCriticalSection (&amp;csCancel); <br>    return fState; <br>} <br> <br>class CNotifLink; <br> <br>extern CNotifLink * gpLink; <br> <br>DWORD WINAPI MailslotListenThreadProc (CNotifLink * pLink); <br> <br>class CNotifLink <br>{ <br>public : <br>    STDMETHODIMP StartNotification <br>                        (); <br>    STDMETHODIMP EndNotifications <br>                        (); <br>    inline HANDLE WINAPI GetListenMailslot <br>                        () { return m_hMailSlot; } <br> <br>public : <br>    CNotifLink(); <br>    ~CNotifLink(); <br> <br>private : <br>    HANDLE      m_hMailSlot; <br>    ULONG       m_ulConnectionID; <br>    TCHAR       m_szComputerName[MAX_COMPUTERNAME_LENGTH + 1]; <br>}; <br> <br>#endif // _WINDSADM_H <br> <br>// End of file for WINDSADM.H </code></pre>
<p>&nbsp;</p></body>
</HTML>
