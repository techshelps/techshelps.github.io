<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WDSADM.IDL</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2191"></a>WDSADM.IDL</h2>
<pre><code>[ <br>    uuid(2BC66860-E91E-11CE-B2F0-00AA00510E3B), <br>    version(1.0), <br>    pointer_default(unique) <br>] <br> <br>#define MAX_ALIAS_SIZE      16+1 <br>#define MAX_STRING_SIZE     32+1 <br>#define MAX_PHONE_SIZE      12+1 <br>#define MAX_COMMENT_SIZE    79+1 <br>#define MAX_PASSWORD_SIZE   MAX_ALIAS_SIZE <br> <br>interface WINDSADM <br>{ <br>    // ANSI data structures <br>    typedef struct _ADM_MAILBOX_INFO_A <br>    { <br>        char            szMailboxName[MAX_ALIAS_SIZE]; <br>        char            szFullName[MAX_STRING_SIZE]; <br>        char            szJobTitle[MAX_STRING_SIZE]; <br>        char            szOffice[MAX_STRING_SIZE]; <br>        char            szPhone[MAX_PHONE_SIZE]; <br>        char            szAltPhone[MAX_PHONE_SIZE]; <br>        char            szFax[MAX_PHONE_SIZE]; <br>        char            szPassword[MAX_ALIAS_SIZE]; <br>        char            szCompany[MAX_STRING_SIZE]; <br>        char            szDepartment[MAX_STRING_SIZE]; <br>        char            szComments[MAX_COMMENT_SIZE]; <br>        char            szManagerName[MAX_STRING_SIZE]; <br>        char            szManagerAlias[MAX_STRING_SIZE]; <br>        unsigned long   dwManagerID; <br>        unsigned long   dwObjID; <br>        unsigned long   dwFlags; <br>    } ADM_MAILBOX_INFO_A; <br> <br>    typedef struct _DLM_INFO_A <br>    { <br>        char            szMemberName[36]; <br>        char            szMemberAlias[20]; <br>        unsigned long   dwMemberID; <br>        unsigned long   dwMemberType; <br>    } DLM_INFO_A; <br> <br>    typedef struct _DLM_LIST_A <br>    { <br>        DLM_INFO_A            Info; <br>        struct _DLM_LIST_A *  pNext; <br>    } DLM_LIST_A; <br> <br>    typedef struct _DLM_ARRAY_A <br>    { <br>        unsigned long                   dwCount; <br>        [size_is(dwCount)] DLM_INFO_A   pMembers[]; <br>    } DLM_ARRAY_A; <br> <br>    typedef [transmit_as(DLM_ARRAY_A)] DLM_LIST_A   DLM_XMIT_LIST_A; <br> <br>    // UNICODE data structures <br>    typedef struct _ADM_MAILBOX_INFO_W <br>    { <br>        wchar_t         szMailboxName[MAX_ALIAS_SIZE]; <br>        wchar_t         szFullName[MAX_STRING_SIZE]; <br>        wchar_t         szJobTitle[MAX_STRING_SIZE]; <br>        wchar_t         szOffice[MAX_STRING_SIZE]; <br>        wchar_t         szPhone[MAX_PHONE_SIZE]; <br>        wchar_t         szAltPhone[MAX_PHONE_SIZE]; <br>        wchar_t         szFax[MAX_PHONE_SIZE]; <br>        wchar_t         szPassword[MAX_ALIAS_SIZE]; <br>        wchar_t         szCompany[MAX_STRING_SIZE]; <br>        wchar_t         szDepartment[MAX_STRING_SIZE]; <br>        wchar_t         szComments[MAX_COMMENT_SIZE]; <br>        wchar_t         szManagerName[MAX_STRING_SIZE]; <br>        wchar_t         szManagerAlias[MAX_STRING_SIZE]; <br>        unsigned long   dwManagerID; <br>        unsigned long   dwObjID; <br>        unsigned long   dwFlags; <br>    } ADM_MAILBOX_INFO_W; <br> <br>    typedef struct _DLM_INFO_W <br>    { <br>        wchar_t         szMemberName[36]; <br>        wchar_t         szMemberAlias[20]; <br>        unsigned long   dwMemberID; <br>        unsigned long   dwMemberType; <br>    } DLM_INFO_W; <br> <br>    typedef struct _DLM_LIST_W <br>    { <br>        DLM_INFO_W            Info; <br>        struct _DLM_LIST_W *  pNext; <br>    } DLM_LIST_W; <br> <br>    typedef struct _DLM_ARRAY_W <br>    { <br>        unsigned long                   dwCount; <br>        [size_is(dwCount)] DLM_INFO_W   pMembers[]; <br>    } DLM_ARRAY_W; <br> <br>    typedef [transmit_as(DLM_ARRAY_W)] DLM_LIST_W   DLM_XMIT_LIST_W; <br> <br> <br>     <br>    long RemoteAdmIsServerRunning <br>            (); <br>    long RemoteAdmDeleteObject <br>            ([in] unsigned long                                         dwObjID); <br>    long RemoteAdmGetServerMailboxes <br>            ([out] long *                                               pPipeNumber); <br>    long RemoteAdmGetServerDistLists <br>            ([out] long *                                               pPipeNumber); <br>    long RemoteAdmEmptyMailbox <br>            ([in] unsigned long                                         dwMailboxID); <br>    long RemoteAdmGetGALDirectory <br>            ([in] unsigned long                                         dwFlags, <br>             [out] long *                                               pPipeNumber); <br> <br>    // ANSI version of the RPC calls <br>    long RemoteAdmTerminateNotifA <br>            ([in, string] unsigned char *                               szComputerName, <br>             [in] unsigned long                                         ulConnectionID); <br>    long RemoteAdmValidateNotifA <br>            ([in, string] unsigned char *                               szComputerName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br>    long RemoteAdmCreateMailboxA <br>            ([in] ADM_MAILBOX_INFO_A *                                  pMailboxInfo); <br>    long RemoteAdmGetMailboxPropsA <br>            ([in] unsigned long                                         dwObjID, <br>             [out] unsigned long *                                      pdwObjType, <br>             [out] ADM_MAILBOX_INFO_A *                                 pMailboxInfo); <br>    long RemoteAdmSetMailboxPropsA <br>            ([in] ADM_MAILBOX_INFO_A *                                  pMailboxInfo); <br> <br>    long RemoteAdmCreateDistListA <br>            ([in, string] unsigned char *                               szDLAlias, <br>             [in, string] unsigned char *                               szDLFullName, <br>             [in] unsigned long                                         dwFlags, <br>             [in, string] unsigned char *                               szOwnerAlias, <br>             [in, string] unsigned char *                               szOwnerName, <br>             [in] unsigned long                                         dwOwnerID, <br>             [in] DLM_XMIT_LIST_A *                                     pMembers); <br>    long RemoteAdmGetDLPropsA <br>            ([in] unsigned long                                         dwObjID, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szDLAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szDLFullName, <br>             [out] unsigned long *                                      pdwFlags, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] unsigned char *     szOwnerAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] unsigned char *    szOwnerName, <br>             [out] unsigned long *                                      pdwOwnerID, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] unsigned char *   szComments, <br>             [in, out] DLM_XMIT_LIST_A *                                pMembers); <br>    long RemoteAdmSetDLPropsA <br>            ([in] unsigned long                                         dwObjID, <br>             [in, string] unsigned char *                               szDLAlias, <br>             [in, string] unsigned char *                               szDLFullName, <br>             [in] unsigned long                                         dwFlags, <br>             [in, string] unsigned char *                               szOwnerAlias, <br>             [in, string] unsigned char *                               szOwnerName, <br>             [in] unsigned long                                         dwOwnerID, <br>             [in, string] unsigned char *                               szComments, <br>             [in, out] DLM_XMIT_LIST_A *                                pMembers); <br> <br>    // UNICODE version of the RPC calls <br>    long RemoteAdmTerminateNotifW <br>            ([in, string] wchar_t *                                     szComputerName, <br>             [in] unsigned long                                         ulConnectionID); <br>    long RemoteAdmValidateNotifW <br>            ([in, string] wchar_t *                                     szComputerName, <br>             [in] unsigned long                                         ulNotifMask, <br>             [out] unsigned long *                                      pulConnectionID); <br> <br>    long RemoteAdmCreateMailboxW <br>            ([in] ADM_MAILBOX_INFO_W *                                  pMailboxInfo); <br>    long RemoteAdmGetMailboxPropsW <br>            ([in] unsigned long                                         dwObjID, <br>             [out] unsigned long *                                      pdwObjType, <br>             [out] ADM_MAILBOX_INFO_W *                                 pMailboxInfo); <br>    long RemoteAdmSetMailboxPropsW <br>            ([in] ADM_MAILBOX_INFO_W *                                  pMailboxInfo); <br> <br>    long RemoteAdmCreateDistListW <br>            ([in, string] wchar_t *                                     szDLAlias, <br>             [in, string] wchar_t *                                     szDLFullName, <br>             [in] unsigned long                                         dwFlags, <br>             [in, string] wchar_t *                                     szOwnerAlias, <br>             [in, string] wchar_t *                                     szOwnerName, <br>             [in] unsigned long                                         dwOwnerID, <br>             [in] DLM_XMIT_LIST_W *                                     pMembers); <br>    long RemoteAdmGetDLPropsW <br>            ([in] unsigned long                                         dwObjID, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szDLAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szDLFullName, <br>             [out] unsigned long *                                      pdwFlags, <br>             [out, string, size_is(MAX_ALIAS_SIZE)] wchar_t *           szOwnerAlias, <br>             [out, string, size_is(MAX_STRING_SIZE)] wchar_t *          szOwnerName, <br>             [out] unsigned long *                                      pdwOwnerID, <br>             [out, string, size_is(MAX_COMMENT_SIZE)] wchar_t *         szComments, <br>             [in, out] DLM_XMIT_LIST_W *                                pMembers); <br>    long RemoteAdmSetDLPropsW <br>            ([in] unsigned long                                         dwObjID, <br>             [in, string] wchar_t *                                     szDLAlias, <br>             [in, string] wchar_t *                                     szDLFullName, <br>             [in] unsigned long                                         dwFlags, <br>             [in, string] wchar_t *                                     szOwnerAlias, <br>             [in, string] wchar_t *                                     szOwnerName, <br>             [in] unsigned long                                         dwOwnerID, <br>             [in, string] wchar_t *                                     szComments, <br>             [in, out] DLM_XMIT_LIST_W *                                pMembers); <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
