<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2053"></a>README.TXT</h2>
<pre><code>Sample CMC Client <br> <br> <br>The CMC.Cli sample demonstrates using Common Messaging Calls (CMC) functions. <br> <br>The sample is a very simple mail client. Using it is intuitive and <br>straightforward. <br> <br>To run this application, you have to have the MAPI run-time binaries <br>installed on your system. For installation instructions, see the <br>README.WRI in the mstools\mapi\ directory. <br> <br>When writing CMC applications, the addresses of all of the CMC functions <br>has to be obtained explicitly using GetProcAddress, as opposed to <br>linking with the import library for MAPI.DLL. You may wish to adapt <br>the function InitSimpleCMC() from CMCCLI.C for this purpose. <br> <br>If sending/receiving mail is not the primary function of your application, <br>you can test presence of CMC in a system without incurring the high cost of <br>trying to load a DLL. You can test the value of the CMC variable. It is 1 <br>if CMC is installed. The variable is located in the [mail] section of your <br>WIN.INI file on a 16-bit Windows system and under <br>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Messaging Subsystem <br>in the system registry on a 32-bit Windows system. You can cut and paste <br>the function fCMCInstalled() from CMCCLI.C for this purpose. </code></pre>
<p>&nbsp;</p></body>
</HTML>
