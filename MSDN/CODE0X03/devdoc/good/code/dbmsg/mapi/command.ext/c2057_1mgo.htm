<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CMDEXT.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2058"></a>CMDEXT.H</h2>
<pre><code>/////////////////////////////////////////////////////////////////////////////// <br>// <br>//  File Name  <br>//      CMDEXT.H <br>// <br>//  Description <br>//      Interface Methods are declared in this file for cmdext.cpp. <br>// <br>//  Author <br>//      Gary Peluso <br>// <br>//  Revision: 1.00 <br>// <br>// Written for Microsoft Windows Developer Support <br>// Copyright (c) 1992-1995 Microsoft Corporation. All rights reserved. <br>// <br>#ifndef _CMDEXT_H_ <br>#define _CMDEXT_H_ <br> <br>#include &lt;WINDOWS.H&gt;  <br>#include &lt;COMMCTRL.H&gt; <br>#include &lt;MAPIX.H&gt; <br>#include &lt;MAPIUTIL.H&gt; <br>#include &lt;MAPIFORM.H&gt; <br>#include &lt;INITGUID.H&gt; <br>#include &lt;MAPIGUID.H&gt; <br>#include &lt;EXCHEXT.H&gt; <br> <br>#include "RESOURCE.H" <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    prototypes <br>void GetFolderStats(LPMAPIFOLDER lpFolder, ULONG FAR * ulSubFolders,  <br>                    ULONG FAR * ulReadMsgs, ULONG FAR * ulUnReadMsgs); <br> <br>/////////////////////////////////////////////////////////////////////////////// <br>//    forward declarations <br>class MyExchExt; <br>class MyExchExtCommands; <br>class MyExchExtUserEvents; <br> <br>extern "C" <br>{ <br>    LPEXCHEXT CALLBACK ExchEntryPoint(void); <br>} <br> <br>class MyExchExt : public IExchExt <br>{ <br>  <br> public: <br>    MyExchExt (); <br>    STDMETHODIMP QueryInterface <br>                    (REFIID                     riid, <br>                     LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                    () { ++m_cRef; return m_cRef; }; <br>    inline STDMETHODIMP_(ULONG) Release <br>                    () { ULONG ulCount = --m_cRef; <br>                         if (!ulCount) { delete this; } <br>                         return ulCount;}; <br>    STDMETHODIMP Install (LPEXCHEXTCALLBACK pmecb,  <br>                        ULONG mecontext, ULONG ulFlags); <br> <br> private: <br>    ULONG m_cRef; <br>    UINT  m_context; <br> <br>    MyExchExtCommands * m_pExchExtCommands; <br>    MyExchExtUserEvents * m_pExchExtUserEvents; <br>}; <br> <br>class MyExchExtCommands : public IExchExtCommands <br>{ <br> public: <br>    MyExchExtCommands ()  <br>        { m_cRef = 0; m_context = 0;  <br>          m_cmdid = 0;  m_itbb = 0; m_itbm = 0;  m_hWnd = 0; }; <br>    STDMETHODIMP QueryInterface <br>                    (REFIID                     riid, <br>                     LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                    () { ++m_cRef; return m_cRef; }; <br>    inline STDMETHODIMP_(ULONG) Release <br>                    () { ULONG ulCount = --m_cRef; <br>                         if (!ulCount) { delete this; } <br>                         return ulCount;}; <br>    STDMETHODIMP InstallCommands(LPEXCHEXTCALLBACK pmecb,  <br>                                HWND hwnd, HMENU hmenu, <br>                                UINT FAR * cmdidBase, LPTBENTRY lptbeArray, <br>                                UINT ctbe, ULONG ulFlags);                                                                               <br>    STDMETHODIMP DoCommand(LPEXCHEXTCALLBACK pmecb, UINT mni); <br>    STDMETHODIMP_(VOID) InitMenu(LPEXCHEXTCALLBACK pmecb); <br>    STDMETHODIMP Help(LPEXCHEXTCALLBACK pmecb, UINT mni); <br>    STDMETHODIMP QueryHelpText(UINT mni, ULONG ulFlags, LPTSTR sz, UINT cch); <br>    STDMETHODIMP QueryButtonInfo(ULONG tbid, UINT itbb, LPTBBUTTON ptbb, <br>                                LPTSTR lpsz, UINT cch, ULONG ulFlags); <br>    STDMETHODIMP ResetToolbar(ULONG tbid, ULONG ulFlags); <br> <br>    inline VOID SetContext <br>                (ULONG eecontext) { m_context = eecontext; }; <br>    inline UINT GetCmdID() { return m_cmdid; }; <br>   <br> private: <br>    ULONG m_cRef; <br>    ULONG m_context; <br> <br>    UINT  m_cmdid;     // cmdid for menu extension command <br> <br>    UINT  m_itbb;      // toolbar <br>    UINT  m_itbm; <br> <br>    HWND  m_hWnd;           <br> <br>}; <br> <br> <br>class MyExchExtUserEvents : public IExchExtUserEvents <br>{ <br> public: <br>    MyExchExtUserEvents() { m_cRef = 0; m_context = 0; <br>                            m_pExchExt = NULL; }; <br>    STDMETHODIMP QueryInterface <br>                (REFIID                     riid, <br>                 LPVOID *                   ppvObj); <br>    inline STDMETHODIMP_(ULONG) AddRef <br>                () { ++m_cRef; return m_cRef; }; <br>    inline STDMETHODIMP_(ULONG) Release <br>                () { ULONG ulCount = --m_cRef; <br>                     if (!ulCount) { delete this; } <br>                     return ulCount;}; <br> <br>    STDMETHODIMP_(VOID) OnSelectionChange(LPEXCHEXTCALLBACK pmecb); <br>    STDMETHODIMP_(VOID) OnObjectChange(LPEXCHEXTCALLBACK pmecb); <br> <br>    inline VOID SetContext <br>                (ULONG eecontext) { m_context = eecontext; }; <br>    inline VOID SetIExchExt <br>                (MyExchExt * pExchExt) { m_pExchExt = pExchExt; }; <br> <br> private: <br>    ULONG m_cRef; <br>    ULONG m_context; <br>     <br>    MyExchExt * m_pExchExt; <br> <br>}; <br> <br>#endif // _CMDEXT_H_ </code></pre>
<p>&nbsp;</p></body>
</HTML>
