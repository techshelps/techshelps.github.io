<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ABCTBL.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2106"></a>ABCTBL.H</h2>
<pre><code>/*********************************************************************** <br> * <br> *  ABCTBL.H <br> * <br> *  Definitions for Sample Address Book Contents Table <br> * <br> *  Copyright 1992-1995 Microsoft Corporation.  All Rights Reserved. <br> * <br> ***********************************************************************/ <br> <br> <br>/* <br> *  BookMark structure <br> */ <br> <br>#define MAX_BOOKMARKS   10 <br> <br>#define BK_PEGGEDTOEND      ((ULONG)0x00000001) <br> <br>typedef struct _ABCBK <br>{ <br> <br>    ULONG       ulFlags;            /*  Flags */ <br>    FILETIME    filetime;           /*  Time of file when bookmark created */ <br>    ULONG       ulPosition;         /*  Position of record in file */ <br>    ABCREC      abcrec;             /*  Record associated with this bookmark */ <br> <br>} ABCBK, *LPABCBK; <br> <br> <br>/* <br> *  _IVTABC is the structure returned to the client when <br> *  the contents table is retrieved from the ab container <br> *  object (ABCONT.C). <br> * <br> *  The first thing in the structure must be a jump table <br> *  with all the IMAPITable methods in it. <br> * <br> */ <br>typedef struct _IVTABC <br>{ <br>    const IVTABC_Vtbl FAR * lpVtbl; <br> <br>    SAB_IUnkWithLogon; <br>     <br>    /* <br>     *  Private data <br>     */ <br> <br>    /*  The list of active columns */ <br>    LPSPropTagArray lpPTAColSet; <br> <br>    /*  HANDLE of file that I'm browsing... */ <br>    HANDLE hFile; <br> <br>    /*  FILETIME time the file was last changed */ <br>    FILETIME filetime; <br> <br>    /*  Size of file */ <br>    ULONG ulMaxPos; <br> <br>    /*  Current position in file */ <br>    ULONG ulPosition; <br> <br>    /*  BookMark array... */ <br>    LPABCBK rglpABCBK[MAX_BOOKMARKS]; <br> <br>    /* <br>     *  Restriction stuff <br>     */ <br> <br>    ULONG ulRstrDenom; <br> <br>    /*  Partial Name to match */ <br>    LPSTR lpszPartialName; <br> <br>    /*  2 bit arrays of what's been checked, and what (of them) matches */ <br>    BYTE *rgChecked; <br>    BYTE *rgMatched; <br> <br>    ULONG   ulConnectMic; <br>    UINT    cAdvise;                            /* Count of registered notifications */ <br>    LPMAPIADVISESINK * parglpAdvise;    /* Registered notifications */ <br>    FTG ftg;                                /* Idle function tag */ <br>    LPSTR   lpszFileName; <br> <br> <br>} IVTABC, *LPIVTABC; <br> <br> <br>/* <br> *  Record for PR_INSTANCE_KEY.  Need enough information to find the record quickly as <br> *  well as determine if the record is still valid. <br> */ <br>typedef struct _abcrecinstance <br>{ <br>    ULONG ulRecordPosition; <br>    FILETIME filetime; <br>    char rgchzFileName[1];  /* Get's sized accordingly */ <br> <br>} ABCRecInstance, FAR * LPABCRecInstance; <br> <br> <br>/* <br> *  Private macros <br> */ <br> <br>/* Counts the number of bits in a byte */ <br>#define CBitsB(b, cbits) {                               \ <br>                                                         \ <br>        cbits = 0;                                       \ <br>                                                         \ <br>        cbits = ((b)   &amp; 0x55) + ((b&gt;&gt;1) &amp; 0x55);        \ <br>        cbits = (cbits &amp; 0x33) + ((cbits&gt;&gt;2) &amp; 0x33);    \ <br>        cbits = (cbits &amp; 0x0f) + (cbits&gt;&gt;4);             \ <br>    } <br> <br> <br> <br>/* <br> *  Internal abctbl functions <br> */ <br> <br>HRESULT     HrOpenFile(LPIVTABC lpIVTAbc); <br>void        FreeANRBitmaps(LPIVTABC lpIVTAbc); <br>HRESULT     HrValidateEntry (LPIVTABC lpIVTAbc, ULONG ulNewPos); <br>BOOL        FNameMatch (LPIVTABC lpIVTAbc, LPSTR rgchDisplayName); <br>BOOL        FMatched (LPIVTABC lpIVTAbc, ULONG ulNewPos); <br>BOOL        FChecked (LPIVTABC lpIVTAbc, ULONG ulNewPos); <br> <br> <br> <br>/* <br> *  Default column set <br> */ <br>enum {  ivalvtPR_DISPLAY_NAME, <br>        ivalvtPR_ENTRYID, <br>        ivalvtPR_ADDRTYPE, <br>        ivalvtPR_EMAIL_ADDRESS, <br>        ivalvtPR_OBJECT_TYPE, <br>        ivalvtPR_DISPLAY_TYPE, <br>        ivalvtPR_INSTANCE_KEY, <br>        cvalvtMax }; <br> <br> <br> <br>/* <br> *  Externs defined for use in the three table modules <br> */ <br> <br>extern const IVTABC_Vtbl vtblIVTABC; <br>extern const LPSPropTagArray ptagaivtabcColSet; <br> <br>/* Parameter Validation*/ <br>#define IVTABC_ValidateObject(Method, pThis)                                \ <br>{   HRESULT hr;                                                             \ <br>    if(IsBadReadPtr(pThis, sizeof(IVTABC)))                                 \ <br>    {                                                                       \ <br>        hr = ResultFromScode(E_INVALIDARG);                                 \ <br>        DebugTraceResult(IVTABC##_##Method, hr);                            \ <br>        return hr;                                                          \ <br>    }                                                                       \ <br>    if(pThis-&gt;lpVtbl != &amp;vtblIVTABC)                                        \ <br>    {                                                                       \ <br>        hr = ResultFromScode(E_INVALIDARG);                                 \ <br>        DebugTraceResult(IVTABC##_##Method, hr);                            \ <br>        return hr;                                                          \ <br>    }                                                                       \ <br>} </code></pre>
<p>&nbsp;</p></body>
</HTML>
