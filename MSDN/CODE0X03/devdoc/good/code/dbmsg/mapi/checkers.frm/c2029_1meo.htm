<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>WCHECK.H</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2040"></a>WCHECK.H</h2>
<pre><code>//---[ Global defines ]---------------------------------------------------- <br> <br>#define MAX_SQUARE_SIZE     100 <br>#define MIN_SQUARE_SIZE     15 <br>#define SQUARE_GRANULARITY  2 <br> <br>#define BOARD_TOP       10 <br>#define BOARD_LEFT      10 <br> <br>#define RACK_LEFT       10      // * Square size <br>#define RACK_TOP        2       // * Square size <br> <br>#define GAME_WON        0 <br>#define GAME_PLAYABLE   1 <br>#define GAME_DRAWN      2 <br> <br>#define INI_NAME        "WCHECK.INI" <br>#define APP_NAME        "Checkers" <br>#define ID_TIMER            1 <br>#define TIMER_GRANULARITY   500 <br> <br>#define HUMAN_PLAYER    0 <br>#define COMPUTER_PLAYER 1 <br>#define NETWORK_PLAYER  2 <br>                          <br>BOOL InitApplication(HINSTANCE); <br>BOOL InitInstance(HINSTANCE, int); <br>LRESULT CALLBACK CheckersWndProc        (HWND, UINT, WPARAM, LPARAM); <br>LRESULT CALLBACK About          (HWND, UINT, WPARAM, LPARAM); <br>void NEAR PASCAL FillBoard(BYTE *pb, HDC hDC); <br>void DrawBoard(BOARD b); <br>void NEAR PASCAL CheckGenPieces(HDC hDC); <br>void NEAR PASCAL CheckCreate(); <br>void NEAR PASCAL CheckPaint(BOARD b, HDC hDC); <br>BOOL CenterWindow (HWND hwndChild, HWND hwndParent); <br>void NEAR PASCAL CheckMouseMove(POINT point); <br>void NEAR PASCAL CheckChar(WORD code); <br>void NEAR PASCAL CheckMouseClick(POINT point); <br>void NEAR PASCAL UpdateCursor(HWND hwnd); <br>void inline vTranslateCurPosToSquare(POINT pntCur, int *pix, int *piy); <br>void inline vTranslateUIToEngineSquare(int *piEngine, int iX, int iY); <br>void inline vTranslateEngineToUISquare(int iEngine, int *piX, int *piY); <br>BOOL fValidPlayerPiece(BOARD b, int ix, int iy); <br>void vClearMovingPiece(HDC hDC, int iX, int iY); <br>VOID WriteINI (); <br>VOID ReadINI (); <br>long WINAPI ComputerMove(); <br>void _inline DisplayGameOver(HWND hWnd, int iPlayerTurn); <br>void _inline DisplayGameDrawn(HWND hWnd, int iPlayerTurn); <br> <br> <br>BOOL FAR PASCAL ConfigDialogProc (HWND hDlg, <br>                                        WORD wMsgID, <br>                                        WPARAM wParam, <br>                                        LPARAM lParam); <br>BOOL FAR PASCAL PlayersDialogProc (HWND hDlg, <br>                                        WORD wMsgID, <br>                                        WPARAM wParam, <br>                                        LPARAM lParam); <br>BOOL FAR PASCAL DebugConfigDialogProc (HWND hDlg, <br>                                        WORD wMsgID, <br>                                        WPARAM wParam, <br>                                        LPARAM lParam); <br>BOOL FAR PASCAL ComputerSettingsDialogProc (HWND hDlg, <br>                                        WORD wMsgID, <br>                                        WPARAM wParam, <br>                                        LPARAM lParam); <br> <br>int FAR PASCAL PlayerTurnDialogProc (HWND hDlg, <br>                                        WORD wMsgID, <br>                                        WPARAM wParam, <br>                                        LPARAM lParam); <br> <br>void MessageInt(char *pszText, int iValue); <br>void inline NormalLButtonUp(HWND hWnd, UINT keyFlags, int x, int y); <br>void inline SetupLButtonUp(HWND hWnd, UINT keyFlags, int x, int y); <br>void inline SetupRButtonUp(HWND hWnd, UINT keyFlags, int x, int y); <br>void inline NormalLButtonDown(HWND hWnd, UINT keyFlags, int x, int y); <br>void inline SetupLButtonDown(HWND hWnd, UINT keyFlags, int x, int y); <br>void inline SetupRButtonDown(HWND hWnd, UINT keyFlags, int x, int y); <br></code></pre>
<p>&nbsp;</p></body>
</HTML>
