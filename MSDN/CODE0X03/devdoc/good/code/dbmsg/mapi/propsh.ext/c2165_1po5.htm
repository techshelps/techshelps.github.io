<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>README.TXT</title>
<link disabled rel=stylesheet href=../../../../../backsdk3.css>
<style type="text/css">
@import url(../../../../../backsdk4.css);
</style>
</HEAD>
<BODY BGCOLOR = #FFFFFF TEXT = #000000>
<h2><a name="_code_context2165"></a>README.TXT</h2>
<pre><code>Sample Property Sheet Extension <br> <br> <br>SUMMARY <br>======= <br> <br>The PropSh.Ext sample demonstrates how to implement custom property sheet <br>extensions for the Microsoft Exchange Client. In particular, it demonstrates <br>adding a custom property page that displays summary sheet information for <br>Microsoft Office documents in a message store.  It adds the custom page when <br>viewing properties with a message of class IPM.Document. <br> <br> <br>MORE INFORMATION <br>================ <br> <br>This sample requires Microsoft Windows NT 3.51 or Windows 95, the MAPI 1.0 <br>(Extended MAPI) PDK (Build 410 or above), Microsoft Visual C++ version 2.0 <br>(or later), and the Win32 SDK for Windows NT and Windows 95. <br> <br>To configure Exchange to use the client extension, place the following <br>REG_SZ entry in the system registry in: <br>HKEY_LOCAL_MACHINE\Software\Microsoft\Exchange\Client\Extensions: <br> <br>    Sample Property Extension=4.0;c:\&lt;path&gt;\EPRSHT32.DLL;1;00000000000100 <br> <br>You can leave out an explicit path to EPRSHT32.DLL if it resides in a <br>directory listed in the system's PATH. <br> <br>Exchange client extensions are designed using OLE's Component Object Model. <br>The client calls methods which are provided in the extension. In some calls <br>to the extension interface, a pointer to a callback interface <br>(IExchExtCallback) for the extension to call back into the Exchange client. <br>For more information read "Extending the Microsoft Exchange Client" in the <br>MAPI PDK documentation. <br> <br>This sample implements two interface objects, IExchExt and <br>IExchExtPropertySheets. The extension responds to IExchExtPropertySheets <br>methods called by the Exchange client to append a property page if the selected <br>message object is a IPM.Document class message. <br> <br>MAPI stores Microsoft Office documents as a set of properties with the <br>summary sheet information is retained as named properties. The sample <br>extracts the property IDs from the names the first time it displays the <br>properties for an Office document with the GetIDsFromNames.  After that, it <br>stores and reuses those ids until the Exchange client is closed. <br> <br>The summary info custom property page displays information in read-only edit <br>controls. The information is read from pointers to elements of a SPropValue <br>array filled by the GetProps function. If a particular property is not found, <br>the string "No &lt;property&gt;" is diplayed in the corresponding field. The <br>field will be blank if the property is found but is an empty string. Each time <br>the summary info page is activated without closing the property sheet dialog, <br>the controls are re-initialized with the same data. The SPropValue array is <br>freed when the property sheet dialog is closed. <br> <br>The Help button is available for the summary info page and will display About <br>information in the sample extension in a message box. <br> <br>To demonstrate the functionality of the extension, drag a Microsoft Office <br>document that has summary sheet information into a folder in the Microsoft <br>Exchange client. Then select the document and press Alt+ENTER or choose <br>Properties... from the File menu in Exchange. </code></pre>
<p>&nbsp;</p></body>
</HTML>
