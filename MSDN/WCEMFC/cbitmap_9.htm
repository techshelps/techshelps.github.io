<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CBitmap::LoadBitmap</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_cbitmap_loadbitmap"></a>CBitmap::LoadBitmap</h2>
<p>
This member function loads the bitmap resource named by <i>lpszResourceName,</i> or identified by the ID number in <i>nIDResource,</i> from the application's executable file. The loaded bitmap is attached to the <b>CBitmap</b> object.</p>
<h4>Syntax</h4>
<p>
<b>BOOL LoadBitmap ( LPCTSTR </b><i>lpszResourceName</i><b> );</b></p>
<p>
<b>BOOL LoadBitmap ( UINT</b> <i>nIDResource</i> <b>);</b></p>
<h4>At a Glance</h4>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<td width=48%>Header File</td>
<td width=52%>Afxwin.h</td>
</tr>
<tr valign=top>
<td width=48%>Platforms</td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%>Versions</td>
<td width=52%>1.0 and later</td>
</tr>
<tr valign=top>
<td width=48%>Complete documentation</td>
<td width=52%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CBitmap.3a3a.LoadBitmap">
</object><a href=JavaScript:alink_1.Click()>Visual C++ documentation</a></td>
</tr>
</table><br>
<h4>Remarks</h4>
<p>
In Windows CE, when you initialize a <b>CBitmap</b> object by using the <b>CBitmap::LoadBitmap</b> member function, the bitmap is read-only. This is because Windows CE doesn't copy the bitmap into RAM, as Windows 95 and Windows NT do. In Windows CE, the bitmap only exists in a resource, which is part of the program's executable file. When you select the bitmap into a device context, you cannot modify the device context (for instance, by drawing text into it) because that would require the ability to write to the bitmap.</p>
<p>
Windows CE does not support any predefined bitmaps, so you can not use any of the OBM_* values in the <i>lpszResourceName </i>parameter.</p>
<p>
Windows CE 1.0 only supports a 2 bit gray scale palette so, in version 1.0, you can only use one bit per pixel (monochrome .bmp) or two bit per pixel (.2bp) bitmaps.</p>
<h4>See Also</h4>
<p>
<a href="cbitmap.htm">CBitmap Overview</a>, <a href="cbitmap_1.htm">CBitmap Member Functions</a>, <a href="mfc_20.htm">Graphical Drawing Object Classes</a>, <a href="cbitmap_10.htm"><b>CBitmap::LoadOEMBitmap</b></a>, <a href="cgdiob_5.htm"><b>CGdiObject::DeleteObject</b></a> </p>
<p>&nbsp;</p></body>
</HTML>
