<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Using the MFC for Windows CE Wizards to Simplify Application Development</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_using_the_mfc_for_windows_ce_wizards_to_simplify_application_development"></a>Using the MFC for Windows CE Wizards to Simplify Application Development</h2>
<p>
The Microsoft Windows CE Toolkit for Visual C++ 5.0 provides three wizards for the Microsoft Foundation Class library for Windows CE. These are the WCE MFC AppWizard, the WCE MFC ActiveX ControlWizard, and the MFC for Windows CE ClassWizard.</p>
<p>
These wizards are not actually part of the Microsoft Foundation Class library. You can create an MFC application or control without using wizards. Wizards are convenient, however. They can save you a lot of time and eliminate some programming errors caused by entering code manually. Whether you use the standard Windows CE APIs or the Microsoft Foundation Class library for Windows CE, there's a lot of code that's common to every Windows CE application. The first thing many developers do when starting a new project is cut and paste this generic code from an existing project into the new one.</p>
<p>
When you use the WCE MFC AppWizard or the WCE MFC ActiveX ControlWizard to create a new project, the wizard adds this boilerplate code to the new project for you. The wizard also presents a series of options regarding the type of project you want to create. One option is whether to use MFC as a shared DLL or a statically linked library. Other options include providing support for ActiveX controls, Windows CE sockets, or Windows CE databases. The wizard uses your responses to specify the appropriate compiler and linker settings and to include the appropriate header files for the type of project you're creating. </p>
<p>
As you write your code, you can use the MFC for Windows CE ClassWizard to insert message maps for your application's windows, and properties, methods and events for your ActiveX controls. Of course, you can also do these things manually, but using the wizards saves you time and typing.</p>
<p>&nbsp;</p></body>
</HTML>
