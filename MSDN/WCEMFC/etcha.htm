<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>ETCHA</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_etcha"></a>ETCHA</h2>
<p>
The ETCHA sample is a simple drawing application that demonstrates how to handle stylus input. The stylus is treated as a mouse. Touching the screen sends the WM_LBUTTONDOWN message; moving the stylus sends the WM_MOUSEMOVE message; and lifting the stylus from the screen sends the WM_LBUTTONUP message.</p>
<p>
The main application window is used for drawing. Move the stylus around the main window to draw. Tap File New to erase any drawing in the window.</p>
<p>
ETCHA keeps track of two points in an array of <a href="cpoint.htm"><b>CPoint</b></a> objects. The handler <b>OnLButtonDown</b> sets the current array item to the current position of the stylus on the screen. <b>OnMouseMove</b> then sets the next array item to the new current position and draws a line from point to point, using the <b>Polyline </b>function.</p>
<p>
An HPC device would only send WM_MOUSEMOVE messages when the stylus was touching the screen. The test for the flag MK_LBUTTON is only necessary for the emulation environment, where there is a mouse. However, it is good practice to keep code portable.</p>
<p>
This sample demonstrates the following keywords:</p>
<p class=indent1>
<a href="cdc_58.htm"><b>CDC::Polyline</b></a></p>
<p class=indent1>
<a href="cdialog_5.htm"><b>CDialog::DoModal</b></a></p>
<p class=indent1>
<a href="cdialog_12.htm"><b>CDialog::OnCancel</b></a></p>
<p class=indent1>
<a href="cframwnd_3.htm"><b>CFrameWnd::AddAdornments</b></a></p>
<p class=indent1>
<a href="cframwnd_22.htm"><b>CFrameWnd::LoadFrame</b></a></p>
<p class=indent1>
<a href="cwnd_36.htm"><b>CWnd::GetClientRect</b></a></p>
<p class=indent1>
<a href="cwnd_84.htm"><b>CWnd::InvalidateRect</b></a></p>
<p class=indent1>
<a href="cwnd_124.htm"><b>CWnd::OnKillFocus</b></a></p>
<p class=indent1>
<a href="cwnd_126.htm"><b>CWnd::OnLButtonDown</b></a></p>
<p class=indent1>
<a href="cwnd_130.htm"><b>CWnd::OnMouseMove</b></a></p>
<p class=indent1>
<a href="cwnd_192.htm"><b>CWnd::ShowWindow</b></a></p>
<p class=indent1>
<a href="cwnd_198.htm"><b>CWnd::UpdateWindow</b></a></p>
<p>
You can find the ETCHA<b> </b>project files in the Wce\Samples\Mfc\ETCHA<b> </b>directory.</p>
<p>
To build the ETCHA<b> </b>sample, follow the procedure described in <object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_Building_the_Sample_Applications">
</object><a href=JavaScript:alink_1.Click()>Building the Sample Applications</a>, selecting one or more of the following project configurations. </p>
<ul>
<li>
WCE x86em (Desktop PC Windows CE emulation)</li>
<li>
WCE x86</li>
<li>
WCE PPC</li>
<li>
WCE MIPS</li>
<li>
WCE SH</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
