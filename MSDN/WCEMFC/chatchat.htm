<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CHATTER/CHATSRVR</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_chatter_chatsrvr"></a>CHATTER/CHATSRVR</h2>
<p>
The CHATTER and CHATSRVR sample programs demonstrate how to use the <b>CCeSocket</b> class to create and use data sockets and listening sockets in Windows CE applications. </p>
<p>
To execute these applications, you will need a desktop computer and a Handheld PC (H/PC). Start CHATSRVR on the desktop computer. CHATSRVR displays a dialog with a single edit box. Enter a number between 0 and 99, to assign a listening port. </p>
<p>
Start CHATTER on the H/PC. You can run several instances of CHATTER on the same H/PC, or on different H/PCs, connected to the same instance of CHATSRVR. CHATTER displays a dialog in which you enter the following three elements: </p>
<ul>
<li>
A handle (a name or number by which to identify this client).</li>
<li>
The network address of the server socket on the device on which CHATSRVR is running.</li>
<li>
The channel number you used to establish the listening port on the device on which CHATSRVR is running.</li>
</ul>
<p>
The CHATTER user interface consists of a static splitter window with two panes, a chat view and a send view. When you enter a message in the send view pane and press the enter key, CHATTER sends the message, prefixed by its client handle, through its data socket to the listening socket on the H/PC running CHATSRVR. </p>
<p>
CHATSRVR receives notification of the incoming connection on its listening socket, creates a data socket to receive the connection, and adds the new socket to its connection list. CHATSRVR reads the message from the data socket, and then sends that message to all the instances of CHATTER that are currently connected to its data sockets. </p>
<p>
Each running instance of CHATTER receives the message through its data socket, and then displays it in the chat view pane of its splitter window. When an instance of CHATTER closes its data socket, it sends a final message to CHATSRVR with a flag set to indicate that the socket is being closed. </p>
<p>
When CHATSRVR receives this message, it obtains its socket window handle by invoking the new WCE MFC API function, <b>AfxGetCeSocketWindow</b>, and sends this window a WM_SOCKET_NOTIFY message with the <i>wParam</i> set to the client socket's <b>SOCKET</b> handle and the <i>lParam</i> set to <b>FD_CLOSE</b>. This message is mapped to the <b>OnClose</b> handler of the socket connected to that client. Systems that support true asynchronous socket notifications provide this behavior automatically but, in Windows CE, you have to code it yourself.</p>
<p>
These samples demonstrate the following keywords:</p>
<table cellspacing=4 cols=2 width=480>
<tr valign=top>
<td width=50%><b><u>CHATSRVR</u></b></td>
<th align=left width=50%><u>CHATTER</u></th>
</tr>
<tr valign=top>
<td width=50%><a href="carchi_2.htm"><b>CArchive::Abort</b></a></td>
<td width=50%><a href="carchi_2.htm"><b>CArchive::Abort</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="carchi_5.htm"><b>CArchive::Flush</b></a></td>
<td width=50%><a href="carchi_5.htm"><b>CArchive::Flush</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_16.htm"><b>CAsyncSocket::OnAccept</b></a></td>
<td width=50%><a href="carchi_8.htm"><b>CArchive::IsBufferEmpty</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_17.htm"><b>CAsyncSocket::OnClose</b></a></td>
<td width=50%><a href="carchi_10.htm"><b>CArchive::IsStoring</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_20.htm"><b>CAsyncSocket::OnReceive</b></a></td>
<td width=50%><a href="casyncso_20.htm"><b>CAsyncSocket::OnReceive</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_22.htm"><b>CAsyncSocket::Receive</b></a></td>
<td width=50%><a href="casyncso_7.htm"><b>CAsyncSocket::Connect</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_2.htm"><b>CAsyncSocket::Accept</b></a></td>
<td width=50%><a href="casyncso_27.htm"><b>CAsyncSocket::ShutDown</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_6.htm"><b>CAsyncSocket::Close</b></a></td>
<td width=50%><a href="ccesock_3.htm"><b>CCeSocket::Create</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="casyncso_27.htm"><b>CAsyncSocket::ShutDown</b></a></td>
<td width=50%><a href="cdialog_5.htm"><b>CDialog::DoModal</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="ccesock_3.htm"><b>CCeSocket::Create</b></a></td>
<td width=50%><a href="cdocumnt_8.htm"><b>CDocument::GetFirstViewPosition</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cedit_20.htm"><b>CEdit::GetSel</b></a></td>
<td width=50%><a href="cdocumnt_9.htm"><b>CDocument::GetNextView</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cedit_28.htm"><b>CEdit::ReplaceSel</b></a></td>
<td width=50%><a href="cfileex.htm"><b>CFileException</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="ceditvw_7.htm"><b>CEditView::SerializeRaw</b></a></td>
<td width=50%><a href="csocfile.htm"><b>CSocketFile</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_3.htm"><b>CPtrList::AddTail</b></a></td>
<td width=50%><a href="cstring_17.htm"><b>CString::LoadString</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_10.htm"><b>CPtrList::GetHeadPosition</b></a></td>
<td width=50%><a href="cstring_37.htm"><b>CString::operator +</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_11.htm"><b>CPtrList::GetNext</b></a></td>
<td width=50%><a href="cstring_34.htm"><b>CString::operator =</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_17.htm"><b>CPtrList::IsEmpty</b></a></td>
<td width=50%><a href="coblist_17.htm"><b>CStringList::IsEmpty</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_20.htm"><b>CPtrList::RemoveHead</b></a></td>
<td width=50%><a href="coblist_18.htm"><b>CStringList::RemoveAll</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="csocket_6.htm"><b>CSocket::FromHandle</b></a></td>
<td width=50%><a href="coblist_20.htm"><b>CStringList::RemoveHead</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="csocfile.htm"><b>CSocketFile</b></a></td>
<td width=50%><a href="cwnd_80.htm"><b>CWnd::GetWindowText</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_12.htm"><b>CString::GetBuffer</b></a></td>
<td width=50%><a href="cwnd_190.htm"><b>CWnd::SetWindowText</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_17.htm"><b>CString::LoadString</b></a></td>
<td width=50%><a href="mfcapi_1.htm"><b>AfxGetCeSocketWindow</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_23.htm"><b>CString::ReleaseBuffer</b></a></td>
<td width=50%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_AfxGetApp">
</object><a href=JavaScript:alink_1.Click()><b>AfxGetApp</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_37.htm"><b>CString::operator +</b></a></td>
<td width=50%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_AfxMessageBox">
</object><a href=JavaScript:alink_2.Click()><b>AfxMessageBox</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_34.htm"><b>CString::operator =</b></a></td>
<td width=50%><a href="mfcapi_2.htm">WM_SOCKET_NOTIFY</a></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_3.htm"><b>CStringList::AddTail</b></a></td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_8.htm"><b>CStringList::GetCount</b></a></td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%><a href="coblist_18.htm"><b>CStringList::RemoveAll</b></a></td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_81.htm"><b>CWnd::GetWindowTextLength</b></a></td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_168.htm"><b>CWnd::SendMessage</b></a></td>
<td width=50%></td>
</tr>
<tr valign=top>
<td width=50%><object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk__CloseSocket">
</object><a href=JavaScript:alink_3.Click()><b>CloseSocket</b></a></td>
<td width=50%></td>
</tr>
</table><br>
<p>
You can find the CHATTER<b> </b>project files in the Wce\Samples\Mfc\CHATTER directory, and the CHATSRVR<b> </b>project files in the Wce\Samples\Mfc\CHATSRVR directory.</p>
<p>
To build the CHATTER and CHATSRVR<b> </b>samples, follow the procedure described in <object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_Building_the_Sample_Applications">
</object><a href=JavaScript:alink_4.Click()>Building the Sample Applications</a>, selecting one or more of the following project configurations. </p>
<ul>
<li>
WCE x86em (Desktop PC Windows CE emulation)</li>
<li>
WCE x86</li>
<li>
WCE PPC</li>
<li>
WCE MIPS</li>
<li>
WCE SH</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
