<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CWnd Member Functions</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_cwnd_member_functions"></a>CWnd Member Functions</h2>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Construction/Destruction </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_18.htm"><b>CWnd</b></a></td>
<td width=60%>Constructs a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_22.htm"><b>DestroyWindow</b></a></td>
<td width=60%>Destroys the attached Windows window.</td>
</tr>
</table><br>
<table cellspacing=4 cols=3 width=464>
<tr valign=top>
<th align=left colspan=3 width=100%>Initialization </th>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_14.htm"><b>Create</b></a></td>
<td width=60%>Creates and initializes the child window associated with the <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_154.htm"><b>PreCreateWindow</b></a></td>
<td width=60%>Called before the creation of the Windows window attached to this <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_7.htm"><b>CalcWindowRect</b></a></td>
<td width=60%>Called to calculate the window rectangle from the client rectangle.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_69.htm"><b>GetStyle</b></a></td>
<td width=60%>Returns the current window style.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_47.htm"><b>GetExStyle</b></a></td>
<td width=60%>Returns the window's extended style.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_2.htm"><b>Attach</b></a></td>
<td width=60%>Attaches a Windows handle to a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_23.htm"><b>Detach</b></a></td>
<td width=60%>Detaches a Windows handle from a <b>CWnd</b> object and returns the handle.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_155.htm"><b>PreSubclassWindow</b></a></td>
<td width=60%>Allows other necessary subclassing to occur before <a href="cwnd_194.htm"><b>SubclassWindow</b></a> is called.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_194.htm"><b>SubclassWindow</b></a></td>
<td width=60%>Attaches a window to a <b>CWnd</b> object and makes it route messages through the <b>CWnd</b>'s message map.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_195.htm"><b>UnSubclassWindow</b></a></td>
<td width=60%>Detaches a window from a <b>CWnd </b>object</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_30.htm"><b>FromHandle</b></a></td>
<td width=60%>Returns a pointer to a <b>CWnd</b> object when given a handle to a window. If a <b>CWnd</b> object is not attached to the handle, a temporary <b>CWnd</b> object is created and attached.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_31.htm"><b>FromHandlePermanent</b></a></td>
<td width=60%>Returns a pointer to a <b>CWnd</b> object when given a handle to a window. If a <b>CWnd</b> object is not attached to the handle, <b>NULL</b> is returned.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_21.htm"><b>DeleteTempMap</b></a></td>
<td width=60%>Called automatically by the <b>CWinApp</b> idle-time handler and deletes any temporary <b>CWnd</b> objects created by <b>FromHandle</b>.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_62.htm"><b>GetSafeHwnd</b></a></td>
<td width=60%>Returns <b>NULL</b> if the <b>this</b> pointer is <b>NULL</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_16.htm"><b>CreateEx</b></a></td>
<td colspan=2 width=61%>Creates a Windows overlapped, pop-up, or child window and attaches it to a <b>CWnd</b> object.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_15.htm"><b>CreateControl</b></a></td>
<td colspan=2 width=61%>Creates an ActiveX control that will be represented in an MFC program by a CWnd object.</td>
</tr>
</table><br>
<table cellspacing=4 cols=3 width=464>
<tr valign=top>
<th align=left colspan=3 width=100%>Window State Functions </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_90.htm"><b>IsWindowEnabled</b></a></td>
<td colspan=2 width=60%>Determines whether the window is enabled for mouse and keyboard input.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_25.htm"><b>EnableWindow</b></a></td>
<td colspan=2 width=60%>Enables or disables mouse and keyboard input.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_32.htm"><b>GetActiveWindow</b></a></td>
<td colspan=2 width=60%>Retrieves the active window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_171.htm"><b>SetActiveWindow</b></a></td>
<td colspan=2 width=60%>Activates the window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_33.htm"><b>GetCapture</b></a></td>
<td colspan=2 width=60%>Retrieves the <b>CWnd</b> that has the mouse capture.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_172.htm"><b>SetCapture</b></a></td>
<td colspan=2 width=60%>Causes all subsequent mouse input to be sent to the <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_48.htm"><b>GetFocus</b></a></td>
<td colspan=2 width=60%>Retrieves the <b>CWnd</b> that currently has the input focus.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_177.htm"><b>SetFocus</b></a></td>
<td colspan=2 width=60%>Claims the input focus.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_42.htm"><b>GetDesktopWindow</b></a></td>
<td colspan=2 width=60%>Retrieves the Windows desktop window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_50.htm"><b>GetForegroundWindow</b></a></td>
<td colspan=2 width=60%>Returns a pointer to the foreground window (the top-level window with which the user is currently working).</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_179.htm"><b>SetForegroundWindow</b></a></td>
<td colspan=2 width=60%>Puts the thread that created the window into the foreground and activates the window.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_51.htm"><b>GetIcon</b></a></td>
<td colspan=2 width=60%>Retrieves the handle to an icon.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_180.htm"><b>SetIcon</b></a></td>
<td colspan=2 width=60%>Sets the handle to a specific icon.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_95.htm"><b>ModifyStyle</b></a></td>
<td width=60%>Modifies the current window style.</td>
</tr>
<tr valign=top>
<td colspan=2 width=40%><a href="cwnd_96.htm"><b>ModifyStyleEx</b></a></td>
<td width=60%>Modifies the window's extended style.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Window Size and Position </th>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_89.htm"><b>IsIconic</b></a></td>
<td width=61%>Determines whether <b>CWnd</b> is minimized (iconic).</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_97.htm"><b>MoveWindow</b></a></td>
<td width=61%>Changes the position and/or dimensions of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_189.htm"><b>SetWindowPos</b></a></td>
<td width=61%>Changes the size, position, and ordering of child, pop-up, and top-level windows.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_6.htm"><b>BringWindowToTop</b></a></td>
<td width=61%>Brings <b>CWnd</b> to the top of a stack of overlapping windows.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_79.htm"><b>GetWindowRect</b></a></td>
<td width=61%>Gets the screen coordinates of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_36.htm"><b>GetClientRect</b></a></td>
<td width=61%>Gets the dimensions of the <b>CWnd</b> client area.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Window Access Functions </th>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_11.htm"><b>ChildWindowFromPoint</b></a></td>
<td width=61%>Determines which, if any, of the child windows contains the specified point.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_29.htm"><b>FindWindow</b></a></td>
<td width=61%>Returns the handle to the window, which is identified by its window name and window class.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_55.htm"><b>GetNextWindow</b></a></td>
<td width=61%>Returns the next (or previous) window in the window manager's list.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_57.htm"><b>GetOwner</b></a></td>
<td width=61%>Retrieves a pointer to the owner of a <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_181.htm"><b>SetOwner</b></a></td>
<td width=61%>Changes the owner of a <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_74.htm"><b>GetTopWindow</b></a></td>
<td width=61%>Returns the first child window that belongs to the <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_77.htm"><b>GetWindow</b></a></td>
<td width=61%>Returns the window with the specified relationship to this window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_86.htm"><b>IsChild</b></a></td>
<td width=61%>Indicates whether <b>CWnd</b> is a child window or other direct descendant of the specified window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_58.htm"><b>GetParent</b></a></td>
<td width=61%>Retrieves the parent window of <b>CWnd</b> (if any).</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_63.htm"><b>GetSafeOwner</b></a></td>
<td width=61%>Retrieves the safe owner for the given window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_182.htm"><b>SetParent</b></a></td>
<td width=61%>Changes the parent window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_200.htm"><b>WindowFromPoint</b></a></td>
<td width=61%>Identifies the window that contains the given point.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_44.htm"><b>GetDlgItem</b></a></td>
<td width=61%>Retrieves the control with the specified identifier from the specified dialog box.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_43.htm"><b>GetDlgCtrlID</b></a></td>
<td width=61%>If the <b>CWnd</b> is a child window, calling this function returns its identifier value.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_174.htm"><b>SetDlgCtrlID</b></a></td>
<td width=61%>Sets the window or control identifier for the window (which can be any child window, not only a control in a dialog box).</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_41.htm"><b>GetDescendantWindow</b></a></td>
<td width=61%>Searches all descendant windows and returns the window with the specified identifier.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_59.htm"><b>GetParentFrame</b></a></td>
<td width=61%>Retrieves the <b>CWnd</b> object's parent frame window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_169.htm"><b>SendMessageToDescendants</b></a></td>
<td width=61%>Sends a message to all descendant windows of the window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_73.htm"><b>GetTopLevelParent</b></a></td>
<td width=61%>Retrieves the window's top-level parent.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_72.htm"><b>GetTopLevelOwner</b></a></td>
<td width=61%>Retrieves the top-level window. </td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_60.htm"><b>GetParentOwner</b></a></td>
<td width=61%>Returns a pointer to a child window's parent window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_71.htm"><b>GetTopLevelFrame</b></a></td>
<td width=61%>Retrieves the window's top-level frame window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_197.htm"><b>UpdateDialogControls</b></a></td>
<td width=61%>Call to update the state of dialog box buttons and other controls.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_196.htm"><b>UpdateData</b></a></td>
<td width=61%>Initializes or retrieves data from a dialog box.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_8.htm"><b>CenterWindow</b></a></td>
<td width=61%>Centers a window relative to its parent.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Update/Painting Functions </th>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_3.htm"><b>BeginPaint</b></a></td>
<td width=61%>Prepares <b>CWnd</b> for painting.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_27.htm"><b>EndPaint</b></a></td>
<td width=61%>Marks the end of painting.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_40.htm"><b>GetDC</b></a></td>
<td width=61%>Retrieves a display context for the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_157.htm"><b>RedrawWindow</b></a></td>
<td width=61%>Updates the specified rectangle or region in the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_78.htm"><b>GetWindowDC</b></a></td>
<td width=61%>Retrieves the display context for the whole window, including the caption bar, menus, and scroll bars.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_160.htm"><b>ReleaseDC</b></a></td>
<td width=61%>Releases client and window device contexts, freeing them for use by other applications.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_198.htm"><b>UpdateWindow</b></a></td>
<td width=61%>Updates the client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_184.htm"><b>SetRedraw</b></a></td>
<td width=61%>Allows changes in <b>CWnd</b> to be redrawn or prevents changes from being redrawn.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_75.htm"><b>GetUpdateRect</b></a></td>
<td width=61%>Retrieves the coordinates of the smallest rectangle that completely encloses the <b>CWnd</b> update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_76.htm"><b>GetUpdateRgn</b></a></td>
<td width=61%>Retrieves the <b>CWnd</b> update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_83.htm"><b>Invalidate</b></a></td>
<td width=61%>Invalidates the entire client area.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_84.htm"><b>InvalidateRect</b></a></td>
<td width=61%>Invalidates the client area within the given rectangle by adding that rectangle to the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_199.htm"><b>ValidateRect</b></a></td>
<td width=61%>Validates the client area within the given rectangle by removing the rectangle from the current update region.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_192.htm"><b>ShowWindow</b></a></td>
<td width=61%>Shows or hides the window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_91.htm"><b>IsWindowVisible</b></a></td>
<td width=61%>Determines whether the window is visible.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Coordinate Mapping Functions </th>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_93.htm"><b>MapWindowPoints</b></a></td>
<td width=61%>Converts (maps) a set of points from the coordinate space of the <b>CWnd</b> to the coordinate space of another window.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_12.htm"><b>ClientToScreen</b></a></td>
<td width=61%>Converts the client coordinates of a given point or rectangle on the display to screen coordinates.</td>
</tr>
<tr valign=top>
<td width=39%><a href="cwnd_163.htm"><b>ScreenToClient</b></a></td>
<td width=61%>Converts the screen coordinates of a given point or rectangle on the display to client coordinates.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Window Text Functions </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_190.htm"><b>SetWindowText</b></a></td>
<td width=60%>Sets the window text or caption title (if it has one) to the specified text.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_80.htm"><b>GetWindowText</b></a></td>
<td width=60%>Returns the window text or caption title (if it has one).</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_81.htm"><b>GetWindowTextLength</b></a></td>
<td width=60%>Returns the length of the window's text or caption title.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_178.htm"><b>SetFont</b></a></td>
<td width=60%>Sets the current font.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_49.htm"><b>GetFont</b></a></td>
<td width=60%>Retrieves the current font.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Scrolling Functions </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_67.htm"><b>GetScrollPos</b></a></td>
<td width=60%>Retrieves the current position of a scroll box.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_68.htm"><b>GetScrollRange</b></a></td>
<td width=60%>Copies the current minimum and maximum scroll-bar positions for the given scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_164.htm"><b>ScrollWindow</b></a></td>
<td width=60%>Scrolls the contents of the client area.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_165.htm"><b>ScrollWindowEx</b></a></td>
<td width=60%>Scrolls the contents of the client area. Similar to <b>ScrollWindow</b>, with additional features.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_65.htm"><b>GetScrollInfo</b></a></td>
<td width=60%>Retrieves the information that the <b>SCROLLINFO</b> structure maintains about a scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_66.htm"><b>GetScrollLimit</b></a></td>
<td width=60%>Retrieves the limit of the scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_185.htm"><b>SetScrollInfo</b></a></td>
<td width=60%>Sets information about the scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_186.htm"><b>SetScrollPos</b></a></td>
<td width=60%>Sets the current position of a scroll box and, if specified, redraws the scroll bar to reflect the new position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_187.htm"><b>SetScrollRange</b></a></td>
<td width=60%>Sets minimum and maximum position values for the given scroll bar.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_64.htm"><b>GetScrollBarCtrl</b></a></td>
<td width=60%>Returns a sibling scroll-bar control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_161.htm"><b>RepositionBars</b></a></td>
<td width=60%>Repositions control bars in the client area.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Caret Functions </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_17.htm"><b>CreateSolidCaret</b></a></td>
<td width=60%>Creates a solid block for the system caret and gets ownership of the caret.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_34.htm"><b>GetCaretPos</b></a></td>
<td width=60%>Retrieves the client coordinates of the caret's current position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_173.htm"><b>SetCaretPos</b></a></td>
<td width=60%>Moves the caret to a specified position.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_82.htm"><b>HideCaret</b></a></td>
<td width=60%>Hides the caret by removing it from the display screen.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_191.htm"><b>ShowCaret</b></a></td>
<td width=60%>Shows the caret on the display at the caret's current position. Once shown, the caret begins flashing automatically.</td>
</tr>
</table><br>
<table cellspacing=4 cols=3 width=464>
<tr valign=top>
<th align=left colspan=3 width=100%>Dialog-Box Item Functions </th>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_9.htm"><b>CheckDlgButton</b></a></td>
<td colspan=2 width=60%>Places a check mark next to or removes a check mark from a button control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_10.htm"><b>CheckRadioButton</b></a></td>
<td colspan=2 width=60%>Checks the specified radio button and removes the check mark from all other radio buttons in the specified group of buttons.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_35.htm"><b>GetCheckedRadioButton</b></a></td>
<td colspan=2 width=60%>Returns the identifier of the currently checked radio button in a group of buttons.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_45.htm"><b>GetDlgItemInt</b></a></td>
<td colspan=2 width=60%>Translates the text of a control in the given dialog box to an integer value.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_46.htm"><b>GetDlgItemText</b></a></td>
<td colspan=2 width=60%>Retrieves the caption or text associated with a control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_53.htm"><b>GetNextDlgGroupItem</b></a></td>
<td colspan=2 width=60%>Searches for the next (or previous) control within a group of controls.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_54.htm"><b>GetNextDlgTabItem</b></a></td>
<td colspan=2 width=60%>Retrieves the first control with the <b>WS_TABSTOP</b> style that  follows (or precedes) the specified control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_88.htm"><b>IsDlgButtonChecked</b></a></td>
<td colspan=2 width=60%>Determines whether a button control is checked.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_87.htm"><b>IsDialogMessage</b></a></td>
<td colspan=2 width=60%>Determines whether the given message is intended for the modeless dialog box and, if so, processes it.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_167.htm"><b>SendDlgItemMessage</b></a></td>
<td colspan=2 width=60%>Sends a message to the specified control.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_175.htm"><b>SetDlgItemInt</b></a></td>
<td colspan=2 width=60%>Sets the text of a control to the string that represents an integer value.</td>
</tr>
<tr valign=top>
<td width=40%><a href="cwnd_176.htm"><b>SetDlgItemText</b></a></td>
<td colspan=2 width=60%>Sets the caption or text of a control in the specified dialog box.</td>
</tr>
<tr valign=top>
<td colspan=2 width=41%><a href="cwnd_193.htm"><b>SubclassDlgItem</b></a></td>
<td width=59%>Attaches a Windows control to a <b>CWnd</b> object and makes it route messages through the <b>CWnd</b>'s message map.</td>
</tr>
<tr valign=top>
<td colspan=2 width=41%><a href="cwnd_28.htm"><b>ExecuteDlgInit</b></a></td>
<td width=59%>Initiates a dialog box resource.</td>
</tr>
<tr valign=top>
<td colspan=2 width=41%><a href="cwnd_162.htm"><b>RunModalLoop</b></a></td>
<td width=59%>Retrieves, translates, or dispatches messages for a window that is in modal status.</td>
</tr>
<tr valign=top>
<td colspan=2 width=41%><a href="cwnd_13.htm"><b>ContinueModal</b></a></td>
<td width=59%>Continues a window's modal status.</td>
</tr>
<tr valign=top>
<td colspan=2 width=41%><a href="cwnd_26.htm"><b>EndModalLoop</b></a></td>
<td width=59%>Ends a window's modal status.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Data-Binding Functions</th>
</tr>
<tr valign=top>
<td width=48%><a href="cwnd_5.htm"><b>BindDefaultProperty</b></a></td>
<td width=52%>Binds the calling object's default simple bound property, as marked in the type library, to a cursor associated with a data-source control. </td>
</tr>
<tr valign=top>
<td width=48%><a href="cwnd_4.htm"><b>BindProperty</b></a></td>
<td width=52%>Binds a cursour-bound property on a data-bound control to a data-source control and registers that relationship with the MFC binding manager.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Menu Functions </th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_52.htm"><b>GetMenu</b></a></td>
<td width=59%>Retrieves a pointer to the specified menu.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Timer Functions </th>
</tr>
<tr valign=top>
<td width=48%><a href="cwnd_188.htm"><b>SetTimer</b></a></td>
<td width=52%>Installs a system timer that sends a <b>WM_TIMER</b> message when triggered.</td>
</tr>
<tr valign=top>
<td width=48%><a href="cwnd_92.htm"><b>KillTimer</b></a></td>
<td width=52%>Kills a system timer.</td>
</tr>
</table><br>

<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%><a name="_idetls_mfc_alert_functions_cwnd"></a>Alert Functions</th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_94.htm"><b>MessageBox</b></a></td>
<td width=59%>Creates and displays a window that contains an application-supplied message and caption.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Window Message Functions </th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_39.htm"><b>GetCurrentMessage</b></a></td>
<td width=59%>Returns a pointer to the message this window is currently processing. Should only be called when in an <b>On</b><i>Message</i> message-handler member function.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_19.htm"><b>Default</b></a></td>
<td width=59%>Calls the default window procedure, which provides default processing for any window messages that an application does not process.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_156.htm"><b>PreTranslateMessage</b></a></td>
<td width=59%>Used by <b>CWinApp</b> to filter window messages before they are dispatched to the <b>TranslateMessage</b> and <b>DispatchMessage</b> Windows functions.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_168.htm"><b>SendMessage</b></a></td>
<td width=59%>Sends a message to the <b>CWnd</b> object and does not return until it has processed the message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_152.htm"><b>PostMessage</b></a></td>
<td width=59%>Places a message in the application queue, then returns without waiting for the window to process the message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_170.htm"><b>SendNotifyMessage</b></a></td>
<td width=59%>Sends the specified message to the window and returns as soon as possible, depending on whether the calling thread created the window.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Clipboard Functions </th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_151.htm"><b>OpenClipboard</b></a></td>
<td width=59%>Opens the Clipboard. Other applications will not be able to modify the Clipboard until the Windows <b>CloseClipboard</b> function is called.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_37.htm"><b>GetClipboardOwner</b></a></td>
<td width=59%>Retrieves a pointer to the current owner of the Clipboard.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_56.htm"><b>GetOpenClipboardWindow</b></a></td>
<td width=59%>Retrieves a pointer to the window that currently has the Clipboard open.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>ActiveX Controls</th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_183.htm"><b>SetProperty</b></a></td>
<td width=59%>Sets an ActiveX control property.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_99.htm"><b>OnAmbientProperty</b></a></td>
<td width=59%>Implement ambient property values</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_38.htm"><b>GetControlUnknown</b></a></td>
<td width=59%>Retrieves a pointer to an unknown ActiveX control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_61.htm"><b>GetProperty</b></a></td>
<td width=59%>Retrieves an ActiveX control property</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_85.htm"><b>InvokeHelper</b></a></td>
<td width=59%>Invokes an ActiveX control method or property.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Overridables</th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_70.htm"><b>GetSuperWndProcAddr</b></a></td>
<td width=59%>Accesses the default <b>WndProc</b> of a subclassed window.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_201.htm"><b>WindowProc</b></a></td>
<td width=59%>Provides a window procedure for a <b>CWnd</b>. The default dispatches messages through the message map.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_20.htm"><b>DefWindowProc</b></a></td>
<td width=59%>Calls the default window procedure, which provides default processing for any window messages that an application does not process.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_153.htm"><b>PostNcDestroy</b></a></td>
<td width=59%>This virtual function is called by the default <b>OnNcDestroy</b> function after the window has been destroyed.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_104.htm"><b>OnChildNotify</b></a></td>
<td width=59%>Called by a parent window to give a notifying control a chance to respond to a control notification.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_24.htm"><b>DoDataExchange</b></a></td>
<td width=59%>For dialog data exchange and validation. Called by <b>UpdateData</b>.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Initialization Message Handlers </th>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_121.htm"><b>OnInitMenuPopup</b></a></td>
<td width=58%>Called when a pop-up menu is about to become active.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>System Message Handlers </th>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_140.htm"><b>OnSysChar</b></a></td>
<td width=58%>Called when a keystroke translates to a system character.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_141.htm"><b>OnSysCommand</b></a></td>
<td width=58%>Called when the user selects a command from the Control menu, or when the user selects the Maximize or Minimize button.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_142.htm"><b>OnSysDeadChar</b></a></td>
<td width=58%>Called when a keystroke translates to a system dead character (such as accent characters).</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_143.htm"><b>OnSysKeyDown</b></a></td>
<td width=58%>Called when the user holds down the ALT key and then presses another key.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_144.htm"><b>OnSysKeyUp</b></a></td>
<td width=58%>Called when the user releases a key that was pressed while the ALT key was held down.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_117.htm"><b>OnFontChange</b></a></td>
<td width=58%>Called when the pool of font resources changes.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_148.htm"><b>OnWindowPosChanged</b></a></td>
<td width=58%>Called when the size, position, or Z-order has changed as a result of a call to <b>SetWindowPos</b> or another window-management function.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_149.htm"><b>OnWinIniChange</b></a></td>
<td width=58%>Called for all top-level windows after the Windows initialization file, WIN.INI, is changed.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>General Message Handlers </th>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_106.htm"><b>OnCommand</b></a></td>
<td width=58%>Called when the user selects a command.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_98.htm"><b>OnActivate</b></a></td>
<td width=58%>Called when <b>CWnd</b> is being activated or deactivated.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_100.htm"><b>OnCancelMode</b></a></td>
<td width=58%>Called to allow <b>CWnd</b> to cancel any internal modes, such as mouse capture.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_105.htm"><b>OnClose</b></a></td>
<td width=58%>Called as a signal that <b>CWnd</b> should be closed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_108.htm"><b>OnCreate</b></a></td>
<td width=58%>Called as a part of window creation.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_109.htm"><b>OnCtlColor</b></a></td>
<td width=58%>Called if <b>CWnd</b> is the parent of a control when the control is about to be drawn.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_112.htm"><b>OnDestroy</b></a></td>
<td width=58%>Called when <b>CWnd</b> is being destroyed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_115.htm"><b>OnEnable</b></a></td>
<td width=58%>Called when <b>CWnd</b> is enabled or disabled.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_116.htm"><b>OnEraseBkgnd</b></a></td>
<td width=58%>Called when the window background needs erasing.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_124.htm"><b>OnKillFocus</b></a></td>
<td width=58%>Called immediately before <b>CWnd</b> loses the input focus.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_129.htm"><b>OnMenuChar</b></a></td>
<td width=58%>Called when the user presses a menu mnemonic character that doesn't match any of the predefined mnemonics in the current menu.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_131.htm"><b>OnMove</b></a></td>
<td width=58%>Called after the position of the <b>CWnd</b> has been changed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_139.htm"><b>OnStyleChanged</b></a></td>
<td width=58%>Indicates that the <b>::SetWindowLong</b> Windows function has changed one or more of the window's styles.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_133.htm"><b>OnPaint</b></a></td>
<td width=58%>Called to repaint a portion of the window.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_136.htm"><b>OnSetFocus</b></a></td>
<td width=58%>Called after <b>CWnd</b> gains the input focus.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_137.htm"><b>OnShowWindow</b></a></td>
<td width=58%>Called when <b>CWnd</b> is to be hidden or shown.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_138.htm"><b>OnSize</b></a></td>
<td width=58%>Called after the size of <b>CWnd</b> has changed.</td>
</tr>
<tr valign=top>
<td width=42%><a href="cwnd_139.htm"><b>OnStyleChanged</b></a></td>
<td width=58%>Indicates that one or more of the window's styles has changed.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Control Message Handlers </th>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_103.htm"><b>OnCharToItem</b></a></td>
<td width=59%>Called by a child list box with the <b>LBS_WANTKEYBOARDINPUT</b> style in response to a <b>WM_CHAR</b> message.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_107.htm"><b>OnCompareItem</b></a></td>
<td width=59%>Called to determine the relative position of a new item in a child sorted owner-draw combo box or list box.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_111.htm"><b>OnDeleteItem</b></a></td>
<td width=59%>Called when an owner-draw child list box or combo box is destroyed or when items are removed from the control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_114.htm"><b>OnDrawItem</b></a></td>
<td width=59%>Called when a visual aspect of an owner-draw child button control, combo-box control, list-box control, or menu needs to be drawn.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_118.htm"><b>OnGetDlgCode</b></a></td>
<td width=59%>Called for a control so the control can process arrow-key and TAB-key input itself.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_128.htm"><b>OnMeasureItem</b></a></td>
<td width=59%>Called for an owner-draw child combo box, list box, or menu item when the control is created. <b>CWnd</b> informs Windows of the dimensions of the control.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_166.htm"><b>SendChildNotifyLastMsg</b></a></td>
<td width=59%>Provides a notification message to a child window, from the parent window, so the child window can handle a task.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_158.htm"><b>ReflectChildNotify</b></a></td>
<td width=59%>Helper function which reflects a message to its source.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_150.htm"><b>OnWndMsg</b></a></td>
<td width=59%>Indicates if a windows message was handled.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_159.htm"><b>ReflectLastMsg</b></a></td>
<td width=59%>Reflects the last message to the child window.</td>
</tr>
<tr valign=top>
<td width=41%><a href="cwnd_146.htm"><b>OnVKeyToItem</b></a></td>
<td width=59%>Called by a list box owned by <b>CWnd</b> in response to a <b>WM_KEYDOWN</b> message.</td>
</tr>
</table><br>
<table cellspacing=4 cols=3 width=464>
<tr valign=top>
<th align=left colspan=3 width=100%>Input Message Handlers </th>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_102.htm"><b>OnChar</b></a></td>
<td width=56%>Called when a keystroke translates to a nonsystem character.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_110.htm"><b>OnDeadChar</b></a></td>
<td width=56%>Called when a keystroke translates to a nonsystem dead character (such as accent characters).</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_120.htm"><b>OnHScroll</b></a></td>
<td width=56%>Called when the user clicks the horizontal scroll bar of <b>CWnd</b>.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_122.htm"><b>OnKeyDown</b></a></td>
<td width=56%>Called when a nonsystem key is pressed.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_123.htm"><b>OnKeyUp</b></a></td>
<td width=56%>Called when a nonsystem key is released.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_125.htm"><b>OnLButtonDblClk</b></a></td>
<td width=56%>Called when the user double-clicks the left mouse button.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_126.htm"><b>OnLButtonDown</b></a></td>
<td width=56%>Called when the user presses the left mouse button.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_127.htm"><b>OnLButtonUp</b></a></td>
<td width=56%>Called when the user releases the left mouse button.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_130.htm"><b>OnMouseMove</b></a></td>
<td width=56%>Called when the mouse cursor moves.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_145.htm"><b>OnTimer</b></a></td>
<td width=56%>Called after each interval specified in <b>SetTimer</b>.</td>
</tr>
<tr valign=top>
<td colspan=2 width=44%><a href="cwnd_147.htm"><b>OnVScroll</b></a></td>
<td width=56%>Called when the user clicks the window's vertical scroll bar.</td>
</tr>
<tr valign=top>
<td width=43%><a href="cwnd_101.htm"><b>OnCaptureChanged</b></a></td>
<td colspan=2 width=57%>Sends a message to the window that is losing the mouse capture.</td>
</tr>
</table><br>

<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%><a name="_idetls_mfc_nonclient.2d.area_message_handlers_cwnd"></a>Nonclient-Area Message Handlers</th>
</tr>
<tr valign=top>
<td width=43%><a href="cwnd_132.htm"><b>OnNcDestroy</b></a></td>
<td width=57%>Called when the nonclient area is being destroyed.</td>
</tr>
</table><br>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<th align=left colspan=2 width=100%>Clipboard Message Handlers </th>
</tr>
<tr valign=top>
<td width=43%><a href="cwnd_113.htm"><b>OnDestroyClipboard</b></a></td>
<td width=57%>Called when the Clipboard is emptied through a call to the Windows <b>EmptyClipboard</b> function.</td>
</tr>
<tr valign=top>
<td width=43%><a href="cwnd_134.htm"><b>OnRenderAllFormats</b></a></td>
<td width=57%>Called when the owner application is being destroyed and needs to render all its formats.</td>
</tr>
<tr valign=top>
<td width=43%><a href="cwnd_135.htm"><b>OnRenderFormat</b></a></td>
<td width=57%>Called for the Clipboard owner when a particular format with delayed rendering needs to be rendered.</td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="cwnd.htm">CWnd Overview</a>, <a href="cwnd_202.htm">CWnd Data Members</a>, <a href="mfc_8.htm">Window Class Categories</a> </p>
<p>&nbsp;</p></body>
</HTML>
