<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CObject::operator =</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_cobject_operator_.3d"></a>CObject::operator =</h2>
<p>
The standard C++ default class assignment behavior is a member-by-member copy. The presence of this private assignment operator guarantees a compiler error message if you assign without the overridden operator. You must therefore provide an assignment operator in your derived class if you intend to assign objects of your derived class.</p>
<p>
<b>void operator =( const CObject&amp; </b><i>src</i><b> );</b></p>
<h4>At a Glance</h4>
<table cellspacing=4 cols=2 width=464>
<tr valign=top>
<td width=48%>Header file:</td>
<td width=52%>Afx.h</td>
</tr>
<tr valign=top>
<td width=48%>Platforms: </td>
<td width=52%></td>
</tr>
<tr valign=top>
<td width=48%>Versions: </td>
<td width=52%>1.0 and later</td>
</tr>
<tr valign=top>
<td width=48%>Complete documentation: </td>
<td width=52%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_CObject.3a3a.operator_.3d">
</object><a href=JavaScript:alink_1.Click()>Visual C++ documentation</a></td>
</tr>
</table><br>
<h4>See Also</h4>
<p>
<a href="cobject.htm">CObject Overview</a>, <a href="cobject_9.htm">CObject Operators</a>, <a href="mfc_6.htm">Classes Derived from CObject</a> </p>
<p>&nbsp;</p></body>
</HTML>
