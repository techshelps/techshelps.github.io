<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML dir=ltr>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>CTRLTEST</title>
<style>@import url(msdn_ie4.css);</style>
<link disabled rel="stylesheet" href="msdn_ie3.css"></HEAD>
<BODY BGCOLOR=#FFFFFF TEXT=#000000>

<h2><a name="_vcce_ctrltest"></a>CTRLTEST</h2>
<p>
The CTRLTEST sample demonstrates several techniques for implementing and using custom controls.
<ul>
<li>
CParsedEdit is a specialized edit control that illustrates two methods of using custom controls.</li>
<li>
The spin control has small up-arrow and down-arrow buttons for incrementing or decrementing a value.</li>
<li>
The bitmapped button illustrates how to implement custom menu commands by using the CBitmapButton_idetls_mfc_CBitmapButton class.</li>
</ul>
<p>
<b>Implementing and Using Custom Controls</b></p>
<p>
You can implement a custom control from scratch by deriving from <a href="cwnd.htm"><b>CWnd</b></a>, but it is much easier if you can borrow functionality from one of the standard Windows controls by deriving from its control class in the library. <b>CTRLTEST</b> does this to implement a specialized edit control, <b>CParsedEdit</b>. This edit control accepts only specified sets of characters as user input -- numeric, alphabetic, and other non-control characters. <b>CParsedEdit</b> is derived from <a href="cedit.htm"><b>CEdit</b></a>. It has an <b>OnChar</b> message handler to filter the characters.</p>
<p>
The implementation of the commands in the Simple menu illustrates two methods for using a custom control. The methods are distinguished according to how the application associates instances of the control in the dialog box with the <b>CParsedEdit</b> class. Each Simple menu command displays a dialog box with four instances of the <b>CParsedEdit</b> control. Data entered in the dialog box is sent to the debug port as TRACE output. The two Simple menu commands are:</p>
<p>
<b>Test C++ Derived Class:</b></p>
<p>
<b>The CParsedEdit</b> controls are data members of the dialog class. The controls are explicitly created in the dialog's <b>OnInitDialog</b> function by calling <b>CParsedEdit::CreateSet</b>. See DERTEST.CPP.</p>
<p>
<b>Test Dynamic Subclassing:</b></p>
<p>
The controls are laid out in a dialog template resource (<b>IDD_SUB_EDIT</b> in CTRLTEST.RC) as standard edit controls. The controls are declared as <b>CParsedEdit</b> data members in the dialog class. The dialog's <b>OnInitDialog</b> function calls <b>CParsedEdit::SubClassEdit</b>, which in turn calls <b>CWnd::SubclassDlgItem</b>, to associate each specific instance of the edit control with the <b>CParsedEdit</b> class. See PAREDIT.CPP.</p>
<p>
<b>Example: Spin Control</b></p>
<p>
The CTRLTEST sample includes an implementation of a spin control. The spin control has a small up-arrow and a small down-arrow button for incrementing or decrementing a value. </p>
<p>
The Spin Control command calls a dialog box that has four <b>CParsedEdit</b> controls, each associated with a spin control. Data entered in the <b>CParsedEdit</b> controls in this dialog box is filtered to accept only nonnegative integers. The user can enter numeric data by either typing the value into the <b>CParsedEdit</b> control or using the associated spin control.</p>
<p>
<b>Example: Bitmap Button</b></p>
<p>
The implementation of the following Custom menu commands illustrates ways to use <b>CBitmapButton</b>:</p>
<ul>
<li>
Bitmap Button 1: The dialog constructor explicitly loads the bitmap resources for each of the three states (up, down, and focus) of the button by calling <b>CBitmapButton::LoadBitmaps</b>.</li>
<li>
Bitmap Button 2: The dialog's <b>OnInitDialog</b> function calls <b>CBitmapButton::Autoload</b> to load the bitmap resources based on the following naming convention. The window text of the control serves as the base resource name, and the letters U, D, and F are appended to create the names of the resources for each of the three bitmap images for, respectively, up, down, and focus. For example, the three bitmap resources for the OK button are named OKU, OKD, and OKF.</li>
<li>
Bitmap Button 3: The dialog box is an extension of the second dialog box above, using a fourth possible button state, disabled. To use this dialog, click the left- or right-arrow bitmap button until the displayed number reaches 1, the lowest number, or 10, the highest number. When the limit is reached, the button is disabled and a fourth bitmap image is displayed. The naming convention for the bitmap resource for the disabled state is an X suffix, as is reflected in the resource names PREVX and NEXTX.</li>
</ul>
<p>
This sample demonstrates the following keywords:</p>
<table cellspacing=4 cols=2 width=399>
<tr valign=top>
<td width=50%><a href="cbitmapb_2.htm"><b>CBitmapButton::AutoLoad</b></a></td>
<td width=50%><a href="cwnd_94.htm"><b>CWnd::MessageBox</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cbitmapb_4.htm"><b>CBitmapButton::LoadBitmaps</b></a></td>
<td width=50%><a href="cwnd_102.htm"><b>CWnd::OnChar</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cbitmapb_5.htm"><b>CBitmapButton::SizeToContent</b></a></td>
<td width=50%><a href="cwnd_177.htm"><b>CWnd::SetFocus</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cdialog_5.htm"><b>CDialog::DoModal</b></a></td>
<td width=50%><a href="cwnd_189.htm"><b>CWnd::SetWindowPos</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cdialog_6.htm"><b>CDialog::EndDialog</b></a></td>
<td width=50%><a href="cwnd_192.htm"><b>CWnd::ShowWindow</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cdialog_14.htm"><b>CDialog::OnOK</b></a></td>
<td width=50%><object id=alink_1 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_AfxGetInstanceHandle">
</object><a href=JavaScript:alink_1.Click()><b>AfxGetInstanceHandle</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cedit_37.htm"><b>CEdit::SetSel</b></a></td>
<td width=50%><object id=alink_2 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_AfxMessageBox">
</object><a href=JavaScript:alink_2.Click()><b>AfxMessageBox</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cframwnd_3.htm"><b>CFrameWnd::AddAdornments</b></a></td>
<td width=50%><object id=alink_3 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_mfc_AfxThrowResourceException">
</object><a href=JavaScript:alink_3.Click()><b>AfxThrowResourceException</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_9.htm"><b>CString::Format</b></a></td>
<td width=50%><object id=alink_4 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_CallWindowProc">
</object><a href=JavaScript:alink_4.Click()><b>CallWindowProc</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cstring_17.htm"><b>CString::LoadString</b></a></td>
<td width=50%><object id=alink_5 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_GetClassInfo">
</object><a href=JavaScript:alink_5.Click()><b>GetClassInfo</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_2.htm"><b>CWnd::Attach</b></a></td>
<td width=50%><object id=alink_6 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_GetDlgItemInt">
</object><a href=JavaScript:alink_6.Click()><b>GetDlgItemInt</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_14.htm"><b>CWnd::Create</b></a></td>
<td width=50%><object id=alink_7 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_IsCharAlpha">
</object><a href=JavaScript:alink_7.Click()><b>IsCharAlpha</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_25.htm"><b>CWnd::EnableWindow</b></a></td>
<td width=50%><object id=alink_8 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_IsCharAlphaNumeric">
</object><a href=JavaScript:alink_8.Click()><b>IsCharAlphaNumeric</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_44.htm"><b>CWnd::GetDlgItem</b></a></td>
<td width=50%><object id=alink_9 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_MessageBeep">
</object><a href=JavaScript:alink_9.Click()><b>MessageBeep</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_79.htm"><b>CWnd::GetWindowRect</b></a></td>
<td width=50%><object id=alink_10 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_SetDlgItemInt">
</object><a href=JavaScript:alink_10.Click()><b>SetDlgItemInt</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_80.htm"><b>CWnd::GetWindowText</b></a></td>
<td width=50%><object id=alink_11 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_win32_SetWindowLong">
</object><a href=JavaScript:alink_11.Click()><b>SetWindowLong</b></a></td>
</tr>
<tr valign=top>
<td width=50%><a href="cwnd_90.htm"><b>CWnd::IsWindowEnabled</b></a></td>
<td width=50%></td>
</tr>
</table><br>
<p>
You can find the CTRLTEST<b> </b>project files in the Wce\Samples\Mfc\CTRLTEST directory.</p>
<p>
To build the CTRLTEST<b> </b>sample, follow the procedure described in <object id=alink_12 type="application/x-oleobject"
	classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11">
<PARAM name="Command" value="ALink,MENU">
<PARAM name="DefaultTopic" value="notopic.htm">
<PARAM name="Item1" value="">
<PARAM name="Item2" value="_wcesdk_Building_the_Sample_Applications">
</object><a href=JavaScript:alink_12.Click()>Building the Sample Applications</a>, selecting one or more of the following project configurations. </p>
<ul>
<li>
WCE x86em (Desktop PC Windows CE emulation)</li>
<li>
WCE x86</li>
<li>
WCE PPC</li>
<li>
WCE MIPS</li>
<li>
WCE SH</li>
</ul>
<p>
</p>
<p>&nbsp;</p></body>
</HTML>
