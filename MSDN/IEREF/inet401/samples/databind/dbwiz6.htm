<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>DB Wizard 4</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT FOR=window EVENT=onload>
   oFields = this.parent.tdcWiz.recordset.fields;
   spanQuestion.innerText = oFields('question').value;

   GenerateTDC();
</SCRIPT>

<SCRIPT language="JavaScript">
function GenerateTDC()
{
   // Clone the recordset to obtain a copy of the recordset with a 
   // distinct record pointer. Modifying the record pointer of the
   // original recordset will cause this page to disappear as soon
   // as the code finishes executing since the containing IFRAME is bound
   // to the data. As far as the IFRAME is concerned, the current page has changed
   var oWizRecordSet = this.parent.tdcWiz.recordset.Clone();

   // recordset reference from fields added in step 4
   var oFieldRecordset = this.parent.tdcFields.recordset;

   // Obtain the DataURL
   oWizRecordSet.MoveFirst();

   var cDataURL = oWizRecordSet.fields('data').value;

   // ER: Should let the user pick this
   var cID = 'tdc1';

   // Obtain the whether or not to use the header
   oWizRecordSet.MoveNext();
   var fUseHeader = (oWizRecordSet.fields('data').value == 'True' ? true : false);

   // Any text qualifier?
   oWizRecordSet.MoveNext();   
   var cTextQualifier = oWizRecordSet.fields('data').value;

   // Skip over fields step
   oWizRecordSet.MoveNext();

   // What type of binding?
   oWizRecordSet.MoveNext();
   var cBindingType = oWizRecordSet.fields('data').value;

   var cContent = '';
   var cStart = '<HTML>\n'

   // Only add navigation code if the user has chosen single-valued record binding
   var cHead = '';
   var cStyle = ''
   var cEnd = '';
   if (cBindingType == 'Single' || cBindingType == 'Both')
   {
      cHead = '<HEAD>' + AddConnectNavScriptlet(cID) + '</HEAD>\n';
      cStyle = '<STYLE>\n.caption {font-weight:bold}\n</STYLE>';
      cEnd = AddNavButtons(cID);
   }

   cEnd = cEnd + '\n</BODY></HTML>';

   // Generate OBJECT tag
   var cBody = '<BODY>\n' + GenTDC(cDataURL, cID, fUseHeader, cTextQualifier);

   if (cBindingType == 'Tabular')
   {
		cBody = cBody + '<P>' + GenerateTable(oFieldRecordset, cID);
   }
   else if (cBindingType == 'Single')
   {
		cBody = cBody + '<P>' + GenerateSingle(oFieldRecordset, cID);
   }
   else
   {
		cBody = cBody + '<P>' + GenerateTable(oFieldRecordset, cID);
		cBody = cBody + '\n\n';
		cBody = cBody + '<P>' + GenerateSingle(oFieldRecordset, cID);
   }

   cContent = cStart + cHead + cStyle + cBody + cEnd;
   txtResult.value = cContent;
}

// Generate an OBJECT tag for the TDC given some parameters
function GenTDC(cDataUrl, cDSOID, fUseHeader, cTextQualifier)
{
   cObjStart = '<OBJECT id=' + cDSOID + '\n   CLASSID="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83">';
   cDataUrlParam = '   <PARAM NAME="DataURL" VALUE="' + cDataUrl + '">';
   cUseHeaderParam = '   <PARAM NAME="UseHeader" VALUE="True">';
   cObjFinish = '</OBJECT>';
   
   return cObjStart + '\n' 
      + cDataUrlParam + '\n' + 
	  (fUseHeader == true ? cUseHeaderParam + '\n' : '') + 
      (cTextQualifier != '' ? GenTextQualifier(cTextQualifier) + '\n' : '') + 
	  cObjFinish;
}

function GenTextQualifier(cTextQualifier)
{
   if (cTextQualifier == '')
      return '';
   else if (cTextQualifier == '\'')
      return '<PARAM NAME="TextQualifier" VALUE="\'">';   
   else if (cTextQualifier == '\"')
      return '<PARAM NAME=\'TextQualifier\' VALUE=\'\"\'>';   
   else
      return '<PARAM NAME="TextQualifier" VALUE="' + cTextQualifier + '">';
}

function ShowData(oRecordSet)
{
  if (oRecordSet == null)
     return false;

  oRecordSet.MoveFirst();
  for (i = 0; i < oRecordSet.RecordCount; i++)
  {
     alert(oRecordSet.fields(0).value);
     oRecordSet.MoveNext();
  }
}


function GenerateTable(oRecordSet, cID)
{
   if (oRecordSet == null || oRecordSet.RecordCount <= 0 || cID == null || cID == '')
      return '';

   // let the user specify attributes for the table including BORDER
   // let user specify type of control per field for table template
   var cTable = '<TABLE BORDER=1 DATASRC=#' + cID + '>\n';
   var cHead = '<THEAD><TR>\n';
   var cData = '<TBODY><TR>\n';

   // Traverse the entire recordset laying out the table head and the table body
   oRecordSet.MoveFirst();
   for (i = 0; i < oRecordSet.RecordCount; i++)
   {
      cHead = cHead + '   <TH>' + oRecordSet.fields('field_label').value + '</TH>\n';
	  cData = cData + '   <TD>' + GenSingleValueElement('SPAN', '', oRecordSet.fields('field_name').value) + '</TD>\n';
      oRecordSet.MoveNext();
   }

   cHead = cHead + '</TR></THEAD>\n';
   cData = cData + '</TR></TBODY>';
   cTable = cTable + cHead + cData + '\n</TABLE>';
   return cTable;
}

// Generate a single-value template using the specified element
// cElement - required, the HTML element to use
// cDataSrc - optional, used to specify element's DATASRC attrib
// cDataFld - required, used to specify the element's DATAFLD attrib
function GenSingleValueElement(cElement, cDataSrc, cDataFld)
{
	return '<' + cElement + (cDataSrc != '' ? ' DATASRC=#' + cDataSrc : '') + ' DATAFLD=' + cDataFld + '>' + '</' + cElement + '>';
}


function GenerateSingle(oRecordSet, cID)
{
   var cTable = '<TABLE>';

   oRecordSet.MoveFirst();

   // Traverse the entire recordset 
   for (i = 0; i < oRecordSet.RecordCount; i++)
   {
      cTable = cTable + '<TR><TD CLASS=caption>' + oRecordSet.fields('field_label').value + '</TD>';
	  cTable = cTable + '<TD>' + GenSingleValueElement('SPAN', cID, oRecordSet.fields('field_name').value) + '</TD></TR>\n';
      oRecordSet.MoveNext();
   }   

   cTable = cTable + '\n</TABLE>';
   return cTable;
}

function AddConnectNavScriptlet(cDSOID)
{
   return '<SCRIPT FOR=' + cDSOID + ' EVENT=ondatasetcomplete>\n'
      + '// wire up the navigation scriptlet\n'
      + '// by providing it with a reference to the DSO\n'
      + 'scrNavBtns.DSO = this;\n'
      + '<' + '/SCRIPT>\n';
}

function AddNavCode()
{
  return '<SCRIPT>\n'
     + '// Navigate through the ADO recordset provided by the DSO\n'
     + 'function ADONavigate(oElement, oDSO)\n'
     + '{'
     + '   if (oDSO == null || oElement == null)\n'
     + '      return;\n\n'
     + '   // The value of the button indicates the direction to navigate\n'
	 + '   cValue = oElement.value;\n'
	 + '   if (cValue == "<<")\n'
	 + '      oDSO.recordset.MoveFirst();\n'
     + '   else if (cValue == " < ")\n'
	 + '   {\n'
     + '      oDSO.recordset.MovePrevious();\n'
     + '      if (oDSO.recordset.BOF)\n'
     + '         oDSO.recordset.MoveFirst();\n'
     + '   }\n'
     + '   else if (cValue == " > ")\n'
     + '   {\n'
     + '      oDSO.recordset.MoveNext();\n'
     + '      if (oDSO.recordset.EOF)\n'
     + '         oDSO.recordset.MoveLast();\n'
     + '   }\n'
     + '   else if (cValue == ">>")\n'
     + '      oDSO.recordset.MoveLast();\n}\n'
     + '<' + '/SCRIPT>';
}

// Add navigational buttons to the page
function AddNavButtons(cDSOID)
{
   return '<P><OBJECT ID=scrNavBtns TYPE="text/x-scriptlet">\n'
      + '<PARAM NAME=URL VALUE="navbtns.htm">\n'
      + '</OBJECT>\n';

/*
	return '<P><INPUT TYPE=BUTTON VALUE="<<" TITLE="Move to the first record" onclick="ADONavigate(this, ' + cDSOID + ')">\n'
		+ '<INPUT TYPE=BUTTON VALUE=" < " TITLE="Move to the previous record" onclick="ADONavigate(this, ' + cDSOID + ')">\n'
		+ '<INPUT TYPE=BUTTON VALUE=" > " TITLE="Move to the next record" onclick="ADONavigate(this, ' + cDSOID + ')">\n'
		+ '<INPUT TYPE=BUTTON VALUE=">>" TITLE="Move to the last record" onclick="ADONavigate(this, ' + cDSOID + ')">\n';
*/
}
</SCRIPT>
</HEAD>

<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">

<SPAN ID=spanQuestion></SPAN>
<TEXTAREA ID=txtResult STYLE="top:0;left:0;height:300;width:450">
</TEXTAREA>
</FONT>
</BODY>
</HTML>