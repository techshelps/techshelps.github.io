<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN">
<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Binding a Single-value Element at Run-time</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<STYLE>
   .ColumnLabel {font-weight:bold}
</STYLE>

<SCRIPT FOR=tdcComposer EVENT=ondatasetcomplete>
	// wire up the navigation scriptlet 
	// by providing it with a reference to the DSO
	scrNavBtns.DSO = this;
</SCRIPT>


<SCRIPT language="JavaScript">
var g_bindings = null;
var g_bindInstructions = 'Click the <strong>Bind Elements</strong> button to bind the elements on the page to data.';
var g_unBindInstructions = 'Click the <strong>UnBind Elements</strong> button to unbind the elements on the page from data.';

// Constructor for a binding object
// The object stores 
// cLabel	- the friendly name for the label 
// cDSO		- the id of the DSO supplying the data
// cField	- the name of the field in the data set
// oElement - an object reference to the element that will be bound
function Binding(cLabel, cDSO, cField, oElement)
{
	this.m_cLabel = cLabel;
	this.m_cDSO = cDSO;
	this.m_cField = cField;
	this.m_oElement = oElement;
}

// Initialize a global array of binding objects.
function InitializeArrayOfBindings()
{
	g_bindings = new Array();

	g_bindings[0] = new Binding('First Name', '#tdcComposer', 'compsr_first', span1);
	g_bindings[1] = new Binding('Last Name', '#tdcComposer', 'compsr_last', span2);
	g_bindings[2] = new Binding('Born', '#tdcComposer', 'compsr_birth', span3);
	g_bindings[3] = new Binding('Died', '#tdcComposer', 'compsr_death', span4);
	g_bindings[4] = new Binding('Origin', '#tdcComposer', 'origin', span5);
	g_bindings[5] = new Binding('Biography', '#tdcComposer', 'bio', span6);
}

// Initialize the page
function Initialize()
{
	InitializeArrayOfBindings();
	divInstructions.innerHTML = g_bindInstructions;
}

// Bind the element a reference of which is stored in the oBinding object
function BindElement(oBinding)
{
	oBinding.m_oElement.dataSrc = oBinding.m_cDSO; // set the dataSrc property
	oBinding.m_oElement.dataFld = oBinding.m_cField; // set the dataFld property

	// This is somewhat gratuitous, but it shows the power of the document object model
	// The elements to be bound are contained with a table cell (TD); thus, 
	// the first parentElement is the TD. The second parentElement is the table row (TR)
	// The first child of the TR is the empty TD which is used to contain the column label
	oBinding.m_oElement.parentElement.parentElement.children[0].innerText = oBinding.m_cLabel;
}

// Unbind the element a reference of which is stored in the oBinding object
// by clearing the dataSrc and dataFld properties
function UnBindElement(oBinding)
{
	oBinding.m_oElement.dataSrc = '';
	oBinding.m_oElement.dataFld = '';
}

// Unbind all elements stored in the global array of bindings
function UnBindElements()
{
	for (i = 0; i < g_bindings.length; i++)
	{
		UnBindElement(g_bindings[i]);
	}

	// Fix up the UI so that the user knows what to do next
	divNavButtons.style.display='none';
	btnBinding.onclick = BindElements;
	btnBinding.innerText = 'Bind';
	divInstructions.innerHTML = g_bindInstructions;
}

// Bind all elements stored in the global array of bindings
function BindElements()
{
	for (i = 0; i < g_bindings.length; i++)
	{
		BindElement(g_bindings[i]);
	}

	// Fix up the UI
	divNavButtons.style.display='inline';
	btnBinding.onclick = UnBindElements;
	btnBinding.innerText = 'UnBind Elements';
	divInstructions.innerHTML = g_unBindInstructions;
}
</SCRIPT>

<SCRIPT FOR=window EVENT=onload>
    // Do initialization stuff when the page loads
   Initialize();
</SCRIPT>

</HEAD>

<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">

<H3>Binding Single-valued Elements at Run-time</H3>

<!-- 
   This is the standard object declaration for the TDC 
   Change the DataURL, UseHeader, and TextQualifier properties to apply them to your data set
-->
<OBJECT classid="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83"
    ID=tdcComposer HEIGHT=0 WIDTH=0>
	<PARAM NAME="DataURL" VALUE="composer.csv">
	<PARAM NAME="UseHeader" VALUE="True">
    <PARAM NAME="TextQualifier" VALUE="'">
</OBJECT>

<DIV ID=divInstructions>
</DIV>
<P>
<!-- Observe that no bindings are specified initially -->
<TABLE>
<TR><TD CLASS=ColumnLabel></TD><TD><SPAN ID=span1></SPAN></TD></TR>
<TR><TD CLASS=ColumnLabel></TD><TD><SPAN ID=span2></SPAN></TD></TR>
<TR><TD CLASS=ColumnLabel></TD><TD><SPAN ID=span3></SPAN></TD></TR>
<TR><TD CLASS=ColumnLabel></TD><TD><SPAN ID=span4></SPAN></TD></TR>
<TR><TD CLASS=ColumnLabel></TD><TD><SPAN ID=span5></SPAN></TD></TR>
<TR><TD CLASS=ColumnLabel></TD><TD><DIV ID=span6></DIV></TD></TR>
</TABLE>

<BUTTON ID=btnBinding onclick="BindElements()">Bind Elements</BUTTON>

<P>
<DIV ID=divNavButtons STYLE="display:none">
<OBJECT ID=scrNavBtns TYPE="text/x-scriptlet">
	<PARAM NAME=URL VALUE="navbtns.htm">
</OBJECT>
</DIV>
</FONT>
</BODY>
</HTML>
