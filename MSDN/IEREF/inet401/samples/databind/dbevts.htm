<HTML>
<HEAD><script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Tracking Events</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">

<SCRIPT language="JavaScript">
var g_fFieldsChanged = 0;
</SCRIPT>

<SCRIPT FOR=window EVENT=onload>
   RecordEvent("src=window, event=" + window.event.type);
</SCRIPT>

<SCRIPT FOR=tdcComposers EVENT=ondatasetchanged>
   FillSortDropDownWithFields(cboSort, this.recordset);
   RecordEvent("src=" + event.srcElement.id + ", event=ondatasetchanged");
</SCRIPT>

<SCRIPT FOR=tdcComposers EVENT=ondatasetcomplete>
   RecordEvent("src=" + event.srcElement.id + ", event=ondatasetcomplete, reason=" + event.reason);

	// wire up the navigation scriptlet 
	// by providing it with a reference to the DSO
	scrNavBtns.DSO = this;
</SCRIPT>

</SCRIPT>

<SCRIPT FOR=tdcComposers EVENT=ondataavailable>
   RecordEvent();
</SCRIPT>

<SCRIPT FOR=tblComposers EVENT=onreadystatechange>
   RecordEvent("src=" + event.srcElement.id + ", event=" + event.type + ", readyState=" + this.readyState);
</SCRIPT>


<SCRIPT FOR=document EVENT=onbeforeupdate>
   // data consumer events will bubble to the document
   // alert(window.event.srcElement.value + ", " + tdcComposers.recordset.fields(window.event.srcElement.dataFld).value);

   RecordEvent();
</SCRIPT>

<SCRIPT FOR=document EVENT=onafterupdate>
   RecordEvent();
   g_fFieldsChanged = g_fFieldsChanged + 1
</SCRIPT>

<SCRIPT FOR=tdcComposers EVENT=onrowenter>
   RecordEvent();
</SCRIPT>

<SCRIPT FOR=tdcComposers EVENT=onrowexit>
   RecordEvent();
   if (txtBorn.value > txtDied.value)
   {
	   alert("Birth date must be less than or equal to deceased dates");
	   event.cancelBubble = true;
	   event.returnValue = false;
   }
</SCRIPT>

<SCRIPT FOR=window EVENT=onbeforeunload>
   RecordEvent();
   if (g_fFieldsChanged > 0)
      event.returnValue = "Data has changed.";
</SCRIPT>

<SCRIPT FOR=document EVENT=onerrorupdate>
   RecordEvent();
</SCRIPT>

<SCRIPT FOR=txtBorn EVENT=onbeforeupdate>
    RecordEvent();
	dToday = new Date();
	fRet = ValidateDate(parseInt(this.value), 0, dToday.getFullYear());
	event.cancelBubble = true;
	return fRet;
</SCRIPT>

<SCRIPT FOR=txtDied EVENT=onbeforeupdate>
    RecordEvent();
	dToday = new Date();
	fRet = ValidateDate(parseInt(this.value), 0, dToday.getFullYear());
	event.cancelBubble = true;
	event.returnValue = fRet;
</SCRIPT>

<SCRIPT language="JavaScript">
// perform some basic validation on the date
function ValidateDate(nValue, nMin, nMax)
{
	return;

	if (isNaN(nValue))
	{
		alert("Year required");
		return false;
	}

	if (nValue < nMin || nValue > nMax)
	{
	    alert("Invalid year");
		return false;
	}

	return true;
}

function RecordEvent(cEventStr)
{
	var fUseOtherWindow = false;
	if (RecordEvent.m_winEvents == null && fUseOtherWindow)
	{
		RecordEvent.m_winEvents = window.open('','','top=0,left=0,height=200,width=500');
		if (RecordEvent.m_winEvents == null)
		{
			return;
		}
		cContent = '<TEXTAREA ID=txtEvents STYLE="position:absolute;top:10;left:0;height=200;width:500" ID=txtEvents></TEXTAREA>';
		RecordEvent.m_winEvents.document.body.insertAdjacentHTML('beforeEnd', cContent);
	}

	if (cEventStr == null)
	{
		var oEvent = window.event;
		var cID = "unknown";
		var cEventType = "unknown";
		var cEventReason = "unknown";

		if (oEvent != null)
		{
			cEventType = oEvent.type;
			cEventReason = oEvent.reason;
			 
			var oSrcElement = oEvent.srcElement;
			if (oSrcElement != null)
			{
				cID = oSrcElement.id;
			}
		}

		cEventStr = "src=" + cID + ", event=" + cEventType + ", reason=" + cEventReason;
	}

	if (fUseOtherWindow && RecordEvent.m_winEvents != null)
	{
		txtEvents2 = RecordEvent.m_winEvents.document.body.all('txtEvents');
		txtEvents2.value = txtEvents2.value + '\n' + cEventStr;
	}
	
	txtEvents.value = txtEvents.value + '\n' + cEventStr;

}

function ClearEventLog()
{
	txtEvents.value = "";
}

// Navigate through the ADO recordset provided by the DSO
function ADONavigate(oElement, oDSO)
{
    if (oDSO == null || oElement == null)
	{
       return;
	}

    // The value of the button indicates the direction to navigate
	cValue = oElement.value;
	if (cValue == "<<")
	{
		oDSO.recordset.MoveFirst();
	}
	else if (cValue == " < ")
	{
		oDSO.recordset.MovePrevious();
		if (oDSO.recordset.BOF)
		{
			oDSO.recordset.MoveFirst();
		}
	}
	else if (cValue == " > ")
	{
		oDSO.recordset.MoveNext();
		if (oDSO.recordset.EOF)
		{
			oDSO.recordset.MoveLast();
		}
	}
	else if (cValue == ">>")
	{
		oDSO.recordset.MoveLast();
	}
}

// Add the specified value/text to the dropdown list
function AddItemToDropDown(oDropDown, cValue, cText)
{
	oOption = document.createElement('OPTION');
	oOption.value = cValue;
	oOption.text = cText;	
	oDropDown.add(oOption);
}

// Fill the specified dropdown with the metadata from the specified ADO RecordSet
function FillSortDropDownWithFields(oDropDown, oRecordSet)
{
   // only do this once. leave it to the caller to clear the drop-down otherwise
   if (oDropDown.options.length > 0)
      return;

   AddItemToDropDown(oDropDown, "None", "None"); // default
   // add each of the columns in the data set to the drop-down
   for (i = 0; i < oRecordSet.fields.count; i++)
   {
       oField = oRecordSet.fields(i);
	   AddItemToDropDown(oDropDown, oField.name, oField.name); 
   }
   cboSort.selectedIndex = 0;
}

function AllowEdit()
{
   EnableEditing(true);
   cmdEdit.value = "Don't Edit";
   cmdEdit.onclick = DisableEdit;
}

function DisableEdit()
{
   EnableEditing(false);
   cmdEdit.value = "Edit";
   cmdEdit.onclick = AllowEdit;
}

function EnableEditing(fEnable)
{
   txtFirst.readOnly = !fEnable;
   txtLast.readOnly = !fEnable;
   txtBorn.readOnly = !fEnable;
   txtDied.readOnly = !fEnable;
   txtBio.readOnly = !fEnable;
   cboOrigin.disabled = !fEnable;
}
</SCRIPT>

<SCRIPT FOR=document EVENT=onclick>
    // If the event bubbling up to the document comes from an object 
	// the id of which begins with "cmdNav", navigate through the recordset
	oElement = window.event.srcElement;
	if (oElement.id.substring(0,6) == "cmdNav")
	{
       ADONavigate(oElement, tdcComposers);
    }
</SCRIPT>

<SCRIPT FOR=cboOriginFilter EVENT=onchange>
    cValue = this.options[this.selectedIndex].value;
	tdcComposers.object.Filter = (cValue == 'All' ? '' : 'Origin=' + cValue);
	tdcComposers.Reset();
</SCRIPT>

<SCRIPT FOR=cboSort EVENT=onchange>
	cValue = this.options[this.selectedIndex].value;
	tdcComposers.object.Sort = (cValue == 'None' ? '' : cValue);
	tdcComposers.Reset();
</SCRIPT>

<STYLE>
   .ColumnLabel {font-weight:bold}
</STYLE>

</HEAD>

<BODY TOPMARGIN=0 LEFTMARGIN=0 BGPROPERTIES="FIXED" BGCOLOR="#FFFFFF" LINK="#000000" VLINK="#808080" ALINK="#000000">

<FONT FACE="VERDANA,ARIAL,HELVETICA" SIZE="2">

<OBJECT id=tdcComposers 
	CLASSID="clsid:333C7BC4-460F-11D0-BC04-0080C7055A83" 
	WIDTH=0 HEIGHT=0>
	<PARAM NAME="DataURL" VALUE="composer.csv">							  
	<PARAM NAME="UseHeader" VALUE="True">
	<PARAM NAME="TextQualifier" VALUE="'">
</OBJECT>

<DIV STYLE="position:absolute;top:0">
<H2>Tracking Data Binding Events</H2>
</DIV>
<P>
<DIV>
<TABLE><TR><TD><SPAN STYLE="font-weight:bold">Display Composers from </SPAN></TD>
   <TD><SELECT ID=cboOriginFilter>
   <OPTION VALUE=All>All Countries
   <OPTION VALUE=Austria>Austria
   <OPTION VALUE=France>France
   <OPTION VALUE=Germany>Germany
   <OPTION VALUE=Italy>Italy
   <OPTION VALUE=Russia>Russia
   </SELECT></TD></TR>
   <TR><TD><SPAN STYLE="font-weight:bold">Sort Composers by</SPAN></TD>
   <TD><SELECT ID=cboSort></SELECT></TD><TR>
</TABLE>
<P>
<TABLE>
<TR><TD CLASS=ColumnLabel>First Name</TD><TD><INPUT READONLY TYPE=TEXT ID=txtFirst DATASRC=#tdcComposers DATAFLD=compsr_first></TD></TR>
<TR><TD CLASS=ColumnLabel>Last Name</TD><TD><INPUT READONLY TYPE=TEXT ID=txtLast DATASRC=#tdcComposers DATAFLD=compsr_last></TD></TR>
<TR><TD CLASS=ColumnLabel>Born</TD><TD><INPUT READONLY TYPE=TEXT ID=txtBorn DATASRC=#tdcComposers DATAFLD=compsr_birth></TD></TR>
<TR><TD CLASS=ColumnLabel>Died</TD><TD><INPUT READONLY TYPE=TEXT ID=txtDied DATASRC=#tdcComposers DATAFLD=compsr_death></TD></TR>
<TR><TD CLASS=ColumnLabel>Origin</TD>
	<TD><SELECT ID=cboOrigin DISABLED DATASRC=#tdcComposers DATAFLD=origin>
		<OPTION VALUE=Austria>Austria
		<OPTION VALUE=France>France
		<OPTION VALUE=Germany>Germany
		<OPTION VALUE=Italy>Italy
		<OPTION VALUE=Russia>Russia
		</SELECT></TD></TR>
<TR><TD CLASS=ColumnLabel>Biography</TD><TD><TEXTAREA READONLY ID=txtBio STYLE="width:225;height:100" DATASRC=#tdcComposers DATAFLD=bio></TEXTAREA></TD></TR>
</TABLE>

<P>
<OBJECT ID=scrNavBtns TYPE="text/x-scriptlet">
	<PARAM NAME=URL VALUE="navbtns.htm">
</OBJECT>
<INPUT ID=cmdAdd TYPE=BUTTON VALUE="Add" TITLE="Add a new record" onclick="tdcComposers.recordset.AddNew()">
<INPUT ID=cmdDelete TYPE=BUTTON VALUE="Delete" TITLE="Delete the current record" 
   onclick="if (tdcComposers.recordset.RecordCount > 0) tdcComposers.recordset.Delete()">
<INPUT ID=cmdEdit TYPE=BUTTON VALUE="Edit" onClick="AllowEdit()">
</DIV>

<DIV STYLE="position:absolute;top:25;left:350">
<h3>Event Log</h3>
<TEXTAREA WRAP=off STYLE="position:relative;height:200;width:400" ID=txtEvents></TEXTAREA>
<P><INPUT TYPE=BUTTON STYLE="position:relative" VALUE="Clear Log" onclick="ClearEventLog()">
</DIV>
<P>
<DIV>
</DIV>
</FONT>
</BODY>
</HTML>

<!--
<TABLE BORDER=1 ID=tblComposers DATASRC=#tdcComposers>
	<THEAD>
	<TR><TH>First Name</TH><TH>Last Name</TH><TH>Origin</TH></TR>
	</THEAD>
	<TR><TD><INPUT TYPE=TEXT DATAFLD=compsr_first></TD><TD><SPAN DATAFLD=compsr_last></SPAN></TD>
	<TD>
		<SELECT DATAFLD=origin>
		<OPTION VALUE=Austria>Austria
		<OPTION VALUE=France>France
		<OPTION VALUE=Germany>Germany
		<OPTION VALUE=Italy>Italy
		<OPTION VALUE=Russia>Russia
		</SELECT>
	</TD>
	</TR>
</TABLE>
-->
