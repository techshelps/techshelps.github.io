<HTML>
<HEAD>
<script async src="https://www.googletagmanager.com/gtag/js?id=UA-83731338-2"></script><script>  window.dataLayer = window.dataLayer || [];  function gtag(){dataLayer.push(arguments);}  gtag('js', new Date());  gtag('config', 'UA-83731338-2');</script><title>Dynamic Lighting Effects</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; CHARSET=iso8859-1">
<META NAME="MS.LOCALE" CONTENT="EN-US">
<META NAME="ROBOTS" CONTENT="all">
</HEAD>

<BODY bgcolor="#bbbbbb" text="#FFFFFF">

<table cellspacing=10 style="position:absolute;top:20px;left:20px">
<tr><td colspan=2 align=center><h1 style="color=yellow">DHTML Dynamic Lighting Effects</h1></td></tr>
<tr>
<td ID=flttgt style="filter:light(enabled=1);width:200"><img style="width:200;height:200" src=beach.jpg></td>
<td width=300 height=200><span id=holder style="font-size:14pt;color:yellow">Move the cursor over the image and see the light track its movement.  Click on the image to add additional lights and watch them all track the mouseover movement.</span></td>
</tr>
</table>

<SCRIPT language=JavaScript>
var g_numlights = 0;
var blurbs = new Array("DHTML implements many cool interactive features.  Scriptors are now able to better track, and respond to, user actions.", "Here we are using a lighting filter to respond to the user.  Clicking on the image will add additional conelights.", "The movelight method is being used dynamically, it is bound to the images mousemove event to track the users cursor movements", "And this text is being set from the onclick event -- all with very little code!  The scripting horizons have been expanded with IE4.0");
window.onload = setlights;
document.onclick=keyhandler;
flttgt.onmousemove=mousehandler;

//-----------		create the light collection on the fly based on current number of lights desired
function setlights(){
	flttgt.filters[0].clear();
	flttgt.filters[0].addcone(0,0,5,100,100,255,255,0,60,15);
	if(g_numlights>0){
		flttgt.filters[0].addcone(0,200,5,100,100,255,0,0,60,15);
		if(g_numlights>1){
			flttgt.filters[0].addcone(200,200,5,100,100,0,255,255,60,15);
			if(g_numlights>2){
				flttgt.filters[0].addcone(200,0,5,100,100,255,0,255,60,15);
			}
		}
	}
}

//-------------	cycle from 0 to 3 for number of lights 
function keyhandler(){
	g_numlights = (g_numlights += 1)%4;
	holder.innerHTML = blurbs[g_numlights];
	setlights();
}

//-----------		move the impact points of all current cones to the mouse x,y (less the 80pixel offset for the table
function mousehandler(){
	x = (window.event.x - 80);
	y = (window.event.y - 80);

	flttgt.filters[0].movelight(0,x,y,5,1);
	if( g_numlights > 0 ){
		flttgt.filters[0].movelight(1,x,y,5,1);
		if( g_numlights > 1 ){
			flttgt.filters[0].movelight(2,x,y,5,1);
			if( g_numlights > 2 ){
				flttgt.filters[0].movelight(3,x,y,5,1);
			}
		}
	}
}
</SCRIPT>
</BODY>
</HTML>